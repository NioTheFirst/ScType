Switched global version to 0.8.9
Analyzed_contracts_count: 1
total compilations: 5, contracts: 1
contract name: VaderMath
Add to address_to_label {'global:_owner': 1}
Addr:global__owner : 0
Add to address_to_label {'global:_owner': 1, 'global:_tokenApprovals': 2}
Addr:global__tokenApprovals : 0
Add to address_to_label {'global:_owner': 1, 'global:_tokenApprovals': 2, 'global:_owners': 3}
Addr:global__owners : 0
Add to address_to_label {'global:_owner': 1, 'global:_tokenApprovals': 2, 'global:_owners': 3, 'swap:to': -999}
Addr:swap_to : 0
Mark functions Adding: VaderMath, calculateLiquidityUnits, True
[*]Marked
Mark functions Adding: VaderMath, calculateSlipAdjustment, True
[*]Marked
Mark functions Adding: VaderMath, calculateLoss, True
[*]Marked
Mark functions Adding: VaderMath, calculateSwap, True
[*]Marked
Mark functions Adding: VaderMath, calculateSwapReverse, True
[*]Marked
Mark functions Adding: VaderMath, delta, True
[*]Marked
Mark functions Adding: VaderMath, pow, True
[*]Marked
Mark functions Adding: VaderMath, root, True
[*]Marked
Mark functions Adding: VaderMath, slitherConstructorConstantVariables, True
[x] Not visible 
State_var: ONE
Finding type for ONE(uint256 ... )
Value: u
Source address: u
Running check on VaderMath
Reading Function: calculateLiquidityUnits
Checking funcion...



calculateLiquidityUnits
Function name: calculateLiquidityUnits
Finding type for vaderDeposited(uint256 ... )
Value: u
Finding type for vaderBalance(uint256 ... )
Value: u
Finding type for assetDeposited(uint256 ... )
Value: u
Finding type for assetBalance(uint256 ... )
Value: u
Finding type for totalPoolUnits(uint256 ... )
Value: u
New param cache [[[-1], [-1], 'u', None, [], -1, 'u', 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u']]
FIND RETURN
ENTRY_POINT
calculateLiquidityUnits(uint256,uint256,uint256,uint256,uint256)


ONE_1(uint256) := ϕ(['ONE_4', 'ONE_0', 'ONE_2'])
TMP_0(uint256) = INTERNAL_CALL, VaderMath.calculateSlipAdjustment(uint256,uint256,uint256,uint256)(vaderDeposited_1,vaderBalance_1,assetDeposited_1,assetBalance_1)
ONE_2(uint256) := ϕ(['ONE_4'])
slip_1(uint256) := TMP_0(uint256)
TMP_1(uint256) = vaderBalance_1 (c)* assetDeposited_1
TMP_2(uint256) = vaderDeposited_1 (c)* assetBalance_1
TMP_3(uint256) = TMP_1 (c)+ TMP_2
poolUnitFactor_1(uint256) := TMP_3(uint256)
TMP_4(uint256) = ONE_2 (c)* 2
TMP_5(uint256) = TMP_4 (c)* vaderBalance_1
TMP_6(uint256) = TMP_5 (c)* assetBalance_1
denominator_1(uint256) := TMP_6(uint256)
TMP_7(uint256) = totalPoolUnits_1 (c)* poolUnitFactor_1
TMP_8(uint256) = TMP_7 (c)/ denominator_1
TMP_9(uint256) = TMP_8 (c)* slip_1
RETURN TMP_9


Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: ONE_1, name: ONE

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: ONE, Num: 1
Globalname: ONE, contract_name: VaderMath
global...

Name: PIC_1 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
ONE_1(uint256) := ϕ(['ONE_4', 'ONE_0', 'ONE_2'])
Phi
[i]Type for ONE

Name: ONE Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_0 cleared
[i] slip cleared
Propogating parameters and globals to SSA variables...
Ssa_name: assetDeposited_1, name: assetDeposited

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: assetDeposited_1 Function: calculateLiquidityUnits
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: assetDeposited, Num: 1
Globalname: assetDeposited, contract_name: VaderMath
Ssa_name: vaderBalance_1, name: vaderBalance

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: vaderBalance_1 Function: calculateLiquidityUnits
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: vaderBalance, Num: 1
Globalname: vaderBalance, contract_name: VaderMath
Ssa_name: assetBalance_1, name: assetBalance

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: assetBalance_1 Function: calculateLiquidityUnits
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: assetBalance, Num: 1
Globalname: assetBalance, contract_name: VaderMath
Ssa_name: vaderDeposited_1, name: vaderDeposited

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: vaderDeposited_1 Function: calculateLiquidityUnits
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: vaderDeposited, Num: 1
Globalname: vaderDeposited, contract_name: VaderMath
Ssa_name: assetDeposited_1, name: assetDeposited

Name: assetDeposited_1 Function: calculateLiquidityUnits
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: assetDeposited_1 Function: calculateLiquidityUnits
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: assetDeposited, Num: 1
Globalname: assetDeposited, contract_name: VaderMath
Ssa_name: vaderBalance_1, name: vaderBalance

Name: vaderBalance_1 Function: calculateLiquidityUnits
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: vaderBalance_1 Function: calculateLiquidityUnits
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: vaderBalance, Num: 1
Globalname: vaderBalance, contract_name: VaderMath
Ssa_name: assetBalance_1, name: assetBalance

Name: assetBalance_1 Function: calculateLiquidityUnits
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: assetBalance_1 Function: calculateLiquidityUnits
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: assetBalance, Num: 1
Globalname: assetBalance, contract_name: VaderMath
Ssa_name: vaderDeposited_1, name: vaderDeposited

Name: vaderDeposited_1 Function: calculateLiquidityUnits
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: vaderDeposited_1 Function: calculateLiquidityUnits
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: vaderDeposited, Num: 1
Globalname: vaderDeposited, contract_name: VaderMath
Ssa_name: slip_1, name: slip

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: slip, Num: 1
Globalname: slip, contract_name: VaderMath
End popogation
Ssa_name: ONE_2, name: ONE

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: ONE, Num: 2
Globalname: ONE, contract_name: VaderMath
global...

Name: PIC_1 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
TMP_0(uint256) = INTERNAL_CALL, VaderMath.calculateSlipAdjustment(uint256,uint256,uint256,uint256)(vaderDeposited_1,vaderBalance_1,assetDeposited_1,assetBalance_1)
New param cache [[[], [], 'u', None, [], -1, 'u', 'u'], [[], [], 'u', None, [], -1, 'u', 'u'], [[], [], 'u', None, [], -1, 'u', 'u'], [[], [], 'u', None, [], -1, 'u', 'u']]
[[], [], 'u', None, [], -1, 'u', 'u']

Name: vaderDeposited Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[], [], 'u', None, [], -1, 'u', 'u']

Name: vaderBalance Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[], [], 'u', None, [], -1, 'u', 'u']

Name: assetDeposited Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[], [], 'u', None, [], -1, 'u', 'u']

Name: assetBalance Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
calculateSlipAdjustment(uint256,uint256,uint256,uint256)
Propogating All
Propogating All
assetDeposited_1
Ssa_name: assetDeposited_1, name: assetDeposited

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: assetDeposited_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
vaderBalance_1
Ssa_name: vaderBalance_1, name: vaderBalance

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: vaderBalance_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
vaderDeposited_1
Ssa_name: vaderDeposited_1, name: vaderDeposited

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: vaderDeposited_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
assetBalance_1
Ssa_name: assetBalance_1, name: assetBalance

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: assetBalance_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
vaderDeposited_1
Ssa_name: vaderDeposited_1, name: vaderDeposited

Name: vaderDeposited_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: vaderDeposited_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
assetDeposited_1
Ssa_name: assetDeposited_1, name: assetDeposited

Name: assetDeposited_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: assetDeposited_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
vaderBalance_1
Ssa_name: vaderBalance_1, name: vaderBalance

Name: vaderBalance_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: vaderBalance_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
assetBalance_1
Ssa_name: assetBalance_1, name: assetBalance

Name: assetBalance_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: assetBalance_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
assetVader_1
Ssa_name: assetVader_1, name: assetVader

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
vaderAsset_1
Ssa_name: vaderAsset_1, name: vaderAsset

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
denominator_1
Ssa_name: denominator_1, name: denominator

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] vaderDeposited cleared
[i] vaderBalance cleared
[i] assetDeposited cleared
[i] assetBalance cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: vaderDeposited_1, name: vaderDeposited

Name: vaderDeposited_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: vaderDeposited_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: vaderDeposited, Num: 1
Globalname: vaderDeposited, contract_name: VaderMath
Ssa_name: vaderBalance_1, name: vaderBalance

Name: vaderBalance_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: vaderBalance_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: vaderBalance, Num: 1
Globalname: vaderBalance, contract_name: VaderMath
Ssa_name: assetDeposited_1, name: assetDeposited

Name: assetDeposited_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: assetDeposited_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: assetDeposited, Num: 1
Globalname: assetDeposited, contract_name: VaderMath
Ssa_name: assetBalance_1, name: assetBalance

Name: assetBalance_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: assetBalance_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: assetBalance, Num: 1
Globalname: assetBalance, contract_name: VaderMath
Ssa_name: ONE_3, name: ONE

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: ONE, Num: 3
Globalname: ONE, contract_name: VaderMath
global...

Name: PIC_1 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
vaderDeposited_1(uint256) := ϕ(['vaderDeposited_1'])
Phi

Name: vaderDeposited_1 Function: calculateLiquidityUnits
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for vaderDeposited

Name: vaderDeposited Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
vaderBalance_1(uint256) := ϕ(['vaderBalance_1'])
Phi

Name: vaderBalance_1 Function: calculateLiquidityUnits
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for vaderBalance

Name: vaderBalance Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
assetDeposited_1(uint256) := ϕ(['assetDeposited_1'])
Phi

Name: assetDeposited_1 Function: calculateLiquidityUnits
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for assetDeposited

Name: assetDeposited Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
assetBalance_1(uint256) := ϕ(['assetBalance_1'])
Phi

Name: assetBalance_1 Function: calculateLiquidityUnits
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for assetBalance

Name: assetBalance Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
ONE_3(uint256) := ϕ(['ONE_4', 'ONE_0', 'ONE_2'])
Phi
[i]Type for ONE

Name: ONE Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_10 cleared
[i] vaderAsset cleared
Propogating parameters and globals to SSA variables...
Ssa_name: assetDeposited_1, name: assetDeposited

Name: assetDeposited Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: assetDeposited_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: assetDeposited, Num: 1
Globalname: assetDeposited, contract_name: VaderMath
Ssa_name: vaderBalance_1, name: vaderBalance

Name: vaderBalance Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: vaderBalance_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: vaderBalance, Num: 1
Globalname: vaderBalance, contract_name: VaderMath
Ssa_name: assetDeposited_1, name: assetDeposited

Name: assetDeposited_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: assetDeposited_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: assetDeposited, Num: 1
Globalname: assetDeposited, contract_name: VaderMath
Ssa_name: vaderBalance_1, name: vaderBalance

Name: vaderBalance_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: vaderBalance_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: vaderBalance, Num: 1
Globalname: vaderBalance, contract_name: VaderMath
Ssa_name: vaderAsset_1, name: vaderAsset

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: vaderAsset, Num: 1
Globalname: vaderAsset, contract_name: VaderMath
End popogation
TMP_10(uint256) = vaderBalance_1 (c)* assetDeposited_1
lnorm: u rnorm: u
[i]Type for TMP_10

Name: TMP_10 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
vaderAsset_1(uint256) := TMP_10(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for vaderAsset

Name: vaderAsset Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_11 cleared
[i] assetVader cleared
Propogating parameters and globals to SSA variables...
Ssa_name: vaderDeposited_1, name: vaderDeposited

Name: vaderDeposited Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: vaderDeposited_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: vaderDeposited, Num: 1
Globalname: vaderDeposited, contract_name: VaderMath
Ssa_name: assetBalance_1, name: assetBalance

Name: assetBalance Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: assetBalance_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: assetBalance, Num: 1
Globalname: assetBalance, contract_name: VaderMath
Ssa_name: vaderDeposited_1, name: vaderDeposited

Name: vaderDeposited_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: vaderDeposited_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: vaderDeposited, Num: 1
Globalname: vaderDeposited, contract_name: VaderMath
Ssa_name: assetBalance_1, name: assetBalance

Name: assetBalance_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: assetBalance_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: assetBalance, Num: 1
Globalname: assetBalance, contract_name: VaderMath
Ssa_name: assetVader_1, name: assetVader

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: assetVader, Num: 1
Globalname: assetVader, contract_name: VaderMath
End popogation
TMP_11(uint256) = assetBalance_1 (c)* vaderDeposited_1
lnorm: u rnorm: u
[i]Type for TMP_11

Name: TMP_11 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
assetVader_1(uint256) := TMP_11(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for assetVader

Name: assetVader Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_12 cleared
[i] TMP_13 cleared
[i] TMP_14 cleared
[i] denominator cleared
Propogating parameters and globals to SSA variables...
Ssa_name: vaderDeposited_1, name: vaderDeposited

Name: vaderDeposited_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: vaderDeposited_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: vaderDeposited, Num: 1
Globalname: vaderDeposited, contract_name: VaderMath
Ssa_name: assetDeposited_1, name: assetDeposited

Name: assetDeposited_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: assetDeposited_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: assetDeposited, Num: 1
Globalname: assetDeposited, contract_name: VaderMath
Ssa_name: vaderBalance_1, name: vaderBalance

Name: vaderBalance_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: vaderBalance_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: vaderBalance, Num: 1
Globalname: vaderBalance, contract_name: VaderMath
Ssa_name: assetBalance_1, name: assetBalance

Name: assetBalance_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: assetBalance_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: assetBalance, Num: 1
Globalname: assetBalance, contract_name: VaderMath
Ssa_name: vaderDeposited_1, name: vaderDeposited

Name: vaderDeposited_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: vaderDeposited_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: vaderDeposited, Num: 1
Globalname: vaderDeposited, contract_name: VaderMath
Ssa_name: assetDeposited_1, name: assetDeposited

Name: assetDeposited_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: assetDeposited_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: assetDeposited, Num: 1
Globalname: assetDeposited, contract_name: VaderMath
Ssa_name: vaderBalance_1, name: vaderBalance

Name: vaderBalance_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: vaderBalance_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: vaderBalance, Num: 1
Globalname: vaderBalance, contract_name: VaderMath
Ssa_name: assetBalance_1, name: assetBalance

Name: assetBalance_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: assetBalance_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: assetBalance, Num: 1
Globalname: assetBalance, contract_name: VaderMath
Ssa_name: denominator_1, name: denominator

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: denominator, Num: 1
Globalname: denominator, contract_name: VaderMath
End popogation
TMP_12(uint256) = vaderDeposited_1 (c)+ vaderBalance_1
[i]Type for TMP_12

Name: TMP_12 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_13(uint256) = assetDeposited_1 (c)+ assetBalance_1
[i]Type for TMP_13

Name: TMP_13 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_14(uint256) = TMP_12 (c)* TMP_13
lnorm: u rnorm: u
[i]Type for TMP_14

Name: TMP_14 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
denominator_1(uint256) := TMP_14(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for denominator

Name: denominator Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_15 cleared
[i] TMP_16 cleared
[i] TMP_17 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: assetVader_1, name: assetVader

Name: assetVader Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: assetVader, Num: 1
Globalname: assetVader, contract_name: VaderMath
Ssa_name: vaderAsset_1, name: vaderAsset

Name: vaderAsset Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: vaderAsset, Num: 1
Globalname: vaderAsset, contract_name: VaderMath
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: denominator, Num: 1
Globalname: denominator, contract_name: VaderMath
Ssa_name: ONE_4, name: ONE

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: ONE, Num: 4
Globalname: ONE, contract_name: VaderMath
global...

Name: PIC_1 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Ssa_name: ONE_4, name: ONE

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: assetVader_1, name: assetVader

Name: assetVader Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: assetVader, Num: 1
Globalname: assetVader, contract_name: VaderMath
Ssa_name: vaderAsset_1, name: vaderAsset

Name: vaderAsset Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: vaderAsset, Num: 1
Globalname: vaderAsset, contract_name: VaderMath
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: denominator, Num: 1
Globalname: denominator, contract_name: VaderMath
End popogation
TMP_15(uint256) = INTERNAL_CALL, VaderMath.delta(uint256,uint256)(vaderAsset_1,assetVader_1)
New param cache [[[], [], 'u', None, [], -1, 'u', 'u'], [[], [], 'u', None, [], -1, 'u', 'u']]
[[], [], 'u', None, [], -1, 'u', 'u']

Name: a Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[], [], 'u', None, [], -1, 'u', 'u']

Name: b Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
delta(uint256,uint256)
Propogating All
Propogating All
b_1
Ssa_name: b_1, name: b

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: b_1 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
a_1
Ssa_name: a_1, name: a

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
b_1
Ssa_name: b_1, name: b

Name: b_1 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: b_1 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
b_1
Ssa_name: b_1, name: b

Name: b_1 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: b_1 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
[i] a cleared
[i] b cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a_1 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: a, Num: 1
Globalname: a, contract_name: VaderMath
Ssa_name: b_1, name: b

Name: b_1 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: b_1 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: b, Num: 1
Globalname: b, contract_name: VaderMath
a_1(uint256) := ϕ(['vaderAsset_1'])
Phi

Name: vaderAsset Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for a

Name: a Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
b_1(uint256) := ϕ(['assetVader_1'])
Phi

Name: assetVader Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for b

Name: b Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_45 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: b_1, name: b

Name: b Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: b_1 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: b, Num: 1
Globalname: b, contract_name: VaderMath
Ssa_name: a_1, name: a

Name: a Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: a, Num: 1
Globalname: a, contract_name: VaderMath
Ssa_name: b_1, name: b

Name: b_1 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: b_1 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: b, Num: 1
Globalname: b, contract_name: VaderMath
Ssa_name: a_1, name: a

Name: a_1 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: a, Num: 1
Globalname: a, contract_name: VaderMath
End popogation
TMP_45(bool) = a_1 > b_1
lnorm: u rnorm: u
[i]Type for TMP_45

Name: TMP_45 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_47 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: b_1, name: b

Name: b_1 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: b_1 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: b, Num: 1
Globalname: b, contract_name: VaderMath
Ssa_name: a_1, name: a

Name: a_1 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: a, Num: 1
Globalname: a, contract_name: VaderMath
Ssa_name: b_1, name: b

Name: b_1 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: b_1 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: b, Num: 1
Globalname: b, contract_name: VaderMath
Ssa_name: a_1, name: a

Name: a_1 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: a, Num: 1
Globalname: a, contract_name: VaderMath
End popogation
TMP_47(uint256) = b_1 (c)- a_1
[i]Type for TMP_47

Name: TMP_47 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_47
RETURN

Name: TMP_47 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] TMP_46 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: b_1, name: b

Name: b_1 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: b_1 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: b, Num: 1
Globalname: b, contract_name: VaderMath
Ssa_name: a_1, name: a

Name: a_1 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: a, Num: 1
Globalname: a, contract_name: VaderMath
Ssa_name: b_1, name: b

Name: b_1 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: b_1 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: b, Num: 1
Globalname: b, contract_name: VaderMath
Ssa_name: a_1, name: a

Name: a_1 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: a, Num: 1
Globalname: a, contract_name: VaderMath
End popogation
TMP_46(uint256) = a_1 (c)- b_1
[i]Type for TMP_46

Name: TMP_46 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_46
RETURN

Name: TMP_46 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] a cleared
[i] b cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a_1 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: a, Num: 1
Globalname: a, contract_name: VaderMath
Ssa_name: b_1, name: b

Name: b_1 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: b_1 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: b, Num: 1
Globalname: b, contract_name: VaderMath
a_1(uint256) := ϕ(['vaderAsset_1'])
Phi

Name: vaderAsset Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for a

Name: a Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
b_1(uint256) := ϕ(['assetVader_1'])
Phi

Name: assetVader Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for b

Name: b Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_45 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: b_1, name: b

Name: b Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: b_1 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: b, Num: 1
Globalname: b, contract_name: VaderMath
Ssa_name: a_1, name: a

Name: a Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: a, Num: 1
Globalname: a, contract_name: VaderMath
Ssa_name: b_1, name: b

Name: b_1 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: b_1 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: b, Num: 1
Globalname: b, contract_name: VaderMath
Ssa_name: a_1, name: a

Name: a_1 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: a, Num: 1
Globalname: a, contract_name: VaderMath
End popogation
TMP_45(bool) = a_1 > b_1
lnorm: u rnorm: u
[i]Type for TMP_45

Name: TMP_45 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_47 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: b_1, name: b

Name: b_1 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: b_1 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: b, Num: 1
Globalname: b, contract_name: VaderMath
Ssa_name: a_1, name: a

Name: a_1 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: a, Num: 1
Globalname: a, contract_name: VaderMath
Ssa_name: b_1, name: b

Name: b_1 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: b_1 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: b, Num: 1
Globalname: b, contract_name: VaderMath
Ssa_name: a_1, name: a

Name: a_1 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: a, Num: 1
Globalname: a, contract_name: VaderMath
End popogation
TMP_47(uint256) = b_1 (c)- a_1
[i]Type for TMP_47

Name: TMP_47 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_47
RETURN

Name: TMP_47 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] TMP_46 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: b_1, name: b

Name: b_1 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: b_1 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: b, Num: 1
Globalname: b, contract_name: VaderMath
Ssa_name: a_1, name: a

Name: a_1 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: a, Num: 1
Globalname: a, contract_name: VaderMath
Ssa_name: b_1, name: b

Name: b_1 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: b_1 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: b, Num: 1
Globalname: b, contract_name: VaderMath
Ssa_name: a_1, name: a

Name: a_1 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: a, Num: 1
Globalname: a, contract_name: VaderMath
End popogation
TMP_46(uint256) = a_1 (c)- b_1
[i]Type for TMP_46

Name: TMP_46 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_46
RETURN

Name: TMP_46 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
([], [], 'u', 'u', 'u', -1)
[i]Type for TMP_15

Name: TMP_15 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_16(uint256) = TMP_15 (c)/ denominator_1
lnorm: u rnorm: u
lnorm: u rnorm: u
[i]Type for TMP_16

Name: TMP_16 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_17(uint256) = ONE_4 (c)- TMP_16
Source address: u
[i]Type for TMP_17

Name: TMP_17 Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_17
RETURN

Name: TMP_17 Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] vaderDeposited cleared
[i] vaderBalance cleared
[i] assetDeposited cleared
[i] assetBalance cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: vaderDeposited_1, name: vaderDeposited

Name: vaderDeposited_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: vaderDeposited_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: vaderDeposited, Num: 1
Globalname: vaderDeposited, contract_name: VaderMath
Ssa_name: vaderBalance_1, name: vaderBalance

Name: vaderBalance_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: vaderBalance_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: vaderBalance, Num: 1
Globalname: vaderBalance, contract_name: VaderMath
Ssa_name: assetDeposited_1, name: assetDeposited

Name: assetDeposited_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: assetDeposited_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: assetDeposited, Num: 1
Globalname: assetDeposited, contract_name: VaderMath
Ssa_name: assetBalance_1, name: assetBalance

Name: assetBalance_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: assetBalance_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: assetBalance, Num: 1
Globalname: assetBalance, contract_name: VaderMath
Ssa_name: ONE_3, name: ONE

Name: ONE Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
vaderDeposited_1(uint256) := ϕ(['vaderDeposited_1'])
Phi

Name: vaderDeposited_1 Function: calculateLiquidityUnits
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for vaderDeposited

Name: vaderDeposited Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
vaderBalance_1(uint256) := ϕ(['vaderBalance_1'])
Phi

Name: vaderBalance_1 Function: calculateLiquidityUnits
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for vaderBalance

Name: vaderBalance Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
assetDeposited_1(uint256) := ϕ(['assetDeposited_1'])
Phi

Name: assetDeposited_1 Function: calculateLiquidityUnits
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for assetDeposited

Name: assetDeposited Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
assetBalance_1(uint256) := ϕ(['assetBalance_1'])
Phi

Name: assetBalance_1 Function: calculateLiquidityUnits
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for assetBalance

Name: assetBalance Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
ONE_3(uint256) := ϕ(['ONE_4', 'ONE_0', 'ONE_2'])
Phi
[i]Type for ONE

Name: ONE Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_10 cleared
[i] vaderAsset cleared
Propogating parameters and globals to SSA variables...
Ssa_name: assetDeposited_1, name: assetDeposited

Name: assetDeposited Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: assetDeposited_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: assetDeposited, Num: 1
Globalname: assetDeposited, contract_name: VaderMath
Ssa_name: vaderBalance_1, name: vaderBalance

Name: vaderBalance Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: vaderBalance_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: vaderBalance, Num: 1
Globalname: vaderBalance, contract_name: VaderMath
Ssa_name: assetDeposited_1, name: assetDeposited

Name: assetDeposited_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: assetDeposited_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: assetDeposited, Num: 1
Globalname: assetDeposited, contract_name: VaderMath
Ssa_name: vaderBalance_1, name: vaderBalance

Name: vaderBalance_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: vaderBalance_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: vaderBalance, Num: 1
Globalname: vaderBalance, contract_name: VaderMath
Ssa_name: vaderAsset_1, name: vaderAsset

Name: vaderAsset Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: vaderAsset, Num: 1
Globalname: vaderAsset, contract_name: VaderMath
End popogation
TMP_10(uint256) = vaderBalance_1 (c)* assetDeposited_1
lnorm: u rnorm: u
[i]Type for TMP_10

Name: TMP_10 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
vaderAsset_1(uint256) := TMP_10(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for vaderAsset

Name: vaderAsset Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_11 cleared
[i] assetVader cleared
Propogating parameters and globals to SSA variables...
Ssa_name: vaderDeposited_1, name: vaderDeposited

Name: vaderDeposited Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: vaderDeposited_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: vaderDeposited, Num: 1
Globalname: vaderDeposited, contract_name: VaderMath
Ssa_name: assetBalance_1, name: assetBalance

Name: assetBalance Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: assetBalance_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: assetBalance, Num: 1
Globalname: assetBalance, contract_name: VaderMath
Ssa_name: vaderDeposited_1, name: vaderDeposited

Name: vaderDeposited_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: vaderDeposited_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: vaderDeposited, Num: 1
Globalname: vaderDeposited, contract_name: VaderMath
Ssa_name: assetBalance_1, name: assetBalance

Name: assetBalance_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: assetBalance_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: assetBalance, Num: 1
Globalname: assetBalance, contract_name: VaderMath
Ssa_name: assetVader_1, name: assetVader

Name: assetVader Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: assetVader, Num: 1
Globalname: assetVader, contract_name: VaderMath
End popogation
TMP_11(uint256) = assetBalance_1 (c)* vaderDeposited_1
lnorm: u rnorm: u
[i]Type for TMP_11

Name: TMP_11 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
assetVader_1(uint256) := TMP_11(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for assetVader

Name: assetVader Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_12 cleared
[i] TMP_13 cleared
[i] TMP_14 cleared
[i] denominator cleared
Propogating parameters and globals to SSA variables...
Ssa_name: vaderDeposited_1, name: vaderDeposited

Name: vaderDeposited_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: vaderDeposited_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: vaderDeposited, Num: 1
Globalname: vaderDeposited, contract_name: VaderMath
Ssa_name: assetDeposited_1, name: assetDeposited

Name: assetDeposited_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: assetDeposited_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: assetDeposited, Num: 1
Globalname: assetDeposited, contract_name: VaderMath
Ssa_name: vaderBalance_1, name: vaderBalance

Name: vaderBalance_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: vaderBalance_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: vaderBalance, Num: 1
Globalname: vaderBalance, contract_name: VaderMath
Ssa_name: assetBalance_1, name: assetBalance

Name: assetBalance_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: assetBalance_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: assetBalance, Num: 1
Globalname: assetBalance, contract_name: VaderMath
Ssa_name: vaderDeposited_1, name: vaderDeposited

Name: vaderDeposited_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: vaderDeposited_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: vaderDeposited, Num: 1
Globalname: vaderDeposited, contract_name: VaderMath
Ssa_name: assetDeposited_1, name: assetDeposited

Name: assetDeposited_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: assetDeposited_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: assetDeposited, Num: 1
Globalname: assetDeposited, contract_name: VaderMath
Ssa_name: vaderBalance_1, name: vaderBalance

Name: vaderBalance_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: vaderBalance_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: vaderBalance, Num: 1
Globalname: vaderBalance, contract_name: VaderMath
Ssa_name: assetBalance_1, name: assetBalance

Name: assetBalance_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: assetBalance_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: assetBalance, Num: 1
Globalname: assetBalance, contract_name: VaderMath
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: denominator, Num: 1
Globalname: denominator, contract_name: VaderMath
End popogation
TMP_12(uint256) = vaderDeposited_1 (c)+ vaderBalance_1
[i]Type for TMP_12

Name: TMP_12 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_13(uint256) = assetDeposited_1 (c)+ assetBalance_1
[i]Type for TMP_13

Name: TMP_13 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_14(uint256) = TMP_12 (c)* TMP_13
lnorm: u rnorm: u
[i]Type for TMP_14

Name: TMP_14 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
denominator_1(uint256) := TMP_14(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for denominator

Name: denominator Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_15 cleared
[i] TMP_16 cleared
[i] TMP_17 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: assetVader_1, name: assetVader

Name: assetVader Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: assetVader, Num: 1
Globalname: assetVader, contract_name: VaderMath
Ssa_name: vaderAsset_1, name: vaderAsset

Name: vaderAsset Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: vaderAsset, Num: 1
Globalname: vaderAsset, contract_name: VaderMath
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: denominator, Num: 1
Globalname: denominator, contract_name: VaderMath
Ssa_name: ONE_4, name: ONE

Name: ONE Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: ONE_4, name: ONE

Name: ONE Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: assetVader_1, name: assetVader

Name: assetVader Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: assetVader, Num: 1
Globalname: assetVader, contract_name: VaderMath
Ssa_name: vaderAsset_1, name: vaderAsset

Name: vaderAsset Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: vaderAsset, Num: 1
Globalname: vaderAsset, contract_name: VaderMath
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: denominator, Num: 1
Globalname: denominator, contract_name: VaderMath
End popogation
TMP_15(uint256) = INTERNAL_CALL, VaderMath.delta(uint256,uint256)(vaderAsset_1,assetVader_1)
New param cache [[[], [], 'u', None, [], -1, 'u', 'u'], [[], [], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[], [], 'u', None, [], -1, 'u'], [[], [], 'u', None, [], -1, 'u']]
[i]Type for TMP_15

Name: TMP_15 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_16(uint256) = TMP_15 (c)/ denominator_1
lnorm: u rnorm: u
lnorm: u rnorm: u
[i]Type for TMP_16

Name: TMP_16 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_17(uint256) = ONE_4 (c)- TMP_16
Source address: u
[i]Type for TMP_17

Name: TMP_17 Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_17
RETURN

Name: TMP_17 Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Source address: u
[i]Type for TMP_0

Name: TMP_0 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
ONE_2(uint256) := ϕ(['ONE_4'])
Phi
[i]Type for ONE

Name: ONE Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
slip_1(uint256) := TMP_0(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for slip

Name: slip Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_1 cleared
[i] TMP_2 cleared
[i] TMP_3 cleared
[i] poolUnitFactor cleared
Propogating parameters and globals to SSA variables...
Ssa_name: assetDeposited_1, name: assetDeposited

Name: assetDeposited_1 Function: calculateLiquidityUnits
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: assetDeposited_1 Function: calculateLiquidityUnits
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: assetDeposited, Num: 1
Globalname: assetDeposited, contract_name: VaderMath
Ssa_name: vaderBalance_1, name: vaderBalance

Name: vaderBalance_1 Function: calculateLiquidityUnits
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: vaderBalance_1 Function: calculateLiquidityUnits
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: vaderBalance, Num: 1
Globalname: vaderBalance, contract_name: VaderMath
Ssa_name: assetBalance_1, name: assetBalance

Name: assetBalance_1 Function: calculateLiquidityUnits
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: assetBalance_1 Function: calculateLiquidityUnits
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: assetBalance, Num: 1
Globalname: assetBalance, contract_name: VaderMath
Ssa_name: vaderDeposited_1, name: vaderDeposited

Name: vaderDeposited_1 Function: calculateLiquidityUnits
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: vaderDeposited_1 Function: calculateLiquidityUnits
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: vaderDeposited, Num: 1
Globalname: vaderDeposited, contract_name: VaderMath
Ssa_name: assetDeposited_1, name: assetDeposited

Name: assetDeposited_1 Function: calculateLiquidityUnits
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: assetDeposited_1 Function: calculateLiquidityUnits
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: assetDeposited, Num: 1
Globalname: assetDeposited, contract_name: VaderMath
Ssa_name: vaderBalance_1, name: vaderBalance

Name: vaderBalance_1 Function: calculateLiquidityUnits
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: vaderBalance_1 Function: calculateLiquidityUnits
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: vaderBalance, Num: 1
Globalname: vaderBalance, contract_name: VaderMath
Ssa_name: assetBalance_1, name: assetBalance

Name: assetBalance_1 Function: calculateLiquidityUnits
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: assetBalance_1 Function: calculateLiquidityUnits
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: assetBalance, Num: 1
Globalname: assetBalance, contract_name: VaderMath
Ssa_name: vaderDeposited_1, name: vaderDeposited

Name: vaderDeposited_1 Function: calculateLiquidityUnits
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: vaderDeposited_1 Function: calculateLiquidityUnits
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: vaderDeposited, Num: 1
Globalname: vaderDeposited, contract_name: VaderMath
Ssa_name: poolUnitFactor_1, name: poolUnitFactor

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: poolUnitFactor, Num: 1
Globalname: poolUnitFactor, contract_name: VaderMath
End popogation
TMP_1(uint256) = vaderBalance_1 (c)* assetDeposited_1
lnorm: u rnorm: u
[i]Type for TMP_1

Name: TMP_1 Function: calculateLiquidityUnits
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_2(uint256) = vaderDeposited_1 (c)* assetBalance_1
lnorm: u rnorm: u
[i]Type for TMP_2

Name: TMP_2 Function: calculateLiquidityUnits
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_3(uint256) = TMP_1 (c)+ TMP_2
[i]Type for TMP_3

Name: TMP_3 Function: calculateLiquidityUnits
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
poolUnitFactor_1(uint256) := TMP_3(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for poolUnitFactor

Name: poolUnitFactor Function: calculateLiquidityUnits
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_4 cleared
[i] TMP_5 cleared
[i] TMP_6 cleared
[i] denominator cleared
Propogating parameters and globals to SSA variables...
Ssa_name: vaderBalance_1, name: vaderBalance

Name: vaderBalance_1 Function: calculateLiquidityUnits
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: vaderBalance_1 Function: calculateLiquidityUnits
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: vaderBalance, Num: 1
Globalname: vaderBalance, contract_name: VaderMath
Ssa_name: assetBalance_1, name: assetBalance

Name: assetBalance_1 Function: calculateLiquidityUnits
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: assetBalance_1 Function: calculateLiquidityUnits
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: assetBalance, Num: 1
Globalname: assetBalance, contract_name: VaderMath
Ssa_name: ONE_2, name: ONE

Name: ONE Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: vaderBalance_1, name: vaderBalance

Name: vaderBalance_1 Function: calculateLiquidityUnits
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: vaderBalance_1 Function: calculateLiquidityUnits
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: vaderBalance, Num: 1
Globalname: vaderBalance, contract_name: VaderMath
Ssa_name: assetBalance_1, name: assetBalance

Name: assetBalance_1 Function: calculateLiquidityUnits
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: assetBalance_1 Function: calculateLiquidityUnits
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: assetBalance, Num: 1
Globalname: assetBalance, contract_name: VaderMath
Ssa_name: ONE_2, name: ONE

Name: ONE Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: denominator_1, name: denominator

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: denominator, Num: 1
Globalname: denominator, contract_name: VaderMath
End popogation
TMP_4(uint256) = ONE_2 (c)* 2
lnorm: u rnorm: 0
Source address: u
[i]Type for TMP_4

Name: TMP_4 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_5(uint256) = TMP_4 (c)* vaderBalance_1
lnorm: 0 rnorm: u
Source address: u
[i]Type for TMP_5

Name: TMP_5 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_6(uint256) = TMP_5 (c)* assetBalance_1
lnorm: 0 rnorm: u
Source address: u
[i]Type for TMP_6

Name: TMP_6 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
denominator_1(uint256) := TMP_6(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for denominator

Name: denominator Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] TMP_7 cleared
[i] TMP_8 cleared
[i] TMP_9 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: slip_1, name: slip

Name: slip Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: poolUnitFactor_1, name: poolUnitFactor

Name: poolUnitFactor Function: calculateLiquidityUnits
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: poolUnitFactor, Num: 1
Globalname: poolUnitFactor, contract_name: VaderMath
Ssa_name: totalPoolUnits_1, name: totalPoolUnits

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: totalPoolUnits_1 Function: calculateLiquidityUnits
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: totalPoolUnits, Num: 1
Globalname: totalPoolUnits, contract_name: VaderMath
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: slip_1, name: slip

Name: slip Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: poolUnitFactor_1, name: poolUnitFactor

Name: poolUnitFactor Function: calculateLiquidityUnits
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: poolUnitFactor, Num: 1
Globalname: poolUnitFactor, contract_name: VaderMath
Ssa_name: totalPoolUnits_1, name: totalPoolUnits

Name: totalPoolUnits_1 Function: calculateLiquidityUnits
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: totalPoolUnits_1 Function: calculateLiquidityUnits
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: totalPoolUnits, Num: 1
Globalname: totalPoolUnits, contract_name: VaderMath
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
End popogation
TMP_7(uint256) = totalPoolUnits_1 (c)* poolUnitFactor_1
lnorm: u rnorm: u
[i]Type for TMP_7

Name: TMP_7 Function: calculateLiquidityUnits
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_8(uint256) = TMP_7 (c)/ denominator_1
lnorm: u rnorm: 0
lnorm: u rnorm: 0
[i]Type for TMP_8

Name: TMP_8 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_9(uint256) = TMP_8 (c)* slip_1
lnorm: 0 rnorm: u
Source address: u
[i]Type for TMP_9

Name: TMP_9 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
RETURN TMP_9
RETURN

Name: TMP_9 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef


ONE_1(uint256) := ϕ(['ONE_4', 'ONE_0', 'ONE_2'])
TMP_0(uint256) = INTERNAL_CALL, VaderMath.calculateSlipAdjustment(uint256,uint256,uint256,uint256)(vaderDeposited_1,vaderBalance_1,assetDeposited_1,assetBalance_1)
ONE_2(uint256) := ϕ(['ONE_4'])
slip_1(uint256) := TMP_0(uint256)
TMP_1(uint256) = vaderBalance_1 (c)* assetDeposited_1
TMP_2(uint256) = vaderDeposited_1 (c)* assetBalance_1
TMP_3(uint256) = TMP_1 (c)+ TMP_2
poolUnitFactor_1(uint256) := TMP_3(uint256)
TMP_4(uint256) = ONE_2 (c)* 2
TMP_5(uint256) = TMP_4 (c)* vaderBalance_1
TMP_6(uint256) = TMP_5 (c)* assetBalance_1
denominator_1(uint256) := TMP_6(uint256)
TMP_7(uint256) = totalPoolUnits_1 (c)* poolUnitFactor_1
TMP_8(uint256) = TMP_7 (c)/ denominator_1
TMP_9(uint256) = TMP_8 (c)* slip_1
RETURN TMP_9


Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: ONE_1, name: ONE

Name: ONE Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
ONE_1(uint256) := ϕ(['ONE_4', 'ONE_0', 'ONE_2'])
Phi
[i]Type for ONE

Name: ONE Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_0 cleared
[i] slip cleared
Propogating parameters and globals to SSA variables...
Ssa_name: assetDeposited_1, name: assetDeposited

Name: assetDeposited_1 Function: calculateLiquidityUnits
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: assetDeposited_1 Function: calculateLiquidityUnits
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: assetDeposited, Num: 1
Globalname: assetDeposited, contract_name: VaderMath
Ssa_name: vaderBalance_1, name: vaderBalance

Name: vaderBalance_1 Function: calculateLiquidityUnits
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: vaderBalance_1 Function: calculateLiquidityUnits
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: vaderBalance, Num: 1
Globalname: vaderBalance, contract_name: VaderMath
Ssa_name: assetBalance_1, name: assetBalance

Name: assetBalance_1 Function: calculateLiquidityUnits
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: assetBalance_1 Function: calculateLiquidityUnits
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: assetBalance, Num: 1
Globalname: assetBalance, contract_name: VaderMath
Ssa_name: vaderDeposited_1, name: vaderDeposited

Name: vaderDeposited_1 Function: calculateLiquidityUnits
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: vaderDeposited_1 Function: calculateLiquidityUnits
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: vaderDeposited, Num: 1
Globalname: vaderDeposited, contract_name: VaderMath
Ssa_name: assetDeposited_1, name: assetDeposited

Name: assetDeposited_1 Function: calculateLiquidityUnits
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: assetDeposited_1 Function: calculateLiquidityUnits
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: assetDeposited, Num: 1
Globalname: assetDeposited, contract_name: VaderMath
Ssa_name: vaderBalance_1, name: vaderBalance

Name: vaderBalance_1 Function: calculateLiquidityUnits
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: vaderBalance_1 Function: calculateLiquidityUnits
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: vaderBalance, Num: 1
Globalname: vaderBalance, contract_name: VaderMath
Ssa_name: assetBalance_1, name: assetBalance

Name: assetBalance_1 Function: calculateLiquidityUnits
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: assetBalance_1 Function: calculateLiquidityUnits
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: assetBalance, Num: 1
Globalname: assetBalance, contract_name: VaderMath
Ssa_name: vaderDeposited_1, name: vaderDeposited

Name: vaderDeposited_1 Function: calculateLiquidityUnits
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: vaderDeposited_1 Function: calculateLiquidityUnits
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: vaderDeposited, Num: 1
Globalname: vaderDeposited, contract_name: VaderMath
Ssa_name: slip_1, name: slip

Name: slip Function: calculateLiquidityUnits
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: slip, Num: 1
Globalname: slip, contract_name: VaderMath
End popogation
Ssa_name: ONE_2, name: ONE

Name: ONE Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_0(uint256) = INTERNAL_CALL, VaderMath.calculateSlipAdjustment(uint256,uint256,uint256,uint256)(vaderDeposited_1,vaderBalance_1,assetDeposited_1,assetBalance_1)
New param cache [[[], [], 'u', None, [], -1, 'u', 'u'], [[], [], 'u', None, [], -1, 'u', 'u'], [[], [], 'u', None, [], -1, 'u', 'u'], [[], [], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[], [], 'u', None, [], -1, 'u'], [[], [], 'u', None, [], -1, 'u'], [[], [], 'u', None, [], -1, 'u'], [[], [], 'u', None, [], -1, 'u']]
Source address: u
[i]Type for TMP_0

Name: TMP_0 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
ONE_2(uint256) := ϕ(['ONE_4'])
Phi
[i]Type for ONE

Name: ONE Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
slip_1(uint256) := TMP_0(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for slip

Name: slip Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_1 cleared
[i] TMP_2 cleared
[i] TMP_3 cleared
[i] poolUnitFactor cleared
Propogating parameters and globals to SSA variables...
Ssa_name: assetDeposited_1, name: assetDeposited

Name: assetDeposited_1 Function: calculateLiquidityUnits
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: assetDeposited_1 Function: calculateLiquidityUnits
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: assetDeposited, Num: 1
Globalname: assetDeposited, contract_name: VaderMath
Ssa_name: vaderBalance_1, name: vaderBalance

Name: vaderBalance_1 Function: calculateLiquidityUnits
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: vaderBalance_1 Function: calculateLiquidityUnits
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: vaderBalance, Num: 1
Globalname: vaderBalance, contract_name: VaderMath
Ssa_name: assetBalance_1, name: assetBalance

Name: assetBalance_1 Function: calculateLiquidityUnits
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: assetBalance_1 Function: calculateLiquidityUnits
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: assetBalance, Num: 1
Globalname: assetBalance, contract_name: VaderMath
Ssa_name: vaderDeposited_1, name: vaderDeposited

Name: vaderDeposited_1 Function: calculateLiquidityUnits
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: vaderDeposited_1 Function: calculateLiquidityUnits
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: vaderDeposited, Num: 1
Globalname: vaderDeposited, contract_name: VaderMath
Ssa_name: assetDeposited_1, name: assetDeposited

Name: assetDeposited_1 Function: calculateLiquidityUnits
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: assetDeposited_1 Function: calculateLiquidityUnits
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: assetDeposited, Num: 1
Globalname: assetDeposited, contract_name: VaderMath
Ssa_name: vaderBalance_1, name: vaderBalance

Name: vaderBalance_1 Function: calculateLiquidityUnits
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: vaderBalance_1 Function: calculateLiquidityUnits
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: vaderBalance, Num: 1
Globalname: vaderBalance, contract_name: VaderMath
Ssa_name: assetBalance_1, name: assetBalance

Name: assetBalance_1 Function: calculateLiquidityUnits
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: assetBalance_1 Function: calculateLiquidityUnits
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: assetBalance, Num: 1
Globalname: assetBalance, contract_name: VaderMath
Ssa_name: vaderDeposited_1, name: vaderDeposited

Name: vaderDeposited_1 Function: calculateLiquidityUnits
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: vaderDeposited_1 Function: calculateLiquidityUnits
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: vaderDeposited, Num: 1
Globalname: vaderDeposited, contract_name: VaderMath
Ssa_name: poolUnitFactor_1, name: poolUnitFactor

Name: poolUnitFactor Function: calculateLiquidityUnits
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: poolUnitFactor, Num: 1
Globalname: poolUnitFactor, contract_name: VaderMath
End popogation
TMP_1(uint256) = vaderBalance_1 (c)* assetDeposited_1
lnorm: u rnorm: u
[i]Type for TMP_1

Name: TMP_1 Function: calculateLiquidityUnits
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_2(uint256) = vaderDeposited_1 (c)* assetBalance_1
lnorm: u rnorm: u
[i]Type for TMP_2

Name: TMP_2 Function: calculateLiquidityUnits
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_3(uint256) = TMP_1 (c)+ TMP_2
[i]Type for TMP_3

Name: TMP_3 Function: calculateLiquidityUnits
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
poolUnitFactor_1(uint256) := TMP_3(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for poolUnitFactor

Name: poolUnitFactor Function: calculateLiquidityUnits
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_4 cleared
[i] TMP_5 cleared
[i] TMP_6 cleared
[i] denominator cleared
Propogating parameters and globals to SSA variables...
Ssa_name: vaderBalance_1, name: vaderBalance

Name: vaderBalance_1 Function: calculateLiquidityUnits
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: vaderBalance_1 Function: calculateLiquidityUnits
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: vaderBalance, Num: 1
Globalname: vaderBalance, contract_name: VaderMath
Ssa_name: assetBalance_1, name: assetBalance

Name: assetBalance_1 Function: calculateLiquidityUnits
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: assetBalance_1 Function: calculateLiquidityUnits
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: assetBalance, Num: 1
Globalname: assetBalance, contract_name: VaderMath
Ssa_name: ONE_2, name: ONE

Name: ONE Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: vaderBalance_1, name: vaderBalance

Name: vaderBalance_1 Function: calculateLiquidityUnits
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: vaderBalance_1 Function: calculateLiquidityUnits
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: vaderBalance, Num: 1
Globalname: vaderBalance, contract_name: VaderMath
Ssa_name: assetBalance_1, name: assetBalance

Name: assetBalance_1 Function: calculateLiquidityUnits
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: assetBalance_1 Function: calculateLiquidityUnits
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: assetBalance, Num: 1
Globalname: assetBalance, contract_name: VaderMath
Ssa_name: ONE_2, name: ONE

Name: ONE Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateLiquidityUnits
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: denominator, Num: 1
Globalname: denominator, contract_name: VaderMath
End popogation
TMP_4(uint256) = ONE_2 (c)* 2
lnorm: u rnorm: 0
Source address: u
[i]Type for TMP_4

Name: TMP_4 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_5(uint256) = TMP_4 (c)* vaderBalance_1
lnorm: 0 rnorm: u
Source address: u
[i]Type for TMP_5

Name: TMP_5 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_6(uint256) = TMP_5 (c)* assetBalance_1
lnorm: 0 rnorm: u
Source address: u
[i]Type for TMP_6

Name: TMP_6 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
denominator_1(uint256) := TMP_6(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for denominator

Name: denominator Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] TMP_7 cleared
[i] TMP_8 cleared
[i] TMP_9 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: slip_1, name: slip

Name: slip Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: poolUnitFactor_1, name: poolUnitFactor

Name: poolUnitFactor Function: calculateLiquidityUnits
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: poolUnitFactor, Num: 1
Globalname: poolUnitFactor, contract_name: VaderMath
Ssa_name: totalPoolUnits_1, name: totalPoolUnits

Name: totalPoolUnits_1 Function: calculateLiquidityUnits
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: totalPoolUnits_1 Function: calculateLiquidityUnits
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: totalPoolUnits, Num: 1
Globalname: totalPoolUnits, contract_name: VaderMath
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: slip_1, name: slip

Name: slip Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: poolUnitFactor_1, name: poolUnitFactor

Name: poolUnitFactor Function: calculateLiquidityUnits
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: poolUnitFactor, Num: 1
Globalname: poolUnitFactor, contract_name: VaderMath
Ssa_name: totalPoolUnits_1, name: totalPoolUnits

Name: totalPoolUnits_1 Function: calculateLiquidityUnits
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: totalPoolUnits_1 Function: calculateLiquidityUnits
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: totalPoolUnits, Num: 1
Globalname: totalPoolUnits, contract_name: VaderMath
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
End popogation
TMP_7(uint256) = totalPoolUnits_1 (c)* poolUnitFactor_1
lnorm: u rnorm: u
[i]Type for TMP_7

Name: TMP_7 Function: calculateLiquidityUnits
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_8(uint256) = TMP_7 (c)/ denominator_1
lnorm: u rnorm: 0
lnorm: u rnorm: 0
[i]Type for TMP_8

Name: TMP_8 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_9(uint256) = TMP_8 (c)* slip_1
lnorm: 0 rnorm: u
Source address: u
[i]Type for TMP_9

Name: TMP_9 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
RETURN TMP_9
RETURN

Name: TMP_9 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Source address: u
Reading Function: calculateSlipAdjustment
Checking funcion...



calculateSlipAdjustment
Function name: calculateSlipAdjustment
Finding type for vaderDeposited(uint256 ... )
Value: u
Finding type for vaderBalance(uint256 ... )
Value: u
Finding type for assetDeposited(uint256 ... )
Value: u
Finding type for assetBalance(uint256 ... )
Value: u
New param cache [[[-1], [-1], 'u', None, [], -1, 'u', 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[], [], 'u', None, [], -1, 'u'], [[], [], 'u', None, [], -1, 'u'], [[], [], 'u', None, [], -1, 'u'], [[], [], 'u', None, [], -1, 'u']]
FIND RETURN
ENTRY_POINT
calculateSlipAdjustment(uint256,uint256,uint256,uint256)


vaderDeposited_1(uint256) := ϕ(['vaderDeposited_1'])
vaderBalance_1(uint256) := ϕ(['vaderBalance_1'])
assetDeposited_1(uint256) := ϕ(['assetDeposited_1'])
assetBalance_1(uint256) := ϕ(['assetBalance_1'])
ONE_3(uint256) := ϕ(['ONE_4', 'ONE_0', 'ONE_2'])
TMP_10(uint256) = vaderBalance_1 (c)* assetDeposited_1
vaderAsset_1(uint256) := TMP_10(uint256)
TMP_11(uint256) = assetBalance_1 (c)* vaderDeposited_1
assetVader_1(uint256) := TMP_11(uint256)
TMP_12(uint256) = vaderDeposited_1 (c)+ vaderBalance_1
TMP_13(uint256) = assetDeposited_1 (c)+ assetBalance_1
TMP_14(uint256) = TMP_12 (c)* TMP_13
denominator_1(uint256) := TMP_14(uint256)
TMP_15(uint256) = INTERNAL_CALL, VaderMath.delta(uint256,uint256)(vaderAsset_1,assetVader_1)
TMP_16(uint256) = TMP_15 (c)/ denominator_1
TMP_17(uint256) = ONE_4 (c)- TMP_16
RETURN TMP_17


[i] vaderDeposited cleared
[i] vaderBalance cleared
[i] assetDeposited cleared
[i] assetBalance cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: vaderDeposited_1, name: vaderDeposited

Name: vaderDeposited_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: vaderDeposited_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: vaderDeposited, Num: 1
Globalname: vaderDeposited, contract_name: VaderMath
Ssa_name: vaderBalance_1, name: vaderBalance

Name: vaderBalance_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: vaderBalance_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: vaderBalance, Num: 1
Globalname: vaderBalance, contract_name: VaderMath
Ssa_name: assetDeposited_1, name: assetDeposited

Name: assetDeposited_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: assetDeposited_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: assetDeposited, Num: 1
Globalname: assetDeposited, contract_name: VaderMath
Ssa_name: assetBalance_1, name: assetBalance

Name: assetBalance_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: assetBalance_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: assetBalance, Num: 1
Globalname: assetBalance, contract_name: VaderMath
Ssa_name: ONE_3, name: ONE

Name: ONE Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
vaderDeposited_1(uint256) := ϕ(['vaderDeposited_1'])
Phi

Name: vaderDeposited_1 Function: calculateLiquidityUnits
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for vaderDeposited

Name: vaderDeposited Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
vaderBalance_1(uint256) := ϕ(['vaderBalance_1'])
Phi

Name: vaderBalance_1 Function: calculateLiquidityUnits
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for vaderBalance

Name: vaderBalance Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
assetDeposited_1(uint256) := ϕ(['assetDeposited_1'])
Phi

Name: assetDeposited_1 Function: calculateLiquidityUnits
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for assetDeposited

Name: assetDeposited Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
assetBalance_1(uint256) := ϕ(['assetBalance_1'])
Phi

Name: assetBalance_1 Function: calculateLiquidityUnits
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for assetBalance

Name: assetBalance Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
ONE_3(uint256) := ϕ(['ONE_4', 'ONE_0', 'ONE_2'])
Phi
[i]Type for ONE

Name: ONE Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_10 cleared
[i] vaderAsset cleared
Propogating parameters and globals to SSA variables...
Ssa_name: assetDeposited_1, name: assetDeposited

Name: assetDeposited Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: assetDeposited_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: assetDeposited, Num: 1
Globalname: assetDeposited, contract_name: VaderMath
Ssa_name: vaderBalance_1, name: vaderBalance

Name: vaderBalance Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: vaderBalance_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: vaderBalance, Num: 1
Globalname: vaderBalance, contract_name: VaderMath
Ssa_name: assetDeposited_1, name: assetDeposited

Name: assetDeposited_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: assetDeposited_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: assetDeposited, Num: 1
Globalname: assetDeposited, contract_name: VaderMath
Ssa_name: vaderBalance_1, name: vaderBalance

Name: vaderBalance_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: vaderBalance_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: vaderBalance, Num: 1
Globalname: vaderBalance, contract_name: VaderMath
Ssa_name: vaderAsset_1, name: vaderAsset

Name: vaderAsset Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: vaderAsset, Num: 1
Globalname: vaderAsset, contract_name: VaderMath
End popogation
TMP_10(uint256) = vaderBalance_1 (c)* assetDeposited_1
lnorm: u rnorm: u
[i]Type for TMP_10

Name: TMP_10 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
vaderAsset_1(uint256) := TMP_10(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for vaderAsset

Name: vaderAsset Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_11 cleared
[i] assetVader cleared
Propogating parameters and globals to SSA variables...
Ssa_name: vaderDeposited_1, name: vaderDeposited

Name: vaderDeposited Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: vaderDeposited_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: vaderDeposited, Num: 1
Globalname: vaderDeposited, contract_name: VaderMath
Ssa_name: assetBalance_1, name: assetBalance

Name: assetBalance Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: assetBalance_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: assetBalance, Num: 1
Globalname: assetBalance, contract_name: VaderMath
Ssa_name: vaderDeposited_1, name: vaderDeposited

Name: vaderDeposited_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: vaderDeposited_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: vaderDeposited, Num: 1
Globalname: vaderDeposited, contract_name: VaderMath
Ssa_name: assetBalance_1, name: assetBalance

Name: assetBalance_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: assetBalance_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: assetBalance, Num: 1
Globalname: assetBalance, contract_name: VaderMath
Ssa_name: assetVader_1, name: assetVader

Name: assetVader Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: assetVader, Num: 1
Globalname: assetVader, contract_name: VaderMath
End popogation
TMP_11(uint256) = assetBalance_1 (c)* vaderDeposited_1
lnorm: u rnorm: u
[i]Type for TMP_11

Name: TMP_11 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
assetVader_1(uint256) := TMP_11(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for assetVader

Name: assetVader Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_12 cleared
[i] TMP_13 cleared
[i] TMP_14 cleared
[i] denominator cleared
Propogating parameters and globals to SSA variables...
Ssa_name: vaderDeposited_1, name: vaderDeposited

Name: vaderDeposited_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: vaderDeposited_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: vaderDeposited, Num: 1
Globalname: vaderDeposited, contract_name: VaderMath
Ssa_name: assetDeposited_1, name: assetDeposited

Name: assetDeposited_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: assetDeposited_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: assetDeposited, Num: 1
Globalname: assetDeposited, contract_name: VaderMath
Ssa_name: vaderBalance_1, name: vaderBalance

Name: vaderBalance_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: vaderBalance_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: vaderBalance, Num: 1
Globalname: vaderBalance, contract_name: VaderMath
Ssa_name: assetBalance_1, name: assetBalance

Name: assetBalance_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: assetBalance_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: assetBalance, Num: 1
Globalname: assetBalance, contract_name: VaderMath
Ssa_name: vaderDeposited_1, name: vaderDeposited

Name: vaderDeposited_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: vaderDeposited_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: vaderDeposited, Num: 1
Globalname: vaderDeposited, contract_name: VaderMath
Ssa_name: assetDeposited_1, name: assetDeposited

Name: assetDeposited_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: assetDeposited_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: assetDeposited, Num: 1
Globalname: assetDeposited, contract_name: VaderMath
Ssa_name: vaderBalance_1, name: vaderBalance

Name: vaderBalance_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: vaderBalance_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: vaderBalance, Num: 1
Globalname: vaderBalance, contract_name: VaderMath
Ssa_name: assetBalance_1, name: assetBalance

Name: assetBalance_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: assetBalance_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: assetBalance, Num: 1
Globalname: assetBalance, contract_name: VaderMath
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: denominator, Num: 1
Globalname: denominator, contract_name: VaderMath
End popogation
TMP_12(uint256) = vaderDeposited_1 (c)+ vaderBalance_1
[i]Type for TMP_12

Name: TMP_12 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_13(uint256) = assetDeposited_1 (c)+ assetBalance_1
[i]Type for TMP_13

Name: TMP_13 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_14(uint256) = TMP_12 (c)* TMP_13
lnorm: u rnorm: u
[i]Type for TMP_14

Name: TMP_14 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
denominator_1(uint256) := TMP_14(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for denominator

Name: denominator Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_15 cleared
[i] TMP_16 cleared
[i] TMP_17 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: assetVader_1, name: assetVader

Name: assetVader Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: assetVader, Num: 1
Globalname: assetVader, contract_name: VaderMath
Ssa_name: vaderAsset_1, name: vaderAsset

Name: vaderAsset Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: vaderAsset, Num: 1
Globalname: vaderAsset, contract_name: VaderMath
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: denominator, Num: 1
Globalname: denominator, contract_name: VaderMath
Ssa_name: ONE_4, name: ONE

Name: ONE Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: ONE_4, name: ONE

Name: ONE Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: assetVader_1, name: assetVader

Name: assetVader Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: assetVader, Num: 1
Globalname: assetVader, contract_name: VaderMath
Ssa_name: vaderAsset_1, name: vaderAsset

Name: vaderAsset Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: vaderAsset, Num: 1
Globalname: vaderAsset, contract_name: VaderMath
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: denominator, Num: 1
Globalname: denominator, contract_name: VaderMath
End popogation
TMP_15(uint256) = INTERNAL_CALL, VaderMath.delta(uint256,uint256)(vaderAsset_1,assetVader_1)
New param cache [[[], [], 'u', None, [], -1, 'u', 'u'], [[], [], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[], [], 'u', None, [], -1, 'u'], [[], [], 'u', None, [], -1, 'u']]
[i]Type for TMP_15

Name: TMP_15 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_16(uint256) = TMP_15 (c)/ denominator_1
lnorm: u rnorm: u
lnorm: u rnorm: u
[i]Type for TMP_16

Name: TMP_16 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_17(uint256) = ONE_4 (c)- TMP_16
Source address: u
[i]Type for TMP_17

Name: TMP_17 Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_17
RETURN

Name: TMP_17 Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


vaderDeposited_1(uint256) := ϕ(['vaderDeposited_1'])
vaderBalance_1(uint256) := ϕ(['vaderBalance_1'])
assetDeposited_1(uint256) := ϕ(['assetDeposited_1'])
assetBalance_1(uint256) := ϕ(['assetBalance_1'])
ONE_3(uint256) := ϕ(['ONE_4', 'ONE_0', 'ONE_2'])
TMP_10(uint256) = vaderBalance_1 (c)* assetDeposited_1
vaderAsset_1(uint256) := TMP_10(uint256)
TMP_11(uint256) = assetBalance_1 (c)* vaderDeposited_1
assetVader_1(uint256) := TMP_11(uint256)
TMP_12(uint256) = vaderDeposited_1 (c)+ vaderBalance_1
TMP_13(uint256) = assetDeposited_1 (c)+ assetBalance_1
TMP_14(uint256) = TMP_12 (c)* TMP_13
denominator_1(uint256) := TMP_14(uint256)
TMP_15(uint256) = INTERNAL_CALL, VaderMath.delta(uint256,uint256)(vaderAsset_1,assetVader_1)
TMP_16(uint256) = TMP_15 (c)/ denominator_1
TMP_17(uint256) = ONE_4 (c)- TMP_16
RETURN TMP_17


[i] vaderDeposited cleared
[i] vaderBalance cleared
[i] assetDeposited cleared
[i] assetBalance cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: vaderDeposited_1, name: vaderDeposited

Name: vaderDeposited_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: vaderDeposited_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: vaderDeposited, Num: 1
Globalname: vaderDeposited, contract_name: VaderMath
Ssa_name: vaderBalance_1, name: vaderBalance

Name: vaderBalance_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: vaderBalance_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: vaderBalance, Num: 1
Globalname: vaderBalance, contract_name: VaderMath
Ssa_name: assetDeposited_1, name: assetDeposited

Name: assetDeposited_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: assetDeposited_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: assetDeposited, Num: 1
Globalname: assetDeposited, contract_name: VaderMath
Ssa_name: assetBalance_1, name: assetBalance

Name: assetBalance_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: assetBalance_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: assetBalance, Num: 1
Globalname: assetBalance, contract_name: VaderMath
Ssa_name: ONE_3, name: ONE

Name: ONE Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
vaderDeposited_1(uint256) := ϕ(['vaderDeposited_1'])
Phi

Name: vaderDeposited_1 Function: calculateLiquidityUnits
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for vaderDeposited

Name: vaderDeposited Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
vaderBalance_1(uint256) := ϕ(['vaderBalance_1'])
Phi

Name: vaderBalance_1 Function: calculateLiquidityUnits
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for vaderBalance

Name: vaderBalance Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
assetDeposited_1(uint256) := ϕ(['assetDeposited_1'])
Phi

Name: assetDeposited_1 Function: calculateLiquidityUnits
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for assetDeposited

Name: assetDeposited Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
assetBalance_1(uint256) := ϕ(['assetBalance_1'])
Phi

Name: assetBalance_1 Function: calculateLiquidityUnits
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for assetBalance

Name: assetBalance Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
ONE_3(uint256) := ϕ(['ONE_4', 'ONE_0', 'ONE_2'])
Phi
[i]Type for ONE

Name: ONE Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_10 cleared
[i] vaderAsset cleared
Propogating parameters and globals to SSA variables...
Ssa_name: assetDeposited_1, name: assetDeposited

Name: assetDeposited Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: assetDeposited_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: assetDeposited, Num: 1
Globalname: assetDeposited, contract_name: VaderMath
Ssa_name: vaderBalance_1, name: vaderBalance

Name: vaderBalance Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: vaderBalance_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: vaderBalance, Num: 1
Globalname: vaderBalance, contract_name: VaderMath
Ssa_name: assetDeposited_1, name: assetDeposited

Name: assetDeposited_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: assetDeposited_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: assetDeposited, Num: 1
Globalname: assetDeposited, contract_name: VaderMath
Ssa_name: vaderBalance_1, name: vaderBalance

Name: vaderBalance_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: vaderBalance_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: vaderBalance, Num: 1
Globalname: vaderBalance, contract_name: VaderMath
Ssa_name: vaderAsset_1, name: vaderAsset

Name: vaderAsset Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: vaderAsset, Num: 1
Globalname: vaderAsset, contract_name: VaderMath
End popogation
TMP_10(uint256) = vaderBalance_1 (c)* assetDeposited_1
lnorm: u rnorm: u
[i]Type for TMP_10

Name: TMP_10 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
vaderAsset_1(uint256) := TMP_10(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for vaderAsset

Name: vaderAsset Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_11 cleared
[i] assetVader cleared
Propogating parameters and globals to SSA variables...
Ssa_name: vaderDeposited_1, name: vaderDeposited

Name: vaderDeposited Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: vaderDeposited_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: vaderDeposited, Num: 1
Globalname: vaderDeposited, contract_name: VaderMath
Ssa_name: assetBalance_1, name: assetBalance

Name: assetBalance Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: assetBalance_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: assetBalance, Num: 1
Globalname: assetBalance, contract_name: VaderMath
Ssa_name: vaderDeposited_1, name: vaderDeposited

Name: vaderDeposited_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: vaderDeposited_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: vaderDeposited, Num: 1
Globalname: vaderDeposited, contract_name: VaderMath
Ssa_name: assetBalance_1, name: assetBalance

Name: assetBalance_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: assetBalance_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: assetBalance, Num: 1
Globalname: assetBalance, contract_name: VaderMath
Ssa_name: assetVader_1, name: assetVader

Name: assetVader Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: assetVader, Num: 1
Globalname: assetVader, contract_name: VaderMath
End popogation
TMP_11(uint256) = assetBalance_1 (c)* vaderDeposited_1
lnorm: u rnorm: u
[i]Type for TMP_11

Name: TMP_11 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
assetVader_1(uint256) := TMP_11(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for assetVader

Name: assetVader Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_12 cleared
[i] TMP_13 cleared
[i] TMP_14 cleared
[i] denominator cleared
Propogating parameters and globals to SSA variables...
Ssa_name: vaderDeposited_1, name: vaderDeposited

Name: vaderDeposited_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: vaderDeposited_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: vaderDeposited, Num: 1
Globalname: vaderDeposited, contract_name: VaderMath
Ssa_name: assetDeposited_1, name: assetDeposited

Name: assetDeposited_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: assetDeposited_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: assetDeposited, Num: 1
Globalname: assetDeposited, contract_name: VaderMath
Ssa_name: vaderBalance_1, name: vaderBalance

Name: vaderBalance_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: vaderBalance_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: vaderBalance, Num: 1
Globalname: vaderBalance, contract_name: VaderMath
Ssa_name: assetBalance_1, name: assetBalance

Name: assetBalance_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: assetBalance_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: assetBalance, Num: 1
Globalname: assetBalance, contract_name: VaderMath
Ssa_name: vaderDeposited_1, name: vaderDeposited

Name: vaderDeposited_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: vaderDeposited_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: vaderDeposited, Num: 1
Globalname: vaderDeposited, contract_name: VaderMath
Ssa_name: assetDeposited_1, name: assetDeposited

Name: assetDeposited_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: assetDeposited_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: assetDeposited, Num: 1
Globalname: assetDeposited, contract_name: VaderMath
Ssa_name: vaderBalance_1, name: vaderBalance

Name: vaderBalance_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: vaderBalance_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: vaderBalance, Num: 1
Globalname: vaderBalance, contract_name: VaderMath
Ssa_name: assetBalance_1, name: assetBalance

Name: assetBalance_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: assetBalance_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: assetBalance, Num: 1
Globalname: assetBalance, contract_name: VaderMath
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: denominator, Num: 1
Globalname: denominator, contract_name: VaderMath
End popogation
TMP_12(uint256) = vaderDeposited_1 (c)+ vaderBalance_1
[i]Type for TMP_12

Name: TMP_12 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_13(uint256) = assetDeposited_1 (c)+ assetBalance_1
[i]Type for TMP_13

Name: TMP_13 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_14(uint256) = TMP_12 (c)* TMP_13
lnorm: u rnorm: u
[i]Type for TMP_14

Name: TMP_14 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
denominator_1(uint256) := TMP_14(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for denominator

Name: denominator Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_15 cleared
[i] TMP_16 cleared
[i] TMP_17 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: assetVader_1, name: assetVader

Name: assetVader Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: assetVader, Num: 1
Globalname: assetVader, contract_name: VaderMath
Ssa_name: vaderAsset_1, name: vaderAsset

Name: vaderAsset Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: vaderAsset, Num: 1
Globalname: vaderAsset, contract_name: VaderMath
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: denominator, Num: 1
Globalname: denominator, contract_name: VaderMath
Ssa_name: ONE_4, name: ONE

Name: ONE Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: ONE_4, name: ONE

Name: ONE Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: assetVader_1, name: assetVader

Name: assetVader Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: assetVader, Num: 1
Globalname: assetVader, contract_name: VaderMath
Ssa_name: vaderAsset_1, name: vaderAsset

Name: vaderAsset Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: vaderAsset, Num: 1
Globalname: vaderAsset, contract_name: VaderMath
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: denominator, Num: 1
Globalname: denominator, contract_name: VaderMath
End popogation
TMP_15(uint256) = INTERNAL_CALL, VaderMath.delta(uint256,uint256)(vaderAsset_1,assetVader_1)
New param cache [[[], [], 'u', None, [], -1, 'u', 'u'], [[], [], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[], [], 'u', None, [], -1, 'u'], [[], [], 'u', None, [], -1, 'u']]
[i]Type for TMP_15

Name: TMP_15 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_16(uint256) = TMP_15 (c)/ denominator_1
lnorm: u rnorm: u
lnorm: u rnorm: u
[i]Type for TMP_16

Name: TMP_16 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_17(uint256) = ONE_4 (c)- TMP_16
Source address: u
[i]Type for TMP_17

Name: TMP_17 Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_17
RETURN

Name: TMP_17 Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Reading Function: calculateLoss
Checking funcion...



calculateLoss
Function name: calculateLoss
Finding type for originalVader(uint256 ... )
Value: u
Finding type for originalAsset(uint256 ... )
Value: u
Finding type for releasedVader(uint256 ... )
Value: u
Finding type for releasedAsset(uint256 ... )
Value: u
New param cache [[[-1], [-1], 'u', None, [], -1, 'u', 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u']]
FIND RETURN
ENTRY_POINT
calculateLoss(uint256,uint256,uint256,uint256)


TMP_18(uint256) = originalAsset_1 (c)* releasedVader_1
TMP_19(uint256) = TMP_18 (c)/ releasedAsset_1
TMP_20(uint256) = TMP_19 (c)+ originalVader_1
originalValue_1(uint256) := TMP_20(uint256)
TMP_21(uint256) = releasedAsset_1 (c)* releasedVader_1
TMP_22(uint256) = TMP_21 (c)/ releasedAsset_1
TMP_23(uint256) = TMP_22 (c)+ releasedVader_1
releasedValue_1(uint256) := TMP_23(uint256)
TMP_24(bool) = originalValue_1 > releasedValue_1
CONDITION TMP_24
TMP_25(uint256) = originalValue_1 (c)- releasedValue_1
loss_1(uint256) := TMP_25(uint256)


Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_18 cleared
[i] TMP_19 cleared
[i] TMP_20 cleared
[i] originalValue cleared
Propogating parameters and globals to SSA variables...
Ssa_name: releasedAsset_1, name: releasedAsset

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: releasedAsset_1 Function: calculateLoss
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: releasedAsset, Num: 1
Globalname: releasedAsset, contract_name: VaderMath
Ssa_name: originalAsset_1, name: originalAsset

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: originalAsset_1 Function: calculateLoss
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: originalAsset, Num: 1
Globalname: originalAsset, contract_name: VaderMath
Ssa_name: releasedVader_1, name: releasedVader

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: releasedVader_1 Function: calculateLoss
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: releasedVader, Num: 1
Globalname: releasedVader, contract_name: VaderMath
Ssa_name: originalVader_1, name: originalVader

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: originalVader_1 Function: calculateLoss
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: originalVader, Num: 1
Globalname: originalVader, contract_name: VaderMath
Ssa_name: releasedAsset_1, name: releasedAsset

Name: releasedAsset_1 Function: calculateLoss
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: releasedAsset_1 Function: calculateLoss
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: releasedAsset, Num: 1
Globalname: releasedAsset, contract_name: VaderMath
Ssa_name: originalAsset_1, name: originalAsset

Name: originalAsset_1 Function: calculateLoss
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: originalAsset_1 Function: calculateLoss
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: originalAsset, Num: 1
Globalname: originalAsset, contract_name: VaderMath
Ssa_name: releasedVader_1, name: releasedVader

Name: releasedVader_1 Function: calculateLoss
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: releasedVader_1 Function: calculateLoss
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: releasedVader, Num: 1
Globalname: releasedVader, contract_name: VaderMath
Ssa_name: originalVader_1, name: originalVader

Name: originalVader_1 Function: calculateLoss
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: originalVader_1 Function: calculateLoss
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: originalVader, Num: 1
Globalname: originalVader, contract_name: VaderMath
Ssa_name: originalValue_1, name: originalValue

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: originalValue, Num: 1
Globalname: originalValue, contract_name: VaderMath
End popogation
TMP_18(uint256) = originalAsset_1 (c)* releasedVader_1
lnorm: u rnorm: u
[i]Type for TMP_18

Name: TMP_18 Function: calculateLoss
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_19(uint256) = TMP_18 (c)/ releasedAsset_1
lnorm: u rnorm: u
lnorm: u rnorm: u
[i]Type for TMP_19

Name: TMP_19 Function: calculateLoss
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_20(uint256) = TMP_19 (c)+ originalVader_1
[i]Type for TMP_20

Name: TMP_20 Function: calculateLoss
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
originalValue_1(uint256) := TMP_20(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for originalValue

Name: originalValue Function: calculateLoss
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_21 cleared
[i] TMP_22 cleared
[i] TMP_23 cleared
[i] releasedValue cleared
Propogating parameters and globals to SSA variables...
Ssa_name: releasedAsset_1, name: releasedAsset

Name: releasedAsset_1 Function: calculateLoss
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: releasedAsset_1 Function: calculateLoss
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: releasedAsset, Num: 1
Globalname: releasedAsset, contract_name: VaderMath
Ssa_name: releasedVader_1, name: releasedVader

Name: releasedVader_1 Function: calculateLoss
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: releasedVader_1 Function: calculateLoss
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: releasedVader, Num: 1
Globalname: releasedVader, contract_name: VaderMath
Ssa_name: releasedAsset_1, name: releasedAsset

Name: releasedAsset_1 Function: calculateLoss
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: releasedAsset_1 Function: calculateLoss
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: releasedAsset, Num: 1
Globalname: releasedAsset, contract_name: VaderMath
Ssa_name: releasedVader_1, name: releasedVader

Name: releasedVader_1 Function: calculateLoss
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: releasedVader_1 Function: calculateLoss
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: releasedVader, Num: 1
Globalname: releasedVader, contract_name: VaderMath
Ssa_name: releasedValue_1, name: releasedValue

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: releasedValue, Num: 1
Globalname: releasedValue, contract_name: VaderMath
End popogation
TMP_21(uint256) = releasedAsset_1 (c)* releasedVader_1
lnorm: u rnorm: u
[i]Type for TMP_21

Name: TMP_21 Function: calculateLoss
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_22(uint256) = TMP_21 (c)/ releasedAsset_1
lnorm: u rnorm: u
lnorm: u rnorm: u
[i]Type for TMP_22

Name: TMP_22 Function: calculateLoss
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_23(uint256) = TMP_22 (c)+ releasedVader_1
[i]Type for TMP_23

Name: TMP_23 Function: calculateLoss
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
releasedValue_1(uint256) := TMP_23(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for releasedValue

Name: releasedValue Function: calculateLoss
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_24 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: releasedValue_1, name: releasedValue

Name: releasedValue Function: calculateLoss
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: releasedValue, Num: 1
Globalname: releasedValue, contract_name: VaderMath
Ssa_name: originalValue_1, name: originalValue

Name: originalValue Function: calculateLoss
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: originalValue, Num: 1
Globalname: originalValue, contract_name: VaderMath
Ssa_name: releasedValue_1, name: releasedValue

Name: releasedValue Function: calculateLoss
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: releasedValue, Num: 1
Globalname: releasedValue, contract_name: VaderMath
Ssa_name: originalValue_1, name: originalValue

Name: originalValue Function: calculateLoss
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: originalValue, Num: 1
Globalname: originalValue, contract_name: VaderMath
End popogation
TMP_24(bool) = originalValue_1 > releasedValue_1
lnorm: u rnorm: u
[i]Type for TMP_24

Name: TMP_24 Function: calculateLoss
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_25 cleared
[i] loss cleared
Propogating parameters and globals to SSA variables...
Ssa_name: releasedValue_1, name: releasedValue

Name: releasedValue Function: calculateLoss
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: releasedValue, Num: 1
Globalname: releasedValue, contract_name: VaderMath
Ssa_name: originalValue_1, name: originalValue

Name: originalValue Function: calculateLoss
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: originalValue, Num: 1
Globalname: originalValue, contract_name: VaderMath
Ssa_name: releasedValue_1, name: releasedValue

Name: releasedValue Function: calculateLoss
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: releasedValue, Num: 1
Globalname: releasedValue, contract_name: VaderMath
Ssa_name: originalValue_1, name: originalValue

Name: originalValue Function: calculateLoss
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: originalValue, Num: 1
Globalname: originalValue, contract_name: VaderMath
Ssa_name: loss_1, name: loss

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: loss, Num: 1
Globalname: loss, contract_name: VaderMath
End popogation
TMP_25(uint256) = originalValue_1 (c)- releasedValue_1
[i]Type for TMP_25

Name: TMP_25 Function: calculateLoss
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
loss_1(uint256) := TMP_25(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for loss

Name: loss Function: calculateLoss
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation


TMP_18(uint256) = originalAsset_1 (c)* releasedVader_1
TMP_19(uint256) = TMP_18 (c)/ releasedAsset_1
TMP_20(uint256) = TMP_19 (c)+ originalVader_1
originalValue_1(uint256) := TMP_20(uint256)
TMP_21(uint256) = releasedAsset_1 (c)* releasedVader_1
TMP_22(uint256) = TMP_21 (c)/ releasedAsset_1
TMP_23(uint256) = TMP_22 (c)+ releasedVader_1
releasedValue_1(uint256) := TMP_23(uint256)
TMP_24(bool) = originalValue_1 > releasedValue_1
CONDITION TMP_24
TMP_25(uint256) = originalValue_1 (c)- releasedValue_1
loss_1(uint256) := TMP_25(uint256)


Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_18 cleared
[i] TMP_19 cleared
[i] TMP_20 cleared
[i] originalValue cleared
Propogating parameters and globals to SSA variables...
Ssa_name: releasedAsset_1, name: releasedAsset

Name: releasedAsset_1 Function: calculateLoss
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: releasedAsset_1 Function: calculateLoss
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: releasedAsset, Num: 1
Globalname: releasedAsset, contract_name: VaderMath
Ssa_name: originalAsset_1, name: originalAsset

Name: originalAsset_1 Function: calculateLoss
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: originalAsset_1 Function: calculateLoss
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: originalAsset, Num: 1
Globalname: originalAsset, contract_name: VaderMath
Ssa_name: releasedVader_1, name: releasedVader

Name: releasedVader_1 Function: calculateLoss
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: releasedVader_1 Function: calculateLoss
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: releasedVader, Num: 1
Globalname: releasedVader, contract_name: VaderMath
Ssa_name: originalVader_1, name: originalVader

Name: originalVader_1 Function: calculateLoss
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: originalVader_1 Function: calculateLoss
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: originalVader, Num: 1
Globalname: originalVader, contract_name: VaderMath
Ssa_name: releasedAsset_1, name: releasedAsset

Name: releasedAsset_1 Function: calculateLoss
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: releasedAsset_1 Function: calculateLoss
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: releasedAsset, Num: 1
Globalname: releasedAsset, contract_name: VaderMath
Ssa_name: originalAsset_1, name: originalAsset

Name: originalAsset_1 Function: calculateLoss
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: originalAsset_1 Function: calculateLoss
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: originalAsset, Num: 1
Globalname: originalAsset, contract_name: VaderMath
Ssa_name: releasedVader_1, name: releasedVader

Name: releasedVader_1 Function: calculateLoss
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: releasedVader_1 Function: calculateLoss
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: releasedVader, Num: 1
Globalname: releasedVader, contract_name: VaderMath
Ssa_name: originalVader_1, name: originalVader

Name: originalVader_1 Function: calculateLoss
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: originalVader_1 Function: calculateLoss
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: originalVader, Num: 1
Globalname: originalVader, contract_name: VaderMath
Ssa_name: originalValue_1, name: originalValue

Name: originalValue Function: calculateLoss
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: originalValue, Num: 1
Globalname: originalValue, contract_name: VaderMath
End popogation
TMP_18(uint256) = originalAsset_1 (c)* releasedVader_1
lnorm: u rnorm: u
[i]Type for TMP_18

Name: TMP_18 Function: calculateLoss
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_19(uint256) = TMP_18 (c)/ releasedAsset_1
lnorm: u rnorm: u
lnorm: u rnorm: u
[i]Type for TMP_19

Name: TMP_19 Function: calculateLoss
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_20(uint256) = TMP_19 (c)+ originalVader_1
[i]Type for TMP_20

Name: TMP_20 Function: calculateLoss
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
originalValue_1(uint256) := TMP_20(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for originalValue

Name: originalValue Function: calculateLoss
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_21 cleared
[i] TMP_22 cleared
[i] TMP_23 cleared
[i] releasedValue cleared
Propogating parameters and globals to SSA variables...
Ssa_name: releasedAsset_1, name: releasedAsset

Name: releasedAsset_1 Function: calculateLoss
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: releasedAsset_1 Function: calculateLoss
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: releasedAsset, Num: 1
Globalname: releasedAsset, contract_name: VaderMath
Ssa_name: releasedVader_1, name: releasedVader

Name: releasedVader_1 Function: calculateLoss
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: releasedVader_1 Function: calculateLoss
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: releasedVader, Num: 1
Globalname: releasedVader, contract_name: VaderMath
Ssa_name: releasedAsset_1, name: releasedAsset

Name: releasedAsset_1 Function: calculateLoss
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: releasedAsset_1 Function: calculateLoss
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: releasedAsset, Num: 1
Globalname: releasedAsset, contract_name: VaderMath
Ssa_name: releasedVader_1, name: releasedVader

Name: releasedVader_1 Function: calculateLoss
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: releasedVader_1 Function: calculateLoss
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: releasedVader, Num: 1
Globalname: releasedVader, contract_name: VaderMath
Ssa_name: releasedValue_1, name: releasedValue

Name: releasedValue Function: calculateLoss
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: releasedValue, Num: 1
Globalname: releasedValue, contract_name: VaderMath
End popogation
TMP_21(uint256) = releasedAsset_1 (c)* releasedVader_1
lnorm: u rnorm: u
[i]Type for TMP_21

Name: TMP_21 Function: calculateLoss
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_22(uint256) = TMP_21 (c)/ releasedAsset_1
lnorm: u rnorm: u
lnorm: u rnorm: u
[i]Type for TMP_22

Name: TMP_22 Function: calculateLoss
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_23(uint256) = TMP_22 (c)+ releasedVader_1
[i]Type for TMP_23

Name: TMP_23 Function: calculateLoss
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
releasedValue_1(uint256) := TMP_23(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for releasedValue

Name: releasedValue Function: calculateLoss
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_24 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: releasedValue_1, name: releasedValue

Name: releasedValue Function: calculateLoss
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: releasedValue, Num: 1
Globalname: releasedValue, contract_name: VaderMath
Ssa_name: originalValue_1, name: originalValue

Name: originalValue Function: calculateLoss
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: originalValue, Num: 1
Globalname: originalValue, contract_name: VaderMath
Ssa_name: releasedValue_1, name: releasedValue

Name: releasedValue Function: calculateLoss
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: releasedValue, Num: 1
Globalname: releasedValue, contract_name: VaderMath
Ssa_name: originalValue_1, name: originalValue

Name: originalValue Function: calculateLoss
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: originalValue, Num: 1
Globalname: originalValue, contract_name: VaderMath
End popogation
TMP_24(bool) = originalValue_1 > releasedValue_1
lnorm: u rnorm: u
[i]Type for TMP_24

Name: TMP_24 Function: calculateLoss
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_25 cleared
[i] loss cleared
Propogating parameters and globals to SSA variables...
Ssa_name: releasedValue_1, name: releasedValue

Name: releasedValue Function: calculateLoss
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: releasedValue, Num: 1
Globalname: releasedValue, contract_name: VaderMath
Ssa_name: originalValue_1, name: originalValue

Name: originalValue Function: calculateLoss
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: originalValue, Num: 1
Globalname: originalValue, contract_name: VaderMath
Ssa_name: releasedValue_1, name: releasedValue

Name: releasedValue Function: calculateLoss
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: releasedValue, Num: 1
Globalname: releasedValue, contract_name: VaderMath
Ssa_name: originalValue_1, name: originalValue

Name: originalValue Function: calculateLoss
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: originalValue, Num: 1
Globalname: originalValue, contract_name: VaderMath
Ssa_name: loss_1, name: loss

Name: loss Function: calculateLoss
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: loss, Num: 1
Globalname: loss, contract_name: VaderMath
End popogation
TMP_25(uint256) = originalValue_1 (c)- releasedValue_1
[i]Type for TMP_25

Name: TMP_25 Function: calculateLoss
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
loss_1(uint256) := TMP_25(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for loss

Name: loss Function: calculateLoss
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Source address: u
Reading Function: calculateSwap
Checking funcion...



calculateSwap
Function name: calculateSwap
Finding type for amountIn(uint256 ... )
Value: u
Finding type for reserveIn(uint256 ... )
Value: u
Finding type for reserveOut(uint256 ... )
Value: u
New param cache [[[-1], [-1], 'u', None, [], -1, 'u', 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u']]
FIND RETURN
ENTRY_POINT
calculateSwap(uint256,uint256,uint256)


TMP_26(uint256) = amountIn_1 (c)* reserveIn_1
TMP_27(uint256) = TMP_26 (c)* reserveOut_1
numerator_1(uint256) := TMP_27(uint256)
TMP_28(uint256) = amountIn_1 (c)+ reserveIn_1
TMP_29(uint256) = INTERNAL_CALL, VaderMath.pow(uint256)(TMP_28)
denominator_1(uint256) := TMP_29(uint256)
TMP_30(uint256) = numerator_1 (c)/ denominator_1
amountOut_1(uint256) := TMP_30(uint256)
RETURN amountOut_1


Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_26 cleared
[i] TMP_27 cleared
[i] numerator cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveOut_1, name: reserveOut

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: reserveOut_1 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: reserveOut, Num: 1
Globalname: reserveOut, contract_name: VaderMath
Ssa_name: reserveIn_1, name: reserveIn

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: reserveIn_1 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: reserveIn, Num: 1
Globalname: reserveIn, contract_name: VaderMath
Ssa_name: amountIn_1, name: amountIn

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountIn, Num: 1
Globalname: amountIn, contract_name: VaderMath
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: reserveOut_1 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: reserveOut, Num: 1
Globalname: reserveOut, contract_name: VaderMath
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: reserveIn_1 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: reserveIn, Num: 1
Globalname: reserveIn, contract_name: VaderMath
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountIn, Num: 1
Globalname: amountIn, contract_name: VaderMath
Ssa_name: numerator_1, name: numerator

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numerator, Num: 1
Globalname: numerator, contract_name: VaderMath
End popogation
TMP_26(uint256) = amountIn_1 (c)* reserveIn_1
lnorm: u rnorm: u
[i]Type for TMP_26

Name: TMP_26 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_27(uint256) = TMP_26 (c)* reserveOut_1
lnorm: u rnorm: u
[i]Type for TMP_27

Name: TMP_27 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
numerator_1(uint256) := TMP_27(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for numerator

Name: numerator Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_28 cleared
[i] TMP_29 cleared
[i] denominator cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: reserveIn_1 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: reserveIn, Num: 1
Globalname: reserveIn, contract_name: VaderMath
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountIn, Num: 1
Globalname: amountIn, contract_name: VaderMath
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: reserveIn_1 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: reserveIn, Num: 1
Globalname: reserveIn, contract_name: VaderMath
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountIn, Num: 1
Globalname: amountIn, contract_name: VaderMath
Ssa_name: denominator_1, name: denominator

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: denominator, Num: 1
Globalname: denominator, contract_name: VaderMath
End popogation
TMP_28(uint256) = amountIn_1 (c)+ reserveIn_1
[i]Type for TMP_28

Name: TMP_28 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_29(uint256) = INTERNAL_CALL, VaderMath.pow(uint256)(TMP_28)
New param cache [[[], [], 'u', None, [], -1, 'u', 'u']]
[[], [], 'u', None, [], -1, 'u', 'u']

Name: a Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
pow(uint256)
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: pow
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a_1 Function: pow
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: pow
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: a, Num: 1
Globalname: a, contract_name: VaderMath
a_1(uint256) := ϕ(['TMP_28'])
Phi

Name: TMP_28 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for a

Name: a Function: pow
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_48 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: pow
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: pow
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: a, Num: 1
Globalname: a, contract_name: VaderMath
Ssa_name: a_1, name: a

Name: a_1 Function: pow
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: pow
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: a, Num: 1
Globalname: a, contract_name: VaderMath
End popogation
TMP_48(uint256) = a_1 (c)* a_1
lnorm: u rnorm: u
[i]Type for TMP_48

Name: TMP_48 Function: pow
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_48
RETURN

Name: TMP_48 Function: pow
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a_1 Function: pow
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: pow
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: a, Num: 1
Globalname: a, contract_name: VaderMath
a_1(uint256) := ϕ(['TMP_28'])
Phi

Name: TMP_28 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for a

Name: a Function: pow
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_48 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: pow
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: pow
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: a, Num: 1
Globalname: a, contract_name: VaderMath
Ssa_name: a_1, name: a

Name: a_1 Function: pow
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: pow
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: a, Num: 1
Globalname: a, contract_name: VaderMath
End popogation
TMP_48(uint256) = a_1 (c)* a_1
lnorm: u rnorm: u
[i]Type for TMP_48

Name: TMP_48 Function: pow
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_48
RETURN

Name: TMP_48 Function: pow
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Source address: u
[i]Type for TMP_29

Name: TMP_29 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
denominator_1(uint256) := TMP_29(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for denominator

Name: denominator Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_30 cleared
[i] amountOut cleared
Propogating parameters and globals to SSA variables...
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numerator, Num: 1
Globalname: numerator, contract_name: VaderMath
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: denominator, Num: 1
Globalname: denominator, contract_name: VaderMath
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numerator, Num: 1
Globalname: numerator, contract_name: VaderMath
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: denominator, Num: 1
Globalname: denominator, contract_name: VaderMath
Ssa_name: amountOut_1, name: amountOut

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: amountOut, Num: 1
Globalname: amountOut, contract_name: VaderMath
End popogation
TMP_30(uint256) = numerator_1 (c)/ denominator_1
lnorm: u rnorm: u
lnorm: u rnorm: u
[i]Type for TMP_30

Name: TMP_30 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
amountOut_1(uint256) := TMP_30(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for amountOut

Name: amountOut Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: amountOut_1, name: amountOut

Name: amountOut Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: amountOut, Num: 1
Globalname: amountOut, contract_name: VaderMath
Ssa_name: amountOut_1, name: amountOut

Name: amountOut Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: amountOut, Num: 1
Globalname: amountOut, contract_name: VaderMath
End popogation
RETURN amountOut_1
RETURN

Name: amountOut Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


TMP_26(uint256) = amountIn_1 (c)* reserveIn_1
TMP_27(uint256) = TMP_26 (c)* reserveOut_1
numerator_1(uint256) := TMP_27(uint256)
TMP_28(uint256) = amountIn_1 (c)+ reserveIn_1
TMP_29(uint256) = INTERNAL_CALL, VaderMath.pow(uint256)(TMP_28)
denominator_1(uint256) := TMP_29(uint256)
TMP_30(uint256) = numerator_1 (c)/ denominator_1
amountOut_1(uint256) := TMP_30(uint256)
RETURN amountOut_1


Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_26 cleared
[i] TMP_27 cleared
[i] numerator cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: reserveOut_1 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: reserveOut, Num: 1
Globalname: reserveOut, contract_name: VaderMath
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: reserveIn_1 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: reserveIn, Num: 1
Globalname: reserveIn, contract_name: VaderMath
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountIn, Num: 1
Globalname: amountIn, contract_name: VaderMath
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: reserveOut_1 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: reserveOut, Num: 1
Globalname: reserveOut, contract_name: VaderMath
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: reserveIn_1 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: reserveIn, Num: 1
Globalname: reserveIn, contract_name: VaderMath
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountIn, Num: 1
Globalname: amountIn, contract_name: VaderMath
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numerator, Num: 1
Globalname: numerator, contract_name: VaderMath
End popogation
TMP_26(uint256) = amountIn_1 (c)* reserveIn_1
lnorm: u rnorm: u
[i]Type for TMP_26

Name: TMP_26 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_27(uint256) = TMP_26 (c)* reserveOut_1
lnorm: u rnorm: u
[i]Type for TMP_27

Name: TMP_27 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
numerator_1(uint256) := TMP_27(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for numerator

Name: numerator Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_28 cleared
[i] TMP_29 cleared
[i] denominator cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: reserveIn_1 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: reserveIn, Num: 1
Globalname: reserveIn, contract_name: VaderMath
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountIn, Num: 1
Globalname: amountIn, contract_name: VaderMath
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: reserveIn_1 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: reserveIn, Num: 1
Globalname: reserveIn, contract_name: VaderMath
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountIn, Num: 1
Globalname: amountIn, contract_name: VaderMath
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: denominator, Num: 1
Globalname: denominator, contract_name: VaderMath
End popogation
TMP_28(uint256) = amountIn_1 (c)+ reserveIn_1
[i]Type for TMP_28

Name: TMP_28 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_29(uint256) = INTERNAL_CALL, VaderMath.pow(uint256)(TMP_28)
New param cache [[[], [], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[], [], 'u', None, [], -1, 'u']]
[i]Type for TMP_29

Name: TMP_29 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
denominator_1(uint256) := TMP_29(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for denominator

Name: denominator Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_30 cleared
[i] amountOut cleared
Propogating parameters and globals to SSA variables...
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numerator, Num: 1
Globalname: numerator, contract_name: VaderMath
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: denominator, Num: 1
Globalname: denominator, contract_name: VaderMath
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numerator, Num: 1
Globalname: numerator, contract_name: VaderMath
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: denominator, Num: 1
Globalname: denominator, contract_name: VaderMath
Ssa_name: amountOut_1, name: amountOut

Name: amountOut Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: amountOut, Num: 1
Globalname: amountOut, contract_name: VaderMath
End popogation
TMP_30(uint256) = numerator_1 (c)/ denominator_1
lnorm: u rnorm: u
lnorm: u rnorm: u
[i]Type for TMP_30

Name: TMP_30 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
amountOut_1(uint256) := TMP_30(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for amountOut

Name: amountOut Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: amountOut_1, name: amountOut

Name: amountOut Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: amountOut, Num: 1
Globalname: amountOut, contract_name: VaderMath
Ssa_name: amountOut_1, name: amountOut

Name: amountOut Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: amountOut, Num: 1
Globalname: amountOut, contract_name: VaderMath
End popogation
RETURN amountOut_1
RETURN

Name: amountOut Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Reading Function: calculateSwapReverse
Checking funcion...



calculateSwapReverse
Function name: calculateSwapReverse
Finding type for amountOut(uint256 ... )
Value: u
Finding type for reserveIn(uint256 ... )
Value: u
Finding type for reserveOut(uint256 ... )
Value: u
New param cache [[[-1], [-1], 'u', None, [], -1, 'u', 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u']]
FIND RETURN
ENTRY_POINT
calculateSwapReverse(uint256,uint256,uint256)


TMP_31(uint256) = reserveIn_1 (c)* reserveOut_1
XY_1(uint256) := TMP_31(uint256)
TMP_32(uint256) = amountOut_1 (c)* 2
y2_1(uint256) := TMP_32(uint256)
TMP_33(uint256) = y2_1 (c)* 2
y4_1(uint256) := TMP_33(uint256)
TMP_34(bool) = y4_1 < reserveOut_1
TMP_35(None) = SOLIDITY_CALL require(bool,string)(TMP_34,VaderMath::calculateSwapReverse: Desired Output Exceeds Maximum Output Possible (1/4 of Liquidity Pool))
TMP_36(uint256) = INTERNAL_CALL, VaderMath.root(uint256)(XY_1)
TMP_37(uint256) = reserveOut_1 (c)- y4_1
TMP_38(uint256) = reserveIn_1 (c)* TMP_37
TMP_39(uint256) = INTERNAL_CALL, VaderMath.root(uint256)(TMP_38)
TMP_40(uint256) = TMP_36 (c)* TMP_39
numeratorA_1(uint256) := TMP_40(uint256)
TMP_41(uint256) = y2_1 (c)* reserveIn_1
numeratorB_1(uint256) := TMP_41(uint256)
numeratorC_1(uint256) := XY_1(uint256)
TMP_42(uint256) = numeratorC_1 (c)- numeratorA_1
TMP_43(uint256) = TMP_42 (c)- numeratorB_1
numerator_1(uint256) := TMP_43(uint256)
denominator_1(uint256) := y2_1(uint256)
TMP_44(uint256) = numerator_1 (c)/ denominator_1
amountIn_1(uint256) := TMP_44(uint256)
RETURN amountIn_1


Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_31 cleared
[i] XY cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveOut_1, name: reserveOut

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: reserveOut_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: reserveOut, Num: 1
Globalname: reserveOut, contract_name: VaderMath
Ssa_name: reserveIn_1, name: reserveIn

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: reserveIn_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: reserveIn, Num: 1
Globalname: reserveIn, contract_name: VaderMath
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: reserveOut_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: reserveOut, Num: 1
Globalname: reserveOut, contract_name: VaderMath
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: reserveIn_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: reserveIn, Num: 1
Globalname: reserveIn, contract_name: VaderMath
Ssa_name: XY_1, name: XY

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: XY, Num: 1
Globalname: XY, contract_name: VaderMath
End popogation
TMP_31(uint256) = reserveIn_1 (c)* reserveOut_1
lnorm: u rnorm: u
[i]Type for TMP_31

Name: TMP_31 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
XY_1(uint256) := TMP_31(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for XY

Name: XY Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_32 cleared
[i] y2 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountOut_1, name: amountOut

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountOut_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountOut, Num: 1
Globalname: amountOut, contract_name: VaderMath
Ssa_name: amountOut_1, name: amountOut

Name: amountOut_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountOut_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountOut, Num: 1
Globalname: amountOut, contract_name: VaderMath
Ssa_name: y2_1, name: y2

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: y2, Num: 1
Globalname: y2, contract_name: VaderMath
End popogation
TMP_32(uint256) = amountOut_1 (c)* 2
lnorm: u rnorm: 0
Source address: u
[i]Type for TMP_32

Name: TMP_32 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
y2_1(uint256) := TMP_32(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] TMP_33 cleared
[i] y4 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: y4_1, name: y4

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: y4, Num: 1
Globalname: y4, contract_name: VaderMath
End popogation
TMP_33(uint256) = y2_1 (c)* 2
lnorm: 0 rnorm: 0
Source address: u
[i]Type for TMP_33

Name: TMP_33 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
y4_1(uint256) := TMP_33(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
[i] TMP_34 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: reserveOut_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: reserveOut, Num: 1
Globalname: reserveOut, contract_name: VaderMath
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: reserveOut_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: reserveOut, Num: 1
Globalname: reserveOut, contract_name: VaderMath
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
End popogation
TMP_34(bool) = y4_1 < reserveOut_1
lnorm: 0 rnorm: u
Source address: u
Source address: u
[i]Type for TMP_34

Name: TMP_34 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
TMP_35(None) = SOLIDITY_CALL require(bool,string)(TMP_34,VaderMath::calculateSwapReverse: Desired Output Exceeds Maximum Output Possible (1/4 of Liquidity Pool))
[i]Type for TMP_35

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_36 cleared
[i] TMP_37 cleared
[i] TMP_38 cleared
[i] TMP_39 cleared
[i] TMP_40 cleared
[i] numeratorA cleared
Propogating parameters and globals to SSA variables...
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: reserveIn_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: reserveIn, Num: 1
Globalname: reserveIn, contract_name: VaderMath
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: XY, Num: 1
Globalname: XY, contract_name: VaderMath
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: reserveIn_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: reserveIn, Num: 1
Globalname: reserveIn, contract_name: VaderMath
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: XY, Num: 1
Globalname: XY, contract_name: VaderMath
Ssa_name: numeratorA_1, name: numeratorA

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numeratorA, Num: 1
Globalname: numeratorA, contract_name: VaderMath
End popogation
TMP_36(uint256) = INTERNAL_CALL, VaderMath.root(uint256)(XY_1)
New param cache [[[], [], 'u', None, [], -1, 'u', 'u']]
[[], [], 'u', None, [], -1, 'u', 'u']

Name: a Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
root(uint256)
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
Propogating All
c_2
Ssa_name: c_2, name: c

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
x_2
Ssa_name: x_2, name: x

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
Propogating All
x_2
Ssa_name: x_2, name: x

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
x_2
Ssa_name: x_2, name: x

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: a, Num: 1
Globalname: a, contract_name: VaderMath
a_1(uint256) := ϕ(['TMP_38', 'XY_1'])
Phi

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: XY Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for a

Name: a Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_49 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: a, Num: 1
Globalname: a, contract_name: VaderMath
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: a, Num: 1
Globalname: a, contract_name: VaderMath
End popogation
TMP_49(bool) = a_1 > 3
lnorm: u rnorm: 0
Source address: u
Source address: u
[i]Type for TMP_49

Name: TMP_49 Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_56 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_56(bool) = a_1 != 0
[i]Type for TMP_56

Name: TMP_56 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_4, name: c

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 4
Globalname: c, contract_name: VaderMath
End popogation
c_4(uint256) := 1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: c_1, name: c

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 1
Globalname: c, contract_name: VaderMath
End popogation
c_1(uint256) := a_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_50 cleared
[i] TMP_51 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: VaderMath
End popogation
TMP_50(uint256) = a_1 (c)/ 2
lnorm: u rnorm: 0
lnorm: u rnorm: 0
[i]Type for TMP_50

Name: TMP_50 Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_51(uint256) = TMP_50 (c)+ 1
Source address: u
[i]Type for TMP_51

Name: TMP_51 Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_51(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
[i] x cleared
[i] TMP_52 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_2, name: c

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
End popogation
Ssa_name: c_2, name: c

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
c_2(uint256) := ϕ(['c_1', 'c_3'])
Phi

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
x_2(uint256) := ϕ(['x_3', 'x_1'])
Phi

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: x Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
[i]Type for x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_52(bool) = x_2 < c_2
lnorm: u rnorm: u
[i]Type for TMP_52

Name: TMP_52 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_3, name: c

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 3
Globalname: c, contract_name: VaderMath
End popogation
c_3(uint256) := x_2(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_53 cleared
[i] TMP_54 cleared
[i] TMP_55 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: x_3, name: x

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: x, Num: 3
Globalname: x, contract_name: VaderMath
End popogation
TMP_53(uint256) = a_1 (c)/ x_2
lnorm: u rnorm: u
Source address: u
lnorm: u rnorm: u
[i]Type for TMP_53

Name: TMP_53 Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_54(uint256) = TMP_53 (c)+ x_2
Source address: u
[i]Type for TMP_54

Name: TMP_54 Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_55(uint256) = TMP_54 (c)/ 2
lnorm: u rnorm: 0
lnorm: u rnorm: 0
[i]Type for TMP_55

Name: TMP_55 Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
x_3(uint256) := TMP_55(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: a, Num: 1
Globalname: a, contract_name: VaderMath
a_1(uint256) := ϕ(['TMP_38', 'XY_1'])
Phi

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: XY Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for a

Name: a Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_49 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: a, Num: 1
Globalname: a, contract_name: VaderMath
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: a, Num: 1
Globalname: a, contract_name: VaderMath
End popogation
TMP_49(bool) = a_1 > 3
lnorm: u rnorm: 0
Source address: u
Source address: u
[i]Type for TMP_49

Name: TMP_49 Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_56 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_56(bool) = a_1 != 0
[i]Type for TMP_56

Name: TMP_56 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_4, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: c, Num: 4
Globalname: c, contract_name: VaderMath
End popogation
c_4(uint256) := 1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: c_1, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 1
Globalname: c, contract_name: VaderMath
End popogation
c_1(uint256) := a_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_50 cleared
[i] TMP_51 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: VaderMath
End popogation
TMP_50(uint256) = a_1 (c)/ 2
lnorm: u rnorm: 0
lnorm: u rnorm: 0
[i]Type for TMP_50

Name: TMP_50 Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_51(uint256) = TMP_50 (c)+ 1
Source address: u
[i]Type for TMP_51

Name: TMP_51 Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_51(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
[i] x cleared
[i] TMP_52 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
End popogation
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
c_2(uint256) := ϕ(['c_1', 'c_3'])
Phi

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
x_2(uint256) := ϕ(['x_3', 'x_1'])
Phi

Name: x Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef

Name: x Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
[i]Type for x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_52(bool) = x_2 < c_2
lnorm: u rnorm: u
[i]Type for TMP_52

Name: TMP_52 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_3, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 3
Globalname: c, contract_name: VaderMath
End popogation
c_3(uint256) := x_2(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_53 cleared
[i] TMP_54 cleared
[i] TMP_55 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: x_3, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 3
Globalname: x, contract_name: VaderMath
End popogation
TMP_53(uint256) = a_1 (c)/ x_2
lnorm: u rnorm: u
Source address: u
lnorm: u rnorm: u
[i]Type for TMP_53

Name: TMP_53 Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_54(uint256) = TMP_53 (c)+ x_2
Source address: u
[i]Type for TMP_54

Name: TMP_54 Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_55(uint256) = TMP_54 (c)/ 2
lnorm: u rnorm: 0
lnorm: u rnorm: 0
[i]Type for TMP_55

Name: TMP_55 Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
x_3(uint256) := TMP_55(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_36

Name: TMP_36 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_37(uint256) = reserveOut_1 (c)- y4_1
Source address: u
[i]Type for TMP_37

Name: TMP_37 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
TMP_38(uint256) = reserveIn_1 (c)* TMP_37
lnorm: u rnorm: u
Source address: u
[i]Type for TMP_38

Name: TMP_38 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
TMP_39(uint256) = INTERNAL_CALL, VaderMath.root(uint256)(TMP_38)
New param cache [[[-1], [-1], 'u', None, [], -1, 'u', 0]]
Old param cache: [[[], [], 'u', None, [], -1, 'u']]
[[-1], [-1], 'u', None, [], -1, 'u', 0]

Name: a Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
root(uint256)
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Copied ftype
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
Propogating All
c_2
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
Propogating All
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Copied ftype
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_38', 'XY_1'])
Phi
[i]Type for a

Name: a Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
[i] TMP_49 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
End popogation
TMP_49(bool) = a_1 > 3
lnorm: u rnorm: 0
[i]Type for TMP_49

Name: TMP_49 Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_56 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
End popogation
TMP_56(bool) = a_1 != 0
[i]Type for TMP_56

Name: TMP_56 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_4, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: c, Num: 4
Globalname: c, contract_name: VaderMath
End popogation
c_4(uint256) := 1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: c_1, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 1
Globalname: c, contract_name: VaderMath
End popogation
c_1(uint256) := a_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_50 cleared
[i] TMP_51 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: VaderMath
End popogation
TMP_50(uint256) = a_1 (c)/ 2
lnorm: u rnorm: 0
lnorm: u rnorm: 0
[i]Type for TMP_50

Name: TMP_50 Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
TMP_51(uint256) = TMP_50 (c)+ 1
Source address: u
[i]Type for TMP_51

Name: TMP_51 Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_51(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
[i] x cleared
[i] TMP_52 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
End popogation
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
c_2(uint256) := ϕ(['c_1', 'c_3'])
Phi

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
x_2(uint256) := ϕ(['x_3', 'x_1'])
Phi

Name: x Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef

Name: x Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 1
Fields: 
Finance Type: undef


END==================================
[i]Type for x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_52(bool) = x_2 < c_2
lnorm: u rnorm: u
[i]Type for TMP_52

Name: TMP_52 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_3, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 3
Globalname: c, contract_name: VaderMath
End popogation
c_3(uint256) := x_2(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_53 cleared
[i] TMP_54 cleared
[i] TMP_55 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: a_1, name: a

Name: a Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: x_3, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 3
Globalname: x, contract_name: VaderMath
End popogation
TMP_53(uint256) = a_1 (c)/ x_2
lnorm: u rnorm: u
Source address: u
lnorm: u rnorm: u
[i]Type for TMP_53

Name: TMP_53 Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
TMP_54(uint256) = TMP_53 (c)+ x_2
Source address: u
[i]Type for TMP_54

Name: TMP_54 Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
TMP_55(uint256) = TMP_54 (c)/ 2
lnorm: u rnorm: 0
lnorm: u rnorm: 0
[i]Type for TMP_55

Name: TMP_55 Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
x_3(uint256) := TMP_55(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_38', 'XY_1'])
Phi
[i]Type for a

Name: a Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
[i] TMP_49 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
End popogation
TMP_49(bool) = a_1 > 3
lnorm: u rnorm: 0
[i]Type for TMP_49

Name: TMP_49 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_56 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
End popogation
TMP_56(bool) = a_1 != 0
[i]Type for TMP_56

Name: TMP_56 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_4, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: c, Num: 4
Globalname: c, contract_name: VaderMath
End popogation
c_4(uint256) := 1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: c_1, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: c, Num: 1
Globalname: c, contract_name: VaderMath
End popogation
c_1(uint256) := a_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_50 cleared
[i] TMP_51 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: VaderMath
End popogation
TMP_50(uint256) = a_1 (c)/ 2
lnorm: u rnorm: 0
lnorm: u rnorm: 0
[i]Type for TMP_50

Name: TMP_50 Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
TMP_51(uint256) = TMP_50 (c)+ 1
Source address: u
[i]Type for TMP_51

Name: TMP_51 Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_51(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
[i] x cleared
[i] TMP_52 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
End popogation
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
c_2(uint256) := ϕ(['c_1', 'c_3'])
Phi

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
x_2(uint256) := ϕ(['x_3', 'x_1'])
Phi

Name: x Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 0
Fields: 
Finance Type: undef

Name: x Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 1
Fields: 
Finance Type: undef


END==================================
[i]Type for x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_52(bool) = x_2 < c_2
lnorm: u rnorm: u
[i]Type for TMP_52

Name: TMP_52 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_3, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 3
Globalname: c, contract_name: VaderMath
End popogation
c_3(uint256) := x_2(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_53 cleared
[i] TMP_54 cleared
[i] TMP_55 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: a_1, name: a

Name: a Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: x_3, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: x, Num: 3
Globalname: x, contract_name: VaderMath
End popogation
TMP_53(uint256) = a_1 (c)/ x_2
lnorm: u rnorm: u
Source address: u
lnorm: u rnorm: u
[i]Type for TMP_53

Name: TMP_53 Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
TMP_54(uint256) = TMP_53 (c)+ x_2
Source address: u
[i]Type for TMP_54

Name: TMP_54 Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
TMP_55(uint256) = TMP_54 (c)/ 2
lnorm: u rnorm: 0
lnorm: u rnorm: 0
[i]Type for TMP_55

Name: TMP_55 Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
x_3(uint256) := TMP_55(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_39

Name: TMP_39 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_40(uint256) = TMP_36 (c)* TMP_39
lnorm: u rnorm: u
[i]Type for TMP_40

Name: TMP_40 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
numeratorA_1(uint256) := TMP_40(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for numeratorA

Name: numeratorA Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_41 cleared
[i] numeratorB cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: reserveIn_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: reserveIn, Num: 1
Globalname: reserveIn, contract_name: VaderMath
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: reserveIn_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: reserveIn, Num: 1
Globalname: reserveIn, contract_name: VaderMath
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: numeratorB_1, name: numeratorB

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numeratorB, Num: 1
Globalname: numeratorB, contract_name: VaderMath
End popogation
TMP_41(uint256) = y2_1 (c)* reserveIn_1
lnorm: 0 rnorm: u
Source address: u
[i]Type for TMP_41

Name: TMP_41 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
numeratorB_1(uint256) := TMP_41(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for numeratorB

Name: numeratorB Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] numeratorC cleared
Propogating parameters and globals to SSA variables...
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: XY, Num: 1
Globalname: XY, contract_name: VaderMath
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: XY, Num: 1
Globalname: XY, contract_name: VaderMath
Ssa_name: numeratorC_1, name: numeratorC

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numeratorC, Num: 1
Globalname: numeratorC, contract_name: VaderMath
End popogation
numeratorC_1(uint256) := XY_1(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for numeratorC

Name: numeratorC Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_42 cleared
[i] TMP_43 cleared
[i] numerator cleared
Propogating parameters and globals to SSA variables...
Ssa_name: numeratorC_1, name: numeratorC

Name: numeratorC Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numeratorC, Num: 1
Globalname: numeratorC, contract_name: VaderMath
Ssa_name: numeratorB_1, name: numeratorB

Name: numeratorB Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: numeratorA_1, name: numeratorA

Name: numeratorA Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numeratorA, Num: 1
Globalname: numeratorA, contract_name: VaderMath
Ssa_name: numeratorC_1, name: numeratorC

Name: numeratorC Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numeratorC, Num: 1
Globalname: numeratorC, contract_name: VaderMath
Ssa_name: numeratorB_1, name: numeratorB

Name: numeratorB Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: numeratorA_1, name: numeratorA

Name: numeratorA Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numeratorA, Num: 1
Globalname: numeratorA, contract_name: VaderMath
Ssa_name: numerator_1, name: numerator

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numerator, Num: 1
Globalname: numerator, contract_name: VaderMath
End popogation
TMP_42(uint256) = numeratorC_1 (c)- numeratorA_1
[i]Type for TMP_42

Name: TMP_42 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_43(uint256) = TMP_42 (c)- numeratorB_1
Source address: u
[i]Type for TMP_43

Name: TMP_43 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
numerator_1(uint256) := TMP_43(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for numerator

Name: numerator Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] denominator cleared
Propogating parameters and globals to SSA variables...
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: denominator_1, name: denominator

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: denominator, Num: 1
Globalname: denominator, contract_name: VaderMath
End popogation
denominator_1(uint256) := y2_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for denominator

Name: denominator Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] TMP_44 cleared
[i] amountIn cleared
Propogating parameters and globals to SSA variables...
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: amountIn, Num: 1
Globalname: amountIn, contract_name: VaderMath
End popogation
TMP_44(uint256) = numerator_1 (c)/ denominator_1
lnorm: 0 rnorm: 0
lnorm: 0 rnorm: 0
[i]Type for TMP_44

Name: TMP_44 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
amountIn_1(uint256) := TMP_44(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for amountIn

Name: amountIn Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 1
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 1
Fields: 
Finance Type: undef
End popogation
RETURN amountIn_1
RETURN

Name: amountIn Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 1
Fields: 
Finance Type: undef


TMP_31(uint256) = reserveIn_1 (c)* reserveOut_1
XY_1(uint256) := TMP_31(uint256)
TMP_32(uint256) = amountOut_1 (c)* 2
y2_1(uint256) := TMP_32(uint256)
TMP_33(uint256) = y2_1 (c)* 2
y4_1(uint256) := TMP_33(uint256)
TMP_34(bool) = y4_1 < reserveOut_1
TMP_35(None) = SOLIDITY_CALL require(bool,string)(TMP_34,VaderMath::calculateSwapReverse: Desired Output Exceeds Maximum Output Possible (1/4 of Liquidity Pool))
TMP_36(uint256) = INTERNAL_CALL, VaderMath.root(uint256)(XY_1)
TMP_37(uint256) = reserveOut_1 (c)- y4_1
TMP_38(uint256) = reserveIn_1 (c)* TMP_37
TMP_39(uint256) = INTERNAL_CALL, VaderMath.root(uint256)(TMP_38)
TMP_40(uint256) = TMP_36 (c)* TMP_39
numeratorA_1(uint256) := TMP_40(uint256)
TMP_41(uint256) = y2_1 (c)* reserveIn_1
numeratorB_1(uint256) := TMP_41(uint256)
numeratorC_1(uint256) := XY_1(uint256)
TMP_42(uint256) = numeratorC_1 (c)- numeratorA_1
TMP_43(uint256) = TMP_42 (c)- numeratorB_1
numerator_1(uint256) := TMP_43(uint256)
denominator_1(uint256) := y2_1(uint256)
TMP_44(uint256) = numerator_1 (c)/ denominator_1
amountIn_1(uint256) := TMP_44(uint256)
RETURN amountIn_1


Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_31 cleared
[i] XY cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: reserveIn_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: reserveIn, Num: 1
Globalname: reserveIn, contract_name: VaderMath
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: reserveIn_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: reserveIn, Num: 1
Globalname: reserveIn, contract_name: VaderMath
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: XY, Num: 1
Globalname: XY, contract_name: VaderMath
End popogation
TMP_31(uint256) = reserveIn_1 (c)* reserveOut_1
lnorm: u rnorm: 0
Source address: u
[i]Type for TMP_31

Name: TMP_31 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
XY_1(uint256) := TMP_31(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for XY

Name: XY Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
[i] TMP_32 cleared
[i] y2 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountOut_1, name: amountOut

Name: amountOut_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountOut_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountOut, Num: 1
Globalname: amountOut, contract_name: VaderMath
Ssa_name: amountOut_1, name: amountOut

Name: amountOut_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountOut_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountOut, Num: 1
Globalname: amountOut, contract_name: VaderMath
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: y2, Num: 1
Globalname: y2, contract_name: VaderMath
End popogation
TMP_32(uint256) = amountOut_1 (c)* 2
lnorm: u rnorm: 0
Source address: u
[i]Type for TMP_32

Name: TMP_32 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
y2_1(uint256) := TMP_32(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] TMP_33 cleared
[i] y4 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: y4, Num: 1
Globalname: y4, contract_name: VaderMath
End popogation
TMP_33(uint256) = y2_1 (c)* 2
lnorm: 0 rnorm: 0
Source address: u
[i]Type for TMP_33

Name: TMP_33 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
y4_1(uint256) := TMP_33(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
[i] TMP_34 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
End popogation
TMP_34(bool) = y4_1 < reserveOut_1
lnorm: 0 rnorm: 0
[i]Type for TMP_34

Name: TMP_34 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_35(None) = SOLIDITY_CALL require(bool,string)(TMP_34,VaderMath::calculateSwapReverse: Desired Output Exceeds Maximum Output Possible (1/4 of Liquidity Pool))
[i]Type for TMP_35

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_36 cleared
[i] TMP_37 cleared
[i] TMP_38 cleared
[i] TMP_39 cleared
[i] TMP_40 cleared
[i] numeratorA cleared
Propogating parameters and globals to SSA variables...
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: reserveIn_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: reserveIn, Num: 1
Globalname: reserveIn, contract_name: VaderMath
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: reserveIn_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: reserveIn, Num: 1
Globalname: reserveIn, contract_name: VaderMath
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: numeratorA_1, name: numeratorA

Name: numeratorA Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numeratorA, Num: 1
Globalname: numeratorA, contract_name: VaderMath
End popogation
TMP_36(uint256) = INTERNAL_CALL, VaderMath.root(uint256)(XY_1)
New param cache [[[-1], [-1], 0, None, [], -1, 'u', 4]]
Old param cache: [[[], [], 'u', None, [], -1, 'u']]
[[-1], [-1], 0, None, [], -1, 'u', 4]

Name: a Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
root(uint256)
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
Propogating All
c_2
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
Propogating All
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_38', 'XY_1'])
Phi
[i]Type for a

Name: a Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
[i] TMP_49 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
End popogation
TMP_49(bool) = a_1 > 3
lnorm: 0 rnorm: 0
[i]Type for TMP_49

Name: TMP_49 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_56 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
End popogation
TMP_56(bool) = a_1 != 0
[i]Type for TMP_56

Name: TMP_56 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_4, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: c, Num: 4
Globalname: c, contract_name: VaderMath
End popogation
c_4(uint256) := 1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: c_1, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: c, Num: 1
Globalname: c, contract_name: VaderMath
End popogation
c_1(uint256) := a_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_50 cleared
[i] TMP_51 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: VaderMath
End popogation
TMP_50(uint256) = a_1 (c)/ 2
lnorm: 0 rnorm: 0
lnorm: 0 rnorm: 0
[i]Type for TMP_50

Name: TMP_50 Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_51(uint256) = TMP_50 (c)+ 1
Source address: u
[i]Type for TMP_51

Name: TMP_51 Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_51(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
[i] x cleared
[i] TMP_52 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
End popogation
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
c_2(uint256) := ϕ(['c_1', 'c_3'])
Phi

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
x_2(uint256) := ϕ(['x_3', 'x_1'])
Phi

Name: x Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 0
Fields: 
Finance Type: undef

Name: x Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
[i]Type for x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_52(bool) = x_2 < c_2
lnorm: u rnorm: u
[i]Type for TMP_52

Name: TMP_52 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_3, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 3
Globalname: c, contract_name: VaderMath
End popogation
c_3(uint256) := x_2(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_53 cleared
[i] TMP_54 cleared
[i] TMP_55 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: a_1, name: a

Name: a Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: x_3, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: x, Num: 3
Globalname: x, contract_name: VaderMath
End popogation
TMP_53(uint256) = a_1 (c)/ x_2
lnorm: 0 rnorm: u
Source address: u
lnorm: 0 rnorm: u
[i]Type for TMP_53

Name: TMP_53 Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
TMP_54(uint256) = TMP_53 (c)+ x_2
Source address: u
[i]Type for TMP_54

Name: TMP_54 Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
TMP_55(uint256) = TMP_54 (c)/ 2
lnorm: 0 rnorm: 0
lnorm: 0 rnorm: 0
[i]Type for TMP_55

Name: TMP_55 Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
x_3(uint256) := TMP_55(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_38', 'XY_1'])
Phi
[i]Type for a

Name: a Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
[i] TMP_49 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
End popogation
TMP_49(bool) = a_1 > 3
lnorm: 0 rnorm: 0
[i]Type for TMP_49

Name: TMP_49 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_56 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
End popogation
TMP_56(bool) = a_1 != 0
[i]Type for TMP_56

Name: TMP_56 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_4, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: c, Num: 4
Globalname: c, contract_name: VaderMath
End popogation
c_4(uint256) := 1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: c_1, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 1
Globalname: c, contract_name: VaderMath
End popogation
c_1(uint256) := a_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_50 cleared
[i] TMP_51 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: VaderMath
End popogation
TMP_50(uint256) = a_1 (c)/ 2
lnorm: 0 rnorm: 0
lnorm: 0 rnorm: 0
[i]Type for TMP_50

Name: TMP_50 Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_51(uint256) = TMP_50 (c)+ 1
Source address: u
[i]Type for TMP_51

Name: TMP_51 Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_51(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
[i] x cleared
[i] TMP_52 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
End popogation
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
c_2(uint256) := ϕ(['c_1', 'c_3'])
Phi

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
x_2(uint256) := ϕ(['x_3', 'x_1'])
Phi

Name: x Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef

Name: x Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
[i]Type for x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_52(bool) = x_2 < c_2
lnorm: u rnorm: u
[i]Type for TMP_52

Name: TMP_52 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_3, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 3
Globalname: c, contract_name: VaderMath
End popogation
c_3(uint256) := x_2(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_53 cleared
[i] TMP_54 cleared
[i] TMP_55 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: a_1, name: a

Name: a Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: x_3, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 3
Globalname: x, contract_name: VaderMath
End popogation
TMP_53(uint256) = a_1 (c)/ x_2
lnorm: 0 rnorm: u
Source address: u
lnorm: 0 rnorm: u
[i]Type for TMP_53

Name: TMP_53 Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
TMP_54(uint256) = TMP_53 (c)+ x_2
Source address: u
[i]Type for TMP_54

Name: TMP_54 Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
TMP_55(uint256) = TMP_54 (c)/ 2
lnorm: 0 rnorm: 0
lnorm: 0 rnorm: 0
[i]Type for TMP_55

Name: TMP_55 Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
x_3(uint256) := TMP_55(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_36

Name: TMP_36 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_37(uint256) = reserveOut_1 (c)- y4_1
Source address: u
[i]Type for TMP_37

Name: TMP_37 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
TMP_38(uint256) = reserveIn_1 (c)* TMP_37
lnorm: u rnorm: u
Source address: u
[i]Type for TMP_38

Name: TMP_38 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
TMP_39(uint256) = INTERNAL_CALL, VaderMath.root(uint256)(TMP_38)
New param cache [[[-1], [-1], 'u', None, [], -1, 'u', 0]]
Old param cache: [[[], [], 'u', None, [], -1, 'u']]
[[-1], [-1], 'u', None, [], -1, 'u', 0]

Name: a Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
root(uint256)
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Copied ftype
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
Propogating All
c_2
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
Propogating All
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Copied ftype
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_38', 'XY_1'])
Phi
[i]Type for a

Name: a Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
[i] TMP_49 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
End popogation
TMP_49(bool) = a_1 > 3
lnorm: u rnorm: 0
[i]Type for TMP_49

Name: TMP_49 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_56 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
End popogation
TMP_56(bool) = a_1 != 0
[i]Type for TMP_56

Name: TMP_56 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_4, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: c, Num: 4
Globalname: c, contract_name: VaderMath
End popogation
c_4(uint256) := 1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: c_1, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 1
Globalname: c, contract_name: VaderMath
End popogation
c_1(uint256) := a_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_50 cleared
[i] TMP_51 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: VaderMath
End popogation
TMP_50(uint256) = a_1 (c)/ 2
lnorm: u rnorm: 0
lnorm: u rnorm: 0
[i]Type for TMP_50

Name: TMP_50 Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
TMP_51(uint256) = TMP_50 (c)+ 1
Source address: u
[i]Type for TMP_51

Name: TMP_51 Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_51(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
[i] x cleared
[i] TMP_52 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
End popogation
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
c_2(uint256) := ϕ(['c_1', 'c_3'])
Phi

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
x_2(uint256) := ϕ(['x_3', 'x_1'])
Phi

Name: x Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef

Name: x Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 1
Fields: 
Finance Type: undef


END==================================
[i]Type for x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_52(bool) = x_2 < c_2
lnorm: u rnorm: u
[i]Type for TMP_52

Name: TMP_52 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_3, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 3
Globalname: c, contract_name: VaderMath
End popogation
c_3(uint256) := x_2(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_53 cleared
[i] TMP_54 cleared
[i] TMP_55 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: a_1, name: a

Name: a Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: x_3, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 3
Globalname: x, contract_name: VaderMath
End popogation
TMP_53(uint256) = a_1 (c)/ x_2
lnorm: u rnorm: u
Source address: u
lnorm: u rnorm: u
[i]Type for TMP_53

Name: TMP_53 Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
TMP_54(uint256) = TMP_53 (c)+ x_2
Source address: u
[i]Type for TMP_54

Name: TMP_54 Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
TMP_55(uint256) = TMP_54 (c)/ 2
lnorm: u rnorm: 0
lnorm: u rnorm: 0
[i]Type for TMP_55

Name: TMP_55 Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
x_3(uint256) := TMP_55(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_38', 'XY_1'])
Phi
[i]Type for a

Name: a Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
[i] TMP_49 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
End popogation
TMP_49(bool) = a_1 > 3
lnorm: u rnorm: 0
[i]Type for TMP_49

Name: TMP_49 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_56 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
End popogation
TMP_56(bool) = a_1 != 0
[i]Type for TMP_56

Name: TMP_56 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_4, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: c, Num: 4
Globalname: c, contract_name: VaderMath
End popogation
c_4(uint256) := 1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: c_1, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: c, Num: 1
Globalname: c, contract_name: VaderMath
End popogation
c_1(uint256) := a_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_50 cleared
[i] TMP_51 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: VaderMath
End popogation
TMP_50(uint256) = a_1 (c)/ 2
lnorm: u rnorm: 0
lnorm: u rnorm: 0
[i]Type for TMP_50

Name: TMP_50 Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
TMP_51(uint256) = TMP_50 (c)+ 1
Source address: u
[i]Type for TMP_51

Name: TMP_51 Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_51(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
[i] x cleared
[i] TMP_52 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
End popogation
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
c_2(uint256) := ϕ(['c_1', 'c_3'])
Phi

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
x_2(uint256) := ϕ(['x_3', 'x_1'])
Phi

Name: x Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 0
Fields: 
Finance Type: undef

Name: x Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 1
Fields: 
Finance Type: undef


END==================================
[i]Type for x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_52(bool) = x_2 < c_2
lnorm: u rnorm: u
[i]Type for TMP_52

Name: TMP_52 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_3, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 3
Globalname: c, contract_name: VaderMath
End popogation
c_3(uint256) := x_2(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_53 cleared
[i] TMP_54 cleared
[i] TMP_55 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: a_1, name: a

Name: a Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: x_3, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: x, Num: 3
Globalname: x, contract_name: VaderMath
End popogation
TMP_53(uint256) = a_1 (c)/ x_2
lnorm: u rnorm: u
Source address: u
lnorm: u rnorm: u
[i]Type for TMP_53

Name: TMP_53 Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
TMP_54(uint256) = TMP_53 (c)+ x_2
Source address: u
[i]Type for TMP_54

Name: TMP_54 Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
TMP_55(uint256) = TMP_54 (c)/ 2
lnorm: u rnorm: 0
lnorm: u rnorm: 0
[i]Type for TMP_55

Name: TMP_55 Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
x_3(uint256) := TMP_55(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_39

Name: TMP_39 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_40(uint256) = TMP_36 (c)* TMP_39
lnorm: u rnorm: u
[i]Type for TMP_40

Name: TMP_40 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
numeratorA_1(uint256) := TMP_40(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for numeratorA

Name: numeratorA Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_41 cleared
[i] numeratorB cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: reserveIn_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: reserveIn, Num: 1
Globalname: reserveIn, contract_name: VaderMath
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: reserveIn_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: reserveIn, Num: 1
Globalname: reserveIn, contract_name: VaderMath
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: numeratorB_1, name: numeratorB

Name: numeratorB Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: numeratorB, Num: 1
Globalname: numeratorB, contract_name: VaderMath
End popogation
TMP_41(uint256) = y2_1 (c)* reserveIn_1
lnorm: 0 rnorm: u
Source address: u
[i]Type for TMP_41

Name: TMP_41 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
numeratorB_1(uint256) := TMP_41(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for numeratorB

Name: numeratorB Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] numeratorC cleared
Propogating parameters and globals to SSA variables...
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: numeratorC_1, name: numeratorC

Name: numeratorC Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numeratorC, Num: 1
Globalname: numeratorC, contract_name: VaderMath
End popogation
numeratorC_1(uint256) := XY_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for numeratorC

Name: numeratorC Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
[i] TMP_42 cleared
[i] TMP_43 cleared
[i] numerator cleared
Propogating parameters and globals to SSA variables...
Ssa_name: numeratorC_1, name: numeratorC

Name: numeratorC Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: numeratorB_1, name: numeratorB

Name: numeratorB Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: numeratorA_1, name: numeratorA

Name: numeratorA Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numeratorA, Num: 1
Globalname: numeratorA, contract_name: VaderMath
Ssa_name: numeratorC_1, name: numeratorC

Name: numeratorC Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: numeratorB_1, name: numeratorB

Name: numeratorB Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: numeratorA_1, name: numeratorA

Name: numeratorA Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numeratorA, Num: 1
Globalname: numeratorA, contract_name: VaderMath
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: numerator, Num: 1
Globalname: numerator, contract_name: VaderMath
End popogation
TMP_42(uint256) = numeratorC_1 (c)- numeratorA_1
Source address: u
[i]Type for TMP_42

Name: TMP_42 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
TMP_43(uint256) = TMP_42 (c)- numeratorB_1
Source address: u
[i]Type for TMP_43

Name: TMP_43 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
numerator_1(uint256) := TMP_43(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for numerator

Name: numerator Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] denominator cleared
Propogating parameters and globals to SSA variables...
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: denominator, Num: 1
Globalname: denominator, contract_name: VaderMath
End popogation
denominator_1(uint256) := y2_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for denominator

Name: denominator Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] TMP_44 cleared
[i] amountIn cleared
Propogating parameters and globals to SSA variables...
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: amountIn, Num: 1
Globalname: amountIn, contract_name: VaderMath
End popogation
TMP_44(uint256) = numerator_1 (c)/ denominator_1
lnorm: 0 rnorm: 0
lnorm: 0 rnorm: 0
[i]Type for TMP_44

Name: TMP_44 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
amountIn_1(uint256) := TMP_44(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for amountIn

Name: amountIn Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 1
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 1
Fields: 
Finance Type: undef
End popogation
RETURN amountIn_1
RETURN

Name: amountIn Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 1
Fields: 
Finance Type: undef


TMP_31(uint256) = reserveIn_1 (c)* reserveOut_1
XY_1(uint256) := TMP_31(uint256)
TMP_32(uint256) = amountOut_1 (c)* 2
y2_1(uint256) := TMP_32(uint256)
TMP_33(uint256) = y2_1 (c)* 2
y4_1(uint256) := TMP_33(uint256)
TMP_34(bool) = y4_1 < reserveOut_1
TMP_35(None) = SOLIDITY_CALL require(bool,string)(TMP_34,VaderMath::calculateSwapReverse: Desired Output Exceeds Maximum Output Possible (1/4 of Liquidity Pool))
TMP_36(uint256) = INTERNAL_CALL, VaderMath.root(uint256)(XY_1)
TMP_37(uint256) = reserveOut_1 (c)- y4_1
TMP_38(uint256) = reserveIn_1 (c)* TMP_37
TMP_39(uint256) = INTERNAL_CALL, VaderMath.root(uint256)(TMP_38)
TMP_40(uint256) = TMP_36 (c)* TMP_39
numeratorA_1(uint256) := TMP_40(uint256)
TMP_41(uint256) = y2_1 (c)* reserveIn_1
numeratorB_1(uint256) := TMP_41(uint256)
numeratorC_1(uint256) := XY_1(uint256)
TMP_42(uint256) = numeratorC_1 (c)- numeratorA_1
TMP_43(uint256) = TMP_42 (c)- numeratorB_1
numerator_1(uint256) := TMP_43(uint256)
denominator_1(uint256) := y2_1(uint256)
TMP_44(uint256) = numerator_1 (c)/ denominator_1
amountIn_1(uint256) := TMP_44(uint256)
RETURN amountIn_1


Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: reserveIn_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: reserveIn, Num: 1
Globalname: reserveIn, contract_name: VaderMath
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: reserveIn_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: reserveIn, Num: 1
Globalname: reserveIn, contract_name: VaderMath
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
End popogation
TMP_31(uint256) = reserveIn_1 (c)* reserveOut_1
lnorm: u rnorm: 0
[i]Type for TMP_31

Name: TMP_31 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
XY_1(uint256) := TMP_31(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for XY

Name: XY Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: amountOut_1, name: amountOut

Name: amountOut_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountOut_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountOut, Num: 1
Globalname: amountOut, contract_name: VaderMath
Ssa_name: amountOut_1, name: amountOut

Name: amountOut_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountOut_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountOut, Num: 1
Globalname: amountOut, contract_name: VaderMath
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
End popogation
TMP_32(uint256) = amountOut_1 (c)* 2
lnorm: u rnorm: 0
[i]Type for TMP_32

Name: TMP_32 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
y2_1(uint256) := TMP_32(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
End popogation
TMP_33(uint256) = y2_1 (c)* 2
lnorm: 0 rnorm: 0
Source address: u
[i]Type for TMP_33

Name: TMP_33 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
y4_1(uint256) := TMP_33(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
End popogation
TMP_34(bool) = y4_1 < reserveOut_1
lnorm: 0 rnorm: 0
[i]Type for TMP_34

Name: TMP_34 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_35(None) = SOLIDITY_CALL require(bool,string)(TMP_34,VaderMath::calculateSwapReverse: Desired Output Exceeds Maximum Output Possible (1/4 of Liquidity Pool))
[i]Type for TMP_35

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: reserveIn_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: reserveIn, Num: 1
Globalname: reserveIn, contract_name: VaderMath
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: reserveIn_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: reserveIn, Num: 1
Globalname: reserveIn, contract_name: VaderMath
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: numeratorA_1, name: numeratorA

Name: numeratorA Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numeratorA, Num: 1
Globalname: numeratorA, contract_name: VaderMath
End popogation
TMP_36(uint256) = INTERNAL_CALL, VaderMath.root(uint256)(XY_1)
New param cache [[[-1], [-1], 0, None, [], -1, 'u', 4]]
Old param cache: [[[], [], 'u', None, [], -1, 'u']]
[[-1], [-1], 0, None, [], -1, 'u', 4]

Name: a Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
root(uint256)
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
Propogating All
c_2
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
Propogating All
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_38', 'XY_1'])
Phi
[i]Type for a

Name: a Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
[i] TMP_49 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
End popogation
TMP_49(bool) = a_1 > 3
lnorm: 0 rnorm: 0
[i]Type for TMP_49

Name: TMP_49 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_56 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
End popogation
TMP_56(bool) = a_1 != 0
[i]Type for TMP_56

Name: TMP_56 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_4, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: c, Num: 4
Globalname: c, contract_name: VaderMath
End popogation
c_4(uint256) := 1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: c_1, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: c, Num: 1
Globalname: c, contract_name: VaderMath
End popogation
c_1(uint256) := a_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_50 cleared
[i] TMP_51 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: VaderMath
End popogation
TMP_50(uint256) = a_1 (c)/ 2
lnorm: 0 rnorm: 0
lnorm: 0 rnorm: 0
[i]Type for TMP_50

Name: TMP_50 Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_51(uint256) = TMP_50 (c)+ 1
Source address: u
[i]Type for TMP_51

Name: TMP_51 Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_51(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
[i] x cleared
[i] TMP_52 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
End popogation
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
c_2(uint256) := ϕ(['c_1', 'c_3'])
Phi

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
x_2(uint256) := ϕ(['x_3', 'x_1'])
Phi

Name: x Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 0
Fields: 
Finance Type: undef

Name: x Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
[i]Type for x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_52(bool) = x_2 < c_2
lnorm: u rnorm: u
[i]Type for TMP_52

Name: TMP_52 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_3, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 3
Globalname: c, contract_name: VaderMath
End popogation
c_3(uint256) := x_2(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_53 cleared
[i] TMP_54 cleared
[i] TMP_55 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: a_1, name: a

Name: a Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: x_3, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: x, Num: 3
Globalname: x, contract_name: VaderMath
End popogation
TMP_53(uint256) = a_1 (c)/ x_2
lnorm: 0 rnorm: u
Source address: u
lnorm: 0 rnorm: u
[i]Type for TMP_53

Name: TMP_53 Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
TMP_54(uint256) = TMP_53 (c)+ x_2
Source address: u
[i]Type for TMP_54

Name: TMP_54 Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
TMP_55(uint256) = TMP_54 (c)/ 2
lnorm: 0 rnorm: 0
lnorm: 0 rnorm: 0
[i]Type for TMP_55

Name: TMP_55 Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
x_3(uint256) := TMP_55(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_38', 'XY_1'])
Phi
[i]Type for a

Name: a Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
[i] TMP_49 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
End popogation
TMP_49(bool) = a_1 > 3
lnorm: 0 rnorm: 0
[i]Type for TMP_49

Name: TMP_49 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_56 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
End popogation
TMP_56(bool) = a_1 != 0
[i]Type for TMP_56

Name: TMP_56 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_4, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: c, Num: 4
Globalname: c, contract_name: VaderMath
End popogation
c_4(uint256) := 1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: c_1, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 1
Globalname: c, contract_name: VaderMath
End popogation
c_1(uint256) := a_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_50 cleared
[i] TMP_51 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: VaderMath
End popogation
TMP_50(uint256) = a_1 (c)/ 2
lnorm: 0 rnorm: 0
lnorm: 0 rnorm: 0
[i]Type for TMP_50

Name: TMP_50 Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_51(uint256) = TMP_50 (c)+ 1
Source address: u
[i]Type for TMP_51

Name: TMP_51 Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_51(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
[i] x cleared
[i] TMP_52 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
End popogation
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
c_2(uint256) := ϕ(['c_1', 'c_3'])
Phi

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
x_2(uint256) := ϕ(['x_3', 'x_1'])
Phi

Name: x Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef

Name: x Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
[i]Type for x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_52(bool) = x_2 < c_2
lnorm: u rnorm: u
[i]Type for TMP_52

Name: TMP_52 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_3, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 3
Globalname: c, contract_name: VaderMath
End popogation
c_3(uint256) := x_2(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_53 cleared
[i] TMP_54 cleared
[i] TMP_55 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: a_1, name: a

Name: a Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: x_3, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 3
Globalname: x, contract_name: VaderMath
End popogation
TMP_53(uint256) = a_1 (c)/ x_2
lnorm: 0 rnorm: u
Source address: u
lnorm: 0 rnorm: u
[i]Type for TMP_53

Name: TMP_53 Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
TMP_54(uint256) = TMP_53 (c)+ x_2
Source address: u
[i]Type for TMP_54

Name: TMP_54 Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
TMP_55(uint256) = TMP_54 (c)/ 2
lnorm: 0 rnorm: 0
lnorm: 0 rnorm: 0
[i]Type for TMP_55

Name: TMP_55 Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
x_3(uint256) := TMP_55(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_36

Name: TMP_36 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_37(uint256) = reserveOut_1 (c)- y4_1
Source address: u
[i]Type for TMP_37

Name: TMP_37 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
TMP_38(uint256) = reserveIn_1 (c)* TMP_37
lnorm: u rnorm: u
[i]Type for TMP_38

Name: TMP_38 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
TMP_39(uint256) = INTERNAL_CALL, VaderMath.root(uint256)(TMP_38)
New param cache [[[-1], [-1], 'u', None, [], -1, 'u', 0]]
Old param cache: [[[], [], 'u', None, [], -1, 'u']]
[[-1], [-1], 'u', None, [], -1, 'u', 0]

Name: a Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
root(uint256)
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Copied ftype
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
Propogating All
c_2
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
Propogating All
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Copied ftype
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_38', 'XY_1'])
Phi
[i]Type for a

Name: a Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
[i] TMP_49 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
End popogation
TMP_49(bool) = a_1 > 3
lnorm: u rnorm: 0
[i]Type for TMP_49

Name: TMP_49 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_56 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
End popogation
TMP_56(bool) = a_1 != 0
[i]Type for TMP_56

Name: TMP_56 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_4, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: c, Num: 4
Globalname: c, contract_name: VaderMath
End popogation
c_4(uint256) := 1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: c_1, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 1
Globalname: c, contract_name: VaderMath
End popogation
c_1(uint256) := a_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_50 cleared
[i] TMP_51 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: VaderMath
End popogation
TMP_50(uint256) = a_1 (c)/ 2
lnorm: u rnorm: 0
lnorm: u rnorm: 0
[i]Type for TMP_50

Name: TMP_50 Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
TMP_51(uint256) = TMP_50 (c)+ 1
Source address: u
[i]Type for TMP_51

Name: TMP_51 Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_51(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
[i] x cleared
[i] TMP_52 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
End popogation
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
c_2(uint256) := ϕ(['c_1', 'c_3'])
Phi

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
x_2(uint256) := ϕ(['x_3', 'x_1'])
Phi

Name: x Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef

Name: x Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 1
Fields: 
Finance Type: undef


END==================================
[i]Type for x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_52(bool) = x_2 < c_2
lnorm: u rnorm: u
[i]Type for TMP_52

Name: TMP_52 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_3, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 3
Globalname: c, contract_name: VaderMath
End popogation
c_3(uint256) := x_2(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_53 cleared
[i] TMP_54 cleared
[i] TMP_55 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: a_1, name: a

Name: a Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: x_3, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 3
Globalname: x, contract_name: VaderMath
End popogation
TMP_53(uint256) = a_1 (c)/ x_2
lnorm: u rnorm: u
Source address: u
lnorm: u rnorm: u
[i]Type for TMP_53

Name: TMP_53 Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
TMP_54(uint256) = TMP_53 (c)+ x_2
Source address: u
[i]Type for TMP_54

Name: TMP_54 Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
TMP_55(uint256) = TMP_54 (c)/ 2
lnorm: u rnorm: 0
lnorm: u rnorm: 0
[i]Type for TMP_55

Name: TMP_55 Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
x_3(uint256) := TMP_55(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_38', 'XY_1'])
Phi
[i]Type for a

Name: a Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
[i] TMP_49 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
End popogation
TMP_49(bool) = a_1 > 3
lnorm: u rnorm: 0
[i]Type for TMP_49

Name: TMP_49 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_56 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
End popogation
TMP_56(bool) = a_1 != 0
[i]Type for TMP_56

Name: TMP_56 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_4, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: c, Num: 4
Globalname: c, contract_name: VaderMath
End popogation
c_4(uint256) := 1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: c_1, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: c, Num: 1
Globalname: c, contract_name: VaderMath
End popogation
c_1(uint256) := a_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_50 cleared
[i] TMP_51 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: VaderMath
End popogation
TMP_50(uint256) = a_1 (c)/ 2
lnorm: u rnorm: 0
lnorm: u rnorm: 0
[i]Type for TMP_50

Name: TMP_50 Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
TMP_51(uint256) = TMP_50 (c)+ 1
Source address: u
[i]Type for TMP_51

Name: TMP_51 Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_51(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
[i] x cleared
[i] TMP_52 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
End popogation
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
c_2(uint256) := ϕ(['c_1', 'c_3'])
Phi

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
x_2(uint256) := ϕ(['x_3', 'x_1'])
Phi

Name: x Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 0
Fields: 
Finance Type: undef

Name: x Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 1
Fields: 
Finance Type: undef


END==================================
[i]Type for x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_52(bool) = x_2 < c_2
lnorm: u rnorm: u
[i]Type for TMP_52

Name: TMP_52 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_3, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 3
Globalname: c, contract_name: VaderMath
End popogation
c_3(uint256) := x_2(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_53 cleared
[i] TMP_54 cleared
[i] TMP_55 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: a_1, name: a

Name: a Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: x_3, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: x, Num: 3
Globalname: x, contract_name: VaderMath
End popogation
TMP_53(uint256) = a_1 (c)/ x_2
lnorm: u rnorm: u
Source address: u
lnorm: u rnorm: u
[i]Type for TMP_53

Name: TMP_53 Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
TMP_54(uint256) = TMP_53 (c)+ x_2
Source address: u
[i]Type for TMP_54

Name: TMP_54 Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
TMP_55(uint256) = TMP_54 (c)/ 2
lnorm: u rnorm: 0
lnorm: u rnorm: 0
[i]Type for TMP_55

Name: TMP_55 Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
x_3(uint256) := TMP_55(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_39

Name: TMP_39 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_40(uint256) = TMP_36 (c)* TMP_39
lnorm: u rnorm: u
[i]Type for TMP_40

Name: TMP_40 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
numeratorA_1(uint256) := TMP_40(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for numeratorA

Name: numeratorA Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: reserveIn_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: reserveIn, Num: 1
Globalname: reserveIn, contract_name: VaderMath
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: reserveIn_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: reserveIn, Num: 1
Globalname: reserveIn, contract_name: VaderMath
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: numeratorB_1, name: numeratorB

Name: numeratorB Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
End popogation
TMP_41(uint256) = y2_1 (c)* reserveIn_1
lnorm: 0 rnorm: u
[i]Type for TMP_41

Name: TMP_41 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
numeratorB_1(uint256) := TMP_41(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for numeratorB

Name: numeratorB Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: numeratorC_1, name: numeratorC

Name: numeratorC Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
End popogation
numeratorC_1(uint256) := XY_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for numeratorC

Name: numeratorC Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: numeratorC_1, name: numeratorC

Name: numeratorC Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: numeratorB_1, name: numeratorB

Name: numeratorB Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: numeratorA_1, name: numeratorA

Name: numeratorA Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numeratorA, Num: 1
Globalname: numeratorA, contract_name: VaderMath
Ssa_name: numeratorC_1, name: numeratorC

Name: numeratorC Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: numeratorB_1, name: numeratorB

Name: numeratorB Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: numeratorA_1, name: numeratorA

Name: numeratorA Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numeratorA, Num: 1
Globalname: numeratorA, contract_name: VaderMath
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
End popogation
TMP_42(uint256) = numeratorC_1 (c)- numeratorA_1
Source address: u
[i]Type for TMP_42

Name: TMP_42 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
TMP_43(uint256) = TMP_42 (c)- numeratorB_1
Source address: u
[i]Type for TMP_43

Name: TMP_43 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
numerator_1(uint256) := TMP_43(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for numerator

Name: numerator Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
End popogation
denominator_1(uint256) := y2_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for denominator

Name: denominator Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 1
Fields: 
Finance Type: undef
End popogation
TMP_44(uint256) = numerator_1 (c)/ denominator_1
lnorm: 0 rnorm: 0
lnorm: 0 rnorm: 0
[i]Type for TMP_44

Name: TMP_44 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
amountIn_1(uint256) := TMP_44(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for amountIn

Name: amountIn Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 1
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 1
Fields: 
Finance Type: undef
End popogation
RETURN amountIn_1
RETURN

Name: amountIn Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 1
Fields: 
Finance Type: undef


TMP_31(uint256) = reserveIn_1 (c)* reserveOut_1
XY_1(uint256) := TMP_31(uint256)
TMP_32(uint256) = amountOut_1 (c)* 2
y2_1(uint256) := TMP_32(uint256)
TMP_33(uint256) = y2_1 (c)* 2
y4_1(uint256) := TMP_33(uint256)
TMP_34(bool) = y4_1 < reserveOut_1
TMP_35(None) = SOLIDITY_CALL require(bool,string)(TMP_34,VaderMath::calculateSwapReverse: Desired Output Exceeds Maximum Output Possible (1/4 of Liquidity Pool))
TMP_36(uint256) = INTERNAL_CALL, VaderMath.root(uint256)(XY_1)
TMP_37(uint256) = reserveOut_1 (c)- y4_1
TMP_38(uint256) = reserveIn_1 (c)* TMP_37
TMP_39(uint256) = INTERNAL_CALL, VaderMath.root(uint256)(TMP_38)
TMP_40(uint256) = TMP_36 (c)* TMP_39
numeratorA_1(uint256) := TMP_40(uint256)
TMP_41(uint256) = y2_1 (c)* reserveIn_1
numeratorB_1(uint256) := TMP_41(uint256)
numeratorC_1(uint256) := XY_1(uint256)
TMP_42(uint256) = numeratorC_1 (c)- numeratorA_1
TMP_43(uint256) = TMP_42 (c)- numeratorB_1
numerator_1(uint256) := TMP_43(uint256)
denominator_1(uint256) := y2_1(uint256)
TMP_44(uint256) = numerator_1 (c)/ denominator_1
amountIn_1(uint256) := TMP_44(uint256)
RETURN amountIn_1


Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: reserveIn_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: reserveIn, Num: 1
Globalname: reserveIn, contract_name: VaderMath
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: reserveIn_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: reserveIn, Num: 1
Globalname: reserveIn, contract_name: VaderMath
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
End popogation
TMP_31(uint256) = reserveIn_1 (c)* reserveOut_1
lnorm: u rnorm: 0
[i]Type for TMP_31

Name: TMP_31 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
XY_1(uint256) := TMP_31(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for XY

Name: XY Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: amountOut_1, name: amountOut

Name: amountOut_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountOut_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountOut, Num: 1
Globalname: amountOut, contract_name: VaderMath
Ssa_name: amountOut_1, name: amountOut

Name: amountOut_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountOut_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountOut, Num: 1
Globalname: amountOut, contract_name: VaderMath
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
End popogation
TMP_32(uint256) = amountOut_1 (c)* 2
lnorm: u rnorm: 0
[i]Type for TMP_32

Name: TMP_32 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
y2_1(uint256) := TMP_32(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
End popogation
TMP_33(uint256) = y2_1 (c)* 2
lnorm: 0 rnorm: 0
Source address: u
[i]Type for TMP_33

Name: TMP_33 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
y4_1(uint256) := TMP_33(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
End popogation
TMP_34(bool) = y4_1 < reserveOut_1
lnorm: 0 rnorm: 0
[i]Type for TMP_34

Name: TMP_34 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_35(None) = SOLIDITY_CALL require(bool,string)(TMP_34,VaderMath::calculateSwapReverse: Desired Output Exceeds Maximum Output Possible (1/4 of Liquidity Pool))
[i]Type for TMP_35

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: reserveIn_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: reserveIn, Num: 1
Globalname: reserveIn, contract_name: VaderMath
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: reserveIn_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: reserveIn, Num: 1
Globalname: reserveIn, contract_name: VaderMath
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: numeratorA_1, name: numeratorA

Name: numeratorA Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numeratorA, Num: 1
Globalname: numeratorA, contract_name: VaderMath
End popogation
TMP_36(uint256) = INTERNAL_CALL, VaderMath.root(uint256)(XY_1)
New param cache [[[-1], [-1], 0, None, [], -1, 'u', 4]]
Old param cache: [[[], [], 'u', None, [], -1, 'u']]
[[-1], [-1], 0, None, [], -1, 'u', 4]

Name: a Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
root(uint256)
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
Propogating All
c_2
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
Propogating All
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_38', 'XY_1'])
Phi
[i]Type for a

Name: a Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
[i] TMP_49 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
End popogation
TMP_49(bool) = a_1 > 3
lnorm: 0 rnorm: 0
[i]Type for TMP_49

Name: TMP_49 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_56 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
End popogation
TMP_56(bool) = a_1 != 0
[i]Type for TMP_56

Name: TMP_56 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_4, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: c, Num: 4
Globalname: c, contract_name: VaderMath
End popogation
c_4(uint256) := 1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: c_1, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: c, Num: 1
Globalname: c, contract_name: VaderMath
End popogation
c_1(uint256) := a_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_50 cleared
[i] TMP_51 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: VaderMath
End popogation
TMP_50(uint256) = a_1 (c)/ 2
lnorm: 0 rnorm: 0
lnorm: 0 rnorm: 0
[i]Type for TMP_50

Name: TMP_50 Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_51(uint256) = TMP_50 (c)+ 1
Source address: u
[i]Type for TMP_51

Name: TMP_51 Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_51(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
[i] x cleared
[i] TMP_52 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
End popogation
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
c_2(uint256) := ϕ(['c_1', 'c_3'])
Phi

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
x_2(uint256) := ϕ(['x_3', 'x_1'])
Phi

Name: x Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 0
Fields: 
Finance Type: undef

Name: x Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
[i]Type for x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_52(bool) = x_2 < c_2
lnorm: u rnorm: u
[i]Type for TMP_52

Name: TMP_52 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_3, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 3
Globalname: c, contract_name: VaderMath
End popogation
c_3(uint256) := x_2(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_53 cleared
[i] TMP_54 cleared
[i] TMP_55 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: a_1, name: a

Name: a Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: x_3, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: x, Num: 3
Globalname: x, contract_name: VaderMath
End popogation
TMP_53(uint256) = a_1 (c)/ x_2
lnorm: 0 rnorm: u
Source address: u
lnorm: 0 rnorm: u
[i]Type for TMP_53

Name: TMP_53 Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
TMP_54(uint256) = TMP_53 (c)+ x_2
Source address: u
[i]Type for TMP_54

Name: TMP_54 Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
TMP_55(uint256) = TMP_54 (c)/ 2
lnorm: 0 rnorm: 0
lnorm: 0 rnorm: 0
[i]Type for TMP_55

Name: TMP_55 Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
x_3(uint256) := TMP_55(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_38', 'XY_1'])
Phi
[i]Type for a

Name: a Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
[i] TMP_49 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
End popogation
TMP_49(bool) = a_1 > 3
lnorm: 0 rnorm: 0
[i]Type for TMP_49

Name: TMP_49 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_56 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
End popogation
TMP_56(bool) = a_1 != 0
[i]Type for TMP_56

Name: TMP_56 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_4, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: c, Num: 4
Globalname: c, contract_name: VaderMath
End popogation
c_4(uint256) := 1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: c_1, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 1
Globalname: c, contract_name: VaderMath
End popogation
c_1(uint256) := a_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_50 cleared
[i] TMP_51 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: VaderMath
End popogation
TMP_50(uint256) = a_1 (c)/ 2
lnorm: 0 rnorm: 0
lnorm: 0 rnorm: 0
[i]Type for TMP_50

Name: TMP_50 Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_51(uint256) = TMP_50 (c)+ 1
Source address: u
[i]Type for TMP_51

Name: TMP_51 Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_51(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
[i] x cleared
[i] TMP_52 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
End popogation
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
c_2(uint256) := ϕ(['c_1', 'c_3'])
Phi

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
x_2(uint256) := ϕ(['x_3', 'x_1'])
Phi

Name: x Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef

Name: x Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
[i]Type for x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_52(bool) = x_2 < c_2
lnorm: u rnorm: u
[i]Type for TMP_52

Name: TMP_52 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_3, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 3
Globalname: c, contract_name: VaderMath
End popogation
c_3(uint256) := x_2(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_53 cleared
[i] TMP_54 cleared
[i] TMP_55 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: a_1, name: a

Name: a Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: x_3, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 3
Globalname: x, contract_name: VaderMath
End popogation
TMP_53(uint256) = a_1 (c)/ x_2
lnorm: 0 rnorm: u
Source address: u
lnorm: 0 rnorm: u
[i]Type for TMP_53

Name: TMP_53 Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
TMP_54(uint256) = TMP_53 (c)+ x_2
Source address: u
[i]Type for TMP_54

Name: TMP_54 Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
TMP_55(uint256) = TMP_54 (c)/ 2
lnorm: 0 rnorm: 0
lnorm: 0 rnorm: 0
[i]Type for TMP_55

Name: TMP_55 Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
x_3(uint256) := TMP_55(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_36

Name: TMP_36 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_37(uint256) = reserveOut_1 (c)- y4_1
Source address: u
[i]Type for TMP_37

Name: TMP_37 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
TMP_38(uint256) = reserveIn_1 (c)* TMP_37
lnorm: u rnorm: u
[i]Type for TMP_38

Name: TMP_38 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
TMP_39(uint256) = INTERNAL_CALL, VaderMath.root(uint256)(TMP_38)
New param cache [[[-1], [-1], 'u', None, [], -1, 'u', 0]]
Old param cache: [[[], [], 'u', None, [], -1, 'u']]
[[-1], [-1], 'u', None, [], -1, 'u', 0]

Name: a Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
root(uint256)
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Copied ftype
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
Propogating All
c_2
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
Propogating All
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Copied ftype
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_38', 'XY_1'])
Phi
[i]Type for a

Name: a Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
[i] TMP_49 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
End popogation
TMP_49(bool) = a_1 > 3
lnorm: u rnorm: 0
[i]Type for TMP_49

Name: TMP_49 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_56 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
End popogation
TMP_56(bool) = a_1 != 0
[i]Type for TMP_56

Name: TMP_56 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_4, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: c, Num: 4
Globalname: c, contract_name: VaderMath
End popogation
c_4(uint256) := 1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: c_1, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 1
Globalname: c, contract_name: VaderMath
End popogation
c_1(uint256) := a_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_50 cleared
[i] TMP_51 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: VaderMath
End popogation
TMP_50(uint256) = a_1 (c)/ 2
lnorm: u rnorm: 0
lnorm: u rnorm: 0
[i]Type for TMP_50

Name: TMP_50 Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
TMP_51(uint256) = TMP_50 (c)+ 1
Source address: u
[i]Type for TMP_51

Name: TMP_51 Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_51(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
[i] x cleared
[i] TMP_52 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
End popogation
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
c_2(uint256) := ϕ(['c_1', 'c_3'])
Phi

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
x_2(uint256) := ϕ(['x_3', 'x_1'])
Phi

Name: x Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef

Name: x Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 1
Fields: 
Finance Type: undef


END==================================
[i]Type for x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_52(bool) = x_2 < c_2
lnorm: u rnorm: u
[i]Type for TMP_52

Name: TMP_52 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_3, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 3
Globalname: c, contract_name: VaderMath
End popogation
c_3(uint256) := x_2(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_53 cleared
[i] TMP_54 cleared
[i] TMP_55 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: a_1, name: a

Name: a Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: x_3, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 3
Globalname: x, contract_name: VaderMath
End popogation
TMP_53(uint256) = a_1 (c)/ x_2
lnorm: u rnorm: u
Source address: u
lnorm: u rnorm: u
[i]Type for TMP_53

Name: TMP_53 Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
TMP_54(uint256) = TMP_53 (c)+ x_2
Source address: u
[i]Type for TMP_54

Name: TMP_54 Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
TMP_55(uint256) = TMP_54 (c)/ 2
lnorm: u rnorm: 0
lnorm: u rnorm: 0
[i]Type for TMP_55

Name: TMP_55 Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
x_3(uint256) := TMP_55(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_38', 'XY_1'])
Phi
[i]Type for a

Name: a Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
[i] TMP_49 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
End popogation
TMP_49(bool) = a_1 > 3
lnorm: u rnorm: 0
[i]Type for TMP_49

Name: TMP_49 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_56 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
End popogation
TMP_56(bool) = a_1 != 0
[i]Type for TMP_56

Name: TMP_56 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_4, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: c, Num: 4
Globalname: c, contract_name: VaderMath
End popogation
c_4(uint256) := 1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: c_1, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: c, Num: 1
Globalname: c, contract_name: VaderMath
End popogation
c_1(uint256) := a_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_50 cleared
[i] TMP_51 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: VaderMath
End popogation
TMP_50(uint256) = a_1 (c)/ 2
lnorm: u rnorm: 0
lnorm: u rnorm: 0
[i]Type for TMP_50

Name: TMP_50 Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
TMP_51(uint256) = TMP_50 (c)+ 1
Source address: u
[i]Type for TMP_51

Name: TMP_51 Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_51(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
[i] x cleared
[i] TMP_52 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
End popogation
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
c_2(uint256) := ϕ(['c_1', 'c_3'])
Phi

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
x_2(uint256) := ϕ(['x_3', 'x_1'])
Phi

Name: x Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 0
Fields: 
Finance Type: undef

Name: x Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 1
Fields: 
Finance Type: undef


END==================================
[i]Type for x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_52(bool) = x_2 < c_2
lnorm: u rnorm: u
[i]Type for TMP_52

Name: TMP_52 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_3, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 3
Globalname: c, contract_name: VaderMath
End popogation
c_3(uint256) := x_2(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_53 cleared
[i] TMP_54 cleared
[i] TMP_55 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: a_1, name: a

Name: a Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: x_3, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: x, Num: 3
Globalname: x, contract_name: VaderMath
End popogation
TMP_53(uint256) = a_1 (c)/ x_2
lnorm: u rnorm: u
Source address: u
lnorm: u rnorm: u
[i]Type for TMP_53

Name: TMP_53 Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
TMP_54(uint256) = TMP_53 (c)+ x_2
Source address: u
[i]Type for TMP_54

Name: TMP_54 Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
TMP_55(uint256) = TMP_54 (c)/ 2
lnorm: u rnorm: 0
lnorm: u rnorm: 0
[i]Type for TMP_55

Name: TMP_55 Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
x_3(uint256) := TMP_55(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_39

Name: TMP_39 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_40(uint256) = TMP_36 (c)* TMP_39
lnorm: u rnorm: u
[i]Type for TMP_40

Name: TMP_40 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
numeratorA_1(uint256) := TMP_40(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for numeratorA

Name: numeratorA Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: reserveIn_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: reserveIn, Num: 1
Globalname: reserveIn, contract_name: VaderMath
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: reserveIn_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: reserveIn, Num: 1
Globalname: reserveIn, contract_name: VaderMath
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: numeratorB_1, name: numeratorB

Name: numeratorB Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
End popogation
TMP_41(uint256) = y2_1 (c)* reserveIn_1
lnorm: 0 rnorm: u
[i]Type for TMP_41

Name: TMP_41 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
numeratorB_1(uint256) := TMP_41(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for numeratorB

Name: numeratorB Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: numeratorC_1, name: numeratorC

Name: numeratorC Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
End popogation
numeratorC_1(uint256) := XY_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for numeratorC

Name: numeratorC Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: numeratorC_1, name: numeratorC

Name: numeratorC Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: numeratorB_1, name: numeratorB

Name: numeratorB Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: numeratorA_1, name: numeratorA

Name: numeratorA Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numeratorA, Num: 1
Globalname: numeratorA, contract_name: VaderMath
Ssa_name: numeratorC_1, name: numeratorC

Name: numeratorC Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: numeratorB_1, name: numeratorB

Name: numeratorB Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: numeratorA_1, name: numeratorA

Name: numeratorA Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numeratorA, Num: 1
Globalname: numeratorA, contract_name: VaderMath
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
End popogation
TMP_42(uint256) = numeratorC_1 (c)- numeratorA_1
Source address: u
[i]Type for TMP_42

Name: TMP_42 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
TMP_43(uint256) = TMP_42 (c)- numeratorB_1
Source address: u
[i]Type for TMP_43

Name: TMP_43 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
numerator_1(uint256) := TMP_43(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for numerator

Name: numerator Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
End popogation
denominator_1(uint256) := y2_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for denominator

Name: denominator Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 1
Fields: 
Finance Type: undef
End popogation
TMP_44(uint256) = numerator_1 (c)/ denominator_1
lnorm: 0 rnorm: 0
lnorm: 0 rnorm: 0
[i]Type for TMP_44

Name: TMP_44 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
amountIn_1(uint256) := TMP_44(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for amountIn

Name: amountIn Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 1
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 1
Fields: 
Finance Type: undef
End popogation
RETURN amountIn_1
RETURN

Name: amountIn Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 1
Fields: 
Finance Type: undef
Source address: u
Reading Function: delta
Checking funcion...



delta
Function name: delta
Finding type for a(uint256 ... )
Value: u
Finding type for b(uint256 ... )
Value: u
New param cache [[[-1], [-1], 'u', None, [], -1, 'u', 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[], [], 'u', None, [], -1, 'u'], [[], [], 'u', None, [], -1, 'u']]
FIND RETURN
ENTRY_POINT
delta(uint256,uint256)


a_1(uint256) := ϕ(['vaderAsset_1'])
b_1(uint256) := ϕ(['assetVader_1'])
TMP_45(bool) = a_1 > b_1
CONDITION TMP_45
TMP_47(uint256) = b_1 (c)- a_1
RETURN TMP_47
TMP_46(uint256) = a_1 (c)- b_1
RETURN TMP_46


[i] a cleared
[i] b cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a_1 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: a, Num: 1
Globalname: a, contract_name: VaderMath
Ssa_name: b_1, name: b

Name: b_1 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: b_1 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: b, Num: 1
Globalname: b, contract_name: VaderMath
a_1(uint256) := ϕ(['vaderAsset_1'])
Phi

Name: vaderAsset Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for a

Name: a Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
b_1(uint256) := ϕ(['assetVader_1'])
Phi

Name: assetVader Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for b

Name: b Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_45 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: b_1, name: b

Name: b Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: b_1 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: b, Num: 1
Globalname: b, contract_name: VaderMath
Ssa_name: a_1, name: a

Name: a Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: a, Num: 1
Globalname: a, contract_name: VaderMath
Ssa_name: b_1, name: b

Name: b_1 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: b_1 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: b, Num: 1
Globalname: b, contract_name: VaderMath
Ssa_name: a_1, name: a

Name: a_1 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: a, Num: 1
Globalname: a, contract_name: VaderMath
End popogation
TMP_45(bool) = a_1 > b_1
lnorm: u rnorm: u
[i]Type for TMP_45

Name: TMP_45 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_47 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: b_1, name: b

Name: b_1 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: b_1 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: b, Num: 1
Globalname: b, contract_name: VaderMath
Ssa_name: a_1, name: a

Name: a_1 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: a, Num: 1
Globalname: a, contract_name: VaderMath
Ssa_name: b_1, name: b

Name: b_1 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: b_1 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: b, Num: 1
Globalname: b, contract_name: VaderMath
Ssa_name: a_1, name: a

Name: a_1 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: a, Num: 1
Globalname: a, contract_name: VaderMath
End popogation
TMP_47(uint256) = b_1 (c)- a_1
[i]Type for TMP_47

Name: TMP_47 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_47
RETURN

Name: TMP_47 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] TMP_46 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: b_1, name: b

Name: b_1 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: b_1 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: b, Num: 1
Globalname: b, contract_name: VaderMath
Ssa_name: a_1, name: a

Name: a_1 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: a, Num: 1
Globalname: a, contract_name: VaderMath
Ssa_name: b_1, name: b

Name: b_1 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: b_1 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: b, Num: 1
Globalname: b, contract_name: VaderMath
Ssa_name: a_1, name: a

Name: a_1 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: a, Num: 1
Globalname: a, contract_name: VaderMath
End popogation
TMP_46(uint256) = a_1 (c)- b_1
[i]Type for TMP_46

Name: TMP_46 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_46
RETURN

Name: TMP_46 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


a_1(uint256) := ϕ(['vaderAsset_1'])
b_1(uint256) := ϕ(['assetVader_1'])
TMP_45(bool) = a_1 > b_1
CONDITION TMP_45
TMP_47(uint256) = b_1 (c)- a_1
RETURN TMP_47
TMP_46(uint256) = a_1 (c)- b_1
RETURN TMP_46


[i] a cleared
[i] b cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a_1 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: a, Num: 1
Globalname: a, contract_name: VaderMath
Ssa_name: b_1, name: b

Name: b_1 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: b_1 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: b, Num: 1
Globalname: b, contract_name: VaderMath
a_1(uint256) := ϕ(['vaderAsset_1'])
Phi

Name: vaderAsset Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for a

Name: a Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
b_1(uint256) := ϕ(['assetVader_1'])
Phi

Name: assetVader Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for b

Name: b Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_45 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: b_1, name: b

Name: b Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: b_1 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: b, Num: 1
Globalname: b, contract_name: VaderMath
Ssa_name: a_1, name: a

Name: a Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: a, Num: 1
Globalname: a, contract_name: VaderMath
Ssa_name: b_1, name: b

Name: b_1 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: b_1 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: b, Num: 1
Globalname: b, contract_name: VaderMath
Ssa_name: a_1, name: a

Name: a_1 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: a, Num: 1
Globalname: a, contract_name: VaderMath
End popogation
TMP_45(bool) = a_1 > b_1
lnorm: u rnorm: u
[i]Type for TMP_45

Name: TMP_45 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_47 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: b_1, name: b

Name: b_1 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: b_1 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: b, Num: 1
Globalname: b, contract_name: VaderMath
Ssa_name: a_1, name: a

Name: a_1 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: a, Num: 1
Globalname: a, contract_name: VaderMath
Ssa_name: b_1, name: b

Name: b_1 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: b_1 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: b, Num: 1
Globalname: b, contract_name: VaderMath
Ssa_name: a_1, name: a

Name: a_1 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: a, Num: 1
Globalname: a, contract_name: VaderMath
End popogation
TMP_47(uint256) = b_1 (c)- a_1
[i]Type for TMP_47

Name: TMP_47 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_47
RETURN

Name: TMP_47 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] TMP_46 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: b_1, name: b

Name: b_1 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: b_1 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: b, Num: 1
Globalname: b, contract_name: VaderMath
Ssa_name: a_1, name: a

Name: a_1 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: a, Num: 1
Globalname: a, contract_name: VaderMath
Ssa_name: b_1, name: b

Name: b_1 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: b_1 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: b, Num: 1
Globalname: b, contract_name: VaderMath
Ssa_name: a_1, name: a

Name: a_1 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: a, Num: 1
Globalname: a, contract_name: VaderMath
End popogation
TMP_46(uint256) = a_1 (c)- b_1
[i]Type for TMP_46

Name: TMP_46 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_46
RETURN

Name: TMP_46 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Reading Function: pow
Checking funcion...



pow
Function name: pow
Finding type for a(uint256 ... )
Value: u
New param cache [[[-1], [-1], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[], [], 'u', None, [], -1, 'u']]
FIND RETURN
ENTRY_POINT
pow(uint256)


a_1(uint256) := ϕ(['TMP_28'])
TMP_48(uint256) = a_1 (c)* a_1
RETURN TMP_48


[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a_1 Function: pow
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: pow
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: a, Num: 1
Globalname: a, contract_name: VaderMath
a_1(uint256) := ϕ(['TMP_28'])
Phi

Name: TMP_28 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for a

Name: a Function: pow
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_48 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: pow
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: pow
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: a, Num: 1
Globalname: a, contract_name: VaderMath
Ssa_name: a_1, name: a

Name: a_1 Function: pow
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: pow
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: a, Num: 1
Globalname: a, contract_name: VaderMath
End popogation
TMP_48(uint256) = a_1 (c)* a_1
lnorm: u rnorm: u
[i]Type for TMP_48

Name: TMP_48 Function: pow
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_48
RETURN

Name: TMP_48 Function: pow
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


a_1(uint256) := ϕ(['TMP_28'])
TMP_48(uint256) = a_1 (c)* a_1
RETURN TMP_48


[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a_1 Function: pow
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: pow
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: a, Num: 1
Globalname: a, contract_name: VaderMath
a_1(uint256) := ϕ(['TMP_28'])
Phi

Name: TMP_28 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for a

Name: a Function: pow
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_48 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: pow
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: pow
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: a, Num: 1
Globalname: a, contract_name: VaderMath
Ssa_name: a_1, name: a

Name: a_1 Function: pow
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: pow
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: a, Num: 1
Globalname: a, contract_name: VaderMath
End popogation
TMP_48(uint256) = a_1 (c)* a_1
lnorm: u rnorm: u
[i]Type for TMP_48

Name: TMP_48 Function: pow
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_48
RETURN

Name: TMP_48 Function: pow
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Reading Function: root
Checking funcion...



root
Function name: root
Finding type for a(uint256 ... )
Value: 0
New param cache [[[-1], [-1], 'u', None, [], -1, 'u', 0]]
Old param cache: [[[], [], 'u', None, [], -1, 'u']]
FIND RETURN
ENTRY_POINT
root(uint256)


a_1(uint256) := ϕ(['TMP_38', 'XY_1'])
TMP_49(bool) = a_1 > 3
CONDITION TMP_49
TMP_56(bool) = a_1 != 0
CONDITION TMP_56
c_4(uint256) := 1(uint256)
c_1(uint256) := a_1(uint256)
TMP_50(uint256) = a_1 (c)/ 2
TMP_51(uint256) = TMP_50 (c)+ 1
x_1(uint256) := TMP_51(uint256)
c_2(uint256) := ϕ(['c_1', 'c_3'])
x_2(uint256) := ϕ(['x_3', 'x_1'])
TMP_52(bool) = x_2 < c_2
CONDITION TMP_52
c_3(uint256) := x_2(uint256)
TMP_53(uint256) = a_1 (c)/ x_2
TMP_54(uint256) = TMP_53 (c)+ x_2
TMP_55(uint256) = TMP_54 (c)/ 2
x_3(uint256) := TMP_55(uint256)


[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Copied ftype
Name: a, Num: 1
Globalname: a, contract_name: VaderMath
a_1(uint256) := ϕ(['TMP_38', 'XY_1'])
Phi

Name: TMP_38 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef

Name: XY Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef


END==================================
[i]Type for a

Name: a Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
[i] TMP_49 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Copied ftype
Name: a, Num: 1
Globalname: a, contract_name: VaderMath
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Copied ftype
Name: a, Num: 1
Globalname: a, contract_name: VaderMath
End popogation
TMP_49(bool) = a_1 > 3
lnorm: u rnorm: 0
Source address: u
Source address: u
[i]Type for TMP_49

Name: TMP_49 Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_56 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_56(bool) = a_1 != 0
[i]Type for TMP_56

Name: TMP_56 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_4, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: c, Num: 4
Globalname: c, contract_name: VaderMath
End popogation
c_4(uint256) := 1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: c_1, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: c, Num: 1
Globalname: c, contract_name: VaderMath
End popogation
c_1(uint256) := a_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_50 cleared
[i] TMP_51 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: VaderMath
End popogation
TMP_50(uint256) = a_1 (c)/ 2
lnorm: u rnorm: 0
lnorm: u rnorm: 0
[i]Type for TMP_50

Name: TMP_50 Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_51(uint256) = TMP_50 (c)+ 1
Source address: u
[i]Type for TMP_51

Name: TMP_51 Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_51(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
[i] x cleared
[i] TMP_52 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
End popogation
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
c_2(uint256) := ϕ(['c_1', 'c_3'])
Phi

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
x_2(uint256) := ϕ(['x_3', 'x_1'])
Phi

Name: x Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 0
Fields: 
Finance Type: undef

Name: x Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
[i]Type for x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_52(bool) = x_2 < c_2
lnorm: u rnorm: u
[i]Type for TMP_52

Name: TMP_52 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_3, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 3
Globalname: c, contract_name: VaderMath
End popogation
c_3(uint256) := x_2(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_53 cleared
[i] TMP_54 cleared
[i] TMP_55 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: x_3, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: x, Num: 3
Globalname: x, contract_name: VaderMath
End popogation
TMP_53(uint256) = a_1 (c)/ x_2
lnorm: u rnorm: u
Source address: u
lnorm: u rnorm: u
[i]Type for TMP_53

Name: TMP_53 Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_54(uint256) = TMP_53 (c)+ x_2
Source address: u
[i]Type for TMP_54

Name: TMP_54 Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_55(uint256) = TMP_54 (c)/ 2
lnorm: u rnorm: 0
lnorm: u rnorm: 0
[i]Type for TMP_55

Name: TMP_55 Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
x_3(uint256) := TMP_55(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX


a_1(uint256) := ϕ(['TMP_38', 'XY_1'])
TMP_49(bool) = a_1 > 3
CONDITION TMP_49
TMP_56(bool) = a_1 != 0
CONDITION TMP_56
c_4(uint256) := 1(uint256)
c_1(uint256) := a_1(uint256)
TMP_50(uint256) = a_1 (c)/ 2
TMP_51(uint256) = TMP_50 (c)+ 1
x_1(uint256) := TMP_51(uint256)
c_2(uint256) := ϕ(['c_1', 'c_3'])
x_2(uint256) := ϕ(['x_3', 'x_1'])
TMP_52(bool) = x_2 < c_2
CONDITION TMP_52
c_3(uint256) := x_2(uint256)
TMP_53(uint256) = a_1 (c)/ x_2
TMP_54(uint256) = TMP_53 (c)+ x_2
TMP_55(uint256) = TMP_54 (c)/ 2
x_3(uint256) := TMP_55(uint256)


[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Copied ftype
Name: a, Num: 1
Globalname: a, contract_name: VaderMath
a_1(uint256) := ϕ(['TMP_38', 'XY_1'])
Phi

Name: TMP_38 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef

Name: XY Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef


END==================================
[i]Type for a

Name: a Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
[i] TMP_49 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Copied ftype
Name: a, Num: 1
Globalname: a, contract_name: VaderMath
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Copied ftype
Name: a, Num: 1
Globalname: a, contract_name: VaderMath
End popogation
TMP_49(bool) = a_1 > 3
lnorm: u rnorm: 0
Source address: u
Source address: u
[i]Type for TMP_49

Name: TMP_49 Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_56 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_56(bool) = a_1 != 0
[i]Type for TMP_56

Name: TMP_56 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_4, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: c, Num: 4
Globalname: c, contract_name: VaderMath
End popogation
c_4(uint256) := 1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: c_1, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 1
Globalname: c, contract_name: VaderMath
End popogation
c_1(uint256) := a_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_50 cleared
[i] TMP_51 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: VaderMath
End popogation
TMP_50(uint256) = a_1 (c)/ 2
lnorm: u rnorm: 0
lnorm: u rnorm: 0
[i]Type for TMP_50

Name: TMP_50 Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_51(uint256) = TMP_50 (c)+ 1
Source address: u
[i]Type for TMP_51

Name: TMP_51 Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_51(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
[i] x cleared
[i] TMP_52 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
End popogation
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
c_2(uint256) := ϕ(['c_1', 'c_3'])
Phi

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
x_2(uint256) := ϕ(['x_3', 'x_1'])
Phi

Name: x Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef

Name: x Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
[i]Type for x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_52(bool) = x_2 < c_2
lnorm: u rnorm: u
[i]Type for TMP_52

Name: TMP_52 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_3, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 3
Globalname: c, contract_name: VaderMath
End popogation
c_3(uint256) := x_2(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_53 cleared
[i] TMP_54 cleared
[i] TMP_55 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: x_3, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 3
Globalname: x, contract_name: VaderMath
End popogation
TMP_53(uint256) = a_1 (c)/ x_2
lnorm: u rnorm: u
Source address: u
lnorm: u rnorm: u
[i]Type for TMP_53

Name: TMP_53 Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_54(uint256) = TMP_53 (c)+ x_2
Source address: u
[i]Type for TMP_54

Name: TMP_54 Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_55(uint256) = TMP_54 (c)/ 2
lnorm: u rnorm: 0
lnorm: u rnorm: 0
[i]Type for TMP_55

Name: TMP_55 Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
x_3(uint256) := TMP_55(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
Source address: u
Reading Function: slitherConstructorConstantVariables
Function slitherConstructorConstantVariables not marked
Address: 1, Label: global:_owner
Address: 2, Label: global:_tokenApprovals
Address: 3, Label: global:_owners
Address: -999, Label: swap:to
Head Addr: 1
    Norm: u
    Set: {1}
    Fin: NULL
Head Addr: 2
    Norm: u
    Set: {2}
    Fin: NULL
Head Addr: 3
    Norm: u
    Set: {3}
    Fin: NULL
Head Addr: -999
    Norm: u
    Set: {-999}
    Fin: NULL
Function count: 19
Time elapsed: 0.19822025299072266
Analyzed_contracts_count: 24
total compilations: 5, contracts: 24
contract name: BasePool
Add to address_to_label {'global:_owner': 1, 'global:_tokenApprovals': 2, 'global:_owners': 3, 'swap:to': -999, 'mint:to': -998}
Addr:mint_to : 0
Mark functions Adding: BasePool, constructor, True
[X]No Binary
Mark functions Adding: BasePool, getReserves, True
[X]No Binary
Mark functions Adding: BasePool, name, True
[X]No Binary
Mark functions Adding: BasePool, mint, True
[*]Marked
Mark functions Adding: BasePool, _burn, True
[x] Not visible 
Mark functions Adding: BasePool, swap, True
[X]No Binary
Mark functions Adding: BasePool, swap, True
[*]Marked
Mark functions Adding: BasePool, _update, True
[x] Not visible 
Mark functions Adding: BasePool, slitherConstructorConstantVariables, True
[x] Not visible 
State_var: _balances
Finding type for _balances(mapping(address => uint256) ... )
Value: u
Source address: u
State_var: _NOT_ENTERED
Finding type for _NOT_ENTERED(uint256 ... )
Value: u
Source address: u
State_var: _ENTERED
Finding type for _ENTERED(uint256 ... )
Value: u
Source address: u
State_var: _status
Finding type for _status(uint256 ... )
Value: u
Source address: u
State_var: _owner
Finding type for _owner(address ... )
prev address? u
Head Addr: 1
    Norm: 0
    Set: {1}
    Fin: NULL
Source address: 1
State_var: _owners
Finding type for _owners(mapping(uint256 => address) ... )
prev address? u
Head Addr: 3
    Norm: 0
    Set: {3}
    Fin: NULL
Source address: 3
State_var: _tokenApprovals
Finding type for _tokenApprovals(mapping(uint256 => address) ... )
prev address? u
Head Addr: 2
    Norm: 0
    Set: {2}
    Fin: NULL
Source address: 2
State_var: _symbol
Finding type for _symbol(string ... )
Value: u
Source address: u
State_var: _blockTimestampLast
Finding type for _blockTimestampLast(uint32 ... )
Value: u
Source address: u
State_var: _reserveForeign
Finding type for _reserveForeign(uint112 ... )
Value: u
Source address: u
State_var: _reserveNative
Finding type for _reserveNative(uint112 ... )
Value: u
Source address: u
State_var: _name
Finding type for _name(string ... )
Value: u
Source address: u
State_var: _operatorApprovals
Finding type for _operatorApprovals(mapping(address => mapping(address => bool)) ... )
Value: u
Source address: u
State_var: foreignAsset
Finding type for foreignAsset(IERC20 ... )
Value: u
Source address: u
State_var: nativeAsset
Finding type for nativeAsset(IERC20 ... )
Value: u
Source address: u
State_var: positionId
Finding type for positionId(uint256 ... )
Value: u
Source address: u
State_var: totalSupply
Finding type for totalSupply(uint256 ... )
Value: u
Source address: u
State_var: positions
Finding type for positions(mapping(uint256 => IBasePool.Position) ... )
global
positions
creation
OUT KEY: global_positions_creation
global
positions
liquidity
OUT KEY: global_positions_liquidity
global
positions
originalNative
OUT KEY: global_positions_originalNative
global
positions
originalForeign
OUT KEY: global_positions_originalForeign
Value: u
Source address: u
State_var: _ONE_YEAR
Finding type for _ONE_YEAR(uint256 ... )
Value: u
Source address: u
State_var: priceForeignCumulativeLast
Finding type for priceForeignCumulativeLast(uint256 ... )
Value: u
Source address: u
State_var: priceNativeCumulativeLast
Finding type for priceNativeCumulativeLast(uint256 ... )
Value: u
Source address: u
State_var: ONE
Finding type for ONE(uint256 ... )
Value: u
Source address: u
contract name: GasThrottle
contract name: UQ112x112
contract name: IBasePool
contract name: IAggregator
contract name: IERC20Extended
contract name: VaderMath
Addr:global__owner : 0
Addr:global__tokenApprovals : 0
Addr:global__owners : 0
Addr:swap_to : 0
Mark functions Adding: VaderMath, calculateLiquidityUnits, True
[*]Marked
Mark functions Adding: VaderMath, calculateSlipAdjustment, True
[*]Marked
Mark functions Adding: VaderMath, calculateLoss, True
[*]Marked
Mark functions Adding: VaderMath, calculateSwap, True
[*]Marked
Mark functions Adding: VaderMath, calculateSwapReverse, True
[*]Marked
Mark functions Adding: VaderMath, delta, True
[*]Marked
Mark functions Adding: VaderMath, pow, True
[*]Marked
Mark functions Adding: VaderMath, root, True
[*]Marked
Mark functions Adding: VaderMath, slitherConstructorConstantVariables, True
[x] Not visible 
State_var: ONE
Source address: u
contract name: Ownable
contract name: ReentrancyGuard
contract name: IERC20
contract name: IERC20Permit
contract name: SafeERC20
contract name: ERC721
contract name: IERC721
contract name: IERC721Receiver
contract name: IERC721Metadata
contract name: Address
contract name: Context
contract name: Strings
contract name: ERC165
contract name: IERC165
contract name: Math
contract name: SignedMath
contract name: ProtocolConstants
Running check on BasePool
Reading Function: constructor
Function constructor not marked
Reading Function: getReserves
Function getReserves not marked
Reading Function: name
Function name not marked
Reading Function: mint
Checking funcion...



mint
Function name: mint
Finding type for to(address ... )
prev address? u
Head Addr: -998
    Norm: 0
    Set: {-998}
    Fin: NULL
New param cache [[[], [], 0, 'to', [], -1, -998, 'u']]
FIND RETURN
ENTRY_POINT
mint(address)


nativeAsset_2(IERC20) := ϕ(['nativeAsset_13', 'nativeAsset_9', 'nativeAsset_1', 'nativeAsset_0', 'nativeAsset_5'])
foreignAsset_2(IERC20) := ϕ(['foreignAsset_0', 'foreignAsset_14', 'foreignAsset_1', 'foreignAsset_10', 'foreignAsset_6'])
positionId_1(uint256) := ϕ(['positionId_6', 'positionId_0'])
totalSupply_1(uint256) := ϕ(['totalSupply_6', 'totalSupply_13', 'totalSupply_0'])
MODIFIER_CALL, ReentrancyGuard.nonReentrant()()
TUPLE_0(uint112,uint112,uint32) = INTERNAL_CALL, BasePool.getReserves()()
reserveNative_1(uint112)= UNPACK TUPLE_0 index: 0 
reserveForeign_1(uint112)= UNPACK TUPLE_0 index: 1 
TMP_139 = CONVERT this to address
TMP_140(uint256) = HIGH_LEVEL_CALL, dest:nativeAsset_4(IERC20), function:balanceOf, arguments:['TMP_139']  
nativeAsset_5(IERC20) := ϕ(['nativeAsset_13', 'nativeAsset_4', 'nativeAsset_9', 'nativeAsset_1', 'nativeAsset_5'])
foreignAsset_5(IERC20) := ϕ(['foreignAsset_4', 'foreignAsset_14', 'foreignAsset_1', 'foreignAsset_10', 'foreignAsset_6'])
positionId_4(uint256) := ϕ(['positionId_6', 'positionId_3'])
totalSupply_4(uint256) := ϕ(['totalSupply_6', 'totalSupply_13', 'totalSupply_3'])
balanceNative_1(uint256) := TMP_140(uint256)
TMP_141 = CONVERT this to address
TMP_142(uint256) = HIGH_LEVEL_CALL, dest:foreignAsset_5(IERC20), function:balanceOf, arguments:['TMP_141']  
foreignAsset_6(IERC20) := ϕ(['foreignAsset_5', 'foreignAsset_14', 'foreignAsset_1', 'foreignAsset_10', 'foreignAsset_6'])
positionId_5(uint256) := ϕ(['positionId_6', 'positionId_4'])
totalSupply_5(uint256) := ϕ(['totalSupply_4', 'totalSupply_6', 'totalSupply_13'])
balanceForeign_1(uint256) := TMP_142(uint256)
TMP_143(uint256) = balanceNative_1 (c)- reserveNative_1
nativeDeposit_1(uint256) := TMP_143(uint256)
TMP_144(uint256) = balanceForeign_1 (c)- reserveForeign_1
foreignDeposit_1(uint256) := TMP_144(uint256)
totalLiquidityUnits_1(uint256) := totalSupply_5(uint256)
TMP_145(bool) = totalLiquidityUnits_1 == 0
CONDITION TMP_145
liquidity_2(uint256) := nativeDeposit_1(uint256)
TMP_146(uint256) = LIBRARY_CALL, dest:VaderMath, function:VaderMath.calculateLiquidityUnits(uint256,uint256,uint256,uint256,uint256), arguments:['nativeDeposit_1', 'reserveNative_1', 'foreignDeposit_1', 'reserveForeign_1', 'totalLiquidityUnits_1'] 
liquidity_1(uint256) := TMP_146(uint256)
liquidity_3(uint256) := ϕ(['liquidity_1', 'liquidity_2'])
TMP_147(bool) = liquidity_3 > 0
TMP_148(None) = SOLIDITY_CALL require(bool,string)(TMP_147,BasePool::mint: Insufficient Liquidity Provided)
TMP_149(uint256) := positionId_5(uint256)
positionId_6(uint256) = positionId_5 (c)+ 1
id_1(uint256) := TMP_149(uint256)
totalSupply_6(uint256) = totalSupply_5 (c)+ liquidity_3
INTERNAL_CALL, ERC721._mint(address,uint256)(to_1,id_1)
REF_41(IBasePool.Position) -> positions_0[id_1]
TMP_151 = new Position(block.timestamp,liquidity_3,nativeDeposit_1,foreignDeposit_1)
positions_1(mapping(uint256 => IBasePool.Position)) := ϕ(['positions_0'])
REF_41 (->positions_1) := TMP_151(IBasePool.Position)
INTERNAL_CALL, BasePool._update(uint256,uint256,uint112,uint112)(balanceNative_1,balanceForeign_1,reserveNative_1,reserveForeign_1)
Emit Mint(msg.sender,to_1,nativeDeposit_1,foreignDeposit_1)
Emit PositionOpened(msg.sender,id_1,liquidity_3)


Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: nativeAsset_2, name: nativeAsset

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: nativeAsset, Num: 2
Globalname: nativeAsset, contract_name: BasePool
global...

Name: PIC_35 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Ssa_name: foreignAsset_2, name: foreignAsset

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: foreignAsset, Num: 2
Globalname: foreignAsset, contract_name: BasePool
global...

Name: PIC_34 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Ssa_name: positionId_1, name: positionId

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: positionId, Num: 1
Globalname: positionId, contract_name: BasePool
global...

Name: PIC_36 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Ssa_name: totalSupply_1, name: totalSupply

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: totalSupply, Num: 1
Globalname: totalSupply, contract_name: BasePool
global...

Name: PIC_37 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
nativeAsset_2(IERC20) := ϕ(['nativeAsset_13', 'nativeAsset_9', 'nativeAsset_1', 'nativeAsset_0', 'nativeAsset_5'])
Phi
[i]Type for nativeAsset

Name: nativeAsset Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
foreignAsset_2(IERC20) := ϕ(['foreignAsset_0', 'foreignAsset_14', 'foreignAsset_1', 'foreignAsset_10', 'foreignAsset_6'])
Phi
[i]Type for foreignAsset

Name: foreignAsset Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
positionId_1(uint256) := ϕ(['positionId_6', 'positionId_0'])
Phi
[i]Type for positionId

Name: positionId Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
totalSupply_1(uint256) := ϕ(['totalSupply_6', 'totalSupply_13', 'totalSupply_0'])
Phi
[i]Type for totalSupply

Name: totalSupply Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, ReentrancyGuard.nonReentrant()()
New param cache []
FIND RETURN
ENTRY_POINT
nonReentrant()
Propogating All
Propogating All
Propogating All
Propogating All
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, ReentrancyGuard._nonReentrantBefore()()
New param cache []
FIND RETURN
ENTRY_POINT
_nonReentrantBefore()
Propogating All
Propogating All
Propogating All
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: _ENTERED_1, name: _ENTERED

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _ENTERED, Num: 1
Globalname: _ENTERED, contract_name: BasePool
global...

Name: PIC_23 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Ssa_name: _status_2, name: _status

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _status, Num: 2
Globalname: _status, contract_name: BasePool
global...

Name: PIC_24 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
_ENTERED_1(uint256) := ϕ(['_ENTERED_0'])
Phi
[i]Type for _ENTERED

Name: _ENTERED Function: _nonReentrantBefore
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_status_2(uint256) := ϕ(['_status_0', '_status_4', '_status_3', '_status_1'])
Phi
[i]Type for _status

Name: _status Function: _nonReentrantBefore
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_0 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _status_2, name: _status

Name: _status Function: _nonReentrantBefore
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _ENTERED_1, name: _ENTERED

Name: _ENTERED Function: _nonReentrantBefore
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _status_2, name: _status

Name: _status Function: _nonReentrantBefore
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _ENTERED_1, name: _ENTERED

Name: _ENTERED Function: _nonReentrantBefore
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_0(bool) = _status_2 != _ENTERED_1
[i]Type for TMP_0

Name: TMP_0 Function: _nonReentrantBefore
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_1(None) = SOLIDITY_CALL require(bool,string)(TMP_0,ReentrancyGuard: reentrant call)
[i]Type for TMP_1

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: _ENTERED_1, name: _ENTERED

Name: _ENTERED Function: _nonReentrantBefore
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _ENTERED_1, name: _ENTERED

Name: _ENTERED Function: _nonReentrantBefore
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _status_3, name: _status

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _status, Num: 3
Globalname: _status, contract_name: BasePool
global...

Name: PIC_24 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
End popogation
_status_3(uint256) := _ENTERED_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for _status

Name: _status Function: _nonReentrantBefore
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Copied _status
Source address: u
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: _ENTERED_1, name: _ENTERED

Name: _ENTERED Function: _nonReentrantBefore
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _status_2, name: _status

Name: _status Function: _nonReentrantBefore
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_ENTERED_1(uint256) := ϕ(['_ENTERED_0'])
Phi
[i]Type for _ENTERED

Name: _ENTERED Function: _nonReentrantBefore
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_status_2(uint256) := ϕ(['_status_0', '_status_4', '_status_3', '_status_1'])
Phi
[i]Type for _status

Name: _status Function: _nonReentrantBefore
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_0 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _status_2, name: _status

Name: _status Function: _nonReentrantBefore
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _ENTERED_1, name: _ENTERED

Name: _ENTERED Function: _nonReentrantBefore
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _status_2, name: _status

Name: _status Function: _nonReentrantBefore
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _ENTERED_1, name: _ENTERED

Name: _ENTERED Function: _nonReentrantBefore
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_0(bool) = _status_2 != _ENTERED_1
[i]Type for TMP_0

Name: TMP_0 Function: _nonReentrantBefore
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_1(None) = SOLIDITY_CALL require(bool,string)(TMP_0,ReentrancyGuard: reentrant call)
[i]Type for TMP_1

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: _ENTERED_1, name: _ENTERED

Name: _ENTERED Function: _nonReentrantBefore
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _ENTERED_1, name: _ENTERED

Name: _ENTERED Function: _nonReentrantBefore
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _status_3, name: _status

Name: _status Function: _nonReentrantBefore
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
_status_3(uint256) := _ENTERED_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for _status

Name: _status Function: _nonReentrantBefore
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Copied _status
Source address: u
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, ReentrancyGuard._nonReentrantAfter()()
New param cache []
FIND RETURN
ENTRY_POINT
_nonReentrantAfter()
Propogating All
Propogating All
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: _NOT_ENTERED_2, name: _NOT_ENTERED

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _NOT_ENTERED, Num: 2
Globalname: _NOT_ENTERED, contract_name: BasePool
global...

Name: PIC_22 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
_NOT_ENTERED_2(uint256) := ϕ(['_NOT_ENTERED_0'])
Phi
[i]Type for _NOT_ENTERED

Name: _NOT_ENTERED Function: _nonReentrantAfter
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: _NOT_ENTERED_2, name: _NOT_ENTERED

Name: _NOT_ENTERED Function: _nonReentrantAfter
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _NOT_ENTERED_2, name: _NOT_ENTERED

Name: _NOT_ENTERED Function: _nonReentrantAfter
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _status_4, name: _status

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _status, Num: 4
Globalname: _status, contract_name: BasePool
global...

Name: _status Function: _nonReentrantBefore
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
End popogation
_status_4(uint256) := _NOT_ENTERED_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for _status

Name: _status Function: _nonReentrantAfter
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Copied _status
Source address: u
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: _NOT_ENTERED_2, name: _NOT_ENTERED

Name: _NOT_ENTERED Function: _nonReentrantAfter
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_NOT_ENTERED_2(uint256) := ϕ(['_NOT_ENTERED_0'])
Phi
[i]Type for _NOT_ENTERED

Name: _NOT_ENTERED Function: _nonReentrantAfter
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: _NOT_ENTERED_2, name: _NOT_ENTERED

Name: _NOT_ENTERED Function: _nonReentrantAfter
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _NOT_ENTERED_2, name: _NOT_ENTERED

Name: _NOT_ENTERED Function: _nonReentrantAfter
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _status_4, name: _status

Name: _status Function: _nonReentrantAfter
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
_status_4(uint256) := _NOT_ENTERED_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for _status

Name: _status Function: _nonReentrantAfter
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Copied _status
Source address: u
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, ReentrancyGuard._nonReentrantBefore()()
New param cache []
Old param cache: []
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, ReentrancyGuard._nonReentrantAfter()()
New param cache []
Old param cache: []
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] reserveNative cleared
[i] reserveForeign cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveNative_1, name: reserveNative

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: reserveNative, Num: 1
Globalname: reserveNative, contract_name: BasePool
Ssa_name: reserveForeign_1, name: reserveForeign

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: reserveForeign, Num: 1
Globalname: reserveForeign, contract_name: BasePool
End popogation
TUPLE_0(uint112,uint112,uint32) = INTERNAL_CALL, BasePool.getReserves()()
New param cache []
FIND RETURN
ENTRY_POINT
getReserves()
Propogating All
Propogating All
Propogating All
Propogating All
Propogating All
blockTimestampLast_1
Ssa_name: blockTimestampLast_1, name: blockTimestampLast

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
reserveForeign_1
Ssa_name: reserveForeign_1, name: reserveForeign

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
reserveNative_1
Ssa_name: reserveNative_1, name: reserveNative

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: _reserveNative_1, name: _reserveNative

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _reserveNative, Num: 1
Globalname: _reserveNative, contract_name: BasePool
global...

Name: PIC_31 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Ssa_name: _reserveForeign_1, name: _reserveForeign

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _reserveForeign, Num: 1
Globalname: _reserveForeign, contract_name: BasePool
global...

Name: PIC_30 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Ssa_name: _blockTimestampLast_1, name: _blockTimestampLast

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _blockTimestampLast, Num: 1
Globalname: _blockTimestampLast, contract_name: BasePool
global...

Name: PIC_29 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
_reserveNative_1(uint112) := ϕ(['_reserveNative_2', '_reserveNative_0'])
Phi
[i]Type for _reserveNative

Name: _reserveNative Function: getReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_reserveForeign_1(uint112) := ϕ(['_reserveForeign_2', '_reserveForeign_0'])
Phi
[i]Type for _reserveForeign

Name: _reserveForeign Function: getReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_blockTimestampLast_1(uint32) := ϕ(['_blockTimestampLast_3', '_blockTimestampLast_0'])
Phi
[i]Type for _blockTimestampLast

Name: _blockTimestampLast Function: getReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] reserveNative cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserveNative_1, name: _reserveNative

Name: _reserveNative Function: getReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _reserveNative_1, name: _reserveNative

Name: _reserveNative Function: getReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: reserveNative_1, name: reserveNative

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: reserveNative, Num: 1
Globalname: reserveNative, contract_name: BasePool
End popogation
reserveNative_1(uint112) := _reserveNative_1(uint112)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for reserveNative

Name: reserveNative Function: getReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] reserveForeign cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserveForeign_1, name: _reserveForeign

Name: _reserveForeign Function: getReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _reserveForeign_1, name: _reserveForeign

Name: _reserveForeign Function: getReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: reserveForeign_1, name: reserveForeign

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: reserveForeign, Num: 1
Globalname: reserveForeign, contract_name: BasePool
End popogation
reserveForeign_1(uint112) := _reserveForeign_1(uint112)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for reserveForeign

Name: reserveForeign Function: getReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] blockTimestampLast cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _blockTimestampLast_1, name: _blockTimestampLast

Name: _blockTimestampLast Function: getReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _blockTimestampLast_1, name: _blockTimestampLast

Name: _blockTimestampLast Function: getReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: blockTimestampLast_1, name: blockTimestampLast

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: blockTimestampLast, Num: 1
Globalname: blockTimestampLast, contract_name: BasePool
End popogation
blockTimestampLast_1(uint32) := _blockTimestampLast_1(uint32)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for blockTimestampLast

Name: blockTimestampLast Function: getReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: blockTimestampLast_1, name: blockTimestampLast

Name: blockTimestampLast Function: getReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: reserveForeign_1, name: reserveForeign

Name: reserveForeign Function: getReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: reserveNative_1, name: reserveNative

Name: reserveNative Function: getReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: blockTimestampLast_1, name: blockTimestampLast

Name: blockTimestampLast Function: getReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: reserveForeign_1, name: reserveForeign

Name: reserveForeign Function: getReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: reserveNative_1, name: reserveNative

Name: reserveNative Function: getReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
RETURN reserveNative_1,reserveForeign_1,blockTimestampLast_1
RETURN

Name: reserveNative Function: getReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: reserveForeign Function: getReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: blockTimestampLast Function: getReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: _reserveNative_1, name: _reserveNative

Name: _reserveNative Function: getReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _reserveForeign_1, name: _reserveForeign

Name: _reserveForeign Function: getReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _blockTimestampLast_1, name: _blockTimestampLast

Name: _blockTimestampLast Function: getReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_reserveNative_1(uint112) := ϕ(['_reserveNative_2', '_reserveNative_0'])
Phi
[i]Type for _reserveNative

Name: _reserveNative Function: getReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_reserveForeign_1(uint112) := ϕ(['_reserveForeign_2', '_reserveForeign_0'])
Phi
[i]Type for _reserveForeign

Name: _reserveForeign Function: getReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_blockTimestampLast_1(uint32) := ϕ(['_blockTimestampLast_3', '_blockTimestampLast_0'])
Phi
[i]Type for _blockTimestampLast

Name: _blockTimestampLast Function: getReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] reserveNative cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserveNative_1, name: _reserveNative

Name: _reserveNative Function: getReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _reserveNative_1, name: _reserveNative

Name: _reserveNative Function: getReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: reserveNative_1, name: reserveNative

Name: reserveNative Function: getReserves
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: reserveNative, Num: 1
Globalname: reserveNative, contract_name: BasePool
End popogation
reserveNative_1(uint112) := _reserveNative_1(uint112)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for reserveNative

Name: reserveNative Function: getReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] reserveForeign cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserveForeign_1, name: _reserveForeign

Name: _reserveForeign Function: getReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _reserveForeign_1, name: _reserveForeign

Name: _reserveForeign Function: getReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: reserveForeign_1, name: reserveForeign

Name: reserveForeign Function: getReserves
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: reserveForeign, Num: 1
Globalname: reserveForeign, contract_name: BasePool
End popogation
reserveForeign_1(uint112) := _reserveForeign_1(uint112)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for reserveForeign

Name: reserveForeign Function: getReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] blockTimestampLast cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _blockTimestampLast_1, name: _blockTimestampLast

Name: _blockTimestampLast Function: getReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _blockTimestampLast_1, name: _blockTimestampLast

Name: _blockTimestampLast Function: getReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: blockTimestampLast_1, name: blockTimestampLast

Name: blockTimestampLast Function: getReserves
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: blockTimestampLast, Num: 1
Globalname: blockTimestampLast, contract_name: BasePool
End popogation
blockTimestampLast_1(uint32) := _blockTimestampLast_1(uint32)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for blockTimestampLast

Name: blockTimestampLast Function: getReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: blockTimestampLast_1, name: blockTimestampLast

Name: blockTimestampLast Function: getReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: reserveForeign_1, name: reserveForeign

Name: reserveForeign Function: getReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: reserveNative_1, name: reserveNative

Name: reserveNative Function: getReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: blockTimestampLast_1, name: blockTimestampLast

Name: blockTimestampLast Function: getReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: reserveForeign_1, name: reserveForeign

Name: reserveForeign Function: getReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: reserveNative_1, name: reserveNative

Name: reserveNative Function: getReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
RETURN reserveNative_1,reserveForeign_1,blockTimestampLast_1
RETURN

Name: reserveNative Function: getReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: reserveForeign Function: getReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: blockTimestampLast Function: getReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TUPLE_0

Name: TUPLE_0 Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
reserveNative_1(uint112)= UNPACK TUPLE_0 index: 0 
([-1], [-1], 'u', 'u', 'u', -1)
[i]Type for reserveNative

Name: reserveNative Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
reserveForeign_1(uint112)= UNPACK TUPLE_0 index: 1 
([-1], [-1], 'u', 'u', 'u', -1)
[i]Type for reserveForeign

Name: reserveForeign Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_139 cleared
[i] TMP_140 cleared
[i] balanceNative cleared
Propogating parameters and globals to SSA variables...
Ssa_name: nativeAsset_4, name: nativeAsset

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: nativeAsset, Num: 4
Globalname: nativeAsset, contract_name: BasePool
global...

Name: PIC_35 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Ssa_name: nativeAsset_4, name: nativeAsset

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: balanceNative_1, name: balanceNative

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: balanceNative, Num: 1
Globalname: balanceNative, contract_name: BasePool
End popogation
Ssa_name: nativeAsset_5, name: nativeAsset

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: nativeAsset, Num: 5
Globalname: nativeAsset, contract_name: BasePool
global...

Name: PIC_35 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Ssa_name: foreignAsset_5, name: foreignAsset

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: foreignAsset, Num: 5
Globalname: foreignAsset, contract_name: BasePool
global...

Name: PIC_34 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Ssa_name: positionId_4, name: positionId

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: positionId, Num: 4
Globalname: positionId, contract_name: BasePool
global...

Name: PIC_36 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Ssa_name: totalSupply_4, name: totalSupply

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: totalSupply, Num: 4
Globalname: totalSupply, contract_name: BasePool
global...

Name: PIC_37 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
TMP_139 = CONVERT this to address
Converting this
new address made for this
prev address? u
global assignment: 4
4
4
[i]Type for TMP_139

Name: TMP_139 Function: mint
Num: -1
Den: -1
Address: 4
Norm: u
LF: BasePool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_140(uint256) = HIGH_LEVEL_CALL, dest:nativeAsset_4(IERC20), function:balanceOf, arguments:['TMP_139']  
High Call: balanceOf
Running querryfc
Found: None
Written func info: IERC20, balanceOf
Handling balance function!
u
prev address? u
global assignment: 5
5
[i]Type for TMP_140

Name: TMP_140 Function: mint
Num: 5
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
nativeAsset_5(IERC20) := ϕ(['nativeAsset_13', 'nativeAsset_4', 'nativeAsset_9', 'nativeAsset_1', 'nativeAsset_5'])
Phi
[i]Type for nativeAsset

Name: nativeAsset Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
foreignAsset_5(IERC20) := ϕ(['foreignAsset_4', 'foreignAsset_14', 'foreignAsset_1', 'foreignAsset_10', 'foreignAsset_6'])
Phi
[i]Type for foreignAsset

Name: foreignAsset Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
positionId_4(uint256) := ϕ(['positionId_6', 'positionId_3'])
Phi
[i]Type for positionId

Name: positionId Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
totalSupply_4(uint256) := ϕ(['totalSupply_6', 'totalSupply_13', 'totalSupply_3'])
Phi
[i]Type for totalSupply

Name: totalSupply Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
balanceNative_1(uint256) := TMP_140(uint256)
asgn
Source address: u
Finance type key: (0, -1)
[i]Type for balanceNative

Name: balanceNative Function: mint
Num: 5
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
[i] TMP_141 cleared
[i] TMP_142 cleared
[i] balanceForeign cleared
Propogating parameters and globals to SSA variables...
Ssa_name: foreignAsset_5, name: foreignAsset

Name: foreignAsset Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: foreignAsset_5, name: foreignAsset

Name: foreignAsset Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: balanceForeign_1, name: balanceForeign

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: balanceForeign, Num: 1
Globalname: balanceForeign, contract_name: BasePool
End popogation
Ssa_name: foreignAsset_6, name: foreignAsset

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: foreignAsset, Num: 6
Globalname: foreignAsset, contract_name: BasePool
global...

Name: PIC_34 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Ssa_name: positionId_5, name: positionId

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: positionId, Num: 5
Globalname: positionId, contract_name: BasePool
global...

Name: PIC_36 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Ssa_name: totalSupply_5, name: totalSupply

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: totalSupply, Num: 5
Globalname: totalSupply, contract_name: BasePool
global...

Name: PIC_37 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
TMP_141 = CONVERT this to address
Converting this
4
[i]Type for TMP_141

Name: TMP_141 Function: mint
Num: -1
Den: -1
Address: 4
Norm: u
LF: BasePool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_142(uint256) = HIGH_LEVEL_CALL, dest:foreignAsset_5(IERC20), function:balanceOf, arguments:['TMP_141']  
High Call: balanceOf
Running querryfc
Found: None
Written func info: IERC20, balanceOf
Handling balance function!
u
prev address? u
global assignment: 6
6
[i]Type for TMP_142

Name: TMP_142 Function: mint
Num: 6
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
foreignAsset_6(IERC20) := ϕ(['foreignAsset_5', 'foreignAsset_14', 'foreignAsset_1', 'foreignAsset_10', 'foreignAsset_6'])
Phi
[i]Type for foreignAsset

Name: foreignAsset Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
positionId_5(uint256) := ϕ(['positionId_6', 'positionId_4'])
Phi
[i]Type for positionId

Name: positionId Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
totalSupply_5(uint256) := ϕ(['totalSupply_4', 'totalSupply_6', 'totalSupply_13'])
Phi
[i]Type for totalSupply

Name: totalSupply Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
balanceForeign_1(uint256) := TMP_142(uint256)
asgn
Source address: u
Finance type key: (0, -1)
[i]Type for balanceForeign

Name: balanceForeign Function: mint
Num: 6
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
[i] TMP_143 cleared
[i] nativeDeposit cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveNative_1, name: reserveNative

Name: reserveNative Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: balanceNative_1, name: balanceNative

Name: balanceNative Function: mint
Num: 5
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: reserveNative_1, name: reserveNative

Name: reserveNative Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: balanceNative_1, name: balanceNative

Name: balanceNative Function: mint
Num: 5
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: nativeDeposit_1, name: nativeDeposit

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: nativeDeposit, Num: 1
Globalname: nativeDeposit, contract_name: BasePool
End popogation
TMP_143(uint256) = balanceNative_1 (c)- reserveNative_1
Source address: u
[i]Type for TMP_143

Name: TMP_143 Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
nativeDeposit_1(uint256) := TMP_143(uint256)
asgn
Source address: u
Finance type key: (0, -1)
[i]Type for nativeDeposit

Name: nativeDeposit Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
[i] TMP_144 cleared
[i] foreignDeposit cleared
Propogating parameters and globals to SSA variables...
Ssa_name: balanceForeign_1, name: balanceForeign

Name: balanceForeign Function: mint
Num: 6
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: reserveForeign_1, name: reserveForeign

Name: reserveForeign Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: balanceForeign_1, name: balanceForeign

Name: balanceForeign Function: mint
Num: 6
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: reserveForeign_1, name: reserveForeign

Name: reserveForeign Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: foreignDeposit_1, name: foreignDeposit

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: foreignDeposit, Num: 1
Globalname: foreignDeposit, contract_name: BasePool
End popogation
TMP_144(uint256) = balanceForeign_1 (c)- reserveForeign_1
Source address: u
[i]Type for TMP_144

Name: TMP_144 Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
foreignDeposit_1(uint256) := TMP_144(uint256)
asgn
Source address: u
Finance type key: (0, -1)
[i]Type for foreignDeposit

Name: foreignDeposit Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
[i] totalLiquidityUnits cleared
Propogating parameters and globals to SSA variables...
Ssa_name: totalSupply_5, name: totalSupply

Name: totalSupply Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: totalSupply_5, name: totalSupply

Name: totalSupply Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: totalLiquidityUnits_1, name: totalLiquidityUnits

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: totalLiquidityUnits, Num: 1
Globalname: totalLiquidityUnits, contract_name: BasePool
End popogation
totalLiquidityUnits_1(uint256) := totalSupply_5(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for totalLiquidityUnits

Name: totalLiquidityUnits Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_145 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: totalLiquidityUnits_1, name: totalLiquidityUnits

Name: totalLiquidityUnits Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: totalLiquidityUnits_1, name: totalLiquidityUnits

Name: totalLiquidityUnits Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_145(bool) = totalLiquidityUnits_1 == 0
[i]Type for TMP_145

Name: TMP_145 Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] liquidity cleared
Propogating parameters and globals to SSA variables...
Ssa_name: nativeDeposit_1, name: nativeDeposit

Name: nativeDeposit Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: nativeDeposit_1, name: nativeDeposit

Name: nativeDeposit Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: liquidity_2, name: liquidity

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: liquidity, Num: 2
Globalname: liquidity, contract_name: BasePool
End popogation
liquidity_2(uint256) := nativeDeposit_1(uint256)
asgn
Source address: u
Finance type key: (0, -1)
[i]Type for liquidity

Name: liquidity Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
[i] TMP_146 cleared
[i] liquidity cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveForeign_1, name: reserveForeign

Name: reserveForeign Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: foreignDeposit_1, name: foreignDeposit

Name: foreignDeposit Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: reserveNative_1, name: reserveNative

Name: reserveNative Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: totalLiquidityUnits_1, name: totalLiquidityUnits

Name: totalLiquidityUnits Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeDeposit_1, name: nativeDeposit

Name: nativeDeposit Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: reserveForeign_1, name: reserveForeign

Name: reserveForeign Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: foreignDeposit_1, name: foreignDeposit

Name: foreignDeposit Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: reserveNative_1, name: reserveNative

Name: reserveNative Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: totalLiquidityUnits_1, name: totalLiquidityUnits

Name: totalLiquidityUnits Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeDeposit_1, name: nativeDeposit

Name: nativeDeposit Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: liquidity_1, name: liquidity

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: liquidity, Num: 1
Globalname: liquidity, contract_name: BasePool
End popogation
TMP_146(uint256) = LIBRARY_CALL, dest:VaderMath, function:VaderMath.calculateLiquidityUnits(uint256,uint256,uint256,uint256,uint256), arguments:['nativeDeposit_1', 'reserveNative_1', 'foreignDeposit_1', 'reserveForeign_1', 'totalLiquidityUnits_1'] 
Found: calculateLiquidityUnits

Name: nativeDeposit Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance

Name: reserveNative Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: foreignDeposit Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance

Name: reserveForeign Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: totalLiquidityUnits Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
High level cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: 0
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: 0
Param: 3
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 4
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
New param cache [[[-1], [-1], 'u', None, [], 0, 'u', 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u'], [[-1], [-1], 'u', None, [], 0, 'u', 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 'u', None, [], -1, 'u'], [[-1], [-1], 'u', None, [], -1, 'u'], [[-1], [-1], 'u', None, [], -1, 'u'], [[-1], [-1], 'u', None, [], -1, 'u'], [[-1], [-1], 'u', None, [], -1, 'u']]
[[-1], [-1], 'u', None, [], 0, 'u', 'u']

Name: vaderDeposited Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: vaderBalance Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], 0, 'u', 'u']

Name: assetDeposited Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: assetBalance Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: totalPoolUnits Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
calculateLiquidityUnits(uint256,uint256,uint256,uint256,uint256)
Propogating All
Propogating All
assetDeposited_1
Ssa_name: assetDeposited_1, name: assetDeposited

Name: assetDeposited_1 Function: calculateLiquidityUnits
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: assetDeposited_1 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
vaderBalance_1
Ssa_name: vaderBalance_1, name: vaderBalance

Name: vaderBalance_1 Function: calculateLiquidityUnits
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: vaderBalance_1 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
assetBalance_1
Ssa_name: assetBalance_1, name: assetBalance

Name: assetBalance_1 Function: calculateLiquidityUnits
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: assetBalance_1 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
vaderDeposited_1
Ssa_name: vaderDeposited_1, name: vaderDeposited

Name: vaderDeposited_1 Function: calculateLiquidityUnits
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: vaderDeposited_1 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
Propogating All
assetDeposited_1
Ssa_name: assetDeposited_1, name: assetDeposited

Name: assetDeposited_1 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Source address: u

Name: assetDeposited_1 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
vaderBalance_1
Ssa_name: vaderBalance_1, name: vaderBalance

Name: vaderBalance_1 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: vaderBalance_1 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
assetBalance_1
Ssa_name: assetBalance_1, name: assetBalance

Name: assetBalance_1 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: assetBalance_1 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
vaderDeposited_1
Ssa_name: vaderDeposited_1, name: vaderDeposited

Name: vaderDeposited_1 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Source address: u

Name: vaderDeposited_1 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
Propogating All
vaderBalance_1
Ssa_name: vaderBalance_1, name: vaderBalance

Name: vaderBalance_1 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: vaderBalance_1 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
assetBalance_1
Ssa_name: assetBalance_1, name: assetBalance

Name: assetBalance_1 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: assetBalance_1 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
slip_1
Ssa_name: slip_1, name: slip

Name: slip Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
poolUnitFactor_1
Ssa_name: poolUnitFactor_1, name: poolUnitFactor

Name: poolUnitFactor Function: calculateLiquidityUnits
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
totalPoolUnits_1
Ssa_name: totalPoolUnits_1, name: totalPoolUnits

Name: totalPoolUnits_1 Function: calculateLiquidityUnits
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: totalPoolUnits_1 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
denominator_1
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: ONE_1, name: ONE

Name: ONE Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
ONE_1(uint256) := ϕ(['ONE_4', 'ONE_0', 'ONE_2'])
Phi
[i]Type for ONE

Name: ONE Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_0 cleared
[i] slip cleared
Propogating parameters and globals to SSA variables...
Ssa_name: assetDeposited_1, name: assetDeposited

Name: assetDeposited_1 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: vaderBalance_1, name: vaderBalance

Name: vaderBalance_1 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: assetBalance_1, name: assetBalance

Name: assetBalance_1 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: vaderDeposited_1, name: vaderDeposited

Name: vaderDeposited_1 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: assetDeposited_1, name: assetDeposited

Name: assetDeposited_1 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: vaderBalance_1, name: vaderBalance

Name: vaderBalance_1 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: assetBalance_1, name: assetBalance

Name: assetBalance_1 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: vaderDeposited_1, name: vaderDeposited

Name: vaderDeposited_1 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: slip_1, name: slip

Name: slip Function: calculateLiquidityUnits
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: slip, Num: 1
Globalname: slip, contract_name: VaderMath
End popogation
Ssa_name: ONE_2, name: ONE

Name: ONE Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_0(uint256) = INTERNAL_CALL, VaderMath.calculateSlipAdjustment(uint256,uint256,uint256,uint256)(vaderDeposited_1,vaderBalance_1,assetDeposited_1,assetBalance_1)
New param cache [[[-1], [-1], 'u', None, [], 0, 'u', 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u'], [[-1], [-1], 'u', None, [], 0, 'u', 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[], [], 'u', None, [], -1, 'u'], [[], [], 'u', None, [], -1, 'u'], [[], [], 'u', None, [], -1, 'u'], [[], [], 'u', None, [], -1, 'u']]
[[-1], [-1], 'u', None, [], 0, 'u', 'u']

Name: vaderDeposited Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: vaderBalance Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], 0, 'u', 'u']

Name: assetDeposited Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: assetBalance Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
calculateSlipAdjustment(uint256,uint256,uint256,uint256)
Propogating All
Propogating All
assetDeposited_1
Ssa_name: assetDeposited_1, name: assetDeposited

Name: assetDeposited_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: assetDeposited_1 Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
vaderBalance_1
Ssa_name: vaderBalance_1, name: vaderBalance

Name: vaderBalance_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: vaderBalance_1 Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
vaderDeposited_1
Ssa_name: vaderDeposited_1, name: vaderDeposited

Name: vaderDeposited_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: vaderDeposited_1 Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
assetBalance_1
Ssa_name: assetBalance_1, name: assetBalance

Name: assetBalance_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: assetBalance_1 Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
vaderDeposited_1
Ssa_name: vaderDeposited_1, name: vaderDeposited

Name: vaderDeposited_1 Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Source address: u

Name: vaderDeposited_1 Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
assetDeposited_1
Ssa_name: assetDeposited_1, name: assetDeposited

Name: assetDeposited_1 Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Source address: u

Name: assetDeposited_1 Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
vaderBalance_1
Ssa_name: vaderBalance_1, name: vaderBalance

Name: vaderBalance_1 Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: vaderBalance_1 Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
assetBalance_1
Ssa_name: assetBalance_1, name: assetBalance

Name: assetBalance_1 Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: assetBalance_1 Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
assetVader_1
Ssa_name: assetVader_1, name: assetVader

Name: assetVader Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
vaderAsset_1
Ssa_name: vaderAsset_1, name: vaderAsset

Name: vaderAsset Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
denominator_1
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] vaderDeposited cleared
[i] vaderBalance cleared
[i] assetDeposited cleared
[i] assetBalance cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: vaderDeposited_1, name: vaderDeposited

Name: vaderDeposited_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: vaderDeposited_1 Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
Ssa_name: vaderBalance_1, name: vaderBalance

Name: vaderBalance_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: vaderBalance_1 Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: assetDeposited_1, name: assetDeposited

Name: assetDeposited_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: assetDeposited_1 Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
Ssa_name: assetBalance_1, name: assetBalance

Name: assetBalance_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: assetBalance_1 Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: ONE_3, name: ONE

Name: ONE Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
vaderDeposited_1(uint256) := ϕ(['vaderDeposited_1'])
Phi
[i]Type for vaderDeposited

Name: vaderDeposited Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
vaderBalance_1(uint256) := ϕ(['vaderBalance_1'])
Phi
[i]Type for vaderBalance

Name: vaderBalance Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
assetDeposited_1(uint256) := ϕ(['assetDeposited_1'])
Phi
[i]Type for assetDeposited

Name: assetDeposited Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
assetBalance_1(uint256) := ϕ(['assetBalance_1'])
Phi
[i]Type for assetBalance

Name: assetBalance Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
ONE_3(uint256) := ϕ(['ONE_4', 'ONE_0', 'ONE_2'])
Phi
[i]Type for ONE

Name: ONE Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_10 cleared
[i] vaderAsset cleared
Propogating parameters and globals to SSA variables...
Ssa_name: assetDeposited_1, name: assetDeposited

Name: assetDeposited Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: vaderBalance_1, name: vaderBalance

Name: vaderBalance Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: assetDeposited_1, name: assetDeposited

Name: assetDeposited Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: vaderBalance_1, name: vaderBalance

Name: vaderBalance Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: vaderAsset_1, name: vaderAsset

Name: vaderAsset Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: vaderAsset, Num: 1
Globalname: vaderAsset, contract_name: VaderMath
End popogation
TMP_10(uint256) = vaderBalance_1 (c)* assetDeposited_1
lnorm: u rnorm: u
Source address: u
[i]Type for TMP_10

Name: TMP_10 Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
vaderAsset_1(uint256) := TMP_10(uint256)
asgn
Source address: u
Finance type key: (0, -1)
[i]Type for vaderAsset

Name: vaderAsset Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
[i] TMP_11 cleared
[i] assetVader cleared
Propogating parameters and globals to SSA variables...
Ssa_name: vaderDeposited_1, name: vaderDeposited

Name: vaderDeposited Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: assetBalance_1, name: assetBalance

Name: assetBalance Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: vaderDeposited_1, name: vaderDeposited

Name: vaderDeposited Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: assetBalance_1, name: assetBalance

Name: assetBalance Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: assetVader_1, name: assetVader

Name: assetVader Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: assetVader, Num: 1
Globalname: assetVader, contract_name: VaderMath
End popogation
TMP_11(uint256) = assetBalance_1 (c)* vaderDeposited_1
lnorm: u rnorm: u
Source address: u
[i]Type for TMP_11

Name: TMP_11 Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
assetVader_1(uint256) := TMP_11(uint256)
asgn
Source address: u
Finance type key: (0, -1)
[i]Type for assetVader

Name: assetVader Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
[i] TMP_12 cleared
[i] TMP_13 cleared
[i] TMP_14 cleared
[i] denominator cleared
Propogating parameters and globals to SSA variables...
Ssa_name: vaderDeposited_1, name: vaderDeposited

Name: vaderDeposited Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: assetDeposited_1, name: assetDeposited

Name: assetDeposited Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: vaderBalance_1, name: vaderBalance

Name: vaderBalance Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: assetBalance_1, name: assetBalance

Name: assetBalance Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: vaderDeposited_1, name: vaderDeposited

Name: vaderDeposited Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: assetDeposited_1, name: assetDeposited

Name: assetDeposited Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: vaderBalance_1, name: vaderBalance

Name: vaderBalance Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: assetBalance_1, name: assetBalance

Name: assetBalance Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: denominator, Num: 1
Globalname: denominator, contract_name: VaderMath
End popogation
TMP_12(uint256) = vaderDeposited_1 (c)+ vaderBalance_1
Source address: u
[i]Type for TMP_12

Name: TMP_12 Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
TMP_13(uint256) = assetDeposited_1 (c)+ assetBalance_1
Source address: u
[i]Type for TMP_13

Name: TMP_13 Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
TMP_14(uint256) = TMP_12 (c)* TMP_13
lnorm: u rnorm: u
Finance type key: (0, 0)
Source address: u
[i]Type for TMP_14

Name: TMP_14 Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
denominator_1(uint256) := TMP_14(uint256)
asgn
Source address: u
Finance type key: (0, -1)
[i]Type for denominator

Name: denominator Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
[i] TMP_15 cleared
[i] TMP_16 cleared
[i] TMP_17 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: assetVader_1, name: assetVader

Name: assetVader Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: vaderAsset_1, name: vaderAsset

Name: vaderAsset Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: ONE_4, name: ONE

Name: ONE Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: ONE_4, name: ONE

Name: ONE Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: assetVader_1, name: assetVader

Name: assetVader Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: vaderAsset_1, name: vaderAsset

Name: vaderAsset Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
TMP_15(uint256) = INTERNAL_CALL, VaderMath.delta(uint256,uint256)(vaderAsset_1,assetVader_1)
New param cache [[[-1], [-1], 'u', None, [], 0, 'u', 'u'], [[-1], [-1], 'u', None, [], 0, 'u', 'u']]
Old param cache: [[[], [], 'u', None, [], -1, 'u'], [[], [], 'u', None, [], -1, 'u']]
[[-1], [-1], 'u', None, [], 0, 'u', 'u']

Name: a Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
[[-1], [-1], 'u', None, [], 0, 'u', 'u']

Name: b Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
FIND RETURN
ENTRY_POINT
delta(uint256,uint256)
Propogating All
Propogating All
b_1
Ssa_name: b_1, name: b

Name: b_1 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: b_1 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
Propogating All
b_1
Ssa_name: b_1, name: b

Name: b_1 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Source address: u

Name: b_1 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Source address: u

Name: a_1 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
Propogating All
b_1
Ssa_name: b_1, name: b

Name: b_1 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Source address: u

Name: b_1 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Source address: u

Name: a_1 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
[i] a cleared
[i] b cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a_1 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
Ssa_name: b_1, name: b

Name: b_1 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: b_1 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
a_1(uint256) := ϕ(['vaderAsset_1'])
Phi
[i]Type for a

Name: a Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
b_1(uint256) := ϕ(['assetVader_1'])
Phi
[i]Type for b

Name: b Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
[i] TMP_45 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: b_1, name: b

Name: b Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: a_1, name: a

Name: a Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: b_1, name: b

Name: b Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: a_1, name: a

Name: a Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
TMP_45(bool) = a_1 > b_1
lnorm: u rnorm: u
Finance type key: (0, 0)
[i]Type for TMP_45

Name: TMP_45 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_47 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: b_1, name: b

Name: b Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: a_1, name: a

Name: a Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: b_1, name: b

Name: b Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: a_1, name: a

Name: a Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
TMP_47(uint256) = b_1 (c)- a_1
Finance type key: (0, 0)
Source address: u
[i]Type for TMP_47

Name: TMP_47 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
RETURN TMP_47
RETURN

Name: TMP_47 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
[i] TMP_46 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: b_1, name: b

Name: b Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: a_1, name: a

Name: a Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: b_1, name: b

Name: b Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: a_1, name: a

Name: a Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
TMP_46(uint256) = a_1 (c)- b_1
Finance type key: (0, 0)
Source address: u
[i]Type for TMP_46

Name: TMP_46 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
RETURN TMP_46
RETURN

Name: TMP_46 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
[i] a cleared
[i] b cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
Ssa_name: b_1, name: b

Name: b Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: b_1 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
a_1(uint256) := ϕ(['vaderAsset_1'])
Phi
[i]Type for a

Name: a Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
b_1(uint256) := ϕ(['assetVader_1'])
Phi
[i]Type for b

Name: b Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
[i] TMP_45 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: b_1, name: b

Name: b Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: a_1, name: a

Name: a Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: b_1, name: b

Name: b Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: a_1, name: a

Name: a Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
TMP_45(bool) = a_1 > b_1
lnorm: u rnorm: u
Finance type key: (0, 0)
[i]Type for TMP_45

Name: TMP_45 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_47 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: b_1, name: b

Name: b Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: a_1, name: a

Name: a Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: b_1, name: b

Name: b Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: a_1, name: a

Name: a Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
TMP_47(uint256) = b_1 (c)- a_1
Finance type key: (0, 0)
Source address: u
[i]Type for TMP_47

Name: TMP_47 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
RETURN TMP_47
RETURN

Name: TMP_47 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
[i] TMP_46 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: b_1, name: b

Name: b Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: a_1, name: a

Name: a Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: b_1, name: b

Name: b Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: a_1, name: a

Name: a Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
TMP_46(uint256) = a_1 (c)- b_1
Finance type key: (0, 0)
Source address: u
[i]Type for TMP_46

Name: TMP_46 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
RETURN TMP_46
RETURN

Name: TMP_46 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
([-1], [-1], 'u', 'u', 'u', 0)
[i]Type for TMP_15

Name: TMP_15 Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
TMP_16(uint256) = TMP_15 (c)/ denominator_1
lnorm: u rnorm: u
Finance type key: (0, 0)
lnorm: u rnorm: u
Finance type key: (0, 0)
[i]Type for TMP_16

Name: TMP_16 Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
TMP_17(uint256) = ONE_4 (c)- TMP_16
Source address: u
[i]Type for TMP_17

Name: TMP_17 Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
RETURN TMP_17
RETURN

Name: TMP_17 Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
[i] vaderDeposited cleared
[i] vaderBalance cleared
[i] assetDeposited cleared
[i] assetBalance cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: vaderDeposited_1, name: vaderDeposited

Name: vaderDeposited Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: vaderDeposited_1 Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
Ssa_name: vaderBalance_1, name: vaderBalance

Name: vaderBalance Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: vaderBalance_1 Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: assetDeposited_1, name: assetDeposited

Name: assetDeposited Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: assetDeposited_1 Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
Ssa_name: assetBalance_1, name: assetBalance

Name: assetBalance Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: assetBalance_1 Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: ONE_3, name: ONE

Name: ONE Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
vaderDeposited_1(uint256) := ϕ(['vaderDeposited_1'])
Phi
[i]Type for vaderDeposited

Name: vaderDeposited Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
vaderBalance_1(uint256) := ϕ(['vaderBalance_1'])
Phi
[i]Type for vaderBalance

Name: vaderBalance Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
assetDeposited_1(uint256) := ϕ(['assetDeposited_1'])
Phi
[i]Type for assetDeposited

Name: assetDeposited Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
assetBalance_1(uint256) := ϕ(['assetBalance_1'])
Phi
[i]Type for assetBalance

Name: assetBalance Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
ONE_3(uint256) := ϕ(['ONE_4', 'ONE_0', 'ONE_2'])
Phi
[i]Type for ONE

Name: ONE Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_10 cleared
[i] vaderAsset cleared
Propogating parameters and globals to SSA variables...
Ssa_name: assetDeposited_1, name: assetDeposited

Name: assetDeposited Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: vaderBalance_1, name: vaderBalance

Name: vaderBalance Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: assetDeposited_1, name: assetDeposited

Name: assetDeposited Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: vaderBalance_1, name: vaderBalance

Name: vaderBalance Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: vaderAsset_1, name: vaderAsset

Name: vaderAsset Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: vaderAsset, Num: 1
Globalname: vaderAsset, contract_name: VaderMath
End popogation
TMP_10(uint256) = vaderBalance_1 (c)* assetDeposited_1
lnorm: u rnorm: u
Source address: u
[i]Type for TMP_10

Name: TMP_10 Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
vaderAsset_1(uint256) := TMP_10(uint256)
asgn
Source address: u
Finance type key: (0, -1)
[i]Type for vaderAsset

Name: vaderAsset Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
[i] TMP_11 cleared
[i] assetVader cleared
Propogating parameters and globals to SSA variables...
Ssa_name: vaderDeposited_1, name: vaderDeposited

Name: vaderDeposited Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: assetBalance_1, name: assetBalance

Name: assetBalance Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: vaderDeposited_1, name: vaderDeposited

Name: vaderDeposited Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: assetBalance_1, name: assetBalance

Name: assetBalance Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: assetVader_1, name: assetVader

Name: assetVader Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: assetVader, Num: 1
Globalname: assetVader, contract_name: VaderMath
End popogation
TMP_11(uint256) = assetBalance_1 (c)* vaderDeposited_1
lnorm: u rnorm: u
Source address: u
[i]Type for TMP_11

Name: TMP_11 Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
assetVader_1(uint256) := TMP_11(uint256)
asgn
Source address: u
Finance type key: (0, -1)
[i]Type for assetVader

Name: assetVader Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
[i] TMP_12 cleared
[i] TMP_13 cleared
[i] TMP_14 cleared
[i] denominator cleared
Propogating parameters and globals to SSA variables...
Ssa_name: vaderDeposited_1, name: vaderDeposited

Name: vaderDeposited Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: assetDeposited_1, name: assetDeposited

Name: assetDeposited Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: vaderBalance_1, name: vaderBalance

Name: vaderBalance Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: assetBalance_1, name: assetBalance

Name: assetBalance Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: vaderDeposited_1, name: vaderDeposited

Name: vaderDeposited Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: assetDeposited_1, name: assetDeposited

Name: assetDeposited Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: vaderBalance_1, name: vaderBalance

Name: vaderBalance Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: assetBalance_1, name: assetBalance

Name: assetBalance Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: denominator, Num: 1
Globalname: denominator, contract_name: VaderMath
End popogation
TMP_12(uint256) = vaderDeposited_1 (c)+ vaderBalance_1
Source address: u
[i]Type for TMP_12

Name: TMP_12 Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
TMP_13(uint256) = assetDeposited_1 (c)+ assetBalance_1
Source address: u
[i]Type for TMP_13

Name: TMP_13 Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
TMP_14(uint256) = TMP_12 (c)* TMP_13
lnorm: u rnorm: u
Finance type key: (0, 0)
Source address: u
[i]Type for TMP_14

Name: TMP_14 Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
denominator_1(uint256) := TMP_14(uint256)
asgn
Source address: u
Finance type key: (0, -1)
[i]Type for denominator

Name: denominator Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
[i] TMP_15 cleared
[i] TMP_16 cleared
[i] TMP_17 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: assetVader_1, name: assetVader

Name: assetVader Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: vaderAsset_1, name: vaderAsset

Name: vaderAsset Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: ONE_4, name: ONE

Name: ONE Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: ONE_4, name: ONE

Name: ONE Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: assetVader_1, name: assetVader

Name: assetVader Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: vaderAsset_1, name: vaderAsset

Name: vaderAsset Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
TMP_15(uint256) = INTERNAL_CALL, VaderMath.delta(uint256,uint256)(vaderAsset_1,assetVader_1)
New param cache [[[-1], [-1], 'u', None, [], 0, 'u', 'u'], [[-1], [-1], 'u', None, [], 0, 'u', 'u']]
Old param cache: [[[], [], 'u', None, [], -1, 'u'], [[], [], 'u', None, [], -1, 'u']]
[[-1], [-1], 'u', None, [], 0, 'u', 'u']

Name: a Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
[[-1], [-1], 'u', None, [], 0, 'u', 'u']

Name: b Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
FIND RETURN
ENTRY_POINT
delta(uint256,uint256)
Propogating All
Propogating All
b_1
Ssa_name: b_1, name: b

Name: b Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Source address: u

Name: b_1 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
a_1
Ssa_name: a_1, name: a

Name: a Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Source address: u

Name: a_1 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
Propogating All
b_1
Ssa_name: b_1, name: b

Name: b_1 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Source address: u

Name: b_1 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Source address: u

Name: a_1 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
Propogating All
b_1
Ssa_name: b_1, name: b

Name: b_1 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Source address: u

Name: b_1 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Source address: u

Name: a_1 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
[i] a cleared
[i] b cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a_1 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
Ssa_name: b_1, name: b

Name: b_1 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: b_1 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
a_1(uint256) := ϕ(['vaderAsset_1'])
Phi
[i]Type for a

Name: a Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
b_1(uint256) := ϕ(['assetVader_1'])
Phi
[i]Type for b

Name: b Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
[i] TMP_45 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: b_1, name: b

Name: b Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: a_1, name: a

Name: a Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: b_1, name: b

Name: b Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: a_1, name: a

Name: a Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
TMP_45(bool) = a_1 > b_1
lnorm: u rnorm: u
Finance type key: (0, 0)
[i]Type for TMP_45

Name: TMP_45 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_47 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: b_1, name: b

Name: b Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: a_1, name: a

Name: a Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: b_1, name: b

Name: b Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: a_1, name: a

Name: a Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
TMP_47(uint256) = b_1 (c)- a_1
Finance type key: (0, 0)
Source address: u
[i]Type for TMP_47

Name: TMP_47 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
RETURN TMP_47
RETURN

Name: TMP_47 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
[i] TMP_46 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: b_1, name: b

Name: b Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: a_1, name: a

Name: a Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: b_1, name: b

Name: b Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: a_1, name: a

Name: a Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
TMP_46(uint256) = a_1 (c)- b_1
Finance type key: (0, 0)
Source address: u
[i]Type for TMP_46

Name: TMP_46 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
RETURN TMP_46
RETURN

Name: TMP_46 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
[i] a cleared
[i] b cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
Ssa_name: b_1, name: b

Name: b Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: b_1 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
a_1(uint256) := ϕ(['vaderAsset_1'])
Phi
[i]Type for a

Name: a Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
b_1(uint256) := ϕ(['assetVader_1'])
Phi
[i]Type for b

Name: b Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
[i] TMP_45 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: b_1, name: b

Name: b Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: a_1, name: a

Name: a Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: b_1, name: b

Name: b Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: a_1, name: a

Name: a Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
TMP_45(bool) = a_1 > b_1
lnorm: u rnorm: u
Finance type key: (0, 0)
[i]Type for TMP_45

Name: TMP_45 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_47 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: b_1, name: b

Name: b Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: a_1, name: a

Name: a Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: b_1, name: b

Name: b Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: a_1, name: a

Name: a Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
TMP_47(uint256) = b_1 (c)- a_1
Finance type key: (0, 0)
Source address: u
[i]Type for TMP_47

Name: TMP_47 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
RETURN TMP_47
RETURN

Name: TMP_47 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
[i] TMP_46 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: b_1, name: b

Name: b Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: a_1, name: a

Name: a Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: b_1, name: b

Name: b Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: a_1, name: a

Name: a Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
TMP_46(uint256) = a_1 (c)- b_1
Finance type key: (0, 0)
Source address: u
[i]Type for TMP_46

Name: TMP_46 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
RETURN TMP_46
RETURN

Name: TMP_46 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
([-1], [-1], 'u', 'u', 'u', 0)
[i]Type for TMP_15

Name: TMP_15 Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
TMP_16(uint256) = TMP_15 (c)/ denominator_1
lnorm: u rnorm: u
Finance type key: (0, 0)
lnorm: u rnorm: u
Finance type key: (0, 0)
[i]Type for TMP_16

Name: TMP_16 Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
TMP_17(uint256) = ONE_4 (c)- TMP_16
Source address: u
[i]Type for TMP_17

Name: TMP_17 Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
RETURN TMP_17
RETURN

Name: TMP_17 Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Source address: u
Source address: u
[i]Type for TMP_0

Name: TMP_0 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
ONE_2(uint256) := ϕ(['ONE_4'])
Phi
[i]Type for ONE

Name: ONE Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
slip_1(uint256) := TMP_0(uint256)
asgn
Source address: u
Finance type key: (0, -1)
[i]Type for slip

Name: slip Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
[i] TMP_1 cleared
[i] TMP_2 cleared
[i] TMP_3 cleared
[i] poolUnitFactor cleared
Propogating parameters and globals to SSA variables...
Ssa_name: assetDeposited_1, name: assetDeposited

Name: assetDeposited_1 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: vaderBalance_1, name: vaderBalance

Name: vaderBalance_1 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: assetBalance_1, name: assetBalance

Name: assetBalance_1 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: vaderDeposited_1, name: vaderDeposited

Name: vaderDeposited_1 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: assetDeposited_1, name: assetDeposited

Name: assetDeposited_1 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: vaderBalance_1, name: vaderBalance

Name: vaderBalance_1 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: assetBalance_1, name: assetBalance

Name: assetBalance_1 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: vaderDeposited_1, name: vaderDeposited

Name: vaderDeposited_1 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: poolUnitFactor_1, name: poolUnitFactor

Name: poolUnitFactor Function: calculateLiquidityUnits
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: poolUnitFactor, Num: 1
Globalname: poolUnitFactor, contract_name: VaderMath
End popogation
TMP_1(uint256) = vaderBalance_1 (c)* assetDeposited_1
lnorm: u rnorm: u
Source address: u
[i]Type for TMP_1

Name: TMP_1 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
TMP_2(uint256) = vaderDeposited_1 (c)* assetBalance_1
lnorm: u rnorm: u
Source address: u
[i]Type for TMP_2

Name: TMP_2 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
TMP_3(uint256) = TMP_1 (c)+ TMP_2
Finance type key: (0, 0)
Source address: u
[i]Type for TMP_3

Name: TMP_3 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
poolUnitFactor_1(uint256) := TMP_3(uint256)
asgn
Source address: u
Finance type key: (0, -1)
[i]Type for poolUnitFactor

Name: poolUnitFactor Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
[i] TMP_4 cleared
[i] TMP_5 cleared
[i] TMP_6 cleared
[i] denominator cleared
Propogating parameters and globals to SSA variables...
Ssa_name: vaderBalance_1, name: vaderBalance

Name: vaderBalance_1 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: assetBalance_1, name: assetBalance

Name: assetBalance_1 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: ONE_2, name: ONE

Name: ONE Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: vaderBalance_1, name: vaderBalance

Name: vaderBalance_1 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: assetBalance_1, name: assetBalance

Name: assetBalance_1 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: ONE_2, name: ONE

Name: ONE Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateLiquidityUnits
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: denominator, Num: 1
Globalname: denominator, contract_name: VaderMath
End popogation
TMP_4(uint256) = ONE_2 (c)* 2
lnorm: u rnorm: 0
Source address: u
[i]Type for TMP_4

Name: TMP_4 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_5(uint256) = TMP_4 (c)* vaderBalance_1
lnorm: 0 rnorm: u
Source address: u
[i]Type for TMP_5

Name: TMP_5 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_6(uint256) = TMP_5 (c)* assetBalance_1
lnorm: 0 rnorm: u
Source address: u
[i]Type for TMP_6

Name: TMP_6 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
denominator_1(uint256) := TMP_6(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for denominator

Name: denominator Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] TMP_7 cleared
[i] TMP_8 cleared
[i] TMP_9 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: slip_1, name: slip

Name: slip Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: poolUnitFactor_1, name: poolUnitFactor

Name: poolUnitFactor Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: totalPoolUnits_1, name: totalPoolUnits

Name: totalPoolUnits_1 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: slip_1, name: slip

Name: slip Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: poolUnitFactor_1, name: poolUnitFactor

Name: poolUnitFactor Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: totalPoolUnits_1, name: totalPoolUnits

Name: totalPoolUnits_1 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
End popogation
TMP_7(uint256) = totalPoolUnits_1 (c)* poolUnitFactor_1
lnorm: u rnorm: u
Source address: u
[i]Type for TMP_7

Name: TMP_7 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
TMP_8(uint256) = TMP_7 (c)/ denominator_1
lnorm: u rnorm: 0
lnorm: u rnorm: 0
[i]Type for TMP_8

Name: TMP_8 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: raw balance
XXXX
TMP_9(uint256) = TMP_8 (c)* slip_1
lnorm: 0 rnorm: u
Finance type key: (0, 0)
Source address: u
[i]Type for TMP_9

Name: TMP_9 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: raw balance
XXXX
RETURN TMP_9
RETURN

Name: TMP_9 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: raw balance
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: ONE_1, name: ONE

Name: ONE Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
ONE_1(uint256) := ϕ(['ONE_4', 'ONE_0', 'ONE_2'])
Phi
[i]Type for ONE

Name: ONE Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_0 cleared
[i] slip cleared
Propogating parameters and globals to SSA variables...
Ssa_name: assetDeposited_1, name: assetDeposited

Name: assetDeposited_1 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: vaderBalance_1, name: vaderBalance

Name: vaderBalance_1 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: assetBalance_1, name: assetBalance

Name: assetBalance_1 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: vaderDeposited_1, name: vaderDeposited

Name: vaderDeposited_1 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: assetDeposited_1, name: assetDeposited

Name: assetDeposited_1 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: vaderBalance_1, name: vaderBalance

Name: vaderBalance_1 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: assetBalance_1, name: assetBalance

Name: assetBalance_1 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: vaderDeposited_1, name: vaderDeposited

Name: vaderDeposited_1 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: slip_1, name: slip

Name: slip Function: calculateLiquidityUnits
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: slip, Num: 1
Globalname: slip, contract_name: VaderMath
End popogation
Ssa_name: ONE_2, name: ONE

Name: ONE Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_0(uint256) = INTERNAL_CALL, VaderMath.calculateSlipAdjustment(uint256,uint256,uint256,uint256)(vaderDeposited_1,vaderBalance_1,assetDeposited_1,assetBalance_1)
New param cache [[[-1], [-1], 'u', None, [], 0, 'u', 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u'], [[-1], [-1], 'u', None, [], 0, 'u', 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[], [], 'u', None, [], -1, 'u'], [[], [], 'u', None, [], -1, 'u'], [[], [], 'u', None, [], -1, 'u'], [[], [], 'u', None, [], -1, 'u']]
[[-1], [-1], 'u', None, [], 0, 'u', 'u']

Name: vaderDeposited Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: vaderBalance Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], 0, 'u', 'u']

Name: assetDeposited Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: assetBalance Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
calculateSlipAdjustment(uint256,uint256,uint256,uint256)
Propogating All
Propogating All
assetDeposited_1
Ssa_name: assetDeposited_1, name: assetDeposited

Name: assetDeposited Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Source address: u

Name: assetDeposited_1 Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
vaderBalance_1
Ssa_name: vaderBalance_1, name: vaderBalance

Name: vaderBalance Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: vaderBalance_1 Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
vaderDeposited_1
Ssa_name: vaderDeposited_1, name: vaderDeposited

Name: vaderDeposited Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Source address: u

Name: vaderDeposited_1 Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
assetBalance_1
Ssa_name: assetBalance_1, name: assetBalance

Name: assetBalance Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: assetBalance_1 Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
vaderDeposited_1
Ssa_name: vaderDeposited_1, name: vaderDeposited

Name: vaderDeposited_1 Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Source address: u

Name: vaderDeposited_1 Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
assetDeposited_1
Ssa_name: assetDeposited_1, name: assetDeposited

Name: assetDeposited_1 Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Source address: u

Name: assetDeposited_1 Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
vaderBalance_1
Ssa_name: vaderBalance_1, name: vaderBalance

Name: vaderBalance_1 Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: vaderBalance_1 Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
assetBalance_1
Ssa_name: assetBalance_1, name: assetBalance

Name: assetBalance_1 Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: assetBalance_1 Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
assetVader_1
Ssa_name: assetVader_1, name: assetVader

Name: assetVader Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
vaderAsset_1
Ssa_name: vaderAsset_1, name: vaderAsset

Name: vaderAsset Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
denominator_1
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
[i] vaderDeposited cleared
[i] vaderBalance cleared
[i] assetDeposited cleared
[i] assetBalance cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: vaderDeposited_1, name: vaderDeposited

Name: vaderDeposited_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: vaderDeposited_1 Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
Ssa_name: vaderBalance_1, name: vaderBalance

Name: vaderBalance_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: vaderBalance_1 Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: assetDeposited_1, name: assetDeposited

Name: assetDeposited_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: assetDeposited_1 Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
Ssa_name: assetBalance_1, name: assetBalance

Name: assetBalance_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: assetBalance_1 Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: ONE_3, name: ONE

Name: ONE Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
vaderDeposited_1(uint256) := ϕ(['vaderDeposited_1'])
Phi
[i]Type for vaderDeposited

Name: vaderDeposited Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
vaderBalance_1(uint256) := ϕ(['vaderBalance_1'])
Phi
[i]Type for vaderBalance

Name: vaderBalance Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
assetDeposited_1(uint256) := ϕ(['assetDeposited_1'])
Phi
[i]Type for assetDeposited

Name: assetDeposited Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
assetBalance_1(uint256) := ϕ(['assetBalance_1'])
Phi
[i]Type for assetBalance

Name: assetBalance Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
ONE_3(uint256) := ϕ(['ONE_4', 'ONE_0', 'ONE_2'])
Phi
[i]Type for ONE

Name: ONE Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_10 cleared
[i] vaderAsset cleared
Propogating parameters and globals to SSA variables...
Ssa_name: assetDeposited_1, name: assetDeposited

Name: assetDeposited Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: vaderBalance_1, name: vaderBalance

Name: vaderBalance Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: assetDeposited_1, name: assetDeposited

Name: assetDeposited Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: vaderBalance_1, name: vaderBalance

Name: vaderBalance Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: vaderAsset_1, name: vaderAsset

Name: vaderAsset Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: vaderAsset, Num: 1
Globalname: vaderAsset, contract_name: VaderMath
End popogation
TMP_10(uint256) = vaderBalance_1 (c)* assetDeposited_1
lnorm: u rnorm: u
Source address: u
[i]Type for TMP_10

Name: TMP_10 Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
vaderAsset_1(uint256) := TMP_10(uint256)
asgn
Source address: u
Finance type key: (0, -1)
[i]Type for vaderAsset

Name: vaderAsset Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
[i] TMP_11 cleared
[i] assetVader cleared
Propogating parameters and globals to SSA variables...
Ssa_name: vaderDeposited_1, name: vaderDeposited

Name: vaderDeposited Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: assetBalance_1, name: assetBalance

Name: assetBalance Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: vaderDeposited_1, name: vaderDeposited

Name: vaderDeposited Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: assetBalance_1, name: assetBalance

Name: assetBalance Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: assetVader_1, name: assetVader

Name: assetVader Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: assetVader, Num: 1
Globalname: assetVader, contract_name: VaderMath
End popogation
TMP_11(uint256) = assetBalance_1 (c)* vaderDeposited_1
lnorm: u rnorm: u
Source address: u
[i]Type for TMP_11

Name: TMP_11 Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
assetVader_1(uint256) := TMP_11(uint256)
asgn
Source address: u
Finance type key: (0, -1)
[i]Type for assetVader

Name: assetVader Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
[i] TMP_12 cleared
[i] TMP_13 cleared
[i] TMP_14 cleared
[i] denominator cleared
Propogating parameters and globals to SSA variables...
Ssa_name: vaderDeposited_1, name: vaderDeposited

Name: vaderDeposited Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: assetDeposited_1, name: assetDeposited

Name: assetDeposited Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: vaderBalance_1, name: vaderBalance

Name: vaderBalance Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: assetBalance_1, name: assetBalance

Name: assetBalance Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: vaderDeposited_1, name: vaderDeposited

Name: vaderDeposited Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: assetDeposited_1, name: assetDeposited

Name: assetDeposited Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: vaderBalance_1, name: vaderBalance

Name: vaderBalance Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: assetBalance_1, name: assetBalance

Name: assetBalance Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: denominator, Num: 1
Globalname: denominator, contract_name: VaderMath
End popogation
TMP_12(uint256) = vaderDeposited_1 (c)+ vaderBalance_1
Source address: u
[i]Type for TMP_12

Name: TMP_12 Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
TMP_13(uint256) = assetDeposited_1 (c)+ assetBalance_1
Source address: u
[i]Type for TMP_13

Name: TMP_13 Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
TMP_14(uint256) = TMP_12 (c)* TMP_13
lnorm: u rnorm: u
Finance type key: (0, 0)
Source address: u
[i]Type for TMP_14

Name: TMP_14 Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
denominator_1(uint256) := TMP_14(uint256)
asgn
Source address: u
Finance type key: (0, -1)
[i]Type for denominator

Name: denominator Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
[i] TMP_15 cleared
[i] TMP_16 cleared
[i] TMP_17 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: assetVader_1, name: assetVader

Name: assetVader Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: vaderAsset_1, name: vaderAsset

Name: vaderAsset Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: ONE_4, name: ONE

Name: ONE Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: ONE_4, name: ONE

Name: ONE Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: assetVader_1, name: assetVader

Name: assetVader Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: vaderAsset_1, name: vaderAsset

Name: vaderAsset Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
TMP_15(uint256) = INTERNAL_CALL, VaderMath.delta(uint256,uint256)(vaderAsset_1,assetVader_1)
New param cache [[[-1], [-1], 'u', None, [], 0, 'u', 'u'], [[-1], [-1], 'u', None, [], 0, 'u', 'u']]
Old param cache: [[[], [], 'u', None, [], -1, 'u'], [[], [], 'u', None, [], -1, 'u']]
[[-1], [-1], 'u', None, [], 0, 'u', 'u']

Name: a Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
[[-1], [-1], 'u', None, [], 0, 'u', 'u']

Name: b Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
FIND RETURN
ENTRY_POINT
delta(uint256,uint256)
Propogating All
Propogating All
b_1
Ssa_name: b_1, name: b

Name: b Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Source address: u

Name: b_1 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
a_1
Ssa_name: a_1, name: a

Name: a Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Source address: u

Name: a_1 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
Propogating All
b_1
Ssa_name: b_1, name: b

Name: b_1 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Source address: u

Name: b_1 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Source address: u

Name: a_1 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
Propogating All
b_1
Ssa_name: b_1, name: b

Name: b_1 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Source address: u

Name: b_1 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Source address: u

Name: a_1 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
[i] a cleared
[i] b cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a_1 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
Ssa_name: b_1, name: b

Name: b_1 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: b_1 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
a_1(uint256) := ϕ(['vaderAsset_1'])
Phi
[i]Type for a

Name: a Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
b_1(uint256) := ϕ(['assetVader_1'])
Phi
[i]Type for b

Name: b Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
[i] TMP_45 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: b_1, name: b

Name: b Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: a_1, name: a

Name: a Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: b_1, name: b

Name: b Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: a_1, name: a

Name: a Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
TMP_45(bool) = a_1 > b_1
lnorm: u rnorm: u
Finance type key: (0, 0)
[i]Type for TMP_45

Name: TMP_45 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_47 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: b_1, name: b

Name: b Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: a_1, name: a

Name: a Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: b_1, name: b

Name: b Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: a_1, name: a

Name: a Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
TMP_47(uint256) = b_1 (c)- a_1
Finance type key: (0, 0)
Source address: u
[i]Type for TMP_47

Name: TMP_47 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
RETURN TMP_47
RETURN

Name: TMP_47 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
[i] TMP_46 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: b_1, name: b

Name: b Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: a_1, name: a

Name: a Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: b_1, name: b

Name: b Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: a_1, name: a

Name: a Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
TMP_46(uint256) = a_1 (c)- b_1
Finance type key: (0, 0)
Source address: u
[i]Type for TMP_46

Name: TMP_46 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
RETURN TMP_46
RETURN

Name: TMP_46 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
[i] a cleared
[i] b cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
Ssa_name: b_1, name: b

Name: b Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: b_1 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
a_1(uint256) := ϕ(['vaderAsset_1'])
Phi
[i]Type for a

Name: a Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
b_1(uint256) := ϕ(['assetVader_1'])
Phi
[i]Type for b

Name: b Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
[i] TMP_45 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: b_1, name: b

Name: b Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: a_1, name: a

Name: a Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: b_1, name: b

Name: b Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: a_1, name: a

Name: a Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
TMP_45(bool) = a_1 > b_1
lnorm: u rnorm: u
Finance type key: (0, 0)
[i]Type for TMP_45

Name: TMP_45 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_47 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: b_1, name: b

Name: b Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: a_1, name: a

Name: a Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: b_1, name: b

Name: b Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: a_1, name: a

Name: a Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
TMP_47(uint256) = b_1 (c)- a_1
Finance type key: (0, 0)
Source address: u
[i]Type for TMP_47

Name: TMP_47 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
RETURN TMP_47
RETURN

Name: TMP_47 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
[i] TMP_46 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: b_1, name: b

Name: b Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: a_1, name: a

Name: a Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: b_1, name: b

Name: b Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: a_1, name: a

Name: a Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
TMP_46(uint256) = a_1 (c)- b_1
Finance type key: (0, 0)
Source address: u
[i]Type for TMP_46

Name: TMP_46 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
RETURN TMP_46
RETURN

Name: TMP_46 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
([-1], [-1], 'u', 'u', 'u', 0)
[i]Type for TMP_15

Name: TMP_15 Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
TMP_16(uint256) = TMP_15 (c)/ denominator_1
lnorm: u rnorm: u
Finance type key: (0, 0)
lnorm: u rnorm: u
Finance type key: (0, 0)
[i]Type for TMP_16

Name: TMP_16 Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
TMP_17(uint256) = ONE_4 (c)- TMP_16
Source address: u
[i]Type for TMP_17

Name: TMP_17 Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
RETURN TMP_17
RETURN

Name: TMP_17 Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
[i] vaderDeposited cleared
[i] vaderBalance cleared
[i] assetDeposited cleared
[i] assetBalance cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: vaderDeposited_1, name: vaderDeposited

Name: vaderDeposited Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: vaderDeposited_1 Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
Ssa_name: vaderBalance_1, name: vaderBalance

Name: vaderBalance Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: vaderBalance_1 Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: assetDeposited_1, name: assetDeposited

Name: assetDeposited Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: assetDeposited_1 Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
Ssa_name: assetBalance_1, name: assetBalance

Name: assetBalance Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: assetBalance_1 Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: ONE_3, name: ONE

Name: ONE Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
vaderDeposited_1(uint256) := ϕ(['vaderDeposited_1'])
Phi
[i]Type for vaderDeposited

Name: vaderDeposited Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
vaderBalance_1(uint256) := ϕ(['vaderBalance_1'])
Phi
[i]Type for vaderBalance

Name: vaderBalance Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
assetDeposited_1(uint256) := ϕ(['assetDeposited_1'])
Phi
[i]Type for assetDeposited

Name: assetDeposited Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
assetBalance_1(uint256) := ϕ(['assetBalance_1'])
Phi
[i]Type for assetBalance

Name: assetBalance Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
ONE_3(uint256) := ϕ(['ONE_4', 'ONE_0', 'ONE_2'])
Phi
[i]Type for ONE

Name: ONE Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_10 cleared
[i] vaderAsset cleared
Propogating parameters and globals to SSA variables...
Ssa_name: assetDeposited_1, name: assetDeposited

Name: assetDeposited Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: vaderBalance_1, name: vaderBalance

Name: vaderBalance Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: assetDeposited_1, name: assetDeposited

Name: assetDeposited Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: vaderBalance_1, name: vaderBalance

Name: vaderBalance Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: vaderAsset_1, name: vaderAsset

Name: vaderAsset Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: vaderAsset, Num: 1
Globalname: vaderAsset, contract_name: VaderMath
End popogation
TMP_10(uint256) = vaderBalance_1 (c)* assetDeposited_1
lnorm: u rnorm: u
Source address: u
[i]Type for TMP_10

Name: TMP_10 Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
vaderAsset_1(uint256) := TMP_10(uint256)
asgn
Source address: u
Finance type key: (0, -1)
[i]Type for vaderAsset

Name: vaderAsset Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
[i] TMP_11 cleared
[i] assetVader cleared
Propogating parameters and globals to SSA variables...
Ssa_name: vaderDeposited_1, name: vaderDeposited

Name: vaderDeposited Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: assetBalance_1, name: assetBalance

Name: assetBalance Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: vaderDeposited_1, name: vaderDeposited

Name: vaderDeposited Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: assetBalance_1, name: assetBalance

Name: assetBalance Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: assetVader_1, name: assetVader

Name: assetVader Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: assetVader, Num: 1
Globalname: assetVader, contract_name: VaderMath
End popogation
TMP_11(uint256) = assetBalance_1 (c)* vaderDeposited_1
lnorm: u rnorm: u
Source address: u
[i]Type for TMP_11

Name: TMP_11 Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
assetVader_1(uint256) := TMP_11(uint256)
asgn
Source address: u
Finance type key: (0, -1)
[i]Type for assetVader

Name: assetVader Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
[i] TMP_12 cleared
[i] TMP_13 cleared
[i] TMP_14 cleared
[i] denominator cleared
Propogating parameters and globals to SSA variables...
Ssa_name: vaderDeposited_1, name: vaderDeposited

Name: vaderDeposited Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: assetDeposited_1, name: assetDeposited

Name: assetDeposited Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: vaderBalance_1, name: vaderBalance

Name: vaderBalance Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: assetBalance_1, name: assetBalance

Name: assetBalance Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: vaderDeposited_1, name: vaderDeposited

Name: vaderDeposited Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: assetDeposited_1, name: assetDeposited

Name: assetDeposited Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: vaderBalance_1, name: vaderBalance

Name: vaderBalance Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: assetBalance_1, name: assetBalance

Name: assetBalance Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: denominator, Num: 1
Globalname: denominator, contract_name: VaderMath
End popogation
TMP_12(uint256) = vaderDeposited_1 (c)+ vaderBalance_1
Source address: u
[i]Type for TMP_12

Name: TMP_12 Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
TMP_13(uint256) = assetDeposited_1 (c)+ assetBalance_1
Source address: u
[i]Type for TMP_13

Name: TMP_13 Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
TMP_14(uint256) = TMP_12 (c)* TMP_13
lnorm: u rnorm: u
Finance type key: (0, 0)
Source address: u
[i]Type for TMP_14

Name: TMP_14 Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
denominator_1(uint256) := TMP_14(uint256)
asgn
Source address: u
Finance type key: (0, -1)
[i]Type for denominator

Name: denominator Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
[i] TMP_15 cleared
[i] TMP_16 cleared
[i] TMP_17 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: assetVader_1, name: assetVader

Name: assetVader Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: vaderAsset_1, name: vaderAsset

Name: vaderAsset Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: ONE_4, name: ONE

Name: ONE Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: ONE_4, name: ONE

Name: ONE Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: assetVader_1, name: assetVader

Name: assetVader Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: vaderAsset_1, name: vaderAsset

Name: vaderAsset Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
TMP_15(uint256) = INTERNAL_CALL, VaderMath.delta(uint256,uint256)(vaderAsset_1,assetVader_1)
New param cache [[[-1], [-1], 'u', None, [], 0, 'u', 'u'], [[-1], [-1], 'u', None, [], 0, 'u', 'u']]
Old param cache: [[[], [], 'u', None, [], -1, 'u'], [[], [], 'u', None, [], -1, 'u']]
[[-1], [-1], 'u', None, [], 0, 'u', 'u']

Name: a Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
[[-1], [-1], 'u', None, [], 0, 'u', 'u']

Name: b Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
FIND RETURN
ENTRY_POINT
delta(uint256,uint256)
Propogating All
Propogating All
b_1
Ssa_name: b_1, name: b

Name: b Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Source address: u

Name: b_1 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
a_1
Ssa_name: a_1, name: a

Name: a Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Source address: u

Name: a_1 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
Propogating All
b_1
Ssa_name: b_1, name: b

Name: b_1 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Source address: u

Name: b_1 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Source address: u

Name: a_1 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
Propogating All
b_1
Ssa_name: b_1, name: b

Name: b_1 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Source address: u

Name: b_1 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Source address: u

Name: a_1 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
[i] a cleared
[i] b cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a_1 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
Ssa_name: b_1, name: b

Name: b_1 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: b_1 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
a_1(uint256) := ϕ(['vaderAsset_1'])
Phi
[i]Type for a

Name: a Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
b_1(uint256) := ϕ(['assetVader_1'])
Phi
[i]Type for b

Name: b Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
[i] TMP_45 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: b_1, name: b

Name: b Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: a_1, name: a

Name: a Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: b_1, name: b

Name: b Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: a_1, name: a

Name: a Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
TMP_45(bool) = a_1 > b_1
lnorm: u rnorm: u
Finance type key: (0, 0)
[i]Type for TMP_45

Name: TMP_45 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_47 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: b_1, name: b

Name: b Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: a_1, name: a

Name: a Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: b_1, name: b

Name: b Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: a_1, name: a

Name: a Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
TMP_47(uint256) = b_1 (c)- a_1
Finance type key: (0, 0)
Source address: u
[i]Type for TMP_47

Name: TMP_47 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
RETURN TMP_47
RETURN

Name: TMP_47 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
[i] TMP_46 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: b_1, name: b

Name: b Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: a_1, name: a

Name: a Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: b_1, name: b

Name: b Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: a_1, name: a

Name: a Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
TMP_46(uint256) = a_1 (c)- b_1
Finance type key: (0, 0)
Source address: u
[i]Type for TMP_46

Name: TMP_46 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
RETURN TMP_46
RETURN

Name: TMP_46 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
[i] a cleared
[i] b cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
Ssa_name: b_1, name: b

Name: b Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: b_1 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
a_1(uint256) := ϕ(['vaderAsset_1'])
Phi
[i]Type for a

Name: a Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
b_1(uint256) := ϕ(['assetVader_1'])
Phi
[i]Type for b

Name: b Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
[i] TMP_45 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: b_1, name: b

Name: b Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: a_1, name: a

Name: a Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: b_1, name: b

Name: b Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: a_1, name: a

Name: a Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
TMP_45(bool) = a_1 > b_1
lnorm: u rnorm: u
Finance type key: (0, 0)
[i]Type for TMP_45

Name: TMP_45 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_47 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: b_1, name: b

Name: b Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: a_1, name: a

Name: a Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: b_1, name: b

Name: b Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: a_1, name: a

Name: a Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
TMP_47(uint256) = b_1 (c)- a_1
Finance type key: (0, 0)
Source address: u
[i]Type for TMP_47

Name: TMP_47 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
RETURN TMP_47
RETURN

Name: TMP_47 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
[i] TMP_46 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: b_1, name: b

Name: b Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: a_1, name: a

Name: a Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: b_1, name: b

Name: b Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: a_1, name: a

Name: a Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
TMP_46(uint256) = a_1 (c)- b_1
Finance type key: (0, 0)
Source address: u
[i]Type for TMP_46

Name: TMP_46 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
RETURN TMP_46
RETURN

Name: TMP_46 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
([-1], [-1], 'u', 'u', 'u', 0)
[i]Type for TMP_15

Name: TMP_15 Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
TMP_16(uint256) = TMP_15 (c)/ denominator_1
lnorm: u rnorm: u
Finance type key: (0, 0)
lnorm: u rnorm: u
Finance type key: (0, 0)
[i]Type for TMP_16

Name: TMP_16 Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
TMP_17(uint256) = ONE_4 (c)- TMP_16
Source address: u
[i]Type for TMP_17

Name: TMP_17 Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
RETURN TMP_17
RETURN

Name: TMP_17 Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Source address: u
Source address: u
[i]Type for TMP_0

Name: TMP_0 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
ONE_2(uint256) := ϕ(['ONE_4'])
Phi
[i]Type for ONE

Name: ONE Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
slip_1(uint256) := TMP_0(uint256)
asgn
Source address: u
Finance type key: (0, -1)
[i]Type for slip

Name: slip Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
[i] TMP_1 cleared
[i] TMP_2 cleared
[i] TMP_3 cleared
[i] poolUnitFactor cleared
Propogating parameters and globals to SSA variables...
Ssa_name: assetDeposited_1, name: assetDeposited

Name: assetDeposited_1 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: vaderBalance_1, name: vaderBalance

Name: vaderBalance_1 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: assetBalance_1, name: assetBalance

Name: assetBalance_1 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: vaderDeposited_1, name: vaderDeposited

Name: vaderDeposited_1 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: assetDeposited_1, name: assetDeposited

Name: assetDeposited_1 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: vaderBalance_1, name: vaderBalance

Name: vaderBalance_1 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: assetBalance_1, name: assetBalance

Name: assetBalance_1 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: vaderDeposited_1, name: vaderDeposited

Name: vaderDeposited_1 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: poolUnitFactor_1, name: poolUnitFactor

Name: poolUnitFactor Function: calculateLiquidityUnits
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: poolUnitFactor, Num: 1
Globalname: poolUnitFactor, contract_name: VaderMath
End popogation
TMP_1(uint256) = vaderBalance_1 (c)* assetDeposited_1
lnorm: u rnorm: u
Source address: u
[i]Type for TMP_1

Name: TMP_1 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
TMP_2(uint256) = vaderDeposited_1 (c)* assetBalance_1
lnorm: u rnorm: u
Source address: u
[i]Type for TMP_2

Name: TMP_2 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
TMP_3(uint256) = TMP_1 (c)+ TMP_2
Finance type key: (0, 0)
Source address: u
[i]Type for TMP_3

Name: TMP_3 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
poolUnitFactor_1(uint256) := TMP_3(uint256)
asgn
Source address: u
Finance type key: (0, -1)
[i]Type for poolUnitFactor

Name: poolUnitFactor Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
[i] TMP_4 cleared
[i] TMP_5 cleared
[i] TMP_6 cleared
[i] denominator cleared
Propogating parameters and globals to SSA variables...
Ssa_name: vaderBalance_1, name: vaderBalance

Name: vaderBalance_1 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: assetBalance_1, name: assetBalance

Name: assetBalance_1 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: ONE_2, name: ONE

Name: ONE Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: vaderBalance_1, name: vaderBalance

Name: vaderBalance_1 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: assetBalance_1, name: assetBalance

Name: assetBalance_1 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: ONE_2, name: ONE

Name: ONE Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateLiquidityUnits
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: denominator, Num: 1
Globalname: denominator, contract_name: VaderMath
End popogation
TMP_4(uint256) = ONE_2 (c)* 2
lnorm: u rnorm: 0
Source address: u
[i]Type for TMP_4

Name: TMP_4 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_5(uint256) = TMP_4 (c)* vaderBalance_1
lnorm: 0 rnorm: u
Source address: u
[i]Type for TMP_5

Name: TMP_5 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_6(uint256) = TMP_5 (c)* assetBalance_1
lnorm: 0 rnorm: u
Source address: u
[i]Type for TMP_6

Name: TMP_6 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
denominator_1(uint256) := TMP_6(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for denominator

Name: denominator Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] TMP_7 cleared
[i] TMP_8 cleared
[i] TMP_9 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: slip_1, name: slip

Name: slip Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: poolUnitFactor_1, name: poolUnitFactor

Name: poolUnitFactor Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: totalPoolUnits_1, name: totalPoolUnits

Name: totalPoolUnits_1 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: slip_1, name: slip

Name: slip Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: poolUnitFactor_1, name: poolUnitFactor

Name: poolUnitFactor Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: totalPoolUnits_1, name: totalPoolUnits

Name: totalPoolUnits_1 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
End popogation
TMP_7(uint256) = totalPoolUnits_1 (c)* poolUnitFactor_1
lnorm: u rnorm: u
Source address: u
[i]Type for TMP_7

Name: TMP_7 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
TMP_8(uint256) = TMP_7 (c)/ denominator_1
lnorm: u rnorm: 0
lnorm: u rnorm: 0
[i]Type for TMP_8

Name: TMP_8 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: raw balance
XXXX
TMP_9(uint256) = TMP_8 (c)* slip_1
lnorm: 0 rnorm: u
Finance type key: (0, 0)
Source address: u
[i]Type for TMP_9

Name: TMP_9 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: raw balance
XXXX
RETURN TMP_9
RETURN

Name: TMP_9 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: raw balance
Source address: u
Source address: u
[i]Type for TMP_146

Name: TMP_146 Function: mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: raw balance
XXXX
liquidity_1(uint256) := TMP_146(uint256)
asgn
Source address: u
Finance type key: (0, -1)
[i]Type for liquidity

Name: liquidity Function: mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: raw balance
XXXX
[i] liquidity cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: liquidity_3, name: liquidity

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: liquidity, Num: 3
Globalname: liquidity, contract_name: BasePool
liquidity_3(uint256) := ϕ(['liquidity_1', 'liquidity_2'])
Phi

Name: liquidity Function: mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: raw balance

Name: liquidity Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance


END==================================
[i]Type for liquidity

Name: liquidity Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_147 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: liquidity_3, name: liquidity

Name: liquidity Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: liquidity, Num: 3
Globalname: liquidity, contract_name: BasePool
Ssa_name: liquidity_3, name: liquidity

Name: liquidity Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: liquidity, Num: 3
Globalname: liquidity, contract_name: BasePool
End popogation
TMP_147(bool) = liquidity_3 > 0
lnorm: u rnorm: 0
Source address: u
Source address: u
[i]Type for TMP_147

Name: TMP_147 Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_148(None) = SOLIDITY_CALL require(bool,string)(TMP_147,BasePool::mint: Insufficient Liquidity Provided)
[i]Type for TMP_148

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_149 cleared
[i] id cleared
Propogating parameters and globals to SSA variables...
Ssa_name: positionId_5, name: positionId

Name: positionId Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: positionId_5, name: positionId

Name: positionId Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: positionId_6, name: positionId

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: positionId, Num: 6
Globalname: positionId, contract_name: BasePool
global...

Name: PIC_36 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Ssa_name: id_1, name: id

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: id, Num: 1
Globalname: id, contract_name: BasePool
End popogation
TMP_149(uint256) := positionId_5(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for TMP_149

Name: TMP_149 Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
positionId_6(uint256) = positionId_5 (c)+ 1
Source address: u
[i]Type for positionId

Name: positionId Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
id_1(uint256) := TMP_149(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for id

Name: id Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Copied positionId
Source address: u
Propogating parameters and globals to SSA variables...
Ssa_name: liquidity_3, name: liquidity

Name: liquidity Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: totalSupply_5, name: totalSupply

Name: totalSupply Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: totalSupply_5, name: totalSupply

Name: totalSupply Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: liquidity_3, name: liquidity

Name: liquidity Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: totalSupply_6, name: totalSupply

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: totalSupply, Num: 6
Globalname: totalSupply, contract_name: BasePool
global...

Name: PIC_37 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
End popogation
totalSupply_6(uint256) = totalSupply_5 (c)+ liquidity_3
Source address: u
[i]Type for totalSupply

Name: totalSupply Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Copied totalSupply
Source address: u
Propogating parameters and globals to SSA variables...
Ssa_name: to_1, name: to

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: -998

Name: to_1 Function: mint
Num: 
Den: 
Address: -998
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: id_1, name: id

Name: id Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to_1 Function: mint
Num: 
Den: 
Address: -998
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: id_1, name: id

Name: id Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
INTERNAL_CALL, ERC721._mint(address,uint256)(to_1,id_1)
New param cache [[[], [], 0, 'to', [], -1, -998, 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u']]
[[], [], 0, 'to', [], -1, -998, 'u']

Name: to Function: None
Num: 
Den: 
Address: -998
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: tokenId Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_mint(address,uint256)
Propogating All
Propogating All
to_1
Ssa_name: to_1, name: to

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: -998

Name: to_1 Function: _mint
Num: 
Den: 
Address: -998
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
tokenId_1
Ssa_name: tokenId_1, name: tokenId

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: tokenId_1 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
tokenId_1
Ssa_name: tokenId_1, name: tokenId

Name: tokenId_1 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: tokenId_1 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
to_1
Ssa_name: to_1, name: to

Name: to_1 Function: _mint
Num: 
Den: 
Address: -998
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Source address: -998

Name: to_1 Function: _mint
Num: 
Den: 
Address: -998
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
tokenId_1
Ssa_name: tokenId_1, name: tokenId

Name: tokenId_1 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: tokenId_1 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
to_1
Ssa_name: to_1, name: to

Name: to_1 Function: _mint
Num: 
Den: 
Address: -998
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Source address: -998

Name: to_1 Function: _mint
Num: 
Den: 
Address: -998
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
tokenId_1
Ssa_name: tokenId_1, name: tokenId

Name: tokenId_1 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: tokenId_1 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
to_1
Ssa_name: to_1, name: to

Name: to_1 Function: _mint
Num: 
Den: 
Address: -998
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Source address: -998

Name: to_1 Function: _mint
Num: 
Den: 
Address: -998
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
tokenId_1
Ssa_name: tokenId_1, name: tokenId

Name: tokenId_1 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: tokenId_1 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
to_1
Ssa_name: to_1, name: to

Name: to_1 Function: _mint
Num: 
Den: 
Address: -998
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Source address: -998

Name: to_1 Function: _mint
Num: 
Den: 
Address: -998
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
tokenId_1
Ssa_name: tokenId_1, name: tokenId

Name: tokenId_1 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: tokenId_1 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
to_1
Ssa_name: to_1, name: to

Name: to_1 Function: _mint
Num: 
Den: 
Address: -998
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Source address: -998

Name: to_1 Function: _mint
Num: 
Den: 
Address: -998
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Copied ftype
[i] to cleared
[i] tokenId cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: to_1, name: to

Name: to_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: to
Value: u
Fields: 
Finance Type: undef
Source address: -998

Name: to_1 Function: _mint
Num: 
Den: 
Address: -998
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: tokenId_1, name: tokenId

Name: tokenId_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: tokenId_1 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: _balances_2, name: _balances

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _balances, Num: 2
Globalname: _balances, contract_name: BasePool
global...

Name: PIC_21 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
to_1(address) := ϕ(['to_1', 'to_1'])
Phi
[i]Type for to

Name: to Function: _mint
Num: 
Den: 
Address: -998
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
XXXX
tokenId_1(uint256) := ϕ(['id_1', 'tokenId_1'])
Phi
[i]Type for tokenId

Name: tokenId Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_balances_2(mapping(address => uint256)) := ϕ(['_balances_6', '_balances_19', '_balances_1', '_balances_0', '_balances_17', '_balances_11'])
Phi
[i]Type for _balances

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_79 cleared
[i] TMP_80 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: to_1, name: to

Name: to Function: _mint
Num: 
Den: 
Address: -998
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _mint
Num: 
Den: 
Address: -998
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_79 = CONVERT 0 to address
Converting 0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_79

Name: TMP_79 Function: _mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_80(bool) = to_1 != TMP_79
[i]Type for TMP_80

Name: TMP_80 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_81(None) = SOLIDITY_CALL require(bool,string)(TMP_80,ERC721: mint to the zero address)
[i]Type for TMP_81

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_82 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: tokenId_1, name: tokenId

Name: tokenId Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: tokenId_1, name: tokenId

Name: tokenId Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_82(bool) = INTERNAL_CALL, ERC721._exists(uint256)(tokenId_1)
New param cache [[[-1], [-1], 'u', None, [], -1, 'u', 'u']]
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: tokenId Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_exists(uint256)
Propogating All
Propogating All
tokenId_1
Ssa_name: tokenId_1, name: tokenId

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: tokenId_1 Function: _exists
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
[i] tokenId cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: tokenId_1, name: tokenId

Name: tokenId_1 Function: _exists
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: tokenId_1 Function: _exists
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
tokenId_1(uint256) := ϕ(['tokenId_1', 'tokenId_1'])
Phi
[i]Type for tokenId

Name: tokenId Function: _exists
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_64 cleared
[i] TMP_65 cleared
[i] TMP_66 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: tokenId_1, name: tokenId

Name: tokenId Function: _exists
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: tokenId_1, name: tokenId

Name: tokenId Function: _exists
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_64(address) = INTERNAL_CALL, ERC721._ownerOf(uint256)(tokenId_1)
New param cache [[[-1], [-1], 'u', None, [], -1, 'u', 'u']]
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: tokenId Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_ownerOf(uint256)
Propogating All
Propogating All
tokenId_1
Ssa_name: tokenId_1, name: tokenId

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: tokenId_1 Function: _ownerOf
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
[i] tokenId cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: tokenId_1, name: tokenId

Name: tokenId_1 Function: _ownerOf
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: tokenId_1 Function: _ownerOf
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: _owners_1, name: _owners

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _owners, Num: 1
Globalname: _owners, contract_name: BasePool
global...

Name: PIC_26 Function: None
Num: -1
Den: -1
Address: 3
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: 3
tokenId_1(uint256) := ϕ(['tokenId_1', 'tokenId_1'])
Phi
[i]Type for tokenId

Name: tokenId Function: _ownerOf
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_owners_1(mapping(uint256 => address)) := ϕ(['_owners_1', '_owners_2', '_owners_0', '_owners_8', '_owners_7'])
Phi
[i]Type for _owners

Name: _owners Function: _ownerOf
Num: -1
Den: -1
Address: 3
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: tokenId_1, name: tokenId

Name: tokenId Function: _ownerOf
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _owners_1, name: _owners

Name: _owners Function: _ownerOf
Num: -1
Den: -1
Address: 3
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _owners_1, name: _owners

Name: _owners Function: _ownerOf
Num: -1
Den: -1
Address: 3
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: tokenId_1, name: tokenId

Name: tokenId Function: _ownerOf
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
REF_10(address) -> _owners_1[tokenId_1]
INDEX
[i]Type for REF_10

Name: _owners Function: _ownerOf
Num: 
Den: 
Address: 3
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
RETURN REF_10
RETURN

Name: _owners Function: _ownerOf
Num: 
Den: 
Address: 3
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] tokenId cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: tokenId_1, name: tokenId

Name: tokenId Function: _ownerOf
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: tokenId_1 Function: _ownerOf
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: _owners_1, name: _owners

Name: _owners Function: _ownerOf
Num: -1
Den: -1
Address: 3
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
tokenId_1(uint256) := ϕ(['tokenId_1', 'tokenId_1'])
Phi
[i]Type for tokenId

Name: tokenId Function: _ownerOf
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_owners_1(mapping(uint256 => address)) := ϕ(['_owners_1', '_owners_2', '_owners_0', '_owners_8', '_owners_7'])
Phi
[i]Type for _owners

Name: _owners Function: _ownerOf
Num: -1
Den: -1
Address: 3
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: tokenId_1, name: tokenId

Name: tokenId Function: _ownerOf
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _owners_1, name: _owners

Name: _owners Function: _ownerOf
Num: -1
Den: -1
Address: 3
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _owners_1, name: _owners

Name: _owners Function: _ownerOf
Num: -1
Den: -1
Address: 3
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: tokenId_1, name: tokenId

Name: tokenId Function: _ownerOf
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
REF_10(address) -> _owners_1[tokenId_1]
INDEX
[i]Type for REF_10

Name: _owners Function: _ownerOf
Num: 
Den: 
Address: 3
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
RETURN REF_10
RETURN

Name: _owners Function: _ownerOf
Num: 
Den: 
Address: 3
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: 3
Source address: 3
[i]Type for TMP_64

Name: TMP_64 Function: _exists
Num: 
Den: 
Address: 3
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_65 = CONVERT 0 to address
Converting 0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_65

Name: TMP_65 Function: _exists
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_66(bool) = TMP_64 != TMP_65
[i]Type for TMP_66

Name: TMP_66 Function: _exists
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_66
RETURN

Name: TMP_66 Function: _exists
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] tokenId cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: tokenId_1, name: tokenId

Name: tokenId Function: _exists
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: tokenId_1 Function: _exists
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
tokenId_1(uint256) := ϕ(['tokenId_1', 'tokenId_1'])
Phi
[i]Type for tokenId

Name: tokenId Function: _exists
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_64 cleared
[i] TMP_65 cleared
[i] TMP_66 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: tokenId_1, name: tokenId

Name: tokenId Function: _exists
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: tokenId_1, name: tokenId

Name: tokenId Function: _exists
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_64(address) = INTERNAL_CALL, ERC721._ownerOf(uint256)(tokenId_1)
New param cache [[[-1], [-1], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 'u', None, [], -1, 'u']]
Source address: 3
[i]Type for TMP_64

Name: TMP_64 Function: _exists
Num: 
Den: 
Address: 3
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_65 = CONVERT 0 to address
Converting 0

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_65

Name: TMP_65 Function: _exists
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_66(bool) = TMP_64 != TMP_65
[i]Type for TMP_66

Name: TMP_66 Function: _exists
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_66
RETURN

Name: TMP_66 Function: _exists
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Source address: u
[i]Type for TMP_82

Name: TMP_82 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_83 = ! TMP_82 
[i]Type for TMP_83

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_84(None) = SOLIDITY_CALL require(bool,string)(TMP_83,ERC721: token already minted)
[i]Type for TMP_84

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_85 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: tokenId_1, name: tokenId

Name: tokenId Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _mint
Num: 
Den: 
Address: -998
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: tokenId_1, name: tokenId

Name: tokenId Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _mint
Num: 
Den: 
Address: -998
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_85 = CONVERT 0 to address
Converting 0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_85

Name: TMP_85 Function: _mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
INTERNAL_CALL, ERC721._beforeTokenTransfer(address,address,uint256,uint256)(TMP_85,to_1,tokenId_1,1)
New param cache [[[-1], [-1], 0, None, [], -1, 'u', 'u'], [[], [], 0, 'to', [], -1, -998, 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u'], [[-1], [-1], 0, None, [], -1, 'u', 'u']]
[[-1], [-1], 0, None, [], -1, 'u', 'u']

Name: from Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: from
Value: u
Fields: 
Finance Type: undef
[[], [], 0, 'to', [], -1, -998, 'u']

Name: to Function: None
Num: 
Den: 
Address: -998
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: firstTokenId Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 0, None, [], -1, 'u', 'u']

Name: batchSize Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_beforeTokenTransfer(address,address,uint256,uint256)
Propogating All
[i] from cleared
[i] to cleared
[i] firstTokenId cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: from_1, name: from

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: from_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: from
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: to_1, name: to

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: -998

Name: to_1 Function: _beforeTokenTransfer
Num: 
Den: 
Address: -998
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: firstTokenId_1, name: firstTokenId

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: firstTokenId_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
from_1(address) := ϕ(['TMP_85', 'owner_1', 'from_1'])
Phi
[i]Type for from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: from
Value: u
Fields: 
Finance Type: undef
XXXX
to_1(address) := ϕ(['to_1', 'TMP_95', 'to_1'])
Phi
[i]Type for to

Name: to Function: _beforeTokenTransfer
Num: 
Den: 
Address: -998
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
XXXX
firstTokenId_1(uint256) := ϕ(['tokenId_1', 'tokenId_1', 'tokenId_1'])
Phi
[i]Type for firstTokenId

Name: firstTokenId Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] from cleared
[i] to cleared
[i] firstTokenId cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: from_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: from
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: to_1, name: to

Name: to Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: to
Value: u
Fields: 
Finance Type: undef
Source address: -998

Name: to_1 Function: _beforeTokenTransfer
Num: 
Den: 
Address: -998
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: firstTokenId_1, name: firstTokenId

Name: firstTokenId Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: firstTokenId_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
from_1(address) := ϕ(['TMP_85', 'owner_1', 'from_1'])
Phi
[i]Type for from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: from
Value: u
Fields: 
Finance Type: undef
XXXX
to_1(address) := ϕ(['to_1', 'TMP_95', 'to_1'])
Phi
[i]Type for to

Name: to Function: _beforeTokenTransfer
Num: 
Den: 
Address: -998
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
XXXX
firstTokenId_1(uint256) := ϕ(['tokenId_1', 'tokenId_1', 'tokenId_1'])
Phi
[i]Type for firstTokenId

Name: firstTokenId Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_87 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: tokenId_1, name: tokenId

Name: tokenId Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: tokenId_1, name: tokenId

Name: tokenId Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_87(bool) = INTERNAL_CALL, ERC721._exists(uint256)(tokenId_1)
New param cache [[[-1], [-1], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 'u', None, [], -1, 'u']]
[i]Type for TMP_87

Name: TMP_87 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_88 = ! TMP_87 
[i]Type for TMP_88

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_89(None) = SOLIDITY_CALL require(bool,string)(TMP_88,ERC721: token already minted)
[i]Type for TMP_89

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: to_1, name: to

Name: to Function: _mint
Num: 
Den: 
Address: -998
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: _balances_6, name: _balances

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _balances, Num: 6
Globalname: _balances, contract_name: BasePool
global...

Name: PIC_21 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Ssa_name: _balances_6, name: _balances

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _mint
Num: 
Den: 
Address: -998
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: _balances_6, name: _balances

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
Ssa_name: _balances_6, name: _balances

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_12(uint256) -> _balances_5[to_1]
INDEX
REFERENCE RIGHT VALUE PROPAGATION
[i]Type for REF_12

Name: None Function: None
Num: -998
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
_balances_6(mapping(address => uint256)) := ϕ(['_balances_5'])
Phi
[i]Type for _balances

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_12(-> _balances_6) = REF_12 + 1
-998
-1
[i]Type for REF_12

Name: REF_12 Function: _mint
Num: -998
Den: -1
Address: u
Norm: 0
LF: None
Value: 1
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
Copied _balances
Source address: u
Propogating parameters and globals to SSA variables...
Ssa_name: tokenId_1, name: tokenId

Name: tokenId Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _mint
Num: 
Den: 
Address: -998
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: tokenId_1, name: tokenId

Name: tokenId Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _mint
Num: 
Den: 
Address: -998
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: _owners_2, name: _owners

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _owners, Num: 2
Globalname: _owners, contract_name: BasePool
global...

Name: PIC_26 Function: None
Num: -1
Den: -1
Address: 3
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: 3
End popogation
Ssa_name: _owners_2, name: _owners

Name: None Function: None
Num: -1
Den: -1
Address: 3
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
REF_13(address) -> _owners_1[tokenId_1]
INDEX
[i]Type for REF_13

Name: _owners Function: _ownerOf
Num: 
Den: 
Address: 3
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
_owners_2(mapping(uint256 => address)) := ϕ(['_owners_1'])
Phi
[i]Type for _owners

Name: _owners Function: _mint
Num: -1
Den: -1
Address: 3
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_13 (->_owners_2) := to_1(address)
asgn
Finance type key: (-1, -1)
[i]Type for REF_13

Name: REF_13 Function: _mint
Num: 
Den: 
Address: 3
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
Copied _owners
Source address: 3
[i] TMP_90 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: tokenId_1, name: tokenId

Name: tokenId Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _mint
Num: 
Den: 
Address: -998
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: tokenId_1, name: tokenId

Name: tokenId Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _mint
Num: 
Den: 
Address: -998
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_90 = CONVERT 0 to address
Converting 0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_90

Name: TMP_90 Function: _mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_92 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: tokenId_1, name: tokenId

Name: tokenId Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _mint
Num: 
Den: 
Address: -998
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: tokenId_1, name: tokenId

Name: tokenId Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _mint
Num: 
Den: 
Address: -998
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_92 = CONVERT 0 to address
Converting 0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_92

Name: TMP_92 Function: _mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
INTERNAL_CALL, ERC721._afterTokenTransfer(address,address,uint256,uint256)(TMP_92,to_1,tokenId_1,1)
New param cache [[[-1], [-1], 0, None, [], -1, 'u', 'u'], [[], [], 0, 'to', [], -1, -998, 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u'], [[-1], [-1], 0, None, [], -1, 'u', 'u']]
[[-1], [-1], 0, None, [], -1, 'u', 'u']

Name: from Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: from
Value: u
Fields: 
Finance Type: undef
[[], [], 0, 'to', [], -1, -998, 'u']

Name: to Function: None
Num: 
Den: 
Address: -998
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: firstTokenId Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 0, None, [], -1, 'u', 'u']

Name: batchSize Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_afterTokenTransfer(address,address,uint256,uint256)
Propogating All
[i] from cleared
[i] to cleared
[i] firstTokenId cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: from_1, name: from

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: from_1 Function: _afterTokenTransfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: from
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: to_1, name: to

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: -998

Name: to_1 Function: _afterTokenTransfer
Num: 
Den: 
Address: -998
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: firstTokenId_1, name: firstTokenId

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: firstTokenId_1 Function: _afterTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
from_1(address) := ϕ(['owner_2', 'from_1', 'TMP_92'])
Phi
[i]Type for from

Name: from Function: _afterTokenTransfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: from
Value: u
Fields: 
Finance Type: undef
XXXX
to_1(address) := ϕ(['to_1', 'TMP_100', 'to_1'])
Phi
[i]Type for to

Name: to Function: _afterTokenTransfer
Num: 
Den: 
Address: -998
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
XXXX
firstTokenId_1(uint256) := ϕ(['tokenId_1', 'tokenId_1', 'tokenId_1'])
Phi
[i]Type for firstTokenId

Name: firstTokenId Function: _afterTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] from cleared
[i] to cleared
[i] firstTokenId cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: from_1, name: from

Name: from Function: _afterTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: from_1 Function: _afterTokenTransfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: from
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: to_1, name: to

Name: to Function: _afterTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: to
Value: u
Fields: 
Finance Type: undef
Source address: -998

Name: to_1 Function: _afterTokenTransfer
Num: 
Den: 
Address: -998
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: firstTokenId_1, name: firstTokenId

Name: firstTokenId Function: _afterTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: firstTokenId_1 Function: _afterTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
from_1(address) := ϕ(['owner_2', 'from_1', 'TMP_92'])
Phi
[i]Type for from

Name: from Function: _afterTokenTransfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: from
Value: u
Fields: 
Finance Type: undef
XXXX
to_1(address) := ϕ(['to_1', 'TMP_100', 'to_1'])
Phi
[i]Type for to

Name: to Function: _afterTokenTransfer
Num: 
Den: 
Address: -998
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
XXXX
firstTokenId_1(uint256) := ϕ(['tokenId_1', 'tokenId_1', 'tokenId_1'])
Phi
[i]Type for firstTokenId

Name: firstTokenId Function: _afterTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] to cleared
[i] tokenId cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: to_1, name: to

Name: to Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: to
Value: u
Fields: 
Finance Type: undef
Source address: -998

Name: to_1 Function: _mint
Num: 
Den: 
Address: -998
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: tokenId_1, name: tokenId

Name: tokenId Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: tokenId_1 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: _balances_2, name: _balances

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
to_1(address) := ϕ(['to_1', 'to_1'])
Phi
[i]Type for to

Name: to Function: _mint
Num: 
Den: 
Address: -998
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
XXXX
tokenId_1(uint256) := ϕ(['id_1', 'tokenId_1'])
Phi
[i]Type for tokenId

Name: tokenId Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_balances_2(mapping(address => uint256)) := ϕ(['_balances_6', '_balances_19', '_balances_1', '_balances_0', '_balances_17', '_balances_11'])
Phi
[i]Type for _balances

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_79 cleared
[i] TMP_80 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: to_1, name: to

Name: to Function: _mint
Num: 
Den: 
Address: -998
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _mint
Num: 
Den: 
Address: -998
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_79 = CONVERT 0 to address
Converting 0

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_79

Name: TMP_79 Function: _mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_80(bool) = to_1 != TMP_79
[i]Type for TMP_80

Name: TMP_80 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_81(None) = SOLIDITY_CALL require(bool,string)(TMP_80,ERC721: mint to the zero address)
[i]Type for TMP_81

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_82 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: tokenId_1, name: tokenId

Name: tokenId Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: tokenId_1, name: tokenId

Name: tokenId Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_82(bool) = INTERNAL_CALL, ERC721._exists(uint256)(tokenId_1)
New param cache [[[-1], [-1], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 'u', None, [], -1, 'u']]
[i]Type for TMP_82

Name: TMP_82 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_83 = ! TMP_82 
[i]Type for TMP_83

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_84(None) = SOLIDITY_CALL require(bool,string)(TMP_83,ERC721: token already minted)
[i]Type for TMP_84

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_85 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: tokenId_1, name: tokenId

Name: tokenId Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _mint
Num: 
Den: 
Address: -998
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: tokenId_1, name: tokenId

Name: tokenId Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _mint
Num: 
Den: 
Address: -998
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_85 = CONVERT 0 to address
Converting 0

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_85

Name: TMP_85 Function: _mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
INTERNAL_CALL, ERC721._beforeTokenTransfer(address,address,uint256,uint256)(TMP_85,to_1,tokenId_1,1)
New param cache [[[-1], [-1], 0, None, [], -1, 'u', 'u'], [[], [], 0, 'to', [], -1, -998, 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u'], [[-1], [-1], 0, None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 0, None, [], -1, 'u'], [[], [], 0, 'to', [], -1, -998], [[-1], [-1], 'u', None, [], -1, 'u'], [[-1], [-1], 0, None, [], -1, 'u']]
[i] TMP_87 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: tokenId_1, name: tokenId

Name: tokenId Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: tokenId_1, name: tokenId

Name: tokenId Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_87(bool) = INTERNAL_CALL, ERC721._exists(uint256)(tokenId_1)
New param cache [[[-1], [-1], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 'u', None, [], -1, 'u']]
[i]Type for TMP_87

Name: TMP_87 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_88 = ! TMP_87 
[i]Type for TMP_88

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_89(None) = SOLIDITY_CALL require(bool,string)(TMP_88,ERC721: token already minted)
[i]Type for TMP_89

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: to_1, name: to

Name: to Function: _mint
Num: 
Den: 
Address: -998
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: _balances_6, name: _balances

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _balances_6, name: _balances

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _mint
Num: 
Den: 
Address: -998
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: _balances_6, name: _balances

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
Ssa_name: _balances_6, name: _balances

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_12(uint256) -> _balances_5[to_1]
INDEX
REFERENCE RIGHT VALUE PROPAGATION
[i]Type for REF_12

Name: None Function: None
Num: -998
Den: -1
Address: u
Norm: 0
LF: None
Value: 1
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
_balances_6(mapping(address => uint256)) := ϕ(['_balances_5'])
Phi
[i]Type for _balances

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_12(-> _balances_6) = REF_12 + 1
-998
-1
[i]Type for REF_12

Name: REF_12 Function: _mint
Num: -998
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
Copied _balances
Source address: u
Propogating parameters and globals to SSA variables...
Ssa_name: tokenId_1, name: tokenId

Name: tokenId Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _mint
Num: 
Den: 
Address: -998
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: tokenId_1, name: tokenId

Name: tokenId Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _mint
Num: 
Den: 
Address: -998
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: _owners_2, name: _owners

Name: _owners Function: _mint
Num: -1
Den: -1
Address: 3
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
Ssa_name: _owners_2, name: _owners

Name: _owners Function: _mint
Num: -1
Den: -1
Address: 3
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
REF_13(address) -> _owners_1[tokenId_1]
INDEX
[i]Type for REF_13

Name: _owners Function: _ownerOf
Num: 
Den: 
Address: 3
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
_owners_2(mapping(uint256 => address)) := ϕ(['_owners_1'])
Phi
[i]Type for _owners

Name: _owners Function: _mint
Num: -1
Den: -1
Address: 3
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_13 (->_owners_2) := to_1(address)
asgn
Finance type key: (-1, -1)
[i]Type for REF_13

Name: REF_13 Function: _mint
Num: 
Den: 
Address: 3
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
Copied _owners
Source address: 3
[i] TMP_90 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: tokenId_1, name: tokenId

Name: tokenId Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _mint
Num: 
Den: 
Address: -998
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: tokenId_1, name: tokenId

Name: tokenId Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _mint
Num: 
Den: 
Address: -998
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_90 = CONVERT 0 to address
Converting 0

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_90

Name: TMP_90 Function: _mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_92 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: tokenId_1, name: tokenId

Name: tokenId Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _mint
Num: 
Den: 
Address: -998
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: tokenId_1, name: tokenId

Name: tokenId Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _mint
Num: 
Den: 
Address: -998
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_92 = CONVERT 0 to address
Converting 0

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_92

Name: TMP_92 Function: _mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
INTERNAL_CALL, ERC721._afterTokenTransfer(address,address,uint256,uint256)(TMP_92,to_1,tokenId_1,1)
New param cache [[[-1], [-1], 0, None, [], -1, 'u', 'u'], [[], [], 0, 'to', [], -1, -998, 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u'], [[-1], [-1], 0, None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 0, None, [], -1, 'u'], [[], [], 0, 'to', [], -1, -998], [[-1], [-1], 'u', None, [], -1, 'u'], [[-1], [-1], 0, None, [], -1, 'u']]
Propogating parameters and globals to SSA variables...
Ssa_name: id_1, name: id

Name: id Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: foreignDeposit_1, name: foreignDeposit

Name: foreignDeposit Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: liquidity_3, name: liquidity

Name: liquidity Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeDeposit_1, name: nativeDeposit

Name: nativeDeposit Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: id_1, name: id

Name: id Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: foreignDeposit_1, name: foreignDeposit

Name: foreignDeposit Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: liquidity_3, name: liquidity

Name: liquidity Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeDeposit_1, name: nativeDeposit

Name: nativeDeposit Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: positions_1, name: positions

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: positions, Num: 1
Globalname: positions, contract_name: BasePool
global...

Name: PIC_38 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
End popogation
Ssa_name: positions_1, name: positions

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_41(IBasePool.Position) -> positions_0[id_1]
INDEX
[i]Type for REF_41

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_151 = new Position(block.timestamp,liquidity_3,nativeDeposit_1,foreignDeposit_1)
[i]Type for TMP_151

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
positions_1(mapping(uint256 => IBasePool.Position)) := ϕ(['positions_0'])
Phi
[i]Type for positions

Name: positions Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_41 (->positions_1) := TMP_151(IBasePool.Position)
asgn
Finance type key: (-1, -1)
[i]Type for REF_41

Name: REF_41 Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
Copied positions
Source address: u
Propogating parameters and globals to SSA variables...
Ssa_name: balanceForeign_1, name: balanceForeign

Name: balanceForeign Function: mint
Num: 6
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: reserveNative_1, name: reserveNative

Name: reserveNative Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: reserveForeign_1, name: reserveForeign

Name: reserveForeign Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: balanceNative_1, name: balanceNative

Name: balanceNative Function: mint
Num: 5
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: balanceForeign_1, name: balanceForeign

Name: balanceForeign Function: mint
Num: 6
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: reserveNative_1, name: reserveNative

Name: reserveNative Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: reserveForeign_1, name: reserveForeign

Name: reserveForeign Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: balanceNative_1, name: balanceNative

Name: balanceNative Function: mint
Num: 5
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
INTERNAL_CALL, BasePool._update(uint256,uint256,uint112,uint112)(balanceNative_1,balanceForeign_1,reserveNative_1,reserveForeign_1)
New param cache [[[5], [-1], 'u', None, [], 0, 'u', 'u'], [[6], [-1], 'u', None, [], 0, 'u', 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u']]
[[5], [-1], 'u', None, [], 0, 'u', 'u']

Name: balanceNative Function: None
Num: 5
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
[[6], [-1], 'u', None, [], 0, 'u', 'u']

Name: balanceForeign Function: None
Num: 6
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: reserveNative Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: reserveForeign Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_update(uint256,uint256,uint112,uint112)
Propogating All
Propogating All
balanceNative_1
Ssa_name: balanceNative_1, name: balanceNative

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: balanceNative_1 Function: _update
Num: 5
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
balanceForeign_1
Ssa_name: balanceForeign_1, name: balanceForeign

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: balanceForeign_1 Function: _update
Num: 6
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
Propogating All
Propogating All
blockTimestamp_1
Ssa_name: blockTimestamp_1, name: blockTimestamp

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
reserveNative_1
Ssa_name: reserveNative_1, name: reserveNative

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: reserveNative_1 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
timeElapsed_1
Ssa_name: timeElapsed_1, name: timeElapsed

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
reserveForeign_1
Ssa_name: reserveForeign_1, name: reserveForeign

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: reserveForeign_1 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
reserveNative_1
Ssa_name: reserveNative_1, name: reserveNative

Name: reserveNative_1 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: reserveNative_1 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
timeElapsed_1
Ssa_name: timeElapsed_1, name: timeElapsed

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
reserveForeign_1
Ssa_name: reserveForeign_1, name: reserveForeign

Name: reserveForeign_1 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: reserveForeign_1 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
balanceNative_1
Ssa_name: balanceNative_1, name: balanceNative

Name: balanceNative_1 Function: _update
Num: 5
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Source address: u

Name: balanceNative_1 Function: _update
Num: 5
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
Propogating All
reserveNative_1
Ssa_name: reserveNative_1, name: reserveNative

Name: reserveNative_1 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: reserveNative_1 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
timeElapsed_1
Ssa_name: timeElapsed_1, name: timeElapsed

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
reserveForeign_1
Ssa_name: reserveForeign_1, name: reserveForeign

Name: reserveForeign_1 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: reserveForeign_1 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
balanceForeign_1
Ssa_name: balanceForeign_1, name: balanceForeign

Name: balanceForeign_1 Function: _update
Num: 6
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Source address: u

Name: balanceForeign_1 Function: _update
Num: 6
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
Propogating All
blockTimestamp_1
Ssa_name: blockTimestamp_1, name: blockTimestamp

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
balanceNative_1
Ssa_name: balanceNative_1, name: balanceNative

Name: balanceNative_1 Function: _update
Num: 5
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Source address: u

Name: balanceNative_1 Function: _update
Num: 5
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
balanceForeign_1
Ssa_name: balanceForeign_1, name: balanceForeign

Name: balanceForeign_1 Function: _update
Num: 6
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Source address: u

Name: balanceForeign_1 Function: _update
Num: 6
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
[i] balanceNative cleared
[i] balanceForeign cleared
[i] reserveNative cleared
[i] reserveForeign cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: balanceNative_1, name: balanceNative

Name: balanceNative_1 Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: balanceNative_1 Function: _update
Num: 5
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
Ssa_name: balanceForeign_1, name: balanceForeign

Name: balanceForeign_1 Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: balanceForeign_1 Function: _update
Num: 6
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
Ssa_name: reserveNative_1, name: reserveNative

Name: reserveNative_1 Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: reserveNative_1 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: reserveForeign_1, name: reserveForeign

Name: reserveForeign_1 Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: reserveForeign_1 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: priceNativeCumulativeLast_1, name: priceNativeCumulativeLast

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: priceNativeCumulativeLast, Num: 1
Globalname: priceNativeCumulativeLast, contract_name: BasePool
global...

Name: PIC_41 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Ssa_name: priceForeignCumulativeLast_1, name: priceForeignCumulativeLast

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: priceForeignCumulativeLast, Num: 1
Globalname: priceForeignCumulativeLast, contract_name: BasePool
global...

Name: PIC_40 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Ssa_name: _blockTimestampLast_2, name: _blockTimestampLast

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _blockTimestampLast, Num: 2
Globalname: _blockTimestampLast, contract_name: BasePool
global...

Name: PIC_29 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
balanceNative_1(uint256) := ϕ(['nativeBalance_2', 'balanceNative_1', 'nativeBalance_2'])
Phi
[i]Type for balanceNative

Name: balanceNative Function: _update
Num: 5
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
balanceForeign_1(uint256) := ϕ(['balanceForeign_1', 'foreignBalance_2', 'foreignBalance_2'])
Phi
[i]Type for balanceForeign

Name: balanceForeign Function: _update
Num: 6
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
reserveNative_1(uint112) := ϕ(['reserveNative_1', 'nativeReserve_1', 'reserveNative_1'])
Phi
[i]Type for reserveNative

Name: reserveNative Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
reserveForeign_1(uint112) := ϕ(['reserveForeign_1', 'foreignReserve_1', 'reserveForeign_1'])
Phi
[i]Type for reserveForeign

Name: reserveForeign Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
priceNativeCumulativeLast_1(uint256) := ϕ(['priceNativeCumulativeLast_0', 'priceNativeCumulativeLast_2'])
Phi
[i]Type for priceNativeCumulativeLast

Name: priceNativeCumulativeLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
priceForeignCumulativeLast_1(uint256) := ϕ(['priceForeignCumulativeLast_0', 'priceForeignCumulativeLast_2'])
Phi
[i]Type for priceForeignCumulativeLast

Name: priceForeignCumulativeLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_blockTimestampLast_2(uint32) := ϕ(['_blockTimestampLast_3', '_blockTimestampLast_0'])
Phi
[i]Type for _blockTimestampLast

Name: _blockTimestampLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_235 cleared
[i] TMP_236 cleared
[i] TMP_238 cleared
[i] TMP_239 cleared
[i] TMP_240 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: balanceNative_1, name: balanceNative

Name: balanceNative Function: _update
Num: 5
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: balanceForeign_1, name: balanceForeign

Name: balanceForeign Function: _update
Num: 6
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: balanceNative_1, name: balanceNative

Name: balanceNative Function: _update
Num: 5
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: balanceForeign_1, name: balanceForeign

Name: balanceForeign Function: _update
Num: 6
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
TMP_235(uint112) := 5192296858534827628530496329220095(uint112)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for TMP_235

Name: TMP_235 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 5192296858534827628530496329220095
Fields: 
Finance Type: undef
XXXX
TMP_236(bool) = balanceNative_1 <= TMP_235
lnorm: u rnorm: 0
[i]Type for TMP_236

Name: TMP_236 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_238(uint112) := 5192296858534827628530496329220095(uint112)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for TMP_238

Name: TMP_238 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 5192296858534827628530496329220095
Fields: 
Finance Type: undef
XXXX
TMP_239(bool) = balanceForeign_1 <= TMP_238
lnorm: u rnorm: 0
[i]Type for TMP_239

Name: TMP_239 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_240(bool) = TMP_236 && TMP_239
[i]Type for TMP_240

Name: TMP_240 Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_241(None) = SOLIDITY_CALL require(bool,string)(TMP_240,BasePool::_update: Balance Overflow)
[i]Type for TMP_241

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_242 cleared
[i] TMP_243 cleared
[i] TMP_244 cleared
[i] blockTimestamp cleared
Propogating parameters and globals to SSA variables...
Ssa_name: blockTimestamp_1, name: blockTimestamp

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: blockTimestamp, Num: 1
Globalname: blockTimestamp, contract_name: BasePool
End popogation
TMP_242(uint256) = 2 (c)** 32
[i]Type for TMP_242

Name: TMP_242 Function: _update
Num: -1
Den: -1
Address: u
Norm: 32
LF: None
Value: 4294967296
Fields: 
Finance Type: undef
XXXX
TMP_243(uint256) = block.timestamp (c)% TMP_242
[i]Type for TMP_243

Name: TMP_243 Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_244 = CONVERT TMP_243 to uint32
Converting TMP_243

Name: TMP_243 Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_244

Name: TMP_244 Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
blockTimestamp_1(uint32) := TMP_244(uint32)
asgn
Finance type key: (-1, -1)
[i]Type for blockTimestamp

Name: blockTimestamp Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_245 cleared
[i] timeElapsed cleared
Propogating parameters and globals to SSA variables...
Ssa_name: blockTimestamp_1, name: blockTimestamp

Name: blockTimestamp Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: blockTimestamp, Num: 1
Globalname: blockTimestamp, contract_name: BasePool
Ssa_name: _blockTimestampLast_2, name: _blockTimestampLast

Name: _blockTimestampLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: blockTimestamp_1, name: blockTimestamp

Name: blockTimestamp Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: blockTimestamp, Num: 1
Globalname: blockTimestamp, contract_name: BasePool
Ssa_name: _blockTimestampLast_2, name: _blockTimestampLast

Name: _blockTimestampLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: timeElapsed_1, name: timeElapsed

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: timeElapsed, Num: 1
Globalname: timeElapsed, contract_name: BasePool
End popogation
TMP_245(uint32) = blockTimestamp_1 (c)- _blockTimestampLast_2
Source address: u
[i]Type for TMP_245

Name: TMP_245 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
timeElapsed_1(uint32) := TMP_245(uint32)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for timeElapsed

Name: timeElapsed Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_246 cleared
[i] TMP_247 cleared
[i] TMP_248 cleared
[i] TMP_249 cleared
[i] TMP_250 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveNative_1, name: reserveNative

Name: reserveNative Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: timeElapsed_1, name: timeElapsed

Name: timeElapsed Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: reserveForeign_1, name: reserveForeign

Name: reserveForeign Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: reserveNative_1, name: reserveNative

Name: reserveNative Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: timeElapsed_1, name: timeElapsed

Name: timeElapsed Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: reserveForeign_1, name: reserveForeign

Name: reserveForeign Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_246(bool) = timeElapsed_1 > 0
lnorm: u rnorm: 0
[i]Type for TMP_246

Name: TMP_246 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_247(bool) = reserveNative_1 != 0
[i]Type for TMP_247

Name: TMP_247 Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_248(bool) = TMP_246 && TMP_247
[i]Type for TMP_248

Name: TMP_248 Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_249(bool) = reserveForeign_1 != 0
[i]Type for TMP_249

Name: TMP_249 Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_250(bool) = TMP_248 && TMP_249
[i]Type for TMP_250

Name: TMP_250 Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_251 cleared
[i] TMP_252 cleared
[i] TMP_253 cleared
[i] TMP_254 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveNative_1, name: reserveNative

Name: reserveNative Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: timeElapsed_1, name: timeElapsed

Name: timeElapsed Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: reserveForeign_1, name: reserveForeign

Name: reserveForeign Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: priceNativeCumulativeLast_1, name: priceNativeCumulativeLast

Name: priceNativeCumulativeLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: reserveNative_1, name: reserveNative

Name: reserveNative Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: timeElapsed_1, name: timeElapsed

Name: timeElapsed Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: priceNativeCumulativeLast_1, name: priceNativeCumulativeLast

Name: priceNativeCumulativeLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: reserveForeign_1, name: reserveForeign

Name: reserveForeign Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: priceNativeCumulativeLast_2, name: priceNativeCumulativeLast

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: priceNativeCumulativeLast, Num: 2
Globalname: priceNativeCumulativeLast, contract_name: BasePool
global...

Name: PIC_41 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
End popogation
TMP_251(uint224) = LIBRARY_CALL, dest:UQ112x112, function:UQ112x112.encode(uint112), arguments:['reserveForeign_1'] 
Found: None
Written func info: UQ112x112, encode
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
reserveForeign
hers norm: u
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
reserveForeign
hers norm: u
([-1], [-1, -1], 'u', "'u'", 'u', -1)
[i]Type for TMP_251

Name: TMP_251 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
TMP_252(uint224) = LIBRARY_CALL, dest:UQ112x112, function:UQ112x112.uqdiv(uint224,uint112), arguments:['TMP_251', 'reserveNative_1'] 
Found: None
Written func info: UQ112x112, uqdiv
Retvar: ('t', ['1'], ['2'], 1, "'u'", 'u')
TMP_251
reserveNative
hers norm: u
Retvar: ('t', ['1'], ['2'], 1, "'u'", 'u')
TMP_251
reserveNative
hers norm: u
([-1, -1], [-1, -1], 'u', "'u'", 'u', -1)
[i]Type for TMP_252

Name: TMP_252 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
TMP_253 = CONVERT TMP_252 to uint256
Converting TMP_252

Name: TMP_252 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_253

Name: TMP_253 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
TMP_254(uint256) = TMP_253 (c)* timeElapsed_1
lnorm: u rnorm: u
Source address: u
[i]Type for TMP_254

Name: TMP_254 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
priceNativeCumulativeLast_2(uint256) = priceNativeCumulativeLast_1 (c)+ TMP_254
Source address: u
[i]Type for priceNativeCumulativeLast

Name: priceNativeCumulativeLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Copied priceNativeCumulativeLast
Source address: u
[i] TMP_259 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: balanceNative_1, name: balanceNative

Name: balanceNative Function: _update
Num: 5
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: balanceNative_1, name: balanceNative

Name: balanceNative Function: _update
Num: 5
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: _reserveNative_2, name: _reserveNative

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _reserveNative, Num: 2
Globalname: _reserveNative, contract_name: BasePool
global...

Name: PIC_31 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
End popogation
TMP_259 = CONVERT balanceNative_1 to uint112
Converting balanceNative_1

Name: balanceNative Function: _update
Num: 5
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Source address: u
[i]Type for TMP_259

Name: TMP_259 Function: _update
Num: 5
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
_reserveNative_2(uint112) := TMP_259(uint112)
asgn
Source address: u
Finance type key: (0, -1)
[i]Type for _reserveNative

Name: _reserveNative Function: _update
Num: 5
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
Copied _reserveNative
Source address: u
[i] TMP_255 cleared
[i] TMP_256 cleared
[i] TMP_257 cleared
[i] TMP_258 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveNative_1, name: reserveNative

Name: reserveNative Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: timeElapsed_1, name: timeElapsed

Name: timeElapsed Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: reserveForeign_1, name: reserveForeign

Name: reserveForeign Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: priceForeignCumulativeLast_1, name: priceForeignCumulativeLast

Name: priceForeignCumulativeLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: reserveNative_1, name: reserveNative

Name: reserveNative Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: priceForeignCumulativeLast_1, name: priceForeignCumulativeLast

Name: priceForeignCumulativeLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: timeElapsed_1, name: timeElapsed

Name: timeElapsed Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: reserveForeign_1, name: reserveForeign

Name: reserveForeign Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: priceForeignCumulativeLast_2, name: priceForeignCumulativeLast

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: priceForeignCumulativeLast, Num: 2
Globalname: priceForeignCumulativeLast, contract_name: BasePool
global...

Name: PIC_40 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
End popogation
TMP_255(uint224) = LIBRARY_CALL, dest:UQ112x112, function:UQ112x112.encode(uint112), arguments:['reserveNative_1'] 
Found: None
Written func info: UQ112x112, encode
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
reserveNative
hers norm: u
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
reserveNative
hers norm: u
([-1], [-1, -1], 'u', "'u'", 'u', -1)
[i]Type for TMP_255

Name: TMP_255 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
TMP_256(uint224) = LIBRARY_CALL, dest:UQ112x112, function:UQ112x112.uqdiv(uint224,uint112), arguments:['TMP_255', 'reserveForeign_1'] 
Found: None
Written func info: UQ112x112, uqdiv
Retvar: ('t', ['1'], ['2'], 1, "'u'", 'u')
TMP_255
reserveForeign
hers norm: u
Retvar: ('t', ['1'], ['2'], 1, "'u'", 'u')
TMP_255
reserveForeign
hers norm: u
([-1, -1], [-1, -1], 'u', "'u'", 'u', -1)
[i]Type for TMP_256

Name: TMP_256 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
TMP_257 = CONVERT TMP_256 to uint256
Converting TMP_256

Name: TMP_256 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_257

Name: TMP_257 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
TMP_258(uint256) = TMP_257 (c)* timeElapsed_1
lnorm: u rnorm: u
Source address: u
[i]Type for TMP_258

Name: TMP_258 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
priceForeignCumulativeLast_2(uint256) = priceForeignCumulativeLast_1 (c)+ TMP_258
Source address: u
[i]Type for priceForeignCumulativeLast

Name: priceForeignCumulativeLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Copied priceForeignCumulativeLast
Source address: u
[i] TMP_260 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: balanceForeign_1, name: balanceForeign

Name: balanceForeign Function: _update
Num: 6
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: balanceForeign_1, name: balanceForeign

Name: balanceForeign Function: _update
Num: 6
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: _reserveForeign_2, name: _reserveForeign

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _reserveForeign, Num: 2
Globalname: _reserveForeign, contract_name: BasePool
global...

Name: PIC_30 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
End popogation
TMP_260 = CONVERT balanceForeign_1 to uint112
Converting balanceForeign_1

Name: balanceForeign Function: _update
Num: 6
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Source address: u
[i]Type for TMP_260

Name: TMP_260 Function: _update
Num: 6
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
_reserveForeign_2(uint112) := TMP_260(uint112)
asgn
Source address: u
Finance type key: (0, -1)
[i]Type for _reserveForeign

Name: _reserveForeign Function: _update
Num: 6
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
Copied _reserveForeign
Source address: u
Propogating parameters and globals to SSA variables...
Ssa_name: blockTimestamp_1, name: blockTimestamp

Name: blockTimestamp Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: blockTimestamp, Num: 1
Globalname: blockTimestamp, contract_name: BasePool
Ssa_name: blockTimestamp_1, name: blockTimestamp

Name: blockTimestamp Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: blockTimestamp, Num: 1
Globalname: blockTimestamp, contract_name: BasePool
Ssa_name: _blockTimestampLast_3, name: _blockTimestampLast

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _blockTimestampLast, Num: 3
Globalname: _blockTimestampLast, contract_name: BasePool
global...

Name: PIC_29 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
End popogation
_blockTimestampLast_3(uint32) := blockTimestamp_1(uint32)
asgn
Finance type key: (-1, -1)
[i]Type for _blockTimestampLast

Name: _blockTimestampLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Copied _blockTimestampLast
Source address: u
Propogating parameters and globals to SSA variables...
Ssa_name: balanceNative_1, name: balanceNative

Name: balanceNative Function: _update
Num: 5
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: balanceForeign_1, name: balanceForeign

Name: balanceForeign Function: _update
Num: 6
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: balanceNative_1, name: balanceNative

Name: balanceNative Function: _update
Num: 5
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: balanceForeign_1, name: balanceForeign

Name: balanceForeign Function: _update
Num: 6
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
[i] balanceNative cleared
[i] balanceForeign cleared
[i] reserveNative cleared
[i] reserveForeign cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: balanceNative_1, name: balanceNative

Name: balanceNative Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: balanceNative_1 Function: _update
Num: 5
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
Ssa_name: balanceForeign_1, name: balanceForeign

Name: balanceForeign Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: balanceForeign_1 Function: _update
Num: 6
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
Ssa_name: reserveNative_1, name: reserveNative

Name: reserveNative Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: reserveNative_1 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: reserveForeign_1, name: reserveForeign

Name: reserveForeign Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: reserveForeign_1 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: priceNativeCumulativeLast_1, name: priceNativeCumulativeLast

Name: priceNativeCumulativeLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: priceForeignCumulativeLast_1, name: priceForeignCumulativeLast

Name: priceForeignCumulativeLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _blockTimestampLast_2, name: _blockTimestampLast

Name: _blockTimestampLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
balanceNative_1(uint256) := ϕ(['nativeBalance_2', 'balanceNative_1', 'nativeBalance_2'])
Phi
[i]Type for balanceNative

Name: balanceNative Function: _update
Num: 5
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
balanceForeign_1(uint256) := ϕ(['balanceForeign_1', 'foreignBalance_2', 'foreignBalance_2'])
Phi
[i]Type for balanceForeign

Name: balanceForeign Function: _update
Num: 6
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
reserveNative_1(uint112) := ϕ(['reserveNative_1', 'nativeReserve_1', 'reserveNative_1'])
Phi
[i]Type for reserveNative

Name: reserveNative Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
reserveForeign_1(uint112) := ϕ(['reserveForeign_1', 'foreignReserve_1', 'reserveForeign_1'])
Phi
[i]Type for reserveForeign

Name: reserveForeign Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
priceNativeCumulativeLast_1(uint256) := ϕ(['priceNativeCumulativeLast_0', 'priceNativeCumulativeLast_2'])
Phi
[i]Type for priceNativeCumulativeLast

Name: priceNativeCumulativeLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
priceForeignCumulativeLast_1(uint256) := ϕ(['priceForeignCumulativeLast_0', 'priceForeignCumulativeLast_2'])
Phi
[i]Type for priceForeignCumulativeLast

Name: priceForeignCumulativeLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_blockTimestampLast_2(uint32) := ϕ(['_blockTimestampLast_3', '_blockTimestampLast_0'])
Phi
[i]Type for _blockTimestampLast

Name: _blockTimestampLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_235 cleared
[i] TMP_236 cleared
[i] TMP_238 cleared
[i] TMP_239 cleared
[i] TMP_240 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: balanceNative_1, name: balanceNative

Name: balanceNative Function: _update
Num: 5
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: balanceForeign_1, name: balanceForeign

Name: balanceForeign Function: _update
Num: 6
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: balanceNative_1, name: balanceNative

Name: balanceNative Function: _update
Num: 5
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: balanceForeign_1, name: balanceForeign

Name: balanceForeign Function: _update
Num: 6
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
TMP_235(uint112) := 5192296858534827628530496329220095(uint112)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for TMP_235

Name: TMP_235 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 5192296858534827628530496329220095
Fields: 
Finance Type: undef
XXXX
TMP_236(bool) = balanceNative_1 <= TMP_235
lnorm: u rnorm: 0
[i]Type for TMP_236

Name: TMP_236 Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_238(uint112) := 5192296858534827628530496329220095(uint112)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for TMP_238

Name: TMP_238 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 5192296858534827628530496329220095
Fields: 
Finance Type: undef
XXXX
TMP_239(bool) = balanceForeign_1 <= TMP_238
lnorm: u rnorm: 0
[i]Type for TMP_239

Name: TMP_239 Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_240(bool) = TMP_236 && TMP_239
[i]Type for TMP_240

Name: TMP_240 Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_241(None) = SOLIDITY_CALL require(bool,string)(TMP_240,BasePool::_update: Balance Overflow)
[i]Type for TMP_241

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_242 cleared
[i] TMP_243 cleared
[i] TMP_244 cleared
[i] blockTimestamp cleared
Propogating parameters and globals to SSA variables...
Ssa_name: blockTimestamp_1, name: blockTimestamp

Name: blockTimestamp Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: blockTimestamp, Num: 1
Globalname: blockTimestamp, contract_name: BasePool
End popogation
TMP_242(uint256) = 2 (c)** 32
[i]Type for TMP_242

Name: TMP_242 Function: _update
Num: 
Den: 
Address: u
Norm: 32
LF: None
Value: 4294967296
Fields: 
Finance Type: undef
XXXX
TMP_243(uint256) = block.timestamp (c)% TMP_242
[i]Type for TMP_243

Name: TMP_243 Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_244 = CONVERT TMP_243 to uint32
Converting TMP_243

Name: TMP_243 Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_244

Name: TMP_244 Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
blockTimestamp_1(uint32) := TMP_244(uint32)
asgn
Finance type key: (-1, -1)
[i]Type for blockTimestamp

Name: blockTimestamp Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_245 cleared
[i] timeElapsed cleared
Propogating parameters and globals to SSA variables...
Ssa_name: blockTimestamp_1, name: blockTimestamp

Name: blockTimestamp Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: blockTimestamp, Num: 1
Globalname: blockTimestamp, contract_name: BasePool
Ssa_name: _blockTimestampLast_2, name: _blockTimestampLast

Name: _blockTimestampLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: blockTimestamp_1, name: blockTimestamp

Name: blockTimestamp Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: blockTimestamp, Num: 1
Globalname: blockTimestamp, contract_name: BasePool
Ssa_name: _blockTimestampLast_2, name: _blockTimestampLast

Name: _blockTimestampLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: timeElapsed_1, name: timeElapsed

Name: timeElapsed Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: timeElapsed, Num: 1
Globalname: timeElapsed, contract_name: BasePool
End popogation
TMP_245(uint32) = blockTimestamp_1 (c)- _blockTimestampLast_2
Source address: u
[i]Type for TMP_245

Name: TMP_245 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
timeElapsed_1(uint32) := TMP_245(uint32)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for timeElapsed

Name: timeElapsed Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_246 cleared
[i] TMP_247 cleared
[i] TMP_248 cleared
[i] TMP_249 cleared
[i] TMP_250 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveNative_1, name: reserveNative

Name: reserveNative Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: timeElapsed_1, name: timeElapsed

Name: timeElapsed Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: reserveForeign_1, name: reserveForeign

Name: reserveForeign Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: reserveNative_1, name: reserveNative

Name: reserveNative Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: timeElapsed_1, name: timeElapsed

Name: timeElapsed Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: reserveForeign_1, name: reserveForeign

Name: reserveForeign Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_246(bool) = timeElapsed_1 > 0
lnorm: u rnorm: 0
[i]Type for TMP_246

Name: TMP_246 Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_247(bool) = reserveNative_1 != 0
[i]Type for TMP_247

Name: TMP_247 Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_248(bool) = TMP_246 && TMP_247
[i]Type for TMP_248

Name: TMP_248 Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_249(bool) = reserveForeign_1 != 0
[i]Type for TMP_249

Name: TMP_249 Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_250(bool) = TMP_248 && TMP_249
[i]Type for TMP_250

Name: TMP_250 Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_251 cleared
[i] TMP_252 cleared
[i] TMP_253 cleared
[i] TMP_254 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveNative_1, name: reserveNative

Name: reserveNative Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: timeElapsed_1, name: timeElapsed

Name: timeElapsed Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: reserveForeign_1, name: reserveForeign

Name: reserveForeign Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: priceNativeCumulativeLast_1, name: priceNativeCumulativeLast

Name: priceNativeCumulativeLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: reserveNative_1, name: reserveNative

Name: reserveNative Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: timeElapsed_1, name: timeElapsed

Name: timeElapsed Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: priceNativeCumulativeLast_1, name: priceNativeCumulativeLast

Name: priceNativeCumulativeLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: reserveForeign_1, name: reserveForeign

Name: reserveForeign Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: priceNativeCumulativeLast_2, name: priceNativeCumulativeLast

Name: priceNativeCumulativeLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_251(uint224) = LIBRARY_CALL, dest:UQ112x112, function:UQ112x112.encode(uint112), arguments:['reserveForeign_1'] 
Found: None
Written func info: UQ112x112, encode
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
reserveForeign
hers norm: u
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
reserveForeign
hers norm: u
([-1], [-1, -1], 'u', "'u'", 'u', -1)
[i]Type for TMP_251

Name: TMP_251 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
TMP_252(uint224) = LIBRARY_CALL, dest:UQ112x112, function:UQ112x112.uqdiv(uint224,uint112), arguments:['TMP_251', 'reserveNative_1'] 
Found: None
Written func info: UQ112x112, uqdiv
Retvar: ('t', ['1'], ['2'], 1, "'u'", 'u')
TMP_251
reserveNative
hers norm: u
Retvar: ('t', ['1'], ['2'], 1, "'u'", 'u')
TMP_251
reserveNative
hers norm: u
([-1, -1], [-1, -1], 'u', "'u'", 'u', -1)
[i]Type for TMP_252

Name: TMP_252 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
TMP_253 = CONVERT TMP_252 to uint256
Converting TMP_252

Name: TMP_252 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_253

Name: TMP_253 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
TMP_254(uint256) = TMP_253 (c)* timeElapsed_1
lnorm: u rnorm: u
Source address: u
[i]Type for TMP_254

Name: TMP_254 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
priceNativeCumulativeLast_2(uint256) = priceNativeCumulativeLast_1 (c)+ TMP_254
Source address: u
[i]Type for priceNativeCumulativeLast

Name: priceNativeCumulativeLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Copied priceNativeCumulativeLast
Source address: u
[i] TMP_259 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: balanceNative_1, name: balanceNative

Name: balanceNative Function: _update
Num: 5
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: balanceNative_1, name: balanceNative

Name: balanceNative Function: _update
Num: 5
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: _reserveNative_2, name: _reserveNative

Name: _reserveNative Function: _update
Num: 5
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
TMP_259 = CONVERT balanceNative_1 to uint112
Converting balanceNative_1

Name: balanceNative Function: _update
Num: 5
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Source address: u
[i]Type for TMP_259

Name: TMP_259 Function: _update
Num: 5
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
_reserveNative_2(uint112) := TMP_259(uint112)
asgn
5
-1
Finance type key: (0, -1)
[i]Type for _reserveNative

Name: _reserveNative Function: _update
Num: 5
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
Copied _reserveNative
Source address: u
[i] TMP_255 cleared
[i] TMP_256 cleared
[i] TMP_257 cleared
[i] TMP_258 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveNative_1, name: reserveNative

Name: reserveNative Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: timeElapsed_1, name: timeElapsed

Name: timeElapsed Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: reserveForeign_1, name: reserveForeign

Name: reserveForeign Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: priceForeignCumulativeLast_1, name: priceForeignCumulativeLast

Name: priceForeignCumulativeLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: reserveNative_1, name: reserveNative

Name: reserveNative Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: priceForeignCumulativeLast_1, name: priceForeignCumulativeLast

Name: priceForeignCumulativeLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: timeElapsed_1, name: timeElapsed

Name: timeElapsed Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: reserveForeign_1, name: reserveForeign

Name: reserveForeign Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: priceForeignCumulativeLast_2, name: priceForeignCumulativeLast

Name: priceForeignCumulativeLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_255(uint224) = LIBRARY_CALL, dest:UQ112x112, function:UQ112x112.encode(uint112), arguments:['reserveNative_1'] 
Found: None
Written func info: UQ112x112, encode
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
reserveNative
hers norm: u
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
reserveNative
hers norm: u
([-1], [-1, -1], 'u', "'u'", 'u', -1)
[i]Type for TMP_255

Name: TMP_255 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
TMP_256(uint224) = LIBRARY_CALL, dest:UQ112x112, function:UQ112x112.uqdiv(uint224,uint112), arguments:['TMP_255', 'reserveForeign_1'] 
Found: None
Written func info: UQ112x112, uqdiv
Retvar: ('t', ['1'], ['2'], 1, "'u'", 'u')
TMP_255
reserveForeign
hers norm: u
Retvar: ('t', ['1'], ['2'], 1, "'u'", 'u')
TMP_255
reserveForeign
hers norm: u
([-1, -1], [-1, -1], 'u', "'u'", 'u', -1)
[i]Type for TMP_256

Name: TMP_256 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
TMP_257 = CONVERT TMP_256 to uint256
Converting TMP_256

Name: TMP_256 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_257

Name: TMP_257 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
TMP_258(uint256) = TMP_257 (c)* timeElapsed_1
lnorm: u rnorm: u
Source address: u
[i]Type for TMP_258

Name: TMP_258 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
priceForeignCumulativeLast_2(uint256) = priceForeignCumulativeLast_1 (c)+ TMP_258
Source address: u
[i]Type for priceForeignCumulativeLast

Name: priceForeignCumulativeLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Copied priceForeignCumulativeLast
Source address: u
[i] TMP_260 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: balanceForeign_1, name: balanceForeign

Name: balanceForeign Function: _update
Num: 6
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: balanceForeign_1, name: balanceForeign

Name: balanceForeign Function: _update
Num: 6
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: _reserveForeign_2, name: _reserveForeign

Name: _reserveForeign Function: _update
Num: 6
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
TMP_260 = CONVERT balanceForeign_1 to uint112
Converting balanceForeign_1

Name: balanceForeign Function: _update
Num: 6
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Source address: u
[i]Type for TMP_260

Name: TMP_260 Function: _update
Num: 6
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
_reserveForeign_2(uint112) := TMP_260(uint112)
asgn
6
-1
Finance type key: (0, -1)
[i]Type for _reserveForeign

Name: _reserveForeign Function: _update
Num: 6
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
Copied _reserveForeign
Source address: u
Propogating parameters and globals to SSA variables...
Ssa_name: blockTimestamp_1, name: blockTimestamp

Name: blockTimestamp Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: blockTimestamp, Num: 1
Globalname: blockTimestamp, contract_name: BasePool
Ssa_name: blockTimestamp_1, name: blockTimestamp

Name: blockTimestamp Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: blockTimestamp, Num: 1
Globalname: blockTimestamp, contract_name: BasePool
Ssa_name: _blockTimestampLast_3, name: _blockTimestampLast

Name: _blockTimestampLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
_blockTimestampLast_3(uint32) := blockTimestamp_1(uint32)
asgn
Finance type key: (-1, -1)
[i]Type for _blockTimestampLast

Name: _blockTimestampLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Copied _blockTimestampLast
Source address: u
Propogating parameters and globals to SSA variables...
Ssa_name: balanceNative_1, name: balanceNative

Name: balanceNative Function: _update
Num: 5
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: balanceForeign_1, name: balanceForeign

Name: balanceForeign Function: _update
Num: 6
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: balanceNative_1, name: balanceNative

Name: balanceNative Function: _update
Num: 5
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: balanceForeign_1, name: balanceForeign

Name: balanceForeign Function: _update
Num: 6
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
Propogating parameters and globals to SSA variables...
Ssa_name: to_1, name: to

Name: to_1 Function: mint
Num: 
Den: 
Address: -998
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: foreignDeposit_1, name: foreignDeposit

Name: foreignDeposit Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: nativeDeposit_1, name: nativeDeposit

Name: nativeDeposit Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: to_1, name: to

Name: to_1 Function: mint
Num: 
Den: 
Address: -998
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: foreignDeposit_1, name: foreignDeposit

Name: foreignDeposit Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: nativeDeposit_1, name: nativeDeposit

Name: nativeDeposit Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
Propogating parameters and globals to SSA variables...
Ssa_name: id_1, name: id

Name: id Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: liquidity_3, name: liquidity

Name: liquidity Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: id_1, name: id

Name: id Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: liquidity_3, name: liquidity

Name: liquidity Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation


nativeAsset_2(IERC20) := ϕ(['nativeAsset_13', 'nativeAsset_9', 'nativeAsset_1', 'nativeAsset_0', 'nativeAsset_5'])
foreignAsset_2(IERC20) := ϕ(['foreignAsset_0', 'foreignAsset_14', 'foreignAsset_1', 'foreignAsset_10', 'foreignAsset_6'])
positionId_1(uint256) := ϕ(['positionId_6', 'positionId_0'])
totalSupply_1(uint256) := ϕ(['totalSupply_6', 'totalSupply_13', 'totalSupply_0'])
MODIFIER_CALL, ReentrancyGuard.nonReentrant()()
TUPLE_0(uint112,uint112,uint32) = INTERNAL_CALL, BasePool.getReserves()()
reserveNative_1(uint112)= UNPACK TUPLE_0 index: 0 
reserveForeign_1(uint112)= UNPACK TUPLE_0 index: 1 
TMP_139 = CONVERT this to address
TMP_140(uint256) = HIGH_LEVEL_CALL, dest:nativeAsset_4(IERC20), function:balanceOf, arguments:['TMP_139']  
nativeAsset_5(IERC20) := ϕ(['nativeAsset_13', 'nativeAsset_4', 'nativeAsset_9', 'nativeAsset_1', 'nativeAsset_5'])
foreignAsset_5(IERC20) := ϕ(['foreignAsset_4', 'foreignAsset_14', 'foreignAsset_1', 'foreignAsset_10', 'foreignAsset_6'])
positionId_4(uint256) := ϕ(['positionId_6', 'positionId_3'])
totalSupply_4(uint256) := ϕ(['totalSupply_6', 'totalSupply_13', 'totalSupply_3'])
balanceNative_1(uint256) := TMP_140(uint256)
TMP_141 = CONVERT this to address
TMP_142(uint256) = HIGH_LEVEL_CALL, dest:foreignAsset_5(IERC20), function:balanceOf, arguments:['TMP_141']  
foreignAsset_6(IERC20) := ϕ(['foreignAsset_5', 'foreignAsset_14', 'foreignAsset_1', 'foreignAsset_10', 'foreignAsset_6'])
positionId_5(uint256) := ϕ(['positionId_6', 'positionId_4'])
totalSupply_5(uint256) := ϕ(['totalSupply_4', 'totalSupply_6', 'totalSupply_13'])
balanceForeign_1(uint256) := TMP_142(uint256)
TMP_143(uint256) = balanceNative_1 (c)- reserveNative_1
nativeDeposit_1(uint256) := TMP_143(uint256)
TMP_144(uint256) = balanceForeign_1 (c)- reserveForeign_1
foreignDeposit_1(uint256) := TMP_144(uint256)
totalLiquidityUnits_1(uint256) := totalSupply_5(uint256)
TMP_145(bool) = totalLiquidityUnits_1 == 0
CONDITION TMP_145
liquidity_2(uint256) := nativeDeposit_1(uint256)
TMP_146(uint256) = LIBRARY_CALL, dest:VaderMath, function:VaderMath.calculateLiquidityUnits(uint256,uint256,uint256,uint256,uint256), arguments:['nativeDeposit_1', 'reserveNative_1', 'foreignDeposit_1', 'reserveForeign_1', 'totalLiquidityUnits_1'] 
liquidity_1(uint256) := TMP_146(uint256)
liquidity_3(uint256) := ϕ(['liquidity_1', 'liquidity_2'])
TMP_147(bool) = liquidity_3 > 0
TMP_148(None) = SOLIDITY_CALL require(bool,string)(TMP_147,BasePool::mint: Insufficient Liquidity Provided)
TMP_149(uint256) := positionId_5(uint256)
positionId_6(uint256) = positionId_5 (c)+ 1
id_1(uint256) := TMP_149(uint256)
totalSupply_6(uint256) = totalSupply_5 (c)+ liquidity_3
INTERNAL_CALL, ERC721._mint(address,uint256)(to_1,id_1)
REF_41(IBasePool.Position) -> positions_0[id_1]
TMP_151 = new Position(block.timestamp,liquidity_3,nativeDeposit_1,foreignDeposit_1)
positions_1(mapping(uint256 => IBasePool.Position)) := ϕ(['positions_0'])
REF_41 (->positions_1) := TMP_151(IBasePool.Position)
INTERNAL_CALL, BasePool._update(uint256,uint256,uint112,uint112)(balanceNative_1,balanceForeign_1,reserveNative_1,reserveForeign_1)
Emit Mint(msg.sender,to_1,nativeDeposit_1,foreignDeposit_1)
Emit PositionOpened(msg.sender,id_1,liquidity_3)


Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: nativeAsset_2, name: nativeAsset

Name: nativeAsset Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: foreignAsset_2, name: foreignAsset

Name: foreignAsset Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: positionId_1, name: positionId

Name: positionId Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: totalSupply_1, name: totalSupply

Name: totalSupply Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
nativeAsset_2(IERC20) := ϕ(['nativeAsset_13', 'nativeAsset_9', 'nativeAsset_1', 'nativeAsset_0', 'nativeAsset_5'])
Phi
[i]Type for nativeAsset

Name: nativeAsset Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
foreignAsset_2(IERC20) := ϕ(['foreignAsset_0', 'foreignAsset_14', 'foreignAsset_1', 'foreignAsset_10', 'foreignAsset_6'])
Phi
[i]Type for foreignAsset

Name: foreignAsset Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
positionId_1(uint256) := ϕ(['positionId_6', 'positionId_0'])
Phi
[i]Type for positionId

Name: positionId Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
totalSupply_1(uint256) := ϕ(['totalSupply_6', 'totalSupply_13', 'totalSupply_0'])
Phi
[i]Type for totalSupply

Name: totalSupply Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, ReentrancyGuard.nonReentrant()()
New param cache []
Old param cache: []
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] reserveNative cleared
[i] reserveForeign cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveNative_1, name: reserveNative

Name: reserveNative Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: reserveNative, Num: 1
Globalname: reserveNative, contract_name: BasePool
Ssa_name: reserveForeign_1, name: reserveForeign

Name: reserveForeign Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: reserveForeign, Num: 1
Globalname: reserveForeign, contract_name: BasePool
End popogation
TUPLE_0(uint112,uint112,uint32) = INTERNAL_CALL, BasePool.getReserves()()
New param cache []
Old param cache: []
[i]Type for TUPLE_0

Name: TUPLE_0 Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
reserveNative_1(uint112)= UNPACK TUPLE_0 index: 0 
([-1], [-1], 'u', 'u', 'u', -1)
[i]Type for reserveNative

Name: reserveNative Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
reserveForeign_1(uint112)= UNPACK TUPLE_0 index: 1 
([-1], [-1], 'u', 'u', 'u', -1)
[i]Type for reserveForeign

Name: reserveForeign Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_139 cleared
[i] TMP_140 cleared
[i] balanceNative cleared
Propogating parameters and globals to SSA variables...
Ssa_name: nativeAsset_4, name: nativeAsset

Name: None Function: None
Num: -1
Den: -1
Address: 5
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeAsset_4, name: nativeAsset

Name: None Function: None
Num: -1
Den: -1
Address: 5
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: balanceNative_1, name: balanceNative

Name: balanceNative Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: balanceNative, Num: 1
Globalname: balanceNative, contract_name: BasePool
End popogation
Ssa_name: nativeAsset_5, name: nativeAsset

Name: nativeAsset Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: foreignAsset_5, name: foreignAsset

Name: foreignAsset Function: mint
Num: -1
Den: -1
Address: 6
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: positionId_4, name: positionId

Name: positionId Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: totalSupply_4, name: totalSupply

Name: totalSupply Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_139 = CONVERT this to address
Converting this
4
[i]Type for TMP_139

Name: TMP_139 Function: mint
Num: 
Den: 
Address: 4
Norm: u
LF: BasePool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_140(uint256) = HIGH_LEVEL_CALL, dest:nativeAsset_4(IERC20), function:balanceOf, arguments:['TMP_139']  
High Call: balanceOf
Running querryfc
Found: None
Written func info: IERC20, balanceOf
Handling balance function!
5
[i]Type for TMP_140

Name: TMP_140 Function: mint
Num: 5
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
nativeAsset_5(IERC20) := ϕ(['nativeAsset_13', 'nativeAsset_4', 'nativeAsset_9', 'nativeAsset_1', 'nativeAsset_5'])
Phi
[i]Type for nativeAsset

Name: nativeAsset Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
foreignAsset_5(IERC20) := ϕ(['foreignAsset_4', 'foreignAsset_14', 'foreignAsset_1', 'foreignAsset_10', 'foreignAsset_6'])
Phi
[i]Type for foreignAsset

Name: foreignAsset Function: mint
Num: -1
Den: -1
Address: 6
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
positionId_4(uint256) := ϕ(['positionId_6', 'positionId_3'])
Phi
[i]Type for positionId

Name: positionId Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
totalSupply_4(uint256) := ϕ(['totalSupply_6', 'totalSupply_13', 'totalSupply_3'])
Phi
[i]Type for totalSupply

Name: totalSupply Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
balanceNative_1(uint256) := TMP_140(uint256)
asgn
Source address: u
Finance type key: (0, -1)
[i]Type for balanceNative

Name: balanceNative Function: mint
Num: 5
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
[i] TMP_141 cleared
[i] TMP_142 cleared
[i] balanceForeign cleared
Propogating parameters and globals to SSA variables...
Ssa_name: foreignAsset_5, name: foreignAsset

Name: foreignAsset Function: mint
Num: -1
Den: -1
Address: 6
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: foreignAsset_5, name: foreignAsset

Name: foreignAsset Function: mint
Num: -1
Den: -1
Address: 6
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: balanceForeign_1, name: balanceForeign

Name: balanceForeign Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: balanceForeign, Num: 1
Globalname: balanceForeign, contract_name: BasePool
End popogation
Ssa_name: foreignAsset_6, name: foreignAsset

Name: foreignAsset Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: positionId_5, name: positionId

Name: positionId Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: totalSupply_5, name: totalSupply

Name: totalSupply Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_141 = CONVERT this to address
Converting this
4
[i]Type for TMP_141

Name: TMP_141 Function: mint
Num: 
Den: 
Address: 4
Norm: u
LF: BasePool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_142(uint256) = HIGH_LEVEL_CALL, dest:foreignAsset_5(IERC20), function:balanceOf, arguments:['TMP_141']  
High Call: balanceOf
Running querryfc
Found: None
Written func info: IERC20, balanceOf
Handling balance function!
6
[i]Type for TMP_142

Name: TMP_142 Function: mint
Num: 6
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
foreignAsset_6(IERC20) := ϕ(['foreignAsset_5', 'foreignAsset_14', 'foreignAsset_1', 'foreignAsset_10', 'foreignAsset_6'])
Phi
[i]Type for foreignAsset

Name: foreignAsset Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
positionId_5(uint256) := ϕ(['positionId_6', 'positionId_4'])
Phi
[i]Type for positionId

Name: positionId Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
totalSupply_5(uint256) := ϕ(['totalSupply_4', 'totalSupply_6', 'totalSupply_13'])
Phi
[i]Type for totalSupply

Name: totalSupply Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
balanceForeign_1(uint256) := TMP_142(uint256)
asgn
Source address: u
Finance type key: (0, -1)
[i]Type for balanceForeign

Name: balanceForeign Function: mint
Num: 6
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
[i] TMP_143 cleared
[i] nativeDeposit cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveNative_1, name: reserveNative

Name: reserveNative Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: balanceNative_1, name: balanceNative

Name: balanceNative Function: mint
Num: 5
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: reserveNative_1, name: reserveNative

Name: reserveNative Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: balanceNative_1, name: balanceNative

Name: balanceNative Function: mint
Num: 5
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: nativeDeposit_1, name: nativeDeposit

Name: nativeDeposit Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: nativeDeposit, Num: 1
Globalname: nativeDeposit, contract_name: BasePool
End popogation
TMP_143(uint256) = balanceNative_1 (c)- reserveNative_1
Source address: u
[i]Type for TMP_143

Name: TMP_143 Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
nativeDeposit_1(uint256) := TMP_143(uint256)
asgn
Source address: u
Finance type key: (0, -1)
[i]Type for nativeDeposit

Name: nativeDeposit Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
[i] TMP_144 cleared
[i] foreignDeposit cleared
Propogating parameters and globals to SSA variables...
Ssa_name: balanceForeign_1, name: balanceForeign

Name: balanceForeign Function: mint
Num: 6
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: reserveForeign_1, name: reserveForeign

Name: reserveForeign Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: balanceForeign_1, name: balanceForeign

Name: balanceForeign Function: mint
Num: 6
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: reserveForeign_1, name: reserveForeign

Name: reserveForeign Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: foreignDeposit_1, name: foreignDeposit

Name: foreignDeposit Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: foreignDeposit, Num: 1
Globalname: foreignDeposit, contract_name: BasePool
End popogation
TMP_144(uint256) = balanceForeign_1 (c)- reserveForeign_1
Source address: u
[i]Type for TMP_144

Name: TMP_144 Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
foreignDeposit_1(uint256) := TMP_144(uint256)
asgn
Source address: u
Finance type key: (0, -1)
[i]Type for foreignDeposit

Name: foreignDeposit Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
[i] totalLiquidityUnits cleared
Propogating parameters and globals to SSA variables...
Ssa_name: totalSupply_5, name: totalSupply

Name: totalSupply Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: totalSupply_5, name: totalSupply

Name: totalSupply Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: totalLiquidityUnits_1, name: totalLiquidityUnits

Name: totalLiquidityUnits Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: totalLiquidityUnits, Num: 1
Globalname: totalLiquidityUnits, contract_name: BasePool
End popogation
totalLiquidityUnits_1(uint256) := totalSupply_5(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for totalLiquidityUnits

Name: totalLiquidityUnits Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_145 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: totalLiquidityUnits_1, name: totalLiquidityUnits

Name: totalLiquidityUnits Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: totalLiquidityUnits_1, name: totalLiquidityUnits

Name: totalLiquidityUnits Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_145(bool) = totalLiquidityUnits_1 == 0
[i]Type for TMP_145

Name: TMP_145 Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] liquidity cleared
Propogating parameters and globals to SSA variables...
Ssa_name: nativeDeposit_1, name: nativeDeposit

Name: nativeDeposit Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: nativeDeposit_1, name: nativeDeposit

Name: nativeDeposit Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: liquidity_2, name: liquidity

Name: liquidity Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: liquidity, Num: 2
Globalname: liquidity, contract_name: BasePool
End popogation
liquidity_2(uint256) := nativeDeposit_1(uint256)
asgn
Source address: u
Finance type key: (0, -1)
[i]Type for liquidity

Name: liquidity Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
[i] TMP_146 cleared
[i] liquidity cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveForeign_1, name: reserveForeign

Name: reserveForeign Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: foreignDeposit_1, name: foreignDeposit

Name: foreignDeposit Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: reserveNative_1, name: reserveNative

Name: reserveNative Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: totalLiquidityUnits_1, name: totalLiquidityUnits

Name: totalLiquidityUnits Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeDeposit_1, name: nativeDeposit

Name: nativeDeposit Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: reserveForeign_1, name: reserveForeign

Name: reserveForeign Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: foreignDeposit_1, name: foreignDeposit

Name: foreignDeposit Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: reserveNative_1, name: reserveNative

Name: reserveNative Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: totalLiquidityUnits_1, name: totalLiquidityUnits

Name: totalLiquidityUnits Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeDeposit_1, name: nativeDeposit

Name: nativeDeposit Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: liquidity_1, name: liquidity

Name: liquidity Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: liquidity, Num: 1
Globalname: liquidity, contract_name: BasePool
End popogation
TMP_146(uint256) = LIBRARY_CALL, dest:VaderMath, function:VaderMath.calculateLiquidityUnits(uint256,uint256,uint256,uint256,uint256), arguments:['nativeDeposit_1', 'reserveNative_1', 'foreignDeposit_1', 'reserveForeign_1', 'totalLiquidityUnits_1'] 
Found: calculateLiquidityUnits

Name: nativeDeposit Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance

Name: reserveNative Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: foreignDeposit Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance

Name: reserveForeign Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: totalLiquidityUnits Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
High level cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: 0
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: 0
Param: 3
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 4
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
New param cache [[[-1], [-1], 'u', None, [], 0, 'u', 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u'], [[-1], [-1], 'u', None, [], 0, 'u', 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 'u', None, [], -1, 'u'], [[-1], [-1], 'u', None, [], -1, 'u'], [[-1], [-1], 'u', None, [], -1, 'u'], [[-1], [-1], 'u', None, [], -1, 'u'], [[-1], [-1], 'u', None, [], -1, 'u']]
[[-1], [-1], 'u', None, [], 0, 'u', 'u']

Name: vaderDeposited Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: vaderBalance Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], 0, 'u', 'u']

Name: assetDeposited Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: assetBalance Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: totalPoolUnits Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
calculateLiquidityUnits(uint256,uint256,uint256,uint256,uint256)
Propogating All
Propogating All
assetDeposited_1
Ssa_name: assetDeposited_1, name: assetDeposited

Name: assetDeposited_1 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Source address: u

Name: assetDeposited_1 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
vaderBalance_1
Ssa_name: vaderBalance_1, name: vaderBalance

Name: vaderBalance_1 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: vaderBalance_1 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
assetBalance_1
Ssa_name: assetBalance_1, name: assetBalance

Name: assetBalance_1 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: assetBalance_1 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
vaderDeposited_1
Ssa_name: vaderDeposited_1, name: vaderDeposited

Name: vaderDeposited_1 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Source address: u

Name: vaderDeposited_1 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
Propogating All
assetDeposited_1
Ssa_name: assetDeposited_1, name: assetDeposited

Name: assetDeposited_1 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Source address: u

Name: assetDeposited_1 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
vaderBalance_1
Ssa_name: vaderBalance_1, name: vaderBalance

Name: vaderBalance_1 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: vaderBalance_1 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
assetBalance_1
Ssa_name: assetBalance_1, name: assetBalance

Name: assetBalance_1 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: assetBalance_1 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
vaderDeposited_1
Ssa_name: vaderDeposited_1, name: vaderDeposited

Name: vaderDeposited_1 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Source address: u

Name: vaderDeposited_1 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
Propogating All
vaderBalance_1
Ssa_name: vaderBalance_1, name: vaderBalance

Name: vaderBalance_1 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: vaderBalance_1 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
assetBalance_1
Ssa_name: assetBalance_1, name: assetBalance

Name: assetBalance_1 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: assetBalance_1 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
slip_1
Ssa_name: slip_1, name: slip

Name: slip Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
poolUnitFactor_1
Ssa_name: poolUnitFactor_1, name: poolUnitFactor

Name: poolUnitFactor Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
totalPoolUnits_1
Ssa_name: totalPoolUnits_1, name: totalPoolUnits

Name: totalPoolUnits_1 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: totalPoolUnits_1 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
denominator_1
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: ONE_1, name: ONE

Name: ONE Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
ONE_1(uint256) := ϕ(['ONE_4', 'ONE_0', 'ONE_2'])
Phi
[i]Type for ONE

Name: ONE Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_0 cleared
[i] slip cleared
Propogating parameters and globals to SSA variables...
Ssa_name: assetDeposited_1, name: assetDeposited

Name: assetDeposited_1 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: vaderBalance_1, name: vaderBalance

Name: vaderBalance_1 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: assetBalance_1, name: assetBalance

Name: assetBalance_1 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: vaderDeposited_1, name: vaderDeposited

Name: vaderDeposited_1 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: assetDeposited_1, name: assetDeposited

Name: assetDeposited_1 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: vaderBalance_1, name: vaderBalance

Name: vaderBalance_1 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: assetBalance_1, name: assetBalance

Name: assetBalance_1 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: vaderDeposited_1, name: vaderDeposited

Name: vaderDeposited_1 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: slip_1, name: slip

Name: slip Function: calculateLiquidityUnits
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: slip, Num: 1
Globalname: slip, contract_name: VaderMath
End popogation
Ssa_name: ONE_2, name: ONE

Name: ONE Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_0(uint256) = INTERNAL_CALL, VaderMath.calculateSlipAdjustment(uint256,uint256,uint256,uint256)(vaderDeposited_1,vaderBalance_1,assetDeposited_1,assetBalance_1)
New param cache [[[-1], [-1], 'u', None, [], 0, 'u', 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u'], [[-1], [-1], 'u', None, [], 0, 'u', 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[], [], 'u', None, [], -1, 'u'], [[], [], 'u', None, [], -1, 'u'], [[], [], 'u', None, [], -1, 'u'], [[], [], 'u', None, [], -1, 'u']]
[[-1], [-1], 'u', None, [], 0, 'u', 'u']

Name: vaderDeposited Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: vaderBalance Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], 0, 'u', 'u']

Name: assetDeposited Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: assetBalance Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
calculateSlipAdjustment(uint256,uint256,uint256,uint256)
Propogating All
Propogating All
assetDeposited_1
Ssa_name: assetDeposited_1, name: assetDeposited

Name: assetDeposited Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Source address: u

Name: assetDeposited_1 Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
vaderBalance_1
Ssa_name: vaderBalance_1, name: vaderBalance

Name: vaderBalance Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: vaderBalance_1 Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
vaderDeposited_1
Ssa_name: vaderDeposited_1, name: vaderDeposited

Name: vaderDeposited Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Source address: u

Name: vaderDeposited_1 Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
assetBalance_1
Ssa_name: assetBalance_1, name: assetBalance

Name: assetBalance Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: assetBalance_1 Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
vaderDeposited_1
Ssa_name: vaderDeposited_1, name: vaderDeposited

Name: vaderDeposited_1 Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Source address: u

Name: vaderDeposited_1 Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
assetDeposited_1
Ssa_name: assetDeposited_1, name: assetDeposited

Name: assetDeposited_1 Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Source address: u

Name: assetDeposited_1 Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
vaderBalance_1
Ssa_name: vaderBalance_1, name: vaderBalance

Name: vaderBalance_1 Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: vaderBalance_1 Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
assetBalance_1
Ssa_name: assetBalance_1, name: assetBalance

Name: assetBalance_1 Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: assetBalance_1 Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
assetVader_1
Ssa_name: assetVader_1, name: assetVader

Name: assetVader Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
vaderAsset_1
Ssa_name: vaderAsset_1, name: vaderAsset

Name: vaderAsset Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
denominator_1
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
[i] vaderDeposited cleared
[i] vaderBalance cleared
[i] assetDeposited cleared
[i] assetBalance cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: vaderDeposited_1, name: vaderDeposited

Name: vaderDeposited_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: vaderDeposited_1 Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
Ssa_name: vaderBalance_1, name: vaderBalance

Name: vaderBalance_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: vaderBalance_1 Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: assetDeposited_1, name: assetDeposited

Name: assetDeposited_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: assetDeposited_1 Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
Ssa_name: assetBalance_1, name: assetBalance

Name: assetBalance_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: assetBalance_1 Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: ONE_3, name: ONE

Name: ONE Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
vaderDeposited_1(uint256) := ϕ(['vaderDeposited_1'])
Phi
[i]Type for vaderDeposited

Name: vaderDeposited Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
vaderBalance_1(uint256) := ϕ(['vaderBalance_1'])
Phi
[i]Type for vaderBalance

Name: vaderBalance Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
assetDeposited_1(uint256) := ϕ(['assetDeposited_1'])
Phi
[i]Type for assetDeposited

Name: assetDeposited Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
assetBalance_1(uint256) := ϕ(['assetBalance_1'])
Phi
[i]Type for assetBalance

Name: assetBalance Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
ONE_3(uint256) := ϕ(['ONE_4', 'ONE_0', 'ONE_2'])
Phi
[i]Type for ONE

Name: ONE Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_10 cleared
[i] vaderAsset cleared
Propogating parameters and globals to SSA variables...
Ssa_name: assetDeposited_1, name: assetDeposited

Name: assetDeposited Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: vaderBalance_1, name: vaderBalance

Name: vaderBalance Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: assetDeposited_1, name: assetDeposited

Name: assetDeposited Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: vaderBalance_1, name: vaderBalance

Name: vaderBalance Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: vaderAsset_1, name: vaderAsset

Name: vaderAsset Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: vaderAsset, Num: 1
Globalname: vaderAsset, contract_name: VaderMath
End popogation
TMP_10(uint256) = vaderBalance_1 (c)* assetDeposited_1
lnorm: u rnorm: u
Source address: u
[i]Type for TMP_10

Name: TMP_10 Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
vaderAsset_1(uint256) := TMP_10(uint256)
asgn
Source address: u
Finance type key: (0, -1)
[i]Type for vaderAsset

Name: vaderAsset Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
[i] TMP_11 cleared
[i] assetVader cleared
Propogating parameters and globals to SSA variables...
Ssa_name: vaderDeposited_1, name: vaderDeposited

Name: vaderDeposited Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: assetBalance_1, name: assetBalance

Name: assetBalance Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: vaderDeposited_1, name: vaderDeposited

Name: vaderDeposited Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: assetBalance_1, name: assetBalance

Name: assetBalance Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: assetVader_1, name: assetVader

Name: assetVader Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: assetVader, Num: 1
Globalname: assetVader, contract_name: VaderMath
End popogation
TMP_11(uint256) = assetBalance_1 (c)* vaderDeposited_1
lnorm: u rnorm: u
Source address: u
[i]Type for TMP_11

Name: TMP_11 Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
assetVader_1(uint256) := TMP_11(uint256)
asgn
Source address: u
Finance type key: (0, -1)
[i]Type for assetVader

Name: assetVader Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
[i] TMP_12 cleared
[i] TMP_13 cleared
[i] TMP_14 cleared
[i] denominator cleared
Propogating parameters and globals to SSA variables...
Ssa_name: vaderDeposited_1, name: vaderDeposited

Name: vaderDeposited Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: assetDeposited_1, name: assetDeposited

Name: assetDeposited Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: vaderBalance_1, name: vaderBalance

Name: vaderBalance Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: assetBalance_1, name: assetBalance

Name: assetBalance Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: vaderDeposited_1, name: vaderDeposited

Name: vaderDeposited Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: assetDeposited_1, name: assetDeposited

Name: assetDeposited Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: vaderBalance_1, name: vaderBalance

Name: vaderBalance Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: assetBalance_1, name: assetBalance

Name: assetBalance Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: denominator, Num: 1
Globalname: denominator, contract_name: VaderMath
End popogation
TMP_12(uint256) = vaderDeposited_1 (c)+ vaderBalance_1
Source address: u
[i]Type for TMP_12

Name: TMP_12 Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
TMP_13(uint256) = assetDeposited_1 (c)+ assetBalance_1
Source address: u
[i]Type for TMP_13

Name: TMP_13 Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
TMP_14(uint256) = TMP_12 (c)* TMP_13
lnorm: u rnorm: u
Finance type key: (0, 0)
Source address: u
[i]Type for TMP_14

Name: TMP_14 Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
denominator_1(uint256) := TMP_14(uint256)
asgn
Source address: u
Finance type key: (0, -1)
[i]Type for denominator

Name: denominator Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
[i] TMP_15 cleared
[i] TMP_16 cleared
[i] TMP_17 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: assetVader_1, name: assetVader

Name: assetVader Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: vaderAsset_1, name: vaderAsset

Name: vaderAsset Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: ONE_4, name: ONE

Name: ONE Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: ONE_4, name: ONE

Name: ONE Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: assetVader_1, name: assetVader

Name: assetVader Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: vaderAsset_1, name: vaderAsset

Name: vaderAsset Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
TMP_15(uint256) = INTERNAL_CALL, VaderMath.delta(uint256,uint256)(vaderAsset_1,assetVader_1)
New param cache [[[-1], [-1], 'u', None, [], 0, 'u', 'u'], [[-1], [-1], 'u', None, [], 0, 'u', 'u']]
Old param cache: [[[], [], 'u', None, [], -1, 'u'], [[], [], 'u', None, [], -1, 'u']]
[[-1], [-1], 'u', None, [], 0, 'u', 'u']

Name: a Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
[[-1], [-1], 'u', None, [], 0, 'u', 'u']

Name: b Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
FIND RETURN
ENTRY_POINT
delta(uint256,uint256)
Propogating All
Propogating All
b_1
Ssa_name: b_1, name: b

Name: b Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Source address: u

Name: b_1 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
a_1
Ssa_name: a_1, name: a

Name: a Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Source address: u

Name: a_1 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
Propogating All
b_1
Ssa_name: b_1, name: b

Name: b_1 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Source address: u

Name: b_1 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Source address: u

Name: a_1 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
Propogating All
b_1
Ssa_name: b_1, name: b

Name: b_1 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Source address: u

Name: b_1 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Source address: u

Name: a_1 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
[i] a cleared
[i] b cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a_1 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
Ssa_name: b_1, name: b

Name: b_1 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: b_1 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
a_1(uint256) := ϕ(['vaderAsset_1'])
Phi
[i]Type for a

Name: a Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
b_1(uint256) := ϕ(['assetVader_1'])
Phi
[i]Type for b

Name: b Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
[i] TMP_45 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: b_1, name: b

Name: b Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: a_1, name: a

Name: a Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: b_1, name: b

Name: b Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: a_1, name: a

Name: a Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
TMP_45(bool) = a_1 > b_1
lnorm: u rnorm: u
Finance type key: (0, 0)
[i]Type for TMP_45

Name: TMP_45 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_47 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: b_1, name: b

Name: b Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: a_1, name: a

Name: a Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: b_1, name: b

Name: b Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: a_1, name: a

Name: a Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
TMP_47(uint256) = b_1 (c)- a_1
Finance type key: (0, 0)
Source address: u
[i]Type for TMP_47

Name: TMP_47 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
RETURN TMP_47
RETURN

Name: TMP_47 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
[i] TMP_46 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: b_1, name: b

Name: b Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: a_1, name: a

Name: a Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: b_1, name: b

Name: b Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: a_1, name: a

Name: a Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
TMP_46(uint256) = a_1 (c)- b_1
Finance type key: (0, 0)
Source address: u
[i]Type for TMP_46

Name: TMP_46 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
RETURN TMP_46
RETURN

Name: TMP_46 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
[i] a cleared
[i] b cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
Ssa_name: b_1, name: b

Name: b Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: b_1 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
a_1(uint256) := ϕ(['vaderAsset_1'])
Phi
[i]Type for a

Name: a Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
b_1(uint256) := ϕ(['assetVader_1'])
Phi
[i]Type for b

Name: b Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
[i] TMP_45 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: b_1, name: b

Name: b Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: a_1, name: a

Name: a Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: b_1, name: b

Name: b Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: a_1, name: a

Name: a Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
TMP_45(bool) = a_1 > b_1
lnorm: u rnorm: u
Finance type key: (0, 0)
[i]Type for TMP_45

Name: TMP_45 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_47 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: b_1, name: b

Name: b Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: a_1, name: a

Name: a Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: b_1, name: b

Name: b Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: a_1, name: a

Name: a Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
TMP_47(uint256) = b_1 (c)- a_1
Finance type key: (0, 0)
Source address: u
[i]Type for TMP_47

Name: TMP_47 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
RETURN TMP_47
RETURN

Name: TMP_47 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
[i] TMP_46 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: b_1, name: b

Name: b Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: a_1, name: a

Name: a Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: b_1, name: b

Name: b Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: a_1, name: a

Name: a Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
TMP_46(uint256) = a_1 (c)- b_1
Finance type key: (0, 0)
Source address: u
[i]Type for TMP_46

Name: TMP_46 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
RETURN TMP_46
RETURN

Name: TMP_46 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
([-1], [-1], 'u', 'u', 'u', 0)
[i]Type for TMP_15

Name: TMP_15 Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
TMP_16(uint256) = TMP_15 (c)/ denominator_1
lnorm: u rnorm: u
Finance type key: (0, 0)
lnorm: u rnorm: u
Finance type key: (0, 0)
[i]Type for TMP_16

Name: TMP_16 Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
TMP_17(uint256) = ONE_4 (c)- TMP_16
Source address: u
[i]Type for TMP_17

Name: TMP_17 Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
RETURN TMP_17
RETURN

Name: TMP_17 Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
[i] vaderDeposited cleared
[i] vaderBalance cleared
[i] assetDeposited cleared
[i] assetBalance cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: vaderDeposited_1, name: vaderDeposited

Name: vaderDeposited Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: vaderDeposited_1 Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
Ssa_name: vaderBalance_1, name: vaderBalance

Name: vaderBalance Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: vaderBalance_1 Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: assetDeposited_1, name: assetDeposited

Name: assetDeposited Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: assetDeposited_1 Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
Ssa_name: assetBalance_1, name: assetBalance

Name: assetBalance Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: assetBalance_1 Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: ONE_3, name: ONE

Name: ONE Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
vaderDeposited_1(uint256) := ϕ(['vaderDeposited_1'])
Phi
[i]Type for vaderDeposited

Name: vaderDeposited Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
vaderBalance_1(uint256) := ϕ(['vaderBalance_1'])
Phi
[i]Type for vaderBalance

Name: vaderBalance Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
assetDeposited_1(uint256) := ϕ(['assetDeposited_1'])
Phi
[i]Type for assetDeposited

Name: assetDeposited Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
assetBalance_1(uint256) := ϕ(['assetBalance_1'])
Phi
[i]Type for assetBalance

Name: assetBalance Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
ONE_3(uint256) := ϕ(['ONE_4', 'ONE_0', 'ONE_2'])
Phi
[i]Type for ONE

Name: ONE Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_10 cleared
[i] vaderAsset cleared
Propogating parameters and globals to SSA variables...
Ssa_name: assetDeposited_1, name: assetDeposited

Name: assetDeposited Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: vaderBalance_1, name: vaderBalance

Name: vaderBalance Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: assetDeposited_1, name: assetDeposited

Name: assetDeposited Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: vaderBalance_1, name: vaderBalance

Name: vaderBalance Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: vaderAsset_1, name: vaderAsset

Name: vaderAsset Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: vaderAsset, Num: 1
Globalname: vaderAsset, contract_name: VaderMath
End popogation
TMP_10(uint256) = vaderBalance_1 (c)* assetDeposited_1
lnorm: u rnorm: u
Source address: u
[i]Type for TMP_10

Name: TMP_10 Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
vaderAsset_1(uint256) := TMP_10(uint256)
asgn
Source address: u
Finance type key: (0, -1)
[i]Type for vaderAsset

Name: vaderAsset Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
[i] TMP_11 cleared
[i] assetVader cleared
Propogating parameters and globals to SSA variables...
Ssa_name: vaderDeposited_1, name: vaderDeposited

Name: vaderDeposited Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: assetBalance_1, name: assetBalance

Name: assetBalance Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: vaderDeposited_1, name: vaderDeposited

Name: vaderDeposited Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: assetBalance_1, name: assetBalance

Name: assetBalance Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: assetVader_1, name: assetVader

Name: assetVader Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: assetVader, Num: 1
Globalname: assetVader, contract_name: VaderMath
End popogation
TMP_11(uint256) = assetBalance_1 (c)* vaderDeposited_1
lnorm: u rnorm: u
Source address: u
[i]Type for TMP_11

Name: TMP_11 Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
assetVader_1(uint256) := TMP_11(uint256)
asgn
Source address: u
Finance type key: (0, -1)
[i]Type for assetVader

Name: assetVader Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
[i] TMP_12 cleared
[i] TMP_13 cleared
[i] TMP_14 cleared
[i] denominator cleared
Propogating parameters and globals to SSA variables...
Ssa_name: vaderDeposited_1, name: vaderDeposited

Name: vaderDeposited Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: assetDeposited_1, name: assetDeposited

Name: assetDeposited Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: vaderBalance_1, name: vaderBalance

Name: vaderBalance Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: assetBalance_1, name: assetBalance

Name: assetBalance Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: vaderDeposited_1, name: vaderDeposited

Name: vaderDeposited Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: assetDeposited_1, name: assetDeposited

Name: assetDeposited Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: vaderBalance_1, name: vaderBalance

Name: vaderBalance Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: assetBalance_1, name: assetBalance

Name: assetBalance Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: denominator, Num: 1
Globalname: denominator, contract_name: VaderMath
End popogation
TMP_12(uint256) = vaderDeposited_1 (c)+ vaderBalance_1
Source address: u
[i]Type for TMP_12

Name: TMP_12 Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
TMP_13(uint256) = assetDeposited_1 (c)+ assetBalance_1
Source address: u
[i]Type for TMP_13

Name: TMP_13 Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
TMP_14(uint256) = TMP_12 (c)* TMP_13
lnorm: u rnorm: u
Finance type key: (0, 0)
Source address: u
[i]Type for TMP_14

Name: TMP_14 Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
denominator_1(uint256) := TMP_14(uint256)
asgn
Source address: u
Finance type key: (0, -1)
[i]Type for denominator

Name: denominator Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
[i] TMP_15 cleared
[i] TMP_16 cleared
[i] TMP_17 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: assetVader_1, name: assetVader

Name: assetVader Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: vaderAsset_1, name: vaderAsset

Name: vaderAsset Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: ONE_4, name: ONE

Name: ONE Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: ONE_4, name: ONE

Name: ONE Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: assetVader_1, name: assetVader

Name: assetVader Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: vaderAsset_1, name: vaderAsset

Name: vaderAsset Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
TMP_15(uint256) = INTERNAL_CALL, VaderMath.delta(uint256,uint256)(vaderAsset_1,assetVader_1)
New param cache [[[-1], [-1], 'u', None, [], 0, 'u', 'u'], [[-1], [-1], 'u', None, [], 0, 'u', 'u']]
Old param cache: [[[], [], 'u', None, [], -1, 'u'], [[], [], 'u', None, [], -1, 'u']]
[[-1], [-1], 'u', None, [], 0, 'u', 'u']

Name: a Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
[[-1], [-1], 'u', None, [], 0, 'u', 'u']

Name: b Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
FIND RETURN
ENTRY_POINT
delta(uint256,uint256)
Propogating All
Propogating All
b_1
Ssa_name: b_1, name: b

Name: b Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Source address: u

Name: b_1 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
a_1
Ssa_name: a_1, name: a

Name: a Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Source address: u

Name: a_1 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
Propogating All
b_1
Ssa_name: b_1, name: b

Name: b_1 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Source address: u

Name: b_1 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Source address: u

Name: a_1 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
Propogating All
b_1
Ssa_name: b_1, name: b

Name: b_1 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Source address: u

Name: b_1 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Source address: u

Name: a_1 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
[i] a cleared
[i] b cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a_1 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
Ssa_name: b_1, name: b

Name: b_1 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: b_1 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
a_1(uint256) := ϕ(['vaderAsset_1'])
Phi
[i]Type for a

Name: a Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
b_1(uint256) := ϕ(['assetVader_1'])
Phi
[i]Type for b

Name: b Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
[i] TMP_45 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: b_1, name: b

Name: b Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: a_1, name: a

Name: a Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: b_1, name: b

Name: b Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: a_1, name: a

Name: a Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
TMP_45(bool) = a_1 > b_1
lnorm: u rnorm: u
Finance type key: (0, 0)
[i]Type for TMP_45

Name: TMP_45 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_47 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: b_1, name: b

Name: b Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: a_1, name: a

Name: a Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: b_1, name: b

Name: b Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: a_1, name: a

Name: a Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
TMP_47(uint256) = b_1 (c)- a_1
Finance type key: (0, 0)
Source address: u
[i]Type for TMP_47

Name: TMP_47 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
RETURN TMP_47
RETURN

Name: TMP_47 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
[i] TMP_46 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: b_1, name: b

Name: b Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: a_1, name: a

Name: a Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: b_1, name: b

Name: b Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: a_1, name: a

Name: a Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
TMP_46(uint256) = a_1 (c)- b_1
Finance type key: (0, 0)
Source address: u
[i]Type for TMP_46

Name: TMP_46 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
RETURN TMP_46
RETURN

Name: TMP_46 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
[i] a cleared
[i] b cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
Ssa_name: b_1, name: b

Name: b Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: b_1 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
a_1(uint256) := ϕ(['vaderAsset_1'])
Phi
[i]Type for a

Name: a Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
b_1(uint256) := ϕ(['assetVader_1'])
Phi
[i]Type for b

Name: b Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
[i] TMP_45 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: b_1, name: b

Name: b Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: a_1, name: a

Name: a Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: b_1, name: b

Name: b Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: a_1, name: a

Name: a Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
TMP_45(bool) = a_1 > b_1
lnorm: u rnorm: u
Finance type key: (0, 0)
[i]Type for TMP_45

Name: TMP_45 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_47 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: b_1, name: b

Name: b Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: a_1, name: a

Name: a Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: b_1, name: b

Name: b Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: a_1, name: a

Name: a Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
TMP_47(uint256) = b_1 (c)- a_1
Finance type key: (0, 0)
Source address: u
[i]Type for TMP_47

Name: TMP_47 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
RETURN TMP_47
RETURN

Name: TMP_47 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
[i] TMP_46 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: b_1, name: b

Name: b Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: a_1, name: a

Name: a Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: b_1, name: b

Name: b Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: a_1, name: a

Name: a Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
TMP_46(uint256) = a_1 (c)- b_1
Finance type key: (0, 0)
Source address: u
[i]Type for TMP_46

Name: TMP_46 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
RETURN TMP_46
RETURN

Name: TMP_46 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
([-1], [-1], 'u', 'u', 'u', 0)
[i]Type for TMP_15

Name: TMP_15 Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
TMP_16(uint256) = TMP_15 (c)/ denominator_1
lnorm: u rnorm: u
Finance type key: (0, 0)
lnorm: u rnorm: u
Finance type key: (0, 0)
[i]Type for TMP_16

Name: TMP_16 Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
TMP_17(uint256) = ONE_4 (c)- TMP_16
Source address: u
[i]Type for TMP_17

Name: TMP_17 Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
RETURN TMP_17
RETURN

Name: TMP_17 Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Source address: u
Source address: u
[i]Type for TMP_0

Name: TMP_0 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
ONE_2(uint256) := ϕ(['ONE_4'])
Phi
[i]Type for ONE

Name: ONE Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
slip_1(uint256) := TMP_0(uint256)
asgn
Source address: u
Finance type key: (0, -1)
[i]Type for slip

Name: slip Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
[i] TMP_1 cleared
[i] TMP_2 cleared
[i] TMP_3 cleared
[i] poolUnitFactor cleared
Propogating parameters and globals to SSA variables...
Ssa_name: assetDeposited_1, name: assetDeposited

Name: assetDeposited_1 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: vaderBalance_1, name: vaderBalance

Name: vaderBalance_1 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: assetBalance_1, name: assetBalance

Name: assetBalance_1 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: vaderDeposited_1, name: vaderDeposited

Name: vaderDeposited_1 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: assetDeposited_1, name: assetDeposited

Name: assetDeposited_1 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: vaderBalance_1, name: vaderBalance

Name: vaderBalance_1 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: assetBalance_1, name: assetBalance

Name: assetBalance_1 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: vaderDeposited_1, name: vaderDeposited

Name: vaderDeposited_1 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: poolUnitFactor_1, name: poolUnitFactor

Name: poolUnitFactor Function: calculateLiquidityUnits
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: poolUnitFactor, Num: 1
Globalname: poolUnitFactor, contract_name: VaderMath
End popogation
TMP_1(uint256) = vaderBalance_1 (c)* assetDeposited_1
lnorm: u rnorm: u
Source address: u
[i]Type for TMP_1

Name: TMP_1 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
TMP_2(uint256) = vaderDeposited_1 (c)* assetBalance_1
lnorm: u rnorm: u
Source address: u
[i]Type for TMP_2

Name: TMP_2 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
TMP_3(uint256) = TMP_1 (c)+ TMP_2
Finance type key: (0, 0)
Source address: u
[i]Type for TMP_3

Name: TMP_3 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
poolUnitFactor_1(uint256) := TMP_3(uint256)
asgn
Source address: u
Finance type key: (0, -1)
[i]Type for poolUnitFactor

Name: poolUnitFactor Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
[i] TMP_4 cleared
[i] TMP_5 cleared
[i] TMP_6 cleared
[i] denominator cleared
Propogating parameters and globals to SSA variables...
Ssa_name: vaderBalance_1, name: vaderBalance

Name: vaderBalance_1 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: assetBalance_1, name: assetBalance

Name: assetBalance_1 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: ONE_2, name: ONE

Name: ONE Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: vaderBalance_1, name: vaderBalance

Name: vaderBalance_1 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: assetBalance_1, name: assetBalance

Name: assetBalance_1 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: ONE_2, name: ONE

Name: ONE Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateLiquidityUnits
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: denominator, Num: 1
Globalname: denominator, contract_name: VaderMath
End popogation
TMP_4(uint256) = ONE_2 (c)* 2
lnorm: u rnorm: 0
Source address: u
[i]Type for TMP_4

Name: TMP_4 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_5(uint256) = TMP_4 (c)* vaderBalance_1
lnorm: 0 rnorm: u
Source address: u
[i]Type for TMP_5

Name: TMP_5 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_6(uint256) = TMP_5 (c)* assetBalance_1
lnorm: 0 rnorm: u
Source address: u
[i]Type for TMP_6

Name: TMP_6 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
denominator_1(uint256) := TMP_6(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for denominator

Name: denominator Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] TMP_7 cleared
[i] TMP_8 cleared
[i] TMP_9 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: slip_1, name: slip

Name: slip Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: poolUnitFactor_1, name: poolUnitFactor

Name: poolUnitFactor Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: totalPoolUnits_1, name: totalPoolUnits

Name: totalPoolUnits_1 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: slip_1, name: slip

Name: slip Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: poolUnitFactor_1, name: poolUnitFactor

Name: poolUnitFactor Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: totalPoolUnits_1, name: totalPoolUnits

Name: totalPoolUnits_1 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
End popogation
TMP_7(uint256) = totalPoolUnits_1 (c)* poolUnitFactor_1
lnorm: u rnorm: u
Source address: u
[i]Type for TMP_7

Name: TMP_7 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
TMP_8(uint256) = TMP_7 (c)/ denominator_1
lnorm: u rnorm: 0
lnorm: u rnorm: 0
[i]Type for TMP_8

Name: TMP_8 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: raw balance
XXXX
TMP_9(uint256) = TMP_8 (c)* slip_1
lnorm: 0 rnorm: u
Finance type key: (0, 0)
Source address: u
[i]Type for TMP_9

Name: TMP_9 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: raw balance
XXXX
RETURN TMP_9
RETURN

Name: TMP_9 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: raw balance
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: ONE_1, name: ONE

Name: ONE Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
ONE_1(uint256) := ϕ(['ONE_4', 'ONE_0', 'ONE_2'])
Phi
[i]Type for ONE

Name: ONE Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_0 cleared
[i] slip cleared
Propogating parameters and globals to SSA variables...
Ssa_name: assetDeposited_1, name: assetDeposited

Name: assetDeposited_1 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: vaderBalance_1, name: vaderBalance

Name: vaderBalance_1 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: assetBalance_1, name: assetBalance

Name: assetBalance_1 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: vaderDeposited_1, name: vaderDeposited

Name: vaderDeposited_1 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: assetDeposited_1, name: assetDeposited

Name: assetDeposited_1 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: vaderBalance_1, name: vaderBalance

Name: vaderBalance_1 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: assetBalance_1, name: assetBalance

Name: assetBalance_1 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: vaderDeposited_1, name: vaderDeposited

Name: vaderDeposited_1 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: slip_1, name: slip

Name: slip Function: calculateLiquidityUnits
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: slip, Num: 1
Globalname: slip, contract_name: VaderMath
End popogation
Ssa_name: ONE_2, name: ONE

Name: ONE Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_0(uint256) = INTERNAL_CALL, VaderMath.calculateSlipAdjustment(uint256,uint256,uint256,uint256)(vaderDeposited_1,vaderBalance_1,assetDeposited_1,assetBalance_1)
New param cache [[[-1], [-1], 'u', None, [], 0, 'u', 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u'], [[-1], [-1], 'u', None, [], 0, 'u', 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[], [], 'u', None, [], -1, 'u'], [[], [], 'u', None, [], -1, 'u'], [[], [], 'u', None, [], -1, 'u'], [[], [], 'u', None, [], -1, 'u']]
[[-1], [-1], 'u', None, [], 0, 'u', 'u']

Name: vaderDeposited Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: vaderBalance Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], 0, 'u', 'u']

Name: assetDeposited Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: assetBalance Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
calculateSlipAdjustment(uint256,uint256,uint256,uint256)
Propogating All
Propogating All
assetDeposited_1
Ssa_name: assetDeposited_1, name: assetDeposited

Name: assetDeposited Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Source address: u

Name: assetDeposited_1 Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
vaderBalance_1
Ssa_name: vaderBalance_1, name: vaderBalance

Name: vaderBalance Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: vaderBalance_1 Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
vaderDeposited_1
Ssa_name: vaderDeposited_1, name: vaderDeposited

Name: vaderDeposited Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Source address: u

Name: vaderDeposited_1 Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
assetBalance_1
Ssa_name: assetBalance_1, name: assetBalance

Name: assetBalance Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: assetBalance_1 Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
vaderDeposited_1
Ssa_name: vaderDeposited_1, name: vaderDeposited

Name: vaderDeposited_1 Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Source address: u

Name: vaderDeposited_1 Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
assetDeposited_1
Ssa_name: assetDeposited_1, name: assetDeposited

Name: assetDeposited_1 Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Source address: u

Name: assetDeposited_1 Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
vaderBalance_1
Ssa_name: vaderBalance_1, name: vaderBalance

Name: vaderBalance_1 Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: vaderBalance_1 Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
assetBalance_1
Ssa_name: assetBalance_1, name: assetBalance

Name: assetBalance_1 Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: assetBalance_1 Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
assetVader_1
Ssa_name: assetVader_1, name: assetVader

Name: assetVader Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
vaderAsset_1
Ssa_name: vaderAsset_1, name: vaderAsset

Name: vaderAsset Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
denominator_1
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
[i] vaderDeposited cleared
[i] vaderBalance cleared
[i] assetDeposited cleared
[i] assetBalance cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: vaderDeposited_1, name: vaderDeposited

Name: vaderDeposited_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: vaderDeposited_1 Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
Ssa_name: vaderBalance_1, name: vaderBalance

Name: vaderBalance_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: vaderBalance_1 Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: assetDeposited_1, name: assetDeposited

Name: assetDeposited_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: assetDeposited_1 Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
Ssa_name: assetBalance_1, name: assetBalance

Name: assetBalance_1 Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: assetBalance_1 Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: ONE_3, name: ONE

Name: ONE Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
vaderDeposited_1(uint256) := ϕ(['vaderDeposited_1'])
Phi
[i]Type for vaderDeposited

Name: vaderDeposited Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
vaderBalance_1(uint256) := ϕ(['vaderBalance_1'])
Phi
[i]Type for vaderBalance

Name: vaderBalance Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
assetDeposited_1(uint256) := ϕ(['assetDeposited_1'])
Phi
[i]Type for assetDeposited

Name: assetDeposited Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
assetBalance_1(uint256) := ϕ(['assetBalance_1'])
Phi
[i]Type for assetBalance

Name: assetBalance Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
ONE_3(uint256) := ϕ(['ONE_4', 'ONE_0', 'ONE_2'])
Phi
[i]Type for ONE

Name: ONE Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_10 cleared
[i] vaderAsset cleared
Propogating parameters and globals to SSA variables...
Ssa_name: assetDeposited_1, name: assetDeposited

Name: assetDeposited Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: vaderBalance_1, name: vaderBalance

Name: vaderBalance Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: assetDeposited_1, name: assetDeposited

Name: assetDeposited Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: vaderBalance_1, name: vaderBalance

Name: vaderBalance Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: vaderAsset_1, name: vaderAsset

Name: vaderAsset Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: vaderAsset, Num: 1
Globalname: vaderAsset, contract_name: VaderMath
End popogation
TMP_10(uint256) = vaderBalance_1 (c)* assetDeposited_1
lnorm: u rnorm: u
Source address: u
[i]Type for TMP_10

Name: TMP_10 Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
vaderAsset_1(uint256) := TMP_10(uint256)
asgn
Source address: u
Finance type key: (0, -1)
[i]Type for vaderAsset

Name: vaderAsset Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
[i] TMP_11 cleared
[i] assetVader cleared
Propogating parameters and globals to SSA variables...
Ssa_name: vaderDeposited_1, name: vaderDeposited

Name: vaderDeposited Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: assetBalance_1, name: assetBalance

Name: assetBalance Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: vaderDeposited_1, name: vaderDeposited

Name: vaderDeposited Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: assetBalance_1, name: assetBalance

Name: assetBalance Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: assetVader_1, name: assetVader

Name: assetVader Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: assetVader, Num: 1
Globalname: assetVader, contract_name: VaderMath
End popogation
TMP_11(uint256) = assetBalance_1 (c)* vaderDeposited_1
lnorm: u rnorm: u
Source address: u
[i]Type for TMP_11

Name: TMP_11 Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
assetVader_1(uint256) := TMP_11(uint256)
asgn
Source address: u
Finance type key: (0, -1)
[i]Type for assetVader

Name: assetVader Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
[i] TMP_12 cleared
[i] TMP_13 cleared
[i] TMP_14 cleared
[i] denominator cleared
Propogating parameters and globals to SSA variables...
Ssa_name: vaderDeposited_1, name: vaderDeposited

Name: vaderDeposited Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: assetDeposited_1, name: assetDeposited

Name: assetDeposited Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: vaderBalance_1, name: vaderBalance

Name: vaderBalance Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: assetBalance_1, name: assetBalance

Name: assetBalance Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: vaderDeposited_1, name: vaderDeposited

Name: vaderDeposited Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: assetDeposited_1, name: assetDeposited

Name: assetDeposited Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: vaderBalance_1, name: vaderBalance

Name: vaderBalance Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: assetBalance_1, name: assetBalance

Name: assetBalance Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: denominator, Num: 1
Globalname: denominator, contract_name: VaderMath
End popogation
TMP_12(uint256) = vaderDeposited_1 (c)+ vaderBalance_1
Source address: u
[i]Type for TMP_12

Name: TMP_12 Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
TMP_13(uint256) = assetDeposited_1 (c)+ assetBalance_1
Source address: u
[i]Type for TMP_13

Name: TMP_13 Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
TMP_14(uint256) = TMP_12 (c)* TMP_13
lnorm: u rnorm: u
Finance type key: (0, 0)
Source address: u
[i]Type for TMP_14

Name: TMP_14 Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
denominator_1(uint256) := TMP_14(uint256)
asgn
Source address: u
Finance type key: (0, -1)
[i]Type for denominator

Name: denominator Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
[i] TMP_15 cleared
[i] TMP_16 cleared
[i] TMP_17 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: assetVader_1, name: assetVader

Name: assetVader Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: vaderAsset_1, name: vaderAsset

Name: vaderAsset Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: ONE_4, name: ONE

Name: ONE Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: ONE_4, name: ONE

Name: ONE Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: assetVader_1, name: assetVader

Name: assetVader Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: vaderAsset_1, name: vaderAsset

Name: vaderAsset Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
TMP_15(uint256) = INTERNAL_CALL, VaderMath.delta(uint256,uint256)(vaderAsset_1,assetVader_1)
New param cache [[[-1], [-1], 'u', None, [], 0, 'u', 'u'], [[-1], [-1], 'u', None, [], 0, 'u', 'u']]
Old param cache: [[[], [], 'u', None, [], -1, 'u'], [[], [], 'u', None, [], -1, 'u']]
[[-1], [-1], 'u', None, [], 0, 'u', 'u']

Name: a Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
[[-1], [-1], 'u', None, [], 0, 'u', 'u']

Name: b Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
FIND RETURN
ENTRY_POINT
delta(uint256,uint256)
Propogating All
Propogating All
b_1
Ssa_name: b_1, name: b

Name: b Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Source address: u

Name: b_1 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
a_1
Ssa_name: a_1, name: a

Name: a Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Source address: u

Name: a_1 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
Propogating All
b_1
Ssa_name: b_1, name: b

Name: b_1 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Source address: u

Name: b_1 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Source address: u

Name: a_1 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
Propogating All
b_1
Ssa_name: b_1, name: b

Name: b_1 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Source address: u

Name: b_1 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Source address: u

Name: a_1 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
[i] a cleared
[i] b cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a_1 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
Ssa_name: b_1, name: b

Name: b_1 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: b_1 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
a_1(uint256) := ϕ(['vaderAsset_1'])
Phi
[i]Type for a

Name: a Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
b_1(uint256) := ϕ(['assetVader_1'])
Phi
[i]Type for b

Name: b Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
[i] TMP_45 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: b_1, name: b

Name: b Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: a_1, name: a

Name: a Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: b_1, name: b

Name: b Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: a_1, name: a

Name: a Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
TMP_45(bool) = a_1 > b_1
lnorm: u rnorm: u
Finance type key: (0, 0)
[i]Type for TMP_45

Name: TMP_45 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_47 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: b_1, name: b

Name: b Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: a_1, name: a

Name: a Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: b_1, name: b

Name: b Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: a_1, name: a

Name: a Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
TMP_47(uint256) = b_1 (c)- a_1
Finance type key: (0, 0)
Source address: u
[i]Type for TMP_47

Name: TMP_47 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
RETURN TMP_47
RETURN

Name: TMP_47 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
[i] TMP_46 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: b_1, name: b

Name: b Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: a_1, name: a

Name: a Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: b_1, name: b

Name: b Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: a_1, name: a

Name: a Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
TMP_46(uint256) = a_1 (c)- b_1
Finance type key: (0, 0)
Source address: u
[i]Type for TMP_46

Name: TMP_46 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
RETURN TMP_46
RETURN

Name: TMP_46 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
[i] a cleared
[i] b cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
Ssa_name: b_1, name: b

Name: b Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: b_1 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
a_1(uint256) := ϕ(['vaderAsset_1'])
Phi
[i]Type for a

Name: a Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
b_1(uint256) := ϕ(['assetVader_1'])
Phi
[i]Type for b

Name: b Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
[i] TMP_45 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: b_1, name: b

Name: b Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: a_1, name: a

Name: a Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: b_1, name: b

Name: b Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: a_1, name: a

Name: a Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
TMP_45(bool) = a_1 > b_1
lnorm: u rnorm: u
Finance type key: (0, 0)
[i]Type for TMP_45

Name: TMP_45 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_47 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: b_1, name: b

Name: b Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: a_1, name: a

Name: a Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: b_1, name: b

Name: b Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: a_1, name: a

Name: a Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
TMP_47(uint256) = b_1 (c)- a_1
Finance type key: (0, 0)
Source address: u
[i]Type for TMP_47

Name: TMP_47 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
RETURN TMP_47
RETURN

Name: TMP_47 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
[i] TMP_46 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: b_1, name: b

Name: b Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: a_1, name: a

Name: a Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: b_1, name: b

Name: b Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: a_1, name: a

Name: a Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
TMP_46(uint256) = a_1 (c)- b_1
Finance type key: (0, 0)
Source address: u
[i]Type for TMP_46

Name: TMP_46 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
RETURN TMP_46
RETURN

Name: TMP_46 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
([-1], [-1], 'u', 'u', 'u', 0)
[i]Type for TMP_15

Name: TMP_15 Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
TMP_16(uint256) = TMP_15 (c)/ denominator_1
lnorm: u rnorm: u
Finance type key: (0, 0)
lnorm: u rnorm: u
Finance type key: (0, 0)
[i]Type for TMP_16

Name: TMP_16 Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
TMP_17(uint256) = ONE_4 (c)- TMP_16
Source address: u
[i]Type for TMP_17

Name: TMP_17 Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
RETURN TMP_17
RETURN

Name: TMP_17 Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
[i] vaderDeposited cleared
[i] vaderBalance cleared
[i] assetDeposited cleared
[i] assetBalance cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: vaderDeposited_1, name: vaderDeposited

Name: vaderDeposited Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: vaderDeposited_1 Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
Ssa_name: vaderBalance_1, name: vaderBalance

Name: vaderBalance Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: vaderBalance_1 Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: assetDeposited_1, name: assetDeposited

Name: assetDeposited Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: assetDeposited_1 Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
Ssa_name: assetBalance_1, name: assetBalance

Name: assetBalance Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: assetBalance_1 Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: ONE_3, name: ONE

Name: ONE Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
vaderDeposited_1(uint256) := ϕ(['vaderDeposited_1'])
Phi
[i]Type for vaderDeposited

Name: vaderDeposited Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
vaderBalance_1(uint256) := ϕ(['vaderBalance_1'])
Phi
[i]Type for vaderBalance

Name: vaderBalance Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
assetDeposited_1(uint256) := ϕ(['assetDeposited_1'])
Phi
[i]Type for assetDeposited

Name: assetDeposited Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
assetBalance_1(uint256) := ϕ(['assetBalance_1'])
Phi
[i]Type for assetBalance

Name: assetBalance Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
ONE_3(uint256) := ϕ(['ONE_4', 'ONE_0', 'ONE_2'])
Phi
[i]Type for ONE

Name: ONE Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_10 cleared
[i] vaderAsset cleared
Propogating parameters and globals to SSA variables...
Ssa_name: assetDeposited_1, name: assetDeposited

Name: assetDeposited Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: vaderBalance_1, name: vaderBalance

Name: vaderBalance Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: assetDeposited_1, name: assetDeposited

Name: assetDeposited Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: vaderBalance_1, name: vaderBalance

Name: vaderBalance Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: vaderAsset_1, name: vaderAsset

Name: vaderAsset Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: vaderAsset, Num: 1
Globalname: vaderAsset, contract_name: VaderMath
End popogation
TMP_10(uint256) = vaderBalance_1 (c)* assetDeposited_1
lnorm: u rnorm: u
Source address: u
[i]Type for TMP_10

Name: TMP_10 Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
vaderAsset_1(uint256) := TMP_10(uint256)
asgn
Source address: u
Finance type key: (0, -1)
[i]Type for vaderAsset

Name: vaderAsset Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
[i] TMP_11 cleared
[i] assetVader cleared
Propogating parameters and globals to SSA variables...
Ssa_name: vaderDeposited_1, name: vaderDeposited

Name: vaderDeposited Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: assetBalance_1, name: assetBalance

Name: assetBalance Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: vaderDeposited_1, name: vaderDeposited

Name: vaderDeposited Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: assetBalance_1, name: assetBalance

Name: assetBalance Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: assetVader_1, name: assetVader

Name: assetVader Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: assetVader, Num: 1
Globalname: assetVader, contract_name: VaderMath
End popogation
TMP_11(uint256) = assetBalance_1 (c)* vaderDeposited_1
lnorm: u rnorm: u
Source address: u
[i]Type for TMP_11

Name: TMP_11 Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
assetVader_1(uint256) := TMP_11(uint256)
asgn
Source address: u
Finance type key: (0, -1)
[i]Type for assetVader

Name: assetVader Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
[i] TMP_12 cleared
[i] TMP_13 cleared
[i] TMP_14 cleared
[i] denominator cleared
Propogating parameters and globals to SSA variables...
Ssa_name: vaderDeposited_1, name: vaderDeposited

Name: vaderDeposited Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: assetDeposited_1, name: assetDeposited

Name: assetDeposited Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: vaderBalance_1, name: vaderBalance

Name: vaderBalance Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: assetBalance_1, name: assetBalance

Name: assetBalance Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: vaderDeposited_1, name: vaderDeposited

Name: vaderDeposited Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: assetDeposited_1, name: assetDeposited

Name: assetDeposited Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: vaderBalance_1, name: vaderBalance

Name: vaderBalance Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: assetBalance_1, name: assetBalance

Name: assetBalance Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSlipAdjustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: denominator, Num: 1
Globalname: denominator, contract_name: VaderMath
End popogation
TMP_12(uint256) = vaderDeposited_1 (c)+ vaderBalance_1
Source address: u
[i]Type for TMP_12

Name: TMP_12 Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
TMP_13(uint256) = assetDeposited_1 (c)+ assetBalance_1
Source address: u
[i]Type for TMP_13

Name: TMP_13 Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
TMP_14(uint256) = TMP_12 (c)* TMP_13
lnorm: u rnorm: u
Finance type key: (0, 0)
Source address: u
[i]Type for TMP_14

Name: TMP_14 Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
denominator_1(uint256) := TMP_14(uint256)
asgn
Source address: u
Finance type key: (0, -1)
[i]Type for denominator

Name: denominator Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
[i] TMP_15 cleared
[i] TMP_16 cleared
[i] TMP_17 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: assetVader_1, name: assetVader

Name: assetVader Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: vaderAsset_1, name: vaderAsset

Name: vaderAsset Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: ONE_4, name: ONE

Name: ONE Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: ONE_4, name: ONE

Name: ONE Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: assetVader_1, name: assetVader

Name: assetVader Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: vaderAsset_1, name: vaderAsset

Name: vaderAsset Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
TMP_15(uint256) = INTERNAL_CALL, VaderMath.delta(uint256,uint256)(vaderAsset_1,assetVader_1)
New param cache [[[-1], [-1], 'u', None, [], 0, 'u', 'u'], [[-1], [-1], 'u', None, [], 0, 'u', 'u']]
Old param cache: [[[], [], 'u', None, [], -1, 'u'], [[], [], 'u', None, [], -1, 'u']]
[[-1], [-1], 'u', None, [], 0, 'u', 'u']

Name: a Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
[[-1], [-1], 'u', None, [], 0, 'u', 'u']

Name: b Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
FIND RETURN
ENTRY_POINT
delta(uint256,uint256)
Propogating All
Propogating All
b_1
Ssa_name: b_1, name: b

Name: b Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Source address: u

Name: b_1 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
a_1
Ssa_name: a_1, name: a

Name: a Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Source address: u

Name: a_1 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
Propogating All
b_1
Ssa_name: b_1, name: b

Name: b_1 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Source address: u

Name: b_1 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Source address: u

Name: a_1 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
Propogating All
b_1
Ssa_name: b_1, name: b

Name: b_1 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Source address: u

Name: b_1 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Source address: u

Name: a_1 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
[i] a cleared
[i] b cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a_1 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
Ssa_name: b_1, name: b

Name: b_1 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: b_1 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
a_1(uint256) := ϕ(['vaderAsset_1'])
Phi
[i]Type for a

Name: a Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
b_1(uint256) := ϕ(['assetVader_1'])
Phi
[i]Type for b

Name: b Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
[i] TMP_45 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: b_1, name: b

Name: b Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: a_1, name: a

Name: a Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: b_1, name: b

Name: b Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: a_1, name: a

Name: a Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
TMP_45(bool) = a_1 > b_1
lnorm: u rnorm: u
Finance type key: (0, 0)
[i]Type for TMP_45

Name: TMP_45 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_47 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: b_1, name: b

Name: b Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: a_1, name: a

Name: a Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: b_1, name: b

Name: b Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: a_1, name: a

Name: a Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
TMP_47(uint256) = b_1 (c)- a_1
Finance type key: (0, 0)
Source address: u
[i]Type for TMP_47

Name: TMP_47 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
RETURN TMP_47
RETURN

Name: TMP_47 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
[i] TMP_46 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: b_1, name: b

Name: b Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: a_1, name: a

Name: a Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: b_1, name: b

Name: b Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: a_1, name: a

Name: a Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
TMP_46(uint256) = a_1 (c)- b_1
Finance type key: (0, 0)
Source address: u
[i]Type for TMP_46

Name: TMP_46 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
RETURN TMP_46
RETURN

Name: TMP_46 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
[i] a cleared
[i] b cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
Ssa_name: b_1, name: b

Name: b Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: b_1 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
a_1(uint256) := ϕ(['vaderAsset_1'])
Phi
[i]Type for a

Name: a Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
b_1(uint256) := ϕ(['assetVader_1'])
Phi
[i]Type for b

Name: b Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
[i] TMP_45 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: b_1, name: b

Name: b Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: a_1, name: a

Name: a Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: b_1, name: b

Name: b Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: a_1, name: a

Name: a Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
TMP_45(bool) = a_1 > b_1
lnorm: u rnorm: u
Finance type key: (0, 0)
[i]Type for TMP_45

Name: TMP_45 Function: delta
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_47 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: b_1, name: b

Name: b Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: a_1, name: a

Name: a Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: b_1, name: b

Name: b Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: a_1, name: a

Name: a Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
TMP_47(uint256) = b_1 (c)- a_1
Finance type key: (0, 0)
Source address: u
[i]Type for TMP_47

Name: TMP_47 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
RETURN TMP_47
RETURN

Name: TMP_47 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
[i] TMP_46 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: b_1, name: b

Name: b Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: a_1, name: a

Name: a Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: b_1, name: b

Name: b Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: a_1, name: a

Name: a Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
TMP_46(uint256) = a_1 (c)- b_1
Finance type key: (0, 0)
Source address: u
[i]Type for TMP_46

Name: TMP_46 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
RETURN TMP_46
RETURN

Name: TMP_46 Function: delta
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
([-1], [-1], 'u', 'u', 'u', 0)
[i]Type for TMP_15

Name: TMP_15 Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
TMP_16(uint256) = TMP_15 (c)/ denominator_1
lnorm: u rnorm: u
Finance type key: (0, 0)
lnorm: u rnorm: u
Finance type key: (0, 0)
[i]Type for TMP_16

Name: TMP_16 Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
TMP_17(uint256) = ONE_4 (c)- TMP_16
Source address: u
[i]Type for TMP_17

Name: TMP_17 Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
RETURN TMP_17
RETURN

Name: TMP_17 Function: calculateSlipAdjustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Source address: u
Source address: u
[i]Type for TMP_0

Name: TMP_0 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
ONE_2(uint256) := ϕ(['ONE_4'])
Phi
[i]Type for ONE

Name: ONE Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
slip_1(uint256) := TMP_0(uint256)
asgn
Source address: u
Finance type key: (0, -1)
[i]Type for slip

Name: slip Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
[i] TMP_1 cleared
[i] TMP_2 cleared
[i] TMP_3 cleared
[i] poolUnitFactor cleared
Propogating parameters and globals to SSA variables...
Ssa_name: assetDeposited_1, name: assetDeposited

Name: assetDeposited_1 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: vaderBalance_1, name: vaderBalance

Name: vaderBalance_1 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: assetBalance_1, name: assetBalance

Name: assetBalance_1 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: vaderDeposited_1, name: vaderDeposited

Name: vaderDeposited_1 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: assetDeposited_1, name: assetDeposited

Name: assetDeposited_1 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: vaderBalance_1, name: vaderBalance

Name: vaderBalance_1 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: assetBalance_1, name: assetBalance

Name: assetBalance_1 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: vaderDeposited_1, name: vaderDeposited

Name: vaderDeposited_1 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: poolUnitFactor_1, name: poolUnitFactor

Name: poolUnitFactor Function: calculateLiquidityUnits
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: poolUnitFactor, Num: 1
Globalname: poolUnitFactor, contract_name: VaderMath
End popogation
TMP_1(uint256) = vaderBalance_1 (c)* assetDeposited_1
lnorm: u rnorm: u
Source address: u
[i]Type for TMP_1

Name: TMP_1 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
TMP_2(uint256) = vaderDeposited_1 (c)* assetBalance_1
lnorm: u rnorm: u
Source address: u
[i]Type for TMP_2

Name: TMP_2 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
TMP_3(uint256) = TMP_1 (c)+ TMP_2
Finance type key: (0, 0)
Source address: u
[i]Type for TMP_3

Name: TMP_3 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
poolUnitFactor_1(uint256) := TMP_3(uint256)
asgn
Source address: u
Finance type key: (0, -1)
[i]Type for poolUnitFactor

Name: poolUnitFactor Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
[i] TMP_4 cleared
[i] TMP_5 cleared
[i] TMP_6 cleared
[i] denominator cleared
Propogating parameters and globals to SSA variables...
Ssa_name: vaderBalance_1, name: vaderBalance

Name: vaderBalance_1 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: assetBalance_1, name: assetBalance

Name: assetBalance_1 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: ONE_2, name: ONE

Name: ONE Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: vaderBalance_1, name: vaderBalance

Name: vaderBalance_1 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: assetBalance_1, name: assetBalance

Name: assetBalance_1 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: ONE_2, name: ONE

Name: ONE Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateLiquidityUnits
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: denominator, Num: 1
Globalname: denominator, contract_name: VaderMath
End popogation
TMP_4(uint256) = ONE_2 (c)* 2
lnorm: u rnorm: 0
Source address: u
[i]Type for TMP_4

Name: TMP_4 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_5(uint256) = TMP_4 (c)* vaderBalance_1
lnorm: 0 rnorm: u
Source address: u
[i]Type for TMP_5

Name: TMP_5 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_6(uint256) = TMP_5 (c)* assetBalance_1
lnorm: 0 rnorm: u
Source address: u
[i]Type for TMP_6

Name: TMP_6 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
denominator_1(uint256) := TMP_6(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for denominator

Name: denominator Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] TMP_7 cleared
[i] TMP_8 cleared
[i] TMP_9 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: slip_1, name: slip

Name: slip Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: poolUnitFactor_1, name: poolUnitFactor

Name: poolUnitFactor Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: totalPoolUnits_1, name: totalPoolUnits

Name: totalPoolUnits_1 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: slip_1, name: slip

Name: slip Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: poolUnitFactor_1, name: poolUnitFactor

Name: poolUnitFactor Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: totalPoolUnits_1, name: totalPoolUnits

Name: totalPoolUnits_1 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
End popogation
TMP_7(uint256) = totalPoolUnits_1 (c)* poolUnitFactor_1
lnorm: u rnorm: u
Source address: u
[i]Type for TMP_7

Name: TMP_7 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
TMP_8(uint256) = TMP_7 (c)/ denominator_1
lnorm: u rnorm: 0
lnorm: u rnorm: 0
[i]Type for TMP_8

Name: TMP_8 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: raw balance
XXXX
TMP_9(uint256) = TMP_8 (c)* slip_1
lnorm: 0 rnorm: u
Finance type key: (0, 0)
Source address: u
[i]Type for TMP_9

Name: TMP_9 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: raw balance
XXXX
RETURN TMP_9
RETURN

Name: TMP_9 Function: calculateLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: raw balance
Source address: u
Source address: u
[i]Type for TMP_146

Name: TMP_146 Function: mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: raw balance
XXXX
liquidity_1(uint256) := TMP_146(uint256)
asgn
Source address: u
Finance type key: (0, -1)
[i]Type for liquidity

Name: liquidity Function: mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: raw balance
XXXX
[i] liquidity cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: liquidity_3, name: liquidity

Name: liquidity Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: liquidity, Num: 3
Globalname: liquidity, contract_name: BasePool
liquidity_3(uint256) := ϕ(['liquidity_1', 'liquidity_2'])
Phi

Name: liquidity Function: mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: raw balance

Name: liquidity Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance


END==================================
[i]Type for liquidity

Name: liquidity Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_147 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: liquidity_3, name: liquidity

Name: liquidity Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: liquidity, Num: 3
Globalname: liquidity, contract_name: BasePool
Ssa_name: liquidity_3, name: liquidity

Name: liquidity Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: liquidity, Num: 3
Globalname: liquidity, contract_name: BasePool
End popogation
TMP_147(bool) = liquidity_3 > 0
lnorm: u rnorm: 0
Source address: u
Source address: u
[i]Type for TMP_147

Name: TMP_147 Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_148(None) = SOLIDITY_CALL require(bool,string)(TMP_147,BasePool::mint: Insufficient Liquidity Provided)
[i]Type for TMP_148

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_149 cleared
[i] id cleared
Propogating parameters and globals to SSA variables...
Ssa_name: positionId_5, name: positionId

Name: positionId Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: positionId_5, name: positionId

Name: positionId Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: positionId_6, name: positionId

Name: positionId Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Ssa_name: id_1, name: id

Name: id Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: id, Num: 1
Globalname: id, contract_name: BasePool
End popogation
TMP_149(uint256) := positionId_5(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for TMP_149

Name: TMP_149 Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
positionId_6(uint256) = positionId_5 (c)+ 1
Source address: u
[i]Type for positionId

Name: positionId Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
id_1(uint256) := TMP_149(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for id

Name: id Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Copied positionId
Source address: u
Propogating parameters and globals to SSA variables...
Ssa_name: liquidity_3, name: liquidity

Name: liquidity Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: totalSupply_5, name: totalSupply

Name: totalSupply Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: totalSupply_5, name: totalSupply

Name: totalSupply Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: liquidity_3, name: liquidity

Name: liquidity Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: totalSupply_6, name: totalSupply

Name: totalSupply Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
totalSupply_6(uint256) = totalSupply_5 (c)+ liquidity_3
Source address: u
[i]Type for totalSupply

Name: totalSupply Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Copied totalSupply
Source address: u
Propogating parameters and globals to SSA variables...
Ssa_name: to_1, name: to

Name: to_1 Function: mint
Num: 
Den: 
Address: -998
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: id_1, name: id

Name: id Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to_1 Function: mint
Num: 
Den: 
Address: -998
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: id_1, name: id

Name: id Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
INTERNAL_CALL, ERC721._mint(address,uint256)(to_1,id_1)
New param cache [[[], [], 0, 'to', [], -1, -998, 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[], [], 0, 'to', [], -1, -998], [[-1], [-1], 'u', None, [], -1, 'u']]
Propogating parameters and globals to SSA variables...
Ssa_name: id_1, name: id

Name: id Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: foreignDeposit_1, name: foreignDeposit

Name: foreignDeposit Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: liquidity_3, name: liquidity

Name: liquidity Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeDeposit_1, name: nativeDeposit

Name: nativeDeposit Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: id_1, name: id

Name: id Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: foreignDeposit_1, name: foreignDeposit

Name: foreignDeposit Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: liquidity_3, name: liquidity

Name: liquidity Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeDeposit_1, name: nativeDeposit

Name: nativeDeposit Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: positions_1, name: positions

Name: positions Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
Ssa_name: positions_1, name: positions

Name: positions Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_41(IBasePool.Position) -> positions_0[id_1]
INDEX
[i]Type for REF_41

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_151 = new Position(block.timestamp,liquidity_3,nativeDeposit_1,foreignDeposit_1)
[i]Type for TMP_151

Name: TMP_151 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
positions_1(mapping(uint256 => IBasePool.Position)) := ϕ(['positions_0'])
Phi
[i]Type for positions

Name: positions Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_41 (->positions_1) := TMP_151(IBasePool.Position)
asgn
Finance type key: (-1, -1)
[i]Type for REF_41

Name: REF_41 Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
Copied positions
Source address: u
Propogating parameters and globals to SSA variables...
Ssa_name: balanceForeign_1, name: balanceForeign

Name: balanceForeign Function: mint
Num: 6
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: reserveNative_1, name: reserveNative

Name: reserveNative Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: reserveForeign_1, name: reserveForeign

Name: reserveForeign Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: balanceNative_1, name: balanceNative

Name: balanceNative Function: mint
Num: 5
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: balanceForeign_1, name: balanceForeign

Name: balanceForeign Function: mint
Num: 6
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: reserveNative_1, name: reserveNative

Name: reserveNative Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: reserveForeign_1, name: reserveForeign

Name: reserveForeign Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: balanceNative_1, name: balanceNative

Name: balanceNative Function: mint
Num: 5
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
INTERNAL_CALL, BasePool._update(uint256,uint256,uint112,uint112)(balanceNative_1,balanceForeign_1,reserveNative_1,reserveForeign_1)
New param cache [[[5], [-1], 'u', None, [], 0, 'u', 'u'], [[6], [-1], 'u', None, [], 0, 'u', 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[5], [-1], 'u', None, [], 0, 'u'], [[6], [-1], 'u', None, [], 0, 'u'], [[-1], [-1], 'u', None, [], -1, 'u'], [[-1], [-1], 'u', None, [], -1, 'u']]
Propogating parameters and globals to SSA variables...
Ssa_name: to_1, name: to

Name: to_1 Function: mint
Num: 
Den: 
Address: -998
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: foreignDeposit_1, name: foreignDeposit

Name: foreignDeposit Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: nativeDeposit_1, name: nativeDeposit

Name: nativeDeposit Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: to_1, name: to

Name: to_1 Function: mint
Num: 
Den: 
Address: -998
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: foreignDeposit_1, name: foreignDeposit

Name: foreignDeposit Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: nativeDeposit_1, name: nativeDeposit

Name: nativeDeposit Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
Propogating parameters and globals to SSA variables...
Ssa_name: id_1, name: id

Name: id Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: liquidity_3, name: liquidity

Name: liquidity Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: id_1, name: id

Name: id Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: liquidity_3, name: liquidity

Name: liquidity Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
Source address: u
Reading Function: _burn
Function _burn not marked
Reading Function: swap
Checking funcion...



swap
Function name: swap
Finding type for nativeAmountIn(uint256 ... )
Value: u
Finding type for foreignAmountIn(uint256 ... )
Value: u
Finding type for to(address ... )
prev address? u
Head Addr: -999
    Norm: 0
    Set: {-999}
    Fin: NULL
Finding type for (bytes ... )
New param cache [[[-1], [-1], 'u', None, [], -1, 'u', 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u'], [[], [], 0, 'to', [], -1, -999, 'u'], [[], [], 'u', None, [], -1, 'u', 'u']]
FIND RETURN
ENTRY_POINT
swap(uint256,uint256,address,bytes)


TMP_184(uint256) = INTERNAL_CALL, BasePool.swap(uint256,uint256,address)(nativeAmountIn_1,foreignAmountIn_1,to_1)
RETURN TMP_184


Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_184 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: to_1, name: to

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: -999

Name: to_1 Function: swap
Num: 
Den: 
Address: -999
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: foreignAmountIn_1, name: foreignAmountIn

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: foreignAmountIn_1 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: foreignAmountIn, Num: 1
Globalname: foreignAmountIn, contract_name: BasePool
Ssa_name: nativeAmountIn_1, name: nativeAmountIn

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: nativeAmountIn_1 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: nativeAmountIn, Num: 1
Globalname: nativeAmountIn, contract_name: BasePool
Ssa_name: to_1, name: to

Name: to_1 Function: swap
Num: 
Den: 
Address: -999
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: foreignAmountIn_1, name: foreignAmountIn

Name: foreignAmountIn_1 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: foreignAmountIn_1 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: foreignAmountIn, Num: 1
Globalname: foreignAmountIn, contract_name: BasePool
Ssa_name: nativeAmountIn_1, name: nativeAmountIn

Name: nativeAmountIn_1 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: nativeAmountIn_1 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: nativeAmountIn, Num: 1
Globalname: nativeAmountIn, contract_name: BasePool
End popogation
TMP_184(uint256) = INTERNAL_CALL, BasePool.swap(uint256,uint256,address)(nativeAmountIn_1,foreignAmountIn_1,to_1)
New param cache [[[], [], 'u', None, [], -1, 'u', 'u'], [[], [], 'u', None, [], -1, 'u', 'u'], [[], [], 0, 'to', [], -1, -999, 'u']]
[[], [], 'u', None, [], -1, 'u', 'u']

Name: nativeAmountIn Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[], [], 'u', None, [], -1, 'u', 'u']

Name: foreignAmountIn Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[], [], 0, 'to', [], -1, -999, 'u']

Name: to Function: None
Num: 
Den: 
Address: -999
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
swap(uint256,uint256,address)
Propogating All
Propogating All
Propogating All
Propogating All
foreignAmountIn_1
Ssa_name: foreignAmountIn_1, name: foreignAmountIn

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: foreignAmountIn_1 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
nativeAmountIn_1
Ssa_name: nativeAmountIn_1, name: nativeAmountIn

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: nativeAmountIn_1 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
Propogating All
Propogating All
Propogating All
Propogating All
Propogating All
Propogating All
Propogating All
Propogating All
_nativeAsset_1
Ssa_name: _nativeAsset_1, name: _nativeAsset

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
_foreignAsset_1
Ssa_name: _foreignAsset_1, name: _foreignAsset

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
_foreignAsset_1
Ssa_name: _foreignAsset_1, name: _foreignAsset

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
to_1
Ssa_name: to_1, name: to

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: -999

Name: to_1 Function: swap
Num: 
Den: 
Address: -999
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Copied ftype
_nativeAsset_1
Ssa_name: _nativeAsset_1, name: _nativeAsset

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
foreignAmountIn_1
Ssa_name: foreignAmountIn_1, name: foreignAmountIn

Name: foreignAmountIn_1 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: foreignAmountIn_1 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
nativeAmountIn_1
Ssa_name: nativeAmountIn_1, name: nativeAmountIn

Name: nativeAmountIn_1 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: nativeAmountIn_1 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
nativeReserve_1
Ssa_name: nativeReserve_1, name: nativeReserve

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
nativeBalance_1
Ssa_name: nativeBalance_1, name: nativeBalance

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
nativeAmountIn_1
Ssa_name: nativeAmountIn_1, name: nativeAmountIn

Name: nativeAmountIn_1 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: nativeAmountIn_1 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
nativeReserve_1
Ssa_name: nativeReserve_1, name: nativeReserve

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
foreignAmountIn_1
Ssa_name: foreignAmountIn_1, name: foreignAmountIn

Name: foreignAmountIn_1 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: foreignAmountIn_1 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
foreignReserve_1
Ssa_name: foreignReserve_1, name: foreignReserve

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
foreignBalance_1
Ssa_name: foreignBalance_1, name: foreignBalance

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
foreignAmountIn_1
Ssa_name: foreignAmountIn_1, name: foreignAmountIn

Name: foreignAmountIn_1 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: foreignAmountIn_1 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
foreignReserve_1
Ssa_name: foreignReserve_1, name: foreignReserve

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
foreignAmountIn_1
Ssa_name: foreignAmountIn_1, name: foreignAmountIn

Name: foreignAmountIn_1 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: foreignAmountIn_1 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
nativeReserve_1
Ssa_name: nativeReserve_1, name: nativeReserve

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
foreignReserve_1
Ssa_name: foreignReserve_1, name: foreignReserve

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
nativeAmountIn_1
Ssa_name: nativeAmountIn_1, name: nativeAmountIn

Name: nativeAmountIn_1 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: nativeAmountIn_1 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
nativeReserve_1
Ssa_name: nativeReserve_1, name: nativeReserve

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
foreignReserve_1
Ssa_name: foreignReserve_1, name: foreignReserve

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
nativeAmountOut_1
Ssa_name: nativeAmountOut_1, name: nativeAmountOut

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
nativeReserve_1
Ssa_name: nativeReserve_1, name: nativeReserve

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
foreignAmountOut_1
Ssa_name: foreignAmountOut_1, name: foreignAmountOut

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
foreignReserve_1
Ssa_name: foreignReserve_1, name: foreignReserve

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
nativeAmountOut_1
Ssa_name: nativeAmountOut_1, name: nativeAmountOut

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
to_1
Ssa_name: to_1, name: to

Name: to_1 Function: swap
Num: 
Den: 
Address: -999
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Source address: -999

Name: to_1 Function: swap
Num: 
Den: 
Address: -999
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Copied ftype
_nativeAsset_1
Ssa_name: _nativeAsset_1, name: _nativeAsset

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
Propogating All
foreignAmountOut_1
Ssa_name: foreignAmountOut_1, name: foreignAmountOut

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_foreignAsset_1
Ssa_name: _foreignAsset_1, name: _foreignAsset

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
to_1
Ssa_name: to_1, name: to

Name: to_1 Function: swap
Num: 
Den: 
Address: -999
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Source address: -999

Name: to_1 Function: swap
Num: 
Den: 
Address: -999
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
_nativeAsset_1
Ssa_name: _nativeAsset_1, name: _nativeAsset

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
_foreignAsset_1
Ssa_name: _foreignAsset_1, name: _foreignAsset

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
nativeReserve_1
Ssa_name: nativeReserve_1, name: nativeReserve

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
foreignReserve_1
Ssa_name: foreignReserve_1, name: foreignReserve

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
nativeBalance_2
Ssa_name: nativeBalance_2, name: nativeBalance

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
foreignBalance_2
Ssa_name: foreignBalance_2, name: foreignBalance

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
foreignAmountOut_2
Ssa_name: foreignAmountOut_2, name: foreignAmountOut

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
nativeAmountOut_2
Ssa_name: nativeAmountOut_2, name: nativeAmountOut

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
foreignAmountIn_1
Ssa_name: foreignAmountIn_1, name: foreignAmountIn

Name: foreignAmountIn_1 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: foreignAmountIn_1 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
nativeAmountIn_1
Ssa_name: nativeAmountIn_1, name: nativeAmountIn

Name: nativeAmountIn_1 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: nativeAmountIn_1 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
to_1
Ssa_name: to_1, name: to

Name: to_1 Function: swap
Num: 
Den: 
Address: -999
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Source address: -999

Name: to_1 Function: swap
Num: 
Den: 
Address: -999
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
nativeAmountOut_2
Ssa_name: nativeAmountOut_2, name: nativeAmountOut

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] nativeAmountIn cleared
[i] foreignAmountIn cleared
[i] to cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: nativeAmountIn_1, name: nativeAmountIn

Name: nativeAmountIn_1 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: nativeAmountIn_1 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: nativeAmountIn, Num: 1
Globalname: nativeAmountIn, contract_name: BasePool
Ssa_name: foreignAmountIn_1, name: foreignAmountIn

Name: foreignAmountIn_1 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: foreignAmountIn_1 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: foreignAmountIn, Num: 1
Globalname: foreignAmountIn, contract_name: BasePool
Ssa_name: to_1, name: to

Name: to_1 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: to
Value: u
Fields: 
Finance Type: undef
Source address: -999

Name: to_1 Function: swap
Num: 
Den: 
Address: -999
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: nativeAsset_10, name: nativeAsset

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: nativeAsset, Num: 10
Globalname: nativeAsset, contract_name: BasePool
global...

Name: PIC_35 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Ssa_name: foreignAsset_11, name: foreignAsset

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: foreignAsset, Num: 11
Globalname: foreignAsset, contract_name: BasePool
global...

Name: PIC_34 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
nativeAmountIn_1(uint256) := ϕ(['nativeAmountIn_1'])
Phi

Name: nativeAmountIn_1 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for nativeAmountIn

Name: nativeAmountIn Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
foreignAmountIn_1(uint256) := ϕ(['foreignAmountIn_1'])
Phi

Name: foreignAmountIn_1 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for foreignAmountIn

Name: foreignAmountIn Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
to_1(address) := ϕ(['to_1'])
Phi
[i]Type for to

Name: to Function: swap
Num: 
Den: 
Address: -999
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
XXXX
nativeAsset_10(IERC20) := ϕ(['nativeAsset_13', 'nativeAsset_9', 'nativeAsset_1', 'nativeAsset_0', 'nativeAsset_5'])
Phi
[i]Type for nativeAsset

Name: nativeAsset Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
foreignAsset_11(IERC20) := ϕ(['foreignAsset_0', 'foreignAsset_14', 'foreignAsset_1', 'foreignAsset_10', 'foreignAsset_6'])
Phi
[i]Type for foreignAsset

Name: foreignAsset Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, ReentrancyGuard.nonReentrant()()
New param cache []
Old param cache: []
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, GasThrottle.validateGas()()
New param cache []
FIND RETURN
ENTRY_POINT
validateGas()
Propogating All
Propogating All
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_185 cleared
[i] TMP_186 cleared
[i] TMP_187 cleared
[i] TMP_188 cleared
[i] TMP_189 cleared
[i] TMP_190 cleared
[i] TMP_191 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: foreignAmountIn_1, name: foreignAmountIn

Name: foreignAmountIn Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: foreignAmountIn_1 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: foreignAmountIn, Num: 1
Globalname: foreignAmountIn, contract_name: BasePool
Ssa_name: nativeAmountIn_1, name: nativeAmountIn

Name: nativeAmountIn Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: nativeAmountIn_1 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: nativeAmountIn, Num: 1
Globalname: nativeAmountIn, contract_name: BasePool
Ssa_name: foreignAmountIn_1, name: foreignAmountIn

Name: foreignAmountIn_1 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: foreignAmountIn_1 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: foreignAmountIn, Num: 1
Globalname: foreignAmountIn, contract_name: BasePool
Ssa_name: nativeAmountIn_1, name: nativeAmountIn

Name: nativeAmountIn_1 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: nativeAmountIn_1 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: nativeAmountIn, Num: 1
Globalname: nativeAmountIn, contract_name: BasePool
End popogation
TMP_185(bool) = nativeAmountIn_1 > 0
lnorm: u rnorm: 0
Source address: u
Source address: u
[i]Type for TMP_185

Name: TMP_185 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_186(bool) = foreignAmountIn_1 == 0
[i]Type for TMP_186

Name: TMP_186 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_187(bool) = TMP_185 && TMP_186
[i]Type for TMP_187

Name: TMP_187 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_188(bool) = nativeAmountIn_1 == 0
[i]Type for TMP_188

Name: TMP_188 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_189(bool) = foreignAmountIn_1 > 0
lnorm: u rnorm: 0
Source address: u
Source address: u
[i]Type for TMP_189

Name: TMP_189 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_190(bool) = TMP_188 && TMP_189
[i]Type for TMP_190

Name: TMP_190 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_191(bool) = TMP_187 || TMP_190
[i]Type for TMP_191

Name: TMP_191 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_192(None) = SOLIDITY_CALL require(bool,string)(TMP_191,BasePool::swap: Only One-Sided Swaps Supported)
[i]Type for TMP_192

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] nativeReserve cleared
[i] foreignReserve cleared
Propogating parameters and globals to SSA variables...
Ssa_name: nativeReserve_1, name: nativeReserve

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: nativeReserve, Num: 1
Globalname: nativeReserve, contract_name: BasePool
Ssa_name: foreignReserve_1, name: foreignReserve

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: foreignReserve, Num: 1
Globalname: foreignReserve, contract_name: BasePool
End popogation
TUPLE_2(uint112,uint112,uint32) = INTERNAL_CALL, BasePool.getReserves()()
New param cache []
Old param cache: []
[i]Type for TUPLE_2

Name: TUPLE_2 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
nativeReserve_1(uint112)= UNPACK TUPLE_2 index: 0 
([-1], [-1], 'u', 'u', 'u', -1)
[i]Type for nativeReserve

Name: nativeReserve Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
foreignReserve_1(uint112)= UNPACK TUPLE_2 index: 1 
([-1], [-1], 'u', 'u', 'u', -1)
[i]Type for foreignReserve

Name: foreignReserve Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] _nativeAsset cleared
Propogating parameters and globals to SSA variables...
Ssa_name: nativeAsset_13, name: nativeAsset

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: nativeAsset, Num: 13
Globalname: nativeAsset, contract_name: BasePool
global...

Name: PIC_35 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Ssa_name: nativeAsset_13, name: nativeAsset

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _nativeAsset_1, name: _nativeAsset

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _nativeAsset, Num: 1
Globalname: _nativeAsset, contract_name: BasePool
End popogation
_nativeAsset_1(IERC20) := nativeAsset_13(IERC20)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for _nativeAsset

Name: _nativeAsset Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] _foreignAsset cleared
Propogating parameters and globals to SSA variables...
Ssa_name: foreignAsset_14, name: foreignAsset

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: foreignAsset, Num: 14
Globalname: foreignAsset, contract_name: BasePool
global...

Name: PIC_34 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Ssa_name: foreignAsset_14, name: foreignAsset

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _foreignAsset_1, name: _foreignAsset

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _foreignAsset, Num: 1
Globalname: _foreignAsset, contract_name: BasePool
End popogation
_foreignAsset_1(IERC20) := foreignAsset_14(IERC20)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for _foreignAsset

Name: _foreignAsset Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_193 cleared
[i] TMP_194 cleared
[i] nativeBalance cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _nativeAsset_1, name: _nativeAsset

Name: _nativeAsset Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _nativeAsset_1, name: _nativeAsset

Name: _nativeAsset Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeBalance_1, name: nativeBalance

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: nativeBalance, Num: 1
Globalname: nativeBalance, contract_name: BasePool
End popogation
TMP_193 = CONVERT this to address
Converting this
4
[i]Type for TMP_193

Name: TMP_193 Function: swap
Num: -1
Den: -1
Address: 4
Norm: u
LF: BasePool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_194(uint256) = HIGH_LEVEL_CALL, dest:_nativeAsset_1(IERC20), function:balanceOf, arguments:['TMP_193']  
High Call: balanceOf
Running querryfc
Found: None
Written func info: IERC20, balanceOf
Handling balance function!
u
prev address? u
global assignment: 7
7
[i]Type for TMP_194

Name: TMP_194 Function: swap
Num: 7
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
nativeBalance_1(uint256) := TMP_194(uint256)
asgn
Source address: u
Finance type key: (0, -1)
[i]Type for nativeBalance

Name: nativeBalance Function: swap
Num: 7
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
[i] TMP_195 cleared
[i] TMP_196 cleared
[i] foreignBalance cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _foreignAsset_1, name: _foreignAsset

Name: _foreignAsset Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _foreignAsset_1, name: _foreignAsset

Name: _foreignAsset Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: foreignBalance_1, name: foreignBalance

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: foreignBalance, Num: 1
Globalname: foreignBalance, contract_name: BasePool
End popogation
TMP_195 = CONVERT this to address
Converting this
4
[i]Type for TMP_195

Name: TMP_195 Function: swap
Num: -1
Den: -1
Address: 4
Norm: u
LF: BasePool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_196(uint256) = HIGH_LEVEL_CALL, dest:_foreignAsset_1(IERC20), function:balanceOf, arguments:['TMP_195']  
High Call: balanceOf
Running querryfc
Found: None
Written func info: IERC20, balanceOf
Handling balance function!
u
prev address? u
global assignment: 8
8
[i]Type for TMP_196

Name: TMP_196 Function: swap
Num: 8
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
foreignBalance_1(uint256) := TMP_196(uint256)
asgn
Source address: u
Finance type key: (0, -1)
[i]Type for foreignBalance

Name: foreignBalance Function: swap
Num: 8
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
[i] TMP_197 cleared
[i] TMP_198 cleared
[i] TMP_199 cleared
[i] TMP_200 cleared
[i] TMP_201 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _foreignAsset_1, name: _foreignAsset

Name: _foreignAsset Function: swap
Num: -1
Den: -1
Address: 8
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: swap
Num: 
Den: 
Address: -999
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: _nativeAsset_1, name: _nativeAsset

Name: _nativeAsset Function: swap
Num: -1
Den: -1
Address: 7
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _foreignAsset_1, name: _foreignAsset

Name: _foreignAsset Function: swap
Num: -1
Den: -1
Address: 8
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: swap
Num: 
Den: 
Address: -999
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: _nativeAsset_1, name: _nativeAsset

Name: _nativeAsset Function: swap
Num: -1
Den: -1
Address: 7
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_197 = CONVERT _nativeAsset_1 to address
Converting _nativeAsset_1

Name: _nativeAsset Function: swap
Num: -1
Den: -1
Address: 7
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: 7
[i]Type for TMP_197

Name: TMP_197 Function: swap
Num: -1
Den: -1
Address: 7
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_198(bool) = to_1 != TMP_197
[i]Type for TMP_198

Name: TMP_198 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_199 = CONVERT _foreignAsset_1 to address
Converting _foreignAsset_1

Name: _foreignAsset Function: swap
Num: -1
Den: -1
Address: 8
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: 8
[i]Type for TMP_199

Name: TMP_199 Function: swap
Num: -1
Den: -1
Address: 8
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_200(bool) = to_1 != TMP_199
[i]Type for TMP_200

Name: TMP_200 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_201(bool) = TMP_198 && TMP_200
[i]Type for TMP_201

Name: TMP_201 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_202(None) = SOLIDITY_CALL require(bool,string)(TMP_201,BasePool::swap: Invalid Receiver)
[i]Type for TMP_202

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_203 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: foreignAmountIn_1, name: foreignAmountIn

Name: foreignAmountIn_1 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: foreignAmountIn_1, name: foreignAmountIn

Name: foreignAmountIn_1 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_203(bool) = foreignAmountIn_1 > 0
lnorm: u rnorm: 0
[i]Type for TMP_203

Name: TMP_203 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_215 cleared
[i] TMP_216 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: nativeAmountIn_1, name: nativeAmountIn

Name: nativeAmountIn_1 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeReserve_1, name: nativeReserve

Name: nativeReserve Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeBalance_1, name: nativeBalance

Name: nativeBalance Function: swap
Num: 7
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: nativeAmountIn_1, name: nativeAmountIn

Name: nativeAmountIn_1 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeReserve_1, name: nativeReserve

Name: nativeReserve Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeBalance_1, name: nativeBalance

Name: nativeBalance Function: swap
Num: 7
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
TMP_215(uint256) = nativeBalance_1 (c)- nativeReserve_1
Source address: u
[i]Type for TMP_215

Name: TMP_215 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
TMP_216(bool) = nativeAmountIn_1 <= TMP_215
lnorm: u rnorm: u
[i]Type for TMP_216

Name: TMP_216 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_217(None) = SOLIDITY_CALL require(bool,string)(TMP_216,BasePool::swap: Insufficient Tokens Provided)
[i]Type for TMP_217

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_218 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: nativeAmountIn_1, name: nativeAmountIn

Name: nativeAmountIn_1 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeReserve_1, name: nativeReserve

Name: nativeReserve Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeAmountIn_1, name: nativeAmountIn

Name: nativeAmountIn_1 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeReserve_1, name: nativeReserve

Name: nativeReserve Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_218(bool) = nativeAmountIn_1 <= nativeReserve_1
lnorm: u rnorm: u
[i]Type for TMP_218

Name: TMP_218 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_219(None) = SOLIDITY_CALL require(bool,string)(TMP_218,BasePool::swap: Unfavourable Trade)
[i]Type for TMP_219

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_204 cleared
[i] TMP_205 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: foreignAmountIn_1, name: foreignAmountIn

Name: foreignAmountIn_1 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: foreignReserve_1, name: foreignReserve

Name: foreignReserve Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: foreignBalance_1, name: foreignBalance

Name: foreignBalance Function: swap
Num: 8
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: foreignAmountIn_1, name: foreignAmountIn

Name: foreignAmountIn_1 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: foreignReserve_1, name: foreignReserve

Name: foreignReserve Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: foreignBalance_1, name: foreignBalance

Name: foreignBalance Function: swap
Num: 8
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
TMP_204(uint256) = foreignBalance_1 (c)- foreignReserve_1
Source address: u
[i]Type for TMP_204

Name: TMP_204 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
TMP_205(bool) = foreignAmountIn_1 <= TMP_204
lnorm: u rnorm: u
[i]Type for TMP_205

Name: TMP_205 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_206(None) = SOLIDITY_CALL require(bool,string)(TMP_205,BasePool::swap: Insufficient Tokens Provided)
[i]Type for TMP_206

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_207 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: foreignAmountIn_1, name: foreignAmountIn

Name: foreignAmountIn_1 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: foreignReserve_1, name: foreignReserve

Name: foreignReserve Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: foreignAmountIn_1, name: foreignAmountIn

Name: foreignAmountIn_1 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: foreignReserve_1, name: foreignReserve

Name: foreignReserve Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_207(bool) = foreignAmountIn_1 <= foreignReserve_1
lnorm: u rnorm: u
[i]Type for TMP_207

Name: TMP_207 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_208(None) = SOLIDITY_CALL require(bool,string)(TMP_207,BasePool::swap: Unfavourable Trade)
[i]Type for TMP_208

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_209 cleared
[i] nativeAmountOut cleared
Propogating parameters and globals to SSA variables...
Ssa_name: foreignAmountIn_1, name: foreignAmountIn

Name: foreignAmountIn_1 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeReserve_1, name: nativeReserve

Name: nativeReserve Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: foreignReserve_1, name: foreignReserve

Name: foreignReserve Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: foreignAmountIn_1, name: foreignAmountIn

Name: foreignAmountIn_1 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeReserve_1, name: nativeReserve

Name: nativeReserve Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: foreignReserve_1, name: foreignReserve

Name: foreignReserve Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeAmountOut_1, name: nativeAmountOut

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: nativeAmountOut, Num: 1
Globalname: nativeAmountOut, contract_name: BasePool
End popogation
TMP_209(uint256) = LIBRARY_CALL, dest:VaderMath, function:VaderMath.calculateSwap(uint256,uint256,uint256), arguments:['foreignAmountIn_1', 'foreignReserve_1', 'nativeReserve_1'] 
Found: calculateSwap

Name: foreignAmountIn_1 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: foreignReserve Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: nativeReserve Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
High level cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
New param cache [[[-1], [-1], 'u', None, [], -1, 'u', 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 'u', None, [], -1, 'u'], [[-1], [-1], 'u', None, [], -1, 'u'], [[-1], [-1], 'u', None, [], -1, 'u']]
[i]Type for TMP_209

Name: TMP_209 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
nativeAmountOut_1(uint256) := TMP_209(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for nativeAmountOut

Name: nativeAmountOut Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_220 cleared
[i] foreignAmountOut cleared
Propogating parameters and globals to SSA variables...
Ssa_name: nativeAmountIn_1, name: nativeAmountIn

Name: nativeAmountIn_1 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeReserve_1, name: nativeReserve

Name: nativeReserve Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: foreignReserve_1, name: foreignReserve

Name: foreignReserve Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeAmountIn_1, name: nativeAmountIn

Name: nativeAmountIn_1 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeReserve_1, name: nativeReserve

Name: nativeReserve Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: foreignReserve_1, name: foreignReserve

Name: foreignReserve Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: foreignAmountOut_1, name: foreignAmountOut

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: foreignAmountOut, Num: 1
Globalname: foreignAmountOut, contract_name: BasePool
End popogation
TMP_220(uint256) = LIBRARY_CALL, dest:VaderMath, function:VaderMath.calculateSwap(uint256,uint256,uint256), arguments:['nativeAmountIn_1', 'nativeReserve_1', 'foreignReserve_1'] 
Found: calculateSwap

Name: nativeAmountIn_1 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: nativeReserve Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: foreignReserve Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
High level cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
New param cache [[[-1], [-1], 'u', None, [], -1, 'u', 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 'u', None, [], -1, 'u'], [[-1], [-1], 'u', None, [], -1, 'u'], [[-1], [-1], 'u', None, [], -1, 'u']]
[i]Type for TMP_220

Name: TMP_220 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
foreignAmountOut_1(uint256) := TMP_220(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for foreignAmountOut

Name: foreignAmountOut Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_210 cleared
[i] TMP_211 cleared
[i] TMP_212 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: nativeAmountOut_1, name: nativeAmountOut

Name: nativeAmountOut Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: nativeAmountOut, Num: 1
Globalname: nativeAmountOut, contract_name: BasePool
Ssa_name: nativeReserve_1, name: nativeReserve

Name: nativeReserve Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeAmountOut_1, name: nativeAmountOut

Name: nativeAmountOut Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: nativeAmountOut, Num: 1
Globalname: nativeAmountOut, contract_name: BasePool
Ssa_name: nativeReserve_1, name: nativeReserve

Name: nativeReserve Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_210(bool) = nativeAmountOut_1 > 0
lnorm: u rnorm: 0
Source address: u
Source address: u
[i]Type for TMP_210

Name: TMP_210 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_211(bool) = nativeAmountOut_1 <= nativeReserve_1
lnorm: u rnorm: u
[i]Type for TMP_211

Name: TMP_211 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_212(bool) = TMP_210 && TMP_211
[i]Type for TMP_212

Name: TMP_212 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_213(None) = SOLIDITY_CALL require(bool,string)(TMP_212,BasePool::swap: Swap Impossible)
[i]Type for TMP_213

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_221 cleared
[i] TMP_222 cleared
[i] TMP_223 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: foreignAmountOut_1, name: foreignAmountOut

Name: foreignAmountOut Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: foreignAmountOut, Num: 1
Globalname: foreignAmountOut, contract_name: BasePool
Ssa_name: foreignReserve_1, name: foreignReserve

Name: foreignReserve Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: foreignAmountOut_1, name: foreignAmountOut

Name: foreignAmountOut Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: foreignAmountOut, Num: 1
Globalname: foreignAmountOut, contract_name: BasePool
Ssa_name: foreignReserve_1, name: foreignReserve

Name: foreignReserve Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_221(bool) = foreignAmountOut_1 > 0
lnorm: u rnorm: 0
Source address: u
Source address: u
[i]Type for TMP_221

Name: TMP_221 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_222(bool) = foreignAmountOut_1 <= foreignReserve_1
lnorm: u rnorm: u
[i]Type for TMP_222

Name: TMP_222 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_223(bool) = TMP_221 && TMP_222
[i]Type for TMP_223

Name: TMP_223 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_224(None) = SOLIDITY_CALL require(bool,string)(TMP_223,BasePool::swap: Swap Impossible)
[i]Type for TMP_224

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: nativeAmountOut_1, name: nativeAmountOut

Name: nativeAmountOut Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: swap
Num: 
Den: 
Address: -999
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: _nativeAsset_1, name: _nativeAsset

Name: _nativeAsset Function: swap
Num: -1
Den: -1
Address: 7
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeAmountOut_1, name: nativeAmountOut

Name: nativeAmountOut Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: swap
Num: 
Den: 
Address: -999
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: _nativeAsset_1, name: _nativeAsset

Name: _nativeAsset Function: swap
Num: -1
Den: -1
Address: 7
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
LIBRARY_CALL, dest:SafeERC20, function:SafeERC20.safeTransfer(IERC20,address,uint256), arguments:['_nativeAsset_1', 'to_1', 'nativeAmountOut_1'] 
[i] nativeAmountOut cleared
[i] foreignAmountOut cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: nativeAmountOut_2, name: nativeAmountOut

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: nativeAmountOut, Num: 2
Globalname: nativeAmountOut, contract_name: BasePool
Ssa_name: foreignAmountOut_2, name: foreignAmountOut

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: foreignAmountOut, Num: 2
Globalname: foreignAmountOut, contract_name: BasePool
nativeAmountOut_2(uint256) := ϕ(['nativeAmountOut_0', 'nativeAmountOut_1'])
Phi

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: nativeAmountOut Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for nativeAmountOut

Name: nativeAmountOut Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
foreignAmountOut_2(uint256) := ϕ(['foreignAmountOut_0', 'foreignAmountOut_1'])
Phi

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: foreignAmountOut Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for foreignAmountOut

Name: foreignAmountOut Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: foreignAmountOut_1, name: foreignAmountOut

Name: foreignAmountOut Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _foreignAsset_1, name: _foreignAsset

Name: _foreignAsset Function: swap
Num: -1
Den: -1
Address: 8
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: swap
Num: 
Den: 
Address: -999
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: foreignAmountOut_1, name: foreignAmountOut

Name: foreignAmountOut Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _foreignAsset_1, name: _foreignAsset

Name: _foreignAsset Function: swap
Num: -1
Den: -1
Address: 8
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: swap
Num: 
Den: 
Address: -999
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
End popogation
LIBRARY_CALL, dest:SafeERC20, function:SafeERC20.safeTransfer(IERC20,address,uint256), arguments:['_foreignAsset_1', 'to_1', 'foreignAmountOut_1'] 
[i] TMP_226 cleared
[i] TMP_227 cleared
[i] nativeBalance cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _nativeAsset_1, name: _nativeAsset

Name: _nativeAsset Function: swap
Num: -1
Den: -1
Address: 7
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _nativeAsset_1, name: _nativeAsset

Name: _nativeAsset Function: swap
Num: -1
Den: -1
Address: 7
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeBalance_2, name: nativeBalance

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: nativeBalance, Num: 2
Globalname: nativeBalance, contract_name: BasePool
End popogation
TMP_226 = CONVERT this to address
Converting this
4
[i]Type for TMP_226

Name: TMP_226 Function: swap
Num: -1
Den: -1
Address: 4
Norm: u
LF: BasePool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_227(uint256) = HIGH_LEVEL_CALL, dest:_nativeAsset_1(IERC20), function:balanceOf, arguments:['TMP_226']  
High Call: balanceOf
Running querryfc
Found: None
Written func info: IERC20, balanceOf
Handling balance function!
7
[i]Type for TMP_227

Name: TMP_227 Function: swap
Num: 7
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
nativeBalance_2(uint256) := TMP_227(uint256)
asgn
Source address: u
Finance type key: (0, -1)
[i]Type for nativeBalance

Name: nativeBalance Function: swap
Num: 7
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
[i] TMP_228 cleared
[i] TMP_229 cleared
[i] foreignBalance cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _foreignAsset_1, name: _foreignAsset

Name: _foreignAsset Function: swap
Num: -1
Den: -1
Address: 8
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _foreignAsset_1, name: _foreignAsset

Name: _foreignAsset Function: swap
Num: -1
Den: -1
Address: 8
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: foreignBalance_2, name: foreignBalance

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: foreignBalance, Num: 2
Globalname: foreignBalance, contract_name: BasePool
End popogation
TMP_228 = CONVERT this to address
Converting this
4
[i]Type for TMP_228

Name: TMP_228 Function: swap
Num: -1
Den: -1
Address: 4
Norm: u
LF: BasePool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_229(uint256) = HIGH_LEVEL_CALL, dest:_foreignAsset_1(IERC20), function:balanceOf, arguments:['TMP_228']  
High Call: balanceOf
Running querryfc
Found: None
Written func info: IERC20, balanceOf
Handling balance function!
8
[i]Type for TMP_229

Name: TMP_229 Function: swap
Num: 8
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
foreignBalance_2(uint256) := TMP_229(uint256)
asgn
Source address: u
Finance type key: (0, -1)
[i]Type for foreignBalance

Name: foreignBalance Function: swap
Num: 8
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: nativeReserve_1, name: nativeReserve

Name: nativeReserve Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: foreignReserve_1, name: foreignReserve

Name: foreignReserve Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeBalance_2, name: nativeBalance

Name: nativeBalance Function: swap
Num: 7
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: foreignBalance_2, name: foreignBalance

Name: foreignBalance Function: swap
Num: 8
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: nativeReserve_1, name: nativeReserve

Name: nativeReserve Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: foreignReserve_1, name: foreignReserve

Name: foreignReserve Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeBalance_2, name: nativeBalance

Name: nativeBalance Function: swap
Num: 7
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: foreignBalance_2, name: foreignBalance

Name: foreignBalance Function: swap
Num: 8
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
INTERNAL_CALL, BasePool._update(uint256,uint256,uint112,uint112)(nativeBalance_2,foreignBalance_2,nativeReserve_1,foreignReserve_1)
New param cache [[[7], [-1], 'u', None, [], 0, 'u', 'u'], [[8], [-1], 'u', None, [], 0, 'u', 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[5], [-1], 'u', None, [], 0, 'u'], [[6], [-1], 'u', None, [], 0, 'u'], [[-1], [-1], 'u', None, [], -1, 'u'], [[-1], [-1], 'u', None, [], -1, 'u']]
[[7], [-1], 'u', None, [], 0, 'u', 'u']

Name: balanceNative Function: None
Num: 7
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
[[8], [-1], 'u', None, [], 0, 'u', 'u']

Name: balanceForeign Function: None
Num: 8
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: reserveNative Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: reserveForeign Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_update(uint256,uint256,uint112,uint112)
Propogating All
Propogating All
balanceNative_1
Ssa_name: balanceNative_1, name: balanceNative

Name: balanceNative Function: _update
Num: 5
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Source address: u

Name: balanceNative_1 Function: _update
Num: 7
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
balanceForeign_1
Ssa_name: balanceForeign_1, name: balanceForeign

Name: balanceForeign Function: _update
Num: 6
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Source address: u

Name: balanceForeign_1 Function: _update
Num: 8
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
Propogating All
Propogating All
blockTimestamp_1
Ssa_name: blockTimestamp_1, name: blockTimestamp

Name: blockTimestamp Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
reserveNative_1
Ssa_name: reserveNative_1, name: reserveNative

Name: reserveNative Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: reserveNative_1 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
timeElapsed_1
Ssa_name: timeElapsed_1, name: timeElapsed

Name: timeElapsed Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
reserveForeign_1
Ssa_name: reserveForeign_1, name: reserveForeign

Name: reserveForeign Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: reserveForeign_1 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
reserveNative_1
Ssa_name: reserveNative_1, name: reserveNative

Name: reserveNative_1 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: reserveNative_1 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
timeElapsed_1
Ssa_name: timeElapsed_1, name: timeElapsed

Name: timeElapsed Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
reserveForeign_1
Ssa_name: reserveForeign_1, name: reserveForeign

Name: reserveForeign_1 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: reserveForeign_1 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
balanceNative_1
Ssa_name: balanceNative_1, name: balanceNative

Name: balanceNative_1 Function: _update
Num: 7
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Source address: u

Name: balanceNative_1 Function: _update
Num: 7
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
Propogating All
reserveNative_1
Ssa_name: reserveNative_1, name: reserveNative

Name: reserveNative_1 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: reserveNative_1 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
timeElapsed_1
Ssa_name: timeElapsed_1, name: timeElapsed

Name: timeElapsed Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
reserveForeign_1
Ssa_name: reserveForeign_1, name: reserveForeign

Name: reserveForeign_1 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: reserveForeign_1 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
balanceForeign_1
Ssa_name: balanceForeign_1, name: balanceForeign

Name: balanceForeign_1 Function: _update
Num: 8
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Source address: u

Name: balanceForeign_1 Function: _update
Num: 8
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
Propogating All
blockTimestamp_1
Ssa_name: blockTimestamp_1, name: blockTimestamp

Name: blockTimestamp Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
balanceNative_1
Ssa_name: balanceNative_1, name: balanceNative

Name: balanceNative_1 Function: _update
Num: 7
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Source address: u

Name: balanceNative_1 Function: _update
Num: 7
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
balanceForeign_1
Ssa_name: balanceForeign_1, name: balanceForeign

Name: balanceForeign_1 Function: _update
Num: 8
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Source address: u

Name: balanceForeign_1 Function: _update
Num: 8
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
[i] balanceNative cleared
[i] balanceForeign cleared
[i] reserveNative cleared
[i] reserveForeign cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: balanceNative_1, name: balanceNative

Name: balanceNative_1 Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: balanceNative_1 Function: _update
Num: 7
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
Ssa_name: balanceForeign_1, name: balanceForeign

Name: balanceForeign_1 Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: balanceForeign_1 Function: _update
Num: 8
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
Ssa_name: reserveNative_1, name: reserveNative

Name: reserveNative_1 Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: reserveNative_1 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: reserveForeign_1, name: reserveForeign

Name: reserveForeign_1 Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: reserveForeign_1 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: priceNativeCumulativeLast_1, name: priceNativeCumulativeLast

Name: priceNativeCumulativeLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: priceForeignCumulativeLast_1, name: priceForeignCumulativeLast

Name: priceForeignCumulativeLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _blockTimestampLast_2, name: _blockTimestampLast

Name: _blockTimestampLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
balanceNative_1(uint256) := ϕ(['nativeBalance_2', 'balanceNative_1', 'nativeBalance_2'])
Phi
[i]Type for balanceNative

Name: balanceNative Function: _update
Num: 7
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
balanceForeign_1(uint256) := ϕ(['balanceForeign_1', 'foreignBalance_2', 'foreignBalance_2'])
Phi
[i]Type for balanceForeign

Name: balanceForeign Function: _update
Num: 8
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
reserveNative_1(uint112) := ϕ(['reserveNative_1', 'nativeReserve_1', 'reserveNative_1'])
Phi
[i]Type for reserveNative

Name: reserveNative Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
reserveForeign_1(uint112) := ϕ(['reserveForeign_1', 'foreignReserve_1', 'reserveForeign_1'])
Phi
[i]Type for reserveForeign

Name: reserveForeign Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
priceNativeCumulativeLast_1(uint256) := ϕ(['priceNativeCumulativeLast_0', 'priceNativeCumulativeLast_2'])
Phi
[i]Type for priceNativeCumulativeLast

Name: priceNativeCumulativeLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
priceForeignCumulativeLast_1(uint256) := ϕ(['priceForeignCumulativeLast_0', 'priceForeignCumulativeLast_2'])
Phi
[i]Type for priceForeignCumulativeLast

Name: priceForeignCumulativeLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_blockTimestampLast_2(uint32) := ϕ(['_blockTimestampLast_3', '_blockTimestampLast_0'])
Phi
[i]Type for _blockTimestampLast

Name: _blockTimestampLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_235 cleared
[i] TMP_236 cleared
[i] TMP_238 cleared
[i] TMP_239 cleared
[i] TMP_240 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: balanceNative_1, name: balanceNative

Name: balanceNative Function: _update
Num: 7
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: balanceForeign_1, name: balanceForeign

Name: balanceForeign Function: _update
Num: 8
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: balanceNative_1, name: balanceNative

Name: balanceNative Function: _update
Num: 7
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: balanceForeign_1, name: balanceForeign

Name: balanceForeign Function: _update
Num: 8
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
TMP_235(uint112) := 5192296858534827628530496329220095(uint112)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for TMP_235

Name: TMP_235 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 5192296858534827628530496329220095
Fields: 
Finance Type: undef
XXXX
TMP_236(bool) = balanceNative_1 <= TMP_235
lnorm: u rnorm: 0
[i]Type for TMP_236

Name: TMP_236 Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_238(uint112) := 5192296858534827628530496329220095(uint112)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for TMP_238

Name: TMP_238 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 5192296858534827628530496329220095
Fields: 
Finance Type: undef
XXXX
TMP_239(bool) = balanceForeign_1 <= TMP_238
lnorm: u rnorm: 0
[i]Type for TMP_239

Name: TMP_239 Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_240(bool) = TMP_236 && TMP_239
[i]Type for TMP_240

Name: TMP_240 Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_241(None) = SOLIDITY_CALL require(bool,string)(TMP_240,BasePool::_update: Balance Overflow)
[i]Type for TMP_241

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_242 cleared
[i] TMP_243 cleared
[i] TMP_244 cleared
[i] blockTimestamp cleared
Propogating parameters and globals to SSA variables...
Ssa_name: blockTimestamp_1, name: blockTimestamp

Name: blockTimestamp Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: blockTimestamp, Num: 1
Globalname: blockTimestamp, contract_name: BasePool
End popogation
TMP_242(uint256) = 2 (c)** 32
[i]Type for TMP_242

Name: TMP_242 Function: _update
Num: 
Den: 
Address: u
Norm: 32
LF: None
Value: 4294967296
Fields: 
Finance Type: undef
XXXX
TMP_243(uint256) = block.timestamp (c)% TMP_242
[i]Type for TMP_243

Name: TMP_243 Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_244 = CONVERT TMP_243 to uint32
Converting TMP_243

Name: TMP_243 Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_244

Name: TMP_244 Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
blockTimestamp_1(uint32) := TMP_244(uint32)
asgn
Finance type key: (-1, -1)
[i]Type for blockTimestamp

Name: blockTimestamp Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_245 cleared
[i] timeElapsed cleared
Propogating parameters and globals to SSA variables...
Ssa_name: blockTimestamp_1, name: blockTimestamp

Name: blockTimestamp Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: blockTimestamp, Num: 1
Globalname: blockTimestamp, contract_name: BasePool
Ssa_name: _blockTimestampLast_2, name: _blockTimestampLast

Name: _blockTimestampLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: blockTimestamp_1, name: blockTimestamp

Name: blockTimestamp Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: blockTimestamp, Num: 1
Globalname: blockTimestamp, contract_name: BasePool
Ssa_name: _blockTimestampLast_2, name: _blockTimestampLast

Name: _blockTimestampLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: timeElapsed_1, name: timeElapsed

Name: timeElapsed Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: timeElapsed, Num: 1
Globalname: timeElapsed, contract_name: BasePool
End popogation
TMP_245(uint32) = blockTimestamp_1 (c)- _blockTimestampLast_2
Source address: u
[i]Type for TMP_245

Name: TMP_245 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
timeElapsed_1(uint32) := TMP_245(uint32)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for timeElapsed

Name: timeElapsed Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_246 cleared
[i] TMP_247 cleared
[i] TMP_248 cleared
[i] TMP_249 cleared
[i] TMP_250 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveNative_1, name: reserveNative

Name: reserveNative Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: timeElapsed_1, name: timeElapsed

Name: timeElapsed Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: reserveForeign_1, name: reserveForeign

Name: reserveForeign Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: reserveNative_1, name: reserveNative

Name: reserveNative Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: timeElapsed_1, name: timeElapsed

Name: timeElapsed Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: reserveForeign_1, name: reserveForeign

Name: reserveForeign Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_246(bool) = timeElapsed_1 > 0
lnorm: u rnorm: 0
[i]Type for TMP_246

Name: TMP_246 Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_247(bool) = reserveNative_1 != 0
[i]Type for TMP_247

Name: TMP_247 Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_248(bool) = TMP_246 && TMP_247
[i]Type for TMP_248

Name: TMP_248 Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_249(bool) = reserveForeign_1 != 0
[i]Type for TMP_249

Name: TMP_249 Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_250(bool) = TMP_248 && TMP_249
[i]Type for TMP_250

Name: TMP_250 Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_251 cleared
[i] TMP_252 cleared
[i] TMP_253 cleared
[i] TMP_254 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveNative_1, name: reserveNative

Name: reserveNative Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: timeElapsed_1, name: timeElapsed

Name: timeElapsed Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: reserveForeign_1, name: reserveForeign

Name: reserveForeign Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: priceNativeCumulativeLast_1, name: priceNativeCumulativeLast

Name: priceNativeCumulativeLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: reserveNative_1, name: reserveNative

Name: reserveNative Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: timeElapsed_1, name: timeElapsed

Name: timeElapsed Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: priceNativeCumulativeLast_1, name: priceNativeCumulativeLast

Name: priceNativeCumulativeLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: reserveForeign_1, name: reserveForeign

Name: reserveForeign Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: priceNativeCumulativeLast_2, name: priceNativeCumulativeLast

Name: priceNativeCumulativeLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_251(uint224) = LIBRARY_CALL, dest:UQ112x112, function:UQ112x112.encode(uint112), arguments:['reserveForeign_1'] 
Found: None
Written func info: UQ112x112, encode
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
reserveForeign
hers norm: u
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
reserveForeign
hers norm: u
([-1], [-1, -1], 'u', "'u'", 'u', -1)
[i]Type for TMP_251

Name: TMP_251 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
TMP_252(uint224) = LIBRARY_CALL, dest:UQ112x112, function:UQ112x112.uqdiv(uint224,uint112), arguments:['TMP_251', 'reserveNative_1'] 
Found: None
Written func info: UQ112x112, uqdiv
Retvar: ('t', ['1'], ['2'], 1, "'u'", 'u')
TMP_251
reserveNative
hers norm: u
Retvar: ('t', ['1'], ['2'], 1, "'u'", 'u')
TMP_251
reserveNative
hers norm: u
([-1, -1], [-1, -1], 'u', "'u'", 'u', -1)
[i]Type for TMP_252

Name: TMP_252 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
TMP_253 = CONVERT TMP_252 to uint256
Converting TMP_252

Name: TMP_252 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_253

Name: TMP_253 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
TMP_254(uint256) = TMP_253 (c)* timeElapsed_1
lnorm: u rnorm: u
Source address: u
[i]Type for TMP_254

Name: TMP_254 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
priceNativeCumulativeLast_2(uint256) = priceNativeCumulativeLast_1 (c)+ TMP_254
Source address: u
[i]Type for priceNativeCumulativeLast

Name: priceNativeCumulativeLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Copied priceNativeCumulativeLast
Source address: u
[i] TMP_259 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: balanceNative_1, name: balanceNative

Name: balanceNative Function: _update
Num: 7
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: balanceNative_1, name: balanceNative

Name: balanceNative Function: _update
Num: 7
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: _reserveNative_2, name: _reserveNative

Name: _reserveNative Function: _update
Num: 5
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
TMP_259 = CONVERT balanceNative_1 to uint112
Converting balanceNative_1

Name: balanceNative Function: _update
Num: 7
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Source address: u
[i]Type for TMP_259

Name: TMP_259 Function: _update
Num: 7
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
_reserveNative_2(uint112) := TMP_259(uint112)
asgn
7
7
Error with _reserveNative in function _update
Error with: _reserveNative in function _update
Finance type key: (0, -1)
[i]Type for _reserveNative

Name: _reserveNative Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
Copied _reserveNative
Source address: u
[i] TMP_255 cleared
[i] TMP_256 cleared
[i] TMP_257 cleared
[i] TMP_258 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveNative_1, name: reserveNative

Name: reserveNative Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: timeElapsed_1, name: timeElapsed

Name: timeElapsed Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: reserveForeign_1, name: reserveForeign

Name: reserveForeign Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: priceForeignCumulativeLast_1, name: priceForeignCumulativeLast

Name: priceForeignCumulativeLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: reserveNative_1, name: reserveNative

Name: reserveNative Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: priceForeignCumulativeLast_1, name: priceForeignCumulativeLast

Name: priceForeignCumulativeLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: timeElapsed_1, name: timeElapsed

Name: timeElapsed Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: reserveForeign_1, name: reserveForeign

Name: reserveForeign Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: priceForeignCumulativeLast_2, name: priceForeignCumulativeLast

Name: priceForeignCumulativeLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_255(uint224) = LIBRARY_CALL, dest:UQ112x112, function:UQ112x112.encode(uint112), arguments:['reserveNative_1'] 
Found: None
Written func info: UQ112x112, encode
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
reserveNative
hers norm: u
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
reserveNative
hers norm: u
([-1], [-1, -1], 'u', "'u'", 'u', -1)
[i]Type for TMP_255

Name: TMP_255 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
TMP_256(uint224) = LIBRARY_CALL, dest:UQ112x112, function:UQ112x112.uqdiv(uint224,uint112), arguments:['TMP_255', 'reserveForeign_1'] 
Found: None
Written func info: UQ112x112, uqdiv
Retvar: ('t', ['1'], ['2'], 1, "'u'", 'u')
TMP_255
reserveForeign
hers norm: u
Retvar: ('t', ['1'], ['2'], 1, "'u'", 'u')
TMP_255
reserveForeign
hers norm: u
([-1, -1], [-1, -1], 'u', "'u'", 'u', -1)
[i]Type for TMP_256

Name: TMP_256 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
TMP_257 = CONVERT TMP_256 to uint256
Converting TMP_256

Name: TMP_256 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_257

Name: TMP_257 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
TMP_258(uint256) = TMP_257 (c)* timeElapsed_1
lnorm: u rnorm: u
Source address: u
[i]Type for TMP_258

Name: TMP_258 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
priceForeignCumulativeLast_2(uint256) = priceForeignCumulativeLast_1 (c)+ TMP_258
Source address: u
[i]Type for priceForeignCumulativeLast

Name: priceForeignCumulativeLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Copied priceForeignCumulativeLast
Source address: u
[i] TMP_260 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: balanceForeign_1, name: balanceForeign

Name: balanceForeign Function: _update
Num: 8
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: balanceForeign_1, name: balanceForeign

Name: balanceForeign Function: _update
Num: 8
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: _reserveForeign_2, name: _reserveForeign

Name: _reserveForeign Function: _update
Num: 6
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
TMP_260 = CONVERT balanceForeign_1 to uint112
Converting balanceForeign_1

Name: balanceForeign Function: _update
Num: 8
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Source address: u
[i]Type for TMP_260

Name: TMP_260 Function: _update
Num: 8
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
_reserveForeign_2(uint112) := TMP_260(uint112)
asgn
8
8
Error with _reserveForeign in function _update
Error with: _reserveForeign in function _update
Finance type key: (0, -1)
[i]Type for _reserveForeign

Name: _reserveForeign Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
Copied _reserveForeign
Source address: u
Propogating parameters and globals to SSA variables...
Ssa_name: blockTimestamp_1, name: blockTimestamp

Name: blockTimestamp Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: blockTimestamp, Num: 1
Globalname: blockTimestamp, contract_name: BasePool
Ssa_name: blockTimestamp_1, name: blockTimestamp

Name: blockTimestamp Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: blockTimestamp, Num: 1
Globalname: blockTimestamp, contract_name: BasePool
Ssa_name: _blockTimestampLast_3, name: _blockTimestampLast

Name: _blockTimestampLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
_blockTimestampLast_3(uint32) := blockTimestamp_1(uint32)
asgn
Finance type key: (-1, -1)
[i]Type for _blockTimestampLast

Name: _blockTimestampLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Copied _blockTimestampLast
Source address: u
Propogating parameters and globals to SSA variables...
Ssa_name: balanceNative_1, name: balanceNative

Name: balanceNative Function: _update
Num: 7
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: balanceForeign_1, name: balanceForeign

Name: balanceForeign Function: _update
Num: 8
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: balanceNative_1, name: balanceNative

Name: balanceNative Function: _update
Num: 7
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: balanceForeign_1, name: balanceForeign

Name: balanceForeign Function: _update
Num: 8
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
[i] balanceNative cleared
[i] balanceForeign cleared
[i] reserveNative cleared
[i] reserveForeign cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: balanceNative_1, name: balanceNative

Name: balanceNative Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: balanceNative_1 Function: _update
Num: 7
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
Ssa_name: balanceForeign_1, name: balanceForeign

Name: balanceForeign Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: balanceForeign_1 Function: _update
Num: 8
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
Ssa_name: reserveNative_1, name: reserveNative

Name: reserveNative Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: reserveNative_1 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: reserveForeign_1, name: reserveForeign

Name: reserveForeign Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: reserveForeign_1 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: priceNativeCumulativeLast_1, name: priceNativeCumulativeLast

Name: priceNativeCumulativeLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: priceForeignCumulativeLast_1, name: priceForeignCumulativeLast

Name: priceForeignCumulativeLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _blockTimestampLast_2, name: _blockTimestampLast

Name: _blockTimestampLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
balanceNative_1(uint256) := ϕ(['nativeBalance_2', 'balanceNative_1', 'nativeBalance_2'])
Phi
[i]Type for balanceNative

Name: balanceNative Function: _update
Num: 7
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
balanceForeign_1(uint256) := ϕ(['balanceForeign_1', 'foreignBalance_2', 'foreignBalance_2'])
Phi
[i]Type for balanceForeign

Name: balanceForeign Function: _update
Num: 8
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
reserveNative_1(uint112) := ϕ(['reserveNative_1', 'nativeReserve_1', 'reserveNative_1'])
Phi
[i]Type for reserveNative

Name: reserveNative Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
reserveForeign_1(uint112) := ϕ(['reserveForeign_1', 'foreignReserve_1', 'reserveForeign_1'])
Phi
[i]Type for reserveForeign

Name: reserveForeign Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
priceNativeCumulativeLast_1(uint256) := ϕ(['priceNativeCumulativeLast_0', 'priceNativeCumulativeLast_2'])
Phi
[i]Type for priceNativeCumulativeLast

Name: priceNativeCumulativeLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
priceForeignCumulativeLast_1(uint256) := ϕ(['priceForeignCumulativeLast_0', 'priceForeignCumulativeLast_2'])
Phi
[i]Type for priceForeignCumulativeLast

Name: priceForeignCumulativeLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_blockTimestampLast_2(uint32) := ϕ(['_blockTimestampLast_3', '_blockTimestampLast_0'])
Phi
[i]Type for _blockTimestampLast

Name: _blockTimestampLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_235 cleared
[i] TMP_236 cleared
[i] TMP_238 cleared
[i] TMP_239 cleared
[i] TMP_240 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: balanceNative_1, name: balanceNative

Name: balanceNative Function: _update
Num: 7
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: balanceForeign_1, name: balanceForeign

Name: balanceForeign Function: _update
Num: 8
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: balanceNative_1, name: balanceNative

Name: balanceNative Function: _update
Num: 7
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: balanceForeign_1, name: balanceForeign

Name: balanceForeign Function: _update
Num: 8
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
TMP_235(uint112) := 5192296858534827628530496329220095(uint112)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for TMP_235

Name: TMP_235 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 5192296858534827628530496329220095
Fields: 
Finance Type: undef
XXXX
TMP_236(bool) = balanceNative_1 <= TMP_235
lnorm: u rnorm: 0
[i]Type for TMP_236

Name: TMP_236 Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_238(uint112) := 5192296858534827628530496329220095(uint112)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for TMP_238

Name: TMP_238 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 5192296858534827628530496329220095
Fields: 
Finance Type: undef
XXXX
TMP_239(bool) = balanceForeign_1 <= TMP_238
lnorm: u rnorm: 0
[i]Type for TMP_239

Name: TMP_239 Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_240(bool) = TMP_236 && TMP_239
[i]Type for TMP_240

Name: TMP_240 Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_241(None) = SOLIDITY_CALL require(bool,string)(TMP_240,BasePool::_update: Balance Overflow)
[i]Type for TMP_241

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_242 cleared
[i] TMP_243 cleared
[i] TMP_244 cleared
[i] blockTimestamp cleared
Propogating parameters and globals to SSA variables...
Ssa_name: blockTimestamp_1, name: blockTimestamp

Name: blockTimestamp Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: blockTimestamp, Num: 1
Globalname: blockTimestamp, contract_name: BasePool
End popogation
TMP_242(uint256) = 2 (c)** 32
[i]Type for TMP_242

Name: TMP_242 Function: _update
Num: 
Den: 
Address: u
Norm: 32
LF: None
Value: 4294967296
Fields: 
Finance Type: undef
XXXX
TMP_243(uint256) = block.timestamp (c)% TMP_242
[i]Type for TMP_243

Name: TMP_243 Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_244 = CONVERT TMP_243 to uint32
Converting TMP_243

Name: TMP_243 Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_244

Name: TMP_244 Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
blockTimestamp_1(uint32) := TMP_244(uint32)
asgn
Finance type key: (-1, -1)
[i]Type for blockTimestamp

Name: blockTimestamp Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_245 cleared
[i] timeElapsed cleared
Propogating parameters and globals to SSA variables...
Ssa_name: blockTimestamp_1, name: blockTimestamp

Name: blockTimestamp Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: blockTimestamp, Num: 1
Globalname: blockTimestamp, contract_name: BasePool
Ssa_name: _blockTimestampLast_2, name: _blockTimestampLast

Name: _blockTimestampLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: blockTimestamp_1, name: blockTimestamp

Name: blockTimestamp Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: blockTimestamp, Num: 1
Globalname: blockTimestamp, contract_name: BasePool
Ssa_name: _blockTimestampLast_2, name: _blockTimestampLast

Name: _blockTimestampLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: timeElapsed_1, name: timeElapsed

Name: timeElapsed Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: timeElapsed, Num: 1
Globalname: timeElapsed, contract_name: BasePool
End popogation
TMP_245(uint32) = blockTimestamp_1 (c)- _blockTimestampLast_2
Source address: u
[i]Type for TMP_245

Name: TMP_245 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
timeElapsed_1(uint32) := TMP_245(uint32)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for timeElapsed

Name: timeElapsed Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_246 cleared
[i] TMP_247 cleared
[i] TMP_248 cleared
[i] TMP_249 cleared
[i] TMP_250 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveNative_1, name: reserveNative

Name: reserveNative Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: timeElapsed_1, name: timeElapsed

Name: timeElapsed Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: reserveForeign_1, name: reserveForeign

Name: reserveForeign Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: reserveNative_1, name: reserveNative

Name: reserveNative Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: timeElapsed_1, name: timeElapsed

Name: timeElapsed Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: reserveForeign_1, name: reserveForeign

Name: reserveForeign Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_246(bool) = timeElapsed_1 > 0
lnorm: u rnorm: 0
[i]Type for TMP_246

Name: TMP_246 Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_247(bool) = reserveNative_1 != 0
[i]Type for TMP_247

Name: TMP_247 Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_248(bool) = TMP_246 && TMP_247
[i]Type for TMP_248

Name: TMP_248 Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_249(bool) = reserveForeign_1 != 0
[i]Type for TMP_249

Name: TMP_249 Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_250(bool) = TMP_248 && TMP_249
[i]Type for TMP_250

Name: TMP_250 Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_251 cleared
[i] TMP_252 cleared
[i] TMP_253 cleared
[i] TMP_254 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveNative_1, name: reserveNative

Name: reserveNative Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: timeElapsed_1, name: timeElapsed

Name: timeElapsed Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: reserveForeign_1, name: reserveForeign

Name: reserveForeign Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: priceNativeCumulativeLast_1, name: priceNativeCumulativeLast

Name: priceNativeCumulativeLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: reserveNative_1, name: reserveNative

Name: reserveNative Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: timeElapsed_1, name: timeElapsed

Name: timeElapsed Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: priceNativeCumulativeLast_1, name: priceNativeCumulativeLast

Name: priceNativeCumulativeLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: reserveForeign_1, name: reserveForeign

Name: reserveForeign Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: priceNativeCumulativeLast_2, name: priceNativeCumulativeLast

Name: priceNativeCumulativeLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_251(uint224) = LIBRARY_CALL, dest:UQ112x112, function:UQ112x112.encode(uint112), arguments:['reserveForeign_1'] 
Found: None
Written func info: UQ112x112, encode
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
reserveForeign
hers norm: u
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
reserveForeign
hers norm: u
([-1], [-1, -1], 'u', "'u'", 'u', -1)
[i]Type for TMP_251

Name: TMP_251 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
TMP_252(uint224) = LIBRARY_CALL, dest:UQ112x112, function:UQ112x112.uqdiv(uint224,uint112), arguments:['TMP_251', 'reserveNative_1'] 
Found: None
Written func info: UQ112x112, uqdiv
Retvar: ('t', ['1'], ['2'], 1, "'u'", 'u')
TMP_251
reserveNative
hers norm: u
Retvar: ('t', ['1'], ['2'], 1, "'u'", 'u')
TMP_251
reserveNative
hers norm: u
([-1, -1], [-1, -1], 'u', "'u'", 'u', -1)
[i]Type for TMP_252

Name: TMP_252 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
TMP_253 = CONVERT TMP_252 to uint256
Converting TMP_252

Name: TMP_252 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_253

Name: TMP_253 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
TMP_254(uint256) = TMP_253 (c)* timeElapsed_1
lnorm: u rnorm: u
Source address: u
[i]Type for TMP_254

Name: TMP_254 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
priceNativeCumulativeLast_2(uint256) = priceNativeCumulativeLast_1 (c)+ TMP_254
Source address: u
[i]Type for priceNativeCumulativeLast

Name: priceNativeCumulativeLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Copied priceNativeCumulativeLast
Source address: u
[i] TMP_259 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: balanceNative_1, name: balanceNative

Name: balanceNative Function: _update
Num: 7
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: balanceNative_1, name: balanceNative

Name: balanceNative Function: _update
Num: 7
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: _reserveNative_2, name: _reserveNative

Name: _reserveNative Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
TMP_259 = CONVERT balanceNative_1 to uint112
Converting balanceNative_1

Name: balanceNative Function: _update
Num: 7
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Source address: u
[i]Type for TMP_259

Name: TMP_259 Function: _update
Num: 7
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
_reserveNative_2(uint112) := TMP_259(uint112)
asgn
Source address: u
Finance type key: (0, -1)
[i]Type for _reserveNative

Name: _reserveNative Function: _update
Num: 7
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
Copied _reserveNative
Source address: u
[i] TMP_255 cleared
[i] TMP_256 cleared
[i] TMP_257 cleared
[i] TMP_258 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveNative_1, name: reserveNative

Name: reserveNative Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: timeElapsed_1, name: timeElapsed

Name: timeElapsed Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: reserveForeign_1, name: reserveForeign

Name: reserveForeign Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: priceForeignCumulativeLast_1, name: priceForeignCumulativeLast

Name: priceForeignCumulativeLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: reserveNative_1, name: reserveNative

Name: reserveNative Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: priceForeignCumulativeLast_1, name: priceForeignCumulativeLast

Name: priceForeignCumulativeLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: timeElapsed_1, name: timeElapsed

Name: timeElapsed Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: reserveForeign_1, name: reserveForeign

Name: reserveForeign Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: priceForeignCumulativeLast_2, name: priceForeignCumulativeLast

Name: priceForeignCumulativeLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_255(uint224) = LIBRARY_CALL, dest:UQ112x112, function:UQ112x112.encode(uint112), arguments:['reserveNative_1'] 
Found: None
Written func info: UQ112x112, encode
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
reserveNative
hers norm: u
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
reserveNative
hers norm: u
([-1], [-1, -1], 'u', "'u'", 'u', -1)
[i]Type for TMP_255

Name: TMP_255 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
TMP_256(uint224) = LIBRARY_CALL, dest:UQ112x112, function:UQ112x112.uqdiv(uint224,uint112), arguments:['TMP_255', 'reserveForeign_1'] 
Found: None
Written func info: UQ112x112, uqdiv
Retvar: ('t', ['1'], ['2'], 1, "'u'", 'u')
TMP_255
reserveForeign
hers norm: u
Retvar: ('t', ['1'], ['2'], 1, "'u'", 'u')
TMP_255
reserveForeign
hers norm: u
([-1, -1], [-1, -1], 'u', "'u'", 'u', -1)
[i]Type for TMP_256

Name: TMP_256 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
TMP_257 = CONVERT TMP_256 to uint256
Converting TMP_256

Name: TMP_256 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_257

Name: TMP_257 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
TMP_258(uint256) = TMP_257 (c)* timeElapsed_1
lnorm: u rnorm: u
Source address: u
[i]Type for TMP_258

Name: TMP_258 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
priceForeignCumulativeLast_2(uint256) = priceForeignCumulativeLast_1 (c)+ TMP_258
Source address: u
[i]Type for priceForeignCumulativeLast

Name: priceForeignCumulativeLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Copied priceForeignCumulativeLast
Source address: u
[i] TMP_260 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: balanceForeign_1, name: balanceForeign

Name: balanceForeign Function: _update
Num: 8
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: balanceForeign_1, name: balanceForeign

Name: balanceForeign Function: _update
Num: 8
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: _reserveForeign_2, name: _reserveForeign

Name: _reserveForeign Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
TMP_260 = CONVERT balanceForeign_1 to uint112
Converting balanceForeign_1

Name: balanceForeign Function: _update
Num: 8
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Source address: u
[i]Type for TMP_260

Name: TMP_260 Function: _update
Num: 8
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
_reserveForeign_2(uint112) := TMP_260(uint112)
asgn
Source address: u
Finance type key: (0, -1)
[i]Type for _reserveForeign

Name: _reserveForeign Function: _update
Num: 8
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
Copied _reserveForeign
Source address: u
Propogating parameters and globals to SSA variables...
Ssa_name: blockTimestamp_1, name: blockTimestamp

Name: blockTimestamp Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: blockTimestamp, Num: 1
Globalname: blockTimestamp, contract_name: BasePool
Ssa_name: blockTimestamp_1, name: blockTimestamp

Name: blockTimestamp Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: blockTimestamp, Num: 1
Globalname: blockTimestamp, contract_name: BasePool
Ssa_name: _blockTimestampLast_3, name: _blockTimestampLast

Name: _blockTimestampLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
_blockTimestampLast_3(uint32) := blockTimestamp_1(uint32)
asgn
Finance type key: (-1, -1)
[i]Type for _blockTimestampLast

Name: _blockTimestampLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Copied _blockTimestampLast
Source address: u
Propogating parameters and globals to SSA variables...
Ssa_name: balanceNative_1, name: balanceNative

Name: balanceNative Function: _update
Num: 7
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: balanceForeign_1, name: balanceForeign

Name: balanceForeign Function: _update
Num: 8
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: balanceNative_1, name: balanceNative

Name: balanceNative Function: _update
Num: 7
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: balanceForeign_1, name: balanceForeign

Name: balanceForeign Function: _update
Num: 8
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
Propogating parameters and globals to SSA variables...
Ssa_name: foreignAmountOut_2, name: foreignAmountOut

Name: foreignAmountOut Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: foreignAmountOut, Num: 2
Globalname: foreignAmountOut, contract_name: BasePool
Ssa_name: nativeAmountOut_2, name: nativeAmountOut

Name: nativeAmountOut Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: nativeAmountOut, Num: 2
Globalname: nativeAmountOut, contract_name: BasePool
Ssa_name: foreignAmountIn_1, name: foreignAmountIn

Name: foreignAmountIn_1 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeAmountIn_1, name: nativeAmountIn

Name: nativeAmountIn_1 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: swap
Num: 
Den: 
Address: -999
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: foreignAmountOut_2, name: foreignAmountOut

Name: foreignAmountOut Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: foreignAmountOut, Num: 2
Globalname: foreignAmountOut, contract_name: BasePool
Ssa_name: nativeAmountOut_2, name: nativeAmountOut

Name: nativeAmountOut Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: nativeAmountOut, Num: 2
Globalname: nativeAmountOut, contract_name: BasePool
Ssa_name: foreignAmountIn_1, name: foreignAmountIn

Name: foreignAmountIn_1 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeAmountIn_1, name: nativeAmountIn

Name: nativeAmountIn_1 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: swap
Num: 
Den: 
Address: -999
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
End popogation
Propogating parameters and globals to SSA variables...
Ssa_name: nativeAmountOut_2, name: nativeAmountOut

Name: nativeAmountOut Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: nativeAmountOut, Num: 2
Globalname: nativeAmountOut, contract_name: BasePool
Ssa_name: nativeAmountOut_2, name: nativeAmountOut

Name: nativeAmountOut Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: nativeAmountOut, Num: 2
Globalname: nativeAmountOut, contract_name: BasePool
End popogation
RETURN nativeAmountOut_2
RETURN

Name: nativeAmountOut Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] nativeAmountIn cleared
[i] foreignAmountIn cleared
[i] to cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: nativeAmountIn_1, name: nativeAmountIn

Name: nativeAmountIn_1 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: nativeAmountIn_1 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: nativeAmountIn, Num: 1
Globalname: nativeAmountIn, contract_name: BasePool
Ssa_name: foreignAmountIn_1, name: foreignAmountIn

Name: foreignAmountIn_1 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: foreignAmountIn_1 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: foreignAmountIn, Num: 1
Globalname: foreignAmountIn, contract_name: BasePool
Ssa_name: to_1, name: to

Name: to Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: to
Value: u
Fields: 
Finance Type: undef
Source address: -999

Name: to_1 Function: swap
Num: 
Den: 
Address: -999
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: nativeAsset_10, name: nativeAsset

Name: nativeAsset Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: foreignAsset_11, name: foreignAsset

Name: foreignAsset Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
nativeAmountIn_1(uint256) := ϕ(['nativeAmountIn_1'])
Phi

Name: nativeAmountIn_1 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for nativeAmountIn

Name: nativeAmountIn Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
foreignAmountIn_1(uint256) := ϕ(['foreignAmountIn_1'])
Phi

Name: foreignAmountIn_1 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for foreignAmountIn

Name: foreignAmountIn Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
to_1(address) := ϕ(['to_1'])
Phi
[i]Type for to

Name: to Function: swap
Num: 
Den: 
Address: -999
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
XXXX
nativeAsset_10(IERC20) := ϕ(['nativeAsset_13', 'nativeAsset_9', 'nativeAsset_1', 'nativeAsset_0', 'nativeAsset_5'])
Phi
[i]Type for nativeAsset

Name: nativeAsset Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
foreignAsset_11(IERC20) := ϕ(['foreignAsset_0', 'foreignAsset_14', 'foreignAsset_1', 'foreignAsset_10', 'foreignAsset_6'])
Phi
[i]Type for foreignAsset

Name: foreignAsset Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, ReentrancyGuard.nonReentrant()()
New param cache []
Old param cache: []
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, GasThrottle.validateGas()()
New param cache []
Old param cache: []
[i] TMP_185 cleared
[i] TMP_186 cleared
[i] TMP_187 cleared
[i] TMP_188 cleared
[i] TMP_189 cleared
[i] TMP_190 cleared
[i] TMP_191 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: foreignAmountIn_1, name: foreignAmountIn

Name: foreignAmountIn Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: foreignAmountIn_1 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: foreignAmountIn, Num: 1
Globalname: foreignAmountIn, contract_name: BasePool
Ssa_name: nativeAmountIn_1, name: nativeAmountIn

Name: nativeAmountIn Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: nativeAmountIn_1 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: nativeAmountIn, Num: 1
Globalname: nativeAmountIn, contract_name: BasePool
Ssa_name: foreignAmountIn_1, name: foreignAmountIn

Name: foreignAmountIn_1 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: foreignAmountIn_1 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: foreignAmountIn, Num: 1
Globalname: foreignAmountIn, contract_name: BasePool
Ssa_name: nativeAmountIn_1, name: nativeAmountIn

Name: nativeAmountIn_1 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: nativeAmountIn_1 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: nativeAmountIn, Num: 1
Globalname: nativeAmountIn, contract_name: BasePool
End popogation
TMP_185(bool) = nativeAmountIn_1 > 0
lnorm: u rnorm: 0
Source address: u
Source address: u
[i]Type for TMP_185

Name: TMP_185 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_186(bool) = foreignAmountIn_1 == 0
[i]Type for TMP_186

Name: TMP_186 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_187(bool) = TMP_185 && TMP_186
[i]Type for TMP_187

Name: TMP_187 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_188(bool) = nativeAmountIn_1 == 0
[i]Type for TMP_188

Name: TMP_188 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_189(bool) = foreignAmountIn_1 > 0
lnorm: u rnorm: 0
Source address: u
Source address: u
[i]Type for TMP_189

Name: TMP_189 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_190(bool) = TMP_188 && TMP_189
[i]Type for TMP_190

Name: TMP_190 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_191(bool) = TMP_187 || TMP_190
[i]Type for TMP_191

Name: TMP_191 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_192(None) = SOLIDITY_CALL require(bool,string)(TMP_191,BasePool::swap: Only One-Sided Swaps Supported)
[i]Type for TMP_192

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] nativeReserve cleared
[i] foreignReserve cleared
Propogating parameters and globals to SSA variables...
Ssa_name: nativeReserve_1, name: nativeReserve

Name: nativeReserve Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: nativeReserve, Num: 1
Globalname: nativeReserve, contract_name: BasePool
Ssa_name: foreignReserve_1, name: foreignReserve

Name: foreignReserve Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: foreignReserve, Num: 1
Globalname: foreignReserve, contract_name: BasePool
End popogation
TUPLE_2(uint112,uint112,uint32) = INTERNAL_CALL, BasePool.getReserves()()
New param cache []
Old param cache: []
[i]Type for TUPLE_2

Name: TUPLE_2 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
nativeReserve_1(uint112)= UNPACK TUPLE_2 index: 0 
([-1], [-1], 'u', 'u', 'u', -1)
[i]Type for nativeReserve

Name: nativeReserve Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
foreignReserve_1(uint112)= UNPACK TUPLE_2 index: 1 
([-1], [-1], 'u', 'u', 'u', -1)
[i]Type for foreignReserve

Name: foreignReserve Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] _nativeAsset cleared
Propogating parameters and globals to SSA variables...
Ssa_name: nativeAsset_13, name: nativeAsset

Name: nativeAsset Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeAsset_13, name: nativeAsset

Name: nativeAsset Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _nativeAsset_1, name: _nativeAsset

Name: _nativeAsset Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _nativeAsset, Num: 1
Globalname: _nativeAsset, contract_name: BasePool
End popogation
_nativeAsset_1(IERC20) := nativeAsset_13(IERC20)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for _nativeAsset

Name: _nativeAsset Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] _foreignAsset cleared
Propogating parameters and globals to SSA variables...
Ssa_name: foreignAsset_14, name: foreignAsset

Name: foreignAsset Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: foreignAsset_14, name: foreignAsset

Name: foreignAsset Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _foreignAsset_1, name: _foreignAsset

Name: _foreignAsset Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _foreignAsset, Num: 1
Globalname: _foreignAsset, contract_name: BasePool
End popogation
_foreignAsset_1(IERC20) := foreignAsset_14(IERC20)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for _foreignAsset

Name: _foreignAsset Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_193 cleared
[i] TMP_194 cleared
[i] nativeBalance cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _nativeAsset_1, name: _nativeAsset

Name: _nativeAsset Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _nativeAsset_1, name: _nativeAsset

Name: _nativeAsset Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeBalance_1, name: nativeBalance

Name: nativeBalance Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: nativeBalance, Num: 1
Globalname: nativeBalance, contract_name: BasePool
End popogation
TMP_193 = CONVERT this to address
Converting this
4
[i]Type for TMP_193

Name: TMP_193 Function: swap
Num: 
Den: 
Address: 4
Norm: u
LF: BasePool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_194(uint256) = HIGH_LEVEL_CALL, dest:_nativeAsset_1(IERC20), function:balanceOf, arguments:['TMP_193']  
High Call: balanceOf
Running querryfc
Found: None
Written func info: IERC20, balanceOf
Handling balance function!
u
prev address? u
[i]Type for TMP_194

Name: TMP_194 Function: swap
Num: 7
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
nativeBalance_1(uint256) := TMP_194(uint256)
asgn
Source address: u
Finance type key: (0, -1)
[i]Type for nativeBalance

Name: nativeBalance Function: swap
Num: 7
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
[i] TMP_195 cleared
[i] TMP_196 cleared
[i] foreignBalance cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _foreignAsset_1, name: _foreignAsset

Name: _foreignAsset Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _foreignAsset_1, name: _foreignAsset

Name: _foreignAsset Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: foreignBalance_1, name: foreignBalance

Name: foreignBalance Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: foreignBalance, Num: 1
Globalname: foreignBalance, contract_name: BasePool
End popogation
TMP_195 = CONVERT this to address
Converting this
4
[i]Type for TMP_195

Name: TMP_195 Function: swap
Num: 
Den: 
Address: 4
Norm: u
LF: BasePool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_196(uint256) = HIGH_LEVEL_CALL, dest:_foreignAsset_1(IERC20), function:balanceOf, arguments:['TMP_195']  
High Call: balanceOf
Running querryfc
Found: None
Written func info: IERC20, balanceOf
Handling balance function!
u
prev address? u
[i]Type for TMP_196

Name: TMP_196 Function: swap
Num: 8
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
foreignBalance_1(uint256) := TMP_196(uint256)
asgn
Source address: u
Finance type key: (0, -1)
[i]Type for foreignBalance

Name: foreignBalance Function: swap
Num: 8
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
[i] TMP_197 cleared
[i] TMP_198 cleared
[i] TMP_199 cleared
[i] TMP_200 cleared
[i] TMP_201 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _foreignAsset_1, name: _foreignAsset

Name: _foreignAsset Function: swap
Num: -1
Den: -1
Address: 8
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: swap
Num: 
Den: 
Address: -999
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: _nativeAsset_1, name: _nativeAsset

Name: _nativeAsset Function: swap
Num: -1
Den: -1
Address: 7
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _foreignAsset_1, name: _foreignAsset

Name: _foreignAsset Function: swap
Num: -1
Den: -1
Address: 8
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: swap
Num: 
Den: 
Address: -999
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: _nativeAsset_1, name: _nativeAsset

Name: _nativeAsset Function: swap
Num: -1
Den: -1
Address: 7
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_197 = CONVERT _nativeAsset_1 to address
Converting _nativeAsset_1

Name: _nativeAsset Function: swap
Num: -1
Den: -1
Address: 7
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: 7
[i]Type for TMP_197

Name: TMP_197 Function: swap
Num: -1
Den: -1
Address: 7
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_198(bool) = to_1 != TMP_197
[i]Type for TMP_198

Name: TMP_198 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_199 = CONVERT _foreignAsset_1 to address
Converting _foreignAsset_1

Name: _foreignAsset Function: swap
Num: -1
Den: -1
Address: 8
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: 8
[i]Type for TMP_199

Name: TMP_199 Function: swap
Num: -1
Den: -1
Address: 8
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_200(bool) = to_1 != TMP_199
[i]Type for TMP_200

Name: TMP_200 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_201(bool) = TMP_198 && TMP_200
[i]Type for TMP_201

Name: TMP_201 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_202(None) = SOLIDITY_CALL require(bool,string)(TMP_201,BasePool::swap: Invalid Receiver)
[i]Type for TMP_202

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_203 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: foreignAmountIn_1, name: foreignAmountIn

Name: foreignAmountIn_1 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: foreignAmountIn_1, name: foreignAmountIn

Name: foreignAmountIn_1 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_203(bool) = foreignAmountIn_1 > 0
lnorm: u rnorm: 0
[i]Type for TMP_203

Name: TMP_203 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_215 cleared
[i] TMP_216 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: nativeAmountIn_1, name: nativeAmountIn

Name: nativeAmountIn_1 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeReserve_1, name: nativeReserve

Name: nativeReserve Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeBalance_1, name: nativeBalance

Name: nativeBalance Function: swap
Num: 7
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: nativeAmountIn_1, name: nativeAmountIn

Name: nativeAmountIn_1 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeReserve_1, name: nativeReserve

Name: nativeReserve Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeBalance_1, name: nativeBalance

Name: nativeBalance Function: swap
Num: 7
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
TMP_215(uint256) = nativeBalance_1 (c)- nativeReserve_1
Source address: u
[i]Type for TMP_215

Name: TMP_215 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
TMP_216(bool) = nativeAmountIn_1 <= TMP_215
lnorm: u rnorm: u
[i]Type for TMP_216

Name: TMP_216 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_217(None) = SOLIDITY_CALL require(bool,string)(TMP_216,BasePool::swap: Insufficient Tokens Provided)
[i]Type for TMP_217

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_218 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: nativeAmountIn_1, name: nativeAmountIn

Name: nativeAmountIn_1 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeReserve_1, name: nativeReserve

Name: nativeReserve Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeAmountIn_1, name: nativeAmountIn

Name: nativeAmountIn_1 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeReserve_1, name: nativeReserve

Name: nativeReserve Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_218(bool) = nativeAmountIn_1 <= nativeReserve_1
lnorm: u rnorm: u
[i]Type for TMP_218

Name: TMP_218 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_219(None) = SOLIDITY_CALL require(bool,string)(TMP_218,BasePool::swap: Unfavourable Trade)
[i]Type for TMP_219

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_204 cleared
[i] TMP_205 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: foreignAmountIn_1, name: foreignAmountIn

Name: foreignAmountIn_1 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: foreignReserve_1, name: foreignReserve

Name: foreignReserve Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: foreignBalance_1, name: foreignBalance

Name: foreignBalance Function: swap
Num: 8
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: foreignAmountIn_1, name: foreignAmountIn

Name: foreignAmountIn_1 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: foreignReserve_1, name: foreignReserve

Name: foreignReserve Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: foreignBalance_1, name: foreignBalance

Name: foreignBalance Function: swap
Num: 8
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
TMP_204(uint256) = foreignBalance_1 (c)- foreignReserve_1
Source address: u
[i]Type for TMP_204

Name: TMP_204 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
TMP_205(bool) = foreignAmountIn_1 <= TMP_204
lnorm: u rnorm: u
[i]Type for TMP_205

Name: TMP_205 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_206(None) = SOLIDITY_CALL require(bool,string)(TMP_205,BasePool::swap: Insufficient Tokens Provided)
[i]Type for TMP_206

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_207 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: foreignAmountIn_1, name: foreignAmountIn

Name: foreignAmountIn_1 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: foreignReserve_1, name: foreignReserve

Name: foreignReserve Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: foreignAmountIn_1, name: foreignAmountIn

Name: foreignAmountIn_1 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: foreignReserve_1, name: foreignReserve

Name: foreignReserve Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_207(bool) = foreignAmountIn_1 <= foreignReserve_1
lnorm: u rnorm: u
[i]Type for TMP_207

Name: TMP_207 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_208(None) = SOLIDITY_CALL require(bool,string)(TMP_207,BasePool::swap: Unfavourable Trade)
[i]Type for TMP_208

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_209 cleared
[i] nativeAmountOut cleared
Propogating parameters and globals to SSA variables...
Ssa_name: foreignAmountIn_1, name: foreignAmountIn

Name: foreignAmountIn_1 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeReserve_1, name: nativeReserve

Name: nativeReserve Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: foreignReserve_1, name: foreignReserve

Name: foreignReserve Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: foreignAmountIn_1, name: foreignAmountIn

Name: foreignAmountIn_1 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeReserve_1, name: nativeReserve

Name: nativeReserve Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: foreignReserve_1, name: foreignReserve

Name: foreignReserve Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeAmountOut_1, name: nativeAmountOut

Name: nativeAmountOut Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: nativeAmountOut, Num: 1
Globalname: nativeAmountOut, contract_name: BasePool
End popogation
TMP_209(uint256) = LIBRARY_CALL, dest:VaderMath, function:VaderMath.calculateSwap(uint256,uint256,uint256), arguments:['foreignAmountIn_1', 'foreignReserve_1', 'nativeReserve_1'] 
Found: calculateSwap

Name: foreignAmountIn_1 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: foreignReserve Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: nativeReserve Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
High level cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
New param cache [[[-1], [-1], 'u', None, [], -1, 'u', 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 'u', None, [], -1, 'u'], [[-1], [-1], 'u', None, [], -1, 'u'], [[-1], [-1], 'u', None, [], -1, 'u']]
[i]Type for TMP_209

Name: TMP_209 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
nativeAmountOut_1(uint256) := TMP_209(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for nativeAmountOut

Name: nativeAmountOut Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_220 cleared
[i] foreignAmountOut cleared
Propogating parameters and globals to SSA variables...
Ssa_name: nativeAmountIn_1, name: nativeAmountIn

Name: nativeAmountIn_1 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeReserve_1, name: nativeReserve

Name: nativeReserve Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: foreignReserve_1, name: foreignReserve

Name: foreignReserve Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeAmountIn_1, name: nativeAmountIn

Name: nativeAmountIn_1 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeReserve_1, name: nativeReserve

Name: nativeReserve Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: foreignReserve_1, name: foreignReserve

Name: foreignReserve Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: foreignAmountOut_1, name: foreignAmountOut

Name: foreignAmountOut Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: foreignAmountOut, Num: 1
Globalname: foreignAmountOut, contract_name: BasePool
End popogation
TMP_220(uint256) = LIBRARY_CALL, dest:VaderMath, function:VaderMath.calculateSwap(uint256,uint256,uint256), arguments:['nativeAmountIn_1', 'nativeReserve_1', 'foreignReserve_1'] 
Found: calculateSwap

Name: nativeAmountIn_1 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: nativeReserve Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: foreignReserve Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
High level cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
New param cache [[[-1], [-1], 'u', None, [], -1, 'u', 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 'u', None, [], -1, 'u'], [[-1], [-1], 'u', None, [], -1, 'u'], [[-1], [-1], 'u', None, [], -1, 'u']]
[i]Type for TMP_220

Name: TMP_220 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
foreignAmountOut_1(uint256) := TMP_220(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for foreignAmountOut

Name: foreignAmountOut Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_210 cleared
[i] TMP_211 cleared
[i] TMP_212 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: nativeAmountOut_1, name: nativeAmountOut

Name: nativeAmountOut Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: nativeAmountOut, Num: 1
Globalname: nativeAmountOut, contract_name: BasePool
Ssa_name: nativeReserve_1, name: nativeReserve

Name: nativeReserve Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeAmountOut_1, name: nativeAmountOut

Name: nativeAmountOut Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: nativeAmountOut, Num: 1
Globalname: nativeAmountOut, contract_name: BasePool
Ssa_name: nativeReserve_1, name: nativeReserve

Name: nativeReserve Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_210(bool) = nativeAmountOut_1 > 0
lnorm: u rnorm: 0
Source address: u
Source address: u
[i]Type for TMP_210

Name: TMP_210 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_211(bool) = nativeAmountOut_1 <= nativeReserve_1
lnorm: u rnorm: u
[i]Type for TMP_211

Name: TMP_211 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_212(bool) = TMP_210 && TMP_211
[i]Type for TMP_212

Name: TMP_212 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_213(None) = SOLIDITY_CALL require(bool,string)(TMP_212,BasePool::swap: Swap Impossible)
[i]Type for TMP_213

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_221 cleared
[i] TMP_222 cleared
[i] TMP_223 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: foreignAmountOut_1, name: foreignAmountOut

Name: foreignAmountOut Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: foreignAmountOut, Num: 1
Globalname: foreignAmountOut, contract_name: BasePool
Ssa_name: foreignReserve_1, name: foreignReserve

Name: foreignReserve Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: foreignAmountOut_1, name: foreignAmountOut

Name: foreignAmountOut Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: foreignAmountOut, Num: 1
Globalname: foreignAmountOut, contract_name: BasePool
Ssa_name: foreignReserve_1, name: foreignReserve

Name: foreignReserve Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_221(bool) = foreignAmountOut_1 > 0
lnorm: u rnorm: 0
Source address: u
Source address: u
[i]Type for TMP_221

Name: TMP_221 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_222(bool) = foreignAmountOut_1 <= foreignReserve_1
lnorm: u rnorm: u
[i]Type for TMP_222

Name: TMP_222 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_223(bool) = TMP_221 && TMP_222
[i]Type for TMP_223

Name: TMP_223 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_224(None) = SOLIDITY_CALL require(bool,string)(TMP_223,BasePool::swap: Swap Impossible)
[i]Type for TMP_224

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: nativeAmountOut_1, name: nativeAmountOut

Name: nativeAmountOut Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: swap
Num: 
Den: 
Address: -999
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: _nativeAsset_1, name: _nativeAsset

Name: _nativeAsset Function: swap
Num: -1
Den: -1
Address: 7
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeAmountOut_1, name: nativeAmountOut

Name: nativeAmountOut Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: swap
Num: 
Den: 
Address: -999
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: _nativeAsset_1, name: _nativeAsset

Name: _nativeAsset Function: swap
Num: -1
Den: -1
Address: 7
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
LIBRARY_CALL, dest:SafeERC20, function:SafeERC20.safeTransfer(IERC20,address,uint256), arguments:['_nativeAsset_1', 'to_1', 'nativeAmountOut_1'] 
[i] nativeAmountOut cleared
[i] foreignAmountOut cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: nativeAmountOut_2, name: nativeAmountOut

Name: nativeAmountOut Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: nativeAmountOut, Num: 2
Globalname: nativeAmountOut, contract_name: BasePool
Ssa_name: foreignAmountOut_2, name: foreignAmountOut

Name: foreignAmountOut Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: foreignAmountOut, Num: 2
Globalname: foreignAmountOut, contract_name: BasePool
nativeAmountOut_2(uint256) := ϕ(['nativeAmountOut_0', 'nativeAmountOut_1'])
Phi

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: nativeAmountOut Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for nativeAmountOut

Name: nativeAmountOut Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
foreignAmountOut_2(uint256) := ϕ(['foreignAmountOut_0', 'foreignAmountOut_1'])
Phi

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: foreignAmountOut Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for foreignAmountOut

Name: foreignAmountOut Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: foreignAmountOut_1, name: foreignAmountOut

Name: foreignAmountOut Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _foreignAsset_1, name: _foreignAsset

Name: _foreignAsset Function: swap
Num: -1
Den: -1
Address: 8
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: swap
Num: 
Den: 
Address: -999
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: foreignAmountOut_1, name: foreignAmountOut

Name: foreignAmountOut Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _foreignAsset_1, name: _foreignAsset

Name: _foreignAsset Function: swap
Num: -1
Den: -1
Address: 8
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: swap
Num: 
Den: 
Address: -999
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
End popogation
LIBRARY_CALL, dest:SafeERC20, function:SafeERC20.safeTransfer(IERC20,address,uint256), arguments:['_foreignAsset_1', 'to_1', 'foreignAmountOut_1'] 
[i] TMP_226 cleared
[i] TMP_227 cleared
[i] nativeBalance cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _nativeAsset_1, name: _nativeAsset

Name: _nativeAsset Function: swap
Num: -1
Den: -1
Address: 7
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _nativeAsset_1, name: _nativeAsset

Name: _nativeAsset Function: swap
Num: -1
Den: -1
Address: 7
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeBalance_2, name: nativeBalance

Name: nativeBalance Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: nativeBalance, Num: 2
Globalname: nativeBalance, contract_name: BasePool
End popogation
TMP_226 = CONVERT this to address
Converting this
4
[i]Type for TMP_226

Name: TMP_226 Function: swap
Num: 
Den: 
Address: 4
Norm: u
LF: BasePool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_227(uint256) = HIGH_LEVEL_CALL, dest:_nativeAsset_1(IERC20), function:balanceOf, arguments:['TMP_226']  
High Call: balanceOf
Running querryfc
Found: None
Written func info: IERC20, balanceOf
Handling balance function!
7
[i]Type for TMP_227

Name: TMP_227 Function: swap
Num: 7
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
nativeBalance_2(uint256) := TMP_227(uint256)
asgn
Source address: u
Finance type key: (0, -1)
[i]Type for nativeBalance

Name: nativeBalance Function: swap
Num: 7
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
[i] TMP_228 cleared
[i] TMP_229 cleared
[i] foreignBalance cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _foreignAsset_1, name: _foreignAsset

Name: _foreignAsset Function: swap
Num: -1
Den: -1
Address: 8
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _foreignAsset_1, name: _foreignAsset

Name: _foreignAsset Function: swap
Num: -1
Den: -1
Address: 8
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: foreignBalance_2, name: foreignBalance

Name: foreignBalance Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: foreignBalance, Num: 2
Globalname: foreignBalance, contract_name: BasePool
End popogation
TMP_228 = CONVERT this to address
Converting this
4
[i]Type for TMP_228

Name: TMP_228 Function: swap
Num: 
Den: 
Address: 4
Norm: u
LF: BasePool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_229(uint256) = HIGH_LEVEL_CALL, dest:_foreignAsset_1(IERC20), function:balanceOf, arguments:['TMP_228']  
High Call: balanceOf
Running querryfc
Found: None
Written func info: IERC20, balanceOf
Handling balance function!
8
[i]Type for TMP_229

Name: TMP_229 Function: swap
Num: 8
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
foreignBalance_2(uint256) := TMP_229(uint256)
asgn
Source address: u
Finance type key: (0, -1)
[i]Type for foreignBalance

Name: foreignBalance Function: swap
Num: 8
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: nativeReserve_1, name: nativeReserve

Name: nativeReserve Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: foreignReserve_1, name: foreignReserve

Name: foreignReserve Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeBalance_2, name: nativeBalance

Name: nativeBalance Function: swap
Num: 7
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: foreignBalance_2, name: foreignBalance

Name: foreignBalance Function: swap
Num: 8
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: nativeReserve_1, name: nativeReserve

Name: nativeReserve Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: foreignReserve_1, name: foreignReserve

Name: foreignReserve Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeBalance_2, name: nativeBalance

Name: nativeBalance Function: swap
Num: 7
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: foreignBalance_2, name: foreignBalance

Name: foreignBalance Function: swap
Num: 8
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
INTERNAL_CALL, BasePool._update(uint256,uint256,uint112,uint112)(nativeBalance_2,foreignBalance_2,nativeReserve_1,foreignReserve_1)
New param cache [[[7], [-1], 'u', None, [], 0, 'u', 'u'], [[8], [-1], 'u', None, [], 0, 'u', 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[5], [-1], 'u', None, [], 0, 'u'], [[6], [-1], 'u', None, [], 0, 'u'], [[-1], [-1], 'u', None, [], -1, 'u'], [[-1], [-1], 'u', None, [], -1, 'u']]
[[7], [-1], 'u', None, [], 0, 'u', 'u']

Name: balanceNative Function: None
Num: 7
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
[[8], [-1], 'u', None, [], 0, 'u', 'u']

Name: balanceForeign Function: None
Num: 8
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: reserveNative Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: reserveForeign Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_update(uint256,uint256,uint112,uint112)
Propogating All
Propogating All
balanceNative_1
Ssa_name: balanceNative_1, name: balanceNative

Name: balanceNative Function: _update
Num: 7
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Source address: u

Name: balanceNative_1 Function: _update
Num: 7
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
balanceForeign_1
Ssa_name: balanceForeign_1, name: balanceForeign

Name: balanceForeign Function: _update
Num: 8
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Source address: u

Name: balanceForeign_1 Function: _update
Num: 8
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
Propogating All
Propogating All
blockTimestamp_1
Ssa_name: blockTimestamp_1, name: blockTimestamp

Name: blockTimestamp Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
reserveNative_1
Ssa_name: reserveNative_1, name: reserveNative

Name: reserveNative Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: reserveNative_1 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
timeElapsed_1
Ssa_name: timeElapsed_1, name: timeElapsed

Name: timeElapsed Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
reserveForeign_1
Ssa_name: reserveForeign_1, name: reserveForeign

Name: reserveForeign Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: reserveForeign_1 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
reserveNative_1
Ssa_name: reserveNative_1, name: reserveNative

Name: reserveNative_1 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: reserveNative_1 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
timeElapsed_1
Ssa_name: timeElapsed_1, name: timeElapsed

Name: timeElapsed Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
reserveForeign_1
Ssa_name: reserveForeign_1, name: reserveForeign

Name: reserveForeign_1 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: reserveForeign_1 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
balanceNative_1
Ssa_name: balanceNative_1, name: balanceNative

Name: balanceNative_1 Function: _update
Num: 7
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Source address: u

Name: balanceNative_1 Function: _update
Num: 7
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
Propogating All
reserveNative_1
Ssa_name: reserveNative_1, name: reserveNative

Name: reserveNative_1 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: reserveNative_1 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
timeElapsed_1
Ssa_name: timeElapsed_1, name: timeElapsed

Name: timeElapsed Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
reserveForeign_1
Ssa_name: reserveForeign_1, name: reserveForeign

Name: reserveForeign_1 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: reserveForeign_1 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
balanceForeign_1
Ssa_name: balanceForeign_1, name: balanceForeign

Name: balanceForeign_1 Function: _update
Num: 8
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Source address: u

Name: balanceForeign_1 Function: _update
Num: 8
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
Propogating All
blockTimestamp_1
Ssa_name: blockTimestamp_1, name: blockTimestamp

Name: blockTimestamp Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
balanceNative_1
Ssa_name: balanceNative_1, name: balanceNative

Name: balanceNative_1 Function: _update
Num: 7
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Source address: u

Name: balanceNative_1 Function: _update
Num: 7
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
balanceForeign_1
Ssa_name: balanceForeign_1, name: balanceForeign

Name: balanceForeign_1 Function: _update
Num: 8
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Source address: u

Name: balanceForeign_1 Function: _update
Num: 8
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
[i] balanceNative cleared
[i] balanceForeign cleared
[i] reserveNative cleared
[i] reserveForeign cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: balanceNative_1, name: balanceNative

Name: balanceNative_1 Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: balanceNative_1 Function: _update
Num: 7
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
Ssa_name: balanceForeign_1, name: balanceForeign

Name: balanceForeign_1 Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: balanceForeign_1 Function: _update
Num: 8
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
Ssa_name: reserveNative_1, name: reserveNative

Name: reserveNative_1 Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: reserveNative_1 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: reserveForeign_1, name: reserveForeign

Name: reserveForeign_1 Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: reserveForeign_1 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: priceNativeCumulativeLast_1, name: priceNativeCumulativeLast

Name: priceNativeCumulativeLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: priceForeignCumulativeLast_1, name: priceForeignCumulativeLast

Name: priceForeignCumulativeLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _blockTimestampLast_2, name: _blockTimestampLast

Name: _blockTimestampLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
balanceNative_1(uint256) := ϕ(['nativeBalance_2', 'balanceNative_1', 'nativeBalance_2'])
Phi
[i]Type for balanceNative

Name: balanceNative Function: _update
Num: 7
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
balanceForeign_1(uint256) := ϕ(['balanceForeign_1', 'foreignBalance_2', 'foreignBalance_2'])
Phi
[i]Type for balanceForeign

Name: balanceForeign Function: _update
Num: 8
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
reserveNative_1(uint112) := ϕ(['reserveNative_1', 'nativeReserve_1', 'reserveNative_1'])
Phi
[i]Type for reserveNative

Name: reserveNative Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
reserveForeign_1(uint112) := ϕ(['reserveForeign_1', 'foreignReserve_1', 'reserveForeign_1'])
Phi
[i]Type for reserveForeign

Name: reserveForeign Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
priceNativeCumulativeLast_1(uint256) := ϕ(['priceNativeCumulativeLast_0', 'priceNativeCumulativeLast_2'])
Phi
[i]Type for priceNativeCumulativeLast

Name: priceNativeCumulativeLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
priceForeignCumulativeLast_1(uint256) := ϕ(['priceForeignCumulativeLast_0', 'priceForeignCumulativeLast_2'])
Phi
[i]Type for priceForeignCumulativeLast

Name: priceForeignCumulativeLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_blockTimestampLast_2(uint32) := ϕ(['_blockTimestampLast_3', '_blockTimestampLast_0'])
Phi
[i]Type for _blockTimestampLast

Name: _blockTimestampLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_235 cleared
[i] TMP_236 cleared
[i] TMP_238 cleared
[i] TMP_239 cleared
[i] TMP_240 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: balanceNative_1, name: balanceNative

Name: balanceNative Function: _update
Num: 7
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: balanceForeign_1, name: balanceForeign

Name: balanceForeign Function: _update
Num: 8
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: balanceNative_1, name: balanceNative

Name: balanceNative Function: _update
Num: 7
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: balanceForeign_1, name: balanceForeign

Name: balanceForeign Function: _update
Num: 8
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
TMP_235(uint112) := 5192296858534827628530496329220095(uint112)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for TMP_235

Name: TMP_235 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 5192296858534827628530496329220095
Fields: 
Finance Type: undef
XXXX
TMP_236(bool) = balanceNative_1 <= TMP_235
lnorm: u rnorm: 0
[i]Type for TMP_236

Name: TMP_236 Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_238(uint112) := 5192296858534827628530496329220095(uint112)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for TMP_238

Name: TMP_238 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 5192296858534827628530496329220095
Fields: 
Finance Type: undef
XXXX
TMP_239(bool) = balanceForeign_1 <= TMP_238
lnorm: u rnorm: 0
[i]Type for TMP_239

Name: TMP_239 Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_240(bool) = TMP_236 && TMP_239
[i]Type for TMP_240

Name: TMP_240 Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_241(None) = SOLIDITY_CALL require(bool,string)(TMP_240,BasePool::_update: Balance Overflow)
[i]Type for TMP_241

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_242 cleared
[i] TMP_243 cleared
[i] TMP_244 cleared
[i] blockTimestamp cleared
Propogating parameters and globals to SSA variables...
Ssa_name: blockTimestamp_1, name: blockTimestamp

Name: blockTimestamp Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: blockTimestamp, Num: 1
Globalname: blockTimestamp, contract_name: BasePool
End popogation
TMP_242(uint256) = 2 (c)** 32
[i]Type for TMP_242

Name: TMP_242 Function: _update
Num: 
Den: 
Address: u
Norm: 32
LF: None
Value: 4294967296
Fields: 
Finance Type: undef
XXXX
TMP_243(uint256) = block.timestamp (c)% TMP_242
[i]Type for TMP_243

Name: TMP_243 Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_244 = CONVERT TMP_243 to uint32
Converting TMP_243

Name: TMP_243 Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_244

Name: TMP_244 Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
blockTimestamp_1(uint32) := TMP_244(uint32)
asgn
Finance type key: (-1, -1)
[i]Type for blockTimestamp

Name: blockTimestamp Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_245 cleared
[i] timeElapsed cleared
Propogating parameters and globals to SSA variables...
Ssa_name: blockTimestamp_1, name: blockTimestamp

Name: blockTimestamp Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: blockTimestamp, Num: 1
Globalname: blockTimestamp, contract_name: BasePool
Ssa_name: _blockTimestampLast_2, name: _blockTimestampLast

Name: _blockTimestampLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: blockTimestamp_1, name: blockTimestamp

Name: blockTimestamp Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: blockTimestamp, Num: 1
Globalname: blockTimestamp, contract_name: BasePool
Ssa_name: _blockTimestampLast_2, name: _blockTimestampLast

Name: _blockTimestampLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: timeElapsed_1, name: timeElapsed

Name: timeElapsed Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: timeElapsed, Num: 1
Globalname: timeElapsed, contract_name: BasePool
End popogation
TMP_245(uint32) = blockTimestamp_1 (c)- _blockTimestampLast_2
Source address: u
[i]Type for TMP_245

Name: TMP_245 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
timeElapsed_1(uint32) := TMP_245(uint32)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for timeElapsed

Name: timeElapsed Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_246 cleared
[i] TMP_247 cleared
[i] TMP_248 cleared
[i] TMP_249 cleared
[i] TMP_250 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveNative_1, name: reserveNative

Name: reserveNative Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: timeElapsed_1, name: timeElapsed

Name: timeElapsed Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: reserveForeign_1, name: reserveForeign

Name: reserveForeign Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: reserveNative_1, name: reserveNative

Name: reserveNative Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: timeElapsed_1, name: timeElapsed

Name: timeElapsed Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: reserveForeign_1, name: reserveForeign

Name: reserveForeign Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_246(bool) = timeElapsed_1 > 0
lnorm: u rnorm: 0
[i]Type for TMP_246

Name: TMP_246 Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_247(bool) = reserveNative_1 != 0
[i]Type for TMP_247

Name: TMP_247 Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_248(bool) = TMP_246 && TMP_247
[i]Type for TMP_248

Name: TMP_248 Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_249(bool) = reserveForeign_1 != 0
[i]Type for TMP_249

Name: TMP_249 Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_250(bool) = TMP_248 && TMP_249
[i]Type for TMP_250

Name: TMP_250 Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_251 cleared
[i] TMP_252 cleared
[i] TMP_253 cleared
[i] TMP_254 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveNative_1, name: reserveNative

Name: reserveNative Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: timeElapsed_1, name: timeElapsed

Name: timeElapsed Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: reserveForeign_1, name: reserveForeign

Name: reserveForeign Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: priceNativeCumulativeLast_1, name: priceNativeCumulativeLast

Name: priceNativeCumulativeLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: reserveNative_1, name: reserveNative

Name: reserveNative Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: timeElapsed_1, name: timeElapsed

Name: timeElapsed Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: priceNativeCumulativeLast_1, name: priceNativeCumulativeLast

Name: priceNativeCumulativeLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: reserveForeign_1, name: reserveForeign

Name: reserveForeign Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: priceNativeCumulativeLast_2, name: priceNativeCumulativeLast

Name: priceNativeCumulativeLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_251(uint224) = LIBRARY_CALL, dest:UQ112x112, function:UQ112x112.encode(uint112), arguments:['reserveForeign_1'] 
Found: None
Written func info: UQ112x112, encode
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
reserveForeign
hers norm: u
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
reserveForeign
hers norm: u
([-1], [-1, -1], 'u', "'u'", 'u', -1)
[i]Type for TMP_251

Name: TMP_251 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
TMP_252(uint224) = LIBRARY_CALL, dest:UQ112x112, function:UQ112x112.uqdiv(uint224,uint112), arguments:['TMP_251', 'reserveNative_1'] 
Found: None
Written func info: UQ112x112, uqdiv
Retvar: ('t', ['1'], ['2'], 1, "'u'", 'u')
TMP_251
reserveNative
hers norm: u
Retvar: ('t', ['1'], ['2'], 1, "'u'", 'u')
TMP_251
reserveNative
hers norm: u
([-1, -1], [-1, -1], 'u', "'u'", 'u', -1)
[i]Type for TMP_252

Name: TMP_252 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
TMP_253 = CONVERT TMP_252 to uint256
Converting TMP_252

Name: TMP_252 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_253

Name: TMP_253 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
TMP_254(uint256) = TMP_253 (c)* timeElapsed_1
lnorm: u rnorm: u
Source address: u
[i]Type for TMP_254

Name: TMP_254 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
priceNativeCumulativeLast_2(uint256) = priceNativeCumulativeLast_1 (c)+ TMP_254
Source address: u
[i]Type for priceNativeCumulativeLast

Name: priceNativeCumulativeLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Copied priceNativeCumulativeLast
Source address: u
[i] TMP_259 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: balanceNative_1, name: balanceNative

Name: balanceNative Function: _update
Num: 7
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: balanceNative_1, name: balanceNative

Name: balanceNative Function: _update
Num: 7
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: _reserveNative_2, name: _reserveNative

Name: _reserveNative Function: _update
Num: 7
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
TMP_259 = CONVERT balanceNative_1 to uint112
Converting balanceNative_1

Name: balanceNative Function: _update
Num: 7
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Source address: u
[i]Type for TMP_259

Name: TMP_259 Function: _update
Num: 7
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
_reserveNative_2(uint112) := TMP_259(uint112)
asgn
7
-1
Finance type key: (0, -1)
[i]Type for _reserveNative

Name: _reserveNative Function: _update
Num: 7
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
Copied _reserveNative
Source address: u
[i] TMP_255 cleared
[i] TMP_256 cleared
[i] TMP_257 cleared
[i] TMP_258 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveNative_1, name: reserveNative

Name: reserveNative Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: timeElapsed_1, name: timeElapsed

Name: timeElapsed Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: reserveForeign_1, name: reserveForeign

Name: reserveForeign Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: priceForeignCumulativeLast_1, name: priceForeignCumulativeLast

Name: priceForeignCumulativeLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: reserveNative_1, name: reserveNative

Name: reserveNative Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: priceForeignCumulativeLast_1, name: priceForeignCumulativeLast

Name: priceForeignCumulativeLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: timeElapsed_1, name: timeElapsed

Name: timeElapsed Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: reserveForeign_1, name: reserveForeign

Name: reserveForeign Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: priceForeignCumulativeLast_2, name: priceForeignCumulativeLast

Name: priceForeignCumulativeLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_255(uint224) = LIBRARY_CALL, dest:UQ112x112, function:UQ112x112.encode(uint112), arguments:['reserveNative_1'] 
Found: None
Written func info: UQ112x112, encode
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
reserveNative
hers norm: u
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
reserveNative
hers norm: u
([-1], [-1, -1], 'u', "'u'", 'u', -1)
[i]Type for TMP_255

Name: TMP_255 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
TMP_256(uint224) = LIBRARY_CALL, dest:UQ112x112, function:UQ112x112.uqdiv(uint224,uint112), arguments:['TMP_255', 'reserveForeign_1'] 
Found: None
Written func info: UQ112x112, uqdiv
Retvar: ('t', ['1'], ['2'], 1, "'u'", 'u')
TMP_255
reserveForeign
hers norm: u
Retvar: ('t', ['1'], ['2'], 1, "'u'", 'u')
TMP_255
reserveForeign
hers norm: u
([-1, -1], [-1, -1], 'u', "'u'", 'u', -1)
[i]Type for TMP_256

Name: TMP_256 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
TMP_257 = CONVERT TMP_256 to uint256
Converting TMP_256

Name: TMP_256 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_257

Name: TMP_257 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
TMP_258(uint256) = TMP_257 (c)* timeElapsed_1
lnorm: u rnorm: u
Source address: u
[i]Type for TMP_258

Name: TMP_258 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
priceForeignCumulativeLast_2(uint256) = priceForeignCumulativeLast_1 (c)+ TMP_258
Source address: u
[i]Type for priceForeignCumulativeLast

Name: priceForeignCumulativeLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Copied priceForeignCumulativeLast
Source address: u
[i] TMP_260 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: balanceForeign_1, name: balanceForeign

Name: balanceForeign Function: _update
Num: 8
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: balanceForeign_1, name: balanceForeign

Name: balanceForeign Function: _update
Num: 8
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: _reserveForeign_2, name: _reserveForeign

Name: _reserveForeign Function: _update
Num: 8
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
TMP_260 = CONVERT balanceForeign_1 to uint112
Converting balanceForeign_1

Name: balanceForeign Function: _update
Num: 8
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Source address: u
[i]Type for TMP_260

Name: TMP_260 Function: _update
Num: 8
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
_reserveForeign_2(uint112) := TMP_260(uint112)
asgn
8
-1
Finance type key: (0, -1)
[i]Type for _reserveForeign

Name: _reserveForeign Function: _update
Num: 8
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
Copied _reserveForeign
Source address: u
Propogating parameters and globals to SSA variables...
Ssa_name: blockTimestamp_1, name: blockTimestamp

Name: blockTimestamp Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: blockTimestamp, Num: 1
Globalname: blockTimestamp, contract_name: BasePool
Ssa_name: blockTimestamp_1, name: blockTimestamp

Name: blockTimestamp Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: blockTimestamp, Num: 1
Globalname: blockTimestamp, contract_name: BasePool
Ssa_name: _blockTimestampLast_3, name: _blockTimestampLast

Name: _blockTimestampLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
_blockTimestampLast_3(uint32) := blockTimestamp_1(uint32)
asgn
Finance type key: (-1, -1)
[i]Type for _blockTimestampLast

Name: _blockTimestampLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Copied _blockTimestampLast
Source address: u
Propogating parameters and globals to SSA variables...
Ssa_name: balanceNative_1, name: balanceNative

Name: balanceNative Function: _update
Num: 7
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: balanceForeign_1, name: balanceForeign

Name: balanceForeign Function: _update
Num: 8
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: balanceNative_1, name: balanceNative

Name: balanceNative Function: _update
Num: 7
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: balanceForeign_1, name: balanceForeign

Name: balanceForeign Function: _update
Num: 8
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
[i] balanceNative cleared
[i] balanceForeign cleared
[i] reserveNative cleared
[i] reserveForeign cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: balanceNative_1, name: balanceNative

Name: balanceNative Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: balanceNative_1 Function: _update
Num: 7
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
Ssa_name: balanceForeign_1, name: balanceForeign

Name: balanceForeign Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: balanceForeign_1 Function: _update
Num: 8
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
Ssa_name: reserveNative_1, name: reserveNative

Name: reserveNative Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: reserveNative_1 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: reserveForeign_1, name: reserveForeign

Name: reserveForeign Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: reserveForeign_1 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: priceNativeCumulativeLast_1, name: priceNativeCumulativeLast

Name: priceNativeCumulativeLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: priceForeignCumulativeLast_1, name: priceForeignCumulativeLast

Name: priceForeignCumulativeLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _blockTimestampLast_2, name: _blockTimestampLast

Name: _blockTimestampLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
balanceNative_1(uint256) := ϕ(['nativeBalance_2', 'balanceNative_1', 'nativeBalance_2'])
Phi
[i]Type for balanceNative

Name: balanceNative Function: _update
Num: 7
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
balanceForeign_1(uint256) := ϕ(['balanceForeign_1', 'foreignBalance_2', 'foreignBalance_2'])
Phi
[i]Type for balanceForeign

Name: balanceForeign Function: _update
Num: 8
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
reserveNative_1(uint112) := ϕ(['reserveNative_1', 'nativeReserve_1', 'reserveNative_1'])
Phi
[i]Type for reserveNative

Name: reserveNative Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
reserveForeign_1(uint112) := ϕ(['reserveForeign_1', 'foreignReserve_1', 'reserveForeign_1'])
Phi
[i]Type for reserveForeign

Name: reserveForeign Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
priceNativeCumulativeLast_1(uint256) := ϕ(['priceNativeCumulativeLast_0', 'priceNativeCumulativeLast_2'])
Phi
[i]Type for priceNativeCumulativeLast

Name: priceNativeCumulativeLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
priceForeignCumulativeLast_1(uint256) := ϕ(['priceForeignCumulativeLast_0', 'priceForeignCumulativeLast_2'])
Phi
[i]Type for priceForeignCumulativeLast

Name: priceForeignCumulativeLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_blockTimestampLast_2(uint32) := ϕ(['_blockTimestampLast_3', '_blockTimestampLast_0'])
Phi
[i]Type for _blockTimestampLast

Name: _blockTimestampLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_235 cleared
[i] TMP_236 cleared
[i] TMP_238 cleared
[i] TMP_239 cleared
[i] TMP_240 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: balanceNative_1, name: balanceNative

Name: balanceNative Function: _update
Num: 7
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: balanceForeign_1, name: balanceForeign

Name: balanceForeign Function: _update
Num: 8
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: balanceNative_1, name: balanceNative

Name: balanceNative Function: _update
Num: 7
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: balanceForeign_1, name: balanceForeign

Name: balanceForeign Function: _update
Num: 8
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
TMP_235(uint112) := 5192296858534827628530496329220095(uint112)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for TMP_235

Name: TMP_235 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 5192296858534827628530496329220095
Fields: 
Finance Type: undef
XXXX
TMP_236(bool) = balanceNative_1 <= TMP_235
lnorm: u rnorm: 0
[i]Type for TMP_236

Name: TMP_236 Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_238(uint112) := 5192296858534827628530496329220095(uint112)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for TMP_238

Name: TMP_238 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 5192296858534827628530496329220095
Fields: 
Finance Type: undef
XXXX
TMP_239(bool) = balanceForeign_1 <= TMP_238
lnorm: u rnorm: 0
[i]Type for TMP_239

Name: TMP_239 Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_240(bool) = TMP_236 && TMP_239
[i]Type for TMP_240

Name: TMP_240 Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_241(None) = SOLIDITY_CALL require(bool,string)(TMP_240,BasePool::_update: Balance Overflow)
[i]Type for TMP_241

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_242 cleared
[i] TMP_243 cleared
[i] TMP_244 cleared
[i] blockTimestamp cleared
Propogating parameters and globals to SSA variables...
Ssa_name: blockTimestamp_1, name: blockTimestamp

Name: blockTimestamp Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: blockTimestamp, Num: 1
Globalname: blockTimestamp, contract_name: BasePool
End popogation
TMP_242(uint256) = 2 (c)** 32
[i]Type for TMP_242

Name: TMP_242 Function: _update
Num: 
Den: 
Address: u
Norm: 32
LF: None
Value: 4294967296
Fields: 
Finance Type: undef
XXXX
TMP_243(uint256) = block.timestamp (c)% TMP_242
[i]Type for TMP_243

Name: TMP_243 Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_244 = CONVERT TMP_243 to uint32
Converting TMP_243

Name: TMP_243 Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_244

Name: TMP_244 Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
blockTimestamp_1(uint32) := TMP_244(uint32)
asgn
Finance type key: (-1, -1)
[i]Type for blockTimestamp

Name: blockTimestamp Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_245 cleared
[i] timeElapsed cleared
Propogating parameters and globals to SSA variables...
Ssa_name: blockTimestamp_1, name: blockTimestamp

Name: blockTimestamp Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: blockTimestamp, Num: 1
Globalname: blockTimestamp, contract_name: BasePool
Ssa_name: _blockTimestampLast_2, name: _blockTimestampLast

Name: _blockTimestampLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: blockTimestamp_1, name: blockTimestamp

Name: blockTimestamp Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: blockTimestamp, Num: 1
Globalname: blockTimestamp, contract_name: BasePool
Ssa_name: _blockTimestampLast_2, name: _blockTimestampLast

Name: _blockTimestampLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: timeElapsed_1, name: timeElapsed

Name: timeElapsed Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: timeElapsed, Num: 1
Globalname: timeElapsed, contract_name: BasePool
End popogation
TMP_245(uint32) = blockTimestamp_1 (c)- _blockTimestampLast_2
Source address: u
[i]Type for TMP_245

Name: TMP_245 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
timeElapsed_1(uint32) := TMP_245(uint32)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for timeElapsed

Name: timeElapsed Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_246 cleared
[i] TMP_247 cleared
[i] TMP_248 cleared
[i] TMP_249 cleared
[i] TMP_250 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveNative_1, name: reserveNative

Name: reserveNative Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: timeElapsed_1, name: timeElapsed

Name: timeElapsed Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: reserveForeign_1, name: reserveForeign

Name: reserveForeign Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: reserveNative_1, name: reserveNative

Name: reserveNative Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: timeElapsed_1, name: timeElapsed

Name: timeElapsed Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: reserveForeign_1, name: reserveForeign

Name: reserveForeign Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_246(bool) = timeElapsed_1 > 0
lnorm: u rnorm: 0
[i]Type for TMP_246

Name: TMP_246 Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_247(bool) = reserveNative_1 != 0
[i]Type for TMP_247

Name: TMP_247 Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_248(bool) = TMP_246 && TMP_247
[i]Type for TMP_248

Name: TMP_248 Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_249(bool) = reserveForeign_1 != 0
[i]Type for TMP_249

Name: TMP_249 Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_250(bool) = TMP_248 && TMP_249
[i]Type for TMP_250

Name: TMP_250 Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_251 cleared
[i] TMP_252 cleared
[i] TMP_253 cleared
[i] TMP_254 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveNative_1, name: reserveNative

Name: reserveNative Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: timeElapsed_1, name: timeElapsed

Name: timeElapsed Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: reserveForeign_1, name: reserveForeign

Name: reserveForeign Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: priceNativeCumulativeLast_1, name: priceNativeCumulativeLast

Name: priceNativeCumulativeLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: reserveNative_1, name: reserveNative

Name: reserveNative Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: timeElapsed_1, name: timeElapsed

Name: timeElapsed Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: priceNativeCumulativeLast_1, name: priceNativeCumulativeLast

Name: priceNativeCumulativeLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: reserveForeign_1, name: reserveForeign

Name: reserveForeign Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: priceNativeCumulativeLast_2, name: priceNativeCumulativeLast

Name: priceNativeCumulativeLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_251(uint224) = LIBRARY_CALL, dest:UQ112x112, function:UQ112x112.encode(uint112), arguments:['reserveForeign_1'] 
Found: None
Written func info: UQ112x112, encode
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
reserveForeign
hers norm: u
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
reserveForeign
hers norm: u
([-1], [-1, -1], 'u', "'u'", 'u', -1)
[i]Type for TMP_251

Name: TMP_251 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
TMP_252(uint224) = LIBRARY_CALL, dest:UQ112x112, function:UQ112x112.uqdiv(uint224,uint112), arguments:['TMP_251', 'reserveNative_1'] 
Found: None
Written func info: UQ112x112, uqdiv
Retvar: ('t', ['1'], ['2'], 1, "'u'", 'u')
TMP_251
reserveNative
hers norm: u
Retvar: ('t', ['1'], ['2'], 1, "'u'", 'u')
TMP_251
reserveNative
hers norm: u
([-1, -1], [-1, -1], 'u', "'u'", 'u', -1)
[i]Type for TMP_252

Name: TMP_252 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
TMP_253 = CONVERT TMP_252 to uint256
Converting TMP_252

Name: TMP_252 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_253

Name: TMP_253 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
TMP_254(uint256) = TMP_253 (c)* timeElapsed_1
lnorm: u rnorm: u
Source address: u
[i]Type for TMP_254

Name: TMP_254 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
priceNativeCumulativeLast_2(uint256) = priceNativeCumulativeLast_1 (c)+ TMP_254
Source address: u
[i]Type for priceNativeCumulativeLast

Name: priceNativeCumulativeLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Copied priceNativeCumulativeLast
Source address: u
[i] TMP_259 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: balanceNative_1, name: balanceNative

Name: balanceNative Function: _update
Num: 7
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: balanceNative_1, name: balanceNative

Name: balanceNative Function: _update
Num: 7
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: _reserveNative_2, name: _reserveNative

Name: _reserveNative Function: _update
Num: 7
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
TMP_259 = CONVERT balanceNative_1 to uint112
Converting balanceNative_1

Name: balanceNative Function: _update
Num: 7
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Source address: u
[i]Type for TMP_259

Name: TMP_259 Function: _update
Num: 7
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
_reserveNative_2(uint112) := TMP_259(uint112)
asgn
7
-1
Finance type key: (0, -1)
[i]Type for _reserveNative

Name: _reserveNative Function: _update
Num: 7
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
Copied _reserveNative
Source address: u
[i] TMP_255 cleared
[i] TMP_256 cleared
[i] TMP_257 cleared
[i] TMP_258 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveNative_1, name: reserveNative

Name: reserveNative Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: timeElapsed_1, name: timeElapsed

Name: timeElapsed Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: reserveForeign_1, name: reserveForeign

Name: reserveForeign Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: priceForeignCumulativeLast_1, name: priceForeignCumulativeLast

Name: priceForeignCumulativeLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: reserveNative_1, name: reserveNative

Name: reserveNative Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: priceForeignCumulativeLast_1, name: priceForeignCumulativeLast

Name: priceForeignCumulativeLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: timeElapsed_1, name: timeElapsed

Name: timeElapsed Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: reserveForeign_1, name: reserveForeign

Name: reserveForeign Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: priceForeignCumulativeLast_2, name: priceForeignCumulativeLast

Name: priceForeignCumulativeLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_255(uint224) = LIBRARY_CALL, dest:UQ112x112, function:UQ112x112.encode(uint112), arguments:['reserveNative_1'] 
Found: None
Written func info: UQ112x112, encode
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
reserveNative
hers norm: u
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
reserveNative
hers norm: u
([-1], [-1, -1], 'u', "'u'", 'u', -1)
[i]Type for TMP_255

Name: TMP_255 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
TMP_256(uint224) = LIBRARY_CALL, dest:UQ112x112, function:UQ112x112.uqdiv(uint224,uint112), arguments:['TMP_255', 'reserveForeign_1'] 
Found: None
Written func info: UQ112x112, uqdiv
Retvar: ('t', ['1'], ['2'], 1, "'u'", 'u')
TMP_255
reserveForeign
hers norm: u
Retvar: ('t', ['1'], ['2'], 1, "'u'", 'u')
TMP_255
reserveForeign
hers norm: u
([-1, -1], [-1, -1], 'u', "'u'", 'u', -1)
[i]Type for TMP_256

Name: TMP_256 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
TMP_257 = CONVERT TMP_256 to uint256
Converting TMP_256

Name: TMP_256 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_257

Name: TMP_257 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
TMP_258(uint256) = TMP_257 (c)* timeElapsed_1
lnorm: u rnorm: u
Source address: u
[i]Type for TMP_258

Name: TMP_258 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
priceForeignCumulativeLast_2(uint256) = priceForeignCumulativeLast_1 (c)+ TMP_258
Source address: u
[i]Type for priceForeignCumulativeLast

Name: priceForeignCumulativeLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Copied priceForeignCumulativeLast
Source address: u
[i] TMP_260 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: balanceForeign_1, name: balanceForeign

Name: balanceForeign Function: _update
Num: 8
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: balanceForeign_1, name: balanceForeign

Name: balanceForeign Function: _update
Num: 8
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: _reserveForeign_2, name: _reserveForeign

Name: _reserveForeign Function: _update
Num: 8
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
TMP_260 = CONVERT balanceForeign_1 to uint112
Converting balanceForeign_1

Name: balanceForeign Function: _update
Num: 8
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Source address: u
[i]Type for TMP_260

Name: TMP_260 Function: _update
Num: 8
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
_reserveForeign_2(uint112) := TMP_260(uint112)
asgn
8
-1
Finance type key: (0, -1)
[i]Type for _reserveForeign

Name: _reserveForeign Function: _update
Num: 8
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
Copied _reserveForeign
Source address: u
Propogating parameters and globals to SSA variables...
Ssa_name: blockTimestamp_1, name: blockTimestamp

Name: blockTimestamp Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: blockTimestamp, Num: 1
Globalname: blockTimestamp, contract_name: BasePool
Ssa_name: blockTimestamp_1, name: blockTimestamp

Name: blockTimestamp Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: blockTimestamp, Num: 1
Globalname: blockTimestamp, contract_name: BasePool
Ssa_name: _blockTimestampLast_3, name: _blockTimestampLast

Name: _blockTimestampLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
_blockTimestampLast_3(uint32) := blockTimestamp_1(uint32)
asgn
Finance type key: (-1, -1)
[i]Type for _blockTimestampLast

Name: _blockTimestampLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Copied _blockTimestampLast
Source address: u
Propogating parameters and globals to SSA variables...
Ssa_name: balanceNative_1, name: balanceNative

Name: balanceNative Function: _update
Num: 7
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: balanceForeign_1, name: balanceForeign

Name: balanceForeign Function: _update
Num: 8
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: balanceNative_1, name: balanceNative

Name: balanceNative Function: _update
Num: 7
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: balanceForeign_1, name: balanceForeign

Name: balanceForeign Function: _update
Num: 8
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
Propogating parameters and globals to SSA variables...
Ssa_name: foreignAmountOut_2, name: foreignAmountOut

Name: foreignAmountOut Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: foreignAmountOut, Num: 2
Globalname: foreignAmountOut, contract_name: BasePool
Ssa_name: nativeAmountOut_2, name: nativeAmountOut

Name: nativeAmountOut Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: nativeAmountOut, Num: 2
Globalname: nativeAmountOut, contract_name: BasePool
Ssa_name: foreignAmountIn_1, name: foreignAmountIn

Name: foreignAmountIn_1 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeAmountIn_1, name: nativeAmountIn

Name: nativeAmountIn_1 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: swap
Num: 
Den: 
Address: -999
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: foreignAmountOut_2, name: foreignAmountOut

Name: foreignAmountOut Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: foreignAmountOut, Num: 2
Globalname: foreignAmountOut, contract_name: BasePool
Ssa_name: nativeAmountOut_2, name: nativeAmountOut

Name: nativeAmountOut Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: nativeAmountOut, Num: 2
Globalname: nativeAmountOut, contract_name: BasePool
Ssa_name: foreignAmountIn_1, name: foreignAmountIn

Name: foreignAmountIn_1 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeAmountIn_1, name: nativeAmountIn

Name: nativeAmountIn_1 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: swap
Num: 
Den: 
Address: -999
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
End popogation
Propogating parameters and globals to SSA variables...
Ssa_name: nativeAmountOut_2, name: nativeAmountOut

Name: nativeAmountOut Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: nativeAmountOut, Num: 2
Globalname: nativeAmountOut, contract_name: BasePool
Ssa_name: nativeAmountOut_2, name: nativeAmountOut

Name: nativeAmountOut Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: nativeAmountOut, Num: 2
Globalname: nativeAmountOut, contract_name: BasePool
End popogation
RETURN nativeAmountOut_2
RETURN

Name: nativeAmountOut Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Source address: u
[i]Type for TMP_184

Name: TMP_184 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_184
RETURN

Name: TMP_184 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


TMP_184(uint256) = INTERNAL_CALL, BasePool.swap(uint256,uint256,address)(nativeAmountIn_1,foreignAmountIn_1,to_1)
RETURN TMP_184


Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_184 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: to_1, name: to

Name: to_1 Function: swap
Num: 
Den: 
Address: -999
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: foreignAmountIn_1, name: foreignAmountIn

Name: foreignAmountIn_1 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: foreignAmountIn_1 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: foreignAmountIn, Num: 1
Globalname: foreignAmountIn, contract_name: BasePool
Ssa_name: nativeAmountIn_1, name: nativeAmountIn

Name: nativeAmountIn_1 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: nativeAmountIn_1 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: nativeAmountIn, Num: 1
Globalname: nativeAmountIn, contract_name: BasePool
Ssa_name: to_1, name: to

Name: to_1 Function: swap
Num: 
Den: 
Address: -999
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: foreignAmountIn_1, name: foreignAmountIn

Name: foreignAmountIn_1 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: foreignAmountIn_1 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: foreignAmountIn, Num: 1
Globalname: foreignAmountIn, contract_name: BasePool
Ssa_name: nativeAmountIn_1, name: nativeAmountIn

Name: nativeAmountIn_1 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: nativeAmountIn_1 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: nativeAmountIn, Num: 1
Globalname: nativeAmountIn, contract_name: BasePool
End popogation
TMP_184(uint256) = INTERNAL_CALL, BasePool.swap(uint256,uint256,address)(nativeAmountIn_1,foreignAmountIn_1,to_1)
New param cache [[[], [], 'u', None, [], -1, 'u', 'u'], [[], [], 'u', None, [], -1, 'u', 'u'], [[], [], 0, 'to', [], -1, -999, 'u']]
Old param cache: [[[], [], 'u', None, [], -1, 'u'], [[], [], 'u', None, [], -1, 'u'], [[], [], 0, 'to', [], -1, -999]]
[i]Type for TMP_184

Name: TMP_184 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_184
RETURN

Name: TMP_184 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Reading Function: swap
Checking funcion...



swap
Function name: swap
Finding type for nativeAmountIn(uint256 ... )
Value: u
Finding type for foreignAmountIn(uint256 ... )
Value: u
Finding type for to(address ... )
prev address? -999
Head Addr: -999
    Norm: 0
    Set: {-999}
    Fin: NULL
New param cache [[[-1], [-1], 'u', None, [], -1, 'u', 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u'], [[], [], 0, 'to', [], -1, -999, 'u']]
Old param cache: [[[], [], 'u', None, [], -1, 'u'], [[], [], 'u', None, [], -1, 'u'], [[], [], 0, 'to', [], -1, -999]]
FIND RETURN
ENTRY_POINT
swap(uint256,uint256,address)


nativeAmountIn_1(uint256) := ϕ(['nativeAmountIn_1'])
foreignAmountIn_1(uint256) := ϕ(['foreignAmountIn_1'])
to_1(address) := ϕ(['to_1'])
nativeAsset_10(IERC20) := ϕ(['nativeAsset_13', 'nativeAsset_9', 'nativeAsset_1', 'nativeAsset_0', 'nativeAsset_5'])
foreignAsset_11(IERC20) := ϕ(['foreignAsset_0', 'foreignAsset_14', 'foreignAsset_1', 'foreignAsset_10', 'foreignAsset_6'])
MODIFIER_CALL, ReentrancyGuard.nonReentrant()()
MODIFIER_CALL, GasThrottle.validateGas()()
TMP_185(bool) = nativeAmountIn_1 > 0
TMP_186(bool) = foreignAmountIn_1 == 0
TMP_187(bool) = TMP_185 && TMP_186
TMP_188(bool) = nativeAmountIn_1 == 0
TMP_189(bool) = foreignAmountIn_1 > 0
TMP_190(bool) = TMP_188 && TMP_189
TMP_191(bool) = TMP_187 || TMP_190
TMP_192(None) = SOLIDITY_CALL require(bool,string)(TMP_191,BasePool::swap: Only One-Sided Swaps Supported)
TUPLE_2(uint112,uint112,uint32) = INTERNAL_CALL, BasePool.getReserves()()
nativeReserve_1(uint112)= UNPACK TUPLE_2 index: 0 
foreignReserve_1(uint112)= UNPACK TUPLE_2 index: 1 
_nativeAsset_1(IERC20) := nativeAsset_13(IERC20)
_foreignAsset_1(IERC20) := foreignAsset_14(IERC20)
TMP_193 = CONVERT this to address
TMP_194(uint256) = HIGH_LEVEL_CALL, dest:_nativeAsset_1(IERC20), function:balanceOf, arguments:['TMP_193']  
nativeBalance_1(uint256) := TMP_194(uint256)
TMP_195 = CONVERT this to address
TMP_196(uint256) = HIGH_LEVEL_CALL, dest:_foreignAsset_1(IERC20), function:balanceOf, arguments:['TMP_195']  
foreignBalance_1(uint256) := TMP_196(uint256)
TMP_197 = CONVERT _nativeAsset_1 to address
TMP_198(bool) = to_1 != TMP_197
TMP_199 = CONVERT _foreignAsset_1 to address
TMP_200(bool) = to_1 != TMP_199
TMP_201(bool) = TMP_198 && TMP_200
TMP_202(None) = SOLIDITY_CALL require(bool,string)(TMP_201,BasePool::swap: Invalid Receiver)
TMP_203(bool) = foreignAmountIn_1 > 0
CONDITION TMP_203
TMP_215(uint256) = nativeBalance_1 (c)- nativeReserve_1
TMP_216(bool) = nativeAmountIn_1 <= TMP_215
TMP_217(None) = SOLIDITY_CALL require(bool,string)(TMP_216,BasePool::swap: Insufficient Tokens Provided)
TMP_218(bool) = nativeAmountIn_1 <= nativeReserve_1
TMP_219(None) = SOLIDITY_CALL require(bool,string)(TMP_218,BasePool::swap: Unfavourable Trade)
TMP_204(uint256) = foreignBalance_1 (c)- foreignReserve_1
TMP_205(bool) = foreignAmountIn_1 <= TMP_204
TMP_206(None) = SOLIDITY_CALL require(bool,string)(TMP_205,BasePool::swap: Insufficient Tokens Provided)
TMP_207(bool) = foreignAmountIn_1 <= foreignReserve_1
TMP_208(None) = SOLIDITY_CALL require(bool,string)(TMP_207,BasePool::swap: Unfavourable Trade)
TMP_209(uint256) = LIBRARY_CALL, dest:VaderMath, function:VaderMath.calculateSwap(uint256,uint256,uint256), arguments:['foreignAmountIn_1', 'foreignReserve_1', 'nativeReserve_1'] 
nativeAmountOut_1(uint256) := TMP_209(uint256)
TMP_220(uint256) = LIBRARY_CALL, dest:VaderMath, function:VaderMath.calculateSwap(uint256,uint256,uint256), arguments:['nativeAmountIn_1', 'nativeReserve_1', 'foreignReserve_1'] 
foreignAmountOut_1(uint256) := TMP_220(uint256)
TMP_210(bool) = nativeAmountOut_1 > 0
TMP_211(bool) = nativeAmountOut_1 <= nativeReserve_1
TMP_212(bool) = TMP_210 && TMP_211
TMP_213(None) = SOLIDITY_CALL require(bool,string)(TMP_212,BasePool::swap: Swap Impossible)
TMP_221(bool) = foreignAmountOut_1 > 0
TMP_222(bool) = foreignAmountOut_1 <= foreignReserve_1
TMP_223(bool) = TMP_221 && TMP_222
TMP_224(None) = SOLIDITY_CALL require(bool,string)(TMP_223,BasePool::swap: Swap Impossible)
LIBRARY_CALL, dest:SafeERC20, function:SafeERC20.safeTransfer(IERC20,address,uint256), arguments:['_nativeAsset_1', 'to_1', 'nativeAmountOut_1'] 
nativeAmountOut_2(uint256) := ϕ(['nativeAmountOut_0', 'nativeAmountOut_1'])
foreignAmountOut_2(uint256) := ϕ(['foreignAmountOut_0', 'foreignAmountOut_1'])
LIBRARY_CALL, dest:SafeERC20, function:SafeERC20.safeTransfer(IERC20,address,uint256), arguments:['_foreignAsset_1', 'to_1', 'foreignAmountOut_1'] 
TMP_226 = CONVERT this to address
TMP_227(uint256) = HIGH_LEVEL_CALL, dest:_nativeAsset_1(IERC20), function:balanceOf, arguments:['TMP_226']  
nativeBalance_2(uint256) := TMP_227(uint256)
TMP_228 = CONVERT this to address
TMP_229(uint256) = HIGH_LEVEL_CALL, dest:_foreignAsset_1(IERC20), function:balanceOf, arguments:['TMP_228']  
foreignBalance_2(uint256) := TMP_229(uint256)
INTERNAL_CALL, BasePool._update(uint256,uint256,uint112,uint112)(nativeBalance_2,foreignBalance_2,nativeReserve_1,foreignReserve_1)
Emit Swap(msg.sender,nativeAmountIn_1,foreignAmountIn_1,nativeAmountOut_2,foreignAmountOut_2,to_1)
RETURN nativeAmountOut_2


[i] nativeAmountIn cleared
[i] foreignAmountIn cleared
[i] to cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: nativeAmountIn_1, name: nativeAmountIn

Name: nativeAmountIn_1 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: nativeAmountIn_1 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: nativeAmountIn, Num: 1
Globalname: nativeAmountIn, contract_name: BasePool
Ssa_name: foreignAmountIn_1, name: foreignAmountIn

Name: foreignAmountIn_1 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: foreignAmountIn_1 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: foreignAmountIn, Num: 1
Globalname: foreignAmountIn, contract_name: BasePool
Ssa_name: to_1, name: to

Name: to Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: to
Value: u
Fields: 
Finance Type: undef
Source address: -999

Name: to_1 Function: swap
Num: 
Den: 
Address: -999
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: nativeAsset_10, name: nativeAsset

Name: nativeAsset Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: foreignAsset_11, name: foreignAsset

Name: foreignAsset Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
nativeAmountIn_1(uint256) := ϕ(['nativeAmountIn_1'])
Phi

Name: nativeAmountIn_1 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for nativeAmountIn

Name: nativeAmountIn Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
foreignAmountIn_1(uint256) := ϕ(['foreignAmountIn_1'])
Phi

Name: foreignAmountIn_1 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for foreignAmountIn

Name: foreignAmountIn Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
to_1(address) := ϕ(['to_1'])
Phi
[i]Type for to

Name: to Function: swap
Num: 
Den: 
Address: -999
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
XXXX
nativeAsset_10(IERC20) := ϕ(['nativeAsset_13', 'nativeAsset_9', 'nativeAsset_1', 'nativeAsset_0', 'nativeAsset_5'])
Phi
[i]Type for nativeAsset

Name: nativeAsset Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
foreignAsset_11(IERC20) := ϕ(['foreignAsset_0', 'foreignAsset_14', 'foreignAsset_1', 'foreignAsset_10', 'foreignAsset_6'])
Phi
[i]Type for foreignAsset

Name: foreignAsset Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, ReentrancyGuard.nonReentrant()()
New param cache []
Old param cache: []
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, GasThrottle.validateGas()()
New param cache []
Old param cache: []
[i] TMP_185 cleared
[i] TMP_186 cleared
[i] TMP_187 cleared
[i] TMP_188 cleared
[i] TMP_189 cleared
[i] TMP_190 cleared
[i] TMP_191 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: foreignAmountIn_1, name: foreignAmountIn

Name: foreignAmountIn Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: foreignAmountIn_1 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: foreignAmountIn, Num: 1
Globalname: foreignAmountIn, contract_name: BasePool
Ssa_name: nativeAmountIn_1, name: nativeAmountIn

Name: nativeAmountIn Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: nativeAmountIn_1 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: nativeAmountIn, Num: 1
Globalname: nativeAmountIn, contract_name: BasePool
Ssa_name: foreignAmountIn_1, name: foreignAmountIn

Name: foreignAmountIn_1 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: foreignAmountIn_1 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: foreignAmountIn, Num: 1
Globalname: foreignAmountIn, contract_name: BasePool
Ssa_name: nativeAmountIn_1, name: nativeAmountIn

Name: nativeAmountIn_1 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: nativeAmountIn_1 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: nativeAmountIn, Num: 1
Globalname: nativeAmountIn, contract_name: BasePool
End popogation
TMP_185(bool) = nativeAmountIn_1 > 0
lnorm: u rnorm: 0
Source address: u
Source address: u
[i]Type for TMP_185

Name: TMP_185 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_186(bool) = foreignAmountIn_1 == 0
[i]Type for TMP_186

Name: TMP_186 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_187(bool) = TMP_185 && TMP_186
[i]Type for TMP_187

Name: TMP_187 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_188(bool) = nativeAmountIn_1 == 0
[i]Type for TMP_188

Name: TMP_188 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_189(bool) = foreignAmountIn_1 > 0
lnorm: u rnorm: 0
Source address: u
Source address: u
[i]Type for TMP_189

Name: TMP_189 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_190(bool) = TMP_188 && TMP_189
[i]Type for TMP_190

Name: TMP_190 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_191(bool) = TMP_187 || TMP_190
[i]Type for TMP_191

Name: TMP_191 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_192(None) = SOLIDITY_CALL require(bool,string)(TMP_191,BasePool::swap: Only One-Sided Swaps Supported)
[i]Type for TMP_192

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] nativeReserve cleared
[i] foreignReserve cleared
Propogating parameters and globals to SSA variables...
Ssa_name: nativeReserve_1, name: nativeReserve

Name: nativeReserve Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: nativeReserve, Num: 1
Globalname: nativeReserve, contract_name: BasePool
Ssa_name: foreignReserve_1, name: foreignReserve

Name: foreignReserve Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: foreignReserve, Num: 1
Globalname: foreignReserve, contract_name: BasePool
End popogation
TUPLE_2(uint112,uint112,uint32) = INTERNAL_CALL, BasePool.getReserves()()
New param cache []
Old param cache: []
[i]Type for TUPLE_2

Name: TUPLE_2 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
nativeReserve_1(uint112)= UNPACK TUPLE_2 index: 0 
([-1], [-1], 'u', 'u', 'u', -1)
[i]Type for nativeReserve

Name: nativeReserve Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
foreignReserve_1(uint112)= UNPACK TUPLE_2 index: 1 
([-1], [-1], 'u', 'u', 'u', -1)
[i]Type for foreignReserve

Name: foreignReserve Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] _nativeAsset cleared
Propogating parameters and globals to SSA variables...
Ssa_name: nativeAsset_13, name: nativeAsset

Name: nativeAsset Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeAsset_13, name: nativeAsset

Name: nativeAsset Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _nativeAsset_1, name: _nativeAsset

Name: _nativeAsset Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _nativeAsset, Num: 1
Globalname: _nativeAsset, contract_name: BasePool
End popogation
_nativeAsset_1(IERC20) := nativeAsset_13(IERC20)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for _nativeAsset

Name: _nativeAsset Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] _foreignAsset cleared
Propogating parameters and globals to SSA variables...
Ssa_name: foreignAsset_14, name: foreignAsset

Name: foreignAsset Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: foreignAsset_14, name: foreignAsset

Name: foreignAsset Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _foreignAsset_1, name: _foreignAsset

Name: _foreignAsset Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _foreignAsset, Num: 1
Globalname: _foreignAsset, contract_name: BasePool
End popogation
_foreignAsset_1(IERC20) := foreignAsset_14(IERC20)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for _foreignAsset

Name: _foreignAsset Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_193 cleared
[i] TMP_194 cleared
[i] nativeBalance cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _nativeAsset_1, name: _nativeAsset

Name: _nativeAsset Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _nativeAsset_1, name: _nativeAsset

Name: _nativeAsset Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeBalance_1, name: nativeBalance

Name: nativeBalance Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: nativeBalance, Num: 1
Globalname: nativeBalance, contract_name: BasePool
End popogation
TMP_193 = CONVERT this to address
Converting this
4
[i]Type for TMP_193

Name: TMP_193 Function: swap
Num: 
Den: 
Address: 4
Norm: u
LF: BasePool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_194(uint256) = HIGH_LEVEL_CALL, dest:_nativeAsset_1(IERC20), function:balanceOf, arguments:['TMP_193']  
High Call: balanceOf
Running querryfc
Found: None
Written func info: IERC20, balanceOf
Handling balance function!
u
prev address? u
[i]Type for TMP_194

Name: TMP_194 Function: swap
Num: 7
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
nativeBalance_1(uint256) := TMP_194(uint256)
asgn
Source address: u
Finance type key: (0, -1)
[i]Type for nativeBalance

Name: nativeBalance Function: swap
Num: 7
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
[i] TMP_195 cleared
[i] TMP_196 cleared
[i] foreignBalance cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _foreignAsset_1, name: _foreignAsset

Name: _foreignAsset Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _foreignAsset_1, name: _foreignAsset

Name: _foreignAsset Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: foreignBalance_1, name: foreignBalance

Name: foreignBalance Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: foreignBalance, Num: 1
Globalname: foreignBalance, contract_name: BasePool
End popogation
TMP_195 = CONVERT this to address
Converting this
4
[i]Type for TMP_195

Name: TMP_195 Function: swap
Num: 
Den: 
Address: 4
Norm: u
LF: BasePool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_196(uint256) = HIGH_LEVEL_CALL, dest:_foreignAsset_1(IERC20), function:balanceOf, arguments:['TMP_195']  
High Call: balanceOf
Running querryfc
Found: None
Written func info: IERC20, balanceOf
Handling balance function!
u
prev address? u
[i]Type for TMP_196

Name: TMP_196 Function: swap
Num: 8
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
foreignBalance_1(uint256) := TMP_196(uint256)
asgn
Source address: u
Finance type key: (0, -1)
[i]Type for foreignBalance

Name: foreignBalance Function: swap
Num: 8
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
[i] TMP_197 cleared
[i] TMP_198 cleared
[i] TMP_199 cleared
[i] TMP_200 cleared
[i] TMP_201 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _foreignAsset_1, name: _foreignAsset

Name: _foreignAsset Function: swap
Num: -1
Den: -1
Address: 8
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: swap
Num: 
Den: 
Address: -999
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: _nativeAsset_1, name: _nativeAsset

Name: _nativeAsset Function: swap
Num: -1
Den: -1
Address: 7
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _foreignAsset_1, name: _foreignAsset

Name: _foreignAsset Function: swap
Num: -1
Den: -1
Address: 8
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: swap
Num: 
Den: 
Address: -999
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: _nativeAsset_1, name: _nativeAsset

Name: _nativeAsset Function: swap
Num: -1
Den: -1
Address: 7
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_197 = CONVERT _nativeAsset_1 to address
Converting _nativeAsset_1

Name: _nativeAsset Function: swap
Num: -1
Den: -1
Address: 7
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: 7
[i]Type for TMP_197

Name: TMP_197 Function: swap
Num: -1
Den: -1
Address: 7
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_198(bool) = to_1 != TMP_197
[i]Type for TMP_198

Name: TMP_198 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_199 = CONVERT _foreignAsset_1 to address
Converting _foreignAsset_1

Name: _foreignAsset Function: swap
Num: -1
Den: -1
Address: 8
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: 8
[i]Type for TMP_199

Name: TMP_199 Function: swap
Num: -1
Den: -1
Address: 8
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_200(bool) = to_1 != TMP_199
[i]Type for TMP_200

Name: TMP_200 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_201(bool) = TMP_198 && TMP_200
[i]Type for TMP_201

Name: TMP_201 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_202(None) = SOLIDITY_CALL require(bool,string)(TMP_201,BasePool::swap: Invalid Receiver)
[i]Type for TMP_202

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_203 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: foreignAmountIn_1, name: foreignAmountIn

Name: foreignAmountIn_1 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: foreignAmountIn_1, name: foreignAmountIn

Name: foreignAmountIn_1 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_203(bool) = foreignAmountIn_1 > 0
lnorm: u rnorm: 0
[i]Type for TMP_203

Name: TMP_203 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_215 cleared
[i] TMP_216 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: nativeAmountIn_1, name: nativeAmountIn

Name: nativeAmountIn_1 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeReserve_1, name: nativeReserve

Name: nativeReserve Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeBalance_1, name: nativeBalance

Name: nativeBalance Function: swap
Num: 7
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: nativeAmountIn_1, name: nativeAmountIn

Name: nativeAmountIn_1 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeReserve_1, name: nativeReserve

Name: nativeReserve Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeBalance_1, name: nativeBalance

Name: nativeBalance Function: swap
Num: 7
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
TMP_215(uint256) = nativeBalance_1 (c)- nativeReserve_1
Source address: u
[i]Type for TMP_215

Name: TMP_215 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
TMP_216(bool) = nativeAmountIn_1 <= TMP_215
lnorm: u rnorm: u
[i]Type for TMP_216

Name: TMP_216 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_217(None) = SOLIDITY_CALL require(bool,string)(TMP_216,BasePool::swap: Insufficient Tokens Provided)
[i]Type for TMP_217

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_218 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: nativeAmountIn_1, name: nativeAmountIn

Name: nativeAmountIn_1 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeReserve_1, name: nativeReserve

Name: nativeReserve Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeAmountIn_1, name: nativeAmountIn

Name: nativeAmountIn_1 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeReserve_1, name: nativeReserve

Name: nativeReserve Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_218(bool) = nativeAmountIn_1 <= nativeReserve_1
lnorm: u rnorm: u
[i]Type for TMP_218

Name: TMP_218 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_219(None) = SOLIDITY_CALL require(bool,string)(TMP_218,BasePool::swap: Unfavourable Trade)
[i]Type for TMP_219

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_204 cleared
[i] TMP_205 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: foreignAmountIn_1, name: foreignAmountIn

Name: foreignAmountIn_1 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: foreignReserve_1, name: foreignReserve

Name: foreignReserve Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: foreignBalance_1, name: foreignBalance

Name: foreignBalance Function: swap
Num: 8
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: foreignAmountIn_1, name: foreignAmountIn

Name: foreignAmountIn_1 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: foreignReserve_1, name: foreignReserve

Name: foreignReserve Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: foreignBalance_1, name: foreignBalance

Name: foreignBalance Function: swap
Num: 8
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
TMP_204(uint256) = foreignBalance_1 (c)- foreignReserve_1
Source address: u
[i]Type for TMP_204

Name: TMP_204 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
TMP_205(bool) = foreignAmountIn_1 <= TMP_204
lnorm: u rnorm: u
[i]Type for TMP_205

Name: TMP_205 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_206(None) = SOLIDITY_CALL require(bool,string)(TMP_205,BasePool::swap: Insufficient Tokens Provided)
[i]Type for TMP_206

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_207 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: foreignAmountIn_1, name: foreignAmountIn

Name: foreignAmountIn_1 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: foreignReserve_1, name: foreignReserve

Name: foreignReserve Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: foreignAmountIn_1, name: foreignAmountIn

Name: foreignAmountIn_1 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: foreignReserve_1, name: foreignReserve

Name: foreignReserve Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_207(bool) = foreignAmountIn_1 <= foreignReserve_1
lnorm: u rnorm: u
[i]Type for TMP_207

Name: TMP_207 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_208(None) = SOLIDITY_CALL require(bool,string)(TMP_207,BasePool::swap: Unfavourable Trade)
[i]Type for TMP_208

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_209 cleared
[i] nativeAmountOut cleared
Propogating parameters and globals to SSA variables...
Ssa_name: foreignAmountIn_1, name: foreignAmountIn

Name: foreignAmountIn_1 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeReserve_1, name: nativeReserve

Name: nativeReserve Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: foreignReserve_1, name: foreignReserve

Name: foreignReserve Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: foreignAmountIn_1, name: foreignAmountIn

Name: foreignAmountIn_1 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeReserve_1, name: nativeReserve

Name: nativeReserve Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: foreignReserve_1, name: foreignReserve

Name: foreignReserve Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeAmountOut_1, name: nativeAmountOut

Name: nativeAmountOut Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: nativeAmountOut, Num: 1
Globalname: nativeAmountOut, contract_name: BasePool
End popogation
TMP_209(uint256) = LIBRARY_CALL, dest:VaderMath, function:VaderMath.calculateSwap(uint256,uint256,uint256), arguments:['foreignAmountIn_1', 'foreignReserve_1', 'nativeReserve_1'] 
Found: calculateSwap

Name: foreignAmountIn_1 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: foreignReserve Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: nativeReserve Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
High level cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
New param cache [[[-1], [-1], 'u', None, [], -1, 'u', 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 'u', None, [], -1, 'u'], [[-1], [-1], 'u', None, [], -1, 'u'], [[-1], [-1], 'u', None, [], -1, 'u']]
[i]Type for TMP_209

Name: TMP_209 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
nativeAmountOut_1(uint256) := TMP_209(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for nativeAmountOut

Name: nativeAmountOut Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_220 cleared
[i] foreignAmountOut cleared
Propogating parameters and globals to SSA variables...
Ssa_name: nativeAmountIn_1, name: nativeAmountIn

Name: nativeAmountIn_1 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeReserve_1, name: nativeReserve

Name: nativeReserve Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: foreignReserve_1, name: foreignReserve

Name: foreignReserve Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeAmountIn_1, name: nativeAmountIn

Name: nativeAmountIn_1 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeReserve_1, name: nativeReserve

Name: nativeReserve Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: foreignReserve_1, name: foreignReserve

Name: foreignReserve Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: foreignAmountOut_1, name: foreignAmountOut

Name: foreignAmountOut Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: foreignAmountOut, Num: 1
Globalname: foreignAmountOut, contract_name: BasePool
End popogation
TMP_220(uint256) = LIBRARY_CALL, dest:VaderMath, function:VaderMath.calculateSwap(uint256,uint256,uint256), arguments:['nativeAmountIn_1', 'nativeReserve_1', 'foreignReserve_1'] 
Found: calculateSwap

Name: nativeAmountIn_1 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: nativeReserve Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: foreignReserve Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
High level cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
New param cache [[[-1], [-1], 'u', None, [], -1, 'u', 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 'u', None, [], -1, 'u'], [[-1], [-1], 'u', None, [], -1, 'u'], [[-1], [-1], 'u', None, [], -1, 'u']]
[i]Type for TMP_220

Name: TMP_220 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
foreignAmountOut_1(uint256) := TMP_220(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for foreignAmountOut

Name: foreignAmountOut Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_210 cleared
[i] TMP_211 cleared
[i] TMP_212 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: nativeAmountOut_1, name: nativeAmountOut

Name: nativeAmountOut Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: nativeAmountOut, Num: 1
Globalname: nativeAmountOut, contract_name: BasePool
Ssa_name: nativeReserve_1, name: nativeReserve

Name: nativeReserve Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeAmountOut_1, name: nativeAmountOut

Name: nativeAmountOut Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: nativeAmountOut, Num: 1
Globalname: nativeAmountOut, contract_name: BasePool
Ssa_name: nativeReserve_1, name: nativeReserve

Name: nativeReserve Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_210(bool) = nativeAmountOut_1 > 0
lnorm: u rnorm: 0
Source address: u
Source address: u
[i]Type for TMP_210

Name: TMP_210 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_211(bool) = nativeAmountOut_1 <= nativeReserve_1
lnorm: u rnorm: u
[i]Type for TMP_211

Name: TMP_211 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_212(bool) = TMP_210 && TMP_211
[i]Type for TMP_212

Name: TMP_212 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_213(None) = SOLIDITY_CALL require(bool,string)(TMP_212,BasePool::swap: Swap Impossible)
[i]Type for TMP_213

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_221 cleared
[i] TMP_222 cleared
[i] TMP_223 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: foreignAmountOut_1, name: foreignAmountOut

Name: foreignAmountOut Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: foreignAmountOut, Num: 1
Globalname: foreignAmountOut, contract_name: BasePool
Ssa_name: foreignReserve_1, name: foreignReserve

Name: foreignReserve Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: foreignAmountOut_1, name: foreignAmountOut

Name: foreignAmountOut Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: foreignAmountOut, Num: 1
Globalname: foreignAmountOut, contract_name: BasePool
Ssa_name: foreignReserve_1, name: foreignReserve

Name: foreignReserve Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_221(bool) = foreignAmountOut_1 > 0
lnorm: u rnorm: 0
Source address: u
Source address: u
[i]Type for TMP_221

Name: TMP_221 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_222(bool) = foreignAmountOut_1 <= foreignReserve_1
lnorm: u rnorm: u
[i]Type for TMP_222

Name: TMP_222 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_223(bool) = TMP_221 && TMP_222
[i]Type for TMP_223

Name: TMP_223 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_224(None) = SOLIDITY_CALL require(bool,string)(TMP_223,BasePool::swap: Swap Impossible)
[i]Type for TMP_224

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: nativeAmountOut_1, name: nativeAmountOut

Name: nativeAmountOut Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: swap
Num: 
Den: 
Address: -999
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: _nativeAsset_1, name: _nativeAsset

Name: _nativeAsset Function: swap
Num: -1
Den: -1
Address: 7
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeAmountOut_1, name: nativeAmountOut

Name: nativeAmountOut Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: swap
Num: 
Den: 
Address: -999
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: _nativeAsset_1, name: _nativeAsset

Name: _nativeAsset Function: swap
Num: -1
Den: -1
Address: 7
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
LIBRARY_CALL, dest:SafeERC20, function:SafeERC20.safeTransfer(IERC20,address,uint256), arguments:['_nativeAsset_1', 'to_1', 'nativeAmountOut_1'] 
[i] nativeAmountOut cleared
[i] foreignAmountOut cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: nativeAmountOut_2, name: nativeAmountOut

Name: nativeAmountOut Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: nativeAmountOut, Num: 2
Globalname: nativeAmountOut, contract_name: BasePool
Ssa_name: foreignAmountOut_2, name: foreignAmountOut

Name: foreignAmountOut Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: foreignAmountOut, Num: 2
Globalname: foreignAmountOut, contract_name: BasePool
nativeAmountOut_2(uint256) := ϕ(['nativeAmountOut_0', 'nativeAmountOut_1'])
Phi

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: nativeAmountOut Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for nativeAmountOut

Name: nativeAmountOut Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
foreignAmountOut_2(uint256) := ϕ(['foreignAmountOut_0', 'foreignAmountOut_1'])
Phi

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: foreignAmountOut Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for foreignAmountOut

Name: foreignAmountOut Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: foreignAmountOut_1, name: foreignAmountOut

Name: foreignAmountOut Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _foreignAsset_1, name: _foreignAsset

Name: _foreignAsset Function: swap
Num: -1
Den: -1
Address: 8
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: swap
Num: 
Den: 
Address: -999
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: foreignAmountOut_1, name: foreignAmountOut

Name: foreignAmountOut Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _foreignAsset_1, name: _foreignAsset

Name: _foreignAsset Function: swap
Num: -1
Den: -1
Address: 8
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: swap
Num: 
Den: 
Address: -999
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
End popogation
LIBRARY_CALL, dest:SafeERC20, function:SafeERC20.safeTransfer(IERC20,address,uint256), arguments:['_foreignAsset_1', 'to_1', 'foreignAmountOut_1'] 
[i] TMP_226 cleared
[i] TMP_227 cleared
[i] nativeBalance cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _nativeAsset_1, name: _nativeAsset

Name: _nativeAsset Function: swap
Num: -1
Den: -1
Address: 7
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _nativeAsset_1, name: _nativeAsset

Name: _nativeAsset Function: swap
Num: -1
Den: -1
Address: 7
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeBalance_2, name: nativeBalance

Name: nativeBalance Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: nativeBalance, Num: 2
Globalname: nativeBalance, contract_name: BasePool
End popogation
TMP_226 = CONVERT this to address
Converting this
4
[i]Type for TMP_226

Name: TMP_226 Function: swap
Num: 
Den: 
Address: 4
Norm: u
LF: BasePool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_227(uint256) = HIGH_LEVEL_CALL, dest:_nativeAsset_1(IERC20), function:balanceOf, arguments:['TMP_226']  
High Call: balanceOf
Running querryfc
Found: None
Written func info: IERC20, balanceOf
Handling balance function!
7
[i]Type for TMP_227

Name: TMP_227 Function: swap
Num: 7
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
nativeBalance_2(uint256) := TMP_227(uint256)
asgn
Source address: u
Finance type key: (0, -1)
[i]Type for nativeBalance

Name: nativeBalance Function: swap
Num: 7
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
[i] TMP_228 cleared
[i] TMP_229 cleared
[i] foreignBalance cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _foreignAsset_1, name: _foreignAsset

Name: _foreignAsset Function: swap
Num: -1
Den: -1
Address: 8
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _foreignAsset_1, name: _foreignAsset

Name: _foreignAsset Function: swap
Num: -1
Den: -1
Address: 8
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: foreignBalance_2, name: foreignBalance

Name: foreignBalance Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: foreignBalance, Num: 2
Globalname: foreignBalance, contract_name: BasePool
End popogation
TMP_228 = CONVERT this to address
Converting this
4
[i]Type for TMP_228

Name: TMP_228 Function: swap
Num: 
Den: 
Address: 4
Norm: u
LF: BasePool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_229(uint256) = HIGH_LEVEL_CALL, dest:_foreignAsset_1(IERC20), function:balanceOf, arguments:['TMP_228']  
High Call: balanceOf
Running querryfc
Found: None
Written func info: IERC20, balanceOf
Handling balance function!
8
[i]Type for TMP_229

Name: TMP_229 Function: swap
Num: 8
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
foreignBalance_2(uint256) := TMP_229(uint256)
asgn
Source address: u
Finance type key: (0, -1)
[i]Type for foreignBalance

Name: foreignBalance Function: swap
Num: 8
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: nativeReserve_1, name: nativeReserve

Name: nativeReserve Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: foreignReserve_1, name: foreignReserve

Name: foreignReserve Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeBalance_2, name: nativeBalance

Name: nativeBalance Function: swap
Num: 7
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: foreignBalance_2, name: foreignBalance

Name: foreignBalance Function: swap
Num: 8
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: nativeReserve_1, name: nativeReserve

Name: nativeReserve Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: foreignReserve_1, name: foreignReserve

Name: foreignReserve Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeBalance_2, name: nativeBalance

Name: nativeBalance Function: swap
Num: 7
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: foreignBalance_2, name: foreignBalance

Name: foreignBalance Function: swap
Num: 8
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
INTERNAL_CALL, BasePool._update(uint256,uint256,uint112,uint112)(nativeBalance_2,foreignBalance_2,nativeReserve_1,foreignReserve_1)
New param cache [[[7], [-1], 'u', None, [], 0, 'u', 'u'], [[8], [-1], 'u', None, [], 0, 'u', 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[5], [-1], 'u', None, [], 0, 'u'], [[6], [-1], 'u', None, [], 0, 'u'], [[-1], [-1], 'u', None, [], -1, 'u'], [[-1], [-1], 'u', None, [], -1, 'u']]
[[7], [-1], 'u', None, [], 0, 'u', 'u']

Name: balanceNative Function: None
Num: 7
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
[[8], [-1], 'u', None, [], 0, 'u', 'u']

Name: balanceForeign Function: None
Num: 8
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: reserveNative Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: reserveForeign Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_update(uint256,uint256,uint112,uint112)
Propogating All
Propogating All
balanceNative_1
Ssa_name: balanceNative_1, name: balanceNative

Name: balanceNative Function: _update
Num: 7
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Source address: u

Name: balanceNative_1 Function: _update
Num: 7
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
balanceForeign_1
Ssa_name: balanceForeign_1, name: balanceForeign

Name: balanceForeign Function: _update
Num: 8
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Source address: u

Name: balanceForeign_1 Function: _update
Num: 8
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
Propogating All
Propogating All
blockTimestamp_1
Ssa_name: blockTimestamp_1, name: blockTimestamp

Name: blockTimestamp Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
reserveNative_1
Ssa_name: reserveNative_1, name: reserveNative

Name: reserveNative Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: reserveNative_1 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
timeElapsed_1
Ssa_name: timeElapsed_1, name: timeElapsed

Name: timeElapsed Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
reserveForeign_1
Ssa_name: reserveForeign_1, name: reserveForeign

Name: reserveForeign Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: reserveForeign_1 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
reserveNative_1
Ssa_name: reserveNative_1, name: reserveNative

Name: reserveNative_1 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: reserveNative_1 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
timeElapsed_1
Ssa_name: timeElapsed_1, name: timeElapsed

Name: timeElapsed Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
reserveForeign_1
Ssa_name: reserveForeign_1, name: reserveForeign

Name: reserveForeign_1 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: reserveForeign_1 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
balanceNative_1
Ssa_name: balanceNative_1, name: balanceNative

Name: balanceNative_1 Function: _update
Num: 7
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Source address: u

Name: balanceNative_1 Function: _update
Num: 7
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
Propogating All
reserveNative_1
Ssa_name: reserveNative_1, name: reserveNative

Name: reserveNative_1 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: reserveNative_1 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
timeElapsed_1
Ssa_name: timeElapsed_1, name: timeElapsed

Name: timeElapsed Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
reserveForeign_1
Ssa_name: reserveForeign_1, name: reserveForeign

Name: reserveForeign_1 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: reserveForeign_1 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
balanceForeign_1
Ssa_name: balanceForeign_1, name: balanceForeign

Name: balanceForeign_1 Function: _update
Num: 8
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Source address: u

Name: balanceForeign_1 Function: _update
Num: 8
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
Propogating All
blockTimestamp_1
Ssa_name: blockTimestamp_1, name: blockTimestamp

Name: blockTimestamp Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
balanceNative_1
Ssa_name: balanceNative_1, name: balanceNative

Name: balanceNative_1 Function: _update
Num: 7
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Source address: u

Name: balanceNative_1 Function: _update
Num: 7
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
balanceForeign_1
Ssa_name: balanceForeign_1, name: balanceForeign

Name: balanceForeign_1 Function: _update
Num: 8
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Source address: u

Name: balanceForeign_1 Function: _update
Num: 8
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
[i] balanceNative cleared
[i] balanceForeign cleared
[i] reserveNative cleared
[i] reserveForeign cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: balanceNative_1, name: balanceNative

Name: balanceNative_1 Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: balanceNative_1 Function: _update
Num: 7
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
Ssa_name: balanceForeign_1, name: balanceForeign

Name: balanceForeign_1 Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: balanceForeign_1 Function: _update
Num: 8
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
Ssa_name: reserveNative_1, name: reserveNative

Name: reserveNative_1 Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: reserveNative_1 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: reserveForeign_1, name: reserveForeign

Name: reserveForeign_1 Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: reserveForeign_1 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: priceNativeCumulativeLast_1, name: priceNativeCumulativeLast

Name: priceNativeCumulativeLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: priceForeignCumulativeLast_1, name: priceForeignCumulativeLast

Name: priceForeignCumulativeLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _blockTimestampLast_2, name: _blockTimestampLast

Name: _blockTimestampLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
balanceNative_1(uint256) := ϕ(['nativeBalance_2', 'balanceNative_1', 'nativeBalance_2'])
Phi
[i]Type for balanceNative

Name: balanceNative Function: _update
Num: 7
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
balanceForeign_1(uint256) := ϕ(['balanceForeign_1', 'foreignBalance_2', 'foreignBalance_2'])
Phi
[i]Type for balanceForeign

Name: balanceForeign Function: _update
Num: 8
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
reserveNative_1(uint112) := ϕ(['reserveNative_1', 'nativeReserve_1', 'reserveNative_1'])
Phi
[i]Type for reserveNative

Name: reserveNative Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
reserveForeign_1(uint112) := ϕ(['reserveForeign_1', 'foreignReserve_1', 'reserveForeign_1'])
Phi
[i]Type for reserveForeign

Name: reserveForeign Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
priceNativeCumulativeLast_1(uint256) := ϕ(['priceNativeCumulativeLast_0', 'priceNativeCumulativeLast_2'])
Phi
[i]Type for priceNativeCumulativeLast

Name: priceNativeCumulativeLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
priceForeignCumulativeLast_1(uint256) := ϕ(['priceForeignCumulativeLast_0', 'priceForeignCumulativeLast_2'])
Phi
[i]Type for priceForeignCumulativeLast

Name: priceForeignCumulativeLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_blockTimestampLast_2(uint32) := ϕ(['_blockTimestampLast_3', '_blockTimestampLast_0'])
Phi
[i]Type for _blockTimestampLast

Name: _blockTimestampLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_235 cleared
[i] TMP_236 cleared
[i] TMP_238 cleared
[i] TMP_239 cleared
[i] TMP_240 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: balanceNative_1, name: balanceNative

Name: balanceNative Function: _update
Num: 7
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: balanceForeign_1, name: balanceForeign

Name: balanceForeign Function: _update
Num: 8
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: balanceNative_1, name: balanceNative

Name: balanceNative Function: _update
Num: 7
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: balanceForeign_1, name: balanceForeign

Name: balanceForeign Function: _update
Num: 8
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
TMP_235(uint112) := 5192296858534827628530496329220095(uint112)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for TMP_235

Name: TMP_235 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 5192296858534827628530496329220095
Fields: 
Finance Type: undef
XXXX
TMP_236(bool) = balanceNative_1 <= TMP_235
lnorm: u rnorm: 0
[i]Type for TMP_236

Name: TMP_236 Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_238(uint112) := 5192296858534827628530496329220095(uint112)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for TMP_238

Name: TMP_238 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 5192296858534827628530496329220095
Fields: 
Finance Type: undef
XXXX
TMP_239(bool) = balanceForeign_1 <= TMP_238
lnorm: u rnorm: 0
[i]Type for TMP_239

Name: TMP_239 Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_240(bool) = TMP_236 && TMP_239
[i]Type for TMP_240

Name: TMP_240 Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_241(None) = SOLIDITY_CALL require(bool,string)(TMP_240,BasePool::_update: Balance Overflow)
[i]Type for TMP_241

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_242 cleared
[i] TMP_243 cleared
[i] TMP_244 cleared
[i] blockTimestamp cleared
Propogating parameters and globals to SSA variables...
Ssa_name: blockTimestamp_1, name: blockTimestamp

Name: blockTimestamp Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: blockTimestamp, Num: 1
Globalname: blockTimestamp, contract_name: BasePool
End popogation
TMP_242(uint256) = 2 (c)** 32
[i]Type for TMP_242

Name: TMP_242 Function: _update
Num: 
Den: 
Address: u
Norm: 32
LF: None
Value: 4294967296
Fields: 
Finance Type: undef
XXXX
TMP_243(uint256) = block.timestamp (c)% TMP_242
[i]Type for TMP_243

Name: TMP_243 Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_244 = CONVERT TMP_243 to uint32
Converting TMP_243

Name: TMP_243 Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_244

Name: TMP_244 Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
blockTimestamp_1(uint32) := TMP_244(uint32)
asgn
Finance type key: (-1, -1)
[i]Type for blockTimestamp

Name: blockTimestamp Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_245 cleared
[i] timeElapsed cleared
Propogating parameters and globals to SSA variables...
Ssa_name: blockTimestamp_1, name: blockTimestamp

Name: blockTimestamp Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: blockTimestamp, Num: 1
Globalname: blockTimestamp, contract_name: BasePool
Ssa_name: _blockTimestampLast_2, name: _blockTimestampLast

Name: _blockTimestampLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: blockTimestamp_1, name: blockTimestamp

Name: blockTimestamp Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: blockTimestamp, Num: 1
Globalname: blockTimestamp, contract_name: BasePool
Ssa_name: _blockTimestampLast_2, name: _blockTimestampLast

Name: _blockTimestampLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: timeElapsed_1, name: timeElapsed

Name: timeElapsed Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: timeElapsed, Num: 1
Globalname: timeElapsed, contract_name: BasePool
End popogation
TMP_245(uint32) = blockTimestamp_1 (c)- _blockTimestampLast_2
Source address: u
[i]Type for TMP_245

Name: TMP_245 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
timeElapsed_1(uint32) := TMP_245(uint32)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for timeElapsed

Name: timeElapsed Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_246 cleared
[i] TMP_247 cleared
[i] TMP_248 cleared
[i] TMP_249 cleared
[i] TMP_250 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveNative_1, name: reserveNative

Name: reserveNative Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: timeElapsed_1, name: timeElapsed

Name: timeElapsed Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: reserveForeign_1, name: reserveForeign

Name: reserveForeign Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: reserveNative_1, name: reserveNative

Name: reserveNative Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: timeElapsed_1, name: timeElapsed

Name: timeElapsed Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: reserveForeign_1, name: reserveForeign

Name: reserveForeign Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_246(bool) = timeElapsed_1 > 0
lnorm: u rnorm: 0
[i]Type for TMP_246

Name: TMP_246 Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_247(bool) = reserveNative_1 != 0
[i]Type for TMP_247

Name: TMP_247 Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_248(bool) = TMP_246 && TMP_247
[i]Type for TMP_248

Name: TMP_248 Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_249(bool) = reserveForeign_1 != 0
[i]Type for TMP_249

Name: TMP_249 Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_250(bool) = TMP_248 && TMP_249
[i]Type for TMP_250

Name: TMP_250 Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_251 cleared
[i] TMP_252 cleared
[i] TMP_253 cleared
[i] TMP_254 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveNative_1, name: reserveNative

Name: reserveNative Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: timeElapsed_1, name: timeElapsed

Name: timeElapsed Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: reserveForeign_1, name: reserveForeign

Name: reserveForeign Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: priceNativeCumulativeLast_1, name: priceNativeCumulativeLast

Name: priceNativeCumulativeLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: reserveNative_1, name: reserveNative

Name: reserveNative Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: timeElapsed_1, name: timeElapsed

Name: timeElapsed Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: priceNativeCumulativeLast_1, name: priceNativeCumulativeLast

Name: priceNativeCumulativeLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: reserveForeign_1, name: reserveForeign

Name: reserveForeign Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: priceNativeCumulativeLast_2, name: priceNativeCumulativeLast

Name: priceNativeCumulativeLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_251(uint224) = LIBRARY_CALL, dest:UQ112x112, function:UQ112x112.encode(uint112), arguments:['reserveForeign_1'] 
Found: None
Written func info: UQ112x112, encode
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
reserveForeign
hers norm: u
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
reserveForeign
hers norm: u
([-1], [-1, -1], 'u', "'u'", 'u', -1)
[i]Type for TMP_251

Name: TMP_251 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
TMP_252(uint224) = LIBRARY_CALL, dest:UQ112x112, function:UQ112x112.uqdiv(uint224,uint112), arguments:['TMP_251', 'reserveNative_1'] 
Found: None
Written func info: UQ112x112, uqdiv
Retvar: ('t', ['1'], ['2'], 1, "'u'", 'u')
TMP_251
reserveNative
hers norm: u
Retvar: ('t', ['1'], ['2'], 1, "'u'", 'u')
TMP_251
reserveNative
hers norm: u
([-1, -1], [-1, -1], 'u', "'u'", 'u', -1)
[i]Type for TMP_252

Name: TMP_252 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
TMP_253 = CONVERT TMP_252 to uint256
Converting TMP_252

Name: TMP_252 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_253

Name: TMP_253 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
TMP_254(uint256) = TMP_253 (c)* timeElapsed_1
lnorm: u rnorm: u
Source address: u
[i]Type for TMP_254

Name: TMP_254 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
priceNativeCumulativeLast_2(uint256) = priceNativeCumulativeLast_1 (c)+ TMP_254
Source address: u
[i]Type for priceNativeCumulativeLast

Name: priceNativeCumulativeLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Copied priceNativeCumulativeLast
Source address: u
[i] TMP_259 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: balanceNative_1, name: balanceNative

Name: balanceNative Function: _update
Num: 7
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: balanceNative_1, name: balanceNative

Name: balanceNative Function: _update
Num: 7
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: _reserveNative_2, name: _reserveNative

Name: _reserveNative Function: _update
Num: 7
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
TMP_259 = CONVERT balanceNative_1 to uint112
Converting balanceNative_1

Name: balanceNative Function: _update
Num: 7
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Source address: u
[i]Type for TMP_259

Name: TMP_259 Function: _update
Num: 7
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
_reserveNative_2(uint112) := TMP_259(uint112)
asgn
7
-1
Finance type key: (0, -1)
[i]Type for _reserveNative

Name: _reserveNative Function: _update
Num: 7
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
Copied _reserveNative
Source address: u
[i] TMP_255 cleared
[i] TMP_256 cleared
[i] TMP_257 cleared
[i] TMP_258 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveNative_1, name: reserveNative

Name: reserveNative Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: timeElapsed_1, name: timeElapsed

Name: timeElapsed Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: reserveForeign_1, name: reserveForeign

Name: reserveForeign Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: priceForeignCumulativeLast_1, name: priceForeignCumulativeLast

Name: priceForeignCumulativeLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: reserveNative_1, name: reserveNative

Name: reserveNative Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: priceForeignCumulativeLast_1, name: priceForeignCumulativeLast

Name: priceForeignCumulativeLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: timeElapsed_1, name: timeElapsed

Name: timeElapsed Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: reserveForeign_1, name: reserveForeign

Name: reserveForeign Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: priceForeignCumulativeLast_2, name: priceForeignCumulativeLast

Name: priceForeignCumulativeLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_255(uint224) = LIBRARY_CALL, dest:UQ112x112, function:UQ112x112.encode(uint112), arguments:['reserveNative_1'] 
Found: None
Written func info: UQ112x112, encode
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
reserveNative
hers norm: u
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
reserveNative
hers norm: u
([-1], [-1, -1], 'u', "'u'", 'u', -1)
[i]Type for TMP_255

Name: TMP_255 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
TMP_256(uint224) = LIBRARY_CALL, dest:UQ112x112, function:UQ112x112.uqdiv(uint224,uint112), arguments:['TMP_255', 'reserveForeign_1'] 
Found: None
Written func info: UQ112x112, uqdiv
Retvar: ('t', ['1'], ['2'], 1, "'u'", 'u')
TMP_255
reserveForeign
hers norm: u
Retvar: ('t', ['1'], ['2'], 1, "'u'", 'u')
TMP_255
reserveForeign
hers norm: u
([-1, -1], [-1, -1], 'u', "'u'", 'u', -1)
[i]Type for TMP_256

Name: TMP_256 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
TMP_257 = CONVERT TMP_256 to uint256
Converting TMP_256

Name: TMP_256 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_257

Name: TMP_257 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
TMP_258(uint256) = TMP_257 (c)* timeElapsed_1
lnorm: u rnorm: u
Source address: u
[i]Type for TMP_258

Name: TMP_258 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
priceForeignCumulativeLast_2(uint256) = priceForeignCumulativeLast_1 (c)+ TMP_258
Source address: u
[i]Type for priceForeignCumulativeLast

Name: priceForeignCumulativeLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Copied priceForeignCumulativeLast
Source address: u
[i] TMP_260 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: balanceForeign_1, name: balanceForeign

Name: balanceForeign Function: _update
Num: 8
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: balanceForeign_1, name: balanceForeign

Name: balanceForeign Function: _update
Num: 8
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: _reserveForeign_2, name: _reserveForeign

Name: _reserveForeign Function: _update
Num: 8
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
TMP_260 = CONVERT balanceForeign_1 to uint112
Converting balanceForeign_1

Name: balanceForeign Function: _update
Num: 8
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Source address: u
[i]Type for TMP_260

Name: TMP_260 Function: _update
Num: 8
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
_reserveForeign_2(uint112) := TMP_260(uint112)
asgn
8
-1
Finance type key: (0, -1)
[i]Type for _reserveForeign

Name: _reserveForeign Function: _update
Num: 8
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
Copied _reserveForeign
Source address: u
Propogating parameters and globals to SSA variables...
Ssa_name: blockTimestamp_1, name: blockTimestamp

Name: blockTimestamp Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: blockTimestamp, Num: 1
Globalname: blockTimestamp, contract_name: BasePool
Ssa_name: blockTimestamp_1, name: blockTimestamp

Name: blockTimestamp Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: blockTimestamp, Num: 1
Globalname: blockTimestamp, contract_name: BasePool
Ssa_name: _blockTimestampLast_3, name: _blockTimestampLast

Name: _blockTimestampLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
_blockTimestampLast_3(uint32) := blockTimestamp_1(uint32)
asgn
Finance type key: (-1, -1)
[i]Type for _blockTimestampLast

Name: _blockTimestampLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Copied _blockTimestampLast
Source address: u
Propogating parameters and globals to SSA variables...
Ssa_name: balanceNative_1, name: balanceNative

Name: balanceNative Function: _update
Num: 7
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: balanceForeign_1, name: balanceForeign

Name: balanceForeign Function: _update
Num: 8
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: balanceNative_1, name: balanceNative

Name: balanceNative Function: _update
Num: 7
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: balanceForeign_1, name: balanceForeign

Name: balanceForeign Function: _update
Num: 8
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
[i] balanceNative cleared
[i] balanceForeign cleared
[i] reserveNative cleared
[i] reserveForeign cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: balanceNative_1, name: balanceNative

Name: balanceNative Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: balanceNative_1 Function: _update
Num: 7
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
Ssa_name: balanceForeign_1, name: balanceForeign

Name: balanceForeign Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: balanceForeign_1 Function: _update
Num: 8
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
Ssa_name: reserveNative_1, name: reserveNative

Name: reserveNative Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: reserveNative_1 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: reserveForeign_1, name: reserveForeign

Name: reserveForeign Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: reserveForeign_1 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: priceNativeCumulativeLast_1, name: priceNativeCumulativeLast

Name: priceNativeCumulativeLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: priceForeignCumulativeLast_1, name: priceForeignCumulativeLast

Name: priceForeignCumulativeLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _blockTimestampLast_2, name: _blockTimestampLast

Name: _blockTimestampLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
balanceNative_1(uint256) := ϕ(['nativeBalance_2', 'balanceNative_1', 'nativeBalance_2'])
Phi
[i]Type for balanceNative

Name: balanceNative Function: _update
Num: 7
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
balanceForeign_1(uint256) := ϕ(['balanceForeign_1', 'foreignBalance_2', 'foreignBalance_2'])
Phi
[i]Type for balanceForeign

Name: balanceForeign Function: _update
Num: 8
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
reserveNative_1(uint112) := ϕ(['reserveNative_1', 'nativeReserve_1', 'reserveNative_1'])
Phi
[i]Type for reserveNative

Name: reserveNative Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
reserveForeign_1(uint112) := ϕ(['reserveForeign_1', 'foreignReserve_1', 'reserveForeign_1'])
Phi
[i]Type for reserveForeign

Name: reserveForeign Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
priceNativeCumulativeLast_1(uint256) := ϕ(['priceNativeCumulativeLast_0', 'priceNativeCumulativeLast_2'])
Phi
[i]Type for priceNativeCumulativeLast

Name: priceNativeCumulativeLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
priceForeignCumulativeLast_1(uint256) := ϕ(['priceForeignCumulativeLast_0', 'priceForeignCumulativeLast_2'])
Phi
[i]Type for priceForeignCumulativeLast

Name: priceForeignCumulativeLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_blockTimestampLast_2(uint32) := ϕ(['_blockTimestampLast_3', '_blockTimestampLast_0'])
Phi
[i]Type for _blockTimestampLast

Name: _blockTimestampLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_235 cleared
[i] TMP_236 cleared
[i] TMP_238 cleared
[i] TMP_239 cleared
[i] TMP_240 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: balanceNative_1, name: balanceNative

Name: balanceNative Function: _update
Num: 7
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: balanceForeign_1, name: balanceForeign

Name: balanceForeign Function: _update
Num: 8
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: balanceNative_1, name: balanceNative

Name: balanceNative Function: _update
Num: 7
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: balanceForeign_1, name: balanceForeign

Name: balanceForeign Function: _update
Num: 8
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
TMP_235(uint112) := 5192296858534827628530496329220095(uint112)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for TMP_235

Name: TMP_235 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 5192296858534827628530496329220095
Fields: 
Finance Type: undef
XXXX
TMP_236(bool) = balanceNative_1 <= TMP_235
lnorm: u rnorm: 0
[i]Type for TMP_236

Name: TMP_236 Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_238(uint112) := 5192296858534827628530496329220095(uint112)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for TMP_238

Name: TMP_238 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 5192296858534827628530496329220095
Fields: 
Finance Type: undef
XXXX
TMP_239(bool) = balanceForeign_1 <= TMP_238
lnorm: u rnorm: 0
[i]Type for TMP_239

Name: TMP_239 Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_240(bool) = TMP_236 && TMP_239
[i]Type for TMP_240

Name: TMP_240 Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_241(None) = SOLIDITY_CALL require(bool,string)(TMP_240,BasePool::_update: Balance Overflow)
[i]Type for TMP_241

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_242 cleared
[i] TMP_243 cleared
[i] TMP_244 cleared
[i] blockTimestamp cleared
Propogating parameters and globals to SSA variables...
Ssa_name: blockTimestamp_1, name: blockTimestamp

Name: blockTimestamp Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: blockTimestamp, Num: 1
Globalname: blockTimestamp, contract_name: BasePool
End popogation
TMP_242(uint256) = 2 (c)** 32
[i]Type for TMP_242

Name: TMP_242 Function: _update
Num: 
Den: 
Address: u
Norm: 32
LF: None
Value: 4294967296
Fields: 
Finance Type: undef
XXXX
TMP_243(uint256) = block.timestamp (c)% TMP_242
[i]Type for TMP_243

Name: TMP_243 Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_244 = CONVERT TMP_243 to uint32
Converting TMP_243

Name: TMP_243 Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_244

Name: TMP_244 Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
blockTimestamp_1(uint32) := TMP_244(uint32)
asgn
Finance type key: (-1, -1)
[i]Type for blockTimestamp

Name: blockTimestamp Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_245 cleared
[i] timeElapsed cleared
Propogating parameters and globals to SSA variables...
Ssa_name: blockTimestamp_1, name: blockTimestamp

Name: blockTimestamp Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: blockTimestamp, Num: 1
Globalname: blockTimestamp, contract_name: BasePool
Ssa_name: _blockTimestampLast_2, name: _blockTimestampLast

Name: _blockTimestampLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: blockTimestamp_1, name: blockTimestamp

Name: blockTimestamp Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: blockTimestamp, Num: 1
Globalname: blockTimestamp, contract_name: BasePool
Ssa_name: _blockTimestampLast_2, name: _blockTimestampLast

Name: _blockTimestampLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: timeElapsed_1, name: timeElapsed

Name: timeElapsed Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: timeElapsed, Num: 1
Globalname: timeElapsed, contract_name: BasePool
End popogation
TMP_245(uint32) = blockTimestamp_1 (c)- _blockTimestampLast_2
Source address: u
[i]Type for TMP_245

Name: TMP_245 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
timeElapsed_1(uint32) := TMP_245(uint32)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for timeElapsed

Name: timeElapsed Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_246 cleared
[i] TMP_247 cleared
[i] TMP_248 cleared
[i] TMP_249 cleared
[i] TMP_250 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveNative_1, name: reserveNative

Name: reserveNative Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: timeElapsed_1, name: timeElapsed

Name: timeElapsed Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: reserveForeign_1, name: reserveForeign

Name: reserveForeign Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: reserveNative_1, name: reserveNative

Name: reserveNative Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: timeElapsed_1, name: timeElapsed

Name: timeElapsed Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: reserveForeign_1, name: reserveForeign

Name: reserveForeign Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_246(bool) = timeElapsed_1 > 0
lnorm: u rnorm: 0
[i]Type for TMP_246

Name: TMP_246 Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_247(bool) = reserveNative_1 != 0
[i]Type for TMP_247

Name: TMP_247 Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_248(bool) = TMP_246 && TMP_247
[i]Type for TMP_248

Name: TMP_248 Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_249(bool) = reserveForeign_1 != 0
[i]Type for TMP_249

Name: TMP_249 Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_250(bool) = TMP_248 && TMP_249
[i]Type for TMP_250

Name: TMP_250 Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_251 cleared
[i] TMP_252 cleared
[i] TMP_253 cleared
[i] TMP_254 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveNative_1, name: reserveNative

Name: reserveNative Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: timeElapsed_1, name: timeElapsed

Name: timeElapsed Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: reserveForeign_1, name: reserveForeign

Name: reserveForeign Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: priceNativeCumulativeLast_1, name: priceNativeCumulativeLast

Name: priceNativeCumulativeLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: reserveNative_1, name: reserveNative

Name: reserveNative Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: timeElapsed_1, name: timeElapsed

Name: timeElapsed Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: priceNativeCumulativeLast_1, name: priceNativeCumulativeLast

Name: priceNativeCumulativeLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: reserveForeign_1, name: reserveForeign

Name: reserveForeign Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: priceNativeCumulativeLast_2, name: priceNativeCumulativeLast

Name: priceNativeCumulativeLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_251(uint224) = LIBRARY_CALL, dest:UQ112x112, function:UQ112x112.encode(uint112), arguments:['reserveForeign_1'] 
Found: None
Written func info: UQ112x112, encode
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
reserveForeign
hers norm: u
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
reserveForeign
hers norm: u
([-1], [-1, -1], 'u', "'u'", 'u', -1)
[i]Type for TMP_251

Name: TMP_251 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
TMP_252(uint224) = LIBRARY_CALL, dest:UQ112x112, function:UQ112x112.uqdiv(uint224,uint112), arguments:['TMP_251', 'reserveNative_1'] 
Found: None
Written func info: UQ112x112, uqdiv
Retvar: ('t', ['1'], ['2'], 1, "'u'", 'u')
TMP_251
reserveNative
hers norm: u
Retvar: ('t', ['1'], ['2'], 1, "'u'", 'u')
TMP_251
reserveNative
hers norm: u
([-1, -1], [-1, -1], 'u', "'u'", 'u', -1)
[i]Type for TMP_252

Name: TMP_252 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
TMP_253 = CONVERT TMP_252 to uint256
Converting TMP_252

Name: TMP_252 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_253

Name: TMP_253 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
TMP_254(uint256) = TMP_253 (c)* timeElapsed_1
lnorm: u rnorm: u
Source address: u
[i]Type for TMP_254

Name: TMP_254 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
priceNativeCumulativeLast_2(uint256) = priceNativeCumulativeLast_1 (c)+ TMP_254
Source address: u
[i]Type for priceNativeCumulativeLast

Name: priceNativeCumulativeLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Copied priceNativeCumulativeLast
Source address: u
[i] TMP_259 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: balanceNative_1, name: balanceNative

Name: balanceNative Function: _update
Num: 7
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: balanceNative_1, name: balanceNative

Name: balanceNative Function: _update
Num: 7
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: _reserveNative_2, name: _reserveNative

Name: _reserveNative Function: _update
Num: 7
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
TMP_259 = CONVERT balanceNative_1 to uint112
Converting balanceNative_1

Name: balanceNative Function: _update
Num: 7
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Source address: u
[i]Type for TMP_259

Name: TMP_259 Function: _update
Num: 7
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
_reserveNative_2(uint112) := TMP_259(uint112)
asgn
7
-1
Finance type key: (0, -1)
[i]Type for _reserveNative

Name: _reserveNative Function: _update
Num: 7
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
Copied _reserveNative
Source address: u
[i] TMP_255 cleared
[i] TMP_256 cleared
[i] TMP_257 cleared
[i] TMP_258 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveNative_1, name: reserveNative

Name: reserveNative Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: timeElapsed_1, name: timeElapsed

Name: timeElapsed Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: reserveForeign_1, name: reserveForeign

Name: reserveForeign Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: priceForeignCumulativeLast_1, name: priceForeignCumulativeLast

Name: priceForeignCumulativeLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: reserveNative_1, name: reserveNative

Name: reserveNative Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: priceForeignCumulativeLast_1, name: priceForeignCumulativeLast

Name: priceForeignCumulativeLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: timeElapsed_1, name: timeElapsed

Name: timeElapsed Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: reserveForeign_1, name: reserveForeign

Name: reserveForeign Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: priceForeignCumulativeLast_2, name: priceForeignCumulativeLast

Name: priceForeignCumulativeLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_255(uint224) = LIBRARY_CALL, dest:UQ112x112, function:UQ112x112.encode(uint112), arguments:['reserveNative_1'] 
Found: None
Written func info: UQ112x112, encode
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
reserveNative
hers norm: u
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
reserveNative
hers norm: u
([-1], [-1, -1], 'u', "'u'", 'u', -1)
[i]Type for TMP_255

Name: TMP_255 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
TMP_256(uint224) = LIBRARY_CALL, dest:UQ112x112, function:UQ112x112.uqdiv(uint224,uint112), arguments:['TMP_255', 'reserveForeign_1'] 
Found: None
Written func info: UQ112x112, uqdiv
Retvar: ('t', ['1'], ['2'], 1, "'u'", 'u')
TMP_255
reserveForeign
hers norm: u
Retvar: ('t', ['1'], ['2'], 1, "'u'", 'u')
TMP_255
reserveForeign
hers norm: u
([-1, -1], [-1, -1], 'u', "'u'", 'u', -1)
[i]Type for TMP_256

Name: TMP_256 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
TMP_257 = CONVERT TMP_256 to uint256
Converting TMP_256

Name: TMP_256 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_257

Name: TMP_257 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
TMP_258(uint256) = TMP_257 (c)* timeElapsed_1
lnorm: u rnorm: u
Source address: u
[i]Type for TMP_258

Name: TMP_258 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
priceForeignCumulativeLast_2(uint256) = priceForeignCumulativeLast_1 (c)+ TMP_258
Source address: u
[i]Type for priceForeignCumulativeLast

Name: priceForeignCumulativeLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Copied priceForeignCumulativeLast
Source address: u
[i] TMP_260 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: balanceForeign_1, name: balanceForeign

Name: balanceForeign Function: _update
Num: 8
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: balanceForeign_1, name: balanceForeign

Name: balanceForeign Function: _update
Num: 8
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: _reserveForeign_2, name: _reserveForeign

Name: _reserveForeign Function: _update
Num: 8
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
TMP_260 = CONVERT balanceForeign_1 to uint112
Converting balanceForeign_1

Name: balanceForeign Function: _update
Num: 8
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Source address: u
[i]Type for TMP_260

Name: TMP_260 Function: _update
Num: 8
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
_reserveForeign_2(uint112) := TMP_260(uint112)
asgn
8
-1
Finance type key: (0, -1)
[i]Type for _reserveForeign

Name: _reserveForeign Function: _update
Num: 8
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
Copied _reserveForeign
Source address: u
Propogating parameters and globals to SSA variables...
Ssa_name: blockTimestamp_1, name: blockTimestamp

Name: blockTimestamp Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: blockTimestamp, Num: 1
Globalname: blockTimestamp, contract_name: BasePool
Ssa_name: blockTimestamp_1, name: blockTimestamp

Name: blockTimestamp Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: blockTimestamp, Num: 1
Globalname: blockTimestamp, contract_name: BasePool
Ssa_name: _blockTimestampLast_3, name: _blockTimestampLast

Name: _blockTimestampLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
_blockTimestampLast_3(uint32) := blockTimestamp_1(uint32)
asgn
Finance type key: (-1, -1)
[i]Type for _blockTimestampLast

Name: _blockTimestampLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Copied _blockTimestampLast
Source address: u
Propogating parameters and globals to SSA variables...
Ssa_name: balanceNative_1, name: balanceNative

Name: balanceNative Function: _update
Num: 7
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: balanceForeign_1, name: balanceForeign

Name: balanceForeign Function: _update
Num: 8
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: balanceNative_1, name: balanceNative

Name: balanceNative Function: _update
Num: 7
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: balanceForeign_1, name: balanceForeign

Name: balanceForeign Function: _update
Num: 8
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
Propogating parameters and globals to SSA variables...
Ssa_name: foreignAmountOut_2, name: foreignAmountOut

Name: foreignAmountOut Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: foreignAmountOut, Num: 2
Globalname: foreignAmountOut, contract_name: BasePool
Ssa_name: nativeAmountOut_2, name: nativeAmountOut

Name: nativeAmountOut Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: nativeAmountOut, Num: 2
Globalname: nativeAmountOut, contract_name: BasePool
Ssa_name: foreignAmountIn_1, name: foreignAmountIn

Name: foreignAmountIn_1 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeAmountIn_1, name: nativeAmountIn

Name: nativeAmountIn_1 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: swap
Num: 
Den: 
Address: -999
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: foreignAmountOut_2, name: foreignAmountOut

Name: foreignAmountOut Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: foreignAmountOut, Num: 2
Globalname: foreignAmountOut, contract_name: BasePool
Ssa_name: nativeAmountOut_2, name: nativeAmountOut

Name: nativeAmountOut Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: nativeAmountOut, Num: 2
Globalname: nativeAmountOut, contract_name: BasePool
Ssa_name: foreignAmountIn_1, name: foreignAmountIn

Name: foreignAmountIn_1 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeAmountIn_1, name: nativeAmountIn

Name: nativeAmountIn_1 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: swap
Num: 
Den: 
Address: -999
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
End popogation
Propogating parameters and globals to SSA variables...
Ssa_name: nativeAmountOut_2, name: nativeAmountOut

Name: nativeAmountOut Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: nativeAmountOut, Num: 2
Globalname: nativeAmountOut, contract_name: BasePool
Ssa_name: nativeAmountOut_2, name: nativeAmountOut

Name: nativeAmountOut Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: nativeAmountOut, Num: 2
Globalname: nativeAmountOut, contract_name: BasePool
End popogation
RETURN nativeAmountOut_2
RETURN

Name: nativeAmountOut Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


nativeAmountIn_1(uint256) := ϕ(['nativeAmountIn_1'])
foreignAmountIn_1(uint256) := ϕ(['foreignAmountIn_1'])
to_1(address) := ϕ(['to_1'])
nativeAsset_10(IERC20) := ϕ(['nativeAsset_13', 'nativeAsset_9', 'nativeAsset_1', 'nativeAsset_0', 'nativeAsset_5'])
foreignAsset_11(IERC20) := ϕ(['foreignAsset_0', 'foreignAsset_14', 'foreignAsset_1', 'foreignAsset_10', 'foreignAsset_6'])
MODIFIER_CALL, ReentrancyGuard.nonReentrant()()
MODIFIER_CALL, GasThrottle.validateGas()()
TMP_185(bool) = nativeAmountIn_1 > 0
TMP_186(bool) = foreignAmountIn_1 == 0
TMP_187(bool) = TMP_185 && TMP_186
TMP_188(bool) = nativeAmountIn_1 == 0
TMP_189(bool) = foreignAmountIn_1 > 0
TMP_190(bool) = TMP_188 && TMP_189
TMP_191(bool) = TMP_187 || TMP_190
TMP_192(None) = SOLIDITY_CALL require(bool,string)(TMP_191,BasePool::swap: Only One-Sided Swaps Supported)
TUPLE_2(uint112,uint112,uint32) = INTERNAL_CALL, BasePool.getReserves()()
nativeReserve_1(uint112)= UNPACK TUPLE_2 index: 0 
foreignReserve_1(uint112)= UNPACK TUPLE_2 index: 1 
_nativeAsset_1(IERC20) := nativeAsset_13(IERC20)
_foreignAsset_1(IERC20) := foreignAsset_14(IERC20)
TMP_193 = CONVERT this to address
TMP_194(uint256) = HIGH_LEVEL_CALL, dest:_nativeAsset_1(IERC20), function:balanceOf, arguments:['TMP_193']  
nativeBalance_1(uint256) := TMP_194(uint256)
TMP_195 = CONVERT this to address
TMP_196(uint256) = HIGH_LEVEL_CALL, dest:_foreignAsset_1(IERC20), function:balanceOf, arguments:['TMP_195']  
foreignBalance_1(uint256) := TMP_196(uint256)
TMP_197 = CONVERT _nativeAsset_1 to address
TMP_198(bool) = to_1 != TMP_197
TMP_199 = CONVERT _foreignAsset_1 to address
TMP_200(bool) = to_1 != TMP_199
TMP_201(bool) = TMP_198 && TMP_200
TMP_202(None) = SOLIDITY_CALL require(bool,string)(TMP_201,BasePool::swap: Invalid Receiver)
TMP_203(bool) = foreignAmountIn_1 > 0
CONDITION TMP_203
TMP_215(uint256) = nativeBalance_1 (c)- nativeReserve_1
TMP_216(bool) = nativeAmountIn_1 <= TMP_215
TMP_217(None) = SOLIDITY_CALL require(bool,string)(TMP_216,BasePool::swap: Insufficient Tokens Provided)
TMP_218(bool) = nativeAmountIn_1 <= nativeReserve_1
TMP_219(None) = SOLIDITY_CALL require(bool,string)(TMP_218,BasePool::swap: Unfavourable Trade)
TMP_204(uint256) = foreignBalance_1 (c)- foreignReserve_1
TMP_205(bool) = foreignAmountIn_1 <= TMP_204
TMP_206(None) = SOLIDITY_CALL require(bool,string)(TMP_205,BasePool::swap: Insufficient Tokens Provided)
TMP_207(bool) = foreignAmountIn_1 <= foreignReserve_1
TMP_208(None) = SOLIDITY_CALL require(bool,string)(TMP_207,BasePool::swap: Unfavourable Trade)
TMP_209(uint256) = LIBRARY_CALL, dest:VaderMath, function:VaderMath.calculateSwap(uint256,uint256,uint256), arguments:['foreignAmountIn_1', 'foreignReserve_1', 'nativeReserve_1'] 
nativeAmountOut_1(uint256) := TMP_209(uint256)
TMP_220(uint256) = LIBRARY_CALL, dest:VaderMath, function:VaderMath.calculateSwap(uint256,uint256,uint256), arguments:['nativeAmountIn_1', 'nativeReserve_1', 'foreignReserve_1'] 
foreignAmountOut_1(uint256) := TMP_220(uint256)
TMP_210(bool) = nativeAmountOut_1 > 0
TMP_211(bool) = nativeAmountOut_1 <= nativeReserve_1
TMP_212(bool) = TMP_210 && TMP_211
TMP_213(None) = SOLIDITY_CALL require(bool,string)(TMP_212,BasePool::swap: Swap Impossible)
TMP_221(bool) = foreignAmountOut_1 > 0
TMP_222(bool) = foreignAmountOut_1 <= foreignReserve_1
TMP_223(bool) = TMP_221 && TMP_222
TMP_224(None) = SOLIDITY_CALL require(bool,string)(TMP_223,BasePool::swap: Swap Impossible)
LIBRARY_CALL, dest:SafeERC20, function:SafeERC20.safeTransfer(IERC20,address,uint256), arguments:['_nativeAsset_1', 'to_1', 'nativeAmountOut_1'] 
nativeAmountOut_2(uint256) := ϕ(['nativeAmountOut_0', 'nativeAmountOut_1'])
foreignAmountOut_2(uint256) := ϕ(['foreignAmountOut_0', 'foreignAmountOut_1'])
LIBRARY_CALL, dest:SafeERC20, function:SafeERC20.safeTransfer(IERC20,address,uint256), arguments:['_foreignAsset_1', 'to_1', 'foreignAmountOut_1'] 
TMP_226 = CONVERT this to address
TMP_227(uint256) = HIGH_LEVEL_CALL, dest:_nativeAsset_1(IERC20), function:balanceOf, arguments:['TMP_226']  
nativeBalance_2(uint256) := TMP_227(uint256)
TMP_228 = CONVERT this to address
TMP_229(uint256) = HIGH_LEVEL_CALL, dest:_foreignAsset_1(IERC20), function:balanceOf, arguments:['TMP_228']  
foreignBalance_2(uint256) := TMP_229(uint256)
INTERNAL_CALL, BasePool._update(uint256,uint256,uint112,uint112)(nativeBalance_2,foreignBalance_2,nativeReserve_1,foreignReserve_1)
Emit Swap(msg.sender,nativeAmountIn_1,foreignAmountIn_1,nativeAmountOut_2,foreignAmountOut_2,to_1)
RETURN nativeAmountOut_2


[i] nativeAmountIn cleared
[i] foreignAmountIn cleared
[i] to cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: nativeAmountIn_1, name: nativeAmountIn

Name: nativeAmountIn_1 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: nativeAmountIn_1 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: nativeAmountIn, Num: 1
Globalname: nativeAmountIn, contract_name: BasePool
Ssa_name: foreignAmountIn_1, name: foreignAmountIn

Name: foreignAmountIn_1 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: foreignAmountIn_1 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: foreignAmountIn, Num: 1
Globalname: foreignAmountIn, contract_name: BasePool
Ssa_name: to_1, name: to

Name: to Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: to
Value: u
Fields: 
Finance Type: undef
Source address: -999

Name: to_1 Function: swap
Num: 
Den: 
Address: -999
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: nativeAsset_10, name: nativeAsset

Name: nativeAsset Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: foreignAsset_11, name: foreignAsset

Name: foreignAsset Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
nativeAmountIn_1(uint256) := ϕ(['nativeAmountIn_1'])
Phi

Name: nativeAmountIn_1 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for nativeAmountIn

Name: nativeAmountIn Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
foreignAmountIn_1(uint256) := ϕ(['foreignAmountIn_1'])
Phi

Name: foreignAmountIn_1 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for foreignAmountIn

Name: foreignAmountIn Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
to_1(address) := ϕ(['to_1'])
Phi
[i]Type for to

Name: to Function: swap
Num: 
Den: 
Address: -999
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
XXXX
nativeAsset_10(IERC20) := ϕ(['nativeAsset_13', 'nativeAsset_9', 'nativeAsset_1', 'nativeAsset_0', 'nativeAsset_5'])
Phi
[i]Type for nativeAsset

Name: nativeAsset Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
foreignAsset_11(IERC20) := ϕ(['foreignAsset_0', 'foreignAsset_14', 'foreignAsset_1', 'foreignAsset_10', 'foreignAsset_6'])
Phi
[i]Type for foreignAsset

Name: foreignAsset Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, ReentrancyGuard.nonReentrant()()
New param cache []
Old param cache: []
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, GasThrottle.validateGas()()
New param cache []
Old param cache: []
[i] TMP_185 cleared
[i] TMP_186 cleared
[i] TMP_187 cleared
[i] TMP_188 cleared
[i] TMP_189 cleared
[i] TMP_190 cleared
[i] TMP_191 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: foreignAmountIn_1, name: foreignAmountIn

Name: foreignAmountIn Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: foreignAmountIn_1 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: foreignAmountIn, Num: 1
Globalname: foreignAmountIn, contract_name: BasePool
Ssa_name: nativeAmountIn_1, name: nativeAmountIn

Name: nativeAmountIn Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: nativeAmountIn_1 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: nativeAmountIn, Num: 1
Globalname: nativeAmountIn, contract_name: BasePool
Ssa_name: foreignAmountIn_1, name: foreignAmountIn

Name: foreignAmountIn_1 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: foreignAmountIn_1 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: foreignAmountIn, Num: 1
Globalname: foreignAmountIn, contract_name: BasePool
Ssa_name: nativeAmountIn_1, name: nativeAmountIn

Name: nativeAmountIn_1 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: nativeAmountIn_1 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: nativeAmountIn, Num: 1
Globalname: nativeAmountIn, contract_name: BasePool
End popogation
TMP_185(bool) = nativeAmountIn_1 > 0
lnorm: u rnorm: 0
Source address: u
Source address: u
[i]Type for TMP_185

Name: TMP_185 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_186(bool) = foreignAmountIn_1 == 0
[i]Type for TMP_186

Name: TMP_186 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_187(bool) = TMP_185 && TMP_186
[i]Type for TMP_187

Name: TMP_187 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_188(bool) = nativeAmountIn_1 == 0
[i]Type for TMP_188

Name: TMP_188 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_189(bool) = foreignAmountIn_1 > 0
lnorm: u rnorm: 0
Source address: u
Source address: u
[i]Type for TMP_189

Name: TMP_189 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_190(bool) = TMP_188 && TMP_189
[i]Type for TMP_190

Name: TMP_190 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_191(bool) = TMP_187 || TMP_190
[i]Type for TMP_191

Name: TMP_191 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_192(None) = SOLIDITY_CALL require(bool,string)(TMP_191,BasePool::swap: Only One-Sided Swaps Supported)
[i]Type for TMP_192

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] nativeReserve cleared
[i] foreignReserve cleared
Propogating parameters and globals to SSA variables...
Ssa_name: nativeReserve_1, name: nativeReserve

Name: nativeReserve Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: nativeReserve, Num: 1
Globalname: nativeReserve, contract_name: BasePool
Ssa_name: foreignReserve_1, name: foreignReserve

Name: foreignReserve Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: foreignReserve, Num: 1
Globalname: foreignReserve, contract_name: BasePool
End popogation
TUPLE_2(uint112,uint112,uint32) = INTERNAL_CALL, BasePool.getReserves()()
New param cache []
Old param cache: []
[i]Type for TUPLE_2

Name: TUPLE_2 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
nativeReserve_1(uint112)= UNPACK TUPLE_2 index: 0 
([-1], [-1], 'u', 'u', 'u', -1)
[i]Type for nativeReserve

Name: nativeReserve Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
foreignReserve_1(uint112)= UNPACK TUPLE_2 index: 1 
([-1], [-1], 'u', 'u', 'u', -1)
[i]Type for foreignReserve

Name: foreignReserve Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] _nativeAsset cleared
Propogating parameters and globals to SSA variables...
Ssa_name: nativeAsset_13, name: nativeAsset

Name: nativeAsset Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeAsset_13, name: nativeAsset

Name: nativeAsset Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _nativeAsset_1, name: _nativeAsset

Name: _nativeAsset Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _nativeAsset, Num: 1
Globalname: _nativeAsset, contract_name: BasePool
End popogation
_nativeAsset_1(IERC20) := nativeAsset_13(IERC20)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for _nativeAsset

Name: _nativeAsset Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] _foreignAsset cleared
Propogating parameters and globals to SSA variables...
Ssa_name: foreignAsset_14, name: foreignAsset

Name: foreignAsset Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: foreignAsset_14, name: foreignAsset

Name: foreignAsset Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _foreignAsset_1, name: _foreignAsset

Name: _foreignAsset Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _foreignAsset, Num: 1
Globalname: _foreignAsset, contract_name: BasePool
End popogation
_foreignAsset_1(IERC20) := foreignAsset_14(IERC20)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for _foreignAsset

Name: _foreignAsset Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_193 cleared
[i] TMP_194 cleared
[i] nativeBalance cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _nativeAsset_1, name: _nativeAsset

Name: _nativeAsset Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _nativeAsset_1, name: _nativeAsset

Name: _nativeAsset Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeBalance_1, name: nativeBalance

Name: nativeBalance Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: nativeBalance, Num: 1
Globalname: nativeBalance, contract_name: BasePool
End popogation
TMP_193 = CONVERT this to address
Converting this
4
[i]Type for TMP_193

Name: TMP_193 Function: swap
Num: 
Den: 
Address: 4
Norm: u
LF: BasePool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_194(uint256) = HIGH_LEVEL_CALL, dest:_nativeAsset_1(IERC20), function:balanceOf, arguments:['TMP_193']  
High Call: balanceOf
Running querryfc
Found: None
Written func info: IERC20, balanceOf
Handling balance function!
u
prev address? u
[i]Type for TMP_194

Name: TMP_194 Function: swap
Num: 7
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
nativeBalance_1(uint256) := TMP_194(uint256)
asgn
Source address: u
Finance type key: (0, -1)
[i]Type for nativeBalance

Name: nativeBalance Function: swap
Num: 7
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
[i] TMP_195 cleared
[i] TMP_196 cleared
[i] foreignBalance cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _foreignAsset_1, name: _foreignAsset

Name: _foreignAsset Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _foreignAsset_1, name: _foreignAsset

Name: _foreignAsset Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: foreignBalance_1, name: foreignBalance

Name: foreignBalance Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: foreignBalance, Num: 1
Globalname: foreignBalance, contract_name: BasePool
End popogation
TMP_195 = CONVERT this to address
Converting this
4
[i]Type for TMP_195

Name: TMP_195 Function: swap
Num: 
Den: 
Address: 4
Norm: u
LF: BasePool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_196(uint256) = HIGH_LEVEL_CALL, dest:_foreignAsset_1(IERC20), function:balanceOf, arguments:['TMP_195']  
High Call: balanceOf
Running querryfc
Found: None
Written func info: IERC20, balanceOf
Handling balance function!
u
prev address? u
[i]Type for TMP_196

Name: TMP_196 Function: swap
Num: 8
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
foreignBalance_1(uint256) := TMP_196(uint256)
asgn
Source address: u
Finance type key: (0, -1)
[i]Type for foreignBalance

Name: foreignBalance Function: swap
Num: 8
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
[i] TMP_197 cleared
[i] TMP_198 cleared
[i] TMP_199 cleared
[i] TMP_200 cleared
[i] TMP_201 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _foreignAsset_1, name: _foreignAsset

Name: _foreignAsset Function: swap
Num: -1
Den: -1
Address: 8
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: swap
Num: 
Den: 
Address: -999
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: _nativeAsset_1, name: _nativeAsset

Name: _nativeAsset Function: swap
Num: -1
Den: -1
Address: 7
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _foreignAsset_1, name: _foreignAsset

Name: _foreignAsset Function: swap
Num: -1
Den: -1
Address: 8
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: swap
Num: 
Den: 
Address: -999
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: _nativeAsset_1, name: _nativeAsset

Name: _nativeAsset Function: swap
Num: -1
Den: -1
Address: 7
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_197 = CONVERT _nativeAsset_1 to address
Converting _nativeAsset_1

Name: _nativeAsset Function: swap
Num: -1
Den: -1
Address: 7
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: 7
[i]Type for TMP_197

Name: TMP_197 Function: swap
Num: -1
Den: -1
Address: 7
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_198(bool) = to_1 != TMP_197
[i]Type for TMP_198

Name: TMP_198 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_199 = CONVERT _foreignAsset_1 to address
Converting _foreignAsset_1

Name: _foreignAsset Function: swap
Num: -1
Den: -1
Address: 8
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: 8
[i]Type for TMP_199

Name: TMP_199 Function: swap
Num: -1
Den: -1
Address: 8
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_200(bool) = to_1 != TMP_199
[i]Type for TMP_200

Name: TMP_200 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_201(bool) = TMP_198 && TMP_200
[i]Type for TMP_201

Name: TMP_201 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_202(None) = SOLIDITY_CALL require(bool,string)(TMP_201,BasePool::swap: Invalid Receiver)
[i]Type for TMP_202

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_203 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: foreignAmountIn_1, name: foreignAmountIn

Name: foreignAmountIn_1 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: foreignAmountIn_1, name: foreignAmountIn

Name: foreignAmountIn_1 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_203(bool) = foreignAmountIn_1 > 0
lnorm: u rnorm: 0
[i]Type for TMP_203

Name: TMP_203 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_215 cleared
[i] TMP_216 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: nativeAmountIn_1, name: nativeAmountIn

Name: nativeAmountIn_1 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeReserve_1, name: nativeReserve

Name: nativeReserve Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeBalance_1, name: nativeBalance

Name: nativeBalance Function: swap
Num: 7
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: nativeAmountIn_1, name: nativeAmountIn

Name: nativeAmountIn_1 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeReserve_1, name: nativeReserve

Name: nativeReserve Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeBalance_1, name: nativeBalance

Name: nativeBalance Function: swap
Num: 7
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
TMP_215(uint256) = nativeBalance_1 (c)- nativeReserve_1
Source address: u
[i]Type for TMP_215

Name: TMP_215 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
TMP_216(bool) = nativeAmountIn_1 <= TMP_215
lnorm: u rnorm: u
[i]Type for TMP_216

Name: TMP_216 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_217(None) = SOLIDITY_CALL require(bool,string)(TMP_216,BasePool::swap: Insufficient Tokens Provided)
[i]Type for TMP_217

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_218 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: nativeAmountIn_1, name: nativeAmountIn

Name: nativeAmountIn_1 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeReserve_1, name: nativeReserve

Name: nativeReserve Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeAmountIn_1, name: nativeAmountIn

Name: nativeAmountIn_1 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeReserve_1, name: nativeReserve

Name: nativeReserve Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_218(bool) = nativeAmountIn_1 <= nativeReserve_1
lnorm: u rnorm: u
[i]Type for TMP_218

Name: TMP_218 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_219(None) = SOLIDITY_CALL require(bool,string)(TMP_218,BasePool::swap: Unfavourable Trade)
[i]Type for TMP_219

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_204 cleared
[i] TMP_205 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: foreignAmountIn_1, name: foreignAmountIn

Name: foreignAmountIn_1 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: foreignReserve_1, name: foreignReserve

Name: foreignReserve Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: foreignBalance_1, name: foreignBalance

Name: foreignBalance Function: swap
Num: 8
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: foreignAmountIn_1, name: foreignAmountIn

Name: foreignAmountIn_1 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: foreignReserve_1, name: foreignReserve

Name: foreignReserve Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: foreignBalance_1, name: foreignBalance

Name: foreignBalance Function: swap
Num: 8
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
TMP_204(uint256) = foreignBalance_1 (c)- foreignReserve_1
Source address: u
[i]Type for TMP_204

Name: TMP_204 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
TMP_205(bool) = foreignAmountIn_1 <= TMP_204
lnorm: u rnorm: u
[i]Type for TMP_205

Name: TMP_205 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_206(None) = SOLIDITY_CALL require(bool,string)(TMP_205,BasePool::swap: Insufficient Tokens Provided)
[i]Type for TMP_206

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_207 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: foreignAmountIn_1, name: foreignAmountIn

Name: foreignAmountIn_1 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: foreignReserve_1, name: foreignReserve

Name: foreignReserve Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: foreignAmountIn_1, name: foreignAmountIn

Name: foreignAmountIn_1 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: foreignReserve_1, name: foreignReserve

Name: foreignReserve Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_207(bool) = foreignAmountIn_1 <= foreignReserve_1
lnorm: u rnorm: u
[i]Type for TMP_207

Name: TMP_207 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_208(None) = SOLIDITY_CALL require(bool,string)(TMP_207,BasePool::swap: Unfavourable Trade)
[i]Type for TMP_208

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_209 cleared
[i] nativeAmountOut cleared
Propogating parameters and globals to SSA variables...
Ssa_name: foreignAmountIn_1, name: foreignAmountIn

Name: foreignAmountIn_1 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeReserve_1, name: nativeReserve

Name: nativeReserve Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: foreignReserve_1, name: foreignReserve

Name: foreignReserve Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: foreignAmountIn_1, name: foreignAmountIn

Name: foreignAmountIn_1 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeReserve_1, name: nativeReserve

Name: nativeReserve Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: foreignReserve_1, name: foreignReserve

Name: foreignReserve Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeAmountOut_1, name: nativeAmountOut

Name: nativeAmountOut Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: nativeAmountOut, Num: 1
Globalname: nativeAmountOut, contract_name: BasePool
End popogation
TMP_209(uint256) = LIBRARY_CALL, dest:VaderMath, function:VaderMath.calculateSwap(uint256,uint256,uint256), arguments:['foreignAmountIn_1', 'foreignReserve_1', 'nativeReserve_1'] 
Found: calculateSwap

Name: foreignAmountIn_1 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: foreignReserve Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: nativeReserve Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
High level cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
New param cache [[[-1], [-1], 'u', None, [], -1, 'u', 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 'u', None, [], -1, 'u'], [[-1], [-1], 'u', None, [], -1, 'u'], [[-1], [-1], 'u', None, [], -1, 'u']]
[i]Type for TMP_209

Name: TMP_209 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
nativeAmountOut_1(uint256) := TMP_209(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for nativeAmountOut

Name: nativeAmountOut Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_220 cleared
[i] foreignAmountOut cleared
Propogating parameters and globals to SSA variables...
Ssa_name: nativeAmountIn_1, name: nativeAmountIn

Name: nativeAmountIn_1 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeReserve_1, name: nativeReserve

Name: nativeReserve Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: foreignReserve_1, name: foreignReserve

Name: foreignReserve Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeAmountIn_1, name: nativeAmountIn

Name: nativeAmountIn_1 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeReserve_1, name: nativeReserve

Name: nativeReserve Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: foreignReserve_1, name: foreignReserve

Name: foreignReserve Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: foreignAmountOut_1, name: foreignAmountOut

Name: foreignAmountOut Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: foreignAmountOut, Num: 1
Globalname: foreignAmountOut, contract_name: BasePool
End popogation
TMP_220(uint256) = LIBRARY_CALL, dest:VaderMath, function:VaderMath.calculateSwap(uint256,uint256,uint256), arguments:['nativeAmountIn_1', 'nativeReserve_1', 'foreignReserve_1'] 
Found: calculateSwap

Name: nativeAmountIn_1 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: nativeReserve Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: foreignReserve Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
High level cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
New param cache [[[-1], [-1], 'u', None, [], -1, 'u', 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 'u', None, [], -1, 'u'], [[-1], [-1], 'u', None, [], -1, 'u'], [[-1], [-1], 'u', None, [], -1, 'u']]
[i]Type for TMP_220

Name: TMP_220 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
foreignAmountOut_1(uint256) := TMP_220(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for foreignAmountOut

Name: foreignAmountOut Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_210 cleared
[i] TMP_211 cleared
[i] TMP_212 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: nativeAmountOut_1, name: nativeAmountOut

Name: nativeAmountOut Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: nativeAmountOut, Num: 1
Globalname: nativeAmountOut, contract_name: BasePool
Ssa_name: nativeReserve_1, name: nativeReserve

Name: nativeReserve Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeAmountOut_1, name: nativeAmountOut

Name: nativeAmountOut Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: nativeAmountOut, Num: 1
Globalname: nativeAmountOut, contract_name: BasePool
Ssa_name: nativeReserve_1, name: nativeReserve

Name: nativeReserve Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_210(bool) = nativeAmountOut_1 > 0
lnorm: u rnorm: 0
Source address: u
Source address: u
[i]Type for TMP_210

Name: TMP_210 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_211(bool) = nativeAmountOut_1 <= nativeReserve_1
lnorm: u rnorm: u
[i]Type for TMP_211

Name: TMP_211 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_212(bool) = TMP_210 && TMP_211
[i]Type for TMP_212

Name: TMP_212 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_213(None) = SOLIDITY_CALL require(bool,string)(TMP_212,BasePool::swap: Swap Impossible)
[i]Type for TMP_213

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_221 cleared
[i] TMP_222 cleared
[i] TMP_223 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: foreignAmountOut_1, name: foreignAmountOut

Name: foreignAmountOut Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: foreignAmountOut, Num: 1
Globalname: foreignAmountOut, contract_name: BasePool
Ssa_name: foreignReserve_1, name: foreignReserve

Name: foreignReserve Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: foreignAmountOut_1, name: foreignAmountOut

Name: foreignAmountOut Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: foreignAmountOut, Num: 1
Globalname: foreignAmountOut, contract_name: BasePool
Ssa_name: foreignReserve_1, name: foreignReserve

Name: foreignReserve Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_221(bool) = foreignAmountOut_1 > 0
lnorm: u rnorm: 0
Source address: u
Source address: u
[i]Type for TMP_221

Name: TMP_221 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_222(bool) = foreignAmountOut_1 <= foreignReserve_1
lnorm: u rnorm: u
[i]Type for TMP_222

Name: TMP_222 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_223(bool) = TMP_221 && TMP_222
[i]Type for TMP_223

Name: TMP_223 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_224(None) = SOLIDITY_CALL require(bool,string)(TMP_223,BasePool::swap: Swap Impossible)
[i]Type for TMP_224

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: nativeAmountOut_1, name: nativeAmountOut

Name: nativeAmountOut Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: swap
Num: 
Den: 
Address: -999
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: _nativeAsset_1, name: _nativeAsset

Name: _nativeAsset Function: swap
Num: -1
Den: -1
Address: 7
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeAmountOut_1, name: nativeAmountOut

Name: nativeAmountOut Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: swap
Num: 
Den: 
Address: -999
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: _nativeAsset_1, name: _nativeAsset

Name: _nativeAsset Function: swap
Num: -1
Den: -1
Address: 7
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
LIBRARY_CALL, dest:SafeERC20, function:SafeERC20.safeTransfer(IERC20,address,uint256), arguments:['_nativeAsset_1', 'to_1', 'nativeAmountOut_1'] 
[i] nativeAmountOut cleared
[i] foreignAmountOut cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: nativeAmountOut_2, name: nativeAmountOut

Name: nativeAmountOut Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: nativeAmountOut, Num: 2
Globalname: nativeAmountOut, contract_name: BasePool
Ssa_name: foreignAmountOut_2, name: foreignAmountOut

Name: foreignAmountOut Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: foreignAmountOut, Num: 2
Globalname: foreignAmountOut, contract_name: BasePool
nativeAmountOut_2(uint256) := ϕ(['nativeAmountOut_0', 'nativeAmountOut_1'])
Phi

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: nativeAmountOut Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for nativeAmountOut

Name: nativeAmountOut Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
foreignAmountOut_2(uint256) := ϕ(['foreignAmountOut_0', 'foreignAmountOut_1'])
Phi

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: foreignAmountOut Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for foreignAmountOut

Name: foreignAmountOut Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: foreignAmountOut_1, name: foreignAmountOut

Name: foreignAmountOut Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _foreignAsset_1, name: _foreignAsset

Name: _foreignAsset Function: swap
Num: -1
Den: -1
Address: 8
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: swap
Num: 
Den: 
Address: -999
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: foreignAmountOut_1, name: foreignAmountOut

Name: foreignAmountOut Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _foreignAsset_1, name: _foreignAsset

Name: _foreignAsset Function: swap
Num: -1
Den: -1
Address: 8
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: swap
Num: 
Den: 
Address: -999
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
End popogation
LIBRARY_CALL, dest:SafeERC20, function:SafeERC20.safeTransfer(IERC20,address,uint256), arguments:['_foreignAsset_1', 'to_1', 'foreignAmountOut_1'] 
[i] TMP_226 cleared
[i] TMP_227 cleared
[i] nativeBalance cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _nativeAsset_1, name: _nativeAsset

Name: _nativeAsset Function: swap
Num: -1
Den: -1
Address: 7
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _nativeAsset_1, name: _nativeAsset

Name: _nativeAsset Function: swap
Num: -1
Den: -1
Address: 7
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeBalance_2, name: nativeBalance

Name: nativeBalance Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: nativeBalance, Num: 2
Globalname: nativeBalance, contract_name: BasePool
End popogation
TMP_226 = CONVERT this to address
Converting this
4
[i]Type for TMP_226

Name: TMP_226 Function: swap
Num: 
Den: 
Address: 4
Norm: u
LF: BasePool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_227(uint256) = HIGH_LEVEL_CALL, dest:_nativeAsset_1(IERC20), function:balanceOf, arguments:['TMP_226']  
High Call: balanceOf
Running querryfc
Found: None
Written func info: IERC20, balanceOf
Handling balance function!
7
[i]Type for TMP_227

Name: TMP_227 Function: swap
Num: 7
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
nativeBalance_2(uint256) := TMP_227(uint256)
asgn
Source address: u
Finance type key: (0, -1)
[i]Type for nativeBalance

Name: nativeBalance Function: swap
Num: 7
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
[i] TMP_228 cleared
[i] TMP_229 cleared
[i] foreignBalance cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _foreignAsset_1, name: _foreignAsset

Name: _foreignAsset Function: swap
Num: -1
Den: -1
Address: 8
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _foreignAsset_1, name: _foreignAsset

Name: _foreignAsset Function: swap
Num: -1
Den: -1
Address: 8
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: foreignBalance_2, name: foreignBalance

Name: foreignBalance Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: foreignBalance, Num: 2
Globalname: foreignBalance, contract_name: BasePool
End popogation
TMP_228 = CONVERT this to address
Converting this
4
[i]Type for TMP_228

Name: TMP_228 Function: swap
Num: 
Den: 
Address: 4
Norm: u
LF: BasePool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_229(uint256) = HIGH_LEVEL_CALL, dest:_foreignAsset_1(IERC20), function:balanceOf, arguments:['TMP_228']  
High Call: balanceOf
Running querryfc
Found: None
Written func info: IERC20, balanceOf
Handling balance function!
8
[i]Type for TMP_229

Name: TMP_229 Function: swap
Num: 8
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
foreignBalance_2(uint256) := TMP_229(uint256)
asgn
Source address: u
Finance type key: (0, -1)
[i]Type for foreignBalance

Name: foreignBalance Function: swap
Num: 8
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: nativeReserve_1, name: nativeReserve

Name: nativeReserve Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: foreignReserve_1, name: foreignReserve

Name: foreignReserve Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeBalance_2, name: nativeBalance

Name: nativeBalance Function: swap
Num: 7
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: foreignBalance_2, name: foreignBalance

Name: foreignBalance Function: swap
Num: 8
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: nativeReserve_1, name: nativeReserve

Name: nativeReserve Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: foreignReserve_1, name: foreignReserve

Name: foreignReserve Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeBalance_2, name: nativeBalance

Name: nativeBalance Function: swap
Num: 7
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: foreignBalance_2, name: foreignBalance

Name: foreignBalance Function: swap
Num: 8
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
INTERNAL_CALL, BasePool._update(uint256,uint256,uint112,uint112)(nativeBalance_2,foreignBalance_2,nativeReserve_1,foreignReserve_1)
New param cache [[[7], [-1], 'u', None, [], 0, 'u', 'u'], [[8], [-1], 'u', None, [], 0, 'u', 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[5], [-1], 'u', None, [], 0, 'u'], [[6], [-1], 'u', None, [], 0, 'u'], [[-1], [-1], 'u', None, [], -1, 'u'], [[-1], [-1], 'u', None, [], -1, 'u']]
[[7], [-1], 'u', None, [], 0, 'u', 'u']

Name: balanceNative Function: None
Num: 7
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
[[8], [-1], 'u', None, [], 0, 'u', 'u']

Name: balanceForeign Function: None
Num: 8
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: reserveNative Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: reserveForeign Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_update(uint256,uint256,uint112,uint112)
Propogating All
Propogating All
balanceNative_1
Ssa_name: balanceNative_1, name: balanceNative

Name: balanceNative Function: _update
Num: 7
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Source address: u

Name: balanceNative_1 Function: _update
Num: 7
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
balanceForeign_1
Ssa_name: balanceForeign_1, name: balanceForeign

Name: balanceForeign Function: _update
Num: 8
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Source address: u

Name: balanceForeign_1 Function: _update
Num: 8
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
Propogating All
Propogating All
blockTimestamp_1
Ssa_name: blockTimestamp_1, name: blockTimestamp

Name: blockTimestamp Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
reserveNative_1
Ssa_name: reserveNative_1, name: reserveNative

Name: reserveNative Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: reserveNative_1 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
timeElapsed_1
Ssa_name: timeElapsed_1, name: timeElapsed

Name: timeElapsed Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
reserveForeign_1
Ssa_name: reserveForeign_1, name: reserveForeign

Name: reserveForeign Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: reserveForeign_1 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
reserveNative_1
Ssa_name: reserveNative_1, name: reserveNative

Name: reserveNative_1 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: reserveNative_1 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
timeElapsed_1
Ssa_name: timeElapsed_1, name: timeElapsed

Name: timeElapsed Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
reserveForeign_1
Ssa_name: reserveForeign_1, name: reserveForeign

Name: reserveForeign_1 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: reserveForeign_1 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
balanceNative_1
Ssa_name: balanceNative_1, name: balanceNative

Name: balanceNative_1 Function: _update
Num: 7
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Source address: u

Name: balanceNative_1 Function: _update
Num: 7
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
Propogating All
reserveNative_1
Ssa_name: reserveNative_1, name: reserveNative

Name: reserveNative_1 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: reserveNative_1 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
timeElapsed_1
Ssa_name: timeElapsed_1, name: timeElapsed

Name: timeElapsed Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
reserveForeign_1
Ssa_name: reserveForeign_1, name: reserveForeign

Name: reserveForeign_1 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: reserveForeign_1 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
balanceForeign_1
Ssa_name: balanceForeign_1, name: balanceForeign

Name: balanceForeign_1 Function: _update
Num: 8
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Source address: u

Name: balanceForeign_1 Function: _update
Num: 8
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
Propogating All
blockTimestamp_1
Ssa_name: blockTimestamp_1, name: blockTimestamp

Name: blockTimestamp Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
balanceNative_1
Ssa_name: balanceNative_1, name: balanceNative

Name: balanceNative_1 Function: _update
Num: 7
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Source address: u

Name: balanceNative_1 Function: _update
Num: 7
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
balanceForeign_1
Ssa_name: balanceForeign_1, name: balanceForeign

Name: balanceForeign_1 Function: _update
Num: 8
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Source address: u

Name: balanceForeign_1 Function: _update
Num: 8
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
[i] balanceNative cleared
[i] balanceForeign cleared
[i] reserveNative cleared
[i] reserveForeign cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: balanceNative_1, name: balanceNative

Name: balanceNative_1 Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: balanceNative_1 Function: _update
Num: 7
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
Ssa_name: balanceForeign_1, name: balanceForeign

Name: balanceForeign_1 Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: balanceForeign_1 Function: _update
Num: 8
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
Ssa_name: reserveNative_1, name: reserveNative

Name: reserveNative_1 Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: reserveNative_1 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: reserveForeign_1, name: reserveForeign

Name: reserveForeign_1 Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: reserveForeign_1 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: priceNativeCumulativeLast_1, name: priceNativeCumulativeLast

Name: priceNativeCumulativeLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: priceForeignCumulativeLast_1, name: priceForeignCumulativeLast

Name: priceForeignCumulativeLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _blockTimestampLast_2, name: _blockTimestampLast

Name: _blockTimestampLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
balanceNative_1(uint256) := ϕ(['nativeBalance_2', 'balanceNative_1', 'nativeBalance_2'])
Phi
[i]Type for balanceNative

Name: balanceNative Function: _update
Num: 7
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
balanceForeign_1(uint256) := ϕ(['balanceForeign_1', 'foreignBalance_2', 'foreignBalance_2'])
Phi
[i]Type for balanceForeign

Name: balanceForeign Function: _update
Num: 8
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
reserveNative_1(uint112) := ϕ(['reserveNative_1', 'nativeReserve_1', 'reserveNative_1'])
Phi
[i]Type for reserveNative

Name: reserveNative Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
reserveForeign_1(uint112) := ϕ(['reserveForeign_1', 'foreignReserve_1', 'reserveForeign_1'])
Phi
[i]Type for reserveForeign

Name: reserveForeign Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
priceNativeCumulativeLast_1(uint256) := ϕ(['priceNativeCumulativeLast_0', 'priceNativeCumulativeLast_2'])
Phi
[i]Type for priceNativeCumulativeLast

Name: priceNativeCumulativeLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
priceForeignCumulativeLast_1(uint256) := ϕ(['priceForeignCumulativeLast_0', 'priceForeignCumulativeLast_2'])
Phi
[i]Type for priceForeignCumulativeLast

Name: priceForeignCumulativeLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_blockTimestampLast_2(uint32) := ϕ(['_blockTimestampLast_3', '_blockTimestampLast_0'])
Phi
[i]Type for _blockTimestampLast

Name: _blockTimestampLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_235 cleared
[i] TMP_236 cleared
[i] TMP_238 cleared
[i] TMP_239 cleared
[i] TMP_240 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: balanceNative_1, name: balanceNative

Name: balanceNative Function: _update
Num: 7
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: balanceForeign_1, name: balanceForeign

Name: balanceForeign Function: _update
Num: 8
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: balanceNative_1, name: balanceNative

Name: balanceNative Function: _update
Num: 7
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: balanceForeign_1, name: balanceForeign

Name: balanceForeign Function: _update
Num: 8
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
TMP_235(uint112) := 5192296858534827628530496329220095(uint112)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for TMP_235

Name: TMP_235 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 5192296858534827628530496329220095
Fields: 
Finance Type: undef
XXXX
TMP_236(bool) = balanceNative_1 <= TMP_235
lnorm: u rnorm: 0
[i]Type for TMP_236

Name: TMP_236 Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_238(uint112) := 5192296858534827628530496329220095(uint112)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for TMP_238

Name: TMP_238 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 5192296858534827628530496329220095
Fields: 
Finance Type: undef
XXXX
TMP_239(bool) = balanceForeign_1 <= TMP_238
lnorm: u rnorm: 0
[i]Type for TMP_239

Name: TMP_239 Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_240(bool) = TMP_236 && TMP_239
[i]Type for TMP_240

Name: TMP_240 Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_241(None) = SOLIDITY_CALL require(bool,string)(TMP_240,BasePool::_update: Balance Overflow)
[i]Type for TMP_241

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_242 cleared
[i] TMP_243 cleared
[i] TMP_244 cleared
[i] blockTimestamp cleared
Propogating parameters and globals to SSA variables...
Ssa_name: blockTimestamp_1, name: blockTimestamp

Name: blockTimestamp Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: blockTimestamp, Num: 1
Globalname: blockTimestamp, contract_name: BasePool
End popogation
TMP_242(uint256) = 2 (c)** 32
[i]Type for TMP_242

Name: TMP_242 Function: _update
Num: 
Den: 
Address: u
Norm: 32
LF: None
Value: 4294967296
Fields: 
Finance Type: undef
XXXX
TMP_243(uint256) = block.timestamp (c)% TMP_242
[i]Type for TMP_243

Name: TMP_243 Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_244 = CONVERT TMP_243 to uint32
Converting TMP_243

Name: TMP_243 Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_244

Name: TMP_244 Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
blockTimestamp_1(uint32) := TMP_244(uint32)
asgn
Finance type key: (-1, -1)
[i]Type for blockTimestamp

Name: blockTimestamp Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_245 cleared
[i] timeElapsed cleared
Propogating parameters and globals to SSA variables...
Ssa_name: blockTimestamp_1, name: blockTimestamp

Name: blockTimestamp Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: blockTimestamp, Num: 1
Globalname: blockTimestamp, contract_name: BasePool
Ssa_name: _blockTimestampLast_2, name: _blockTimestampLast

Name: _blockTimestampLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: blockTimestamp_1, name: blockTimestamp

Name: blockTimestamp Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: blockTimestamp, Num: 1
Globalname: blockTimestamp, contract_name: BasePool
Ssa_name: _blockTimestampLast_2, name: _blockTimestampLast

Name: _blockTimestampLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: timeElapsed_1, name: timeElapsed

Name: timeElapsed Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: timeElapsed, Num: 1
Globalname: timeElapsed, contract_name: BasePool
End popogation
TMP_245(uint32) = blockTimestamp_1 (c)- _blockTimestampLast_2
Source address: u
[i]Type for TMP_245

Name: TMP_245 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
timeElapsed_1(uint32) := TMP_245(uint32)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for timeElapsed

Name: timeElapsed Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_246 cleared
[i] TMP_247 cleared
[i] TMP_248 cleared
[i] TMP_249 cleared
[i] TMP_250 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveNative_1, name: reserveNative

Name: reserveNative Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: timeElapsed_1, name: timeElapsed

Name: timeElapsed Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: reserveForeign_1, name: reserveForeign

Name: reserveForeign Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: reserveNative_1, name: reserveNative

Name: reserveNative Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: timeElapsed_1, name: timeElapsed

Name: timeElapsed Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: reserveForeign_1, name: reserveForeign

Name: reserveForeign Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_246(bool) = timeElapsed_1 > 0
lnorm: u rnorm: 0
[i]Type for TMP_246

Name: TMP_246 Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_247(bool) = reserveNative_1 != 0
[i]Type for TMP_247

Name: TMP_247 Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_248(bool) = TMP_246 && TMP_247
[i]Type for TMP_248

Name: TMP_248 Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_249(bool) = reserveForeign_1 != 0
[i]Type for TMP_249

Name: TMP_249 Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_250(bool) = TMP_248 && TMP_249
[i]Type for TMP_250

Name: TMP_250 Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_251 cleared
[i] TMP_252 cleared
[i] TMP_253 cleared
[i] TMP_254 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveNative_1, name: reserveNative

Name: reserveNative Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: timeElapsed_1, name: timeElapsed

Name: timeElapsed Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: reserveForeign_1, name: reserveForeign

Name: reserveForeign Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: priceNativeCumulativeLast_1, name: priceNativeCumulativeLast

Name: priceNativeCumulativeLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: reserveNative_1, name: reserveNative

Name: reserveNative Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: timeElapsed_1, name: timeElapsed

Name: timeElapsed Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: priceNativeCumulativeLast_1, name: priceNativeCumulativeLast

Name: priceNativeCumulativeLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: reserveForeign_1, name: reserveForeign

Name: reserveForeign Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: priceNativeCumulativeLast_2, name: priceNativeCumulativeLast

Name: priceNativeCumulativeLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_251(uint224) = LIBRARY_CALL, dest:UQ112x112, function:UQ112x112.encode(uint112), arguments:['reserveForeign_1'] 
Found: None
Written func info: UQ112x112, encode
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
reserveForeign
hers norm: u
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
reserveForeign
hers norm: u
([-1], [-1, -1], 'u', "'u'", 'u', -1)
[i]Type for TMP_251

Name: TMP_251 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
TMP_252(uint224) = LIBRARY_CALL, dest:UQ112x112, function:UQ112x112.uqdiv(uint224,uint112), arguments:['TMP_251', 'reserveNative_1'] 
Found: None
Written func info: UQ112x112, uqdiv
Retvar: ('t', ['1'], ['2'], 1, "'u'", 'u')
TMP_251
reserveNative
hers norm: u
Retvar: ('t', ['1'], ['2'], 1, "'u'", 'u')
TMP_251
reserveNative
hers norm: u
([-1, -1], [-1, -1], 'u', "'u'", 'u', -1)
[i]Type for TMP_252

Name: TMP_252 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
TMP_253 = CONVERT TMP_252 to uint256
Converting TMP_252

Name: TMP_252 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_253

Name: TMP_253 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
TMP_254(uint256) = TMP_253 (c)* timeElapsed_1
lnorm: u rnorm: u
Source address: u
[i]Type for TMP_254

Name: TMP_254 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
priceNativeCumulativeLast_2(uint256) = priceNativeCumulativeLast_1 (c)+ TMP_254
Source address: u
[i]Type for priceNativeCumulativeLast

Name: priceNativeCumulativeLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Copied priceNativeCumulativeLast
Source address: u
[i] TMP_259 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: balanceNative_1, name: balanceNative

Name: balanceNative Function: _update
Num: 7
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: balanceNative_1, name: balanceNative

Name: balanceNative Function: _update
Num: 7
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: _reserveNative_2, name: _reserveNative

Name: _reserveNative Function: _update
Num: 7
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
TMP_259 = CONVERT balanceNative_1 to uint112
Converting balanceNative_1

Name: balanceNative Function: _update
Num: 7
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Source address: u
[i]Type for TMP_259

Name: TMP_259 Function: _update
Num: 7
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
_reserveNative_2(uint112) := TMP_259(uint112)
asgn
7
-1
Finance type key: (0, -1)
[i]Type for _reserveNative

Name: _reserveNative Function: _update
Num: 7
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
Copied _reserveNative
Source address: u
[i] TMP_255 cleared
[i] TMP_256 cleared
[i] TMP_257 cleared
[i] TMP_258 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveNative_1, name: reserveNative

Name: reserveNative Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: timeElapsed_1, name: timeElapsed

Name: timeElapsed Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: reserveForeign_1, name: reserveForeign

Name: reserveForeign Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: priceForeignCumulativeLast_1, name: priceForeignCumulativeLast

Name: priceForeignCumulativeLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: reserveNative_1, name: reserveNative

Name: reserveNative Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: priceForeignCumulativeLast_1, name: priceForeignCumulativeLast

Name: priceForeignCumulativeLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: timeElapsed_1, name: timeElapsed

Name: timeElapsed Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: reserveForeign_1, name: reserveForeign

Name: reserveForeign Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: priceForeignCumulativeLast_2, name: priceForeignCumulativeLast

Name: priceForeignCumulativeLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_255(uint224) = LIBRARY_CALL, dest:UQ112x112, function:UQ112x112.encode(uint112), arguments:['reserveNative_1'] 
Found: None
Written func info: UQ112x112, encode
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
reserveNative
hers norm: u
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
reserveNative
hers norm: u
([-1], [-1, -1], 'u', "'u'", 'u', -1)
[i]Type for TMP_255

Name: TMP_255 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
TMP_256(uint224) = LIBRARY_CALL, dest:UQ112x112, function:UQ112x112.uqdiv(uint224,uint112), arguments:['TMP_255', 'reserveForeign_1'] 
Found: None
Written func info: UQ112x112, uqdiv
Retvar: ('t', ['1'], ['2'], 1, "'u'", 'u')
TMP_255
reserveForeign
hers norm: u
Retvar: ('t', ['1'], ['2'], 1, "'u'", 'u')
TMP_255
reserveForeign
hers norm: u
([-1, -1], [-1, -1], 'u', "'u'", 'u', -1)
[i]Type for TMP_256

Name: TMP_256 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
TMP_257 = CONVERT TMP_256 to uint256
Converting TMP_256

Name: TMP_256 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_257

Name: TMP_257 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
TMP_258(uint256) = TMP_257 (c)* timeElapsed_1
lnorm: u rnorm: u
Source address: u
[i]Type for TMP_258

Name: TMP_258 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
priceForeignCumulativeLast_2(uint256) = priceForeignCumulativeLast_1 (c)+ TMP_258
Source address: u
[i]Type for priceForeignCumulativeLast

Name: priceForeignCumulativeLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Copied priceForeignCumulativeLast
Source address: u
[i] TMP_260 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: balanceForeign_1, name: balanceForeign

Name: balanceForeign Function: _update
Num: 8
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: balanceForeign_1, name: balanceForeign

Name: balanceForeign Function: _update
Num: 8
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: _reserveForeign_2, name: _reserveForeign

Name: _reserveForeign Function: _update
Num: 8
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
TMP_260 = CONVERT balanceForeign_1 to uint112
Converting balanceForeign_1

Name: balanceForeign Function: _update
Num: 8
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Source address: u
[i]Type for TMP_260

Name: TMP_260 Function: _update
Num: 8
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
_reserveForeign_2(uint112) := TMP_260(uint112)
asgn
8
-1
Finance type key: (0, -1)
[i]Type for _reserveForeign

Name: _reserveForeign Function: _update
Num: 8
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
Copied _reserveForeign
Source address: u
Propogating parameters and globals to SSA variables...
Ssa_name: blockTimestamp_1, name: blockTimestamp

Name: blockTimestamp Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: blockTimestamp, Num: 1
Globalname: blockTimestamp, contract_name: BasePool
Ssa_name: blockTimestamp_1, name: blockTimestamp

Name: blockTimestamp Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: blockTimestamp, Num: 1
Globalname: blockTimestamp, contract_name: BasePool
Ssa_name: _blockTimestampLast_3, name: _blockTimestampLast

Name: _blockTimestampLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
_blockTimestampLast_3(uint32) := blockTimestamp_1(uint32)
asgn
Finance type key: (-1, -1)
[i]Type for _blockTimestampLast

Name: _blockTimestampLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Copied _blockTimestampLast
Source address: u
Propogating parameters and globals to SSA variables...
Ssa_name: balanceNative_1, name: balanceNative

Name: balanceNative Function: _update
Num: 7
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: balanceForeign_1, name: balanceForeign

Name: balanceForeign Function: _update
Num: 8
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: balanceNative_1, name: balanceNative

Name: balanceNative Function: _update
Num: 7
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: balanceForeign_1, name: balanceForeign

Name: balanceForeign Function: _update
Num: 8
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
[i] balanceNative cleared
[i] balanceForeign cleared
[i] reserveNative cleared
[i] reserveForeign cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: balanceNative_1, name: balanceNative

Name: balanceNative Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: balanceNative_1 Function: _update
Num: 7
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
Ssa_name: balanceForeign_1, name: balanceForeign

Name: balanceForeign Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: balanceForeign_1 Function: _update
Num: 8
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
Ssa_name: reserveNative_1, name: reserveNative

Name: reserveNative Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: reserveNative_1 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: reserveForeign_1, name: reserveForeign

Name: reserveForeign Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: reserveForeign_1 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: priceNativeCumulativeLast_1, name: priceNativeCumulativeLast

Name: priceNativeCumulativeLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: priceForeignCumulativeLast_1, name: priceForeignCumulativeLast

Name: priceForeignCumulativeLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _blockTimestampLast_2, name: _blockTimestampLast

Name: _blockTimestampLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
balanceNative_1(uint256) := ϕ(['nativeBalance_2', 'balanceNative_1', 'nativeBalance_2'])
Phi
[i]Type for balanceNative

Name: balanceNative Function: _update
Num: 7
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
balanceForeign_1(uint256) := ϕ(['balanceForeign_1', 'foreignBalance_2', 'foreignBalance_2'])
Phi
[i]Type for balanceForeign

Name: balanceForeign Function: _update
Num: 8
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
reserveNative_1(uint112) := ϕ(['reserveNative_1', 'nativeReserve_1', 'reserveNative_1'])
Phi
[i]Type for reserveNative

Name: reserveNative Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
reserveForeign_1(uint112) := ϕ(['reserveForeign_1', 'foreignReserve_1', 'reserveForeign_1'])
Phi
[i]Type for reserveForeign

Name: reserveForeign Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
priceNativeCumulativeLast_1(uint256) := ϕ(['priceNativeCumulativeLast_0', 'priceNativeCumulativeLast_2'])
Phi
[i]Type for priceNativeCumulativeLast

Name: priceNativeCumulativeLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
priceForeignCumulativeLast_1(uint256) := ϕ(['priceForeignCumulativeLast_0', 'priceForeignCumulativeLast_2'])
Phi
[i]Type for priceForeignCumulativeLast

Name: priceForeignCumulativeLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_blockTimestampLast_2(uint32) := ϕ(['_blockTimestampLast_3', '_blockTimestampLast_0'])
Phi
[i]Type for _blockTimestampLast

Name: _blockTimestampLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_235 cleared
[i] TMP_236 cleared
[i] TMP_238 cleared
[i] TMP_239 cleared
[i] TMP_240 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: balanceNative_1, name: balanceNative

Name: balanceNative Function: _update
Num: 7
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: balanceForeign_1, name: balanceForeign

Name: balanceForeign Function: _update
Num: 8
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: balanceNative_1, name: balanceNative

Name: balanceNative Function: _update
Num: 7
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: balanceForeign_1, name: balanceForeign

Name: balanceForeign Function: _update
Num: 8
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
TMP_235(uint112) := 5192296858534827628530496329220095(uint112)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for TMP_235

Name: TMP_235 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 5192296858534827628530496329220095
Fields: 
Finance Type: undef
XXXX
TMP_236(bool) = balanceNative_1 <= TMP_235
lnorm: u rnorm: 0
[i]Type for TMP_236

Name: TMP_236 Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_238(uint112) := 5192296858534827628530496329220095(uint112)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for TMP_238

Name: TMP_238 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 5192296858534827628530496329220095
Fields: 
Finance Type: undef
XXXX
TMP_239(bool) = balanceForeign_1 <= TMP_238
lnorm: u rnorm: 0
[i]Type for TMP_239

Name: TMP_239 Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_240(bool) = TMP_236 && TMP_239
[i]Type for TMP_240

Name: TMP_240 Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_241(None) = SOLIDITY_CALL require(bool,string)(TMP_240,BasePool::_update: Balance Overflow)
[i]Type for TMP_241

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_242 cleared
[i] TMP_243 cleared
[i] TMP_244 cleared
[i] blockTimestamp cleared
Propogating parameters and globals to SSA variables...
Ssa_name: blockTimestamp_1, name: blockTimestamp

Name: blockTimestamp Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: blockTimestamp, Num: 1
Globalname: blockTimestamp, contract_name: BasePool
End popogation
TMP_242(uint256) = 2 (c)** 32
[i]Type for TMP_242

Name: TMP_242 Function: _update
Num: 
Den: 
Address: u
Norm: 32
LF: None
Value: 4294967296
Fields: 
Finance Type: undef
XXXX
TMP_243(uint256) = block.timestamp (c)% TMP_242
[i]Type for TMP_243

Name: TMP_243 Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_244 = CONVERT TMP_243 to uint32
Converting TMP_243

Name: TMP_243 Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_244

Name: TMP_244 Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
blockTimestamp_1(uint32) := TMP_244(uint32)
asgn
Finance type key: (-1, -1)
[i]Type for blockTimestamp

Name: blockTimestamp Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_245 cleared
[i] timeElapsed cleared
Propogating parameters and globals to SSA variables...
Ssa_name: blockTimestamp_1, name: blockTimestamp

Name: blockTimestamp Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: blockTimestamp, Num: 1
Globalname: blockTimestamp, contract_name: BasePool
Ssa_name: _blockTimestampLast_2, name: _blockTimestampLast

Name: _blockTimestampLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: blockTimestamp_1, name: blockTimestamp

Name: blockTimestamp Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: blockTimestamp, Num: 1
Globalname: blockTimestamp, contract_name: BasePool
Ssa_name: _blockTimestampLast_2, name: _blockTimestampLast

Name: _blockTimestampLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: timeElapsed_1, name: timeElapsed

Name: timeElapsed Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: timeElapsed, Num: 1
Globalname: timeElapsed, contract_name: BasePool
End popogation
TMP_245(uint32) = blockTimestamp_1 (c)- _blockTimestampLast_2
Source address: u
[i]Type for TMP_245

Name: TMP_245 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
timeElapsed_1(uint32) := TMP_245(uint32)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for timeElapsed

Name: timeElapsed Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_246 cleared
[i] TMP_247 cleared
[i] TMP_248 cleared
[i] TMP_249 cleared
[i] TMP_250 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveNative_1, name: reserveNative

Name: reserveNative Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: timeElapsed_1, name: timeElapsed

Name: timeElapsed Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: reserveForeign_1, name: reserveForeign

Name: reserveForeign Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: reserveNative_1, name: reserveNative

Name: reserveNative Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: timeElapsed_1, name: timeElapsed

Name: timeElapsed Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: reserveForeign_1, name: reserveForeign

Name: reserveForeign Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_246(bool) = timeElapsed_1 > 0
lnorm: u rnorm: 0
[i]Type for TMP_246

Name: TMP_246 Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_247(bool) = reserveNative_1 != 0
[i]Type for TMP_247

Name: TMP_247 Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_248(bool) = TMP_246 && TMP_247
[i]Type for TMP_248

Name: TMP_248 Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_249(bool) = reserveForeign_1 != 0
[i]Type for TMP_249

Name: TMP_249 Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_250(bool) = TMP_248 && TMP_249
[i]Type for TMP_250

Name: TMP_250 Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_251 cleared
[i] TMP_252 cleared
[i] TMP_253 cleared
[i] TMP_254 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveNative_1, name: reserveNative

Name: reserveNative Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: timeElapsed_1, name: timeElapsed

Name: timeElapsed Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: reserveForeign_1, name: reserveForeign

Name: reserveForeign Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: priceNativeCumulativeLast_1, name: priceNativeCumulativeLast

Name: priceNativeCumulativeLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: reserveNative_1, name: reserveNative

Name: reserveNative Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: timeElapsed_1, name: timeElapsed

Name: timeElapsed Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: priceNativeCumulativeLast_1, name: priceNativeCumulativeLast

Name: priceNativeCumulativeLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: reserveForeign_1, name: reserveForeign

Name: reserveForeign Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: priceNativeCumulativeLast_2, name: priceNativeCumulativeLast

Name: priceNativeCumulativeLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_251(uint224) = LIBRARY_CALL, dest:UQ112x112, function:UQ112x112.encode(uint112), arguments:['reserveForeign_1'] 
Found: None
Written func info: UQ112x112, encode
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
reserveForeign
hers norm: u
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
reserveForeign
hers norm: u
([-1], [-1, -1], 'u', "'u'", 'u', -1)
[i]Type for TMP_251

Name: TMP_251 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
TMP_252(uint224) = LIBRARY_CALL, dest:UQ112x112, function:UQ112x112.uqdiv(uint224,uint112), arguments:['TMP_251', 'reserveNative_1'] 
Found: None
Written func info: UQ112x112, uqdiv
Retvar: ('t', ['1'], ['2'], 1, "'u'", 'u')
TMP_251
reserveNative
hers norm: u
Retvar: ('t', ['1'], ['2'], 1, "'u'", 'u')
TMP_251
reserveNative
hers norm: u
([-1, -1], [-1, -1], 'u', "'u'", 'u', -1)
[i]Type for TMP_252

Name: TMP_252 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
TMP_253 = CONVERT TMP_252 to uint256
Converting TMP_252

Name: TMP_252 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_253

Name: TMP_253 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
TMP_254(uint256) = TMP_253 (c)* timeElapsed_1
lnorm: u rnorm: u
Source address: u
[i]Type for TMP_254

Name: TMP_254 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
priceNativeCumulativeLast_2(uint256) = priceNativeCumulativeLast_1 (c)+ TMP_254
Source address: u
[i]Type for priceNativeCumulativeLast

Name: priceNativeCumulativeLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Copied priceNativeCumulativeLast
Source address: u
[i] TMP_259 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: balanceNative_1, name: balanceNative

Name: balanceNative Function: _update
Num: 7
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: balanceNative_1, name: balanceNative

Name: balanceNative Function: _update
Num: 7
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: _reserveNative_2, name: _reserveNative

Name: _reserveNative Function: _update
Num: 7
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
TMP_259 = CONVERT balanceNative_1 to uint112
Converting balanceNative_1

Name: balanceNative Function: _update
Num: 7
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Source address: u
[i]Type for TMP_259

Name: TMP_259 Function: _update
Num: 7
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
_reserveNative_2(uint112) := TMP_259(uint112)
asgn
7
-1
Finance type key: (0, -1)
[i]Type for _reserveNative

Name: _reserveNative Function: _update
Num: 7
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
Copied _reserveNative
Source address: u
[i] TMP_255 cleared
[i] TMP_256 cleared
[i] TMP_257 cleared
[i] TMP_258 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveNative_1, name: reserveNative

Name: reserveNative Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: timeElapsed_1, name: timeElapsed

Name: timeElapsed Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: reserveForeign_1, name: reserveForeign

Name: reserveForeign Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: priceForeignCumulativeLast_1, name: priceForeignCumulativeLast

Name: priceForeignCumulativeLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: reserveNative_1, name: reserveNative

Name: reserveNative Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: priceForeignCumulativeLast_1, name: priceForeignCumulativeLast

Name: priceForeignCumulativeLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: timeElapsed_1, name: timeElapsed

Name: timeElapsed Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: reserveForeign_1, name: reserveForeign

Name: reserveForeign Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: priceForeignCumulativeLast_2, name: priceForeignCumulativeLast

Name: priceForeignCumulativeLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_255(uint224) = LIBRARY_CALL, dest:UQ112x112, function:UQ112x112.encode(uint112), arguments:['reserveNative_1'] 
Found: None
Written func info: UQ112x112, encode
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
reserveNative
hers norm: u
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
reserveNative
hers norm: u
([-1], [-1, -1], 'u', "'u'", 'u', -1)
[i]Type for TMP_255

Name: TMP_255 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
TMP_256(uint224) = LIBRARY_CALL, dest:UQ112x112, function:UQ112x112.uqdiv(uint224,uint112), arguments:['TMP_255', 'reserveForeign_1'] 
Found: None
Written func info: UQ112x112, uqdiv
Retvar: ('t', ['1'], ['2'], 1, "'u'", 'u')
TMP_255
reserveForeign
hers norm: u
Retvar: ('t', ['1'], ['2'], 1, "'u'", 'u')
TMP_255
reserveForeign
hers norm: u
([-1, -1], [-1, -1], 'u', "'u'", 'u', -1)
[i]Type for TMP_256

Name: TMP_256 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
TMP_257 = CONVERT TMP_256 to uint256
Converting TMP_256

Name: TMP_256 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_257

Name: TMP_257 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
TMP_258(uint256) = TMP_257 (c)* timeElapsed_1
lnorm: u rnorm: u
Source address: u
[i]Type for TMP_258

Name: TMP_258 Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
priceForeignCumulativeLast_2(uint256) = priceForeignCumulativeLast_1 (c)+ TMP_258
Source address: u
[i]Type for priceForeignCumulativeLast

Name: priceForeignCumulativeLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Copied priceForeignCumulativeLast
Source address: u
[i] TMP_260 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: balanceForeign_1, name: balanceForeign

Name: balanceForeign Function: _update
Num: 8
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: balanceForeign_1, name: balanceForeign

Name: balanceForeign Function: _update
Num: 8
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: _reserveForeign_2, name: _reserveForeign

Name: _reserveForeign Function: _update
Num: 8
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
TMP_260 = CONVERT balanceForeign_1 to uint112
Converting balanceForeign_1

Name: balanceForeign Function: _update
Num: 8
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Source address: u
[i]Type for TMP_260

Name: TMP_260 Function: _update
Num: 8
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
_reserveForeign_2(uint112) := TMP_260(uint112)
asgn
8
-1
Finance type key: (0, -1)
[i]Type for _reserveForeign

Name: _reserveForeign Function: _update
Num: 8
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
Copied _reserveForeign
Source address: u
Propogating parameters and globals to SSA variables...
Ssa_name: blockTimestamp_1, name: blockTimestamp

Name: blockTimestamp Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: blockTimestamp, Num: 1
Globalname: blockTimestamp, contract_name: BasePool
Ssa_name: blockTimestamp_1, name: blockTimestamp

Name: blockTimestamp Function: _update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: blockTimestamp, Num: 1
Globalname: blockTimestamp, contract_name: BasePool
Ssa_name: _blockTimestampLast_3, name: _blockTimestampLast

Name: _blockTimestampLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
_blockTimestampLast_3(uint32) := blockTimestamp_1(uint32)
asgn
Finance type key: (-1, -1)
[i]Type for _blockTimestampLast

Name: _blockTimestampLast Function: _update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Copied _blockTimestampLast
Source address: u
Propogating parameters and globals to SSA variables...
Ssa_name: balanceNative_1, name: balanceNative

Name: balanceNative Function: _update
Num: 7
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: balanceForeign_1, name: balanceForeign

Name: balanceForeign Function: _update
Num: 8
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: balanceNative_1, name: balanceNative

Name: balanceNative Function: _update
Num: 7
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: balanceForeign_1, name: balanceForeign

Name: balanceForeign Function: _update
Num: 8
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
Propogating parameters and globals to SSA variables...
Ssa_name: foreignAmountOut_2, name: foreignAmountOut

Name: foreignAmountOut Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: foreignAmountOut, Num: 2
Globalname: foreignAmountOut, contract_name: BasePool
Ssa_name: nativeAmountOut_2, name: nativeAmountOut

Name: nativeAmountOut Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: nativeAmountOut, Num: 2
Globalname: nativeAmountOut, contract_name: BasePool
Ssa_name: foreignAmountIn_1, name: foreignAmountIn

Name: foreignAmountIn_1 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeAmountIn_1, name: nativeAmountIn

Name: nativeAmountIn_1 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: swap
Num: 
Den: 
Address: -999
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: foreignAmountOut_2, name: foreignAmountOut

Name: foreignAmountOut Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: foreignAmountOut, Num: 2
Globalname: foreignAmountOut, contract_name: BasePool
Ssa_name: nativeAmountOut_2, name: nativeAmountOut

Name: nativeAmountOut Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: nativeAmountOut, Num: 2
Globalname: nativeAmountOut, contract_name: BasePool
Ssa_name: foreignAmountIn_1, name: foreignAmountIn

Name: foreignAmountIn_1 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeAmountIn_1, name: nativeAmountIn

Name: nativeAmountIn_1 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: swap
Num: 
Den: 
Address: -999
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
End popogation
Propogating parameters and globals to SSA variables...
Ssa_name: nativeAmountOut_2, name: nativeAmountOut

Name: nativeAmountOut Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: nativeAmountOut, Num: 2
Globalname: nativeAmountOut, contract_name: BasePool
Ssa_name: nativeAmountOut_2, name: nativeAmountOut

Name: nativeAmountOut Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: nativeAmountOut, Num: 2
Globalname: nativeAmountOut, contract_name: BasePool
End popogation
RETURN nativeAmountOut_2
RETURN

Name: nativeAmountOut Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Reading Function: _update
Function _update not marked
Reading Function: slitherConstructorConstantVariables
Function slitherConstructorConstantVariables not marked
Address: 1, Label: global:_owner
Address: 2, Label: global:_tokenApprovals
Address: 3, Label: global:_owners
Address: -999, Label: swap:to
Address: -998, Label: mint:to
Address: 4, Label: mint:TMP_139
Address: 4, Label: global:this
Address: 5, Label: None:None
Address: 6, Label: mint:foreignAsset
Address: 7, Label: swap:_nativeAsset
Address: 8, Label: swap:_foreignAsset
Head Addr: 1
    Norm: 0
    Set: {1}
    Fin: NULL
Head Addr: 2
    Norm: 0
    Set: {2}
    Fin: NULL
Head Addr: 3
    Norm: 0
    Set: {3}
    Fin: NULL
Head Addr: -999
    Norm: 0
    Set: {-999}
    Fin: NULL
Head Addr: -998
    Norm: 0
    Set: {-998}
    Fin: NULL
Head Addr: 4
    Norm: u
    Set: {4}
    Fin: NULL
Head Addr: 5
    Norm: u
    Set: {5}
    Fin: NULL
Head Addr: 6
    Norm: u
    Set: {6}
    Fin: NULL
Head Addr: 7
    Norm: u
    Set: {7}
    Fin: NULL
Head Addr: 8
    Norm: u
    Set: {8}
    Fin: NULL
Function count: 52
Time elapsed: 0.337613582611084
Analyzed_contracts_count: 16
total compilations: 5, contracts: 16
contract name: VaderRouter
Add to address_to_label {'global:_owner': 1, 'global:_tokenApprovals': 2, 'global:_owners': 3, 'swap:to': -999, 'mint:to': -998, 'mint:TMP_139': 4, 'global:this': 4, 'None:None': 5, 'mint:foreignAsset': 6, 'swap:_nativeAsset': 7, 'swap:_foreignAsset': 8, 'global:nativeAsset': 9}
Addr:global_nativeAsset : 18
Add to address_to_label {'global:_owner': 1, 'global:_tokenApprovals': 2, 'global:_owners': 3, 'swap:to': -999, 'mint:to': -998, 'mint:TMP_139': 4, 'global:this': 4, 'None:None': 5, 'mint:foreignAsset': 6, 'swap:_nativeAsset': 7, 'swap:_foreignAsset': 8, 'global:nativeAsset': 9, 'global:foreignAsset': 10}
Addr:global_foreignAsset : 6
Addr:global__owner : 0
Addr:global__tokenApprovals : 0
Addr:global__owners : 0
Add to address_to_label {'global:_owner': 1, 'global:_tokenApprovals': 2, 'global:_owners': 3, 'swap:to': -999, 'mint:to': -998, 'mint:TMP_139': 4, 'global:this': 4, 'None:None': 5, 'mint:foreignAsset': 6, 'swap:_nativeAsset': 7, 'swap:_foreignAsset': 8, 'global:nativeAsset': 9, 'global:foreignAsset': 10, 'global:_ZERO_ADDRESS': 11}
Addr:global__ZERO_ADDRESS : 0
Add to address_to_label {'global:_owner': 1, 'global:_tokenApprovals': 2, 'global:_owners': 3, 'swap:to': -999, 'mint:to': -998, 'mint:TMP_139': 4, 'global:this': 4, 'None:None': 5, 'mint:foreignAsset': 6, 'swap:_nativeAsset': 7, 'swap:_foreignAsset': 8, 'global:nativeAsset': 9, 'global:foreignAsset': 10, 'global:_ZERO_ADDRESS': 11, 'removeLiquidity:tokenA': -997}
Addr:removeLiquidity_tokenA : 18
Add to address_to_label {'global:_owner': 1, 'global:_tokenApprovals': 2, 'global:_owners': 3, 'swap:to': -999, 'mint:to': -998, 'mint:TMP_139': 4, 'global:this': 4, 'None:None': 5, 'mint:foreignAsset': 6, 'swap:_nativeAsset': 7, 'swap:_foreignAsset': 8, 'global:nativeAsset': 9, 'global:foreignAsset': 10, 'global:_ZERO_ADDRESS': 11, 'removeLiquidity:tokenA': -997, 'removeLiquidity:tokenB': -996}
Addr:removeLiquidity_tokenB : 6
Add to address_to_label {'global:_owner': 1, 'global:_tokenApprovals': 2, 'global:_owners': 3, 'swap:to': -999, 'mint:to': -998, 'mint:TMP_139': 4, 'global:this': 4, 'None:None': 5, 'mint:foreignAsset': 6, 'swap:_nativeAsset': 7, 'swap:_foreignAsset': 8, 'global:nativeAsset': 9, 'global:foreignAsset': 10, 'global:_ZERO_ADDRESS': 11, 'removeLiquidity:tokenA': -997, 'removeLiquidity:tokenB': -996, 'removeLiquidity:to': -995}
Addr:removeLiquidity_to : 0
Add to address_to_label {'global:_owner': 1, 'global:_tokenApprovals': 2, 'global:_owners': 3, 'swap:to': -999, 'mint:to': -998, 'mint:TMP_139': 4, 'global:this': 4, 'None:None': 5, 'mint:foreignAsset': 6, 'swap:_nativeAsset': 7, 'swap:_foreignAsset': 8, 'global:nativeAsset': 9, 'global:foreignAsset': 10, 'global:_ZERO_ADDRESS': 11, 'removeLiquidity:tokenA': -997, 'removeLiquidity:tokenB': -996, 'removeLiquidity:to': -995, 'swapExactTokensForTokens:path': -994}
Addr:swapExactTokensForTokens_path : 0
Add to address_to_label {'global:_owner': 1, 'global:_tokenApprovals': 2, 'global:_owners': 3, 'swap:to': -999, 'mint:to': -998, 'mint:TMP_139': 4, 'global:this': 4, 'None:None': 5, 'mint:foreignAsset': 6, 'swap:_nativeAsset': 7, 'swap:_foreignAsset': 8, 'global:nativeAsset': 9, 'global:foreignAsset': 10, 'global:_ZERO_ADDRESS': 11, 'removeLiquidity:tokenA': -997, 'removeLiquidity:tokenB': -996, 'removeLiquidity:to': -995, 'swapExactTokensForTokens:path': -994, 'swapExactTokensForTokens:to': -993}
Addr:swapExactTokensForTokens_to : 0
Add to address_to_label {'global:_owner': 1, 'global:_tokenApprovals': 2, 'global:_owners': 3, 'swap:to': -999, 'mint:to': -998, 'mint:TMP_139': 4, 'global:this': 4, 'None:None': 5, 'mint:foreignAsset': 6, 'swap:_nativeAsset': 7, 'swap:_foreignAsset': 8, 'global:nativeAsset': 9, 'global:foreignAsset': 10, 'global:_ZERO_ADDRESS': 11, 'removeLiquidity:tokenA': -997, 'removeLiquidity:tokenB': -996, 'removeLiquidity:to': -995, 'swapExactTokensForTokens:path': -994, 'swapExactTokensForTokens:to': -993, 'swapTokensForExactTokens:path': -992}
Addr:swapTokensForExactTokens_path : 0
Add to address_to_label {'global:_owner': 1, 'global:_tokenApprovals': 2, 'global:_owners': 3, 'swap:to': -999, 'mint:to': -998, 'mint:TMP_139': 4, 'global:this': 4, 'None:None': 5, 'mint:foreignAsset': 6, 'swap:_nativeAsset': 7, 'swap:_foreignAsset': 8, 'global:nativeAsset': 9, 'global:foreignAsset': 10, 'global:_ZERO_ADDRESS': 11, 'removeLiquidity:tokenA': -997, 'removeLiquidity:tokenB': -996, 'removeLiquidity:to': -995, 'swapExactTokensForTokens:path': -994, 'swapExactTokensForTokens:to': -993, 'swapTokensForExactTokens:path': -992, 'swapTokensForExactTokens:to': -991}
Addr:swapTokensForExactTokens_to : 0
Add to address_to_label {'global:_owner': 1, 'global:_tokenApprovals': 2, 'global:_owners': 3, 'swap:to': -999, 'mint:to': -998, 'mint:TMP_139': 4, 'global:this': 4, 'None:None': 5, 'mint:foreignAsset': 6, 'swap:_nativeAsset': 7, 'swap:_foreignAsset': 8, 'global:nativeAsset': 9, 'global:foreignAsset': 10, 'global:_ZERO_ADDRESS': 11, 'removeLiquidity:tokenA': -997, 'removeLiquidity:tokenB': -996, 'removeLiquidity:to': -995, 'swapExactTokensForTokens:path': -994, 'swapExactTokensForTokens:to': -993, 'swapTokensForExactTokens:path': -992, 'swapTokensForExactTokens:to': -991, 'calculateInGivenOut:path': -990}
Addr:calculateInGivenOut_path : 0
Add to address_to_label {'global:_owner': 1, 'global:_tokenApprovals': 2, 'global:_owners': 3, 'swap:to': -999, 'mint:to': -998, 'mint:TMP_139': 4, 'global:this': 4, 'None:None': 5, 'mint:foreignAsset': 6, 'swap:_nativeAsset': 7, 'swap:_foreignAsset': 8, 'global:nativeAsset': 9, 'global:foreignAsset': 10, 'global:_ZERO_ADDRESS': 11, 'removeLiquidity:tokenA': -997, 'removeLiquidity:tokenB': -996, 'removeLiquidity:to': -995, 'swapExactTokensForTokens:path': -994, 'swapExactTokensForTokens:to': -993, 'swapTokensForExactTokens:path': -992, 'swapTokensForExactTokens:to': -991, 'calculateInGivenOut:path': -990, 'calculateOutGivenIn:path': -989}
Addr:calculateOutGivenIn_path : 0
Mark functions Adding: VaderRouter, constructor, True
[*]Marked
Mark functions Adding: VaderRouter, addLiquidity, True
[X]No Binary
Mark functions Adding: VaderRouter, addLiquidity, True
[X]No Binary
Mark functions Adding: VaderRouter, removeLiquidity, True
[*]Marked
Mark functions Adding: VaderRouter, swapExactTokensForTokens, True
[*]Marked
Mark functions Adding: VaderRouter, swapTokensForExactTokens, True
[*]Marked
Mark functions Adding: VaderRouter, initialize, True
[*]Marked
Mark functions Adding: VaderRouter, _swap, True
[x] Not visible 
Mark functions Adding: VaderRouter, _addLiquidity, True
[x] Not visible 
Mark functions Adding: VaderRouter, calculateInGivenOut, True
[*]Marked
Mark functions Adding: VaderRouter, calculateOutGivenIn, True
[*]Marked
Mark functions Adding: VaderRouter, slitherConstructorConstantVariables, True
[x] Not visible 
State_var: factory
Finding type for factory(IVaderPoolFactory ... )
Value: u
Source address: u
State_var: _ZERO_ADDRESS
Finding type for _ZERO_ADDRESS(address ... )
prev address? u
Head Addr: 11
    Norm: 0
    Set: {11}
    Fin: NULL
Source address: 11
State_var: _owner
Finding type for _owner(address ... )
prev address? u
Head Addr: 1
    Norm: 0
    Set: {1}
    Fin: NULL
Source address: 1
State_var: _ONE_YEAR
Finding type for _ONE_YEAR(uint256 ... )
Value: u
Source address: u
State_var: reserve
Finding type for reserve(IVaderReserve ... )
Value: u
Source address: u
contract name: IBasePool
contract name: IVaderPool
contract name: IVaderPoolFactory
contract name: IVaderRouter
contract name: IVaderReserve
contract name: VaderMath
Addr:global__owner : 0
Addr:global__tokenApprovals : 0
Addr:global__owners : 0
Addr:swap_to : 0
Mark functions Adding: VaderMath, calculateLiquidityUnits, True
[*]Marked
Mark functions Adding: VaderMath, calculateSlipAdjustment, True
[*]Marked
Mark functions Adding: VaderMath, calculateLoss, True
[*]Marked
Mark functions Adding: VaderMath, calculateSwap, True
[*]Marked
Mark functions Adding: VaderMath, calculateSwapReverse, True
[*]Marked
Mark functions Adding: VaderMath, delta, True
[*]Marked
Mark functions Adding: VaderMath, pow, True
[*]Marked
Mark functions Adding: VaderMath, root, True
[*]Marked
Mark functions Adding: VaderMath, slitherConstructorConstantVariables, True
[x] Not visible 
State_var: ONE
Source address: u
contract name: Ownable
contract name: IERC20
contract name: IERC20Permit
contract name: SafeERC20
contract name: IERC721
contract name: Address
contract name: Context
contract name: IERC165
contract name: ProtocolConstants
Running check on VaderRouter
Reading Function: constructor
Checking funcion...



constructor
Function name: constructor
Finding type for _factory(IVaderPoolFactory ... )
Value: u
New param cache [[[-1], [-1], 'u', None, [], -1, 'u', 'u']]
FIND RETURN
ENTRY_POINT
constructor(IVaderPoolFactory)


_ZERO_ADDRESS_1(address) := ϕ(['_ZERO_ADDRESS_5', '_ZERO_ADDRESS_0', '_ZERO_ADDRESS_3'])
TMP_15 = CONVERT _ZERO_ADDRESS_1 to IVaderPoolFactory
TMP_16(bool) = _factory_1 != TMP_15
TMP_17(None) = SOLIDITY_CALL require(bool,string)(TMP_16,VaderRouter::constructor: Incorrect Arguments)
factory_1(IVaderPoolFactory) := _factory_1(IVaderPoolFactory)


Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: _ZERO_ADDRESS_1, name: _ZERO_ADDRESS

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _ZERO_ADDRESS, Num: 1
Globalname: _ZERO_ADDRESS, contract_name: VaderRouter
global...

Name: PIC_87 Function: None
Num: -1
Den: -1
Address: 11
Norm: 0
LF: _ZERO_ADDRESS
Value: u
Fields: 
Finance Type: undef
Source address: 11
_ZERO_ADDRESS_1(address) := ϕ(['_ZERO_ADDRESS_5', '_ZERO_ADDRESS_0', '_ZERO_ADDRESS_3'])
Phi
[i]Type for _ZERO_ADDRESS

Name: _ZERO_ADDRESS Function: constructor
Num: -1
Den: -1
Address: 11
Norm: 0
LF: _ZERO_ADDRESS
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_15 cleared
[i] TMP_16 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _factory_1, name: _factory

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _factory_1 Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _factory, Num: 1
Globalname: _factory, contract_name: VaderRouter
Ssa_name: _ZERO_ADDRESS_1, name: _ZERO_ADDRESS

Name: _ZERO_ADDRESS Function: constructor
Num: -1
Den: -1
Address: 11
Norm: 0
LF: _ZERO_ADDRESS
Value: u
Fields: 
Finance Type: undef
Ssa_name: _ZERO_ADDRESS_1, name: _ZERO_ADDRESS

Name: _ZERO_ADDRESS Function: constructor
Num: -1
Den: -1
Address: 11
Norm: 0
LF: _ZERO_ADDRESS
Value: u
Fields: 
Finance Type: undef
Ssa_name: _factory_1, name: _factory

Name: _factory_1 Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _factory_1 Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _factory, Num: 1
Globalname: _factory, contract_name: VaderRouter
End popogation
TMP_15 = CONVERT _ZERO_ADDRESS_1 to IVaderPoolFactory
Converting _ZERO_ADDRESS_1

Name: _ZERO_ADDRESS Function: constructor
Num: -1
Den: -1
Address: 11
Norm: 0
LF: _ZERO_ADDRESS
Value: u
Fields: 
Finance Type: undef
Source address: 11
VaderPoolFactory
[i]Type for TMP_15

Name: TMP_15 Function: constructor
Num: -1
Den: -1
Address: 11
Norm: 0
LF: VaderPoolFactory
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_16(bool) = _factory_1 != TMP_15
[i]Type for TMP_16

Name: TMP_16 Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_17(None) = SOLIDITY_CALL require(bool,string)(TMP_16,VaderRouter::constructor: Incorrect Arguments)
[i]Type for TMP_17

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: _factory_1, name: _factory

Name: _factory_1 Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _factory_1 Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _factory, Num: 1
Globalname: _factory, contract_name: VaderRouter
Ssa_name: _factory_1, name: _factory

Name: _factory_1 Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _factory_1 Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _factory, Num: 1
Globalname: _factory, contract_name: VaderRouter
Ssa_name: factory_1, name: factory

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: factory, Num: 1
Globalname: factory, contract_name: VaderRouter
global...

Name: PIC_86 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
End popogation
factory_1(IVaderPoolFactory) := _factory_1(IVaderPoolFactory)
asgn
Finance type key: (-1, -1)
[i]Type for factory

Name: factory Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Copied factory
Source address: u


_ZERO_ADDRESS_1(address) := ϕ(['_ZERO_ADDRESS_5', '_ZERO_ADDRESS_0', '_ZERO_ADDRESS_3'])
TMP_15 = CONVERT _ZERO_ADDRESS_1 to IVaderPoolFactory
TMP_16(bool) = _factory_1 != TMP_15
TMP_17(None) = SOLIDITY_CALL require(bool,string)(TMP_16,VaderRouter::constructor: Incorrect Arguments)
factory_1(IVaderPoolFactory) := _factory_1(IVaderPoolFactory)


Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: _ZERO_ADDRESS_1, name: _ZERO_ADDRESS

Name: _ZERO_ADDRESS Function: constructor
Num: -1
Den: -1
Address: 11
Norm: 0
LF: _ZERO_ADDRESS
Value: u
Fields: 
Finance Type: undef
_ZERO_ADDRESS_1(address) := ϕ(['_ZERO_ADDRESS_5', '_ZERO_ADDRESS_0', '_ZERO_ADDRESS_3'])
Phi
[i]Type for _ZERO_ADDRESS

Name: _ZERO_ADDRESS Function: constructor
Num: -1
Den: -1
Address: 11
Norm: 0
LF: _ZERO_ADDRESS
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_15 cleared
[i] TMP_16 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _factory_1, name: _factory

Name: _factory_1 Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _factory_1 Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _factory, Num: 1
Globalname: _factory, contract_name: VaderRouter
Ssa_name: _ZERO_ADDRESS_1, name: _ZERO_ADDRESS

Name: _ZERO_ADDRESS Function: constructor
Num: -1
Den: -1
Address: 11
Norm: 0
LF: _ZERO_ADDRESS
Value: u
Fields: 
Finance Type: undef
Ssa_name: _ZERO_ADDRESS_1, name: _ZERO_ADDRESS

Name: _ZERO_ADDRESS Function: constructor
Num: -1
Den: -1
Address: 11
Norm: 0
LF: _ZERO_ADDRESS
Value: u
Fields: 
Finance Type: undef
Ssa_name: _factory_1, name: _factory

Name: _factory_1 Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _factory_1 Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _factory, Num: 1
Globalname: _factory, contract_name: VaderRouter
End popogation
TMP_15 = CONVERT _ZERO_ADDRESS_1 to IVaderPoolFactory
Converting _ZERO_ADDRESS_1

Name: _ZERO_ADDRESS Function: constructor
Num: -1
Den: -1
Address: 11
Norm: 0
LF: _ZERO_ADDRESS
Value: u
Fields: 
Finance Type: undef
Source address: 11
VaderPoolFactory
[i]Type for TMP_15

Name: TMP_15 Function: constructor
Num: -1
Den: -1
Address: 11
Norm: 0
LF: VaderPoolFactory
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_16(bool) = _factory_1 != TMP_15
[i]Type for TMP_16

Name: TMP_16 Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_17(None) = SOLIDITY_CALL require(bool,string)(TMP_16,VaderRouter::constructor: Incorrect Arguments)
[i]Type for TMP_17

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: _factory_1, name: _factory

Name: _factory_1 Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _factory_1 Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _factory, Num: 1
Globalname: _factory, contract_name: VaderRouter
Ssa_name: _factory_1, name: _factory

Name: _factory_1 Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _factory_1 Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _factory, Num: 1
Globalname: _factory, contract_name: VaderRouter
Ssa_name: factory_1, name: factory

Name: factory Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
factory_1(IVaderPoolFactory) := _factory_1(IVaderPoolFactory)
asgn
Finance type key: (-1, -1)
[i]Type for factory

Name: factory Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Copied factory
Source address: u
Reading Function: addLiquidity
Function addLiquidity not marked
Reading Function: addLiquidity
Function addLiquidity not marked
Reading Function: removeLiquidity
Checking funcion...



removeLiquidity
Function name: removeLiquidity
Finding type for tokenA(address ... )
prev address? u
Head Addr: -997
    Norm: 18
    Set: {-997}
    Fin: NULL
Finding type for tokenB(address ... )
prev address? u
Head Addr: -996
    Norm: 6
    Set: {-996}
    Fin: NULL
Finding type for id(uint256 ... )
Value: u
Finding type for amountAMin(uint256 ... )
Value: u
Finding type for amountBMin(uint256 ... )
Value: u
Finding type for to(address ... )
prev address? u
Head Addr: -995
    Norm: 0
    Set: {-995}
    Fin: NULL
Finding type for deadline(uint256 ... )
Value: u
New param cache [[[], [], 18, 'tokenA', [], -1, -997, 'u'], [[], [], 6, 'tokenB', [], -1, -996, 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u'], [[], [], 0, 'to', [], -1, -995, 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u']]
FIND RETURN
ENTRY_POINT
removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)


factory_2(IVaderPoolFactory) := ϕ(['factory_13', 'factory_0', 'factory_16', 'factory_10', 'factory_19', 'factory_21', 'factory_15', 'factory_26', 'factory_1', 'factory_24', 'factory_7'])
reserve_1(IVaderReserve) := ϕ(['reserve_0', 'reserve_8', 'reserve_7'])
MODIFIER_CALL, VaderRouter.ensure(uint256)(deadline_1)
TMP_26(IVaderPool) = HIGH_LEVEL_CALL, dest:factory_3(IVaderPoolFactory), function:getPool, arguments:['tokenA_1', 'tokenB_1']  
factory_4(IVaderPoolFactory) := ϕ(['factory_13', 'factory_16', 'factory_10', 'factory_19', 'factory_21', 'factory_15', 'factory_26', 'factory_1', 'factory_24', 'factory_7', 'factory_3'])
reserve_3(IVaderReserve) := ϕ(['reserve_2', 'reserve_8', 'reserve_7'])
pool_1(IVaderPool) := TMP_26(IVaderPool)
TMP_27 = CONVERT pool_1 to address
HIGH_LEVEL_CALL, dest:pool_1(IVaderPool), function:transferFrom, arguments:['msg.sender', 'TMP_27', 'id_1']  
factory_5(IVaderPoolFactory) := ϕ(['factory_13', 'factory_16', 'factory_10', 'factory_19', 'factory_21', 'factory_15', 'factory_26', 'factory_1', 'factory_24', 'factory_4', 'factory_7'])
reserve_4(IVaderReserve) := ϕ(['reserve_3', 'reserve_8', 'reserve_7'])
TUPLE_2(uint256,uint256,uint256) = HIGH_LEVEL_CALL, dest:pool_1(IVaderPool), function:burn, arguments:['id_1', 'to_1']  
factory_6(IVaderPoolFactory) := ϕ(['factory_13', 'factory_5', 'factory_16', 'factory_10', 'factory_19', 'factory_21', 'factory_15', 'factory_26', 'factory_1', 'factory_24', 'factory_7'])
reserve_5(IVaderReserve) := ϕ(['reserve_4', 'reserve_8', 'reserve_7'])
amountNative_1(uint256)= UNPACK TUPLE_2 index: 0 
amountForeign_1(uint256)= UNPACK TUPLE_2 index: 1 
coveredLoss_1(uint256)= UNPACK TUPLE_2 index: 2 
TMP_35(address) = HIGH_LEVEL_CALL, dest:factory_6(IVaderPoolFactory), function:nativeAsset, arguments:[]  
factory_7(IVaderPoolFactory) := ϕ(['factory_13', 'factory_6', 'factory_16', 'factory_10', 'factory_19', 'factory_21', 'factory_15', 'factory_26', 'factory_1', 'factory_24', 'factory_7'])
reserve_6(IVaderReserve) := ϕ(['reserve_5', 'reserve_8', 'reserve_7'])
TMP_36(bool) = tokenA_1 == TMP_35
CONDITION TMP_36
amountA_2(uint256) := amountForeign_1(uint256)
amountB_2(uint256) := amountNative_1(uint256)
amountA_1(uint256) := amountNative_1(uint256)
amountB_1(uint256) := amountForeign_1(uint256)
amountA_3(uint256) := ϕ(['amountA_1', 'amountA_2'])
amountB_3(uint256) := ϕ(['amountB_1', 'amountB_2'])
TMP_29(bool) = amountA_3 >= amountAMin_1
TMP_30(None) = SOLIDITY_CALL require(bool,string)(TMP_29,UniswapV2Router: INSUFFICIENT_A_AMOUNT)
TMP_31(bool) = amountB_3 >= amountBMin_1
TMP_32(None) = SOLIDITY_CALL require(bool,string)(TMP_31,UniswapV2Router: INSUFFICIENT_B_AMOUNT)
HIGH_LEVEL_CALL, dest:reserve_6(IVaderReserve), function:reimburseImpermanentLoss, arguments:['msg.sender', 'coveredLoss_1']  
reserve_7(IVaderReserve) := ϕ(['reserve_6', 'reserve_8', 'reserve_7'])


Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: factory_2, name: factory

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: factory, Num: 2
Globalname: factory, contract_name: VaderRouter
global...

Name: factory Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Ssa_name: reserve_1, name: reserve

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: reserve, Num: 1
Globalname: reserve, contract_name: VaderRouter
global...

Name: PIC_90 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
factory_2(IVaderPoolFactory) := ϕ(['factory_13', 'factory_0', 'factory_16', 'factory_10', 'factory_19', 'factory_21', 'factory_15', 'factory_26', 'factory_1', 'factory_24', 'factory_7'])
Phi
[i]Type for factory

Name: factory Function: removeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
reserve_1(IVaderReserve) := ϕ(['reserve_0', 'reserve_8', 'reserve_7'])
Phi
[i]Type for reserve

Name: reserve Function: removeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: deadline_1, name: deadline

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: deadline_1 Function: removeLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: deadline, Num: 1
Globalname: deadline, contract_name: VaderRouter
Ssa_name: deadline_1, name: deadline

Name: deadline_1 Function: removeLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: deadline_1 Function: removeLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: deadline, Num: 1
Globalname: deadline, contract_name: VaderRouter
End popogation
MODIFIER_CALL, VaderRouter.ensure(uint256)(deadline_1)
New param cache [[[], [], 'u', None, [], -1, 'u', 'u']]
[[], [], 'u', None, [], -1, 'u', 'u']

Name: deadline Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
ensure(uint256)
Propogating All
Propogating All
deadline_1
Ssa_name: deadline_1, name: deadline

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: deadline_1 Function: ensure
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
[i] deadline cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: deadline_1, name: deadline

Name: deadline_1 Function: ensure
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: deadline_1 Function: ensure
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: deadline, Num: 1
Globalname: deadline, contract_name: VaderRouter
deadline_1(uint256) := ϕ(['deadline_1', 'deadline_1', 'deadline_1', 'deadline_1'])
Phi

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: deadline_1 Function: removeLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for deadline

Name: deadline Function: ensure
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_112 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: deadline_1, name: deadline

Name: deadline Function: ensure
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: deadline_1 Function: ensure
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: deadline, Num: 1
Globalname: deadline, contract_name: VaderRouter
Ssa_name: deadline_1, name: deadline

Name: deadline_1 Function: ensure
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: deadline_1 Function: ensure
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: deadline, Num: 1
Globalname: deadline, contract_name: VaderRouter
End popogation
TMP_112(bool) = deadline_1 >= block.timestamp
lnorm: u rnorm: u
Source address: u
Source address: u
[i]Type for TMP_112

Name: TMP_112 Function: ensure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_113(None) = SOLIDITY_CALL require(bool,string)(TMP_112,VaderRouter::ensure: Expired)
[i]Type for TMP_113

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] deadline cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: deadline_1, name: deadline

Name: deadline_1 Function: ensure
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: deadline_1 Function: ensure
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: deadline, Num: 1
Globalname: deadline, contract_name: VaderRouter
deadline_1(uint256) := ϕ(['deadline_1', 'deadline_1', 'deadline_1', 'deadline_1'])
Phi

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: deadline_1 Function: removeLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for deadline

Name: deadline Function: ensure
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_112 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: deadline_1, name: deadline

Name: deadline Function: ensure
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: deadline_1 Function: ensure
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: deadline, Num: 1
Globalname: deadline, contract_name: VaderRouter
Ssa_name: deadline_1, name: deadline

Name: deadline_1 Function: ensure
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: deadline_1 Function: ensure
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: deadline, Num: 1
Globalname: deadline, contract_name: VaderRouter
End popogation
TMP_112(bool) = deadline_1 >= block.timestamp
lnorm: u rnorm: u
Source address: u
Source address: u
[i]Type for TMP_112

Name: TMP_112 Function: ensure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_113(None) = SOLIDITY_CALL require(bool,string)(TMP_112,VaderRouter::ensure: Expired)
[i]Type for TMP_113

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_26 cleared
[i] pool cleared
Propogating parameters and globals to SSA variables...
Ssa_name: tokenB_1, name: tokenB

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: -996

Name: tokenB_1 Function: removeLiquidity
Num: 
Den: 
Address: -996
Norm: 6
LF: tokenB
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: tokenA_1, name: tokenA

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: -997

Name: tokenA_1 Function: removeLiquidity
Num: 
Den: 
Address: -997
Norm: 18
LF: tokenA
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: factory_3, name: factory

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: factory, Num: 3
Globalname: factory, contract_name: VaderRouter
global...

Name: factory Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Ssa_name: factory_3, name: factory

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: tokenB_1, name: tokenB

Name: tokenB_1 Function: removeLiquidity
Num: 
Den: 
Address: -996
Norm: 6
LF: tokenB
Value: u
Fields: 
Finance Type: undef
Ssa_name: tokenA_1, name: tokenA

Name: tokenA_1 Function: removeLiquidity
Num: 
Den: 
Address: -997
Norm: 18
LF: tokenA
Value: u
Fields: 
Finance Type: undef
Ssa_name: pool_1, name: pool

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pool, Num: 1
Globalname: pool, contract_name: VaderRouter
End popogation
Ssa_name: factory_4, name: factory

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: factory, Num: 4
Globalname: factory, contract_name: VaderRouter
global...

Name: factory Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Ssa_name: reserve_3, name: reserve

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: reserve, Num: 3
Globalname: reserve, contract_name: VaderRouter
global...

Name: PIC_90 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
TMP_26(IVaderPool) = HIGH_LEVEL_CALL, dest:factory_3(IVaderPoolFactory), function:getPool, arguments:['tokenA_1', 'tokenB_1']  
High Call: getPool
Running querryfc
Found: None
Written func info: IVaderPoolFactory, getPool
[i]Type for TMP_26

Name: TMP_26 Function: removeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
factory_4(IVaderPoolFactory) := ϕ(['factory_13', 'factory_16', 'factory_10', 'factory_19', 'factory_21', 'factory_15', 'factory_26', 'factory_1', 'factory_24', 'factory_7', 'factory_3'])
Phi
[i]Type for factory

Name: factory Function: removeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
reserve_3(IVaderReserve) := ϕ(['reserve_2', 'reserve_8', 'reserve_7'])
Phi
[i]Type for reserve

Name: reserve Function: removeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
pool_1(IVaderPool) := TMP_26(IVaderPool)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for pool

Name: pool Function: removeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_27 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: pool_1, name: pool

Name: pool Function: removeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: id_1, name: id

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: id_1 Function: removeLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: id, Num: 1
Globalname: id, contract_name: VaderRouter
Ssa_name: pool_1, name: pool

Name: pool Function: removeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: id_1, name: id

Name: id_1 Function: removeLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: id_1 Function: removeLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: id, Num: 1
Globalname: id, contract_name: VaderRouter
End popogation
Ssa_name: factory_5, name: factory

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: factory, Num: 5
Globalname: factory, contract_name: VaderRouter
global...

Name: factory Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Ssa_name: reserve_4, name: reserve

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: reserve, Num: 4
Globalname: reserve, contract_name: VaderRouter
global...

Name: PIC_90 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
TMP_27 = CONVERT pool_1 to address
Converting pool_1

Name: pool Function: removeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_27

Name: TMP_27 Function: removeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
HIGH_LEVEL_CALL, dest:pool_1(IVaderPool), function:transferFrom, arguments:['msg.sender', 'TMP_27', 'id_1']  
High Call: transferFrom
factory_5(IVaderPoolFactory) := ϕ(['factory_13', 'factory_16', 'factory_10', 'factory_19', 'factory_21', 'factory_15', 'factory_26', 'factory_1', 'factory_24', 'factory_4', 'factory_7'])
Phi
[i]Type for factory

Name: factory Function: removeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
reserve_4(IVaderReserve) := ϕ(['reserve_3', 'reserve_8', 'reserve_7'])
Phi
[i]Type for reserve

Name: reserve Function: removeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] amountNative cleared
[i] amountForeign cleared
[i] coveredLoss cleared
Propogating parameters and globals to SSA variables...
Ssa_name: to_1, name: to

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: -995

Name: to_1 Function: removeLiquidity
Num: 
Den: 
Address: -995
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: pool_1, name: pool

Name: pool Function: removeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: id_1, name: id

Name: id_1 Function: removeLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: id_1 Function: removeLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: id, Num: 1
Globalname: id, contract_name: VaderRouter
Ssa_name: to_1, name: to

Name: to_1 Function: removeLiquidity
Num: 
Den: 
Address: -995
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: pool_1, name: pool

Name: pool Function: removeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: id_1, name: id

Name: id_1 Function: removeLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: id_1 Function: removeLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: id, Num: 1
Globalname: id, contract_name: VaderRouter
Ssa_name: amountNative_1, name: amountNative

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: amountNative, Num: 1
Globalname: amountNative, contract_name: VaderRouter
Ssa_name: amountForeign_1, name: amountForeign

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: amountForeign, Num: 1
Globalname: amountForeign, contract_name: VaderRouter
Ssa_name: coveredLoss_1, name: coveredLoss

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: coveredLoss, Num: 1
Globalname: coveredLoss, contract_name: VaderRouter
End popogation
Ssa_name: factory_6, name: factory

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: factory, Num: 6
Globalname: factory, contract_name: VaderRouter
global...

Name: factory Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Ssa_name: reserve_5, name: reserve

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: reserve, Num: 5
Globalname: reserve, contract_name: VaderRouter
global...

Name: PIC_90 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
TUPLE_2(uint256,uint256,uint256) = HIGH_LEVEL_CALL, dest:pool_1(IVaderPool), function:burn, arguments:['id_1', 'to_1']  
High Call: burn
Running querryfc
Found: None
Written func info: IVaderPool, burn
[i]Type for TUPLE_2

Name: TUPLE_2 Function: removeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
factory_6(IVaderPoolFactory) := ϕ(['factory_13', 'factory_5', 'factory_16', 'factory_10', 'factory_19', 'factory_21', 'factory_15', 'factory_26', 'factory_1', 'factory_24', 'factory_7'])
Phi
[i]Type for factory

Name: factory Function: removeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
reserve_5(IVaderReserve) := ϕ(['reserve_4', 'reserve_8', 'reserve_7'])
Phi
[i]Type for reserve

Name: reserve Function: removeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
amountNative_1(uint256)= UNPACK TUPLE_2 index: 0 
([-1], [-1], 'u', 'u', 'u', -1)
[i]Type for amountNative

Name: amountNative Function: removeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
amountForeign_1(uint256)= UNPACK TUPLE_2 index: 1 
([-1], [-1], 'u', 'u', 'u', -1)
[i]Type for amountForeign

Name: amountForeign Function: removeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
coveredLoss_1(uint256)= UNPACK TUPLE_2 index: 2 
([-1], [-1], 'u', 'u', 'u', -1)
[i]Type for coveredLoss

Name: coveredLoss Function: removeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_35 cleared
[i] TMP_36 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: tokenA_1, name: tokenA

Name: tokenA_1 Function: removeLiquidity
Num: 
Den: 
Address: -997
Norm: 18
LF: tokenA
Value: u
Fields: 
Finance Type: undef
Ssa_name: factory_6, name: factory

Name: factory Function: removeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: factory_6, name: factory

Name: factory Function: removeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: tokenA_1, name: tokenA

Name: tokenA_1 Function: removeLiquidity
Num: 
Den: 
Address: -997
Norm: 18
LF: tokenA
Value: u
Fields: 
Finance Type: undef
End popogation
Ssa_name: factory_7, name: factory

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: factory, Num: 7
Globalname: factory, contract_name: VaderRouter
global...

Name: factory Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Ssa_name: reserve_6, name: reserve

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: reserve, Num: 6
Globalname: reserve, contract_name: VaderRouter
global...

Name: PIC_90 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
TMP_35(address) = HIGH_LEVEL_CALL, dest:factory_6(IVaderPoolFactory), function:nativeAsset, arguments:[]  
High Call: nativeAsset
Running querryfc
Found: None
Written func info: IVaderPoolFactory, nativeAsset
Retvar: ('c', ['global:nativeAsset'], ['-1'], 18, "'u'", 'u')
{'global:_owner': 1, 'global:_tokenApprovals': 2, 'global:_owners': 3, 'swap:to': -999, 'mint:to': -998, 'mint:TMP_139': 4, 'global:this': 4, 'None:None': 5, 'mint:foreignAsset': 6, 'swap:_nativeAsset': 7, 'swap:_foreignAsset': 8, 'global:nativeAsset': 9, 'global:foreignAsset': 10, 'global:_ZERO_ADDRESS': 11, 'removeLiquidity:tokenA': -997, 'removeLiquidity:tokenB': -996, 'removeLiquidity:to': -995, 'swapExactTokensForTokens:path': -994, 'swapExactTokensForTokens:to': -993, 'swapTokensForExactTokens:path': -992, 'swapTokensForExactTokens:to': -991, 'calculateInGivenOut:path': -990, 'calculateOutGivenIn:path': -989}
([9], [-1], 18, "'u'", 'u', -1)
[i]Type for TMP_35

Name: TMP_35 Function: removeLiquidity
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
factory_7(IVaderPoolFactory) := ϕ(['factory_13', 'factory_6', 'factory_16', 'factory_10', 'factory_19', 'factory_21', 'factory_15', 'factory_26', 'factory_1', 'factory_24', 'factory_7'])
Phi
[i]Type for factory

Name: factory Function: removeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
reserve_6(IVaderReserve) := ϕ(['reserve_5', 'reserve_8', 'reserve_7'])
Phi
[i]Type for reserve

Name: reserve Function: removeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_36(bool) = tokenA_1 == TMP_35
[i]Type for TMP_36

Name: TMP_36 Function: removeLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] amountA cleared
[i] amountB cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountNative_1, name: amountNative

Name: amountNative Function: removeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountForeign_1, name: amountForeign

Name: amountForeign Function: removeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountNative_1, name: amountNative

Name: amountNative Function: removeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountForeign_1, name: amountForeign

Name: amountForeign Function: removeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountA_2, name: amountA

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: amountA, Num: 2
Globalname: amountA, contract_name: VaderRouter
Ssa_name: amountB_2, name: amountB

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: amountB, Num: 2
Globalname: amountB, contract_name: VaderRouter
End popogation
amountA_2(uint256) := amountForeign_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for amountA

Name: amountA Function: removeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
amountB_2(uint256) := amountNative_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for amountB

Name: amountB Function: removeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] amountA cleared
[i] amountB cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountNative_1, name: amountNative

Name: amountNative Function: removeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountForeign_1, name: amountForeign

Name: amountForeign Function: removeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountNative_1, name: amountNative

Name: amountNative Function: removeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountForeign_1, name: amountForeign

Name: amountForeign Function: removeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountA_1, name: amountA

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: amountA, Num: 1
Globalname: amountA, contract_name: VaderRouter
Ssa_name: amountB_1, name: amountB

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: amountB, Num: 1
Globalname: amountB, contract_name: VaderRouter
End popogation
amountA_1(uint256) := amountNative_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for amountA

Name: amountA Function: removeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
amountB_1(uint256) := amountForeign_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for amountB

Name: amountB Function: removeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] amountA cleared
[i] amountB cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: amountA_3, name: amountA

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: amountA, Num: 3
Globalname: amountA, contract_name: VaderRouter
Ssa_name: amountB_3, name: amountB

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: amountB, Num: 3
Globalname: amountB, contract_name: VaderRouter
amountA_3(uint256) := ϕ(['amountA_1', 'amountA_2'])
Phi

Name: amountA Function: removeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amountA Function: removeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for amountA

Name: amountA Function: removeLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
amountB_3(uint256) := ϕ(['amountB_1', 'amountB_2'])
Phi

Name: amountB Function: removeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amountB Function: removeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for amountB

Name: amountB Function: removeLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_29 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountA_3, name: amountA

Name: amountA Function: removeLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: amountA, Num: 3
Globalname: amountA, contract_name: VaderRouter
Ssa_name: amountAMin_1, name: amountAMin

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountAMin_1 Function: removeLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountAMin, Num: 1
Globalname: amountAMin, contract_name: VaderRouter
Ssa_name: amountA_3, name: amountA

Name: amountA Function: removeLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: amountA, Num: 3
Globalname: amountA, contract_name: VaderRouter
Ssa_name: amountAMin_1, name: amountAMin

Name: amountAMin_1 Function: removeLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountAMin_1 Function: removeLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountAMin, Num: 1
Globalname: amountAMin, contract_name: VaderRouter
End popogation
TMP_29(bool) = amountA_3 >= amountAMin_1
lnorm: u rnorm: u
[i]Type for TMP_29

Name: TMP_29 Function: removeLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_30(None) = SOLIDITY_CALL require(bool,string)(TMP_29,UniswapV2Router: INSUFFICIENT_A_AMOUNT)
[i]Type for TMP_30

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_31 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountB_3, name: amountB

Name: amountB Function: removeLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: amountB, Num: 3
Globalname: amountB, contract_name: VaderRouter
Ssa_name: amountBMin_1, name: amountBMin

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountBMin_1 Function: removeLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountBMin, Num: 1
Globalname: amountBMin, contract_name: VaderRouter
Ssa_name: amountB_3, name: amountB

Name: amountB Function: removeLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: amountB, Num: 3
Globalname: amountB, contract_name: VaderRouter
Ssa_name: amountBMin_1, name: amountBMin

Name: amountBMin_1 Function: removeLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountBMin_1 Function: removeLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountBMin, Num: 1
Globalname: amountBMin, contract_name: VaderRouter
End popogation
TMP_31(bool) = amountB_3 >= amountBMin_1
lnorm: u rnorm: u
[i]Type for TMP_31

Name: TMP_31 Function: removeLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_32(None) = SOLIDITY_CALL require(bool,string)(TMP_31,UniswapV2Router: INSUFFICIENT_B_AMOUNT)
[i]Type for TMP_32

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: coveredLoss_1, name: coveredLoss

Name: coveredLoss Function: removeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: reserve_6, name: reserve

Name: reserve Function: removeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: reserve_6, name: reserve

Name: reserve Function: removeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: coveredLoss_1, name: coveredLoss

Name: coveredLoss Function: removeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
Ssa_name: reserve_7, name: reserve

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: reserve, Num: 7
Globalname: reserve, contract_name: VaderRouter
global...

Name: PIC_90 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
HIGH_LEVEL_CALL, dest:reserve_6(IVaderReserve), function:reimburseImpermanentLoss, arguments:['msg.sender', 'coveredLoss_1']  
High Call: reimburseImpermanentLoss
reserve_7(IVaderReserve) := ϕ(['reserve_6', 'reserve_8', 'reserve_7'])
Phi
[i]Type for reserve

Name: reserve Function: removeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX


factory_2(IVaderPoolFactory) := ϕ(['factory_13', 'factory_0', 'factory_16', 'factory_10', 'factory_19', 'factory_21', 'factory_15', 'factory_26', 'factory_1', 'factory_24', 'factory_7'])
reserve_1(IVaderReserve) := ϕ(['reserve_0', 'reserve_8', 'reserve_7'])
MODIFIER_CALL, VaderRouter.ensure(uint256)(deadline_1)
TMP_26(IVaderPool) = HIGH_LEVEL_CALL, dest:factory_3(IVaderPoolFactory), function:getPool, arguments:['tokenA_1', 'tokenB_1']  
factory_4(IVaderPoolFactory) := ϕ(['factory_13', 'factory_16', 'factory_10', 'factory_19', 'factory_21', 'factory_15', 'factory_26', 'factory_1', 'factory_24', 'factory_7', 'factory_3'])
reserve_3(IVaderReserve) := ϕ(['reserve_2', 'reserve_8', 'reserve_7'])
pool_1(IVaderPool) := TMP_26(IVaderPool)
TMP_27 = CONVERT pool_1 to address
HIGH_LEVEL_CALL, dest:pool_1(IVaderPool), function:transferFrom, arguments:['msg.sender', 'TMP_27', 'id_1']  
factory_5(IVaderPoolFactory) := ϕ(['factory_13', 'factory_16', 'factory_10', 'factory_19', 'factory_21', 'factory_15', 'factory_26', 'factory_1', 'factory_24', 'factory_4', 'factory_7'])
reserve_4(IVaderReserve) := ϕ(['reserve_3', 'reserve_8', 'reserve_7'])
TUPLE_2(uint256,uint256,uint256) = HIGH_LEVEL_CALL, dest:pool_1(IVaderPool), function:burn, arguments:['id_1', 'to_1']  
factory_6(IVaderPoolFactory) := ϕ(['factory_13', 'factory_5', 'factory_16', 'factory_10', 'factory_19', 'factory_21', 'factory_15', 'factory_26', 'factory_1', 'factory_24', 'factory_7'])
reserve_5(IVaderReserve) := ϕ(['reserve_4', 'reserve_8', 'reserve_7'])
amountNative_1(uint256)= UNPACK TUPLE_2 index: 0 
amountForeign_1(uint256)= UNPACK TUPLE_2 index: 1 
coveredLoss_1(uint256)= UNPACK TUPLE_2 index: 2 
TMP_35(address) = HIGH_LEVEL_CALL, dest:factory_6(IVaderPoolFactory), function:nativeAsset, arguments:[]  
factory_7(IVaderPoolFactory) := ϕ(['factory_13', 'factory_6', 'factory_16', 'factory_10', 'factory_19', 'factory_21', 'factory_15', 'factory_26', 'factory_1', 'factory_24', 'factory_7'])
reserve_6(IVaderReserve) := ϕ(['reserve_5', 'reserve_8', 'reserve_7'])
TMP_36(bool) = tokenA_1 == TMP_35
CONDITION TMP_36
amountA_2(uint256) := amountForeign_1(uint256)
amountB_2(uint256) := amountNative_1(uint256)
amountA_1(uint256) := amountNative_1(uint256)
amountB_1(uint256) := amountForeign_1(uint256)
amountA_3(uint256) := ϕ(['amountA_1', 'amountA_2'])
amountB_3(uint256) := ϕ(['amountB_1', 'amountB_2'])
TMP_29(bool) = amountA_3 >= amountAMin_1
TMP_30(None) = SOLIDITY_CALL require(bool,string)(TMP_29,UniswapV2Router: INSUFFICIENT_A_AMOUNT)
TMP_31(bool) = amountB_3 >= amountBMin_1
TMP_32(None) = SOLIDITY_CALL require(bool,string)(TMP_31,UniswapV2Router: INSUFFICIENT_B_AMOUNT)
HIGH_LEVEL_CALL, dest:reserve_6(IVaderReserve), function:reimburseImpermanentLoss, arguments:['msg.sender', 'coveredLoss_1']  
reserve_7(IVaderReserve) := ϕ(['reserve_6', 'reserve_8', 'reserve_7'])


Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: factory_2, name: factory

Name: factory Function: removeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: reserve_1, name: reserve

Name: reserve Function: removeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
factory_2(IVaderPoolFactory) := ϕ(['factory_13', 'factory_0', 'factory_16', 'factory_10', 'factory_19', 'factory_21', 'factory_15', 'factory_26', 'factory_1', 'factory_24', 'factory_7'])
Phi
[i]Type for factory

Name: factory Function: removeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
reserve_1(IVaderReserve) := ϕ(['reserve_0', 'reserve_8', 'reserve_7'])
Phi
[i]Type for reserve

Name: reserve Function: removeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: deadline_1, name: deadline

Name: deadline_1 Function: removeLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: deadline_1 Function: removeLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: deadline, Num: 1
Globalname: deadline, contract_name: VaderRouter
Ssa_name: deadline_1, name: deadline

Name: deadline_1 Function: removeLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: deadline_1 Function: removeLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: deadline, Num: 1
Globalname: deadline, contract_name: VaderRouter
End popogation
MODIFIER_CALL, VaderRouter.ensure(uint256)(deadline_1)
New param cache [[[], [], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[], [], 'u', None, [], -1, 'u']]
[i] TMP_26 cleared
[i] pool cleared
Propogating parameters and globals to SSA variables...
Ssa_name: tokenB_1, name: tokenB

Name: tokenB_1 Function: removeLiquidity
Num: 
Den: 
Address: -996
Norm: 6
LF: tokenB
Value: u
Fields: 
Finance Type: undef
Ssa_name: tokenA_1, name: tokenA

Name: tokenA_1 Function: removeLiquidity
Num: 
Den: 
Address: -997
Norm: 18
LF: tokenA
Value: u
Fields: 
Finance Type: undef
Ssa_name: factory_3, name: factory

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: factory_3, name: factory

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: tokenB_1, name: tokenB

Name: tokenB_1 Function: removeLiquidity
Num: 
Den: 
Address: -996
Norm: 6
LF: tokenB
Value: u
Fields: 
Finance Type: undef
Ssa_name: tokenA_1, name: tokenA

Name: tokenA_1 Function: removeLiquidity
Num: 
Den: 
Address: -997
Norm: 18
LF: tokenA
Value: u
Fields: 
Finance Type: undef
Ssa_name: pool_1, name: pool

Name: pool Function: removeLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pool, Num: 1
Globalname: pool, contract_name: VaderRouter
End popogation
Ssa_name: factory_4, name: factory

Name: factory Function: removeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: reserve_3, name: reserve

Name: reserve Function: removeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_26(IVaderPool) = HIGH_LEVEL_CALL, dest:factory_3(IVaderPoolFactory), function:getPool, arguments:['tokenA_1', 'tokenB_1']  
High Call: getPool
Running querryfc
Found: None
Written func info: IVaderPoolFactory, getPool
[i]Type for TMP_26

Name: TMP_26 Function: removeLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
factory_4(IVaderPoolFactory) := ϕ(['factory_13', 'factory_16', 'factory_10', 'factory_19', 'factory_21', 'factory_15', 'factory_26', 'factory_1', 'factory_24', 'factory_7', 'factory_3'])
Phi
[i]Type for factory

Name: factory Function: removeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
reserve_3(IVaderReserve) := ϕ(['reserve_2', 'reserve_8', 'reserve_7'])
Phi
[i]Type for reserve

Name: reserve Function: removeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
pool_1(IVaderPool) := TMP_26(IVaderPool)
asgn
Finance type key: (-1, -1)
[i]Type for pool

Name: pool Function: removeLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_27 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: pool_1, name: pool

Name: pool Function: removeLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pool, Num: 1
Globalname: pool, contract_name: VaderRouter
Ssa_name: id_1, name: id

Name: id_1 Function: removeLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: id_1 Function: removeLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: id, Num: 1
Globalname: id, contract_name: VaderRouter
Ssa_name: pool_1, name: pool

Name: pool Function: removeLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pool, Num: 1
Globalname: pool, contract_name: VaderRouter
Ssa_name: id_1, name: id

Name: id_1 Function: removeLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: id_1 Function: removeLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: id, Num: 1
Globalname: id, contract_name: VaderRouter
End popogation
Ssa_name: factory_5, name: factory

Name: factory Function: removeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: reserve_4, name: reserve

Name: reserve Function: removeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_27 = CONVERT pool_1 to address
Converting pool_1

Name: pool Function: removeLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_27

Name: TMP_27 Function: removeLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
HIGH_LEVEL_CALL, dest:pool_1(IVaderPool), function:transferFrom, arguments:['msg.sender', 'TMP_27', 'id_1']  
High Call: transferFrom
factory_5(IVaderPoolFactory) := ϕ(['factory_13', 'factory_16', 'factory_10', 'factory_19', 'factory_21', 'factory_15', 'factory_26', 'factory_1', 'factory_24', 'factory_4', 'factory_7'])
Phi
[i]Type for factory

Name: factory Function: removeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
reserve_4(IVaderReserve) := ϕ(['reserve_3', 'reserve_8', 'reserve_7'])
Phi
[i]Type for reserve

Name: reserve Function: removeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] amountNative cleared
[i] amountForeign cleared
[i] coveredLoss cleared
Propogating parameters and globals to SSA variables...
Ssa_name: to_1, name: to

Name: to_1 Function: removeLiquidity
Num: 
Den: 
Address: -995
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: pool_1, name: pool

Name: pool Function: removeLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pool, Num: 1
Globalname: pool, contract_name: VaderRouter
Ssa_name: id_1, name: id

Name: id_1 Function: removeLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: id_1 Function: removeLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: id, Num: 1
Globalname: id, contract_name: VaderRouter
Ssa_name: to_1, name: to

Name: to_1 Function: removeLiquidity
Num: 
Den: 
Address: -995
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: pool_1, name: pool

Name: pool Function: removeLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pool, Num: 1
Globalname: pool, contract_name: VaderRouter
Ssa_name: id_1, name: id

Name: id_1 Function: removeLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: id_1 Function: removeLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: id, Num: 1
Globalname: id, contract_name: VaderRouter
Ssa_name: amountNative_1, name: amountNative

Name: amountNative Function: removeLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: amountNative, Num: 1
Globalname: amountNative, contract_name: VaderRouter
Ssa_name: amountForeign_1, name: amountForeign

Name: amountForeign Function: removeLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: amountForeign, Num: 1
Globalname: amountForeign, contract_name: VaderRouter
Ssa_name: coveredLoss_1, name: coveredLoss

Name: coveredLoss Function: removeLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: coveredLoss, Num: 1
Globalname: coveredLoss, contract_name: VaderRouter
End popogation
Ssa_name: factory_6, name: factory

Name: factory Function: removeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: reserve_5, name: reserve

Name: reserve Function: removeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_2(uint256,uint256,uint256) = HIGH_LEVEL_CALL, dest:pool_1(IVaderPool), function:burn, arguments:['id_1', 'to_1']  
High Call: burn
Running querryfc
Found: None
Written func info: IVaderPool, burn
[i]Type for TUPLE_2

Name: TUPLE_2 Function: removeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
factory_6(IVaderPoolFactory) := ϕ(['factory_13', 'factory_5', 'factory_16', 'factory_10', 'factory_19', 'factory_21', 'factory_15', 'factory_26', 'factory_1', 'factory_24', 'factory_7'])
Phi
[i]Type for factory

Name: factory Function: removeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
reserve_5(IVaderReserve) := ϕ(['reserve_4', 'reserve_8', 'reserve_7'])
Phi
[i]Type for reserve

Name: reserve Function: removeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
amountNative_1(uint256)= UNPACK TUPLE_2 index: 0 
([-1], [-1], 'u', 'u', 'u', -1)
[i]Type for amountNative

Name: amountNative Function: removeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
amountForeign_1(uint256)= UNPACK TUPLE_2 index: 1 
([-1], [-1], 'u', 'u', 'u', -1)
[i]Type for amountForeign

Name: amountForeign Function: removeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
coveredLoss_1(uint256)= UNPACK TUPLE_2 index: 2 
([-1], [-1], 'u', 'u', 'u', -1)
[i]Type for coveredLoss

Name: coveredLoss Function: removeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_35 cleared
[i] TMP_36 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: tokenA_1, name: tokenA

Name: tokenA_1 Function: removeLiquidity
Num: 
Den: 
Address: -997
Norm: 18
LF: tokenA
Value: u
Fields: 
Finance Type: undef
Ssa_name: factory_6, name: factory

Name: factory Function: removeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: factory_6, name: factory

Name: factory Function: removeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: tokenA_1, name: tokenA

Name: tokenA_1 Function: removeLiquidity
Num: 
Den: 
Address: -997
Norm: 18
LF: tokenA
Value: u
Fields: 
Finance Type: undef
End popogation
Ssa_name: factory_7, name: factory

Name: factory Function: removeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: reserve_6, name: reserve

Name: reserve Function: removeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_35(address) = HIGH_LEVEL_CALL, dest:factory_6(IVaderPoolFactory), function:nativeAsset, arguments:[]  
High Call: nativeAsset
Running querryfc
Found: None
Written func info: IVaderPoolFactory, nativeAsset
Retvar: ('c', ['global:nativeAsset'], ['-1'], 18, "'u'", 'u')
{'global:_owner': 1, 'global:_tokenApprovals': 2, 'global:_owners': 3, 'swap:to': -999, 'mint:to': -998, 'mint:TMP_139': 4, 'global:this': 4, 'None:None': 5, 'mint:foreignAsset': 6, 'swap:_nativeAsset': 7, 'swap:_foreignAsset': 8, 'global:nativeAsset': 9, 'global:foreignAsset': 10, 'global:_ZERO_ADDRESS': 11, 'removeLiquidity:tokenA': -997, 'removeLiquidity:tokenB': -996, 'removeLiquidity:to': -995, 'swapExactTokensForTokens:path': -994, 'swapExactTokensForTokens:to': -993, 'swapTokensForExactTokens:path': -992, 'swapTokensForExactTokens:to': -991, 'calculateInGivenOut:path': -990, 'calculateOutGivenIn:path': -989}
([9], [-1], 18, "'u'", 'u', -1)
[i]Type for TMP_35

Name: TMP_35 Function: removeLiquidity
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
factory_7(IVaderPoolFactory) := ϕ(['factory_13', 'factory_6', 'factory_16', 'factory_10', 'factory_19', 'factory_21', 'factory_15', 'factory_26', 'factory_1', 'factory_24', 'factory_7'])
Phi
[i]Type for factory

Name: factory Function: removeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
reserve_6(IVaderReserve) := ϕ(['reserve_5', 'reserve_8', 'reserve_7'])
Phi
[i]Type for reserve

Name: reserve Function: removeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_36(bool) = tokenA_1 == TMP_35
[i]Type for TMP_36

Name: TMP_36 Function: removeLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] amountA cleared
[i] amountB cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountNative_1, name: amountNative

Name: amountNative Function: removeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountForeign_1, name: amountForeign

Name: amountForeign Function: removeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountNative_1, name: amountNative

Name: amountNative Function: removeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountForeign_1, name: amountForeign

Name: amountForeign Function: removeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountA_2, name: amountA

Name: amountA Function: removeLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: amountA, Num: 2
Globalname: amountA, contract_name: VaderRouter
Ssa_name: amountB_2, name: amountB

Name: amountB Function: removeLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: amountB, Num: 2
Globalname: amountB, contract_name: VaderRouter
End popogation
amountA_2(uint256) := amountForeign_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for amountA

Name: amountA Function: removeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
amountB_2(uint256) := amountNative_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for amountB

Name: amountB Function: removeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] amountA cleared
[i] amountB cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountNative_1, name: amountNative

Name: amountNative Function: removeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountForeign_1, name: amountForeign

Name: amountForeign Function: removeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountNative_1, name: amountNative

Name: amountNative Function: removeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountForeign_1, name: amountForeign

Name: amountForeign Function: removeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountA_1, name: amountA

Name: amountA Function: removeLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: amountA, Num: 1
Globalname: amountA, contract_name: VaderRouter
Ssa_name: amountB_1, name: amountB

Name: amountB Function: removeLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: amountB, Num: 1
Globalname: amountB, contract_name: VaderRouter
End popogation
amountA_1(uint256) := amountNative_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for amountA

Name: amountA Function: removeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
amountB_1(uint256) := amountForeign_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for amountB

Name: amountB Function: removeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] amountA cleared
[i] amountB cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: amountA_3, name: amountA

Name: amountA Function: removeLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: amountA, Num: 3
Globalname: amountA, contract_name: VaderRouter
Ssa_name: amountB_3, name: amountB

Name: amountB Function: removeLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: amountB, Num: 3
Globalname: amountB, contract_name: VaderRouter
amountA_3(uint256) := ϕ(['amountA_1', 'amountA_2'])
Phi

Name: amountA Function: removeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amountA Function: removeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for amountA

Name: amountA Function: removeLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
amountB_3(uint256) := ϕ(['amountB_1', 'amountB_2'])
Phi

Name: amountB Function: removeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amountB Function: removeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for amountB

Name: amountB Function: removeLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_29 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountA_3, name: amountA

Name: amountA Function: removeLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: amountA, Num: 3
Globalname: amountA, contract_name: VaderRouter
Ssa_name: amountAMin_1, name: amountAMin

Name: amountAMin_1 Function: removeLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountAMin_1 Function: removeLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountAMin, Num: 1
Globalname: amountAMin, contract_name: VaderRouter
Ssa_name: amountA_3, name: amountA

Name: amountA Function: removeLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: amountA, Num: 3
Globalname: amountA, contract_name: VaderRouter
Ssa_name: amountAMin_1, name: amountAMin

Name: amountAMin_1 Function: removeLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountAMin_1 Function: removeLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountAMin, Num: 1
Globalname: amountAMin, contract_name: VaderRouter
End popogation
TMP_29(bool) = amountA_3 >= amountAMin_1
lnorm: u rnorm: u
[i]Type for TMP_29

Name: TMP_29 Function: removeLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_30(None) = SOLIDITY_CALL require(bool,string)(TMP_29,UniswapV2Router: INSUFFICIENT_A_AMOUNT)
[i]Type for TMP_30

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_31 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountB_3, name: amountB

Name: amountB Function: removeLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: amountB, Num: 3
Globalname: amountB, contract_name: VaderRouter
Ssa_name: amountBMin_1, name: amountBMin

Name: amountBMin_1 Function: removeLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountBMin_1 Function: removeLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountBMin, Num: 1
Globalname: amountBMin, contract_name: VaderRouter
Ssa_name: amountB_3, name: amountB

Name: amountB Function: removeLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: amountB, Num: 3
Globalname: amountB, contract_name: VaderRouter
Ssa_name: amountBMin_1, name: amountBMin

Name: amountBMin_1 Function: removeLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountBMin_1 Function: removeLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountBMin, Num: 1
Globalname: amountBMin, contract_name: VaderRouter
End popogation
TMP_31(bool) = amountB_3 >= amountBMin_1
lnorm: u rnorm: u
[i]Type for TMP_31

Name: TMP_31 Function: removeLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_32(None) = SOLIDITY_CALL require(bool,string)(TMP_31,UniswapV2Router: INSUFFICIENT_B_AMOUNT)
[i]Type for TMP_32

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: coveredLoss_1, name: coveredLoss

Name: coveredLoss Function: removeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: reserve_6, name: reserve

Name: reserve Function: removeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: reserve_6, name: reserve

Name: reserve Function: removeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: coveredLoss_1, name: coveredLoss

Name: coveredLoss Function: removeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
Ssa_name: reserve_7, name: reserve

Name: reserve Function: removeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:reserve_6(IVaderReserve), function:reimburseImpermanentLoss, arguments:['msg.sender', 'coveredLoss_1']  
High Call: reimburseImpermanentLoss
reserve_7(IVaderReserve) := ϕ(['reserve_6', 'reserve_8', 'reserve_7'])
Phi
[i]Type for reserve

Name: reserve Function: removeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
Reading Function: swapExactTokensForTokens
Checking funcion...



swapExactTokensForTokens
Function name: swapExactTokensForTokens
Finding type for amountIn(uint256 ... )
Value: u
Finding type for amountOutMin(uint256 ... )
Value: u
Finding type for path(address[] ... )
prev address? u
Head Addr: -994
    Norm: 0
    Set: {-994}
    Fin: NULL
Finding type for to(address ... )
prev address? u
Changed here
Head Addr: -993
    Norm: 0
    Set: {-993}
    Fin: NULL
Finding type for deadline(uint256 ... )
Value: u
New param cache [[[-1], [-1], 'u', None, [], -1, 'u', 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u'], [[], [], 0, None, [], -1, -994, 'u'], [[], [], 0, 'to', [], -1, -993, 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u']]
FIND RETURN
ENTRY_POINT
swapExactTokensForTokens(uint256,uint256,address[],address,uint256)


MODIFIER_CALL, VaderRouter.ensure(uint256)(deadline_1)
TMP_37(uint256) = INTERNAL_CALL, VaderRouter._swap(uint256,address[],address)(amountIn_1,path_1 (-> []),to_1)
amountOut_1(uint256) := TMP_37(uint256)
TMP_38(bool) = amountOut_1 >= amountOutMin_1
TMP_39(None) = SOLIDITY_CALL require(bool,string)(TMP_38,VaderRouter::swapExactTokensForTokens: Insufficient Trade Output)


Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Ssa_name: deadline_1, name: deadline

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: deadline_1 Function: swapExactTokensForTokens
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: deadline, Num: 1
Globalname: deadline, contract_name: VaderRouter
Ssa_name: deadline_1, name: deadline

Name: deadline_1 Function: swapExactTokensForTokens
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: deadline_1 Function: swapExactTokensForTokens
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: deadline, Num: 1
Globalname: deadline, contract_name: VaderRouter
End popogation
MODIFIER_CALL, VaderRouter.ensure(uint256)(deadline_1)
New param cache [[[], [], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[], [], 'u', None, [], -1, 'u']]
[i] TMP_37 cleared
[i] amountOut cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountIn_1, name: amountIn

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: swapExactTokensForTokens
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountIn, Num: 1
Globalname: amountIn, contract_name: VaderRouter
Ssa_name: to_1, name: to

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: -993

Name: to_1 Function: swapExactTokensForTokens
Num: 
Den: 
Address: -993
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: path_1 (-> []), name: path

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: -994

Name: path_1 (-> []) Function: swapExactTokensForTokens
Num: 
Den: 
Address: -994
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: swapExactTokensForTokens
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: swapExactTokensForTokens
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountIn, Num: 1
Globalname: amountIn, contract_name: VaderRouter
Ssa_name: to_1, name: to

Name: to_1 Function: swapExactTokensForTokens
Num: 
Den: 
Address: -993
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: path_1 (-> []), name: path

Name: path_1 (-> []) Function: swapExactTokensForTokens
Num: 
Den: 
Address: -994
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountOut_1, name: amountOut

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: amountOut, Num: 1
Globalname: amountOut, contract_name: VaderRouter
End popogation
TMP_37(uint256) = INTERNAL_CALL, VaderRouter._swap(uint256,address[],address)(amountIn_1,path_1 (-> []),to_1)
New param cache [[[], [], 'u', None, [], -1, 'u', 'u'], [[], [], 0, None, [], -1, -994, 'u'], [[], [], 0, 'to', [], -1, -993, 'u']]
[[], [], 'u', None, [], -1, 'u', 'u']

Name: amountIn Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[], [], 0, None, [], -1, -994, 'u']

Name: path Function: None
Num: 
Den: 
Address: -994
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
[[], [], 0, 'to', [], -1, -993, 'u']

Name: to Function: None
Num: 
Den: 
Address: -993
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_swap(uint256,address[],address)
Propogating All
Propogating All
path_1 (-> [])
Ssa_name: path_1 (-> []), name: path

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: -994

Name: path_1 (-> []) Function: _swap
Num: 
Den: 
Address: -994
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
path_1 (-> [])
Ssa_name: path_1 (-> []), name: path

Name: path_1 (-> []) Function: _swap
Num: 
Den: 
Address: -994
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: -994

Name: path_1 (-> []) Function: _swap
Num: 
Den: 
Address: -994
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
path_1 (-> [])
Ssa_name: path_1 (-> []), name: path

Name: path_1 (-> []) Function: _swap
Num: 
Den: 
Address: -994
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: -994

Name: path_1 (-> []) Function: _swap
Num: 
Den: 
Address: -994
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
path_1 (-> [])
Ssa_name: path_1 (-> []), name: path

Name: path_1 (-> []) Function: _swap
Num: 
Den: 
Address: -994
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: -994

Name: path_1 (-> []) Function: _swap
Num: 
Den: 
Address: -994
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
path_1 (-> [])
Ssa_name: path_1 (-> []), name: path

Name: path_1 (-> []) Function: _swap
Num: 
Den: 
Address: -994
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: -994

Name: path_1 (-> []) Function: _swap
Num: 
Den: 
Address: -994
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
path_1 (-> [])
Ssa_name: path_1 (-> []), name: path

Name: path_1 (-> []) Function: _swap
Num: 
Den: 
Address: -994
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: -994

Name: path_1 (-> []) Function: _swap
Num: 
Den: 
Address: -994
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
path_1 (-> [])
Ssa_name: path_1 (-> []), name: path

Name: path_1 (-> []) Function: _swap
Num: 
Den: 
Address: -994
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: -994

Name: path_1 (-> []) Function: _swap
Num: 
Den: 
Address: -994
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
path_1 (-> [])
Ssa_name: path_1 (-> []), name: path

Name: path_1 (-> []) Function: _swap
Num: 
Den: 
Address: -994
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: -994

Name: path_1 (-> []) Function: _swap
Num: 
Den: 
Address: -994
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
amountIn_1
Ssa_name: amountIn_1, name: amountIn

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
pool0_1
Ssa_name: pool0_1, name: pool0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
pool1_1
Ssa_name: pool1_1, name: pool1

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
to_1
Ssa_name: to_1, name: to

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: -993

Name: to_1 Function: _swap
Num: 
Den: 
Address: -993
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Copied ftype
amountIn_1
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
pool0_1
Ssa_name: pool0_1, name: pool0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
path_1 (-> [])
Ssa_name: path_1 (-> []), name: path

Name: path_1 (-> []) Function: _swap
Num: 
Den: 
Address: -994
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: -994

Name: path_1 (-> []) Function: _swap
Num: 
Den: 
Address: -994
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
amountIn_1
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
pool_1
Ssa_name: pool_1, name: pool

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
path_1 (-> [])
Ssa_name: path_1 (-> []), name: path

Name: path_1 (-> []) Function: _swap
Num: 
Den: 
Address: -994
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: -994

Name: path_1 (-> []) Function: _swap
Num: 
Den: 
Address: -994
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
nativeAsset_1
Ssa_name: nativeAsset_1, name: nativeAsset

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
to_1
Ssa_name: to_1, name: to

Name: to_1 Function: _swap
Num: 
Den: 
Address: -993
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Source address: -993

Name: to_1 Function: _swap
Num: 
Den: 
Address: -993
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Copied ftype
amountIn_1
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
pool_1
Ssa_name: pool_1, name: pool

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
path_1 (-> [])
Ssa_name: path_1 (-> []), name: path

Name: path_1 (-> []) Function: _swap
Num: 
Den: 
Address: -994
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: -994

Name: path_1 (-> []) Function: _swap
Num: 
Den: 
Address: -994
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
nativeAsset_1
Ssa_name: nativeAsset_1, name: nativeAsset

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
to_1
Ssa_name: to_1, name: to

Name: to_1 Function: _swap
Num: 
Den: 
Address: -993
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Source address: -993

Name: to_1 Function: _swap
Num: 
Den: 
Address: -993
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Copied ftype
amountIn_1
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
pool_1
Ssa_name: pool_1, name: pool

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] amountIn cleared
[i] path cleared
[i] to cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountIn, Num: 1
Globalname: amountIn, contract_name: VaderRouter
Ssa_name: path_1 (-> []), name: path

Name: path_1 (-> []) Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: -994

Name: path_1 (-> []) Function: _swap
Num: 
Den: 
Address: -994
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: to_1, name: to

Name: to_1 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: to
Value: u
Fields: 
Finance Type: undef
Source address: -993

Name: to_1 Function: _swap
Num: 
Den: 
Address: -993
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: factory_8, name: factory

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: factory, Num: 8
Globalname: factory, contract_name: VaderRouter
global...

Name: factory Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
amountIn_1(uint256) := ϕ(['amountIn_1', 'amountIn_1'])
Phi

Name: amountIn_1 Function: swapExactTokensForTokens
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for amountIn

Name: amountIn Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
path_1 (-> [])(address[]) := ϕ(['path_1 (-> [])', 'path_1 (-> [])'])
Phi
[i]Type for path

Name: path Function: _swap
Num: 
Den: 
Address: -994
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
to_1(address) := ϕ(['to_1', 'to_1'])
Phi
[i]Type for to

Name: to Function: _swap
Num: 
Den: 
Address: -993
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
XXXX
factory_8(IVaderPoolFactory) := ϕ(['factory_13', 'factory_0', 'factory_16', 'factory_10', 'factory_19', 'factory_21', 'factory_15', 'factory_26', 'factory_1', 'factory_24', 'factory_7'])
Phi
[i]Type for factory

Name: factory Function: _swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_51 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: path_1 (-> []), name: path

Name: path Function: _swap
Num: 
Den: 
Address: -994
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: path_1 (-> []), name: path

Name: path Function: _swap
Num: 
Den: 
Address: -994
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
REF_8 -> LENGTH path_1 (-> [])
[i]Type for REF_8

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_51(bool) = REF_8 == 3
[i]Type for TMP_51

Name: TMP_51 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_52 cleared
[i] TMP_53 cleared
[i] TMP_54 cleared
[i] TMP_55 cleared
[i] TMP_56 cleared
[i] TMP_57 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: path_1 (-> []), name: path

Name: path Function: _swap
Num: 
Den: 
Address: -994
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: factory_8, name: factory

Name: factory Function: _swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: factory_8, name: factory

Name: factory Function: _swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: path_1 (-> []), name: path

Name: path Function: _swap
Num: 
Den: 
Address: -994
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
Ssa_name: factory_11, name: factory

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: factory, Num: 11
Globalname: factory, contract_name: VaderRouter
global...

Name: factory Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
REF_9(address) -> path_1 (-> [])[0]
INDEX
REFERENCE LEFT VALUE PROPAGATION
Source address: -994
[i]Type for REF_9

Name: path Function: _swap
Num: 
Den: 
Address: -994
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_10(address) -> path_1 (-> [])[1]
INDEX
REFERENCE LEFT VALUE PROPAGATION
Source address: -994
[i]Type for REF_10

Name: path Function: _swap
Num: 
Den: 
Address: -994
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_52(bool) = REF_9 != REF_10
[i]Type for TMP_52

Name: TMP_52 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_11(address) -> path_1 (-> [])[1]
INDEX
REFERENCE LEFT VALUE PROPAGATION
Source address: -994
[i]Type for REF_11

Name: path Function: _swap
Num: 
Den: 
Address: -994
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_53(address) = HIGH_LEVEL_CALL, dest:factory_8(IVaderPoolFactory), function:nativeAsset, arguments:[]  
High Call: nativeAsset
Running querryfc
Found: None
Written func info: IVaderPoolFactory, nativeAsset
Retvar: ('c', ['global:nativeAsset'], ['-1'], 18, "'u'", 'u')
{'global:_owner': 1, 'global:_tokenApprovals': 2, 'global:_owners': 3, 'swap:to': -999, 'mint:to': -998, 'mint:TMP_139': 4, 'global:this': 4, 'None:None': 5, 'mint:foreignAsset': 6, 'swap:_nativeAsset': 7, 'swap:_foreignAsset': 8, 'global:nativeAsset': 9, 'global:foreignAsset': 10, 'global:_ZERO_ADDRESS': 11, 'removeLiquidity:tokenA': -997, 'removeLiquidity:tokenB': -996, 'removeLiquidity:to': -995, 'swapExactTokensForTokens:path': -994, 'swapExactTokensForTokens:to': -993, 'swapTokensForExactTokens:path': -992, 'swapTokensForExactTokens:to': -991, 'calculateInGivenOut:path': -990, 'calculateOutGivenIn:path': -989}
([9], [-1], 18, "'u'", 'u', -1)
[i]Type for TMP_53

Name: TMP_53 Function: _swap
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
factory_11(IVaderPoolFactory) := ϕ(['factory_13', 'factory_16', 'factory_10', 'factory_19', 'factory_21', 'factory_15', 'factory_26', 'factory_1', 'factory_24', 'factory_7'])
Phi
[i]Type for factory

Name: factory Function: _swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_54(bool) = REF_11 == TMP_53
[i]Type for TMP_54

Name: TMP_54 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_55(bool) = TMP_52 && TMP_54
[i]Type for TMP_55

Name: TMP_55 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_13(address) -> path_1 (-> [])[2]
INDEX
REFERENCE LEFT VALUE PROPAGATION
Source address: -994
[i]Type for REF_13

Name: path Function: _swap
Num: 
Den: 
Address: -994
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_14(address) -> path_1 (-> [])[1]
INDEX
REFERENCE LEFT VALUE PROPAGATION
Source address: -994
[i]Type for REF_14

Name: path Function: _swap
Num: 
Den: 
Address: -994
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_56(bool) = REF_13 != REF_14
[i]Type for TMP_56

Name: TMP_56 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_57(bool) = TMP_55 && TMP_56
[i]Type for TMP_57

Name: TMP_57 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_58(None) = SOLIDITY_CALL require(bool,string)(TMP_57,VaderRouter::_swap: Incorrect Path)
[i]Type for TMP_58

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_67 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: path_1 (-> []), name: path

Name: path Function: _swap
Num: 
Den: 
Address: -994
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: path_1 (-> []), name: path

Name: path Function: _swap
Num: 
Den: 
Address: -994
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
REF_25 -> LENGTH path_1 (-> [])
[i]Type for REF_25

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_67(bool) = REF_25 == 2
[i]Type for TMP_67

Name: TMP_67 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_68(None) = SOLIDITY_CALL require(bool,string)(TMP_67,VaderRouter::_swap: Incorrect Path Length)
[i]Type for TMP_68

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_69 cleared
[i] nativeAsset cleared
Propogating parameters and globals to SSA variables...
Ssa_name: factory_8, name: factory

Name: factory Function: _swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: factory_8, name: factory

Name: factory Function: _swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeAsset_1, name: nativeAsset

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: nativeAsset, Num: 1
Globalname: nativeAsset, contract_name: VaderRouter
End popogation
Ssa_name: factory_9, name: factory

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: factory, Num: 9
Globalname: factory, contract_name: VaderRouter
global...

Name: factory Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
TMP_69(address) = HIGH_LEVEL_CALL, dest:factory_8(IVaderPoolFactory), function:nativeAsset, arguments:[]  
High Call: nativeAsset
Running querryfc
Found: None
Written func info: IVaderPoolFactory, nativeAsset
Retvar: ('c', ['global:nativeAsset'], ['-1'], 18, "'u'", 'u')
{'global:_owner': 1, 'global:_tokenApprovals': 2, 'global:_owners': 3, 'swap:to': -999, 'mint:to': -998, 'mint:TMP_139': 4, 'global:this': 4, 'None:None': 5, 'mint:foreignAsset': 6, 'swap:_nativeAsset': 7, 'swap:_foreignAsset': 8, 'global:nativeAsset': 9, 'global:foreignAsset': 10, 'global:_ZERO_ADDRESS': 11, 'removeLiquidity:tokenA': -997, 'removeLiquidity:tokenB': -996, 'removeLiquidity:to': -995, 'swapExactTokensForTokens:path': -994, 'swapExactTokensForTokens:to': -993, 'swapTokensForExactTokens:path': -992, 'swapTokensForExactTokens:to': -991, 'calculateInGivenOut:path': -990, 'calculateOutGivenIn:path': -989}
([9], [-1], 18, "'u'", 'u', -1)
[i]Type for TMP_69

Name: TMP_69 Function: _swap
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
factory_9(IVaderPoolFactory) := ϕ(['factory_8', 'factory_13', 'factory_16', 'factory_10', 'factory_19', 'factory_21', 'factory_15', 'factory_26', 'factory_1', 'factory_24', 'factory_7'])
Phi
[i]Type for factory

Name: factory Function: _swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
nativeAsset_1(address) := TMP_69(address)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for nativeAsset

Name: nativeAsset Function: _swap
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
[i] TMP_59 cleared
[i] pool0 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: path_1 (-> []), name: path

Name: path Function: _swap
Num: 
Den: 
Address: -994
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: factory_11, name: factory

Name: factory Function: _swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: factory_11, name: factory

Name: factory Function: _swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: path_1 (-> []), name: path

Name: path Function: _swap
Num: 
Den: 
Address: -994
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: pool0_1, name: pool0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pool0, Num: 1
Globalname: pool0, contract_name: VaderRouter
End popogation
Ssa_name: factory_12, name: factory

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: factory, Num: 12
Globalname: factory, contract_name: VaderRouter
global...

Name: factory Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
REF_16(address) -> path_1 (-> [])[0]
INDEX
REFERENCE LEFT VALUE PROPAGATION
Source address: -994
[i]Type for REF_16

Name: path Function: _swap
Num: 
Den: 
Address: -994
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_17(address) -> path_1 (-> [])[1]
INDEX
REFERENCE LEFT VALUE PROPAGATION
Source address: -994
[i]Type for REF_17

Name: path Function: _swap
Num: 
Den: 
Address: -994
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_59(IVaderPool) = HIGH_LEVEL_CALL, dest:factory_11(IVaderPoolFactory), function:getPool, arguments:['REF_16', 'REF_17']  
High Call: getPool
Running querryfc
Found: None
Written func info: IVaderPoolFactory, getPool
[i]Type for TMP_59

Name: TMP_59 Function: _swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
factory_12(IVaderPoolFactory) := ϕ(['factory_13', 'factory_16', 'factory_10', 'factory_19', 'factory_21', 'factory_15', 'factory_26', 'factory_1', 'factory_24', 'factory_7', 'factory_11'])
Phi
[i]Type for factory

Name: factory Function: _swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
pool0_1(IVaderPool) := TMP_59(IVaderPool)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for pool0

Name: pool0 Function: _swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_70 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: path_1 (-> []), name: path

Name: path Function: _swap
Num: 
Den: 
Address: -994
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: path_1 (-> []), name: path

Name: path Function: _swap
Num: 
Den: 
Address: -994
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
REF_27(address) -> path_1 (-> [])[0]
INDEX
REFERENCE LEFT VALUE PROPAGATION
Source address: -994
[i]Type for REF_27

Name: path Function: _swap
Num: 
Den: 
Address: -994
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_28(address) -> path_1 (-> [])[1]
INDEX
REFERENCE LEFT VALUE PROPAGATION
Source address: -994
[i]Type for REF_28

Name: path Function: _swap
Num: 
Den: 
Address: -994
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_70(bool) = REF_27 != REF_28
[i]Type for TMP_70

Name: TMP_70 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_71(None) = SOLIDITY_CALL require(bool,string)(TMP_70,VaderRouter::_swap: Incorrect Path)
[i]Type for TMP_71

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_60 cleared
[i] pool1 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: path_1 (-> []), name: path

Name: path Function: _swap
Num: 
Den: 
Address: -994
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: factory_12, name: factory

Name: factory Function: _swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: factory_12, name: factory

Name: factory Function: _swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: path_1 (-> []), name: path

Name: path Function: _swap
Num: 
Den: 
Address: -994
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: pool1_1, name: pool1

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pool1, Num: 1
Globalname: pool1, contract_name: VaderRouter
End popogation
Ssa_name: factory_13, name: factory

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: factory, Num: 13
Globalname: factory, contract_name: VaderRouter
global...

Name: factory Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
REF_19(address) -> path_1 (-> [])[1]
INDEX
REFERENCE LEFT VALUE PROPAGATION
Source address: -994
[i]Type for REF_19

Name: path Function: _swap
Num: 
Den: 
Address: -994
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_20(address) -> path_1 (-> [])[2]
INDEX
REFERENCE LEFT VALUE PROPAGATION
Source address: -994
[i]Type for REF_20

Name: path Function: _swap
Num: 
Den: 
Address: -994
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_60(IVaderPool) = HIGH_LEVEL_CALL, dest:factory_12(IVaderPoolFactory), function:getPool, arguments:['REF_19', 'REF_20']  
High Call: getPool
Running querryfc
Found: None
Written func info: IVaderPoolFactory, getPool
[i]Type for TMP_60

Name: TMP_60 Function: _swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
factory_13(IVaderPoolFactory) := ϕ(['factory_12', 'factory_13', 'factory_16', 'factory_10', 'factory_19', 'factory_21', 'factory_15', 'factory_26', 'factory_1', 'factory_24', 'factory_7'])
Phi
[i]Type for factory

Name: factory Function: _swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
pool1_1(IVaderPool) := TMP_60(IVaderPool)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for pool1

Name: pool1 Function: _swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_72 cleared
[i] pool cleared
Propogating parameters and globals to SSA variables...
Ssa_name: path_1 (-> []), name: path

Name: path Function: _swap
Num: 
Den: 
Address: -994
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: factory_9, name: factory

Name: factory Function: _swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: path_1 (-> []), name: path

Name: path Function: _swap
Num: 
Den: 
Address: -994
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: factory_9, name: factory

Name: factory Function: _swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: pool_1, name: pool

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pool, Num: 1
Globalname: pool, contract_name: VaderRouter
End popogation
Ssa_name: factory_10, name: factory

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: factory, Num: 10
Globalname: factory, contract_name: VaderRouter
global...

Name: factory Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
REF_30(address) -> path_1 (-> [])[0]
INDEX
REFERENCE LEFT VALUE PROPAGATION
Source address: -994
[i]Type for REF_30

Name: path Function: _swap
Num: 
Den: 
Address: -994
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_31(address) -> path_1 (-> [])[1]
INDEX
REFERENCE LEFT VALUE PROPAGATION
Source address: -994
[i]Type for REF_31

Name: path Function: _swap
Num: 
Den: 
Address: -994
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_72(IVaderPool) = HIGH_LEVEL_CALL, dest:factory_9(IVaderPoolFactory), function:getPool, arguments:['REF_30', 'REF_31']  
High Call: getPool
Running querryfc
Found: None
Written func info: IVaderPoolFactory, getPool
[i]Type for TMP_72

Name: TMP_72 Function: _swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
factory_10(IVaderPoolFactory) := ϕ(['factory_13', 'factory_16', 'factory_10', 'factory_19', 'factory_21', 'factory_15', 'factory_26', 'factory_9', 'factory_1', 'factory_24', 'factory_7'])
Phi
[i]Type for factory

Name: factory Function: _swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
pool_1(IVaderPool) := TMP_72(IVaderPool)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for pool

Name: pool Function: _swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_61 cleared
[i] TMP_62 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: path_1 (-> []), name: path

Name: path Function: _swap
Num: 
Den: 
Address: -994
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountIn, Num: 1
Globalname: amountIn, contract_name: VaderRouter
Ssa_name: pool0_1, name: pool0

Name: pool0 Function: _swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: path_1 (-> []), name: path

Name: path Function: _swap
Num: 
Den: 
Address: -994
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountIn, Num: 1
Globalname: amountIn, contract_name: VaderRouter
Ssa_name: pool0_1, name: pool0

Name: pool0 Function: _swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
REF_21(address) -> path_1 (-> [])[0]
INDEX
REFERENCE LEFT VALUE PROPAGATION
Source address: -994
[i]Type for REF_21

Name: path Function: _swap
Num: 
Den: 
Address: -994
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_61 = CONVERT REF_21 to IERC20
Converting REF_21

Name: path Function: _swap
Num: 
Den: 
Address: -994
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: -994
ERC20
[i]Type for TMP_61

Name: TMP_61 Function: _swap
Num: 
Den: 
Address: -994
Norm: 0
LF: ERC20
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_62 = CONVERT pool0_1 to address
Converting pool0_1

Name: pool0 Function: _swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_62

Name: TMP_62 Function: _swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
LIBRARY_CALL, dest:SafeERC20, function:SafeERC20.safeTransferFrom(IERC20,address,address,uint256), arguments:['TMP_61', 'msg.sender', 'TMP_62', 'amountIn_1'] 
[i] TMP_73 cleared
[i] TMP_74 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: path_1 (-> []), name: path

Name: path Function: _swap
Num: 
Den: 
Address: -994
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountIn, Num: 1
Globalname: amountIn, contract_name: VaderRouter
Ssa_name: pool_1, name: pool

Name: pool Function: _swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: path_1 (-> []), name: path

Name: path Function: _swap
Num: 
Den: 
Address: -994
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountIn, Num: 1
Globalname: amountIn, contract_name: VaderRouter
Ssa_name: pool_1, name: pool

Name: pool Function: _swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
REF_32(address) -> path_1 (-> [])[0]
INDEX
REFERENCE LEFT VALUE PROPAGATION
Source address: -994
[i]Type for REF_32

Name: path Function: _swap
Num: 
Den: 
Address: -994
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_73 = CONVERT REF_32 to IERC20
Converting REF_32

Name: path Function: _swap
Num: 
Den: 
Address: -994
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: -994
ERC20
[i]Type for TMP_73

Name: TMP_73 Function: _swap
Num: 
Den: 
Address: -994
Norm: 0
LF: ERC20
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_74 = CONVERT pool_1 to address
Converting pool_1

Name: pool Function: _swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_74

Name: TMP_74 Function: _swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
LIBRARY_CALL, dest:SafeERC20, function:SafeERC20.safeTransferFrom(IERC20,address,address,uint256), arguments:['TMP_73', 'msg.sender', 'TMP_74', 'amountIn_1'] 
[i] TMP_76 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: path_1 (-> []), name: path

Name: path Function: _swap
Num: 
Den: 
Address: -994
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeAsset_1, name: nativeAsset

Name: nativeAsset Function: _swap
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: path_1 (-> []), name: path

Name: path Function: _swap
Num: 
Den: 
Address: -994
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeAsset_1, name: nativeAsset

Name: nativeAsset Function: _swap
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
End popogation
REF_34(address) -> path_1 (-> [])[0]
INDEX
REFERENCE LEFT VALUE PROPAGATION
Source address: -994
[i]Type for REF_34

Name: path Function: _swap
Num: 
Den: 
Address: -994
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_76(bool) = REF_34 == nativeAsset_1
[i]Type for TMP_76

Name: TMP_76 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_77 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: to_1, name: to

Name: to Function: _swap
Num: 
Den: 
Address: -993
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountIn, Num: 1
Globalname: amountIn, contract_name: VaderRouter
Ssa_name: pool_1, name: pool

Name: pool Function: _swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _swap
Num: 
Den: 
Address: -993
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountIn, Num: 1
Globalname: amountIn, contract_name: VaderRouter
Ssa_name: pool_1, name: pool

Name: pool Function: _swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_77(uint256) = HIGH_LEVEL_CALL, dest:pool_1(IVaderPool), function:swap, arguments:['amountIn_1', '0', 'to_1']  
High Call: swap
Running querryfc
Found: None
Written func info: IVaderPool, swap
[i]Type for TMP_77

Name: TMP_77 Function: _swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_77
RETURN

Name: TMP_77 Function: _swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] TMP_78 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: path_1 (-> []), name: path

Name: path Function: _swap
Num: 
Den: 
Address: -994
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeAsset_1, name: nativeAsset

Name: nativeAsset Function: _swap
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: path_1 (-> []), name: path

Name: path Function: _swap
Num: 
Den: 
Address: -994
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeAsset_1, name: nativeAsset

Name: nativeAsset Function: _swap
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
End popogation
REF_36(address) -> path_1 (-> [])[1]
INDEX
REFERENCE LEFT VALUE PROPAGATION
Source address: -994
[i]Type for REF_36

Name: path Function: _swap
Num: 
Den: 
Address: -994
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_78(bool) = REF_36 == nativeAsset_1
[i]Type for TMP_78

Name: TMP_78 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_79(None) = SOLIDITY_CALL require(bool,string)(TMP_78,VaderRouter::_swap: Incorrect Path)
[i]Type for TMP_79

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_80 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: to_1, name: to

Name: to Function: _swap
Num: 
Den: 
Address: -993
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountIn, Num: 1
Globalname: amountIn, contract_name: VaderRouter
Ssa_name: pool_1, name: pool

Name: pool Function: _swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _swap
Num: 
Den: 
Address: -993
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountIn, Num: 1
Globalname: amountIn, contract_name: VaderRouter
Ssa_name: pool_1, name: pool

Name: pool Function: _swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_80(uint256) = HIGH_LEVEL_CALL, dest:pool_1(IVaderPool), function:swap, arguments:['0', 'amountIn_1', 'to_1']  
High Call: swap
Running querryfc
Found: None
Written func info: IVaderPool, swap
[i]Type for TMP_80

Name: TMP_80 Function: _swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_80
RETURN

Name: TMP_80 Function: _swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] TMP_64 cleared
[i] TMP_65 cleared
[i] TMP_66 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: pool1_1, name: pool1

Name: pool1 Function: _swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _swap
Num: 
Den: 
Address: -993
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountIn, Num: 1
Globalname: amountIn, contract_name: VaderRouter
Ssa_name: pool0_1, name: pool0

Name: pool0 Function: _swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: pool1_1, name: pool1

Name: pool1 Function: _swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _swap
Num: 
Den: 
Address: -993
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountIn, Num: 1
Globalname: amountIn, contract_name: VaderRouter
Ssa_name: pool0_1, name: pool0

Name: pool0 Function: _swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_64 = CONVERT pool1_1 to address
Converting pool1_1

Name: pool1 Function: _swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_64

Name: TMP_64 Function: _swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_65(uint256) = HIGH_LEVEL_CALL, dest:pool0_1(IVaderPool), function:swap, arguments:['amountIn_1', '0', 'TMP_64']  
High Call: swap
Running querryfc
Found: None
Written func info: IVaderPool, swap
[i]Type for TMP_65

Name: TMP_65 Function: _swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_66(uint256) = HIGH_LEVEL_CALL, dest:pool1_1(IVaderPool), function:swap, arguments:['0', 'TMP_65', 'to_1']  
High Call: swap
Running querryfc
Found: None
Written func info: IVaderPool, swap
[i]Type for TMP_66

Name: TMP_66 Function: _swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_66
RETURN

Name: TMP_66 Function: _swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] amountIn cleared
[i] path cleared
[i] to cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountIn, Num: 1
Globalname: amountIn, contract_name: VaderRouter
Ssa_name: path_1 (-> []), name: path

Name: path Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: -994

Name: path_1 (-> []) Function: _swap
Num: 
Den: 
Address: -994
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: to_1, name: to

Name: to Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: to
Value: u
Fields: 
Finance Type: undef
Source address: -993

Name: to_1 Function: _swap
Num: 
Den: 
Address: -993
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: factory_8, name: factory

Name: factory Function: _swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
amountIn_1(uint256) := ϕ(['amountIn_1', 'amountIn_1'])
Phi

Name: amountIn_1 Function: swapExactTokensForTokens
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for amountIn

Name: amountIn Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
path_1 (-> [])(address[]) := ϕ(['path_1 (-> [])', 'path_1 (-> [])'])
Phi
[i]Type for path

Name: path Function: _swap
Num: 
Den: 
Address: -994
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
to_1(address) := ϕ(['to_1', 'to_1'])
Phi
[i]Type for to

Name: to Function: _swap
Num: 
Den: 
Address: -993
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
XXXX
factory_8(IVaderPoolFactory) := ϕ(['factory_13', 'factory_0', 'factory_16', 'factory_10', 'factory_19', 'factory_21', 'factory_15', 'factory_26', 'factory_1', 'factory_24', 'factory_7'])
Phi
[i]Type for factory

Name: factory Function: _swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_51 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: path_1 (-> []), name: path

Name: path Function: _swap
Num: 
Den: 
Address: -994
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: path_1 (-> []), name: path

Name: path Function: _swap
Num: 
Den: 
Address: -994
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
REF_8 -> LENGTH path_1 (-> [])
[i]Type for REF_8

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_51(bool) = REF_8 == 3
[i]Type for TMP_51

Name: TMP_51 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_52 cleared
[i] TMP_53 cleared
[i] TMP_54 cleared
[i] TMP_55 cleared
[i] TMP_56 cleared
[i] TMP_57 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: path_1 (-> []), name: path

Name: path Function: _swap
Num: 
Den: 
Address: -994
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: factory_8, name: factory

Name: factory Function: _swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: factory_8, name: factory

Name: factory Function: _swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: path_1 (-> []), name: path

Name: path Function: _swap
Num: 
Den: 
Address: -994
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
Ssa_name: factory_11, name: factory

Name: factory Function: _swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_9(address) -> path_1 (-> [])[0]
INDEX
REFERENCE LEFT VALUE PROPAGATION
Source address: -994
[i]Type for REF_9

Name: path Function: _swap
Num: 
Den: 
Address: -994
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_10(address) -> path_1 (-> [])[1]
INDEX
REFERENCE LEFT VALUE PROPAGATION
Source address: -994
[i]Type for REF_10

Name: path Function: _swap
Num: 
Den: 
Address: -994
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_52(bool) = REF_9 != REF_10
[i]Type for TMP_52

Name: TMP_52 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_11(address) -> path_1 (-> [])[1]
INDEX
REFERENCE LEFT VALUE PROPAGATION
Source address: -994
[i]Type for REF_11

Name: path Function: _swap
Num: 
Den: 
Address: -994
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_53(address) = HIGH_LEVEL_CALL, dest:factory_8(IVaderPoolFactory), function:nativeAsset, arguments:[]  
High Call: nativeAsset
Running querryfc
Found: None
Written func info: IVaderPoolFactory, nativeAsset
Retvar: ('c', ['global:nativeAsset'], ['-1'], 18, "'u'", 'u')
{'global:_owner': 1, 'global:_tokenApprovals': 2, 'global:_owners': 3, 'swap:to': -999, 'mint:to': -998, 'mint:TMP_139': 4, 'global:this': 4, 'None:None': 5, 'mint:foreignAsset': 6, 'swap:_nativeAsset': 7, 'swap:_foreignAsset': 8, 'global:nativeAsset': 9, 'global:foreignAsset': 10, 'global:_ZERO_ADDRESS': 11, 'removeLiquidity:tokenA': -997, 'removeLiquidity:tokenB': -996, 'removeLiquidity:to': -995, 'swapExactTokensForTokens:path': -994, 'swapExactTokensForTokens:to': -993, 'swapTokensForExactTokens:path': -992, 'swapTokensForExactTokens:to': -991, 'calculateInGivenOut:path': -990, 'calculateOutGivenIn:path': -989}
([9], [-1], 18, "'u'", 'u', -1)
[i]Type for TMP_53

Name: TMP_53 Function: _swap
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
factory_11(IVaderPoolFactory) := ϕ(['factory_13', 'factory_16', 'factory_10', 'factory_19', 'factory_21', 'factory_15', 'factory_26', 'factory_1', 'factory_24', 'factory_7'])
Phi
[i]Type for factory

Name: factory Function: _swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_54(bool) = REF_11 == TMP_53
[i]Type for TMP_54

Name: TMP_54 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_55(bool) = TMP_52 && TMP_54
[i]Type for TMP_55

Name: TMP_55 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_13(address) -> path_1 (-> [])[2]
INDEX
REFERENCE LEFT VALUE PROPAGATION
Source address: -994
[i]Type for REF_13

Name: path Function: _swap
Num: 
Den: 
Address: -994
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_14(address) -> path_1 (-> [])[1]
INDEX
REFERENCE LEFT VALUE PROPAGATION
Source address: -994
[i]Type for REF_14

Name: path Function: _swap
Num: 
Den: 
Address: -994
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_56(bool) = REF_13 != REF_14
[i]Type for TMP_56

Name: TMP_56 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_57(bool) = TMP_55 && TMP_56
[i]Type for TMP_57

Name: TMP_57 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_58(None) = SOLIDITY_CALL require(bool,string)(TMP_57,VaderRouter::_swap: Incorrect Path)
[i]Type for TMP_58

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_67 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: path_1 (-> []), name: path

Name: path Function: _swap
Num: 
Den: 
Address: -994
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: path_1 (-> []), name: path

Name: path Function: _swap
Num: 
Den: 
Address: -994
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
REF_25 -> LENGTH path_1 (-> [])
[i]Type for REF_25

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_67(bool) = REF_25 == 2
[i]Type for TMP_67

Name: TMP_67 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_68(None) = SOLIDITY_CALL require(bool,string)(TMP_67,VaderRouter::_swap: Incorrect Path Length)
[i]Type for TMP_68

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_69 cleared
[i] nativeAsset cleared
Propogating parameters and globals to SSA variables...
Ssa_name: factory_8, name: factory

Name: factory Function: _swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: factory_8, name: factory

Name: factory Function: _swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeAsset_1, name: nativeAsset

Name: nativeAsset Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Name: nativeAsset, Num: 1
Globalname: nativeAsset, contract_name: VaderRouter
End popogation
Ssa_name: factory_9, name: factory

Name: factory Function: _swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_69(address) = HIGH_LEVEL_CALL, dest:factory_8(IVaderPoolFactory), function:nativeAsset, arguments:[]  
High Call: nativeAsset
Running querryfc
Found: None
Written func info: IVaderPoolFactory, nativeAsset
Retvar: ('c', ['global:nativeAsset'], ['-1'], 18, "'u'", 'u')
{'global:_owner': 1, 'global:_tokenApprovals': 2, 'global:_owners': 3, 'swap:to': -999, 'mint:to': -998, 'mint:TMP_139': 4, 'global:this': 4, 'None:None': 5, 'mint:foreignAsset': 6, 'swap:_nativeAsset': 7, 'swap:_foreignAsset': 8, 'global:nativeAsset': 9, 'global:foreignAsset': 10, 'global:_ZERO_ADDRESS': 11, 'removeLiquidity:tokenA': -997, 'removeLiquidity:tokenB': -996, 'removeLiquidity:to': -995, 'swapExactTokensForTokens:path': -994, 'swapExactTokensForTokens:to': -993, 'swapTokensForExactTokens:path': -992, 'swapTokensForExactTokens:to': -991, 'calculateInGivenOut:path': -990, 'calculateOutGivenIn:path': -989}
([9], [-1], 18, "'u'", 'u', -1)
[i]Type for TMP_69

Name: TMP_69 Function: _swap
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
factory_9(IVaderPoolFactory) := ϕ(['factory_8', 'factory_13', 'factory_16', 'factory_10', 'factory_19', 'factory_21', 'factory_15', 'factory_26', 'factory_1', 'factory_24', 'factory_7'])
Phi
[i]Type for factory

Name: factory Function: _swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
nativeAsset_1(address) := TMP_69(address)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for nativeAsset

Name: nativeAsset Function: _swap
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
[i] TMP_59 cleared
[i] pool0 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: path_1 (-> []), name: path

Name: path Function: _swap
Num: 
Den: 
Address: -994
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: factory_11, name: factory

Name: factory Function: _swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: factory_11, name: factory

Name: factory Function: _swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: path_1 (-> []), name: path

Name: path Function: _swap
Num: 
Den: 
Address: -994
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: pool0_1, name: pool0

Name: pool0 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pool0, Num: 1
Globalname: pool0, contract_name: VaderRouter
End popogation
Ssa_name: factory_12, name: factory

Name: factory Function: _swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_16(address) -> path_1 (-> [])[0]
INDEX
REFERENCE LEFT VALUE PROPAGATION
Source address: -994
[i]Type for REF_16

Name: path Function: _swap
Num: 
Den: 
Address: -994
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_17(address) -> path_1 (-> [])[1]
INDEX
REFERENCE LEFT VALUE PROPAGATION
Source address: -994
[i]Type for REF_17

Name: path Function: _swap
Num: 
Den: 
Address: -994
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_59(IVaderPool) = HIGH_LEVEL_CALL, dest:factory_11(IVaderPoolFactory), function:getPool, arguments:['REF_16', 'REF_17']  
High Call: getPool
Running querryfc
Found: None
Written func info: IVaderPoolFactory, getPool
[i]Type for TMP_59

Name: TMP_59 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
factory_12(IVaderPoolFactory) := ϕ(['factory_13', 'factory_16', 'factory_10', 'factory_19', 'factory_21', 'factory_15', 'factory_26', 'factory_1', 'factory_24', 'factory_7', 'factory_11'])
Phi
[i]Type for factory

Name: factory Function: _swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
pool0_1(IVaderPool) := TMP_59(IVaderPool)
asgn
Finance type key: (-1, -1)
[i]Type for pool0

Name: pool0 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_70 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: path_1 (-> []), name: path

Name: path Function: _swap
Num: 
Den: 
Address: -994
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: path_1 (-> []), name: path

Name: path Function: _swap
Num: 
Den: 
Address: -994
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
REF_27(address) -> path_1 (-> [])[0]
INDEX
REFERENCE LEFT VALUE PROPAGATION
Source address: -994
[i]Type for REF_27

Name: path Function: _swap
Num: 
Den: 
Address: -994
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_28(address) -> path_1 (-> [])[1]
INDEX
REFERENCE LEFT VALUE PROPAGATION
Source address: -994
[i]Type for REF_28

Name: path Function: _swap
Num: 
Den: 
Address: -994
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_70(bool) = REF_27 != REF_28
[i]Type for TMP_70

Name: TMP_70 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_71(None) = SOLIDITY_CALL require(bool,string)(TMP_70,VaderRouter::_swap: Incorrect Path)
[i]Type for TMP_71

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_60 cleared
[i] pool1 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: path_1 (-> []), name: path

Name: path Function: _swap
Num: 
Den: 
Address: -994
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: factory_12, name: factory

Name: factory Function: _swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: factory_12, name: factory

Name: factory Function: _swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: path_1 (-> []), name: path

Name: path Function: _swap
Num: 
Den: 
Address: -994
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: pool1_1, name: pool1

Name: pool1 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pool1, Num: 1
Globalname: pool1, contract_name: VaderRouter
End popogation
Ssa_name: factory_13, name: factory

Name: factory Function: _swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_19(address) -> path_1 (-> [])[1]
INDEX
REFERENCE LEFT VALUE PROPAGATION
Source address: -994
[i]Type for REF_19

Name: path Function: _swap
Num: 
Den: 
Address: -994
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_20(address) -> path_1 (-> [])[2]
INDEX
REFERENCE LEFT VALUE PROPAGATION
Source address: -994
[i]Type for REF_20

Name: path Function: _swap
Num: 
Den: 
Address: -994
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_60(IVaderPool) = HIGH_LEVEL_CALL, dest:factory_12(IVaderPoolFactory), function:getPool, arguments:['REF_19', 'REF_20']  
High Call: getPool
Running querryfc
Found: None
Written func info: IVaderPoolFactory, getPool
[i]Type for TMP_60

Name: TMP_60 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
factory_13(IVaderPoolFactory) := ϕ(['factory_12', 'factory_13', 'factory_16', 'factory_10', 'factory_19', 'factory_21', 'factory_15', 'factory_26', 'factory_1', 'factory_24', 'factory_7'])
Phi
[i]Type for factory

Name: factory Function: _swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
pool1_1(IVaderPool) := TMP_60(IVaderPool)
asgn
Finance type key: (-1, -1)
[i]Type for pool1

Name: pool1 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_72 cleared
[i] pool cleared
Propogating parameters and globals to SSA variables...
Ssa_name: path_1 (-> []), name: path

Name: path Function: _swap
Num: 
Den: 
Address: -994
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: factory_9, name: factory

Name: factory Function: _swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: path_1 (-> []), name: path

Name: path Function: _swap
Num: 
Den: 
Address: -994
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: factory_9, name: factory

Name: factory Function: _swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: pool_1, name: pool

Name: pool Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pool, Num: 1
Globalname: pool, contract_name: VaderRouter
End popogation
Ssa_name: factory_10, name: factory

Name: factory Function: _swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_30(address) -> path_1 (-> [])[0]
INDEX
REFERENCE LEFT VALUE PROPAGATION
Source address: -994
[i]Type for REF_30

Name: path Function: _swap
Num: 
Den: 
Address: -994
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_31(address) -> path_1 (-> [])[1]
INDEX
REFERENCE LEFT VALUE PROPAGATION
Source address: -994
[i]Type for REF_31

Name: path Function: _swap
Num: 
Den: 
Address: -994
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_72(IVaderPool) = HIGH_LEVEL_CALL, dest:factory_9(IVaderPoolFactory), function:getPool, arguments:['REF_30', 'REF_31']  
High Call: getPool
Running querryfc
Found: None
Written func info: IVaderPoolFactory, getPool
[i]Type for TMP_72

Name: TMP_72 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
factory_10(IVaderPoolFactory) := ϕ(['factory_13', 'factory_16', 'factory_10', 'factory_19', 'factory_21', 'factory_15', 'factory_26', 'factory_9', 'factory_1', 'factory_24', 'factory_7'])
Phi
[i]Type for factory

Name: factory Function: _swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
pool_1(IVaderPool) := TMP_72(IVaderPool)
asgn
Finance type key: (-1, -1)
[i]Type for pool

Name: pool Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_61 cleared
[i] TMP_62 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: path_1 (-> []), name: path

Name: path Function: _swap
Num: 
Den: 
Address: -994
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountIn, Num: 1
Globalname: amountIn, contract_name: VaderRouter
Ssa_name: pool0_1, name: pool0

Name: pool0 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pool0, Num: 1
Globalname: pool0, contract_name: VaderRouter
Ssa_name: path_1 (-> []), name: path

Name: path Function: _swap
Num: 
Den: 
Address: -994
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountIn, Num: 1
Globalname: amountIn, contract_name: VaderRouter
Ssa_name: pool0_1, name: pool0

Name: pool0 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pool0, Num: 1
Globalname: pool0, contract_name: VaderRouter
End popogation
REF_21(address) -> path_1 (-> [])[0]
INDEX
REFERENCE LEFT VALUE PROPAGATION
Source address: -994
[i]Type for REF_21

Name: path Function: _swap
Num: 
Den: 
Address: -994
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_61 = CONVERT REF_21 to IERC20
Converting REF_21

Name: path Function: _swap
Num: 
Den: 
Address: -994
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: -994
ERC20
[i]Type for TMP_61

Name: TMP_61 Function: _swap
Num: 
Den: 
Address: -994
Norm: 0
LF: ERC20
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_62 = CONVERT pool0_1 to address
Converting pool0_1

Name: pool0 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_62

Name: TMP_62 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
LIBRARY_CALL, dest:SafeERC20, function:SafeERC20.safeTransferFrom(IERC20,address,address,uint256), arguments:['TMP_61', 'msg.sender', 'TMP_62', 'amountIn_1'] 
[i] TMP_73 cleared
[i] TMP_74 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: path_1 (-> []), name: path

Name: path Function: _swap
Num: 
Den: 
Address: -994
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountIn, Num: 1
Globalname: amountIn, contract_name: VaderRouter
Ssa_name: pool_1, name: pool

Name: pool Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pool, Num: 1
Globalname: pool, contract_name: VaderRouter
Ssa_name: path_1 (-> []), name: path

Name: path Function: _swap
Num: 
Den: 
Address: -994
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountIn, Num: 1
Globalname: amountIn, contract_name: VaderRouter
Ssa_name: pool_1, name: pool

Name: pool Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pool, Num: 1
Globalname: pool, contract_name: VaderRouter
End popogation
REF_32(address) -> path_1 (-> [])[0]
INDEX
REFERENCE LEFT VALUE PROPAGATION
Source address: -994
[i]Type for REF_32

Name: path Function: _swap
Num: 
Den: 
Address: -994
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_73 = CONVERT REF_32 to IERC20
Converting REF_32

Name: path Function: _swap
Num: 
Den: 
Address: -994
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: -994
ERC20
[i]Type for TMP_73

Name: TMP_73 Function: _swap
Num: 
Den: 
Address: -994
Norm: 0
LF: ERC20
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_74 = CONVERT pool_1 to address
Converting pool_1

Name: pool Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_74

Name: TMP_74 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
LIBRARY_CALL, dest:SafeERC20, function:SafeERC20.safeTransferFrom(IERC20,address,address,uint256), arguments:['TMP_73', 'msg.sender', 'TMP_74', 'amountIn_1'] 
[i] TMP_76 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: path_1 (-> []), name: path

Name: path Function: _swap
Num: 
Den: 
Address: -994
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeAsset_1, name: nativeAsset

Name: nativeAsset Function: _swap
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: path_1 (-> []), name: path

Name: path Function: _swap
Num: 
Den: 
Address: -994
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeAsset_1, name: nativeAsset

Name: nativeAsset Function: _swap
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
End popogation
REF_34(address) -> path_1 (-> [])[0]
INDEX
REFERENCE LEFT VALUE PROPAGATION
Source address: -994
[i]Type for REF_34

Name: path Function: _swap
Num: 
Den: 
Address: -994
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_76(bool) = REF_34 == nativeAsset_1
[i]Type for TMP_76

Name: TMP_76 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_77 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: to_1, name: to

Name: to Function: _swap
Num: 
Den: 
Address: -993
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountIn, Num: 1
Globalname: amountIn, contract_name: VaderRouter
Ssa_name: pool_1, name: pool

Name: pool Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pool, Num: 1
Globalname: pool, contract_name: VaderRouter
Ssa_name: to_1, name: to

Name: to Function: _swap
Num: 
Den: 
Address: -993
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountIn, Num: 1
Globalname: amountIn, contract_name: VaderRouter
Ssa_name: pool_1, name: pool

Name: pool Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pool, Num: 1
Globalname: pool, contract_name: VaderRouter
End popogation
TMP_77(uint256) = HIGH_LEVEL_CALL, dest:pool_1(IVaderPool), function:swap, arguments:['amountIn_1', '0', 'to_1']  
High Call: swap
Running querryfc
Found: None
Written func info: IVaderPool, swap
[i]Type for TMP_77

Name: TMP_77 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_77
RETURN

Name: TMP_77 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] TMP_78 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: path_1 (-> []), name: path

Name: path Function: _swap
Num: 
Den: 
Address: -994
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeAsset_1, name: nativeAsset

Name: nativeAsset Function: _swap
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: path_1 (-> []), name: path

Name: path Function: _swap
Num: 
Den: 
Address: -994
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeAsset_1, name: nativeAsset

Name: nativeAsset Function: _swap
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
End popogation
REF_36(address) -> path_1 (-> [])[1]
INDEX
REFERENCE LEFT VALUE PROPAGATION
Source address: -994
[i]Type for REF_36

Name: path Function: _swap
Num: 
Den: 
Address: -994
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_78(bool) = REF_36 == nativeAsset_1
[i]Type for TMP_78

Name: TMP_78 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_79(None) = SOLIDITY_CALL require(bool,string)(TMP_78,VaderRouter::_swap: Incorrect Path)
[i]Type for TMP_79

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_80 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: to_1, name: to

Name: to Function: _swap
Num: 
Den: 
Address: -993
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountIn, Num: 1
Globalname: amountIn, contract_name: VaderRouter
Ssa_name: pool_1, name: pool

Name: pool Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pool, Num: 1
Globalname: pool, contract_name: VaderRouter
Ssa_name: to_1, name: to

Name: to Function: _swap
Num: 
Den: 
Address: -993
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountIn, Num: 1
Globalname: amountIn, contract_name: VaderRouter
Ssa_name: pool_1, name: pool

Name: pool Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pool, Num: 1
Globalname: pool, contract_name: VaderRouter
End popogation
TMP_80(uint256) = HIGH_LEVEL_CALL, dest:pool_1(IVaderPool), function:swap, arguments:['0', 'amountIn_1', 'to_1']  
High Call: swap
Running querryfc
Found: None
Written func info: IVaderPool, swap
[i]Type for TMP_80

Name: TMP_80 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_80
RETURN

Name: TMP_80 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] TMP_64 cleared
[i] TMP_65 cleared
[i] TMP_66 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: pool1_1, name: pool1

Name: pool1 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pool1, Num: 1
Globalname: pool1, contract_name: VaderRouter
Ssa_name: to_1, name: to

Name: to Function: _swap
Num: 
Den: 
Address: -993
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountIn, Num: 1
Globalname: amountIn, contract_name: VaderRouter
Ssa_name: pool0_1, name: pool0

Name: pool0 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pool0, Num: 1
Globalname: pool0, contract_name: VaderRouter
Ssa_name: pool1_1, name: pool1

Name: pool1 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pool1, Num: 1
Globalname: pool1, contract_name: VaderRouter
Ssa_name: to_1, name: to

Name: to Function: _swap
Num: 
Den: 
Address: -993
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountIn, Num: 1
Globalname: amountIn, contract_name: VaderRouter
Ssa_name: pool0_1, name: pool0

Name: pool0 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pool0, Num: 1
Globalname: pool0, contract_name: VaderRouter
End popogation
TMP_64 = CONVERT pool1_1 to address
Converting pool1_1

Name: pool1 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_64

Name: TMP_64 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_65(uint256) = HIGH_LEVEL_CALL, dest:pool0_1(IVaderPool), function:swap, arguments:['amountIn_1', '0', 'TMP_64']  
High Call: swap
Running querryfc
Found: None
Written func info: IVaderPool, swap
[i]Type for TMP_65

Name: TMP_65 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_66(uint256) = HIGH_LEVEL_CALL, dest:pool1_1(IVaderPool), function:swap, arguments:['0', 'TMP_65', 'to_1']  
High Call: swap
Running querryfc
Found: None
Written func info: IVaderPool, swap
[i]Type for TMP_66

Name: TMP_66 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_66
RETURN

Name: TMP_66 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
([], [], 'u', 'u', 'u', -1)
[i]Type for TMP_37

Name: TMP_37 Function: swapExactTokensForTokens
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
amountOut_1(uint256) := TMP_37(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for amountOut

Name: amountOut Function: swapExactTokensForTokens
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_38 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountOut_1, name: amountOut

Name: amountOut Function: swapExactTokensForTokens
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: amountOut, Num: 1
Globalname: amountOut, contract_name: VaderRouter
Ssa_name: amountOutMin_1, name: amountOutMin

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountOutMin_1 Function: swapExactTokensForTokens
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountOutMin, Num: 1
Globalname: amountOutMin, contract_name: VaderRouter
Ssa_name: amountOut_1, name: amountOut

Name: amountOut Function: swapExactTokensForTokens
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: amountOut, Num: 1
Globalname: amountOut, contract_name: VaderRouter
Ssa_name: amountOutMin_1, name: amountOutMin

Name: amountOutMin_1 Function: swapExactTokensForTokens
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountOutMin_1 Function: swapExactTokensForTokens
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountOutMin, Num: 1
Globalname: amountOutMin, contract_name: VaderRouter
End popogation
TMP_38(bool) = amountOut_1 >= amountOutMin_1
lnorm: u rnorm: u
[i]Type for TMP_38

Name: TMP_38 Function: swapExactTokensForTokens
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_39(None) = SOLIDITY_CALL require(bool,string)(TMP_38,VaderRouter::swapExactTokensForTokens: Insufficient Trade Output)
[i]Type for TMP_39

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX


MODIFIER_CALL, VaderRouter.ensure(uint256)(deadline_1)
TMP_37(uint256) = INTERNAL_CALL, VaderRouter._swap(uint256,address[],address)(amountIn_1,path_1 (-> []),to_1)
amountOut_1(uint256) := TMP_37(uint256)
TMP_38(bool) = amountOut_1 >= amountOutMin_1
TMP_39(None) = SOLIDITY_CALL require(bool,string)(TMP_38,VaderRouter::swapExactTokensForTokens: Insufficient Trade Output)


Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Ssa_name: deadline_1, name: deadline

Name: deadline_1 Function: swapExactTokensForTokens
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: deadline_1 Function: swapExactTokensForTokens
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: deadline, Num: 1
Globalname: deadline, contract_name: VaderRouter
Ssa_name: deadline_1, name: deadline

Name: deadline_1 Function: swapExactTokensForTokens
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: deadline_1 Function: swapExactTokensForTokens
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: deadline, Num: 1
Globalname: deadline, contract_name: VaderRouter
End popogation
MODIFIER_CALL, VaderRouter.ensure(uint256)(deadline_1)
New param cache [[[], [], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[], [], 'u', None, [], -1, 'u']]
[i] TMP_37 cleared
[i] amountOut cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: swapExactTokensForTokens
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: swapExactTokensForTokens
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountIn, Num: 1
Globalname: amountIn, contract_name: VaderRouter
Ssa_name: to_1, name: to

Name: to_1 Function: swapExactTokensForTokens
Num: 
Den: 
Address: -993
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: path_1 (-> []), name: path

Name: path_1 (-> []) Function: swapExactTokensForTokens
Num: 
Den: 
Address: -994
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: swapExactTokensForTokens
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: swapExactTokensForTokens
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountIn, Num: 1
Globalname: amountIn, contract_name: VaderRouter
Ssa_name: to_1, name: to

Name: to_1 Function: swapExactTokensForTokens
Num: 
Den: 
Address: -993
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: path_1 (-> []), name: path

Name: path_1 (-> []) Function: swapExactTokensForTokens
Num: 
Den: 
Address: -994
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountOut_1, name: amountOut

Name: amountOut Function: swapExactTokensForTokens
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: amountOut, Num: 1
Globalname: amountOut, contract_name: VaderRouter
End popogation
TMP_37(uint256) = INTERNAL_CALL, VaderRouter._swap(uint256,address[],address)(amountIn_1,path_1 (-> []),to_1)
New param cache [[[], [], 'u', None, [], -1, 'u', 'u'], [[], [], 0, None, [], -1, -994, 'u'], [[], [], 0, 'to', [], -1, -993, 'u']]
Old param cache: [[[], [], 'u', None, [], -1, 'u'], [[], [], 0, None, [], -1, -994], [[], [], 0, 'to', [], -1, -993]]
[i]Type for TMP_37

Name: TMP_37 Function: swapExactTokensForTokens
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
amountOut_1(uint256) := TMP_37(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for amountOut

Name: amountOut Function: swapExactTokensForTokens
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_38 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountOut_1, name: amountOut

Name: amountOut Function: swapExactTokensForTokens
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: amountOut, Num: 1
Globalname: amountOut, contract_name: VaderRouter
Ssa_name: amountOutMin_1, name: amountOutMin

Name: amountOutMin_1 Function: swapExactTokensForTokens
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountOutMin_1 Function: swapExactTokensForTokens
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountOutMin, Num: 1
Globalname: amountOutMin, contract_name: VaderRouter
Ssa_name: amountOut_1, name: amountOut

Name: amountOut Function: swapExactTokensForTokens
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: amountOut, Num: 1
Globalname: amountOut, contract_name: VaderRouter
Ssa_name: amountOutMin_1, name: amountOutMin

Name: amountOutMin_1 Function: swapExactTokensForTokens
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountOutMin_1 Function: swapExactTokensForTokens
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountOutMin, Num: 1
Globalname: amountOutMin, contract_name: VaderRouter
End popogation
TMP_38(bool) = amountOut_1 >= amountOutMin_1
lnorm: u rnorm: u
[i]Type for TMP_38

Name: TMP_38 Function: swapExactTokensForTokens
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_39(None) = SOLIDITY_CALL require(bool,string)(TMP_38,VaderRouter::swapExactTokensForTokens: Insufficient Trade Output)
[i]Type for TMP_39

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Reading Function: swapTokensForExactTokens
Checking funcion...



swapTokensForExactTokens
Function name: swapTokensForExactTokens
Finding type for amountOut(uint256 ... )
Value: u
Finding type for amountInMax(uint256 ... )
Value: u
Finding type for path(address[] ... )
prev address? u
Head Addr: -992
    Norm: 0
    Set: {-992}
    Fin: NULL
Finding type for to(address ... )
prev address? u
Head Addr: -991
    Norm: 0
    Set: {-991}
    Fin: NULL
Finding type for deadline(uint256 ... )
Value: u
New param cache [[[-1], [-1], 'u', None, [], -1, 'u', 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u'], [[], [], 0, None, [], -1, -992, 'u'], [[], [], 0, 'to', [], -1, -991, 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u']]
FIND RETURN
ENTRY_POINT
swapTokensForExactTokens(uint256,uint256,address[],address,uint256)


MODIFIER_CALL, VaderRouter.ensure(uint256)(deadline_1)
TMP_41(uint256) = INTERNAL_CALL, VaderRouter.calculateInGivenOut(uint256,address[])(amountOut_1,path_1 (-> []))
amountIn_1(uint256) := TMP_41(uint256)
TMP_42(bool) = amountInMax_1 >= amountIn_1
TMP_43(None) = SOLIDITY_CALL require(bool,string)(TMP_42,VaderRouter::swapTokensForExactTokens: Large Trade Input)
TMP_44(uint256) = INTERNAL_CALL, VaderRouter._swap(uint256,address[],address)(amountIn_1,path_1 (-> []),to_1)


Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Ssa_name: deadline_1, name: deadline

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: deadline_1 Function: swapTokensForExactTokens
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: deadline, Num: 1
Globalname: deadline, contract_name: VaderRouter
Ssa_name: deadline_1, name: deadline

Name: deadline_1 Function: swapTokensForExactTokens
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: deadline_1 Function: swapTokensForExactTokens
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: deadline, Num: 1
Globalname: deadline, contract_name: VaderRouter
End popogation
MODIFIER_CALL, VaderRouter.ensure(uint256)(deadline_1)
New param cache [[[], [], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[], [], 'u', None, [], -1, 'u']]
[i] TMP_41 cleared
[i] amountIn cleared
Propogating parameters and globals to SSA variables...
Ssa_name: path_1 (-> []), name: path

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: -992

Name: path_1 (-> []) Function: swapTokensForExactTokens
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amountOut_1, name: amountOut

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountOut_1 Function: swapTokensForExactTokens
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountOut, Num: 1
Globalname: amountOut, contract_name: VaderRouter
Ssa_name: path_1 (-> []), name: path

Name: path_1 (-> []) Function: swapTokensForExactTokens
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountOut_1, name: amountOut

Name: amountOut_1 Function: swapTokensForExactTokens
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountOut_1 Function: swapTokensForExactTokens
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountOut, Num: 1
Globalname: amountOut, contract_name: VaderRouter
Ssa_name: amountIn_1, name: amountIn

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: amountIn, Num: 1
Globalname: amountIn, contract_name: VaderRouter
End popogation
TMP_41(uint256) = INTERNAL_CALL, VaderRouter.calculateInGivenOut(uint256,address[])(amountOut_1,path_1 (-> []))
New param cache [[[], [], 'u', None, [], -1, 'u', 'u'], [[], [], 0, None, [], -1, -992, 'u']]
[[], [], 'u', None, [], -1, 'u', 'u']

Name: amountOut Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[], [], 0, None, [], -1, -992, 'u']

Name: path Function: None
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
calculateInGivenOut(uint256,address[])
Propogating All
Propogating All
path_1 (-> [])
Ssa_name: path_1 (-> []), name: path

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: -992

Name: path_1 (-> []) Function: calculateInGivenOut
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
path_1 (-> [])
Ssa_name: path_1 (-> []), name: path

Name: path_1 (-> []) Function: calculateInGivenOut
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: -992

Name: path_1 (-> []) Function: calculateInGivenOut
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
path_1 (-> [])
Ssa_name: path_1 (-> []), name: path

Name: path_1 (-> []) Function: calculateInGivenOut
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: -992

Name: path_1 (-> []) Function: calculateInGivenOut
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
path_1 (-> [])
Ssa_name: path_1 (-> []), name: path

Name: path_1 (-> []) Function: calculateInGivenOut
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: -992

Name: path_1 (-> []) Function: calculateInGivenOut
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
pool_1
Ssa_name: pool_1, name: pool

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
Propogating All
nativeAsset_1
Ssa_name: nativeAsset_1, name: nativeAsset

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
path_1 (-> [])
Ssa_name: path_1 (-> []), name: path

Name: path_1 (-> []) Function: calculateInGivenOut
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: -992

Name: path_1 (-> []) Function: calculateInGivenOut
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
nativeReserve_1
Ssa_name: nativeReserve_1, name: nativeReserve

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
amountOut_1
Ssa_name: amountOut_1, name: amountOut

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountOut_1 Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
foreignReserve_1
Ssa_name: foreignReserve_1, name: foreignReserve

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
foreignReserve_1
Ssa_name: foreignReserve_1, name: foreignReserve

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
amountOut_1
Ssa_name: amountOut_1, name: amountOut

Name: amountOut_1 Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountOut_1 Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
nativeReserve_1
Ssa_name: nativeReserve_1, name: nativeReserve

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
pool0_1
Ssa_name: pool0_1, name: pool0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
Propogating All
Propogating All
pool1_1
Ssa_name: pool1_1, name: pool1

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
foreignReserve1_1
Ssa_name: foreignReserve1_1, name: foreignReserve1

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
foreignReserve0_1
Ssa_name: foreignReserve0_1, name: foreignReserve0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
nativeReserve0_1
Ssa_name: nativeReserve0_1, name: nativeReserve0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
amountOut_1
Ssa_name: amountOut_1, name: amountOut

Name: amountOut_1 Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountOut_1 Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
nativeReserve1_1
Ssa_name: nativeReserve1_1, name: nativeReserve1

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] amountOut cleared
[i] path cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: amountOut_1, name: amountOut

Name: amountOut_1 Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountOut_1 Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountOut, Num: 1
Globalname: amountOut, contract_name: VaderRouter
Ssa_name: path_1 (-> []), name: path

Name: path_1 (-> []) Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: -992

Name: path_1 (-> []) Function: calculateInGivenOut
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: factory_17, name: factory

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: factory, Num: 17
Globalname: factory, contract_name: VaderRouter
global...

Name: factory Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
amountOut_1(uint256) := ϕ(['amountOut_1'])
Phi

Name: amountOut_1 Function: swapTokensForExactTokens
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for amountOut

Name: amountOut Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
path_1 (-> [])(address[]) := ϕ(['path_1 (-> [])'])
Phi
[i]Type for path

Name: path Function: calculateInGivenOut
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
factory_17(IVaderPoolFactory) := ϕ(['factory_13', 'factory_0', 'factory_16', 'factory_10', 'factory_19', 'factory_21', 'factory_15', 'factory_26', 'factory_1', 'factory_24', 'factory_7'])
Phi
[i]Type for factory

Name: factory Function: calculateInGivenOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_85 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: path_1 (-> []), name: path

Name: path Function: calculateInGivenOut
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: path_1 (-> []), name: path

Name: path Function: calculateInGivenOut
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
REF_40 -> LENGTH path_1 (-> [])
[i]Type for REF_40

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_85(bool) = REF_40 == 2
[i]Type for TMP_85

Name: TMP_85 Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_86 cleared
[i] nativeAsset cleared
Propogating parameters and globals to SSA variables...
Ssa_name: factory_17, name: factory

Name: factory Function: calculateInGivenOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: factory_17, name: factory

Name: factory Function: calculateInGivenOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeAsset_1, name: nativeAsset

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: nativeAsset, Num: 1
Globalname: nativeAsset, contract_name: VaderRouter
End popogation
Ssa_name: factory_18, name: factory

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: factory, Num: 18
Globalname: factory, contract_name: VaderRouter
global...

Name: factory Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
TMP_86(address) = HIGH_LEVEL_CALL, dest:factory_17(IVaderPoolFactory), function:nativeAsset, arguments:[]  
High Call: nativeAsset
Running querryfc
Found: None
Written func info: IVaderPoolFactory, nativeAsset
Retvar: ('c', ['global:nativeAsset'], ['-1'], 18, "'u'", 'u')
{'global:_owner': 1, 'global:_tokenApprovals': 2, 'global:_owners': 3, 'swap:to': -999, 'mint:to': -998, 'mint:TMP_139': 4, 'global:this': 4, 'None:None': 5, 'mint:foreignAsset': 6, 'swap:_nativeAsset': 7, 'swap:_foreignAsset': 8, 'global:nativeAsset': 9, 'global:foreignAsset': 10, 'global:_ZERO_ADDRESS': 11, 'removeLiquidity:tokenA': -997, 'removeLiquidity:tokenB': -996, 'removeLiquidity:to': -995, 'swapExactTokensForTokens:path': -994, 'swapExactTokensForTokens:to': -993, 'swapTokensForExactTokens:path': -992, 'swapTokensForExactTokens:to': -991, 'calculateInGivenOut:path': -990, 'calculateOutGivenIn:path': -989}
([9], [-1], 18, "'u'", 'u', -1)
[i]Type for TMP_86

Name: TMP_86 Function: calculateInGivenOut
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
factory_18(IVaderPoolFactory) := ϕ(['factory_13', 'factory_16', 'factory_10', 'factory_19', 'factory_21', 'factory_15', 'factory_26', 'factory_1', 'factory_24', 'factory_17', 'factory_7'])
Phi
[i]Type for factory

Name: factory Function: calculateInGivenOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
nativeAsset_1(address) := TMP_86(address)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for nativeAsset

Name: nativeAsset Function: calculateInGivenOut
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
[i] TMP_87 cleared
[i] pool cleared
Propogating parameters and globals to SSA variables...
Ssa_name: path_1 (-> []), name: path

Name: path Function: calculateInGivenOut
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: factory_18, name: factory

Name: factory Function: calculateInGivenOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: path_1 (-> []), name: path

Name: path Function: calculateInGivenOut
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: factory_18, name: factory

Name: factory Function: calculateInGivenOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: pool_1, name: pool

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pool, Num: 1
Globalname: pool, contract_name: VaderRouter
End popogation
Ssa_name: factory_19, name: factory

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: factory, Num: 19
Globalname: factory, contract_name: VaderRouter
global...

Name: factory Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
REF_43(address) -> path_1 (-> [])[0]
INDEX
REFERENCE LEFT VALUE PROPAGATION
Source address: -992
[i]Type for REF_43

Name: path Function: calculateInGivenOut
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_44(address) -> path_1 (-> [])[1]
INDEX
REFERENCE LEFT VALUE PROPAGATION
Source address: -992
[i]Type for REF_44

Name: path Function: calculateInGivenOut
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_87(IVaderPool) = HIGH_LEVEL_CALL, dest:factory_18(IVaderPoolFactory), function:getPool, arguments:['REF_43', 'REF_44']  
High Call: getPool
Running querryfc
Found: None
Written func info: IVaderPoolFactory, getPool
[i]Type for TMP_87

Name: TMP_87 Function: calculateInGivenOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
factory_19(IVaderPoolFactory) := ϕ(['factory_13', 'factory_16', 'factory_10', 'factory_19', 'factory_21', 'factory_15', 'factory_26', 'factory_1', 'factory_24', 'factory_18', 'factory_7'])
Phi
[i]Type for factory

Name: factory Function: calculateInGivenOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
pool_1(IVaderPool) := TMP_87(IVaderPool)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for pool

Name: pool Function: calculateInGivenOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_91 cleared
[i] pool0 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: path_1 (-> []), name: path

Name: path Function: calculateInGivenOut
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: factory_17, name: factory

Name: factory Function: calculateInGivenOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: path_1 (-> []), name: path

Name: path Function: calculateInGivenOut
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: factory_17, name: factory

Name: factory Function: calculateInGivenOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: pool0_1, name: pool0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pool0, Num: 1
Globalname: pool0, contract_name: VaderRouter
End popogation
Ssa_name: factory_20, name: factory

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: factory, Num: 20
Globalname: factory, contract_name: VaderRouter
global...

Name: factory Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
REF_50(address) -> path_1 (-> [])[0]
INDEX
REFERENCE LEFT VALUE PROPAGATION
Source address: -992
[i]Type for REF_50

Name: path Function: calculateInGivenOut
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_51(address) -> path_1 (-> [])[1]
INDEX
REFERENCE LEFT VALUE PROPAGATION
Source address: -992
[i]Type for REF_51

Name: path Function: calculateInGivenOut
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_91(IVaderPool) = HIGH_LEVEL_CALL, dest:factory_17(IVaderPoolFactory), function:getPool, arguments:['REF_50', 'REF_51']  
High Call: getPool
Running querryfc
Found: None
Written func info: IVaderPoolFactory, getPool
[i]Type for TMP_91

Name: TMP_91 Function: calculateInGivenOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
factory_20(IVaderPoolFactory) := ϕ(['factory_13', 'factory_16', 'factory_10', 'factory_19', 'factory_21', 'factory_15', 'factory_26', 'factory_1', 'factory_24', 'factory_7'])
Phi
[i]Type for factory

Name: factory Function: calculateInGivenOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
pool0_1(IVaderPool) := TMP_91(IVaderPool)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for pool0

Name: pool0 Function: calculateInGivenOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_92 cleared
[i] pool1 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: path_1 (-> []), name: path

Name: path Function: calculateInGivenOut
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: factory_20, name: factory

Name: factory Function: calculateInGivenOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: factory_20, name: factory

Name: factory Function: calculateInGivenOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: path_1 (-> []), name: path

Name: path Function: calculateInGivenOut
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: pool1_1, name: pool1

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pool1, Num: 1
Globalname: pool1, contract_name: VaderRouter
End popogation
Ssa_name: factory_21, name: factory

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: factory, Num: 21
Globalname: factory, contract_name: VaderRouter
global...

Name: factory Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
REF_53(address) -> path_1 (-> [])[1]
INDEX
REFERENCE LEFT VALUE PROPAGATION
Source address: -992
[i]Type for REF_53

Name: path Function: calculateInGivenOut
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_54(address) -> path_1 (-> [])[2]
INDEX
REFERENCE LEFT VALUE PROPAGATION
Source address: -992
[i]Type for REF_54

Name: path Function: calculateInGivenOut
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_92(IVaderPool) = HIGH_LEVEL_CALL, dest:factory_20(IVaderPoolFactory), function:getPool, arguments:['REF_53', 'REF_54']  
High Call: getPool
Running querryfc
Found: None
Written func info: IVaderPoolFactory, getPool
[i]Type for TMP_92

Name: TMP_92 Function: calculateInGivenOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
factory_21(IVaderPoolFactory) := ϕ(['factory_13', 'factory_16', 'factory_10', 'factory_19', 'factory_21', 'factory_15', 'factory_26', 'factory_20', 'factory_1', 'factory_24', 'factory_7'])
Phi
[i]Type for factory

Name: factory Function: calculateInGivenOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
pool1_1(IVaderPool) := TMP_92(IVaderPool)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for pool1

Name: pool1 Function: calculateInGivenOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] nativeReserve cleared
[i] foreignReserve cleared
Propogating parameters and globals to SSA variables...
Ssa_name: pool_1, name: pool

Name: pool Function: calculateInGivenOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: pool_1, name: pool

Name: pool Function: calculateInGivenOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeReserve_1, name: nativeReserve

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: nativeReserve, Num: 1
Globalname: nativeReserve, contract_name: VaderRouter
Ssa_name: foreignReserve_1, name: foreignReserve

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: foreignReserve, Num: 1
Globalname: foreignReserve, contract_name: VaderRouter
End popogation
TUPLE_3(uint112,uint112,uint32) = HIGH_LEVEL_CALL, dest:pool_1(IVaderPool), function:getReserves, arguments:[]  
High Call: getReserves
Running querryfc
Found: None
Written func info: IVaderPool, getReserves
Retvar: ('c', ['global:nativeAsset'], ['-1'], 18, "'u'", 'u')
{'global:_owner': 1, 'global:_tokenApprovals': 2, 'global:_owners': 3, 'swap:to': -999, 'mint:to': -998, 'mint:TMP_139': 4, 'global:this': 4, 'None:None': 5, 'mint:foreignAsset': 6, 'swap:_nativeAsset': 7, 'swap:_foreignAsset': 8, 'global:nativeAsset': 9, 'global:foreignAsset': 10, 'global:_ZERO_ADDRESS': 11, 'removeLiquidity:tokenA': -997, 'removeLiquidity:tokenB': -996, 'removeLiquidity:to': -995, 'swapExactTokensForTokens:path': -994, 'swapExactTokensForTokens:to': -993, 'swapTokensForExactTokens:path': -992, 'swapTokensForExactTokens:to': -991, 'calculateInGivenOut:path': -990, 'calculateOutGivenIn:path': -989}
Retvar: ('c', ['global:foreignAsset'], ['-1'], 6, "'u'", 'u')
{'global:_owner': 1, 'global:_tokenApprovals': 2, 'global:_owners': 3, 'swap:to': -999, 'mint:to': -998, 'mint:TMP_139': 4, 'global:this': 4, 'None:None': 5, 'mint:foreignAsset': 6, 'swap:_nativeAsset': 7, 'swap:_foreignAsset': 8, 'global:nativeAsset': 9, 'global:foreignAsset': 10, 'global:_ZERO_ADDRESS': 11, 'removeLiquidity:tokenA': -997, 'removeLiquidity:tokenB': -996, 'removeLiquidity:to': -995, 'swapExactTokensForTokens:path': -994, 'swapExactTokensForTokens:to': -993, 'swapTokensForExactTokens:path': -992, 'swapTokensForExactTokens:to': -991, 'calculateInGivenOut:path': -990, 'calculateOutGivenIn:path': -989}
[i]Type for TUPLE_3

Name: TUPLE_3 Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
nativeReserve_1(uint256)= UNPACK TUPLE_3 index: 0 
([9], [-1], 18, "'u'", 'u', -1)
[i]Type for nativeReserve

Name: nativeReserve Function: calculateInGivenOut
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
foreignReserve_1(uint256)= UNPACK TUPLE_3 index: 1 
([10], [-1], 6, "'u'", 'u', -1)
[i]Type for foreignReserve

Name: foreignReserve Function: calculateInGivenOut
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_88 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: nativeAsset_1, name: nativeAsset

Name: nativeAsset Function: calculateInGivenOut
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: path_1 (-> []), name: path

Name: path Function: calculateInGivenOut
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeAsset_1, name: nativeAsset

Name: nativeAsset Function: calculateInGivenOut
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: path_1 (-> []), name: path

Name: path Function: calculateInGivenOut
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
REF_46(address) -> path_1 (-> [])[0]
INDEX
REFERENCE LEFT VALUE PROPAGATION
Source address: -992
[i]Type for REF_46

Name: path Function: calculateInGivenOut
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_88(bool) = REF_46 == nativeAsset_1
[i]Type for TMP_88

Name: TMP_88 Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_90 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: foreignReserve_1, name: foreignReserve

Name: foreignReserve Function: calculateInGivenOut
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amountOut_1, name: amountOut

Name: amountOut Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountOut_1 Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountOut, Num: 1
Globalname: amountOut, contract_name: VaderRouter
Ssa_name: nativeReserve_1, name: nativeReserve

Name: nativeReserve Function: calculateInGivenOut
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: foreignReserve_1, name: foreignReserve

Name: foreignReserve Function: calculateInGivenOut
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amountOut_1, name: amountOut

Name: amountOut_1 Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountOut_1 Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountOut, Num: 1
Globalname: amountOut, contract_name: VaderRouter
Ssa_name: nativeReserve_1, name: nativeReserve

Name: nativeReserve Function: calculateInGivenOut
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
End popogation
TMP_90(uint256) = LIBRARY_CALL, dest:VaderMath, function:VaderMath.calculateSwapReverse(uint256,uint256,uint256), arguments:['amountOut_1', 'foreignReserve_1', 'nativeReserve_1'] 
Found: calculateSwapReverse

Name: amountOut_1 Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: foreignReserve Function: calculateInGivenOut
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: nativeReserve Function: calculateInGivenOut
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
High level cal param_cache
Param: 0
    num: []
    den: []
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [10]
    den: [-1]
    norm: 6
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [9]
    den: [-1]
    norm: 18
    link: None
    fields: []
    fintype: -1
New param cache [[[], [], 'u', None, [], -1, 'u', 'u'], [[10], [-1], 6, None, [], -1, 'u', "'u'"], [[9], [-1], 18, None, [], -1, 'u', "'u'"]]
Old param cache: [[[-1], [-1], 'u', None, [], -1, 'u'], [[-1], [-1], 'u', None, [], -1, 'u'], [[-1], [-1], 'u', None, [], -1, 'u']]
[[], [], 'u', None, [], -1, 'u', 'u']

Name: amountOut Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[10], [-1], 6, None, [], -1, 'u', "'u'"]

Name: reserveIn Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
[[9], [-1], 18, None, [], -1, 'u', "'u'"]

Name: reserveOut Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
calculateSwapReverse(uint256,uint256,uint256)
Propogating All
Propogating All
reserveOut_1
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: reserveOut_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
reserveIn_1
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: reserveIn_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
Propogating All
amountOut_1
Ssa_name: amountOut_1, name: amountOut

Name: amountOut_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountOut_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
y2_1
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Propogating All
reserveOut_1
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: reserveOut_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
y4_1
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Propogating All
y4_1
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
reserveOut_1
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: reserveOut_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
reserveIn_1
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: reserveIn_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
XY_1
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Propogating All
reserveIn_1
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: reserveIn_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
y2_1
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Propogating All
XY_1
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Propogating All
numeratorC_1
Ssa_name: numeratorC_1, name: numeratorC

Name: numeratorC Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
numeratorB_1
Ssa_name: numeratorB_1, name: numeratorB

Name: numeratorB Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
numeratorA_1
Ssa_name: numeratorA_1, name: numeratorA

Name: numeratorA Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
y2_1
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Propogating All
numerator_1
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
denominator_1
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Propogating All
amountIn_1
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 1
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_31 cleared
[i] XY cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: XY, Num: 1
Globalname: XY, contract_name: VaderMath
End popogation
TMP_31(uint256) = reserveIn_1 (c)* reserveOut_1
lnorm: 6 rnorm: 18
Source address: u
Source address: u
Source address: u
[i]Type for TMP_31

Name: TMP_31 Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
XY_1(uint256) := TMP_31(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for XY

Name: XY Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_32 cleared
[i] y2 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountOut_1, name: amountOut

Name: amountOut_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountOut_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountOut, Num: 1
Globalname: amountOut, contract_name: VaderMath
Ssa_name: amountOut_1, name: amountOut

Name: amountOut_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountOut_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountOut, Num: 1
Globalname: amountOut, contract_name: VaderMath
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: y2, Num: 1
Globalname: y2, contract_name: VaderMath
End popogation
TMP_32(uint256) = amountOut_1 (c)* 2
lnorm: u rnorm: 0
Source address: u
[i]Type for TMP_32

Name: TMP_32 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
y2_1(uint256) := TMP_32(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] TMP_33 cleared
[i] y4 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: y4, Num: 1
Globalname: y4, contract_name: VaderMath
End popogation
TMP_33(uint256) = y2_1 (c)* 2
lnorm: 0 rnorm: 0
Source address: u
[i]Type for TMP_33

Name: TMP_33 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
y4_1(uint256) := TMP_33(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
[i] TMP_34 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
End popogation
TMP_34(bool) = y4_1 < reserveOut_1
lnorm: 0 rnorm: 18
[i]Type for TMP_34

Name: TMP_34 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_35(None) = SOLIDITY_CALL require(bool,string)(TMP_34,VaderMath::calculateSwapReverse: Desired Output Exceeds Maximum Output Possible (1/4 of Liquidity Pool))
[i]Type for TMP_35

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_36 cleared
[i] TMP_37 cleared
[i] TMP_38 cleared
[i] TMP_39 cleared
[i] TMP_40 cleared
[i] numeratorA cleared
Propogating parameters and globals to SSA variables...
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: numeratorA_1, name: numeratorA

Name: numeratorA Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numeratorA, Num: 1
Globalname: numeratorA, contract_name: VaderMath
End popogation
TMP_36(uint256) = INTERNAL_CALL, VaderMath.root(uint256)(XY_1)
New param cache [[[10, 9], [-1], 24, None, [], -1, 'u', 'u']]
Old param cache: [[[], [], 'u', None, [], -1, 'u']]
[[10, 9], [-1], 24, None, [], -1, 'u', 'u']

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
root(uint256)
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
Propogating All
c_2
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
Propogating All
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_38', 'XY_1'])
Phi
[i]Type for a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_49 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_49(bool) = a_1 > 3
lnorm: 24 rnorm: 0
[i]Type for TMP_49

Name: TMP_49 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_56 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_56(bool) = a_1 != 0
[i]Type for TMP_56

Name: TMP_56 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_4, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: c, Num: 4
Globalname: c, contract_name: VaderMath
End popogation
c_4(uint256) := 1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: c_1, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 1
Globalname: c, contract_name: VaderMath
End popogation
c_1(uint256) := a_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_50 cleared
[i] TMP_51 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: VaderMath
End popogation
TMP_50(uint256) = a_1 (c)/ 2
lnorm: 24 rnorm: 0
Source address: u
lnorm: 24 rnorm: 0
10
9
-1
[i]Type for TMP_50

Name: TMP_50 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_51(uint256) = TMP_50 (c)+ 1
Source address: u
[i]Type for TMP_51

Name: TMP_51 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_51(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
[i] x cleared
[i] TMP_52 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
End popogation
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
c_2(uint256) := ϕ(['c_1', 'c_3'])
Phi

Name: c Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for c

Name: c Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
x_2(uint256) := ϕ(['x_3', 'x_1'])
Phi

Name: x Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for x

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
TMP_52(bool) = x_2 < c_2
lnorm: 0 rnorm: 24
10
9
-1
[i]Type for TMP_52

Name: TMP_52 Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: c_3, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 3
Globalname: c, contract_name: VaderMath
End popogation
c_3(uint256) := x_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
[i] TMP_53 cleared
[i] TMP_54 cleared
[i] TMP_55 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: x_3, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 3
Globalname: x, contract_name: VaderMath
End popogation
TMP_53(uint256) = a_1 (c)/ x_2
lnorm: 24 rnorm: 0
Source address: u
Source address: u
lnorm: 24 rnorm: 0
Source address: u
Source address: u
[i]Type for TMP_53

Name: TMP_53 Function: root
Num: -1
Den: -1
Address: u
Norm: 24
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
TMP_54(uint256) = TMP_53 (c)+ x_2
Source address: u
[i]Type for TMP_54

Name: TMP_54 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
XXXX
TMP_55(uint256) = TMP_54 (c)/ 2
lnorm: 0 rnorm: 0
Source address: u
lnorm: 0 rnorm: 0
10
9
-1
[i]Type for TMP_55

Name: TMP_55 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
x_3(uint256) := TMP_55(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_38', 'XY_1'])
Phi
[i]Type for a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_49 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_49(bool) = a_1 > 3
lnorm: 24 rnorm: 0
[i]Type for TMP_49

Name: TMP_49 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_56 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_56(bool) = a_1 != 0
[i]Type for TMP_56

Name: TMP_56 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_4, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: c, Num: 4
Globalname: c, contract_name: VaderMath
End popogation
c_4(uint256) := 1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: c_1, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 1
Globalname: c, contract_name: VaderMath
End popogation
c_1(uint256) := a_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_50 cleared
[i] TMP_51 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: VaderMath
End popogation
TMP_50(uint256) = a_1 (c)/ 2
lnorm: 24 rnorm: 0
Source address: u
lnorm: 24 rnorm: 0
10
9
-1
[i]Type for TMP_50

Name: TMP_50 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_51(uint256) = TMP_50 (c)+ 1
Source address: u
[i]Type for TMP_51

Name: TMP_51 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_51(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
[i] x cleared
[i] TMP_52 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
End popogation
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
c_2(uint256) := ϕ(['c_1', 'c_3'])
Phi

Name: c Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef

Name: c Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for c

Name: c Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
x_2(uint256) := ϕ(['x_3', 'x_1'])
Phi

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for x

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
TMP_52(bool) = x_2 < c_2
lnorm: 0 rnorm: 24
10
9
-1
[i]Type for TMP_52

Name: TMP_52 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: c_3, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: c, Num: 3
Globalname: c, contract_name: VaderMath
End popogation
c_3(uint256) := x_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
[i] TMP_53 cleared
[i] TMP_54 cleared
[i] TMP_55 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: x_3, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 3
Globalname: x, contract_name: VaderMath
End popogation
TMP_53(uint256) = a_1 (c)/ x_2
lnorm: 24 rnorm: 0
Source address: u
Source address: u
lnorm: 24 rnorm: 0
Source address: u
Source address: u
[i]Type for TMP_53

Name: TMP_53 Function: root
Num: -1
Den: -1
Address: u
Norm: 24
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
TMP_54(uint256) = TMP_53 (c)+ x_2
Source address: u
[i]Type for TMP_54

Name: TMP_54 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
XXXX
TMP_55(uint256) = TMP_54 (c)/ 2
lnorm: 0 rnorm: 0
Source address: u
lnorm: 0 rnorm: 0
10
9
-1
[i]Type for TMP_55

Name: TMP_55 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
x_3(uint256) := TMP_55(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_36

Name: TMP_36 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_37(uint256) = reserveOut_1 (c)- y4_1
Source address: u
[i]Type for TMP_37

Name: TMP_37 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
TMP_38(uint256) = reserveIn_1 (c)* TMP_37
lnorm: 6 rnorm: 0
Source address: u
[i]Type for TMP_38

Name: TMP_38 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
TMP_39(uint256) = INTERNAL_CALL, VaderMath.root(uint256)(TMP_38)
New param cache [[[10], [-1], 6, None, [], -1, 'u', 4]]
Old param cache: [[[], [], 'u', None, [], -1, 'u']]
[[10], [-1], 6, None, [], -1, 'u', 4]

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
root(uint256)
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
Propogating All
c_2
Ssa_name: c_2, name: c

Name: c Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Propogating All
Propogating All
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_38', 'XY_1'])
Phi
[i]Type for a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
[i] TMP_49 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
End popogation
TMP_49(bool) = a_1 > 3
lnorm: 6 rnorm: 0
[i]Type for TMP_49

Name: TMP_49 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_56 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
End popogation
TMP_56(bool) = a_1 != 0
[i]Type for TMP_56

Name: TMP_56 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_4, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: c, Num: 4
Globalname: c, contract_name: VaderMath
End popogation
c_4(uint256) := 1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: c_1, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 1
Globalname: c, contract_name: VaderMath
End popogation
c_1(uint256) := a_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_50 cleared
[i] TMP_51 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: VaderMath
End popogation
TMP_50(uint256) = a_1 (c)/ 2
lnorm: 6 rnorm: 0
Source address: u
lnorm: 6 rnorm: 0
10
-1
[i]Type for TMP_50

Name: TMP_50 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_51(uint256) = TMP_50 (c)+ 1
Source address: u
[i]Type for TMP_51

Name: TMP_51 Function: root
Num: 10
Den: -1
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_51(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
[i] x cleared
[i] TMP_52 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
End popogation
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
c_2(uint256) := ϕ(['c_1', 'c_3'])
Phi

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef

Name: c Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for c

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
x_2(uint256) := ϕ(['x_3', 'x_1'])
Phi

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for x

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
TMP_52(bool) = x_2 < c_2
lnorm: 0 rnorm: 6
Error with TMP_52 in function root
Error with: TMP_52 in function root
[i]Type for TMP_52

Name: TMP_52 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: c_3, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: c, Num: 3
Globalname: c, contract_name: VaderMath
End popogation
c_3(uint256) := x_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
[i] TMP_53 cleared
[i] TMP_54 cleared
[i] TMP_55 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: x_3, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 3
Globalname: x, contract_name: VaderMath
End popogation
TMP_53(uint256) = a_1 (c)/ x_2
lnorm: 6 rnorm: 0
Source address: u
Source address: u
lnorm: 6 rnorm: 0
Source address: u
-1
9
[i]Type for TMP_53

Name: TMP_53 Function: root
Num: -1
Den: 9
Address: u
Norm: 6
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
TMP_54(uint256) = TMP_53 (c)+ x_2
Error with TMP_54 in function root
Error with: TMP_54 in function root
[i]Type for TMP_54

Name: TMP_54 Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_55(uint256) = TMP_54 (c)/ 2
lnorm: u rnorm: 0
lnorm: u rnorm: 0
[i]Type for TMP_55

Name: TMP_55 Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
x_3(uint256) := TMP_55(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_38', 'XY_1'])
Phi
[i]Type for a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
[i] TMP_49 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
End popogation
TMP_49(bool) = a_1 > 3
lnorm: 6 rnorm: 0
[i]Type for TMP_49

Name: TMP_49 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_56 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
End popogation
TMP_56(bool) = a_1 != 0
[i]Type for TMP_56

Name: TMP_56 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_4, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: c, Num: 4
Globalname: c, contract_name: VaderMath
End popogation
c_4(uint256) := 1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: c_1, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 1
Globalname: c, contract_name: VaderMath
End popogation
c_1(uint256) := a_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_50 cleared
[i] TMP_51 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: VaderMath
End popogation
TMP_50(uint256) = a_1 (c)/ 2
lnorm: 6 rnorm: 0
Source address: u
lnorm: 6 rnorm: 0
10
-1
[i]Type for TMP_50

Name: TMP_50 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_51(uint256) = TMP_50 (c)+ 1
Source address: u
[i]Type for TMP_51

Name: TMP_51 Function: root
Num: 10
Den: -1
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_51(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
[i] x cleared
[i] TMP_52 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
End popogation
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
c_2(uint256) := ϕ(['c_1', 'c_3'])
Phi

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef

Name: c Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for c

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
x_2(uint256) := ϕ(['x_3', 'x_1'])
Phi

Name: x Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
TMP_52(bool) = x_2 < c_2
lnorm: 0 rnorm: 6
10
-1
[i]Type for TMP_52

Name: TMP_52 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: c_3, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: c, Num: 3
Globalname: c, contract_name: VaderMath
End popogation
c_3(uint256) := x_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
[i] TMP_53 cleared
[i] TMP_54 cleared
[i] TMP_55 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: x_3, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 3
Globalname: x, contract_name: VaderMath
End popogation
TMP_53(uint256) = a_1 (c)/ x_2
lnorm: 6 rnorm: 0
Source address: u
Source address: u
lnorm: 6 rnorm: 0
Source address: u
Source address: u
[i]Type for TMP_53

Name: TMP_53 Function: root
Num: -1
Den: -1
Address: u
Norm: 6
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
TMP_54(uint256) = TMP_53 (c)+ x_2
Source address: u
[i]Type for TMP_54

Name: TMP_54 Function: root
Num: 10
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
TMP_55(uint256) = TMP_54 (c)/ 2
lnorm: 0 rnorm: 0
Source address: u
lnorm: 0 rnorm: 0
10
-1
[i]Type for TMP_55

Name: TMP_55 Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
x_3(uint256) := TMP_55(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_39

Name: TMP_39 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_40(uint256) = TMP_36 (c)* TMP_39
lnorm: u rnorm: u
[i]Type for TMP_40

Name: TMP_40 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
numeratorA_1(uint256) := TMP_40(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for numeratorA

Name: numeratorA Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_41 cleared
[i] numeratorB cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: numeratorB_1, name: numeratorB

Name: numeratorB Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: numeratorB, Num: 1
Globalname: numeratorB, contract_name: VaderMath
End popogation
TMP_41(uint256) = y2_1 (c)* reserveIn_1
lnorm: 0 rnorm: 6
Source address: u
[i]Type for TMP_41

Name: TMP_41 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
numeratorB_1(uint256) := TMP_41(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for numeratorB

Name: numeratorB Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] numeratorC cleared
Propogating parameters and globals to SSA variables...
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: numeratorC_1, name: numeratorC

Name: numeratorC Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: numeratorC, Num: 1
Globalname: numeratorC, contract_name: VaderMath
End popogation
numeratorC_1(uint256) := XY_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for numeratorC

Name: numeratorC Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_42 cleared
[i] TMP_43 cleared
[i] numerator cleared
Propogating parameters and globals to SSA variables...
Ssa_name: numeratorC_1, name: numeratorC

Name: numeratorC Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: numeratorB_1, name: numeratorB

Name: numeratorB Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: numeratorA_1, name: numeratorA

Name: numeratorA Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numeratorA, Num: 1
Globalname: numeratorA, contract_name: VaderMath
Ssa_name: numeratorC_1, name: numeratorC

Name: numeratorC Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: numeratorB_1, name: numeratorB

Name: numeratorB Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: numeratorA_1, name: numeratorA

Name: numeratorA Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numeratorA, Num: 1
Globalname: numeratorA, contract_name: VaderMath
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: numerator, Num: 1
Globalname: numerator, contract_name: VaderMath
End popogation
TMP_42(uint256) = numeratorC_1 (c)- numeratorA_1
Source address: u
[i]Type for TMP_42

Name: TMP_42 Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_43(uint256) = TMP_42 (c)- numeratorB_1
Error with TMP_43 in function calculateSwapReverse
Error with: TMP_43 in function calculateSwapReverse
[i]Type for TMP_43

Name: TMP_43 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
numerator_1(uint256) := TMP_43(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for numerator

Name: numerator Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] denominator cleared
Propogating parameters and globals to SSA variables...
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: denominator, Num: 1
Globalname: denominator, contract_name: VaderMath
End popogation
denominator_1(uint256) := y2_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for denominator

Name: denominator Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] TMP_44 cleared
[i] amountIn cleared
Propogating parameters and globals to SSA variables...
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: amountIn, Num: 1
Globalname: amountIn, contract_name: VaderMath
End popogation
TMP_44(uint256) = numerator_1 (c)/ denominator_1
lnorm: u rnorm: 0
lnorm: u rnorm: 0
[i]Type for TMP_44

Name: TMP_44 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
amountIn_1(uint256) := TMP_44(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for amountIn

Name: amountIn Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
End popogation
RETURN amountIn_1
RETURN

Name: amountIn Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_31 cleared
[i] XY cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: XY, Num: 1
Globalname: XY, contract_name: VaderMath
End popogation
TMP_31(uint256) = reserveIn_1 (c)* reserveOut_1
lnorm: 6 rnorm: 18
Source address: u
Source address: u
Source address: u
[i]Type for TMP_31

Name: TMP_31 Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
XY_1(uint256) := TMP_31(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for XY

Name: XY Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_32 cleared
[i] y2 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountOut_1, name: amountOut

Name: amountOut_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountOut_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountOut, Num: 1
Globalname: amountOut, contract_name: VaderMath
Ssa_name: amountOut_1, name: amountOut

Name: amountOut_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountOut_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountOut, Num: 1
Globalname: amountOut, contract_name: VaderMath
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: y2, Num: 1
Globalname: y2, contract_name: VaderMath
End popogation
TMP_32(uint256) = amountOut_1 (c)* 2
lnorm: u rnorm: 0
Source address: u
[i]Type for TMP_32

Name: TMP_32 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
y2_1(uint256) := TMP_32(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] TMP_33 cleared
[i] y4 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: y4, Num: 1
Globalname: y4, contract_name: VaderMath
End popogation
TMP_33(uint256) = y2_1 (c)* 2
lnorm: 0 rnorm: 0
Source address: u
[i]Type for TMP_33

Name: TMP_33 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
y4_1(uint256) := TMP_33(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
[i] TMP_34 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
End popogation
TMP_34(bool) = y4_1 < reserveOut_1
lnorm: 0 rnorm: 18
[i]Type for TMP_34

Name: TMP_34 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_35(None) = SOLIDITY_CALL require(bool,string)(TMP_34,VaderMath::calculateSwapReverse: Desired Output Exceeds Maximum Output Possible (1/4 of Liquidity Pool))
[i]Type for TMP_35

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_36 cleared
[i] TMP_37 cleared
[i] TMP_38 cleared
[i] TMP_39 cleared
[i] TMP_40 cleared
[i] numeratorA cleared
Propogating parameters and globals to SSA variables...
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: numeratorA_1, name: numeratorA

Name: numeratorA Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numeratorA, Num: 1
Globalname: numeratorA, contract_name: VaderMath
End popogation
TMP_36(uint256) = INTERNAL_CALL, VaderMath.root(uint256)(XY_1)
New param cache [[[10, 9], [-1], 24, None, [], -1, 'u', 'u']]
Old param cache: [[[], [], 'u', None, [], -1, 'u']]
[[10, 9], [-1], 24, None, [], -1, 'u', 'u']

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
root(uint256)
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
Propogating All
c_2
Ssa_name: c_2, name: c

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Propogating All
Propogating All
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_38', 'XY_1'])
Phi
[i]Type for a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_49 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_49(bool) = a_1 > 3
lnorm: 24 rnorm: 0
[i]Type for TMP_49

Name: TMP_49 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_56 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_56(bool) = a_1 != 0
[i]Type for TMP_56

Name: TMP_56 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_4, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: c, Num: 4
Globalname: c, contract_name: VaderMath
End popogation
c_4(uint256) := 1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: c_1, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 1
Globalname: c, contract_name: VaderMath
End popogation
c_1(uint256) := a_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_50 cleared
[i] TMP_51 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: VaderMath
End popogation
TMP_50(uint256) = a_1 (c)/ 2
lnorm: 24 rnorm: 0
Source address: u
lnorm: 24 rnorm: 0
10
9
-1
[i]Type for TMP_50

Name: TMP_50 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_51(uint256) = TMP_50 (c)+ 1
Source address: u
[i]Type for TMP_51

Name: TMP_51 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_51(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
[i] x cleared
[i] TMP_52 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
End popogation
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
c_2(uint256) := ϕ(['c_1', 'c_3'])
Phi

Name: c Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for c

Name: c Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
x_2(uint256) := ϕ(['x_3', 'x_1'])
Phi

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_52(bool) = x_2 < c_2
lnorm: 0 rnorm: 24
[i]Type for TMP_52

Name: TMP_52 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: c_3, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: c, Num: 3
Globalname: c, contract_name: VaderMath
End popogation
c_3(uint256) := x_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] TMP_53 cleared
[i] TMP_54 cleared
[i] TMP_55 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: x_3, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 3
Globalname: x, contract_name: VaderMath
End popogation
TMP_53(uint256) = a_1 (c)/ x_2
lnorm: 24 rnorm: 0
Source address: u
Source address: u
lnorm: 24 rnorm: 0
Source address: u
9
-1
[i]Type for TMP_53

Name: TMP_53 Function: root
Num: 9
Den: -1
Address: u
Norm: 24
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_54(uint256) = TMP_53 (c)+ x_2
10
10
-1
lnorm: 24 rnorm: 0
Source address: u
[i]Type for TMP_54

Name: TMP_54 Function: root
Num: 10
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
TMP_55(uint256) = TMP_54 (c)/ 2
lnorm: 0 rnorm: 0
Source address: u
lnorm: 0 rnorm: 0
10
-1
[i]Type for TMP_55

Name: TMP_55 Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
x_3(uint256) := TMP_55(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_38', 'XY_1'])
Phi
[i]Type for a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_49 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_49(bool) = a_1 > 3
lnorm: 24 rnorm: 0
[i]Type for TMP_49

Name: TMP_49 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_56 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_56(bool) = a_1 != 0
[i]Type for TMP_56

Name: TMP_56 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_4, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: c, Num: 4
Globalname: c, contract_name: VaderMath
End popogation
c_4(uint256) := 1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: c_1, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 1
Globalname: c, contract_name: VaderMath
End popogation
c_1(uint256) := a_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_50 cleared
[i] TMP_51 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: VaderMath
End popogation
TMP_50(uint256) = a_1 (c)/ 2
lnorm: 24 rnorm: 0
Source address: u
lnorm: 24 rnorm: 0
10
9
-1
[i]Type for TMP_50

Name: TMP_50 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_51(uint256) = TMP_50 (c)+ 1
Source address: u
[i]Type for TMP_51

Name: TMP_51 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_51(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
[i] x cleared
[i] TMP_52 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
End popogation
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
c_2(uint256) := ϕ(['c_1', 'c_3'])
Phi

Name: c Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for c

Name: c Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
x_2(uint256) := ϕ(['x_3', 'x_1'])
Phi

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_52(bool) = x_2 < c_2
lnorm: 0 rnorm: 24
[i]Type for TMP_52

Name: TMP_52 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: c_3, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: c, Num: 3
Globalname: c, contract_name: VaderMath
End popogation
c_3(uint256) := x_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] TMP_53 cleared
[i] TMP_54 cleared
[i] TMP_55 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: x_3, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 3
Globalname: x, contract_name: VaderMath
End popogation
TMP_53(uint256) = a_1 (c)/ x_2
lnorm: 24 rnorm: 0
Source address: u
Source address: u
lnorm: 24 rnorm: 0
Source address: u
9
-1
[i]Type for TMP_53

Name: TMP_53 Function: root
Num: 9
Den: -1
Address: u
Norm: 24
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_54(uint256) = TMP_53 (c)+ x_2
10
10
-1
lnorm: 24 rnorm: 0
Source address: u
[i]Type for TMP_54

Name: TMP_54 Function: root
Num: 10
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
TMP_55(uint256) = TMP_54 (c)/ 2
lnorm: 0 rnorm: 0
Source address: u
lnorm: 0 rnorm: 0
10
-1
[i]Type for TMP_55

Name: TMP_55 Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
x_3(uint256) := TMP_55(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_36

Name: TMP_36 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_37(uint256) = reserveOut_1 (c)- y4_1
Source address: u
[i]Type for TMP_37

Name: TMP_37 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
TMP_38(uint256) = reserveIn_1 (c)* TMP_37
lnorm: 6 rnorm: 0
Source address: u
[i]Type for TMP_38

Name: TMP_38 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
TMP_39(uint256) = INTERNAL_CALL, VaderMath.root(uint256)(TMP_38)
New param cache [[[10], [-1], 6, None, [], -1, 'u', 4]]
Old param cache: [[[], [], 'u', None, [], -1, 'u']]
[[10], [-1], 6, None, [], -1, 'u', 4]

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
root(uint256)
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
Propogating All
c_2
Ssa_name: c_2, name: c

Name: c Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Propogating All
Propogating All
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_38', 'XY_1'])
Phi
[i]Type for a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
[i] TMP_49 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
End popogation
TMP_49(bool) = a_1 > 3
lnorm: 6 rnorm: 0
[i]Type for TMP_49

Name: TMP_49 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_56 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
End popogation
TMP_56(bool) = a_1 != 0
[i]Type for TMP_56

Name: TMP_56 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_4, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: c, Num: 4
Globalname: c, contract_name: VaderMath
End popogation
c_4(uint256) := 1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: c_1, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 1
Globalname: c, contract_name: VaderMath
End popogation
c_1(uint256) := a_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_50 cleared
[i] TMP_51 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: VaderMath
End popogation
TMP_50(uint256) = a_1 (c)/ 2
lnorm: 6 rnorm: 0
Source address: u
lnorm: 6 rnorm: 0
10
-1
[i]Type for TMP_50

Name: TMP_50 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_51(uint256) = TMP_50 (c)+ 1
Source address: u
[i]Type for TMP_51

Name: TMP_51 Function: root
Num: 10
Den: -1
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_51(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
[i] x cleared
[i] TMP_52 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
End popogation
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
c_2(uint256) := ϕ(['c_1', 'c_3'])
Phi

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for c

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
x_2(uint256) := ϕ(['x_3', 'x_1'])
Phi

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_52(bool) = x_2 < c_2
lnorm: 0 rnorm: 6
10
-1
[i]Type for TMP_52

Name: TMP_52 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: c_3, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: c, Num: 3
Globalname: c, contract_name: VaderMath
End popogation
c_3(uint256) := x_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] TMP_53 cleared
[i] TMP_54 cleared
[i] TMP_55 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: x_3, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 3
Globalname: x, contract_name: VaderMath
End popogation
TMP_53(uint256) = a_1 (c)/ x_2
lnorm: 6 rnorm: 0
Source address: u
Source address: u
lnorm: 6 rnorm: 0
Source address: u
Source address: u
[i]Type for TMP_53

Name: TMP_53 Function: root
Num: -1
Den: -1
Address: u
Norm: 6
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_54(uint256) = TMP_53 (c)+ x_2
Source address: u
[i]Type for TMP_54

Name: TMP_54 Function: root
Num: 10
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
TMP_55(uint256) = TMP_54 (c)/ 2
lnorm: 0 rnorm: 0
Source address: u
lnorm: 0 rnorm: 0
10
-1
[i]Type for TMP_55

Name: TMP_55 Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
x_3(uint256) := TMP_55(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_38', 'XY_1'])
Phi
[i]Type for a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
[i] TMP_49 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
End popogation
TMP_49(bool) = a_1 > 3
lnorm: 6 rnorm: 0
[i]Type for TMP_49

Name: TMP_49 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_56 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
End popogation
TMP_56(bool) = a_1 != 0
[i]Type for TMP_56

Name: TMP_56 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_4, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: c, Num: 4
Globalname: c, contract_name: VaderMath
End popogation
c_4(uint256) := 1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: c_1, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 1
Globalname: c, contract_name: VaderMath
End popogation
c_1(uint256) := a_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_50 cleared
[i] TMP_51 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: VaderMath
End popogation
TMP_50(uint256) = a_1 (c)/ 2
lnorm: 6 rnorm: 0
Source address: u
lnorm: 6 rnorm: 0
10
-1
[i]Type for TMP_50

Name: TMP_50 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_51(uint256) = TMP_50 (c)+ 1
Source address: u
[i]Type for TMP_51

Name: TMP_51 Function: root
Num: 10
Den: -1
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_51(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
[i] x cleared
[i] TMP_52 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
End popogation
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
c_2(uint256) := ϕ(['c_1', 'c_3'])
Phi

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for c

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
x_2(uint256) := ϕ(['x_3', 'x_1'])
Phi

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_52(bool) = x_2 < c_2
lnorm: 0 rnorm: 6
10
-1
[i]Type for TMP_52

Name: TMP_52 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: c_3, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: c, Num: 3
Globalname: c, contract_name: VaderMath
End popogation
c_3(uint256) := x_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] TMP_53 cleared
[i] TMP_54 cleared
[i] TMP_55 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: x_3, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 3
Globalname: x, contract_name: VaderMath
End popogation
TMP_53(uint256) = a_1 (c)/ x_2
lnorm: 6 rnorm: 0
Source address: u
Source address: u
lnorm: 6 rnorm: 0
Source address: u
Source address: u
[i]Type for TMP_53

Name: TMP_53 Function: root
Num: -1
Den: -1
Address: u
Norm: 6
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_54(uint256) = TMP_53 (c)+ x_2
Source address: u
[i]Type for TMP_54

Name: TMP_54 Function: root
Num: 10
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
TMP_55(uint256) = TMP_54 (c)/ 2
lnorm: 0 rnorm: 0
Source address: u
lnorm: 0 rnorm: 0
10
-1
[i]Type for TMP_55

Name: TMP_55 Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
x_3(uint256) := TMP_55(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_39

Name: TMP_39 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_40(uint256) = TMP_36 (c)* TMP_39
lnorm: u rnorm: u
[i]Type for TMP_40

Name: TMP_40 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
numeratorA_1(uint256) := TMP_40(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for numeratorA

Name: numeratorA Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_41 cleared
[i] numeratorB cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: numeratorB_1, name: numeratorB

Name: numeratorB Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: numeratorB, Num: 1
Globalname: numeratorB, contract_name: VaderMath
End popogation
TMP_41(uint256) = y2_1 (c)* reserveIn_1
lnorm: 0 rnorm: 6
Source address: u
[i]Type for TMP_41

Name: TMP_41 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
numeratorB_1(uint256) := TMP_41(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for numeratorB

Name: numeratorB Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] numeratorC cleared
Propogating parameters and globals to SSA variables...
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: numeratorC_1, name: numeratorC

Name: numeratorC Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numeratorC, Num: 1
Globalname: numeratorC, contract_name: VaderMath
End popogation
numeratorC_1(uint256) := XY_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for numeratorC

Name: numeratorC Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_42 cleared
[i] TMP_43 cleared
[i] numerator cleared
Propogating parameters and globals to SSA variables...
Ssa_name: numeratorC_1, name: numeratorC

Name: numeratorC Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: numeratorB_1, name: numeratorB

Name: numeratorB Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: numeratorA_1, name: numeratorA

Name: numeratorA Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numeratorA, Num: 1
Globalname: numeratorA, contract_name: VaderMath
Ssa_name: numeratorC_1, name: numeratorC

Name: numeratorC Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: numeratorB_1, name: numeratorB

Name: numeratorB Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: numeratorA_1, name: numeratorA

Name: numeratorA Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numeratorA, Num: 1
Globalname: numeratorA, contract_name: VaderMath
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numerator, Num: 1
Globalname: numerator, contract_name: VaderMath
End popogation
TMP_42(uint256) = numeratorC_1 (c)- numeratorA_1
Source address: u
[i]Type for TMP_42

Name: TMP_42 Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_43(uint256) = TMP_42 (c)- numeratorB_1
[i]Type for TMP_43

Name: TMP_43 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
numerator_1(uint256) := TMP_43(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for numerator

Name: numerator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] denominator cleared
Propogating parameters and globals to SSA variables...
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: denominator, Num: 1
Globalname: denominator, contract_name: VaderMath
End popogation
denominator_1(uint256) := y2_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for denominator

Name: denominator Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] TMP_44 cleared
[i] amountIn cleared
Propogating parameters and globals to SSA variables...
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numerator, Num: 1
Globalname: numerator, contract_name: VaderMath
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numerator, Num: 1
Globalname: numerator, contract_name: VaderMath
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: amountIn, Num: 1
Globalname: amountIn, contract_name: VaderMath
End popogation
TMP_44(uint256) = numerator_1 (c)/ denominator_1
lnorm: u rnorm: 0
lnorm: u rnorm: 0
[i]Type for TMP_44

Name: TMP_44 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
amountIn_1(uint256) := TMP_44(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for amountIn

Name: amountIn Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
End popogation
RETURN amountIn_1
RETURN

Name: amountIn Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Source address: u
Source address: u
[i]Type for TMP_90

Name: TMP_90 Function: calculateInGivenOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
RETURN TMP_90
RETURN

Name: TMP_90 Function: calculateInGivenOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
[i] nativeReserve0 cleared
[i] foreignReserve0 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: pool0_1, name: pool0

Name: pool0 Function: calculateInGivenOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: pool0_1, name: pool0

Name: pool0 Function: calculateInGivenOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeReserve0_1, name: nativeReserve0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: nativeReserve0, Num: 1
Globalname: nativeReserve0, contract_name: VaderRouter
Ssa_name: foreignReserve0_1, name: foreignReserve0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: foreignReserve0, Num: 1
Globalname: foreignReserve0, contract_name: VaderRouter
End popogation
TUPLE_4(uint112,uint112,uint32) = HIGH_LEVEL_CALL, dest:pool0_1(IVaderPool), function:getReserves, arguments:[]  
High Call: getReserves
Running querryfc
Found: None
Written func info: IVaderPool, getReserves
Retvar: ('c', ['global:nativeAsset'], ['-1'], 18, "'u'", 'u')
{'global:_owner': 1, 'global:_tokenApprovals': 2, 'global:_owners': 3, 'swap:to': -999, 'mint:to': -998, 'mint:TMP_139': 4, 'global:this': 4, 'None:None': 5, 'mint:foreignAsset': 6, 'swap:_nativeAsset': 7, 'swap:_foreignAsset': 8, 'global:nativeAsset': 9, 'global:foreignAsset': 10, 'global:_ZERO_ADDRESS': 11, 'removeLiquidity:tokenA': -997, 'removeLiquidity:tokenB': -996, 'removeLiquidity:to': -995, 'swapExactTokensForTokens:path': -994, 'swapExactTokensForTokens:to': -993, 'swapTokensForExactTokens:path': -992, 'swapTokensForExactTokens:to': -991, 'calculateInGivenOut:path': -990, 'calculateOutGivenIn:path': -989}
Retvar: ('c', ['global:foreignAsset'], ['-1'], 6, "'u'", 'u')
{'global:_owner': 1, 'global:_tokenApprovals': 2, 'global:_owners': 3, 'swap:to': -999, 'mint:to': -998, 'mint:TMP_139': 4, 'global:this': 4, 'None:None': 5, 'mint:foreignAsset': 6, 'swap:_nativeAsset': 7, 'swap:_foreignAsset': 8, 'global:nativeAsset': 9, 'global:foreignAsset': 10, 'global:_ZERO_ADDRESS': 11, 'removeLiquidity:tokenA': -997, 'removeLiquidity:tokenB': -996, 'removeLiquidity:to': -995, 'swapExactTokensForTokens:path': -994, 'swapExactTokensForTokens:to': -993, 'swapTokensForExactTokens:path': -992, 'swapTokensForExactTokens:to': -991, 'calculateInGivenOut:path': -990, 'calculateOutGivenIn:path': -989}
[i]Type for TUPLE_4

Name: TUPLE_4 Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
nativeReserve0_1(uint256)= UNPACK TUPLE_4 index: 0 
([9], [-1], 18, "'u'", 'u', -1)
[i]Type for nativeReserve0

Name: nativeReserve0 Function: calculateInGivenOut
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
foreignReserve0_1(uint256)= UNPACK TUPLE_4 index: 1 
([10], [-1], 6, "'u'", 'u', -1)
[i]Type for foreignReserve0

Name: foreignReserve0 Function: calculateInGivenOut
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] nativeReserve1 cleared
[i] foreignReserve1 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: pool1_1, name: pool1

Name: pool1 Function: calculateInGivenOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: pool1_1, name: pool1

Name: pool1 Function: calculateInGivenOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeReserve1_1, name: nativeReserve1

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: nativeReserve1, Num: 1
Globalname: nativeReserve1, contract_name: VaderRouter
Ssa_name: foreignReserve1_1, name: foreignReserve1

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: foreignReserve1, Num: 1
Globalname: foreignReserve1, contract_name: VaderRouter
End popogation
TUPLE_5(uint112,uint112,uint32) = HIGH_LEVEL_CALL, dest:pool1_1(IVaderPool), function:getReserves, arguments:[]  
High Call: getReserves
Running querryfc
Found: None
Written func info: IVaderPool, getReserves
Retvar: ('c', ['global:nativeAsset'], ['-1'], 18, "'u'", 'u')
{'global:_owner': 1, 'global:_tokenApprovals': 2, 'global:_owners': 3, 'swap:to': -999, 'mint:to': -998, 'mint:TMP_139': 4, 'global:this': 4, 'None:None': 5, 'mint:foreignAsset': 6, 'swap:_nativeAsset': 7, 'swap:_foreignAsset': 8, 'global:nativeAsset': 9, 'global:foreignAsset': 10, 'global:_ZERO_ADDRESS': 11, 'removeLiquidity:tokenA': -997, 'removeLiquidity:tokenB': -996, 'removeLiquidity:to': -995, 'swapExactTokensForTokens:path': -994, 'swapExactTokensForTokens:to': -993, 'swapTokensForExactTokens:path': -992, 'swapTokensForExactTokens:to': -991, 'calculateInGivenOut:path': -990, 'calculateOutGivenIn:path': -989}
Retvar: ('c', ['global:foreignAsset'], ['-1'], 6, "'u'", 'u')
{'global:_owner': 1, 'global:_tokenApprovals': 2, 'global:_owners': 3, 'swap:to': -999, 'mint:to': -998, 'mint:TMP_139': 4, 'global:this': 4, 'None:None': 5, 'mint:foreignAsset': 6, 'swap:_nativeAsset': 7, 'swap:_foreignAsset': 8, 'global:nativeAsset': 9, 'global:foreignAsset': 10, 'global:_ZERO_ADDRESS': 11, 'removeLiquidity:tokenA': -997, 'removeLiquidity:tokenB': -996, 'removeLiquidity:to': -995, 'swapExactTokensForTokens:path': -994, 'swapExactTokensForTokens:to': -993, 'swapTokensForExactTokens:path': -992, 'swapTokensForExactTokens:to': -991, 'calculateInGivenOut:path': -990, 'calculateOutGivenIn:path': -989}
[i]Type for TUPLE_5

Name: TUPLE_5 Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
nativeReserve1_1(uint256)= UNPACK TUPLE_5 index: 0 
([9], [-1], 18, "'u'", 'u', -1)
[i]Type for nativeReserve1

Name: nativeReserve1 Function: calculateInGivenOut
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
foreignReserve1_1(uint256)= UNPACK TUPLE_5 index: 1 
([10], [-1], 6, "'u'", 'u', -1)
[i]Type for foreignReserve1

Name: foreignReserve1 Function: calculateInGivenOut
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
[i] TMP_93 cleared
[i] TMP_94 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: foreignReserve1_1, name: foreignReserve1

Name: foreignReserve1 Function: calculateInGivenOut
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: foreignReserve0_1, name: foreignReserve0

Name: foreignReserve0 Function: calculateInGivenOut
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: nativeReserve0_1, name: nativeReserve0

Name: nativeReserve0 Function: calculateInGivenOut
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amountOut_1, name: amountOut

Name: amountOut_1 Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountOut_1 Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountOut, Num: 1
Globalname: amountOut, contract_name: VaderRouter
Ssa_name: nativeReserve1_1, name: nativeReserve1

Name: nativeReserve1 Function: calculateInGivenOut
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: foreignReserve1_1, name: foreignReserve1

Name: foreignReserve1 Function: calculateInGivenOut
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: foreignReserve0_1, name: foreignReserve0

Name: foreignReserve0 Function: calculateInGivenOut
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: nativeReserve0_1, name: nativeReserve0

Name: nativeReserve0 Function: calculateInGivenOut
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amountOut_1, name: amountOut

Name: amountOut_1 Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountOut_1 Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountOut, Num: 1
Globalname: amountOut, contract_name: VaderRouter
Ssa_name: nativeReserve1_1, name: nativeReserve1

Name: nativeReserve1 Function: calculateInGivenOut
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
End popogation
TMP_93(uint256) = LIBRARY_CALL, dest:VaderMath, function:VaderMath.calculateSwapReverse(uint256,uint256,uint256), arguments:['amountOut_1', 'nativeReserve1_1', 'foreignReserve1_1'] 
Found: calculateSwapReverse

Name: amountOut_1 Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: nativeReserve1 Function: calculateInGivenOut
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: foreignReserve1 Function: calculateInGivenOut
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
High level cal param_cache
Param: 0
    num: []
    den: []
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [9]
    den: [-1]
    norm: 18
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [10]
    den: [-1]
    norm: 6
    link: None
    fields: []
    fintype: -1
New param cache [[[], [], 'u', None, [], -1, 'u', 'u'], [[9], [-1], 18, None, [], -1, 'u', "'u'"], [[10], [-1], 6, None, [], -1, 'u', "'u'"]]
Old param cache: [[[-1], [-1], 'u', None, [], -1, 'u'], [[-1], [-1], 'u', None, [], -1, 'u'], [[-1], [-1], 'u', None, [], -1, 'u']]
[[], [], 'u', None, [], -1, 'u', 'u']

Name: amountOut Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[9], [-1], 18, None, [], -1, 'u', "'u'"]

Name: reserveIn Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
[[10], [-1], 6, None, [], -1, 'u', "'u'"]

Name: reserveOut Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
calculateSwapReverse(uint256,uint256,uint256)
Propogating All
Propogating All
reserveOut_1
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: reserveOut_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
reserveIn_1
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: reserveIn_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
Propogating All
amountOut_1
Ssa_name: amountOut_1, name: amountOut

Name: amountOut_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountOut_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
y2_1
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Propogating All
reserveOut_1
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: reserveOut_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
y4_1
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Propogating All
y4_1
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
reserveOut_1
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: reserveOut_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
reserveIn_1
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: reserveIn_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
XY_1
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
reserveIn_1
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: reserveIn_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
y2_1
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Propogating All
XY_1
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
numeratorC_1
Ssa_name: numeratorC_1, name: numeratorC

Name: numeratorC Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
numeratorB_1
Ssa_name: numeratorB_1, name: numeratorB

Name: numeratorB Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 2
Fields: 
Finance Type: undef
numeratorA_1
Ssa_name: numeratorA_1, name: numeratorA

Name: numeratorA Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
y2_1
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Propogating All
numerator_1
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
denominator_1
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Propogating All
amountIn_1
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_31 cleared
[i] XY cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: XY, Num: 1
Globalname: XY, contract_name: VaderMath
End popogation
TMP_31(uint256) = reserveIn_1 (c)* reserveOut_1
lnorm: 18 rnorm: 6
Source address: u
Source address: u
Source address: u
[i]Type for TMP_31

Name: TMP_31 Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
XY_1(uint256) := TMP_31(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for XY

Name: XY Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_32 cleared
[i] y2 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountOut_1, name: amountOut

Name: amountOut_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountOut_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountOut, Num: 1
Globalname: amountOut, contract_name: VaderMath
Ssa_name: amountOut_1, name: amountOut

Name: amountOut_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountOut_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountOut, Num: 1
Globalname: amountOut, contract_name: VaderMath
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: y2, Num: 1
Globalname: y2, contract_name: VaderMath
End popogation
TMP_32(uint256) = amountOut_1 (c)* 2
lnorm: u rnorm: 0
Source address: u
[i]Type for TMP_32

Name: TMP_32 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
y2_1(uint256) := TMP_32(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] TMP_33 cleared
[i] y4 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: y4, Num: 1
Globalname: y4, contract_name: VaderMath
End popogation
TMP_33(uint256) = y2_1 (c)* 2
lnorm: 0 rnorm: 0
Source address: u
[i]Type for TMP_33

Name: TMP_33 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
y4_1(uint256) := TMP_33(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
[i] TMP_34 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
End popogation
TMP_34(bool) = y4_1 < reserveOut_1
lnorm: 0 rnorm: 6
[i]Type for TMP_34

Name: TMP_34 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_35(None) = SOLIDITY_CALL require(bool,string)(TMP_34,VaderMath::calculateSwapReverse: Desired Output Exceeds Maximum Output Possible (1/4 of Liquidity Pool))
[i]Type for TMP_35

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_36 cleared
[i] TMP_37 cleared
[i] TMP_38 cleared
[i] TMP_39 cleared
[i] TMP_40 cleared
[i] numeratorA cleared
Propogating parameters and globals to SSA variables...
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: numeratorA_1, name: numeratorA

Name: numeratorA Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numeratorA, Num: 1
Globalname: numeratorA, contract_name: VaderMath
End popogation
TMP_36(uint256) = INTERNAL_CALL, VaderMath.root(uint256)(XY_1)
New param cache [[[9, 10], [-1], 24, None, [], -1, 'u', 'u']]
Old param cache: [[[], [], 'u', None, [], -1, 'u']]
[[9, 10], [-1], 24, None, [], -1, 'u', 'u']

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
root(uint256)
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
Propogating All
c_2
Ssa_name: c_2, name: c

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Propogating All
Propogating All
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_38', 'XY_1'])
Phi
[i]Type for a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_49 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_49(bool) = a_1 > 3
lnorm: 24 rnorm: 0
[i]Type for TMP_49

Name: TMP_49 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_56 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_56(bool) = a_1 != 0
[i]Type for TMP_56

Name: TMP_56 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_4, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: c, Num: 4
Globalname: c, contract_name: VaderMath
End popogation
c_4(uint256) := 1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: c_1, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 1
Globalname: c, contract_name: VaderMath
End popogation
c_1(uint256) := a_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_50 cleared
[i] TMP_51 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: VaderMath
End popogation
TMP_50(uint256) = a_1 (c)/ 2
lnorm: 24 rnorm: 0
Source address: u
lnorm: 24 rnorm: 0
10
9
-1
[i]Type for TMP_50

Name: TMP_50 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_51(uint256) = TMP_50 (c)+ 1
Source address: u
[i]Type for TMP_51

Name: TMP_51 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_51(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
[i] x cleared
[i] TMP_52 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
End popogation
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
c_2(uint256) := ϕ(['c_1', 'c_3'])
Phi

Name: c Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for c

Name: c Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
x_2(uint256) := ϕ(['x_3', 'x_1'])
Phi

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_52(bool) = x_2 < c_2
lnorm: 0 rnorm: 24
[i]Type for TMP_52

Name: TMP_52 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: c_3, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: c, Num: 3
Globalname: c, contract_name: VaderMath
End popogation
c_3(uint256) := x_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] TMP_53 cleared
[i] TMP_54 cleared
[i] TMP_55 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: x_3, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 3
Globalname: x, contract_name: VaderMath
End popogation
TMP_53(uint256) = a_1 (c)/ x_2
lnorm: 24 rnorm: 0
Source address: u
Source address: u
lnorm: 24 rnorm: 0
Source address: u
9
-1
[i]Type for TMP_53

Name: TMP_53 Function: root
Num: 9
Den: -1
Address: u
Norm: 24
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_54(uint256) = TMP_53 (c)+ x_2
10
10
-1
lnorm: 24 rnorm: 0
Source address: u
[i]Type for TMP_54

Name: TMP_54 Function: root
Num: 10
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
TMP_55(uint256) = TMP_54 (c)/ 2
lnorm: 0 rnorm: 0
Source address: u
lnorm: 0 rnorm: 0
10
-1
[i]Type for TMP_55

Name: TMP_55 Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
x_3(uint256) := TMP_55(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_38', 'XY_1'])
Phi
[i]Type for a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_49 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_49(bool) = a_1 > 3
lnorm: 24 rnorm: 0
[i]Type for TMP_49

Name: TMP_49 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_56 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_56(bool) = a_1 != 0
[i]Type for TMP_56

Name: TMP_56 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_4, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: c, Num: 4
Globalname: c, contract_name: VaderMath
End popogation
c_4(uint256) := 1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: c_1, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 1
Globalname: c, contract_name: VaderMath
End popogation
c_1(uint256) := a_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_50 cleared
[i] TMP_51 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: VaderMath
End popogation
TMP_50(uint256) = a_1 (c)/ 2
lnorm: 24 rnorm: 0
Source address: u
lnorm: 24 rnorm: 0
10
9
-1
[i]Type for TMP_50

Name: TMP_50 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_51(uint256) = TMP_50 (c)+ 1
Source address: u
[i]Type for TMP_51

Name: TMP_51 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_51(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
[i] x cleared
[i] TMP_52 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
End popogation
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
c_2(uint256) := ϕ(['c_1', 'c_3'])
Phi

Name: c Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for c

Name: c Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
x_2(uint256) := ϕ(['x_3', 'x_1'])
Phi

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_52(bool) = x_2 < c_2
lnorm: 0 rnorm: 24
[i]Type for TMP_52

Name: TMP_52 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: c_3, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: c, Num: 3
Globalname: c, contract_name: VaderMath
End popogation
c_3(uint256) := x_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] TMP_53 cleared
[i] TMP_54 cleared
[i] TMP_55 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: x_3, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 3
Globalname: x, contract_name: VaderMath
End popogation
TMP_53(uint256) = a_1 (c)/ x_2
lnorm: 24 rnorm: 0
Source address: u
Source address: u
lnorm: 24 rnorm: 0
Source address: u
9
-1
[i]Type for TMP_53

Name: TMP_53 Function: root
Num: 9
Den: -1
Address: u
Norm: 24
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_54(uint256) = TMP_53 (c)+ x_2
10
10
-1
lnorm: 24 rnorm: 0
Source address: u
[i]Type for TMP_54

Name: TMP_54 Function: root
Num: 10
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
TMP_55(uint256) = TMP_54 (c)/ 2
lnorm: 0 rnorm: 0
Source address: u
lnorm: 0 rnorm: 0
10
-1
[i]Type for TMP_55

Name: TMP_55 Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
x_3(uint256) := TMP_55(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_36

Name: TMP_36 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_37(uint256) = reserveOut_1 (c)- y4_1
Source address: u
[i]Type for TMP_37

Name: TMP_37 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
TMP_38(uint256) = reserveIn_1 (c)* TMP_37
lnorm: 18 rnorm: 0
Source address: u
[i]Type for TMP_38

Name: TMP_38 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
TMP_39(uint256) = INTERNAL_CALL, VaderMath.root(uint256)(TMP_38)
New param cache [[[9], [-1], 18, None, [], -1, 'u', 4]]
Old param cache: [[[], [], 'u', None, [], -1, 'u']]
[[9], [-1], 18, None, [], -1, 'u', 4]

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
root(uint256)
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
Propogating All
c_2
Ssa_name: c_2, name: c

Name: c Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Propogating All
Propogating All
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_38', 'XY_1'])
Phi
[i]Type for a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
[i] TMP_49 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
End popogation
TMP_49(bool) = a_1 > 3
lnorm: 18 rnorm: 0
[i]Type for TMP_49

Name: TMP_49 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_56 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
End popogation
TMP_56(bool) = a_1 != 0
[i]Type for TMP_56

Name: TMP_56 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_4, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: c, Num: 4
Globalname: c, contract_name: VaderMath
End popogation
c_4(uint256) := 1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: c_1, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 1
Globalname: c, contract_name: VaderMath
End popogation
c_1(uint256) := a_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_50 cleared
[i] TMP_51 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: VaderMath
End popogation
TMP_50(uint256) = a_1 (c)/ 2
lnorm: 18 rnorm: 0
Source address: u
lnorm: 18 rnorm: 0
9
-1
[i]Type for TMP_50

Name: TMP_50 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_51(uint256) = TMP_50 (c)+ 1
Source address: u
[i]Type for TMP_51

Name: TMP_51 Function: root
Num: 9
Den: -1
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_51(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
[i] x cleared
[i] TMP_52 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
End popogation
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
c_2(uint256) := ϕ(['c_1', 'c_3'])
Phi

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for c

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
x_2(uint256) := ϕ(['x_3', 'x_1'])
Phi

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_52(bool) = x_2 < c_2
lnorm: 0 rnorm: 18
10
10
-1
[i]Type for TMP_52

Name: TMP_52 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: c_3, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: c, Num: 3
Globalname: c, contract_name: VaderMath
End popogation
c_3(uint256) := x_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] TMP_53 cleared
[i] TMP_54 cleared
[i] TMP_55 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: x_3, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 3
Globalname: x, contract_name: VaderMath
End popogation
TMP_53(uint256) = a_1 (c)/ x_2
lnorm: 18 rnorm: 0
Source address: u
Source address: u
lnorm: 18 rnorm: 0
Source address: u
9
10
[i]Type for TMP_53

Name: TMP_53 Function: root
Num: 9
Den: 10
Address: u
Norm: 18
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_54(uint256) = TMP_53 (c)+ x_2
10
10
-1
[i]Type for TMP_54

Name: TMP_54 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_55(uint256) = TMP_54 (c)/ 2
lnorm: u rnorm: 0
lnorm: u rnorm: 0
[i]Type for TMP_55

Name: TMP_55 Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
x_3(uint256) := TMP_55(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_38', 'XY_1'])
Phi
[i]Type for a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
[i] TMP_49 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
End popogation
TMP_49(bool) = a_1 > 3
lnorm: 18 rnorm: 0
[i]Type for TMP_49

Name: TMP_49 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_56 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
End popogation
TMP_56(bool) = a_1 != 0
[i]Type for TMP_56

Name: TMP_56 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_4, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: c, Num: 4
Globalname: c, contract_name: VaderMath
End popogation
c_4(uint256) := 1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: c_1, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 1
Globalname: c, contract_name: VaderMath
End popogation
c_1(uint256) := a_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_50 cleared
[i] TMP_51 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: VaderMath
End popogation
TMP_50(uint256) = a_1 (c)/ 2
lnorm: 18 rnorm: 0
Source address: u
lnorm: 18 rnorm: 0
9
-1
[i]Type for TMP_50

Name: TMP_50 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_51(uint256) = TMP_50 (c)+ 1
Source address: u
[i]Type for TMP_51

Name: TMP_51 Function: root
Num: 9
Den: -1
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_51(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
[i] x cleared
[i] TMP_52 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
End popogation
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
c_2(uint256) := ϕ(['c_1', 'c_3'])
Phi

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for c

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
x_2(uint256) := ϕ(['x_3', 'x_1'])
Phi

Name: x Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
TMP_52(bool) = x_2 < c_2
lnorm: 0 rnorm: 18
9
-1
[i]Type for TMP_52

Name: TMP_52 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: c_3, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: c, Num: 3
Globalname: c, contract_name: VaderMath
End popogation
c_3(uint256) := x_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
[i] TMP_53 cleared
[i] TMP_54 cleared
[i] TMP_55 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: x_3, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 3
Globalname: x, contract_name: VaderMath
End popogation
TMP_53(uint256) = a_1 (c)/ x_2
lnorm: 18 rnorm: 0
Source address: u
Source address: u
lnorm: 18 rnorm: 0
Source address: u
Source address: u
[i]Type for TMP_53

Name: TMP_53 Function: root
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
TMP_54(uint256) = TMP_53 (c)+ x_2
Source address: u
[i]Type for TMP_54

Name: TMP_54 Function: root
Num: 9
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
TMP_55(uint256) = TMP_54 (c)/ 2
lnorm: 0 rnorm: 0
Source address: u
lnorm: 0 rnorm: 0
9
-1
[i]Type for TMP_55

Name: TMP_55 Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
x_3(uint256) := TMP_55(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_39

Name: TMP_39 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_40(uint256) = TMP_36 (c)* TMP_39
lnorm: u rnorm: u
[i]Type for TMP_40

Name: TMP_40 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
numeratorA_1(uint256) := TMP_40(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for numeratorA

Name: numeratorA Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_41 cleared
[i] numeratorB cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: numeratorB_1, name: numeratorB

Name: numeratorB Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: numeratorB, Num: 1
Globalname: numeratorB, contract_name: VaderMath
End popogation
TMP_41(uint256) = y2_1 (c)* reserveIn_1
lnorm: 0 rnorm: 18
Source address: u
[i]Type for TMP_41

Name: TMP_41 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
numeratorB_1(uint256) := TMP_41(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for numeratorB

Name: numeratorB Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] numeratorC cleared
Propogating parameters and globals to SSA variables...
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: numeratorC_1, name: numeratorC

Name: numeratorC Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numeratorC, Num: 1
Globalname: numeratorC, contract_name: VaderMath
End popogation
numeratorC_1(uint256) := XY_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for numeratorC

Name: numeratorC Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_42 cleared
[i] TMP_43 cleared
[i] numerator cleared
Propogating parameters and globals to SSA variables...
Ssa_name: numeratorC_1, name: numeratorC

Name: numeratorC Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: numeratorB_1, name: numeratorB

Name: numeratorB Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: numeratorA_1, name: numeratorA

Name: numeratorA Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numeratorA, Num: 1
Globalname: numeratorA, contract_name: VaderMath
Ssa_name: numeratorC_1, name: numeratorC

Name: numeratorC Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: numeratorB_1, name: numeratorB

Name: numeratorB Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: numeratorA_1, name: numeratorA

Name: numeratorA Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numeratorA, Num: 1
Globalname: numeratorA, contract_name: VaderMath
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numerator, Num: 1
Globalname: numerator, contract_name: VaderMath
End popogation
TMP_42(uint256) = numeratorC_1 (c)- numeratorA_1
Source address: u
[i]Type for TMP_42

Name: TMP_42 Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_43(uint256) = TMP_42 (c)- numeratorB_1
[i]Type for TMP_43

Name: TMP_43 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
numerator_1(uint256) := TMP_43(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for numerator

Name: numerator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] denominator cleared
Propogating parameters and globals to SSA variables...
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: denominator, Num: 1
Globalname: denominator, contract_name: VaderMath
End popogation
denominator_1(uint256) := y2_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for denominator

Name: denominator Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] TMP_44 cleared
[i] amountIn cleared
Propogating parameters and globals to SSA variables...
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numerator, Num: 1
Globalname: numerator, contract_name: VaderMath
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numerator, Num: 1
Globalname: numerator, contract_name: VaderMath
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: amountIn, Num: 1
Globalname: amountIn, contract_name: VaderMath
End popogation
TMP_44(uint256) = numerator_1 (c)/ denominator_1
lnorm: u rnorm: 0
lnorm: u rnorm: 0
[i]Type for TMP_44

Name: TMP_44 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
amountIn_1(uint256) := TMP_44(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for amountIn

Name: amountIn Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
End popogation
RETURN amountIn_1
RETURN

Name: amountIn Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_31 cleared
[i] XY cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: XY, Num: 1
Globalname: XY, contract_name: VaderMath
End popogation
TMP_31(uint256) = reserveIn_1 (c)* reserveOut_1
lnorm: 18 rnorm: 6
Source address: u
Source address: u
Source address: u
[i]Type for TMP_31

Name: TMP_31 Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
XY_1(uint256) := TMP_31(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for XY

Name: XY Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_32 cleared
[i] y2 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountOut_1, name: amountOut

Name: amountOut_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountOut_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountOut, Num: 1
Globalname: amountOut, contract_name: VaderMath
Ssa_name: amountOut_1, name: amountOut

Name: amountOut_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountOut_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountOut, Num: 1
Globalname: amountOut, contract_name: VaderMath
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: y2, Num: 1
Globalname: y2, contract_name: VaderMath
End popogation
TMP_32(uint256) = amountOut_1 (c)* 2
lnorm: u rnorm: 0
Source address: u
[i]Type for TMP_32

Name: TMP_32 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
y2_1(uint256) := TMP_32(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] TMP_33 cleared
[i] y4 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: y4, Num: 1
Globalname: y4, contract_name: VaderMath
End popogation
TMP_33(uint256) = y2_1 (c)* 2
lnorm: 0 rnorm: 0
Source address: u
[i]Type for TMP_33

Name: TMP_33 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
y4_1(uint256) := TMP_33(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
[i] TMP_34 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
End popogation
TMP_34(bool) = y4_1 < reserveOut_1
lnorm: 0 rnorm: 6
[i]Type for TMP_34

Name: TMP_34 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_35(None) = SOLIDITY_CALL require(bool,string)(TMP_34,VaderMath::calculateSwapReverse: Desired Output Exceeds Maximum Output Possible (1/4 of Liquidity Pool))
[i]Type for TMP_35

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_36 cleared
[i] TMP_37 cleared
[i] TMP_38 cleared
[i] TMP_39 cleared
[i] TMP_40 cleared
[i] numeratorA cleared
Propogating parameters and globals to SSA variables...
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: numeratorA_1, name: numeratorA

Name: numeratorA Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numeratorA, Num: 1
Globalname: numeratorA, contract_name: VaderMath
End popogation
TMP_36(uint256) = INTERNAL_CALL, VaderMath.root(uint256)(XY_1)
New param cache [[[9, 10], [-1], 24, None, [], -1, 'u', 'u']]
Old param cache: [[[], [], 'u', None, [], -1, 'u']]
[[9, 10], [-1], 24, None, [], -1, 'u', 'u']

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
root(uint256)
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
Propogating All
c_2
Ssa_name: c_2, name: c

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Propogating All
Propogating All
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_38', 'XY_1'])
Phi
[i]Type for a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_49 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_49(bool) = a_1 > 3
lnorm: 24 rnorm: 0
[i]Type for TMP_49

Name: TMP_49 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_56 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_56(bool) = a_1 != 0
[i]Type for TMP_56

Name: TMP_56 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_4, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: c, Num: 4
Globalname: c, contract_name: VaderMath
End popogation
c_4(uint256) := 1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: c_1, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 1
Globalname: c, contract_name: VaderMath
End popogation
c_1(uint256) := a_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_50 cleared
[i] TMP_51 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: VaderMath
End popogation
TMP_50(uint256) = a_1 (c)/ 2
lnorm: 24 rnorm: 0
Source address: u
lnorm: 24 rnorm: 0
10
9
-1
[i]Type for TMP_50

Name: TMP_50 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_51(uint256) = TMP_50 (c)+ 1
Source address: u
[i]Type for TMP_51

Name: TMP_51 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_51(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
[i] x cleared
[i] TMP_52 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
End popogation
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
c_2(uint256) := ϕ(['c_1', 'c_3'])
Phi

Name: c Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for c

Name: c Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
x_2(uint256) := ϕ(['x_3', 'x_1'])
Phi

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_52(bool) = x_2 < c_2
lnorm: 0 rnorm: 24
[i]Type for TMP_52

Name: TMP_52 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: c_3, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: c, Num: 3
Globalname: c, contract_name: VaderMath
End popogation
c_3(uint256) := x_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] TMP_53 cleared
[i] TMP_54 cleared
[i] TMP_55 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: x_3, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 3
Globalname: x, contract_name: VaderMath
End popogation
TMP_53(uint256) = a_1 (c)/ x_2
lnorm: 24 rnorm: 0
Source address: u
Source address: u
lnorm: 24 rnorm: 0
Source address: u
10
-1
[i]Type for TMP_53

Name: TMP_53 Function: root
Num: 10
Den: -1
Address: u
Norm: 24
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_54(uint256) = TMP_53 (c)+ x_2
9
[i]Type for TMP_54

Name: TMP_54 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_55(uint256) = TMP_54 (c)/ 2
lnorm: u rnorm: 0
lnorm: u rnorm: 0
[i]Type for TMP_55

Name: TMP_55 Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
x_3(uint256) := TMP_55(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_38', 'XY_1'])
Phi
[i]Type for a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_49 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_49(bool) = a_1 > 3
lnorm: 24 rnorm: 0
[i]Type for TMP_49

Name: TMP_49 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_56 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_56(bool) = a_1 != 0
[i]Type for TMP_56

Name: TMP_56 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_4, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: c, Num: 4
Globalname: c, contract_name: VaderMath
End popogation
c_4(uint256) := 1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: c_1, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 1
Globalname: c, contract_name: VaderMath
End popogation
c_1(uint256) := a_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_50 cleared
[i] TMP_51 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: VaderMath
End popogation
TMP_50(uint256) = a_1 (c)/ 2
lnorm: 24 rnorm: 0
Source address: u
lnorm: 24 rnorm: 0
10
9
-1
[i]Type for TMP_50

Name: TMP_50 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_51(uint256) = TMP_50 (c)+ 1
Source address: u
[i]Type for TMP_51

Name: TMP_51 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_51(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
[i] x cleared
[i] TMP_52 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
End popogation
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
c_2(uint256) := ϕ(['c_1', 'c_3'])
Phi

Name: c Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for c

Name: c Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
x_2(uint256) := ϕ(['x_3', 'x_1'])
Phi

Name: x Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for x

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
TMP_52(bool) = x_2 < c_2
lnorm: 0 rnorm: 24
10
9
-1
[i]Type for TMP_52

Name: TMP_52 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: c_3, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: c, Num: 3
Globalname: c, contract_name: VaderMath
End popogation
c_3(uint256) := x_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
[i] TMP_53 cleared
[i] TMP_54 cleared
[i] TMP_55 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: x_3, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 3
Globalname: x, contract_name: VaderMath
End popogation
TMP_53(uint256) = a_1 (c)/ x_2
lnorm: 24 rnorm: 0
Source address: u
Source address: u
lnorm: 24 rnorm: 0
Source address: u
Source address: u
[i]Type for TMP_53

Name: TMP_53 Function: root
Num: -1
Den: -1
Address: u
Norm: 24
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
TMP_54(uint256) = TMP_53 (c)+ x_2
Source address: u
[i]Type for TMP_54

Name: TMP_54 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
XXXX
TMP_55(uint256) = TMP_54 (c)/ 2
lnorm: 0 rnorm: 0
Source address: u
lnorm: 0 rnorm: 0
10
9
-1
[i]Type for TMP_55

Name: TMP_55 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
x_3(uint256) := TMP_55(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_36

Name: TMP_36 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_37(uint256) = reserveOut_1 (c)- y4_1
Source address: u
[i]Type for TMP_37

Name: TMP_37 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
TMP_38(uint256) = reserveIn_1 (c)* TMP_37
lnorm: 18 rnorm: 0
Source address: u
[i]Type for TMP_38

Name: TMP_38 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
TMP_39(uint256) = INTERNAL_CALL, VaderMath.root(uint256)(TMP_38)
New param cache [[[9], [-1], 18, None, [], -1, 'u', 4]]
Old param cache: [[[], [], 'u', None, [], -1, 'u']]
[[9], [-1], 18, None, [], -1, 'u', 4]

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
root(uint256)
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
Propogating All
c_2
Ssa_name: c_2, name: c

Name: c Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Propogating All
Propogating All
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_38', 'XY_1'])
Phi
[i]Type for a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
[i] TMP_49 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
End popogation
TMP_49(bool) = a_1 > 3
lnorm: 18 rnorm: 0
[i]Type for TMP_49

Name: TMP_49 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_56 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
End popogation
TMP_56(bool) = a_1 != 0
[i]Type for TMP_56

Name: TMP_56 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_4, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: c, Num: 4
Globalname: c, contract_name: VaderMath
End popogation
c_4(uint256) := 1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: c_1, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 1
Globalname: c, contract_name: VaderMath
End popogation
c_1(uint256) := a_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_50 cleared
[i] TMP_51 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: VaderMath
End popogation
TMP_50(uint256) = a_1 (c)/ 2
lnorm: 18 rnorm: 0
Source address: u
lnorm: 18 rnorm: 0
9
-1
[i]Type for TMP_50

Name: TMP_50 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_51(uint256) = TMP_50 (c)+ 1
Source address: u
[i]Type for TMP_51

Name: TMP_51 Function: root
Num: 9
Den: -1
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_51(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
[i] x cleared
[i] TMP_52 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
End popogation
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
c_2(uint256) := ϕ(['c_1', 'c_3'])
Phi

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef

Name: c Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for c

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
x_2(uint256) := ϕ(['x_3', 'x_1'])
Phi

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for x

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
TMP_52(bool) = x_2 < c_2
lnorm: 0 rnorm: 18
[i]Type for TMP_52

Name: TMP_52 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: c_3, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: c, Num: 3
Globalname: c, contract_name: VaderMath
End popogation
c_3(uint256) := x_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
[i] TMP_53 cleared
[i] TMP_54 cleared
[i] TMP_55 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: x_3, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 3
Globalname: x, contract_name: VaderMath
End popogation
TMP_53(uint256) = a_1 (c)/ x_2
lnorm: 18 rnorm: 0
Source address: u
Source address: u
lnorm: 18 rnorm: 0
Source address: u
-1
10
[i]Type for TMP_53

Name: TMP_53 Function: root
Num: -1
Den: 10
Address: u
Norm: 18
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
TMP_54(uint256) = TMP_53 (c)+ x_2
[i]Type for TMP_54

Name: TMP_54 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_55(uint256) = TMP_54 (c)/ 2
lnorm: u rnorm: 0
lnorm: u rnorm: 0
[i]Type for TMP_55

Name: TMP_55 Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
x_3(uint256) := TMP_55(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_38', 'XY_1'])
Phi
[i]Type for a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
[i] TMP_49 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
End popogation
TMP_49(bool) = a_1 > 3
lnorm: 18 rnorm: 0
[i]Type for TMP_49

Name: TMP_49 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_56 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
End popogation
TMP_56(bool) = a_1 != 0
[i]Type for TMP_56

Name: TMP_56 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_4, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: c, Num: 4
Globalname: c, contract_name: VaderMath
End popogation
c_4(uint256) := 1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: c_1, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 1
Globalname: c, contract_name: VaderMath
End popogation
c_1(uint256) := a_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_50 cleared
[i] TMP_51 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: VaderMath
End popogation
TMP_50(uint256) = a_1 (c)/ 2
lnorm: 18 rnorm: 0
Source address: u
lnorm: 18 rnorm: 0
9
-1
[i]Type for TMP_50

Name: TMP_50 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_51(uint256) = TMP_50 (c)+ 1
Source address: u
[i]Type for TMP_51

Name: TMP_51 Function: root
Num: 9
Den: -1
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_51(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
[i] x cleared
[i] TMP_52 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
End popogation
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
c_2(uint256) := ϕ(['c_1', 'c_3'])
Phi

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef

Name: c Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for c

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
x_2(uint256) := ϕ(['x_3', 'x_1'])
Phi

Name: x Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
TMP_52(bool) = x_2 < c_2
lnorm: 0 rnorm: 18
9
-1
[i]Type for TMP_52

Name: TMP_52 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: c_3, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: c, Num: 3
Globalname: c, contract_name: VaderMath
End popogation
c_3(uint256) := x_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
[i] TMP_53 cleared
[i] TMP_54 cleared
[i] TMP_55 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: x_3, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 3
Globalname: x, contract_name: VaderMath
End popogation
TMP_53(uint256) = a_1 (c)/ x_2
lnorm: 18 rnorm: 0
Source address: u
Source address: u
lnorm: 18 rnorm: 0
Source address: u
Source address: u
[i]Type for TMP_53

Name: TMP_53 Function: root
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
TMP_54(uint256) = TMP_53 (c)+ x_2
Source address: u
[i]Type for TMP_54

Name: TMP_54 Function: root
Num: 9
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
TMP_55(uint256) = TMP_54 (c)/ 2
lnorm: 0 rnorm: 0
Source address: u
lnorm: 0 rnorm: 0
9
-1
[i]Type for TMP_55

Name: TMP_55 Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
x_3(uint256) := TMP_55(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_39

Name: TMP_39 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_40(uint256) = TMP_36 (c)* TMP_39
lnorm: u rnorm: u
[i]Type for TMP_40

Name: TMP_40 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
numeratorA_1(uint256) := TMP_40(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for numeratorA

Name: numeratorA Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_41 cleared
[i] numeratorB cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: numeratorB_1, name: numeratorB

Name: numeratorB Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: numeratorB, Num: 1
Globalname: numeratorB, contract_name: VaderMath
End popogation
TMP_41(uint256) = y2_1 (c)* reserveIn_1
lnorm: 0 rnorm: 18
Source address: u
[i]Type for TMP_41

Name: TMP_41 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
numeratorB_1(uint256) := TMP_41(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for numeratorB

Name: numeratorB Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] numeratorC cleared
Propogating parameters and globals to SSA variables...
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: numeratorC_1, name: numeratorC

Name: numeratorC Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numeratorC, Num: 1
Globalname: numeratorC, contract_name: VaderMath
End popogation
numeratorC_1(uint256) := XY_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for numeratorC

Name: numeratorC Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_42 cleared
[i] TMP_43 cleared
[i] numerator cleared
Propogating parameters and globals to SSA variables...
Ssa_name: numeratorC_1, name: numeratorC

Name: numeratorC Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: numeratorB_1, name: numeratorB

Name: numeratorB Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: numeratorA_1, name: numeratorA

Name: numeratorA Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numeratorA, Num: 1
Globalname: numeratorA, contract_name: VaderMath
Ssa_name: numeratorC_1, name: numeratorC

Name: numeratorC Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: numeratorB_1, name: numeratorB

Name: numeratorB Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: numeratorA_1, name: numeratorA

Name: numeratorA Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numeratorA, Num: 1
Globalname: numeratorA, contract_name: VaderMath
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numerator, Num: 1
Globalname: numerator, contract_name: VaderMath
End popogation
TMP_42(uint256) = numeratorC_1 (c)- numeratorA_1
Source address: u
[i]Type for TMP_42

Name: TMP_42 Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_43(uint256) = TMP_42 (c)- numeratorB_1
[i]Type for TMP_43

Name: TMP_43 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
numerator_1(uint256) := TMP_43(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for numerator

Name: numerator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] denominator cleared
Propogating parameters and globals to SSA variables...
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: denominator, Num: 1
Globalname: denominator, contract_name: VaderMath
End popogation
denominator_1(uint256) := y2_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for denominator

Name: denominator Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] TMP_44 cleared
[i] amountIn cleared
Propogating parameters and globals to SSA variables...
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numerator, Num: 1
Globalname: numerator, contract_name: VaderMath
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numerator, Num: 1
Globalname: numerator, contract_name: VaderMath
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: amountIn, Num: 1
Globalname: amountIn, contract_name: VaderMath
End popogation
TMP_44(uint256) = numerator_1 (c)/ denominator_1
lnorm: u rnorm: 0
lnorm: u rnorm: 0
[i]Type for TMP_44

Name: TMP_44 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
amountIn_1(uint256) := TMP_44(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for amountIn

Name: amountIn Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
End popogation
RETURN amountIn_1
RETURN

Name: amountIn Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Source address: u
Source address: u
[i]Type for TMP_93

Name: TMP_93 Function: calculateInGivenOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_94(uint256) = LIBRARY_CALL, dest:VaderMath, function:VaderMath.calculateSwapReverse(uint256,uint256,uint256), arguments:['TMP_93', 'foreignReserve0_1', 'nativeReserve0_1'] 
Found: calculateSwapReverse

Name: TMP_93 Function: calculateInGivenOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef

Name: foreignReserve0 Function: calculateInGivenOut
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: nativeReserve0 Function: calculateInGivenOut
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
High level cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [10]
    den: [-1]
    norm: 6
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [9]
    den: [-1]
    norm: 18
    link: None
    fields: []
    fintype: -1
New param cache [[[-1], [-1], 0, None, [], -1, 'u', 2], [[10], [-1], 6, None, [], -1, 'u', "'u'"], [[9], [-1], 18, None, [], -1, 'u', "'u'"]]
Old param cache: [[[-1], [-1], 'u', None, [], -1, 'u'], [[-1], [-1], 'u', None, [], -1, 'u'], [[-1], [-1], 'u', None, [], -1, 'u']]
[[-1], [-1], 0, None, [], -1, 'u', 2]

Name: amountOut Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
[[10], [-1], 6, None, [], -1, 'u', "'u'"]

Name: reserveIn Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
[[9], [-1], 18, None, [], -1, 'u', "'u'"]

Name: reserveOut Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
calculateSwapReverse(uint256,uint256,uint256)
Propogating All
Propogating All
reserveOut_1
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: reserveOut_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
reserveIn_1
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: reserveIn_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
Propogating All
amountOut_1
Ssa_name: amountOut_1, name: amountOut

Name: amountOut_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountOut_1 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Copied ftype
Propogating All
y2_1
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Propogating All
reserveOut_1
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: reserveOut_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
y4_1
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Propogating All
y4_1
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
reserveOut_1
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: reserveOut_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
reserveIn_1
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: reserveIn_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
XY_1
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
reserveIn_1
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: reserveIn_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
y2_1
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Propogating All
XY_1
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
numeratorC_1
Ssa_name: numeratorC_1, name: numeratorC

Name: numeratorC Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
numeratorB_1
Ssa_name: numeratorB_1, name: numeratorB

Name: numeratorB Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 2
Fields: 
Finance Type: undef
numeratorA_1
Ssa_name: numeratorA_1, name: numeratorA

Name: numeratorA Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
y2_1
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Propogating All
numerator_1
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
denominator_1
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Propogating All
amountIn_1
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_31 cleared
[i] XY cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: XY, Num: 1
Globalname: XY, contract_name: VaderMath
End popogation
TMP_31(uint256) = reserveIn_1 (c)* reserveOut_1
lnorm: 6 rnorm: 18
Source address: u
Source address: u
Source address: u
[i]Type for TMP_31

Name: TMP_31 Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
XY_1(uint256) := TMP_31(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for XY

Name: XY Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_32 cleared
[i] y2 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountOut_1, name: amountOut

Name: amountOut_1 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: amountOut_1, name: amountOut

Name: amountOut_1 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: y2, Num: 1
Globalname: y2, contract_name: VaderMath
End popogation
TMP_32(uint256) = amountOut_1 (c)* 2
lnorm: 0 rnorm: 0
Source address: u
[i]Type for TMP_32

Name: TMP_32 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
y2_1(uint256) := TMP_32(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
[i] TMP_33 cleared
[i] y4 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: y4, Num: 1
Globalname: y4, contract_name: VaderMath
End popogation
TMP_33(uint256) = y2_1 (c)* 2
lnorm: 0 rnorm: 0
Source address: u
[i]Type for TMP_33

Name: TMP_33 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 8
Fields: 
Finance Type: undef
XXXX
y4_1(uint256) := TMP_33(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 8
Fields: 
Finance Type: undef
XXXX
[i] TMP_34 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 8
Fields: 
Finance Type: undef
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 8
Fields: 
Finance Type: undef
End popogation
TMP_34(bool) = y4_1 < reserveOut_1
lnorm: 0 rnorm: 18
[i]Type for TMP_34

Name: TMP_34 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_35(None) = SOLIDITY_CALL require(bool,string)(TMP_34,VaderMath::calculateSwapReverse: Desired Output Exceeds Maximum Output Possible (1/4 of Liquidity Pool))
[i]Type for TMP_35

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_36 cleared
[i] TMP_37 cleared
[i] TMP_38 cleared
[i] TMP_39 cleared
[i] TMP_40 cleared
[i] numeratorA cleared
Propogating parameters and globals to SSA variables...
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 8
Fields: 
Finance Type: undef
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 8
Fields: 
Finance Type: undef
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: numeratorA_1, name: numeratorA

Name: numeratorA Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numeratorA, Num: 1
Globalname: numeratorA, contract_name: VaderMath
End popogation
TMP_36(uint256) = INTERNAL_CALL, VaderMath.root(uint256)(XY_1)
New param cache [[[10, 9], [-1], 24, None, [], -1, 'u', 'u']]
Old param cache: [[[], [], 'u', None, [], -1, 'u']]
[[10, 9], [-1], 24, None, [], -1, 'u', 'u']

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
root(uint256)
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
Propogating All
c_2
Ssa_name: c_2, name: c

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Propogating All
Propogating All
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_38', 'XY_1'])
Phi
[i]Type for a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_49 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_49(bool) = a_1 > 3
lnorm: 24 rnorm: 0
[i]Type for TMP_49

Name: TMP_49 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_56 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_56(bool) = a_1 != 0
[i]Type for TMP_56

Name: TMP_56 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_4, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: c, Num: 4
Globalname: c, contract_name: VaderMath
End popogation
c_4(uint256) := 1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: c_1, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 1
Globalname: c, contract_name: VaderMath
End popogation
c_1(uint256) := a_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_50 cleared
[i] TMP_51 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: VaderMath
End popogation
TMP_50(uint256) = a_1 (c)/ 2
lnorm: 24 rnorm: 0
Source address: u
lnorm: 24 rnorm: 0
10
9
-1
[i]Type for TMP_50

Name: TMP_50 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_51(uint256) = TMP_50 (c)+ 1
Source address: u
[i]Type for TMP_51

Name: TMP_51 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_51(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
[i] x cleared
[i] TMP_52 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
End popogation
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
c_2(uint256) := ϕ(['c_1', 'c_3'])
Phi

Name: c Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for c

Name: c Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
x_2(uint256) := ϕ(['x_3', 'x_1'])
Phi

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_52(bool) = x_2 < c_2
lnorm: 0 rnorm: 24
[i]Type for TMP_52

Name: TMP_52 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: c_3, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: c, Num: 3
Globalname: c, contract_name: VaderMath
End popogation
c_3(uint256) := x_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] TMP_53 cleared
[i] TMP_54 cleared
[i] TMP_55 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: x_3, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 3
Globalname: x, contract_name: VaderMath
End popogation
TMP_53(uint256) = a_1 (c)/ x_2
lnorm: 24 rnorm: 0
Source address: u
Source address: u
lnorm: 24 rnorm: 0
Source address: u
10
-1
[i]Type for TMP_53

Name: TMP_53 Function: root
Num: 10
Den: -1
Address: u
Norm: 24
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_54(uint256) = TMP_53 (c)+ x_2
9
[i]Type for TMP_54

Name: TMP_54 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_55(uint256) = TMP_54 (c)/ 2
lnorm: u rnorm: 0
lnorm: u rnorm: 0
[i]Type for TMP_55

Name: TMP_55 Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
x_3(uint256) := TMP_55(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_38', 'XY_1'])
Phi
[i]Type for a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_49 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_49(bool) = a_1 > 3
lnorm: 24 rnorm: 0
[i]Type for TMP_49

Name: TMP_49 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_56 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_56(bool) = a_1 != 0
[i]Type for TMP_56

Name: TMP_56 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_4, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: c, Num: 4
Globalname: c, contract_name: VaderMath
End popogation
c_4(uint256) := 1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: c_1, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 1
Globalname: c, contract_name: VaderMath
End popogation
c_1(uint256) := a_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_50 cleared
[i] TMP_51 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: VaderMath
End popogation
TMP_50(uint256) = a_1 (c)/ 2
lnorm: 24 rnorm: 0
Source address: u
lnorm: 24 rnorm: 0
10
9
-1
[i]Type for TMP_50

Name: TMP_50 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_51(uint256) = TMP_50 (c)+ 1
Source address: u
[i]Type for TMP_51

Name: TMP_51 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_51(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
[i] x cleared
[i] TMP_52 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
End popogation
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
c_2(uint256) := ϕ(['c_1', 'c_3'])
Phi

Name: c Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for c

Name: c Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
x_2(uint256) := ϕ(['x_3', 'x_1'])
Phi

Name: x Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for x

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
TMP_52(bool) = x_2 < c_2
lnorm: 0 rnorm: 24
10
9
-1
[i]Type for TMP_52

Name: TMP_52 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: c_3, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: c, Num: 3
Globalname: c, contract_name: VaderMath
End popogation
c_3(uint256) := x_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
[i] TMP_53 cleared
[i] TMP_54 cleared
[i] TMP_55 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: x_3, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 3
Globalname: x, contract_name: VaderMath
End popogation
TMP_53(uint256) = a_1 (c)/ x_2
lnorm: 24 rnorm: 0
Source address: u
Source address: u
lnorm: 24 rnorm: 0
Source address: u
Source address: u
[i]Type for TMP_53

Name: TMP_53 Function: root
Num: -1
Den: -1
Address: u
Norm: 24
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
TMP_54(uint256) = TMP_53 (c)+ x_2
Source address: u
[i]Type for TMP_54

Name: TMP_54 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
XXXX
TMP_55(uint256) = TMP_54 (c)/ 2
lnorm: 0 rnorm: 0
Source address: u
lnorm: 0 rnorm: 0
10
9
-1
[i]Type for TMP_55

Name: TMP_55 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
x_3(uint256) := TMP_55(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_36

Name: TMP_36 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_37(uint256) = reserveOut_1 (c)- y4_1
Source address: u
[i]Type for TMP_37

Name: TMP_37 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: undef
XXXX
TMP_38(uint256) = reserveIn_1 (c)* TMP_37
lnorm: 6 rnorm: 0
Source address: u
[i]Type for TMP_38

Name: TMP_38 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
XXXX
TMP_39(uint256) = INTERNAL_CALL, VaderMath.root(uint256)(TMP_38)
New param cache [[[10], [-1], 6, None, [], -1, 'u', 8]]
Old param cache: [[[], [], 'u', None, [], -1, 'u']]
[[10], [-1], 6, None, [], -1, 'u', 8]

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
root(uint256)
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Copied ftype
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
Propogating All
c_2
Ssa_name: c_2, name: c

Name: c Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Propogating All
Propogating All
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Copied ftype
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_38', 'XY_1'])
Phi
[i]Type for a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
XXXX
[i] TMP_49 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
End popogation
TMP_49(bool) = a_1 > 3
lnorm: 6 rnorm: 0
[i]Type for TMP_49

Name: TMP_49 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_56 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
End popogation
TMP_56(bool) = a_1 != 0
[i]Type for TMP_56

Name: TMP_56 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_4, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: c, Num: 4
Globalname: c, contract_name: VaderMath
End popogation
c_4(uint256) := 1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Ssa_name: c_1, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 1
Globalname: c, contract_name: VaderMath
End popogation
c_1(uint256) := a_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_50 cleared
[i] TMP_51 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: VaderMath
End popogation
TMP_50(uint256) = a_1 (c)/ 2
lnorm: 6 rnorm: 0
Source address: u
lnorm: 6 rnorm: 0
10
-1
[i]Type for TMP_50

Name: TMP_50 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
TMP_51(uint256) = TMP_50 (c)+ 1
Source address: u
[i]Type for TMP_51

Name: TMP_51 Function: root
Num: 10
Den: -1
Address: u
Norm: u
LF: None
Value: 5
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_51(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 5
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
[i] x cleared
[i] TMP_52 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
End popogation
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
c_2(uint256) := ϕ(['c_1', 'c_3'])
Phi

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef

Name: c Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for c

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
XXXX
x_2(uint256) := ϕ(['x_3', 'x_1'])
Phi

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 5
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for x

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
TMP_52(bool) = x_2 < c_2
lnorm: 0 rnorm: 6
[i]Type for TMP_52

Name: TMP_52 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: c_3, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: c, Num: 3
Globalname: c, contract_name: VaderMath
End popogation
c_3(uint256) := x_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
[i] TMP_53 cleared
[i] TMP_54 cleared
[i] TMP_55 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: x_3, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 3
Globalname: x, contract_name: VaderMath
End popogation
TMP_53(uint256) = a_1 (c)/ x_2
lnorm: 6 rnorm: 0
Source address: u
Source address: u
lnorm: 6 rnorm: 0
Source address: u
-1
9
[i]Type for TMP_53

Name: TMP_53 Function: root
Num: -1
Den: 9
Address: u
Norm: 6
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_54(uint256) = TMP_53 (c)+ x_2
[i]Type for TMP_54

Name: TMP_54 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_55(uint256) = TMP_54 (c)/ 2
lnorm: u rnorm: 0
lnorm: u rnorm: 0
[i]Type for TMP_55

Name: TMP_55 Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
x_3(uint256) := TMP_55(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_38', 'XY_1'])
Phi
[i]Type for a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
XXXX
[i] TMP_49 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
End popogation
TMP_49(bool) = a_1 > 3
lnorm: 6 rnorm: 0
[i]Type for TMP_49

Name: TMP_49 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_56 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
End popogation
TMP_56(bool) = a_1 != 0
[i]Type for TMP_56

Name: TMP_56 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_4, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: c, Num: 4
Globalname: c, contract_name: VaderMath
End popogation
c_4(uint256) := 1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Ssa_name: c_1, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: undef
Name: c, Num: 1
Globalname: c, contract_name: VaderMath
End popogation
c_1(uint256) := a_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_50 cleared
[i] TMP_51 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 5
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: VaderMath
End popogation
TMP_50(uint256) = a_1 (c)/ 2
lnorm: 6 rnorm: 0
Source address: u
lnorm: 6 rnorm: 0
10
-1
[i]Type for TMP_50

Name: TMP_50 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
TMP_51(uint256) = TMP_50 (c)+ 1
Source address: u
[i]Type for TMP_51

Name: TMP_51 Function: root
Num: 10
Den: -1
Address: u
Norm: u
LF: None
Value: 5
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_51(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 5
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
[i] x cleared
[i] TMP_52 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
End popogation
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
c_2(uint256) := ϕ(['c_1', 'c_3'])
Phi

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef

Name: c Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for c

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
XXXX
x_2(uint256) := ϕ(['x_3', 'x_1'])
Phi

Name: x Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 5
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 5
Fields: 
Finance Type: undef
XXXX
TMP_52(bool) = x_2 < c_2
lnorm: 0 rnorm: 6
10
-1
[i]Type for TMP_52

Name: TMP_52 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 5
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 5
Fields: 
Finance Type: undef
Ssa_name: c_3, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: c, Num: 3
Globalname: c, contract_name: VaderMath
End popogation
c_3(uint256) := x_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 5
Fields: 
Finance Type: undef
XXXX
[i] TMP_53 cleared
[i] TMP_54 cleared
[i] TMP_55 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 5
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 5
Fields: 
Finance Type: undef
Ssa_name: x_3, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 3
Globalname: x, contract_name: VaderMath
End popogation
TMP_53(uint256) = a_1 (c)/ x_2
lnorm: 6 rnorm: 0
Source address: u
Source address: u
lnorm: 6 rnorm: 0
Source address: u
Source address: u
[i]Type for TMP_53

Name: TMP_53 Function: root
Num: -1
Den: -1
Address: u
Norm: 6
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
TMP_54(uint256) = TMP_53 (c)+ x_2
Source address: u
[i]Type for TMP_54

Name: TMP_54 Function: root
Num: 10
Den: -1
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
XXXX
TMP_55(uint256) = TMP_54 (c)/ 2
lnorm: 0 rnorm: 0
Source address: u
lnorm: 0 rnorm: 0
10
-1
[i]Type for TMP_55

Name: TMP_55 Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
x_3(uint256) := TMP_55(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_39

Name: TMP_39 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_40(uint256) = TMP_36 (c)* TMP_39
lnorm: u rnorm: u
[i]Type for TMP_40

Name: TMP_40 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
numeratorA_1(uint256) := TMP_40(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for numeratorA

Name: numeratorA Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_41 cleared
[i] numeratorB cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: numeratorB_1, name: numeratorB

Name: numeratorB Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: numeratorB, Num: 1
Globalname: numeratorB, contract_name: VaderMath
End popogation
TMP_41(uint256) = y2_1 (c)* reserveIn_1
lnorm: 0 rnorm: 6
Source address: u
[i]Type for TMP_41

Name: TMP_41 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
numeratorB_1(uint256) := TMP_41(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for numeratorB

Name: numeratorB Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
[i] numeratorC cleared
Propogating parameters and globals to SSA variables...
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: numeratorC_1, name: numeratorC

Name: numeratorC Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numeratorC, Num: 1
Globalname: numeratorC, contract_name: VaderMath
End popogation
numeratorC_1(uint256) := XY_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for numeratorC

Name: numeratorC Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_42 cleared
[i] TMP_43 cleared
[i] numerator cleared
Propogating parameters and globals to SSA variables...
Ssa_name: numeratorC_1, name: numeratorC

Name: numeratorC Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: numeratorB_1, name: numeratorB

Name: numeratorB Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: numeratorA_1, name: numeratorA

Name: numeratorA Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numeratorA, Num: 1
Globalname: numeratorA, contract_name: VaderMath
Ssa_name: numeratorC_1, name: numeratorC

Name: numeratorC Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: numeratorB_1, name: numeratorB

Name: numeratorB Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: numeratorA_1, name: numeratorA

Name: numeratorA Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numeratorA, Num: 1
Globalname: numeratorA, contract_name: VaderMath
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numerator, Num: 1
Globalname: numerator, contract_name: VaderMath
End popogation
TMP_42(uint256) = numeratorC_1 (c)- numeratorA_1
Source address: u
[i]Type for TMP_42

Name: TMP_42 Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_43(uint256) = TMP_42 (c)- numeratorB_1
[i]Type for TMP_43

Name: TMP_43 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
numerator_1(uint256) := TMP_43(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for numerator

Name: numerator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] denominator cleared
Propogating parameters and globals to SSA variables...
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: denominator, Num: 1
Globalname: denominator, contract_name: VaderMath
End popogation
denominator_1(uint256) := y2_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for denominator

Name: denominator Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
[i] TMP_44 cleared
[i] amountIn cleared
Propogating parameters and globals to SSA variables...
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numerator, Num: 1
Globalname: numerator, contract_name: VaderMath
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numerator, Num: 1
Globalname: numerator, contract_name: VaderMath
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: amountIn, Num: 1
Globalname: amountIn, contract_name: VaderMath
End popogation
TMP_44(uint256) = numerator_1 (c)/ denominator_1
lnorm: u rnorm: 0
lnorm: u rnorm: 0
[i]Type for TMP_44

Name: TMP_44 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
amountIn_1(uint256) := TMP_44(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for amountIn

Name: amountIn Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
End popogation
RETURN amountIn_1
RETURN

Name: amountIn Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_31 cleared
[i] XY cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: XY, Num: 1
Globalname: XY, contract_name: VaderMath
End popogation
TMP_31(uint256) = reserveIn_1 (c)* reserveOut_1
lnorm: 6 rnorm: 18
Source address: u
Source address: u
Source address: u
[i]Type for TMP_31

Name: TMP_31 Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
XY_1(uint256) := TMP_31(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for XY

Name: XY Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_32 cleared
[i] y2 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountOut_1, name: amountOut

Name: amountOut_1 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: amountOut_1, name: amountOut

Name: amountOut_1 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: y2, Num: 1
Globalname: y2, contract_name: VaderMath
End popogation
TMP_32(uint256) = amountOut_1 (c)* 2
lnorm: 0 rnorm: 0
Source address: u
[i]Type for TMP_32

Name: TMP_32 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
y2_1(uint256) := TMP_32(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
[i] TMP_33 cleared
[i] y4 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: undef
Name: y4, Num: 1
Globalname: y4, contract_name: VaderMath
End popogation
TMP_33(uint256) = y2_1 (c)* 2
lnorm: 0 rnorm: 0
Source address: u
[i]Type for TMP_33

Name: TMP_33 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 8
Fields: 
Finance Type: undef
XXXX
y4_1(uint256) := TMP_33(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 8
Fields: 
Finance Type: undef
XXXX
[i] TMP_34 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 8
Fields: 
Finance Type: undef
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 8
Fields: 
Finance Type: undef
End popogation
TMP_34(bool) = y4_1 < reserveOut_1
lnorm: 0 rnorm: 18
[i]Type for TMP_34

Name: TMP_34 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_35(None) = SOLIDITY_CALL require(bool,string)(TMP_34,VaderMath::calculateSwapReverse: Desired Output Exceeds Maximum Output Possible (1/4 of Liquidity Pool))
[i]Type for TMP_35

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_36 cleared
[i] TMP_37 cleared
[i] TMP_38 cleared
[i] TMP_39 cleared
[i] TMP_40 cleared
[i] numeratorA cleared
Propogating parameters and globals to SSA variables...
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 8
Fields: 
Finance Type: undef
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 8
Fields: 
Finance Type: undef
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: numeratorA_1, name: numeratorA

Name: numeratorA Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numeratorA, Num: 1
Globalname: numeratorA, contract_name: VaderMath
End popogation
TMP_36(uint256) = INTERNAL_CALL, VaderMath.root(uint256)(XY_1)
New param cache [[[10, 9], [-1], 24, None, [], -1, 'u', 'u']]
Old param cache: [[[], [], 'u', None, [], -1, 'u']]
[[10, 9], [-1], 24, None, [], -1, 'u', 'u']

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
root(uint256)
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
Propogating All
c_2
Ssa_name: c_2, name: c

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 5
Fields: 
Finance Type: undef
Propogating All
Propogating All
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 5
Fields: 
Finance Type: undef
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 5
Fields: 
Finance Type: undef
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_38', 'XY_1'])
Phi
[i]Type for a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_49 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_49(bool) = a_1 > 3
lnorm: 24 rnorm: 0
[i]Type for TMP_49

Name: TMP_49 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_56 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_56(bool) = a_1 != 0
[i]Type for TMP_56

Name: TMP_56 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_4, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: c, Num: 4
Globalname: c, contract_name: VaderMath
End popogation
c_4(uint256) := 1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: c_1, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: undef
Name: c, Num: 1
Globalname: c, contract_name: VaderMath
End popogation
c_1(uint256) := a_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_50 cleared
[i] TMP_51 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 5
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: VaderMath
End popogation
TMP_50(uint256) = a_1 (c)/ 2
lnorm: 24 rnorm: 0
Source address: u
lnorm: 24 rnorm: 0
10
9
-1
[i]Type for TMP_50

Name: TMP_50 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_51(uint256) = TMP_50 (c)+ 1
Source address: u
[i]Type for TMP_51

Name: TMP_51 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_51(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
[i] x cleared
[i] TMP_52 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 5
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 5
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 5
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
End popogation
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 5
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
c_2(uint256) := ϕ(['c_1', 'c_3'])
Phi

Name: c Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 5
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for c

Name: c Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
x_2(uint256) := ϕ(['x_3', 'x_1'])
Phi

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
TMP_52(bool) = x_2 < c_2
lnorm: 0 rnorm: 24
[i]Type for TMP_52

Name: TMP_52 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: c_3, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 5
Fields: 
Finance Type: undef
Name: c, Num: 3
Globalname: c, contract_name: VaderMath
End popogation
c_3(uint256) := x_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
[i] TMP_53 cleared
[i] TMP_54 cleared
[i] TMP_55 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: x_3, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 3
Globalname: x, contract_name: VaderMath
End popogation
TMP_53(uint256) = a_1 (c)/ x_2
lnorm: 24 rnorm: 0
Source address: u
Source address: u
lnorm: 24 rnorm: 0
Source address: u
9
-1
[i]Type for TMP_53

Name: TMP_53 Function: root
Num: 9
Den: -1
Address: u
Norm: 24
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
TMP_54(uint256) = TMP_53 (c)+ x_2
10
10
-1
lnorm: 24 rnorm: 0
Source address: u
[i]Type for TMP_54

Name: TMP_54 Function: root
Num: 10
Den: -1
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
XXXX
TMP_55(uint256) = TMP_54 (c)/ 2
lnorm: 0 rnorm: 0
Source address: u
lnorm: 0 rnorm: 0
10
-1
[i]Type for TMP_55

Name: TMP_55 Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
x_3(uint256) := TMP_55(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_38', 'XY_1'])
Phi
[i]Type for a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_49 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_49(bool) = a_1 > 3
lnorm: 24 rnorm: 0
[i]Type for TMP_49

Name: TMP_49 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_56 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_56(bool) = a_1 != 0
[i]Type for TMP_56

Name: TMP_56 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_4, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: c, Num: 4
Globalname: c, contract_name: VaderMath
End popogation
c_4(uint256) := 1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: c_1, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 1
Globalname: c, contract_name: VaderMath
End popogation
c_1(uint256) := a_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_50 cleared
[i] TMP_51 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: VaderMath
End popogation
TMP_50(uint256) = a_1 (c)/ 2
lnorm: 24 rnorm: 0
Source address: u
lnorm: 24 rnorm: 0
10
9
-1
[i]Type for TMP_50

Name: TMP_50 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_51(uint256) = TMP_50 (c)+ 1
Source address: u
[i]Type for TMP_51

Name: TMP_51 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_51(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
[i] x cleared
[i] TMP_52 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
End popogation
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
c_2(uint256) := ϕ(['c_1', 'c_3'])
Phi

Name: c Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for c

Name: c Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
x_2(uint256) := ϕ(['x_3', 'x_1'])
Phi

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
TMP_52(bool) = x_2 < c_2
lnorm: 0 rnorm: 24
[i]Type for TMP_52

Name: TMP_52 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: c_3, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: c, Num: 3
Globalname: c, contract_name: VaderMath
End popogation
c_3(uint256) := x_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
[i] TMP_53 cleared
[i] TMP_54 cleared
[i] TMP_55 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: x_3, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 3
Globalname: x, contract_name: VaderMath
End popogation
TMP_53(uint256) = a_1 (c)/ x_2
lnorm: 24 rnorm: 0
Source address: u
Source address: u
lnorm: 24 rnorm: 0
Source address: u
9
-1
[i]Type for TMP_53

Name: TMP_53 Function: root
Num: 9
Den: -1
Address: u
Norm: 24
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
TMP_54(uint256) = TMP_53 (c)+ x_2
10
10
-1
lnorm: 24 rnorm: 0
Source address: u
[i]Type for TMP_54

Name: TMP_54 Function: root
Num: 10
Den: -1
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
XXXX
TMP_55(uint256) = TMP_54 (c)/ 2
lnorm: 0 rnorm: 0
Source address: u
lnorm: 0 rnorm: 0
10
-1
[i]Type for TMP_55

Name: TMP_55 Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
x_3(uint256) := TMP_55(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_36

Name: TMP_36 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_37(uint256) = reserveOut_1 (c)- y4_1
Source address: u
[i]Type for TMP_37

Name: TMP_37 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: undef
XXXX
TMP_38(uint256) = reserveIn_1 (c)* TMP_37
lnorm: 6 rnorm: 0
Source address: u
[i]Type for TMP_38

Name: TMP_38 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
XXXX
TMP_39(uint256) = INTERNAL_CALL, VaderMath.root(uint256)(TMP_38)
New param cache [[[10], [-1], 6, None, [], -1, 'u', 8]]
Old param cache: [[[], [], 'u', None, [], -1, 'u']]
[[10], [-1], 6, None, [], -1, 'u', 8]

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
root(uint256)
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Copied ftype
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
Propogating All
c_2
Ssa_name: c_2, name: c

Name: c Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Propogating All
Propogating All
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Copied ftype
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_38', 'XY_1'])
Phi
[i]Type for a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
XXXX
[i] TMP_49 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
End popogation
TMP_49(bool) = a_1 > 3
lnorm: 6 rnorm: 0
[i]Type for TMP_49

Name: TMP_49 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_56 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
End popogation
TMP_56(bool) = a_1 != 0
[i]Type for TMP_56

Name: TMP_56 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_4, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: c, Num: 4
Globalname: c, contract_name: VaderMath
End popogation
c_4(uint256) := 1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Ssa_name: c_1, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 1
Globalname: c, contract_name: VaderMath
End popogation
c_1(uint256) := a_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_50 cleared
[i] TMP_51 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: VaderMath
End popogation
TMP_50(uint256) = a_1 (c)/ 2
lnorm: 6 rnorm: 0
Source address: u
lnorm: 6 rnorm: 0
10
-1
[i]Type for TMP_50

Name: TMP_50 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
TMP_51(uint256) = TMP_50 (c)+ 1
Source address: u
[i]Type for TMP_51

Name: TMP_51 Function: root
Num: 10
Den: -1
Address: u
Norm: u
LF: None
Value: 5
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_51(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 5
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
[i] x cleared
[i] TMP_52 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
End popogation
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
c_2(uint256) := ϕ(['c_1', 'c_3'])
Phi

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for c

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
XXXX
x_2(uint256) := ϕ(['x_3', 'x_1'])
Phi

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 5
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
TMP_52(bool) = x_2 < c_2
lnorm: 0 rnorm: 6
10
-1
[i]Type for TMP_52

Name: TMP_52 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: c_3, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: c, Num: 3
Globalname: c, contract_name: VaderMath
End popogation
c_3(uint256) := x_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
[i] TMP_53 cleared
[i] TMP_54 cleared
[i] TMP_55 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: x_3, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 3
Globalname: x, contract_name: VaderMath
End popogation
TMP_53(uint256) = a_1 (c)/ x_2
lnorm: 6 rnorm: 0
Source address: u
Source address: u
lnorm: 6 rnorm: 0
Source address: u
Source address: u
[i]Type for TMP_53

Name: TMP_53 Function: root
Num: -1
Den: -1
Address: u
Norm: 6
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_54(uint256) = TMP_53 (c)+ x_2
Source address: u
[i]Type for TMP_54

Name: TMP_54 Function: root
Num: 10
Den: -1
Address: u
Norm: u
LF: None
Value: 5
Fields: 
Finance Type: undef
XXXX
TMP_55(uint256) = TMP_54 (c)/ 2
lnorm: 0 rnorm: 0
Source address: u
lnorm: 0 rnorm: 0
10
-1
[i]Type for TMP_55

Name: TMP_55 Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
x_3(uint256) := TMP_55(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_38', 'XY_1'])
Phi
[i]Type for a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
XXXX
[i] TMP_49 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
End popogation
TMP_49(bool) = a_1 > 3
lnorm: 6 rnorm: 0
[i]Type for TMP_49

Name: TMP_49 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_56 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
End popogation
TMP_56(bool) = a_1 != 0
[i]Type for TMP_56

Name: TMP_56 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_4, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: c, Num: 4
Globalname: c, contract_name: VaderMath
End popogation
c_4(uint256) := 1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Ssa_name: c_1, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: undef
Name: c, Num: 1
Globalname: c, contract_name: VaderMath
End popogation
c_1(uint256) := a_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_50 cleared
[i] TMP_51 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 5
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: VaderMath
End popogation
TMP_50(uint256) = a_1 (c)/ 2
lnorm: 6 rnorm: 0
Source address: u
lnorm: 6 rnorm: 0
10
-1
[i]Type for TMP_50

Name: TMP_50 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
TMP_51(uint256) = TMP_50 (c)+ 1
Source address: u
[i]Type for TMP_51

Name: TMP_51 Function: root
Num: 10
Den: -1
Address: u
Norm: u
LF: None
Value: 5
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_51(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 5
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
[i] x cleared
[i] TMP_52 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
End popogation
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
c_2(uint256) := ϕ(['c_1', 'c_3'])
Phi

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for c

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
XXXX
x_2(uint256) := ϕ(['x_3', 'x_1'])
Phi

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 5
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_52(bool) = x_2 < c_2
lnorm: 0 rnorm: 6
10
-1
[i]Type for TMP_52

Name: TMP_52 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: c_3, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: c, Num: 3
Globalname: c, contract_name: VaderMath
End popogation
c_3(uint256) := x_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] TMP_53 cleared
[i] TMP_54 cleared
[i] TMP_55 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: x_3, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 3
Globalname: x, contract_name: VaderMath
End popogation
TMP_53(uint256) = a_1 (c)/ x_2
lnorm: 6 rnorm: 0
Source address: u
Source address: u
lnorm: 6 rnorm: 0
Source address: u
Source address: u
[i]Type for TMP_53

Name: TMP_53 Function: root
Num: -1
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
TMP_54(uint256) = TMP_53 (c)+ x_2
Source address: u
[i]Type for TMP_54

Name: TMP_54 Function: root
Num: 10
Den: -1
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
XXXX
TMP_55(uint256) = TMP_54 (c)/ 2
lnorm: 0 rnorm: 0
Source address: u
lnorm: 0 rnorm: 0
10
-1
[i]Type for TMP_55

Name: TMP_55 Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
x_3(uint256) := TMP_55(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_39

Name: TMP_39 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_40(uint256) = TMP_36 (c)* TMP_39
lnorm: u rnorm: u
[i]Type for TMP_40

Name: TMP_40 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
numeratorA_1(uint256) := TMP_40(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for numeratorA

Name: numeratorA Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_41 cleared
[i] numeratorB cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: numeratorB_1, name: numeratorB

Name: numeratorB Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: numeratorB, Num: 1
Globalname: numeratorB, contract_name: VaderMath
End popogation
TMP_41(uint256) = y2_1 (c)* reserveIn_1
lnorm: 0 rnorm: 6
Source address: u
[i]Type for TMP_41

Name: TMP_41 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
numeratorB_1(uint256) := TMP_41(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for numeratorB

Name: numeratorB Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
[i] numeratorC cleared
Propogating parameters and globals to SSA variables...
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: numeratorC_1, name: numeratorC

Name: numeratorC Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numeratorC, Num: 1
Globalname: numeratorC, contract_name: VaderMath
End popogation
numeratorC_1(uint256) := XY_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for numeratorC

Name: numeratorC Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_42 cleared
[i] TMP_43 cleared
[i] numerator cleared
Propogating parameters and globals to SSA variables...
Ssa_name: numeratorC_1, name: numeratorC

Name: numeratorC Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: numeratorB_1, name: numeratorB

Name: numeratorB Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: numeratorA_1, name: numeratorA

Name: numeratorA Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numeratorA, Num: 1
Globalname: numeratorA, contract_name: VaderMath
Ssa_name: numeratorC_1, name: numeratorC

Name: numeratorC Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: numeratorB_1, name: numeratorB

Name: numeratorB Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: numeratorA_1, name: numeratorA

Name: numeratorA Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numeratorA, Num: 1
Globalname: numeratorA, contract_name: VaderMath
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numerator, Num: 1
Globalname: numerator, contract_name: VaderMath
End popogation
TMP_42(uint256) = numeratorC_1 (c)- numeratorA_1
Source address: u
[i]Type for TMP_42

Name: TMP_42 Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_43(uint256) = TMP_42 (c)- numeratorB_1
[i]Type for TMP_43

Name: TMP_43 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
numerator_1(uint256) := TMP_43(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for numerator

Name: numerator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] denominator cleared
Propogating parameters and globals to SSA variables...
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: denominator, Num: 1
Globalname: denominator, contract_name: VaderMath
End popogation
denominator_1(uint256) := y2_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for denominator

Name: denominator Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
[i] TMP_44 cleared
[i] amountIn cleared
Propogating parameters and globals to SSA variables...
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numerator, Num: 1
Globalname: numerator, contract_name: VaderMath
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numerator, Num: 1
Globalname: numerator, contract_name: VaderMath
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: amountIn, Num: 1
Globalname: amountIn, contract_name: VaderMath
End popogation
TMP_44(uint256) = numerator_1 (c)/ denominator_1
lnorm: u rnorm: 0
lnorm: u rnorm: 0
[i]Type for TMP_44

Name: TMP_44 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
amountIn_1(uint256) := TMP_44(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for amountIn

Name: amountIn Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
End popogation
RETURN amountIn_1
RETURN

Name: amountIn Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u
Source address: u
[i]Type for TMP_94

Name: TMP_94 Function: calculateInGivenOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
RETURN TMP_94
RETURN

Name: TMP_94 Function: calculateInGivenOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
[i] TMP_89 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: nativeReserve_1, name: nativeReserve

Name: nativeReserve Function: calculateInGivenOut
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amountOut_1, name: amountOut

Name: amountOut_1 Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountOut_1 Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountOut, Num: 1
Globalname: amountOut, contract_name: VaderRouter
Ssa_name: foreignReserve_1, name: foreignReserve

Name: foreignReserve Function: calculateInGivenOut
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: nativeReserve_1, name: nativeReserve

Name: nativeReserve Function: calculateInGivenOut
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amountOut_1, name: amountOut

Name: amountOut_1 Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountOut_1 Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountOut, Num: 1
Globalname: amountOut, contract_name: VaderRouter
Ssa_name: foreignReserve_1, name: foreignReserve

Name: foreignReserve Function: calculateInGivenOut
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
End popogation
TMP_89(uint256) = LIBRARY_CALL, dest:VaderMath, function:VaderMath.calculateSwapReverse(uint256,uint256,uint256), arguments:['amountOut_1', 'nativeReserve_1', 'foreignReserve_1'] 
Found: calculateSwapReverse

Name: amountOut_1 Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: nativeReserve Function: calculateInGivenOut
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: foreignReserve Function: calculateInGivenOut
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
High level cal param_cache
Param: 0
    num: []
    den: []
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [9]
    den: [-1]
    norm: 18
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [10]
    den: [-1]
    norm: 6
    link: None
    fields: []
    fintype: -1
New param cache [[[], [], 'u', None, [], -1, 'u', 'u'], [[9], [-1], 18, None, [], -1, 'u', "'u'"], [[10], [-1], 6, None, [], -1, 'u', "'u'"]]
Old param cache: [[[-1], [-1], 'u', None, [], -1, 'u'], [[-1], [-1], 'u', None, [], -1, 'u'], [[-1], [-1], 'u', None, [], -1, 'u']]
[[], [], 'u', None, [], -1, 'u', 'u']

Name: amountOut Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[9], [-1], 18, None, [], -1, 'u', "'u'"]

Name: reserveIn Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
[[10], [-1], 6, None, [], -1, 'u', "'u'"]

Name: reserveOut Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
calculateSwapReverse(uint256,uint256,uint256)
Propogating All
Propogating All
reserveOut_1
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: reserveOut_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
reserveIn_1
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: reserveIn_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
Propogating All
amountOut_1
Ssa_name: amountOut_1, name: amountOut

Name: amountOut_1 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Source address: u

Name: amountOut_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
y2_1
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Propogating All
reserveOut_1
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: reserveOut_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
y4_1
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 8
Fields: 
Finance Type: undef
Propogating All
y4_1
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 8
Fields: 
Finance Type: undef
reserveOut_1
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: reserveOut_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
reserveIn_1
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: reserveIn_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
XY_1
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
reserveIn_1
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: reserveIn_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
y2_1
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Propogating All
XY_1
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
numeratorC_1
Ssa_name: numeratorC_1, name: numeratorC

Name: numeratorC Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
numeratorB_1
Ssa_name: numeratorB_1, name: numeratorB

Name: numeratorB Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
numeratorA_1
Ssa_name: numeratorA_1, name: numeratorA

Name: numeratorA Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
y2_1
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Propogating All
numerator_1
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
denominator_1
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Propogating All
amountIn_1
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_31 cleared
[i] XY cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: XY, Num: 1
Globalname: XY, contract_name: VaderMath
End popogation
TMP_31(uint256) = reserveIn_1 (c)* reserveOut_1
lnorm: 18 rnorm: 6
Source address: u
Source address: u
Source address: u
[i]Type for TMP_31

Name: TMP_31 Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
XY_1(uint256) := TMP_31(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for XY

Name: XY Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_32 cleared
[i] y2 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountOut_1, name: amountOut

Name: amountOut_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountOut_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountOut, Num: 1
Globalname: amountOut, contract_name: VaderMath
Ssa_name: amountOut_1, name: amountOut

Name: amountOut_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountOut_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountOut, Num: 1
Globalname: amountOut, contract_name: VaderMath
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: y2, Num: 1
Globalname: y2, contract_name: VaderMath
End popogation
TMP_32(uint256) = amountOut_1 (c)* 2
lnorm: u rnorm: 0
Source address: u
[i]Type for TMP_32

Name: TMP_32 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
y2_1(uint256) := TMP_32(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] TMP_33 cleared
[i] y4 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: undef
Name: y4, Num: 1
Globalname: y4, contract_name: VaderMath
End popogation
TMP_33(uint256) = y2_1 (c)* 2
lnorm: 0 rnorm: 0
Source address: u
[i]Type for TMP_33

Name: TMP_33 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
y4_1(uint256) := TMP_33(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
[i] TMP_34 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
End popogation
TMP_34(bool) = y4_1 < reserveOut_1
lnorm: 0 rnorm: 6
[i]Type for TMP_34

Name: TMP_34 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_35(None) = SOLIDITY_CALL require(bool,string)(TMP_34,VaderMath::calculateSwapReverse: Desired Output Exceeds Maximum Output Possible (1/4 of Liquidity Pool))
[i]Type for TMP_35

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_36 cleared
[i] TMP_37 cleared
[i] TMP_38 cleared
[i] TMP_39 cleared
[i] TMP_40 cleared
[i] numeratorA cleared
Propogating parameters and globals to SSA variables...
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: numeratorA_1, name: numeratorA

Name: numeratorA Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numeratorA, Num: 1
Globalname: numeratorA, contract_name: VaderMath
End popogation
TMP_36(uint256) = INTERNAL_CALL, VaderMath.root(uint256)(XY_1)
New param cache [[[9, 10], [-1], 24, None, [], -1, 'u', 'u']]
Old param cache: [[[], [], 'u', None, [], -1, 'u']]
[[9, 10], [-1], 24, None, [], -1, 'u', 'u']

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
root(uint256)
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
Propogating All
c_2
Ssa_name: c_2, name: c

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Propogating All
Propogating All
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_38', 'XY_1'])
Phi
[i]Type for a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_49 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_49(bool) = a_1 > 3
lnorm: 24 rnorm: 0
[i]Type for TMP_49

Name: TMP_49 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_56 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_56(bool) = a_1 != 0
[i]Type for TMP_56

Name: TMP_56 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_4, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: c, Num: 4
Globalname: c, contract_name: VaderMath
End popogation
c_4(uint256) := 1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: c_1, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: undef
Name: c, Num: 1
Globalname: c, contract_name: VaderMath
End popogation
c_1(uint256) := a_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_50 cleared
[i] TMP_51 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 5
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: VaderMath
End popogation
TMP_50(uint256) = a_1 (c)/ 2
lnorm: 24 rnorm: 0
Source address: u
lnorm: 24 rnorm: 0
10
9
-1
[i]Type for TMP_50

Name: TMP_50 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_51(uint256) = TMP_50 (c)+ 1
Source address: u
[i]Type for TMP_51

Name: TMP_51 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_51(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
[i] x cleared
[i] TMP_52 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
End popogation
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
c_2(uint256) := ϕ(['c_1', 'c_3'])
Phi

Name: c Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for c

Name: c Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
x_2(uint256) := ϕ(['x_3', 'x_1'])
Phi

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
TMP_52(bool) = x_2 < c_2
lnorm: 0 rnorm: 24
[i]Type for TMP_52

Name: TMP_52 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: c_3, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: c, Num: 3
Globalname: c, contract_name: VaderMath
End popogation
c_3(uint256) := x_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
[i] TMP_53 cleared
[i] TMP_54 cleared
[i] TMP_55 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: x_3, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 3
Globalname: x, contract_name: VaderMath
End popogation
TMP_53(uint256) = a_1 (c)/ x_2
lnorm: 24 rnorm: 0
Source address: u
Source address: u
lnorm: 24 rnorm: 0
Source address: u
9
-1
[i]Type for TMP_53

Name: TMP_53 Function: root
Num: 9
Den: -1
Address: u
Norm: 24
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
TMP_54(uint256) = TMP_53 (c)+ x_2
10
10
-1
lnorm: 24 rnorm: 0
Source address: u
[i]Type for TMP_54

Name: TMP_54 Function: root
Num: 10
Den: -1
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
XXXX
TMP_55(uint256) = TMP_54 (c)/ 2
lnorm: 0 rnorm: 0
Source address: u
lnorm: 0 rnorm: 0
10
-1
[i]Type for TMP_55

Name: TMP_55 Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
x_3(uint256) := TMP_55(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_38', 'XY_1'])
Phi
[i]Type for a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_49 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_49(bool) = a_1 > 3
lnorm: 24 rnorm: 0
[i]Type for TMP_49

Name: TMP_49 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_56 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_56(bool) = a_1 != 0
[i]Type for TMP_56

Name: TMP_56 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_4, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: c, Num: 4
Globalname: c, contract_name: VaderMath
End popogation
c_4(uint256) := 1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: c_1, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 1
Globalname: c, contract_name: VaderMath
End popogation
c_1(uint256) := a_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_50 cleared
[i] TMP_51 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: VaderMath
End popogation
TMP_50(uint256) = a_1 (c)/ 2
lnorm: 24 rnorm: 0
Source address: u
lnorm: 24 rnorm: 0
10
9
-1
[i]Type for TMP_50

Name: TMP_50 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_51(uint256) = TMP_50 (c)+ 1
Source address: u
[i]Type for TMP_51

Name: TMP_51 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_51(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
[i] x cleared
[i] TMP_52 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
End popogation
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
c_2(uint256) := ϕ(['c_1', 'c_3'])
Phi

Name: c Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for c

Name: c Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
x_2(uint256) := ϕ(['x_3', 'x_1'])
Phi

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
TMP_52(bool) = x_2 < c_2
lnorm: 0 rnorm: 24
[i]Type for TMP_52

Name: TMP_52 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: c_3, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: c, Num: 3
Globalname: c, contract_name: VaderMath
End popogation
c_3(uint256) := x_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
[i] TMP_53 cleared
[i] TMP_54 cleared
[i] TMP_55 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: x_3, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 3
Globalname: x, contract_name: VaderMath
End popogation
TMP_53(uint256) = a_1 (c)/ x_2
lnorm: 24 rnorm: 0
Source address: u
Source address: u
lnorm: 24 rnorm: 0
Source address: u
9
-1
[i]Type for TMP_53

Name: TMP_53 Function: root
Num: 9
Den: -1
Address: u
Norm: 24
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
TMP_54(uint256) = TMP_53 (c)+ x_2
10
10
-1
lnorm: 24 rnorm: 0
Source address: u
[i]Type for TMP_54

Name: TMP_54 Function: root
Num: 10
Den: -1
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
XXXX
TMP_55(uint256) = TMP_54 (c)/ 2
lnorm: 0 rnorm: 0
Source address: u
lnorm: 0 rnorm: 0
10
-1
[i]Type for TMP_55

Name: TMP_55 Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
x_3(uint256) := TMP_55(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_36

Name: TMP_36 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_37(uint256) = reserveOut_1 (c)- y4_1
Source address: u
[i]Type for TMP_37

Name: TMP_37 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
TMP_38(uint256) = reserveIn_1 (c)* TMP_37
lnorm: 18 rnorm: 0
Source address: u
[i]Type for TMP_38

Name: TMP_38 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
TMP_39(uint256) = INTERNAL_CALL, VaderMath.root(uint256)(TMP_38)
New param cache [[[9], [-1], 18, None, [], -1, 'u', 4]]
Old param cache: [[[], [], 'u', None, [], -1, 'u']]
[[9], [-1], 18, None, [], -1, 'u', 4]

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
root(uint256)
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
Propogating All
c_2
Ssa_name: c_2, name: c

Name: c Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Propogating All
Propogating All
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_38', 'XY_1'])
Phi
[i]Type for a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
[i] TMP_49 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
End popogation
TMP_49(bool) = a_1 > 3
lnorm: 18 rnorm: 0
[i]Type for TMP_49

Name: TMP_49 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_56 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
End popogation
TMP_56(bool) = a_1 != 0
[i]Type for TMP_56

Name: TMP_56 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_4, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: c, Num: 4
Globalname: c, contract_name: VaderMath
End popogation
c_4(uint256) := 1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: c_1, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 1
Globalname: c, contract_name: VaderMath
End popogation
c_1(uint256) := a_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_50 cleared
[i] TMP_51 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: VaderMath
End popogation
TMP_50(uint256) = a_1 (c)/ 2
lnorm: 18 rnorm: 0
Source address: u
lnorm: 18 rnorm: 0
9
-1
[i]Type for TMP_50

Name: TMP_50 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_51(uint256) = TMP_50 (c)+ 1
Source address: u
[i]Type for TMP_51

Name: TMP_51 Function: root
Num: 9
Den: -1
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_51(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
[i] x cleared
[i] TMP_52 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
End popogation
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
c_2(uint256) := ϕ(['c_1', 'c_3'])
Phi

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for c

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
x_2(uint256) := ϕ(['x_3', 'x_1'])
Phi

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
TMP_52(bool) = x_2 < c_2
lnorm: 0 rnorm: 18
10
10
-1
[i]Type for TMP_52

Name: TMP_52 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: c_3, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: c, Num: 3
Globalname: c, contract_name: VaderMath
End popogation
c_3(uint256) := x_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
[i] TMP_53 cleared
[i] TMP_54 cleared
[i] TMP_55 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: x_3, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 3
Globalname: x, contract_name: VaderMath
End popogation
TMP_53(uint256) = a_1 (c)/ x_2
lnorm: 18 rnorm: 0
Source address: u
Source address: u
lnorm: 18 rnorm: 0
Source address: u
9
10
[i]Type for TMP_53

Name: TMP_53 Function: root
Num: 9
Den: 10
Address: u
Norm: 18
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
TMP_54(uint256) = TMP_53 (c)+ x_2
10
10
-1
[i]Type for TMP_54

Name: TMP_54 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_55(uint256) = TMP_54 (c)/ 2
lnorm: u rnorm: 0
lnorm: u rnorm: 0
[i]Type for TMP_55

Name: TMP_55 Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
x_3(uint256) := TMP_55(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_38', 'XY_1'])
Phi
[i]Type for a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
[i] TMP_49 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
End popogation
TMP_49(bool) = a_1 > 3
lnorm: 18 rnorm: 0
[i]Type for TMP_49

Name: TMP_49 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_56 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
End popogation
TMP_56(bool) = a_1 != 0
[i]Type for TMP_56

Name: TMP_56 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_4, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: c, Num: 4
Globalname: c, contract_name: VaderMath
End popogation
c_4(uint256) := 1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: c_1, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 1
Globalname: c, contract_name: VaderMath
End popogation
c_1(uint256) := a_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_50 cleared
[i] TMP_51 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: VaderMath
End popogation
TMP_50(uint256) = a_1 (c)/ 2
lnorm: 18 rnorm: 0
Source address: u
lnorm: 18 rnorm: 0
9
-1
[i]Type for TMP_50

Name: TMP_50 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_51(uint256) = TMP_50 (c)+ 1
Source address: u
[i]Type for TMP_51

Name: TMP_51 Function: root
Num: 9
Den: -1
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_51(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
[i] x cleared
[i] TMP_52 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
End popogation
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
c_2(uint256) := ϕ(['c_1', 'c_3'])
Phi

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for c

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
x_2(uint256) := ϕ(['x_3', 'x_1'])
Phi

Name: x Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
TMP_52(bool) = x_2 < c_2
lnorm: 0 rnorm: 18
9
-1
[i]Type for TMP_52

Name: TMP_52 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: c_3, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: c, Num: 3
Globalname: c, contract_name: VaderMath
End popogation
c_3(uint256) := x_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
[i] TMP_53 cleared
[i] TMP_54 cleared
[i] TMP_55 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: x_3, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 3
Globalname: x, contract_name: VaderMath
End popogation
TMP_53(uint256) = a_1 (c)/ x_2
lnorm: 18 rnorm: 0
Source address: u
Source address: u
lnorm: 18 rnorm: 0
Source address: u
Source address: u
[i]Type for TMP_53

Name: TMP_53 Function: root
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
TMP_54(uint256) = TMP_53 (c)+ x_2
Source address: u
[i]Type for TMP_54

Name: TMP_54 Function: root
Num: 9
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
TMP_55(uint256) = TMP_54 (c)/ 2
lnorm: 0 rnorm: 0
Source address: u
lnorm: 0 rnorm: 0
9
-1
[i]Type for TMP_55

Name: TMP_55 Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
x_3(uint256) := TMP_55(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_39

Name: TMP_39 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_40(uint256) = TMP_36 (c)* TMP_39
lnorm: u rnorm: u
[i]Type for TMP_40

Name: TMP_40 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
numeratorA_1(uint256) := TMP_40(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for numeratorA

Name: numeratorA Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_41 cleared
[i] numeratorB cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: numeratorB_1, name: numeratorB

Name: numeratorB Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: numeratorB, Num: 1
Globalname: numeratorB, contract_name: VaderMath
End popogation
TMP_41(uint256) = y2_1 (c)* reserveIn_1
lnorm: 0 rnorm: 18
Source address: u
[i]Type for TMP_41

Name: TMP_41 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
numeratorB_1(uint256) := TMP_41(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for numeratorB

Name: numeratorB Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] numeratorC cleared
Propogating parameters and globals to SSA variables...
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: numeratorC_1, name: numeratorC

Name: numeratorC Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numeratorC, Num: 1
Globalname: numeratorC, contract_name: VaderMath
End popogation
numeratorC_1(uint256) := XY_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for numeratorC

Name: numeratorC Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_42 cleared
[i] TMP_43 cleared
[i] numerator cleared
Propogating parameters and globals to SSA variables...
Ssa_name: numeratorC_1, name: numeratorC

Name: numeratorC Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: numeratorB_1, name: numeratorB

Name: numeratorB Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: numeratorA_1, name: numeratorA

Name: numeratorA Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numeratorA, Num: 1
Globalname: numeratorA, contract_name: VaderMath
Ssa_name: numeratorC_1, name: numeratorC

Name: numeratorC Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: numeratorB_1, name: numeratorB

Name: numeratorB Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: numeratorA_1, name: numeratorA

Name: numeratorA Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numeratorA, Num: 1
Globalname: numeratorA, contract_name: VaderMath
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numerator, Num: 1
Globalname: numerator, contract_name: VaderMath
End popogation
TMP_42(uint256) = numeratorC_1 (c)- numeratorA_1
Source address: u
[i]Type for TMP_42

Name: TMP_42 Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_43(uint256) = TMP_42 (c)- numeratorB_1
[i]Type for TMP_43

Name: TMP_43 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
numerator_1(uint256) := TMP_43(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for numerator

Name: numerator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] denominator cleared
Propogating parameters and globals to SSA variables...
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: denominator, Num: 1
Globalname: denominator, contract_name: VaderMath
End popogation
denominator_1(uint256) := y2_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for denominator

Name: denominator Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] TMP_44 cleared
[i] amountIn cleared
Propogating parameters and globals to SSA variables...
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numerator, Num: 1
Globalname: numerator, contract_name: VaderMath
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numerator, Num: 1
Globalname: numerator, contract_name: VaderMath
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: amountIn, Num: 1
Globalname: amountIn, contract_name: VaderMath
End popogation
TMP_44(uint256) = numerator_1 (c)/ denominator_1
lnorm: u rnorm: 0
lnorm: u rnorm: 0
[i]Type for TMP_44

Name: TMP_44 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
amountIn_1(uint256) := TMP_44(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for amountIn

Name: amountIn Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
End popogation
RETURN amountIn_1
RETURN

Name: amountIn Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_31 cleared
[i] XY cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: XY, Num: 1
Globalname: XY, contract_name: VaderMath
End popogation
TMP_31(uint256) = reserveIn_1 (c)* reserveOut_1
lnorm: 18 rnorm: 6
Source address: u
Source address: u
Source address: u
[i]Type for TMP_31

Name: TMP_31 Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
XY_1(uint256) := TMP_31(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for XY

Name: XY Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_32 cleared
[i] y2 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountOut_1, name: amountOut

Name: amountOut_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountOut_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountOut, Num: 1
Globalname: amountOut, contract_name: VaderMath
Ssa_name: amountOut_1, name: amountOut

Name: amountOut_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountOut_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountOut, Num: 1
Globalname: amountOut, contract_name: VaderMath
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: y2, Num: 1
Globalname: y2, contract_name: VaderMath
End popogation
TMP_32(uint256) = amountOut_1 (c)* 2
lnorm: u rnorm: 0
Source address: u
[i]Type for TMP_32

Name: TMP_32 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
y2_1(uint256) := TMP_32(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] TMP_33 cleared
[i] y4 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: y4, Num: 1
Globalname: y4, contract_name: VaderMath
End popogation
TMP_33(uint256) = y2_1 (c)* 2
lnorm: 0 rnorm: 0
Source address: u
[i]Type for TMP_33

Name: TMP_33 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
y4_1(uint256) := TMP_33(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
[i] TMP_34 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
End popogation
TMP_34(bool) = y4_1 < reserveOut_1
lnorm: 0 rnorm: 6
[i]Type for TMP_34

Name: TMP_34 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_35(None) = SOLIDITY_CALL require(bool,string)(TMP_34,VaderMath::calculateSwapReverse: Desired Output Exceeds Maximum Output Possible (1/4 of Liquidity Pool))
[i]Type for TMP_35

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_36 cleared
[i] TMP_37 cleared
[i] TMP_38 cleared
[i] TMP_39 cleared
[i] TMP_40 cleared
[i] numeratorA cleared
Propogating parameters and globals to SSA variables...
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: numeratorA_1, name: numeratorA

Name: numeratorA Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numeratorA, Num: 1
Globalname: numeratorA, contract_name: VaderMath
End popogation
TMP_36(uint256) = INTERNAL_CALL, VaderMath.root(uint256)(XY_1)
New param cache [[[9, 10], [-1], 24, None, [], -1, 'u', 'u']]
Old param cache: [[[], [], 'u', None, [], -1, 'u']]
[[9, 10], [-1], 24, None, [], -1, 'u', 'u']

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
root(uint256)
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
Propogating All
c_2
Ssa_name: c_2, name: c

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Propogating All
Propogating All
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_38', 'XY_1'])
Phi
[i]Type for a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_49 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_49(bool) = a_1 > 3
lnorm: 24 rnorm: 0
[i]Type for TMP_49

Name: TMP_49 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_56 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_56(bool) = a_1 != 0
[i]Type for TMP_56

Name: TMP_56 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_4, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: c, Num: 4
Globalname: c, contract_name: VaderMath
End popogation
c_4(uint256) := 1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: c_1, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 1
Globalname: c, contract_name: VaderMath
End popogation
c_1(uint256) := a_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_50 cleared
[i] TMP_51 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: VaderMath
End popogation
TMP_50(uint256) = a_1 (c)/ 2
lnorm: 24 rnorm: 0
Source address: u
lnorm: 24 rnorm: 0
10
9
-1
[i]Type for TMP_50

Name: TMP_50 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_51(uint256) = TMP_50 (c)+ 1
Source address: u
[i]Type for TMP_51

Name: TMP_51 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_51(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
[i] x cleared
[i] TMP_52 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
End popogation
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
c_2(uint256) := ϕ(['c_1', 'c_3'])
Phi

Name: c Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for c

Name: c Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
x_2(uint256) := ϕ(['x_3', 'x_1'])
Phi

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_52(bool) = x_2 < c_2
lnorm: 0 rnorm: 24
[i]Type for TMP_52

Name: TMP_52 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: c_3, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: c, Num: 3
Globalname: c, contract_name: VaderMath
End popogation
c_3(uint256) := x_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] TMP_53 cleared
[i] TMP_54 cleared
[i] TMP_55 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: x_3, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 3
Globalname: x, contract_name: VaderMath
End popogation
TMP_53(uint256) = a_1 (c)/ x_2
lnorm: 24 rnorm: 0
Source address: u
Source address: u
lnorm: 24 rnorm: 0
Source address: u
10
-1
[i]Type for TMP_53

Name: TMP_53 Function: root
Num: 10
Den: -1
Address: u
Norm: 24
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_54(uint256) = TMP_53 (c)+ x_2
9
[i]Type for TMP_54

Name: TMP_54 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_55(uint256) = TMP_54 (c)/ 2
lnorm: u rnorm: 0
lnorm: u rnorm: 0
[i]Type for TMP_55

Name: TMP_55 Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
x_3(uint256) := TMP_55(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_38', 'XY_1'])
Phi
[i]Type for a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_49 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_49(bool) = a_1 > 3
lnorm: 24 rnorm: 0
[i]Type for TMP_49

Name: TMP_49 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_56 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_56(bool) = a_1 != 0
[i]Type for TMP_56

Name: TMP_56 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_4, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: c, Num: 4
Globalname: c, contract_name: VaderMath
End popogation
c_4(uint256) := 1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: c_1, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 1
Globalname: c, contract_name: VaderMath
End popogation
c_1(uint256) := a_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_50 cleared
[i] TMP_51 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: VaderMath
End popogation
TMP_50(uint256) = a_1 (c)/ 2
lnorm: 24 rnorm: 0
Source address: u
lnorm: 24 rnorm: 0
10
9
-1
[i]Type for TMP_50

Name: TMP_50 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_51(uint256) = TMP_50 (c)+ 1
Source address: u
[i]Type for TMP_51

Name: TMP_51 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_51(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
[i] x cleared
[i] TMP_52 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
End popogation
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
c_2(uint256) := ϕ(['c_1', 'c_3'])
Phi

Name: c Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for c

Name: c Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
x_2(uint256) := ϕ(['x_3', 'x_1'])
Phi

Name: x Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for x

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
TMP_52(bool) = x_2 < c_2
lnorm: 0 rnorm: 24
10
9
-1
[i]Type for TMP_52

Name: TMP_52 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: c_3, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: c, Num: 3
Globalname: c, contract_name: VaderMath
End popogation
c_3(uint256) := x_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
[i] TMP_53 cleared
[i] TMP_54 cleared
[i] TMP_55 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: x_3, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 3
Globalname: x, contract_name: VaderMath
End popogation
TMP_53(uint256) = a_1 (c)/ x_2
lnorm: 24 rnorm: 0
Source address: u
Source address: u
lnorm: 24 rnorm: 0
Source address: u
Source address: u
[i]Type for TMP_53

Name: TMP_53 Function: root
Num: -1
Den: -1
Address: u
Norm: 24
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
TMP_54(uint256) = TMP_53 (c)+ x_2
Source address: u
[i]Type for TMP_54

Name: TMP_54 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
XXXX
TMP_55(uint256) = TMP_54 (c)/ 2
lnorm: 0 rnorm: 0
Source address: u
lnorm: 0 rnorm: 0
10
9
-1
[i]Type for TMP_55

Name: TMP_55 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
x_3(uint256) := TMP_55(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_36

Name: TMP_36 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_37(uint256) = reserveOut_1 (c)- y4_1
Source address: u
[i]Type for TMP_37

Name: TMP_37 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
TMP_38(uint256) = reserveIn_1 (c)* TMP_37
lnorm: 18 rnorm: 0
Source address: u
[i]Type for TMP_38

Name: TMP_38 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
TMP_39(uint256) = INTERNAL_CALL, VaderMath.root(uint256)(TMP_38)
New param cache [[[9], [-1], 18, None, [], -1, 'u', 4]]
Old param cache: [[[], [], 'u', None, [], -1, 'u']]
[[9], [-1], 18, None, [], -1, 'u', 4]

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
root(uint256)
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
Propogating All
c_2
Ssa_name: c_2, name: c

Name: c Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Propogating All
Propogating All
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_38', 'XY_1'])
Phi
[i]Type for a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
[i] TMP_49 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
End popogation
TMP_49(bool) = a_1 > 3
lnorm: 18 rnorm: 0
[i]Type for TMP_49

Name: TMP_49 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_56 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
End popogation
TMP_56(bool) = a_1 != 0
[i]Type for TMP_56

Name: TMP_56 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_4, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: c, Num: 4
Globalname: c, contract_name: VaderMath
End popogation
c_4(uint256) := 1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: c_1, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 1
Globalname: c, contract_name: VaderMath
End popogation
c_1(uint256) := a_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_50 cleared
[i] TMP_51 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: VaderMath
End popogation
TMP_50(uint256) = a_1 (c)/ 2
lnorm: 18 rnorm: 0
Source address: u
lnorm: 18 rnorm: 0
9
-1
[i]Type for TMP_50

Name: TMP_50 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_51(uint256) = TMP_50 (c)+ 1
Source address: u
[i]Type for TMP_51

Name: TMP_51 Function: root
Num: 9
Den: -1
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_51(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
[i] x cleared
[i] TMP_52 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
End popogation
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
c_2(uint256) := ϕ(['c_1', 'c_3'])
Phi

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef

Name: c Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for c

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
x_2(uint256) := ϕ(['x_3', 'x_1'])
Phi

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for x

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
TMP_52(bool) = x_2 < c_2
lnorm: 0 rnorm: 18
[i]Type for TMP_52

Name: TMP_52 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: c_3, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: c, Num: 3
Globalname: c, contract_name: VaderMath
End popogation
c_3(uint256) := x_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
[i] TMP_53 cleared
[i] TMP_54 cleared
[i] TMP_55 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: x_3, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 3
Globalname: x, contract_name: VaderMath
End popogation
TMP_53(uint256) = a_1 (c)/ x_2
lnorm: 18 rnorm: 0
Source address: u
Source address: u
lnorm: 18 rnorm: 0
Source address: u
-1
10
[i]Type for TMP_53

Name: TMP_53 Function: root
Num: -1
Den: 10
Address: u
Norm: 18
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
TMP_54(uint256) = TMP_53 (c)+ x_2
[i]Type for TMP_54

Name: TMP_54 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_55(uint256) = TMP_54 (c)/ 2
lnorm: u rnorm: 0
lnorm: u rnorm: 0
[i]Type for TMP_55

Name: TMP_55 Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
x_3(uint256) := TMP_55(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_38', 'XY_1'])
Phi
[i]Type for a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
[i] TMP_49 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
End popogation
TMP_49(bool) = a_1 > 3
lnorm: 18 rnorm: 0
[i]Type for TMP_49

Name: TMP_49 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_56 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
End popogation
TMP_56(bool) = a_1 != 0
[i]Type for TMP_56

Name: TMP_56 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_4, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: c, Num: 4
Globalname: c, contract_name: VaderMath
End popogation
c_4(uint256) := 1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: c_1, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 1
Globalname: c, contract_name: VaderMath
End popogation
c_1(uint256) := a_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_50 cleared
[i] TMP_51 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: VaderMath
End popogation
TMP_50(uint256) = a_1 (c)/ 2
lnorm: 18 rnorm: 0
Source address: u
lnorm: 18 rnorm: 0
9
-1
[i]Type for TMP_50

Name: TMP_50 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_51(uint256) = TMP_50 (c)+ 1
Source address: u
[i]Type for TMP_51

Name: TMP_51 Function: root
Num: 9
Den: -1
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_51(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
[i] x cleared
[i] TMP_52 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
End popogation
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
c_2(uint256) := ϕ(['c_1', 'c_3'])
Phi

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef

Name: c Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for c

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
x_2(uint256) := ϕ(['x_3', 'x_1'])
Phi

Name: x Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
TMP_52(bool) = x_2 < c_2
lnorm: 0 rnorm: 18
9
-1
[i]Type for TMP_52

Name: TMP_52 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: c_3, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: c, Num: 3
Globalname: c, contract_name: VaderMath
End popogation
c_3(uint256) := x_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
[i] TMP_53 cleared
[i] TMP_54 cleared
[i] TMP_55 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: x_3, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 3
Globalname: x, contract_name: VaderMath
End popogation
TMP_53(uint256) = a_1 (c)/ x_2
lnorm: 18 rnorm: 0
Source address: u
Source address: u
lnorm: 18 rnorm: 0
Source address: u
Source address: u
[i]Type for TMP_53

Name: TMP_53 Function: root
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
TMP_54(uint256) = TMP_53 (c)+ x_2
Source address: u
[i]Type for TMP_54

Name: TMP_54 Function: root
Num: 9
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
TMP_55(uint256) = TMP_54 (c)/ 2
lnorm: 0 rnorm: 0
Source address: u
lnorm: 0 rnorm: 0
9
-1
[i]Type for TMP_55

Name: TMP_55 Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
x_3(uint256) := TMP_55(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_39

Name: TMP_39 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_40(uint256) = TMP_36 (c)* TMP_39
lnorm: u rnorm: u
[i]Type for TMP_40

Name: TMP_40 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
numeratorA_1(uint256) := TMP_40(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for numeratorA

Name: numeratorA Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_41 cleared
[i] numeratorB cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: numeratorB_1, name: numeratorB

Name: numeratorB Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: numeratorB, Num: 1
Globalname: numeratorB, contract_name: VaderMath
End popogation
TMP_41(uint256) = y2_1 (c)* reserveIn_1
lnorm: 0 rnorm: 18
Source address: u
[i]Type for TMP_41

Name: TMP_41 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
numeratorB_1(uint256) := TMP_41(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for numeratorB

Name: numeratorB Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] numeratorC cleared
Propogating parameters and globals to SSA variables...
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: numeratorC_1, name: numeratorC

Name: numeratorC Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numeratorC, Num: 1
Globalname: numeratorC, contract_name: VaderMath
End popogation
numeratorC_1(uint256) := XY_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for numeratorC

Name: numeratorC Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_42 cleared
[i] TMP_43 cleared
[i] numerator cleared
Propogating parameters and globals to SSA variables...
Ssa_name: numeratorC_1, name: numeratorC

Name: numeratorC Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: numeratorB_1, name: numeratorB

Name: numeratorB Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: numeratorA_1, name: numeratorA

Name: numeratorA Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numeratorA, Num: 1
Globalname: numeratorA, contract_name: VaderMath
Ssa_name: numeratorC_1, name: numeratorC

Name: numeratorC Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: numeratorB_1, name: numeratorB

Name: numeratorB Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: numeratorA_1, name: numeratorA

Name: numeratorA Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numeratorA, Num: 1
Globalname: numeratorA, contract_name: VaderMath
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numerator, Num: 1
Globalname: numerator, contract_name: VaderMath
End popogation
TMP_42(uint256) = numeratorC_1 (c)- numeratorA_1
Source address: u
[i]Type for TMP_42

Name: TMP_42 Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_43(uint256) = TMP_42 (c)- numeratorB_1
[i]Type for TMP_43

Name: TMP_43 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
numerator_1(uint256) := TMP_43(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for numerator

Name: numerator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] denominator cleared
Propogating parameters and globals to SSA variables...
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: denominator, Num: 1
Globalname: denominator, contract_name: VaderMath
End popogation
denominator_1(uint256) := y2_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for denominator

Name: denominator Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] TMP_44 cleared
[i] amountIn cleared
Propogating parameters and globals to SSA variables...
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numerator, Num: 1
Globalname: numerator, contract_name: VaderMath
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numerator, Num: 1
Globalname: numerator, contract_name: VaderMath
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: amountIn, Num: 1
Globalname: amountIn, contract_name: VaderMath
End popogation
TMP_44(uint256) = numerator_1 (c)/ denominator_1
lnorm: u rnorm: 0
lnorm: u rnorm: 0
[i]Type for TMP_44

Name: TMP_44 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
amountIn_1(uint256) := TMP_44(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for amountIn

Name: amountIn Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
End popogation
RETURN amountIn_1
RETURN

Name: amountIn Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Source address: u
Source address: u
[i]Type for TMP_89

Name: TMP_89 Function: calculateInGivenOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
RETURN TMP_89
RETURN

Name: TMP_89 Function: calculateInGivenOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
[i] amountOut cleared
[i] path cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: amountOut_1, name: amountOut

Name: amountOut_1 Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountOut_1 Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountOut, Num: 1
Globalname: amountOut, contract_name: VaderRouter
Ssa_name: path_1 (-> []), name: path

Name: path Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: -992

Name: path_1 (-> []) Function: calculateInGivenOut
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: factory_17, name: factory

Name: factory Function: calculateInGivenOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
amountOut_1(uint256) := ϕ(['amountOut_1'])
Phi

Name: amountOut_1 Function: swapTokensForExactTokens
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for amountOut

Name: amountOut Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
path_1 (-> [])(address[]) := ϕ(['path_1 (-> [])'])
Phi
[i]Type for path

Name: path Function: calculateInGivenOut
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
factory_17(IVaderPoolFactory) := ϕ(['factory_13', 'factory_0', 'factory_16', 'factory_10', 'factory_19', 'factory_21', 'factory_15', 'factory_26', 'factory_1', 'factory_24', 'factory_7'])
Phi
[i]Type for factory

Name: factory Function: calculateInGivenOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_85 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: path_1 (-> []), name: path

Name: path Function: calculateInGivenOut
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: path_1 (-> []), name: path

Name: path Function: calculateInGivenOut
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
REF_40 -> LENGTH path_1 (-> [])
[i]Type for REF_40

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_85(bool) = REF_40 == 2
[i]Type for TMP_85

Name: TMP_85 Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_86 cleared
[i] nativeAsset cleared
Propogating parameters and globals to SSA variables...
Ssa_name: factory_17, name: factory

Name: factory Function: calculateInGivenOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: factory_17, name: factory

Name: factory Function: calculateInGivenOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeAsset_1, name: nativeAsset

Name: nativeAsset Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Name: nativeAsset, Num: 1
Globalname: nativeAsset, contract_name: VaderRouter
End popogation
Ssa_name: factory_18, name: factory

Name: factory Function: calculateInGivenOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_86(address) = HIGH_LEVEL_CALL, dest:factory_17(IVaderPoolFactory), function:nativeAsset, arguments:[]  
High Call: nativeAsset
Running querryfc
Found: None
Written func info: IVaderPoolFactory, nativeAsset
Retvar: ('c', ['global:nativeAsset'], ['-1'], 18, "'u'", 'u')
{'global:_owner': 1, 'global:_tokenApprovals': 2, 'global:_owners': 3, 'swap:to': -999, 'mint:to': -998, 'mint:TMP_139': 4, 'global:this': 4, 'None:None': 5, 'mint:foreignAsset': 6, 'swap:_nativeAsset': 7, 'swap:_foreignAsset': 8, 'global:nativeAsset': 9, 'global:foreignAsset': 10, 'global:_ZERO_ADDRESS': 11, 'removeLiquidity:tokenA': -997, 'removeLiquidity:tokenB': -996, 'removeLiquidity:to': -995, 'swapExactTokensForTokens:path': -994, 'swapExactTokensForTokens:to': -993, 'swapTokensForExactTokens:path': -992, 'swapTokensForExactTokens:to': -991, 'calculateInGivenOut:path': -990, 'calculateOutGivenIn:path': -989}
([9], [-1], 18, "'u'", 'u', -1)
[i]Type for TMP_86

Name: TMP_86 Function: calculateInGivenOut
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
factory_18(IVaderPoolFactory) := ϕ(['factory_13', 'factory_16', 'factory_10', 'factory_19', 'factory_21', 'factory_15', 'factory_26', 'factory_1', 'factory_24', 'factory_17', 'factory_7'])
Phi
[i]Type for factory

Name: factory Function: calculateInGivenOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
nativeAsset_1(address) := TMP_86(address)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for nativeAsset

Name: nativeAsset Function: calculateInGivenOut
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
[i] TMP_87 cleared
[i] pool cleared
Propogating parameters and globals to SSA variables...
Ssa_name: path_1 (-> []), name: path

Name: path Function: calculateInGivenOut
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: factory_18, name: factory

Name: factory Function: calculateInGivenOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: path_1 (-> []), name: path

Name: path Function: calculateInGivenOut
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: factory_18, name: factory

Name: factory Function: calculateInGivenOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: pool_1, name: pool

Name: pool Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pool, Num: 1
Globalname: pool, contract_name: VaderRouter
End popogation
Ssa_name: factory_19, name: factory

Name: factory Function: calculateInGivenOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_43(address) -> path_1 (-> [])[0]
INDEX
REFERENCE LEFT VALUE PROPAGATION
Source address: -992
[i]Type for REF_43

Name: path Function: calculateInGivenOut
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_44(address) -> path_1 (-> [])[1]
INDEX
REFERENCE LEFT VALUE PROPAGATION
Source address: -992
[i]Type for REF_44

Name: path Function: calculateInGivenOut
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_87(IVaderPool) = HIGH_LEVEL_CALL, dest:factory_18(IVaderPoolFactory), function:getPool, arguments:['REF_43', 'REF_44']  
High Call: getPool
Running querryfc
Found: None
Written func info: IVaderPoolFactory, getPool
[i]Type for TMP_87

Name: TMP_87 Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
factory_19(IVaderPoolFactory) := ϕ(['factory_13', 'factory_16', 'factory_10', 'factory_19', 'factory_21', 'factory_15', 'factory_26', 'factory_1', 'factory_24', 'factory_18', 'factory_7'])
Phi
[i]Type for factory

Name: factory Function: calculateInGivenOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
pool_1(IVaderPool) := TMP_87(IVaderPool)
asgn
Finance type key: (-1, -1)
[i]Type for pool

Name: pool Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_91 cleared
[i] pool0 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: path_1 (-> []), name: path

Name: path Function: calculateInGivenOut
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: factory_17, name: factory

Name: factory Function: calculateInGivenOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: path_1 (-> []), name: path

Name: path Function: calculateInGivenOut
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: factory_17, name: factory

Name: factory Function: calculateInGivenOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: pool0_1, name: pool0

Name: pool0 Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pool0, Num: 1
Globalname: pool0, contract_name: VaderRouter
End popogation
Ssa_name: factory_20, name: factory

Name: factory Function: calculateInGivenOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_50(address) -> path_1 (-> [])[0]
INDEX
REFERENCE LEFT VALUE PROPAGATION
Source address: -992
[i]Type for REF_50

Name: path Function: calculateInGivenOut
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_51(address) -> path_1 (-> [])[1]
INDEX
REFERENCE LEFT VALUE PROPAGATION
Source address: -992
[i]Type for REF_51

Name: path Function: calculateInGivenOut
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_91(IVaderPool) = HIGH_LEVEL_CALL, dest:factory_17(IVaderPoolFactory), function:getPool, arguments:['REF_50', 'REF_51']  
High Call: getPool
Running querryfc
Found: None
Written func info: IVaderPoolFactory, getPool
[i]Type for TMP_91

Name: TMP_91 Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
factory_20(IVaderPoolFactory) := ϕ(['factory_13', 'factory_16', 'factory_10', 'factory_19', 'factory_21', 'factory_15', 'factory_26', 'factory_1', 'factory_24', 'factory_7'])
Phi
[i]Type for factory

Name: factory Function: calculateInGivenOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
pool0_1(IVaderPool) := TMP_91(IVaderPool)
asgn
Finance type key: (-1, -1)
[i]Type for pool0

Name: pool0 Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_92 cleared
[i] pool1 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: path_1 (-> []), name: path

Name: path Function: calculateInGivenOut
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: factory_20, name: factory

Name: factory Function: calculateInGivenOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: factory_20, name: factory

Name: factory Function: calculateInGivenOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: path_1 (-> []), name: path

Name: path Function: calculateInGivenOut
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: pool1_1, name: pool1

Name: pool1 Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pool1, Num: 1
Globalname: pool1, contract_name: VaderRouter
End popogation
Ssa_name: factory_21, name: factory

Name: factory Function: calculateInGivenOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_53(address) -> path_1 (-> [])[1]
INDEX
REFERENCE LEFT VALUE PROPAGATION
Source address: -992
[i]Type for REF_53

Name: path Function: calculateInGivenOut
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_54(address) -> path_1 (-> [])[2]
INDEX
REFERENCE LEFT VALUE PROPAGATION
Source address: -992
[i]Type for REF_54

Name: path Function: calculateInGivenOut
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_92(IVaderPool) = HIGH_LEVEL_CALL, dest:factory_20(IVaderPoolFactory), function:getPool, arguments:['REF_53', 'REF_54']  
High Call: getPool
Running querryfc
Found: None
Written func info: IVaderPoolFactory, getPool
[i]Type for TMP_92

Name: TMP_92 Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
factory_21(IVaderPoolFactory) := ϕ(['factory_13', 'factory_16', 'factory_10', 'factory_19', 'factory_21', 'factory_15', 'factory_26', 'factory_20', 'factory_1', 'factory_24', 'factory_7'])
Phi
[i]Type for factory

Name: factory Function: calculateInGivenOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
pool1_1(IVaderPool) := TMP_92(IVaderPool)
asgn
Finance type key: (-1, -1)
[i]Type for pool1

Name: pool1 Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] nativeReserve cleared
[i] foreignReserve cleared
Propogating parameters and globals to SSA variables...
Ssa_name: pool_1, name: pool

Name: pool Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pool, Num: 1
Globalname: pool, contract_name: VaderRouter
Ssa_name: pool_1, name: pool

Name: pool Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pool, Num: 1
Globalname: pool, contract_name: VaderRouter
Ssa_name: nativeReserve_1, name: nativeReserve

Name: nativeReserve Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Name: nativeReserve, Num: 1
Globalname: nativeReserve, contract_name: VaderRouter
Ssa_name: foreignReserve_1, name: foreignReserve

Name: foreignReserve Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Name: foreignReserve, Num: 1
Globalname: foreignReserve, contract_name: VaderRouter
End popogation
TUPLE_3(uint112,uint112,uint32) = HIGH_LEVEL_CALL, dest:pool_1(IVaderPool), function:getReserves, arguments:[]  
High Call: getReserves
Running querryfc
Found: None
Written func info: IVaderPool, getReserves
Retvar: ('c', ['global:nativeAsset'], ['-1'], 18, "'u'", 'u')
{'global:_owner': 1, 'global:_tokenApprovals': 2, 'global:_owners': 3, 'swap:to': -999, 'mint:to': -998, 'mint:TMP_139': 4, 'global:this': 4, 'None:None': 5, 'mint:foreignAsset': 6, 'swap:_nativeAsset': 7, 'swap:_foreignAsset': 8, 'global:nativeAsset': 9, 'global:foreignAsset': 10, 'global:_ZERO_ADDRESS': 11, 'removeLiquidity:tokenA': -997, 'removeLiquidity:tokenB': -996, 'removeLiquidity:to': -995, 'swapExactTokensForTokens:path': -994, 'swapExactTokensForTokens:to': -993, 'swapTokensForExactTokens:path': -992, 'swapTokensForExactTokens:to': -991, 'calculateInGivenOut:path': -990, 'calculateOutGivenIn:path': -989}
Retvar: ('c', ['global:foreignAsset'], ['-1'], 6, "'u'", 'u')
{'global:_owner': 1, 'global:_tokenApprovals': 2, 'global:_owners': 3, 'swap:to': -999, 'mint:to': -998, 'mint:TMP_139': 4, 'global:this': 4, 'None:None': 5, 'mint:foreignAsset': 6, 'swap:_nativeAsset': 7, 'swap:_foreignAsset': 8, 'global:nativeAsset': 9, 'global:foreignAsset': 10, 'global:_ZERO_ADDRESS': 11, 'removeLiquidity:tokenA': -997, 'removeLiquidity:tokenB': -996, 'removeLiquidity:to': -995, 'swapExactTokensForTokens:path': -994, 'swapExactTokensForTokens:to': -993, 'swapTokensForExactTokens:path': -992, 'swapTokensForExactTokens:to': -991, 'calculateInGivenOut:path': -990, 'calculateOutGivenIn:path': -989}
[i]Type for TUPLE_3

Name: TUPLE_3 Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
nativeReserve_1(uint256)= UNPACK TUPLE_3 index: 0 
([9], [-1], 18, "'u'", 'u', -1)
[i]Type for nativeReserve

Name: nativeReserve Function: calculateInGivenOut
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
foreignReserve_1(uint256)= UNPACK TUPLE_3 index: 1 
([10], [-1], 6, "'u'", 'u', -1)
[i]Type for foreignReserve

Name: foreignReserve Function: calculateInGivenOut
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_88 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: nativeAsset_1, name: nativeAsset

Name: nativeAsset Function: calculateInGivenOut
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: path_1 (-> []), name: path

Name: path Function: calculateInGivenOut
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeAsset_1, name: nativeAsset

Name: nativeAsset Function: calculateInGivenOut
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: path_1 (-> []), name: path

Name: path Function: calculateInGivenOut
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
REF_46(address) -> path_1 (-> [])[0]
INDEX
REFERENCE LEFT VALUE PROPAGATION
Source address: -992
[i]Type for REF_46

Name: path Function: calculateInGivenOut
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_88(bool) = REF_46 == nativeAsset_1
[i]Type for TMP_88

Name: TMP_88 Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_90 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: foreignReserve_1, name: foreignReserve

Name: foreignReserve Function: calculateInGivenOut
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amountOut_1, name: amountOut

Name: amountOut Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountOut_1 Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountOut, Num: 1
Globalname: amountOut, contract_name: VaderRouter
Ssa_name: nativeReserve_1, name: nativeReserve

Name: nativeReserve Function: calculateInGivenOut
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: foreignReserve_1, name: foreignReserve

Name: foreignReserve Function: calculateInGivenOut
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amountOut_1, name: amountOut

Name: amountOut_1 Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountOut_1 Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountOut, Num: 1
Globalname: amountOut, contract_name: VaderRouter
Ssa_name: nativeReserve_1, name: nativeReserve

Name: nativeReserve Function: calculateInGivenOut
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
End popogation
TMP_90(uint256) = LIBRARY_CALL, dest:VaderMath, function:VaderMath.calculateSwapReverse(uint256,uint256,uint256), arguments:['amountOut_1', 'foreignReserve_1', 'nativeReserve_1'] 
Found: calculateSwapReverse

Name: amountOut_1 Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: foreignReserve Function: calculateInGivenOut
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: nativeReserve Function: calculateInGivenOut
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
High level cal param_cache
Param: 0
    num: []
    den: []
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [10]
    den: [-1]
    norm: 6
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [9]
    den: [-1]
    norm: 18
    link: None
    fields: []
    fintype: -1
New param cache [[[], [], 'u', None, [], -1, 'u', 'u'], [[10], [-1], 6, None, [], -1, 'u', "'u'"], [[9], [-1], 18, None, [], -1, 'u', "'u'"]]
Old param cache: [[[-1], [-1], 'u', None, [], -1, 'u'], [[-1], [-1], 'u', None, [], -1, 'u'], [[-1], [-1], 'u', None, [], -1, 'u']]
[[], [], 'u', None, [], -1, 'u', 'u']

Name: amountOut Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[10], [-1], 6, None, [], -1, 'u', "'u'"]

Name: reserveIn Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
[[9], [-1], 18, None, [], -1, 'u', "'u'"]

Name: reserveOut Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
calculateSwapReverse(uint256,uint256,uint256)
Propogating All
Propogating All
reserveOut_1
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: reserveOut_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
reserveIn_1
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: reserveIn_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
Propogating All
amountOut_1
Ssa_name: amountOut_1, name: amountOut

Name: amountOut_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountOut_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
y2_1
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Propogating All
reserveOut_1
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: reserveOut_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
y4_1
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Propogating All
y4_1
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
reserveOut_1
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: reserveOut_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
reserveIn_1
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: reserveIn_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
XY_1
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
reserveIn_1
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: reserveIn_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
y2_1
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Propogating All
XY_1
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
numeratorC_1
Ssa_name: numeratorC_1, name: numeratorC

Name: numeratorC Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
numeratorB_1
Ssa_name: numeratorB_1, name: numeratorB

Name: numeratorB Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 2
Fields: 
Finance Type: undef
numeratorA_1
Ssa_name: numeratorA_1, name: numeratorA

Name: numeratorA Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
y2_1
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Propogating All
numerator_1
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
denominator_1
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Propogating All
amountIn_1
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_31 cleared
[i] XY cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: XY, Num: 1
Globalname: XY, contract_name: VaderMath
End popogation
TMP_31(uint256) = reserveIn_1 (c)* reserveOut_1
lnorm: 6 rnorm: 18
Source address: u
Source address: u
Source address: u
[i]Type for TMP_31

Name: TMP_31 Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
XY_1(uint256) := TMP_31(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for XY

Name: XY Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_32 cleared
[i] y2 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountOut_1, name: amountOut

Name: amountOut_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountOut_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountOut, Num: 1
Globalname: amountOut, contract_name: VaderMath
Ssa_name: amountOut_1, name: amountOut

Name: amountOut_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountOut_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountOut, Num: 1
Globalname: amountOut, contract_name: VaderMath
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: y2, Num: 1
Globalname: y2, contract_name: VaderMath
End popogation
TMP_32(uint256) = amountOut_1 (c)* 2
lnorm: u rnorm: 0
Source address: u
[i]Type for TMP_32

Name: TMP_32 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
y2_1(uint256) := TMP_32(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] TMP_33 cleared
[i] y4 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: y4, Num: 1
Globalname: y4, contract_name: VaderMath
End popogation
TMP_33(uint256) = y2_1 (c)* 2
lnorm: 0 rnorm: 0
Source address: u
[i]Type for TMP_33

Name: TMP_33 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
y4_1(uint256) := TMP_33(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
[i] TMP_34 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
End popogation
TMP_34(bool) = y4_1 < reserveOut_1
lnorm: 0 rnorm: 18
[i]Type for TMP_34

Name: TMP_34 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_35(None) = SOLIDITY_CALL require(bool,string)(TMP_34,VaderMath::calculateSwapReverse: Desired Output Exceeds Maximum Output Possible (1/4 of Liquidity Pool))
[i]Type for TMP_35

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_36 cleared
[i] TMP_37 cleared
[i] TMP_38 cleared
[i] TMP_39 cleared
[i] TMP_40 cleared
[i] numeratorA cleared
Propogating parameters and globals to SSA variables...
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: numeratorA_1, name: numeratorA

Name: numeratorA Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numeratorA, Num: 1
Globalname: numeratorA, contract_name: VaderMath
End popogation
TMP_36(uint256) = INTERNAL_CALL, VaderMath.root(uint256)(XY_1)
New param cache [[[10, 9], [-1], 24, None, [], -1, 'u', 'u']]
Old param cache: [[[], [], 'u', None, [], -1, 'u']]
[[10, 9], [-1], 24, None, [], -1, 'u', 'u']

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
root(uint256)
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
Propogating All
c_2
Ssa_name: c_2, name: c

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Propogating All
Propogating All
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_38', 'XY_1'])
Phi
[i]Type for a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_49 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_49(bool) = a_1 > 3
lnorm: 24 rnorm: 0
[i]Type for TMP_49

Name: TMP_49 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_56 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_56(bool) = a_1 != 0
[i]Type for TMP_56

Name: TMP_56 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_4, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: c, Num: 4
Globalname: c, contract_name: VaderMath
End popogation
c_4(uint256) := 1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: c_1, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 1
Globalname: c, contract_name: VaderMath
End popogation
c_1(uint256) := a_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_50 cleared
[i] TMP_51 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: VaderMath
End popogation
TMP_50(uint256) = a_1 (c)/ 2
lnorm: 24 rnorm: 0
Source address: u
lnorm: 24 rnorm: 0
10
9
-1
[i]Type for TMP_50

Name: TMP_50 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_51(uint256) = TMP_50 (c)+ 1
Source address: u
[i]Type for TMP_51

Name: TMP_51 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_51(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
[i] x cleared
[i] TMP_52 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
End popogation
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
c_2(uint256) := ϕ(['c_1', 'c_3'])
Phi

Name: c Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for c

Name: c Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
x_2(uint256) := ϕ(['x_3', 'x_1'])
Phi

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_52(bool) = x_2 < c_2
lnorm: 0 rnorm: 24
[i]Type for TMP_52

Name: TMP_52 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: c_3, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: c, Num: 3
Globalname: c, contract_name: VaderMath
End popogation
c_3(uint256) := x_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] TMP_53 cleared
[i] TMP_54 cleared
[i] TMP_55 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: x_3, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 3
Globalname: x, contract_name: VaderMath
End popogation
TMP_53(uint256) = a_1 (c)/ x_2
lnorm: 24 rnorm: 0
Source address: u
Source address: u
lnorm: 24 rnorm: 0
Source address: u
10
-1
[i]Type for TMP_53

Name: TMP_53 Function: root
Num: 10
Den: -1
Address: u
Norm: 24
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_54(uint256) = TMP_53 (c)+ x_2
9
[i]Type for TMP_54

Name: TMP_54 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_55(uint256) = TMP_54 (c)/ 2
lnorm: u rnorm: 0
lnorm: u rnorm: 0
[i]Type for TMP_55

Name: TMP_55 Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
x_3(uint256) := TMP_55(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_38', 'XY_1'])
Phi
[i]Type for a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_49 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_49(bool) = a_1 > 3
lnorm: 24 rnorm: 0
[i]Type for TMP_49

Name: TMP_49 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_56 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_56(bool) = a_1 != 0
[i]Type for TMP_56

Name: TMP_56 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_4, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: c, Num: 4
Globalname: c, contract_name: VaderMath
End popogation
c_4(uint256) := 1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: c_1, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 1
Globalname: c, contract_name: VaderMath
End popogation
c_1(uint256) := a_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_50 cleared
[i] TMP_51 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: VaderMath
End popogation
TMP_50(uint256) = a_1 (c)/ 2
lnorm: 24 rnorm: 0
Source address: u
lnorm: 24 rnorm: 0
10
9
-1
[i]Type for TMP_50

Name: TMP_50 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_51(uint256) = TMP_50 (c)+ 1
Source address: u
[i]Type for TMP_51

Name: TMP_51 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_51(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
[i] x cleared
[i] TMP_52 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
End popogation
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
c_2(uint256) := ϕ(['c_1', 'c_3'])
Phi

Name: c Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for c

Name: c Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
x_2(uint256) := ϕ(['x_3', 'x_1'])
Phi

Name: x Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for x

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
TMP_52(bool) = x_2 < c_2
lnorm: 0 rnorm: 24
10
9
-1
[i]Type for TMP_52

Name: TMP_52 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: c_3, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: c, Num: 3
Globalname: c, contract_name: VaderMath
End popogation
c_3(uint256) := x_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
[i] TMP_53 cleared
[i] TMP_54 cleared
[i] TMP_55 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: x_3, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 3
Globalname: x, contract_name: VaderMath
End popogation
TMP_53(uint256) = a_1 (c)/ x_2
lnorm: 24 rnorm: 0
Source address: u
Source address: u
lnorm: 24 rnorm: 0
Source address: u
Source address: u
[i]Type for TMP_53

Name: TMP_53 Function: root
Num: -1
Den: -1
Address: u
Norm: 24
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
TMP_54(uint256) = TMP_53 (c)+ x_2
Source address: u
[i]Type for TMP_54

Name: TMP_54 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
XXXX
TMP_55(uint256) = TMP_54 (c)/ 2
lnorm: 0 rnorm: 0
Source address: u
lnorm: 0 rnorm: 0
10
9
-1
[i]Type for TMP_55

Name: TMP_55 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
x_3(uint256) := TMP_55(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_36

Name: TMP_36 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_37(uint256) = reserveOut_1 (c)- y4_1
Source address: u
[i]Type for TMP_37

Name: TMP_37 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
TMP_38(uint256) = reserveIn_1 (c)* TMP_37
lnorm: 6 rnorm: 0
Source address: u
[i]Type for TMP_38

Name: TMP_38 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
TMP_39(uint256) = INTERNAL_CALL, VaderMath.root(uint256)(TMP_38)
New param cache [[[10], [-1], 6, None, [], -1, 'u', 4]]
Old param cache: [[[], [], 'u', None, [], -1, 'u']]
[[10], [-1], 6, None, [], -1, 'u', 4]

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
root(uint256)
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
Propogating All
c_2
Ssa_name: c_2, name: c

Name: c Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Propogating All
Propogating All
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_38', 'XY_1'])
Phi
[i]Type for a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
[i] TMP_49 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
End popogation
TMP_49(bool) = a_1 > 3
lnorm: 6 rnorm: 0
[i]Type for TMP_49

Name: TMP_49 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_56 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
End popogation
TMP_56(bool) = a_1 != 0
[i]Type for TMP_56

Name: TMP_56 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_4, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: c, Num: 4
Globalname: c, contract_name: VaderMath
End popogation
c_4(uint256) := 1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: c_1, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 1
Globalname: c, contract_name: VaderMath
End popogation
c_1(uint256) := a_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_50 cleared
[i] TMP_51 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: VaderMath
End popogation
TMP_50(uint256) = a_1 (c)/ 2
lnorm: 6 rnorm: 0
Source address: u
lnorm: 6 rnorm: 0
10
-1
[i]Type for TMP_50

Name: TMP_50 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_51(uint256) = TMP_50 (c)+ 1
Source address: u
[i]Type for TMP_51

Name: TMP_51 Function: root
Num: 10
Den: -1
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_51(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
[i] x cleared
[i] TMP_52 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
End popogation
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
c_2(uint256) := ϕ(['c_1', 'c_3'])
Phi

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef

Name: c Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for c

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
x_2(uint256) := ϕ(['x_3', 'x_1'])
Phi

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for x

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
TMP_52(bool) = x_2 < c_2
lnorm: 0 rnorm: 6
[i]Type for TMP_52

Name: TMP_52 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: c_3, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: c, Num: 3
Globalname: c, contract_name: VaderMath
End popogation
c_3(uint256) := x_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
[i] TMP_53 cleared
[i] TMP_54 cleared
[i] TMP_55 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: x_3, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 3
Globalname: x, contract_name: VaderMath
End popogation
TMP_53(uint256) = a_1 (c)/ x_2
lnorm: 6 rnorm: 0
Source address: u
Source address: u
lnorm: 6 rnorm: 0
Source address: u
-1
9
[i]Type for TMP_53

Name: TMP_53 Function: root
Num: -1
Den: 9
Address: u
Norm: 6
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
TMP_54(uint256) = TMP_53 (c)+ x_2
[i]Type for TMP_54

Name: TMP_54 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_55(uint256) = TMP_54 (c)/ 2
lnorm: u rnorm: 0
lnorm: u rnorm: 0
[i]Type for TMP_55

Name: TMP_55 Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
x_3(uint256) := TMP_55(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_38', 'XY_1'])
Phi
[i]Type for a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
[i] TMP_49 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
End popogation
TMP_49(bool) = a_1 > 3
lnorm: 6 rnorm: 0
[i]Type for TMP_49

Name: TMP_49 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_56 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
End popogation
TMP_56(bool) = a_1 != 0
[i]Type for TMP_56

Name: TMP_56 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_4, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: c, Num: 4
Globalname: c, contract_name: VaderMath
End popogation
c_4(uint256) := 1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: c_1, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 1
Globalname: c, contract_name: VaderMath
End popogation
c_1(uint256) := a_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_50 cleared
[i] TMP_51 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: VaderMath
End popogation
TMP_50(uint256) = a_1 (c)/ 2
lnorm: 6 rnorm: 0
Source address: u
lnorm: 6 rnorm: 0
10
-1
[i]Type for TMP_50

Name: TMP_50 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_51(uint256) = TMP_50 (c)+ 1
Source address: u
[i]Type for TMP_51

Name: TMP_51 Function: root
Num: 10
Den: -1
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_51(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
[i] x cleared
[i] TMP_52 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
End popogation
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
c_2(uint256) := ϕ(['c_1', 'c_3'])
Phi

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef

Name: c Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for c

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
x_2(uint256) := ϕ(['x_3', 'x_1'])
Phi

Name: x Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
TMP_52(bool) = x_2 < c_2
lnorm: 0 rnorm: 6
10
-1
[i]Type for TMP_52

Name: TMP_52 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: c_3, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: c, Num: 3
Globalname: c, contract_name: VaderMath
End popogation
c_3(uint256) := x_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
[i] TMP_53 cleared
[i] TMP_54 cleared
[i] TMP_55 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: x_3, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 3
Globalname: x, contract_name: VaderMath
End popogation
TMP_53(uint256) = a_1 (c)/ x_2
lnorm: 6 rnorm: 0
Source address: u
Source address: u
lnorm: 6 rnorm: 0
Source address: u
Source address: u
[i]Type for TMP_53

Name: TMP_53 Function: root
Num: -1
Den: -1
Address: u
Norm: 6
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
TMP_54(uint256) = TMP_53 (c)+ x_2
Source address: u
[i]Type for TMP_54

Name: TMP_54 Function: root
Num: 10
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
TMP_55(uint256) = TMP_54 (c)/ 2
lnorm: 0 rnorm: 0
Source address: u
lnorm: 0 rnorm: 0
10
-1
[i]Type for TMP_55

Name: TMP_55 Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
x_3(uint256) := TMP_55(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_39

Name: TMP_39 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_40(uint256) = TMP_36 (c)* TMP_39
lnorm: u rnorm: u
[i]Type for TMP_40

Name: TMP_40 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
numeratorA_1(uint256) := TMP_40(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for numeratorA

Name: numeratorA Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_41 cleared
[i] numeratorB cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: numeratorB_1, name: numeratorB

Name: numeratorB Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: numeratorB, Num: 1
Globalname: numeratorB, contract_name: VaderMath
End popogation
TMP_41(uint256) = y2_1 (c)* reserveIn_1
lnorm: 0 rnorm: 6
Source address: u
[i]Type for TMP_41

Name: TMP_41 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
numeratorB_1(uint256) := TMP_41(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for numeratorB

Name: numeratorB Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] numeratorC cleared
Propogating parameters and globals to SSA variables...
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: numeratorC_1, name: numeratorC

Name: numeratorC Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numeratorC, Num: 1
Globalname: numeratorC, contract_name: VaderMath
End popogation
numeratorC_1(uint256) := XY_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for numeratorC

Name: numeratorC Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_42 cleared
[i] TMP_43 cleared
[i] numerator cleared
Propogating parameters and globals to SSA variables...
Ssa_name: numeratorC_1, name: numeratorC

Name: numeratorC Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: numeratorB_1, name: numeratorB

Name: numeratorB Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: numeratorA_1, name: numeratorA

Name: numeratorA Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numeratorA, Num: 1
Globalname: numeratorA, contract_name: VaderMath
Ssa_name: numeratorC_1, name: numeratorC

Name: numeratorC Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: numeratorB_1, name: numeratorB

Name: numeratorB Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: numeratorA_1, name: numeratorA

Name: numeratorA Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numeratorA, Num: 1
Globalname: numeratorA, contract_name: VaderMath
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numerator, Num: 1
Globalname: numerator, contract_name: VaderMath
End popogation
TMP_42(uint256) = numeratorC_1 (c)- numeratorA_1
Source address: u
[i]Type for TMP_42

Name: TMP_42 Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_43(uint256) = TMP_42 (c)- numeratorB_1
[i]Type for TMP_43

Name: TMP_43 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
numerator_1(uint256) := TMP_43(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for numerator

Name: numerator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] denominator cleared
Propogating parameters and globals to SSA variables...
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: denominator, Num: 1
Globalname: denominator, contract_name: VaderMath
End popogation
denominator_1(uint256) := y2_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for denominator

Name: denominator Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] TMP_44 cleared
[i] amountIn cleared
Propogating parameters and globals to SSA variables...
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numerator, Num: 1
Globalname: numerator, contract_name: VaderMath
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numerator, Num: 1
Globalname: numerator, contract_name: VaderMath
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: amountIn, Num: 1
Globalname: amountIn, contract_name: VaderMath
End popogation
TMP_44(uint256) = numerator_1 (c)/ denominator_1
lnorm: u rnorm: 0
lnorm: u rnorm: 0
[i]Type for TMP_44

Name: TMP_44 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
amountIn_1(uint256) := TMP_44(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for amountIn

Name: amountIn Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
End popogation
RETURN amountIn_1
RETURN

Name: amountIn Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_31 cleared
[i] XY cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: XY, Num: 1
Globalname: XY, contract_name: VaderMath
End popogation
TMP_31(uint256) = reserveIn_1 (c)* reserveOut_1
lnorm: 6 rnorm: 18
Source address: u
Source address: u
Source address: u
[i]Type for TMP_31

Name: TMP_31 Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
XY_1(uint256) := TMP_31(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for XY

Name: XY Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_32 cleared
[i] y2 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountOut_1, name: amountOut

Name: amountOut_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountOut_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountOut, Num: 1
Globalname: amountOut, contract_name: VaderMath
Ssa_name: amountOut_1, name: amountOut

Name: amountOut_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountOut_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountOut, Num: 1
Globalname: amountOut, contract_name: VaderMath
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: y2, Num: 1
Globalname: y2, contract_name: VaderMath
End popogation
TMP_32(uint256) = amountOut_1 (c)* 2
lnorm: u rnorm: 0
Source address: u
[i]Type for TMP_32

Name: TMP_32 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
y2_1(uint256) := TMP_32(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] TMP_33 cleared
[i] y4 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: y4, Num: 1
Globalname: y4, contract_name: VaderMath
End popogation
TMP_33(uint256) = y2_1 (c)* 2
lnorm: 0 rnorm: 0
Source address: u
[i]Type for TMP_33

Name: TMP_33 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
y4_1(uint256) := TMP_33(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
[i] TMP_34 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
End popogation
TMP_34(bool) = y4_1 < reserveOut_1
lnorm: 0 rnorm: 18
[i]Type for TMP_34

Name: TMP_34 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_35(None) = SOLIDITY_CALL require(bool,string)(TMP_34,VaderMath::calculateSwapReverse: Desired Output Exceeds Maximum Output Possible (1/4 of Liquidity Pool))
[i]Type for TMP_35

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_36 cleared
[i] TMP_37 cleared
[i] TMP_38 cleared
[i] TMP_39 cleared
[i] TMP_40 cleared
[i] numeratorA cleared
Propogating parameters and globals to SSA variables...
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: numeratorA_1, name: numeratorA

Name: numeratorA Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numeratorA, Num: 1
Globalname: numeratorA, contract_name: VaderMath
End popogation
TMP_36(uint256) = INTERNAL_CALL, VaderMath.root(uint256)(XY_1)
New param cache [[[10, 9], [-1], 24, None, [], -1, 'u', 'u']]
Old param cache: [[[], [], 'u', None, [], -1, 'u']]
[[10, 9], [-1], 24, None, [], -1, 'u', 'u']

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
root(uint256)
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
Propogating All
c_2
Ssa_name: c_2, name: c

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Propogating All
Propogating All
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_38', 'XY_1'])
Phi
[i]Type for a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_49 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_49(bool) = a_1 > 3
lnorm: 24 rnorm: 0
[i]Type for TMP_49

Name: TMP_49 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_56 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_56(bool) = a_1 != 0
[i]Type for TMP_56

Name: TMP_56 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_4, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: c, Num: 4
Globalname: c, contract_name: VaderMath
End popogation
c_4(uint256) := 1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: c_1, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 1
Globalname: c, contract_name: VaderMath
End popogation
c_1(uint256) := a_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_50 cleared
[i] TMP_51 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: VaderMath
End popogation
TMP_50(uint256) = a_1 (c)/ 2
lnorm: 24 rnorm: 0
Source address: u
lnorm: 24 rnorm: 0
10
9
-1
[i]Type for TMP_50

Name: TMP_50 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_51(uint256) = TMP_50 (c)+ 1
Source address: u
[i]Type for TMP_51

Name: TMP_51 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_51(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
[i] x cleared
[i] TMP_52 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
End popogation
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
c_2(uint256) := ϕ(['c_1', 'c_3'])
Phi

Name: c Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for c

Name: c Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
x_2(uint256) := ϕ(['x_3', 'x_1'])
Phi

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_52(bool) = x_2 < c_2
lnorm: 0 rnorm: 24
[i]Type for TMP_52

Name: TMP_52 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: c_3, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: c, Num: 3
Globalname: c, contract_name: VaderMath
End popogation
c_3(uint256) := x_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] TMP_53 cleared
[i] TMP_54 cleared
[i] TMP_55 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: x_3, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 3
Globalname: x, contract_name: VaderMath
End popogation
TMP_53(uint256) = a_1 (c)/ x_2
lnorm: 24 rnorm: 0
Source address: u
Source address: u
lnorm: 24 rnorm: 0
Source address: u
9
-1
[i]Type for TMP_53

Name: TMP_53 Function: root
Num: 9
Den: -1
Address: u
Norm: 24
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_54(uint256) = TMP_53 (c)+ x_2
10
10
-1
lnorm: 24 rnorm: 0
Source address: u
[i]Type for TMP_54

Name: TMP_54 Function: root
Num: 10
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
TMP_55(uint256) = TMP_54 (c)/ 2
lnorm: 0 rnorm: 0
Source address: u
lnorm: 0 rnorm: 0
10
-1
[i]Type for TMP_55

Name: TMP_55 Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
x_3(uint256) := TMP_55(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_38', 'XY_1'])
Phi
[i]Type for a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_49 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_49(bool) = a_1 > 3
lnorm: 24 rnorm: 0
[i]Type for TMP_49

Name: TMP_49 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_56 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_56(bool) = a_1 != 0
[i]Type for TMP_56

Name: TMP_56 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_4, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: c, Num: 4
Globalname: c, contract_name: VaderMath
End popogation
c_4(uint256) := 1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: c_1, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 1
Globalname: c, contract_name: VaderMath
End popogation
c_1(uint256) := a_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_50 cleared
[i] TMP_51 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: VaderMath
End popogation
TMP_50(uint256) = a_1 (c)/ 2
lnorm: 24 rnorm: 0
Source address: u
lnorm: 24 rnorm: 0
10
9
-1
[i]Type for TMP_50

Name: TMP_50 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_51(uint256) = TMP_50 (c)+ 1
Source address: u
[i]Type for TMP_51

Name: TMP_51 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_51(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
[i] x cleared
[i] TMP_52 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
End popogation
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
c_2(uint256) := ϕ(['c_1', 'c_3'])
Phi

Name: c Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for c

Name: c Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
x_2(uint256) := ϕ(['x_3', 'x_1'])
Phi

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_52(bool) = x_2 < c_2
lnorm: 0 rnorm: 24
[i]Type for TMP_52

Name: TMP_52 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: c_3, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: c, Num: 3
Globalname: c, contract_name: VaderMath
End popogation
c_3(uint256) := x_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] TMP_53 cleared
[i] TMP_54 cleared
[i] TMP_55 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: x_3, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 3
Globalname: x, contract_name: VaderMath
End popogation
TMP_53(uint256) = a_1 (c)/ x_2
lnorm: 24 rnorm: 0
Source address: u
Source address: u
lnorm: 24 rnorm: 0
Source address: u
9
-1
[i]Type for TMP_53

Name: TMP_53 Function: root
Num: 9
Den: -1
Address: u
Norm: 24
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_54(uint256) = TMP_53 (c)+ x_2
10
10
-1
lnorm: 24 rnorm: 0
Source address: u
[i]Type for TMP_54

Name: TMP_54 Function: root
Num: 10
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
TMP_55(uint256) = TMP_54 (c)/ 2
lnorm: 0 rnorm: 0
Source address: u
lnorm: 0 rnorm: 0
10
-1
[i]Type for TMP_55

Name: TMP_55 Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
x_3(uint256) := TMP_55(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_36

Name: TMP_36 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_37(uint256) = reserveOut_1 (c)- y4_1
Source address: u
[i]Type for TMP_37

Name: TMP_37 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
TMP_38(uint256) = reserveIn_1 (c)* TMP_37
lnorm: 6 rnorm: 0
Source address: u
[i]Type for TMP_38

Name: TMP_38 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
TMP_39(uint256) = INTERNAL_CALL, VaderMath.root(uint256)(TMP_38)
New param cache [[[10], [-1], 6, None, [], -1, 'u', 4]]
Old param cache: [[[], [], 'u', None, [], -1, 'u']]
[[10], [-1], 6, None, [], -1, 'u', 4]

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
root(uint256)
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
Propogating All
c_2
Ssa_name: c_2, name: c

Name: c Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Propogating All
Propogating All
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_38', 'XY_1'])
Phi
[i]Type for a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
[i] TMP_49 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
End popogation
TMP_49(bool) = a_1 > 3
lnorm: 6 rnorm: 0
[i]Type for TMP_49

Name: TMP_49 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_56 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
End popogation
TMP_56(bool) = a_1 != 0
[i]Type for TMP_56

Name: TMP_56 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_4, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: c, Num: 4
Globalname: c, contract_name: VaderMath
End popogation
c_4(uint256) := 1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: c_1, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 1
Globalname: c, contract_name: VaderMath
End popogation
c_1(uint256) := a_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_50 cleared
[i] TMP_51 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: VaderMath
End popogation
TMP_50(uint256) = a_1 (c)/ 2
lnorm: 6 rnorm: 0
Source address: u
lnorm: 6 rnorm: 0
10
-1
[i]Type for TMP_50

Name: TMP_50 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_51(uint256) = TMP_50 (c)+ 1
Source address: u
[i]Type for TMP_51

Name: TMP_51 Function: root
Num: 10
Den: -1
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_51(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
[i] x cleared
[i] TMP_52 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
End popogation
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
c_2(uint256) := ϕ(['c_1', 'c_3'])
Phi

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for c

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
x_2(uint256) := ϕ(['x_3', 'x_1'])
Phi

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_52(bool) = x_2 < c_2
lnorm: 0 rnorm: 6
10
-1
[i]Type for TMP_52

Name: TMP_52 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: c_3, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: c, Num: 3
Globalname: c, contract_name: VaderMath
End popogation
c_3(uint256) := x_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] TMP_53 cleared
[i] TMP_54 cleared
[i] TMP_55 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: x_3, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 3
Globalname: x, contract_name: VaderMath
End popogation
TMP_53(uint256) = a_1 (c)/ x_2
lnorm: 6 rnorm: 0
Source address: u
Source address: u
lnorm: 6 rnorm: 0
Source address: u
Source address: u
[i]Type for TMP_53

Name: TMP_53 Function: root
Num: -1
Den: -1
Address: u
Norm: 6
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_54(uint256) = TMP_53 (c)+ x_2
Source address: u
[i]Type for TMP_54

Name: TMP_54 Function: root
Num: 10
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
TMP_55(uint256) = TMP_54 (c)/ 2
lnorm: 0 rnorm: 0
Source address: u
lnorm: 0 rnorm: 0
10
-1
[i]Type for TMP_55

Name: TMP_55 Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
x_3(uint256) := TMP_55(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_38', 'XY_1'])
Phi
[i]Type for a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
[i] TMP_49 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
End popogation
TMP_49(bool) = a_1 > 3
lnorm: 6 rnorm: 0
[i]Type for TMP_49

Name: TMP_49 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_56 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
End popogation
TMP_56(bool) = a_1 != 0
[i]Type for TMP_56

Name: TMP_56 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_4, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: c, Num: 4
Globalname: c, contract_name: VaderMath
End popogation
c_4(uint256) := 1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: c_1, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 1
Globalname: c, contract_name: VaderMath
End popogation
c_1(uint256) := a_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_50 cleared
[i] TMP_51 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: VaderMath
End popogation
TMP_50(uint256) = a_1 (c)/ 2
lnorm: 6 rnorm: 0
Source address: u
lnorm: 6 rnorm: 0
10
-1
[i]Type for TMP_50

Name: TMP_50 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_51(uint256) = TMP_50 (c)+ 1
Source address: u
[i]Type for TMP_51

Name: TMP_51 Function: root
Num: 10
Den: -1
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_51(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
[i] x cleared
[i] TMP_52 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
End popogation
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
c_2(uint256) := ϕ(['c_1', 'c_3'])
Phi

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for c

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
x_2(uint256) := ϕ(['x_3', 'x_1'])
Phi

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_52(bool) = x_2 < c_2
lnorm: 0 rnorm: 6
10
-1
[i]Type for TMP_52

Name: TMP_52 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: c_3, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: c, Num: 3
Globalname: c, contract_name: VaderMath
End popogation
c_3(uint256) := x_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] TMP_53 cleared
[i] TMP_54 cleared
[i] TMP_55 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: x_3, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 3
Globalname: x, contract_name: VaderMath
End popogation
TMP_53(uint256) = a_1 (c)/ x_2
lnorm: 6 rnorm: 0
Source address: u
Source address: u
lnorm: 6 rnorm: 0
Source address: u
Source address: u
[i]Type for TMP_53

Name: TMP_53 Function: root
Num: -1
Den: -1
Address: u
Norm: 6
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_54(uint256) = TMP_53 (c)+ x_2
Source address: u
[i]Type for TMP_54

Name: TMP_54 Function: root
Num: 10
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
TMP_55(uint256) = TMP_54 (c)/ 2
lnorm: 0 rnorm: 0
Source address: u
lnorm: 0 rnorm: 0
10
-1
[i]Type for TMP_55

Name: TMP_55 Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
x_3(uint256) := TMP_55(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_39

Name: TMP_39 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_40(uint256) = TMP_36 (c)* TMP_39
lnorm: u rnorm: u
[i]Type for TMP_40

Name: TMP_40 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
numeratorA_1(uint256) := TMP_40(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for numeratorA

Name: numeratorA Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_41 cleared
[i] numeratorB cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: numeratorB_1, name: numeratorB

Name: numeratorB Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: numeratorB, Num: 1
Globalname: numeratorB, contract_name: VaderMath
End popogation
TMP_41(uint256) = y2_1 (c)* reserveIn_1
lnorm: 0 rnorm: 6
Source address: u
[i]Type for TMP_41

Name: TMP_41 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
numeratorB_1(uint256) := TMP_41(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for numeratorB

Name: numeratorB Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] numeratorC cleared
Propogating parameters and globals to SSA variables...
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: numeratorC_1, name: numeratorC

Name: numeratorC Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numeratorC, Num: 1
Globalname: numeratorC, contract_name: VaderMath
End popogation
numeratorC_1(uint256) := XY_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for numeratorC

Name: numeratorC Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_42 cleared
[i] TMP_43 cleared
[i] numerator cleared
Propogating parameters and globals to SSA variables...
Ssa_name: numeratorC_1, name: numeratorC

Name: numeratorC Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: numeratorB_1, name: numeratorB

Name: numeratorB Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: numeratorA_1, name: numeratorA

Name: numeratorA Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numeratorA, Num: 1
Globalname: numeratorA, contract_name: VaderMath
Ssa_name: numeratorC_1, name: numeratorC

Name: numeratorC Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: numeratorB_1, name: numeratorB

Name: numeratorB Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: numeratorA_1, name: numeratorA

Name: numeratorA Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numeratorA, Num: 1
Globalname: numeratorA, contract_name: VaderMath
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numerator, Num: 1
Globalname: numerator, contract_name: VaderMath
End popogation
TMP_42(uint256) = numeratorC_1 (c)- numeratorA_1
Source address: u
[i]Type for TMP_42

Name: TMP_42 Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_43(uint256) = TMP_42 (c)- numeratorB_1
[i]Type for TMP_43

Name: TMP_43 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
numerator_1(uint256) := TMP_43(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for numerator

Name: numerator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] denominator cleared
Propogating parameters and globals to SSA variables...
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: denominator, Num: 1
Globalname: denominator, contract_name: VaderMath
End popogation
denominator_1(uint256) := y2_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for denominator

Name: denominator Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] TMP_44 cleared
[i] amountIn cleared
Propogating parameters and globals to SSA variables...
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numerator, Num: 1
Globalname: numerator, contract_name: VaderMath
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numerator, Num: 1
Globalname: numerator, contract_name: VaderMath
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: amountIn, Num: 1
Globalname: amountIn, contract_name: VaderMath
End popogation
TMP_44(uint256) = numerator_1 (c)/ denominator_1
lnorm: u rnorm: 0
lnorm: u rnorm: 0
[i]Type for TMP_44

Name: TMP_44 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
amountIn_1(uint256) := TMP_44(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for amountIn

Name: amountIn Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
End popogation
RETURN amountIn_1
RETURN

Name: amountIn Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Source address: u
Source address: u
[i]Type for TMP_90

Name: TMP_90 Function: calculateInGivenOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
RETURN TMP_90
RETURN

Name: TMP_90 Function: calculateInGivenOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
[i] nativeReserve0 cleared
[i] foreignReserve0 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: pool0_1, name: pool0

Name: pool0 Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pool0, Num: 1
Globalname: pool0, contract_name: VaderRouter
Ssa_name: pool0_1, name: pool0

Name: pool0 Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pool0, Num: 1
Globalname: pool0, contract_name: VaderRouter
Ssa_name: nativeReserve0_1, name: nativeReserve0

Name: nativeReserve0 Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Name: nativeReserve0, Num: 1
Globalname: nativeReserve0, contract_name: VaderRouter
Ssa_name: foreignReserve0_1, name: foreignReserve0

Name: foreignReserve0 Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Name: foreignReserve0, Num: 1
Globalname: foreignReserve0, contract_name: VaderRouter
End popogation
TUPLE_4(uint112,uint112,uint32) = HIGH_LEVEL_CALL, dest:pool0_1(IVaderPool), function:getReserves, arguments:[]  
High Call: getReserves
Running querryfc
Found: None
Written func info: IVaderPool, getReserves
Retvar: ('c', ['global:nativeAsset'], ['-1'], 18, "'u'", 'u')
{'global:_owner': 1, 'global:_tokenApprovals': 2, 'global:_owners': 3, 'swap:to': -999, 'mint:to': -998, 'mint:TMP_139': 4, 'global:this': 4, 'None:None': 5, 'mint:foreignAsset': 6, 'swap:_nativeAsset': 7, 'swap:_foreignAsset': 8, 'global:nativeAsset': 9, 'global:foreignAsset': 10, 'global:_ZERO_ADDRESS': 11, 'removeLiquidity:tokenA': -997, 'removeLiquidity:tokenB': -996, 'removeLiquidity:to': -995, 'swapExactTokensForTokens:path': -994, 'swapExactTokensForTokens:to': -993, 'swapTokensForExactTokens:path': -992, 'swapTokensForExactTokens:to': -991, 'calculateInGivenOut:path': -990, 'calculateOutGivenIn:path': -989}
Retvar: ('c', ['global:foreignAsset'], ['-1'], 6, "'u'", 'u')
{'global:_owner': 1, 'global:_tokenApprovals': 2, 'global:_owners': 3, 'swap:to': -999, 'mint:to': -998, 'mint:TMP_139': 4, 'global:this': 4, 'None:None': 5, 'mint:foreignAsset': 6, 'swap:_nativeAsset': 7, 'swap:_foreignAsset': 8, 'global:nativeAsset': 9, 'global:foreignAsset': 10, 'global:_ZERO_ADDRESS': 11, 'removeLiquidity:tokenA': -997, 'removeLiquidity:tokenB': -996, 'removeLiquidity:to': -995, 'swapExactTokensForTokens:path': -994, 'swapExactTokensForTokens:to': -993, 'swapTokensForExactTokens:path': -992, 'swapTokensForExactTokens:to': -991, 'calculateInGivenOut:path': -990, 'calculateOutGivenIn:path': -989}
[i]Type for TUPLE_4

Name: TUPLE_4 Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
nativeReserve0_1(uint256)= UNPACK TUPLE_4 index: 0 
([9], [-1], 18, "'u'", 'u', -1)
[i]Type for nativeReserve0

Name: nativeReserve0 Function: calculateInGivenOut
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
foreignReserve0_1(uint256)= UNPACK TUPLE_4 index: 1 
([10], [-1], 6, "'u'", 'u', -1)
[i]Type for foreignReserve0

Name: foreignReserve0 Function: calculateInGivenOut
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] nativeReserve1 cleared
[i] foreignReserve1 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: pool1_1, name: pool1

Name: pool1 Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pool1, Num: 1
Globalname: pool1, contract_name: VaderRouter
Ssa_name: pool1_1, name: pool1

Name: pool1 Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pool1, Num: 1
Globalname: pool1, contract_name: VaderRouter
Ssa_name: nativeReserve1_1, name: nativeReserve1

Name: nativeReserve1 Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Name: nativeReserve1, Num: 1
Globalname: nativeReserve1, contract_name: VaderRouter
Ssa_name: foreignReserve1_1, name: foreignReserve1

Name: foreignReserve1 Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Name: foreignReserve1, Num: 1
Globalname: foreignReserve1, contract_name: VaderRouter
End popogation
TUPLE_5(uint112,uint112,uint32) = HIGH_LEVEL_CALL, dest:pool1_1(IVaderPool), function:getReserves, arguments:[]  
High Call: getReserves
Running querryfc
Found: None
Written func info: IVaderPool, getReserves
Retvar: ('c', ['global:nativeAsset'], ['-1'], 18, "'u'", 'u')
{'global:_owner': 1, 'global:_tokenApprovals': 2, 'global:_owners': 3, 'swap:to': -999, 'mint:to': -998, 'mint:TMP_139': 4, 'global:this': 4, 'None:None': 5, 'mint:foreignAsset': 6, 'swap:_nativeAsset': 7, 'swap:_foreignAsset': 8, 'global:nativeAsset': 9, 'global:foreignAsset': 10, 'global:_ZERO_ADDRESS': 11, 'removeLiquidity:tokenA': -997, 'removeLiquidity:tokenB': -996, 'removeLiquidity:to': -995, 'swapExactTokensForTokens:path': -994, 'swapExactTokensForTokens:to': -993, 'swapTokensForExactTokens:path': -992, 'swapTokensForExactTokens:to': -991, 'calculateInGivenOut:path': -990, 'calculateOutGivenIn:path': -989}
Retvar: ('c', ['global:foreignAsset'], ['-1'], 6, "'u'", 'u')
{'global:_owner': 1, 'global:_tokenApprovals': 2, 'global:_owners': 3, 'swap:to': -999, 'mint:to': -998, 'mint:TMP_139': 4, 'global:this': 4, 'None:None': 5, 'mint:foreignAsset': 6, 'swap:_nativeAsset': 7, 'swap:_foreignAsset': 8, 'global:nativeAsset': 9, 'global:foreignAsset': 10, 'global:_ZERO_ADDRESS': 11, 'removeLiquidity:tokenA': -997, 'removeLiquidity:tokenB': -996, 'removeLiquidity:to': -995, 'swapExactTokensForTokens:path': -994, 'swapExactTokensForTokens:to': -993, 'swapTokensForExactTokens:path': -992, 'swapTokensForExactTokens:to': -991, 'calculateInGivenOut:path': -990, 'calculateOutGivenIn:path': -989}
[i]Type for TUPLE_5

Name: TUPLE_5 Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
nativeReserve1_1(uint256)= UNPACK TUPLE_5 index: 0 
([9], [-1], 18, "'u'", 'u', -1)
[i]Type for nativeReserve1

Name: nativeReserve1 Function: calculateInGivenOut
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
foreignReserve1_1(uint256)= UNPACK TUPLE_5 index: 1 
([10], [-1], 6, "'u'", 'u', -1)
[i]Type for foreignReserve1

Name: foreignReserve1 Function: calculateInGivenOut
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
[i] TMP_93 cleared
[i] TMP_94 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: foreignReserve1_1, name: foreignReserve1

Name: foreignReserve1 Function: calculateInGivenOut
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: foreignReserve0_1, name: foreignReserve0

Name: foreignReserve0 Function: calculateInGivenOut
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: nativeReserve0_1, name: nativeReserve0

Name: nativeReserve0 Function: calculateInGivenOut
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amountOut_1, name: amountOut

Name: amountOut_1 Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountOut_1 Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountOut, Num: 1
Globalname: amountOut, contract_name: VaderRouter
Ssa_name: nativeReserve1_1, name: nativeReserve1

Name: nativeReserve1 Function: calculateInGivenOut
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: foreignReserve1_1, name: foreignReserve1

Name: foreignReserve1 Function: calculateInGivenOut
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: foreignReserve0_1, name: foreignReserve0

Name: foreignReserve0 Function: calculateInGivenOut
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: nativeReserve0_1, name: nativeReserve0

Name: nativeReserve0 Function: calculateInGivenOut
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amountOut_1, name: amountOut

Name: amountOut_1 Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountOut_1 Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountOut, Num: 1
Globalname: amountOut, contract_name: VaderRouter
Ssa_name: nativeReserve1_1, name: nativeReserve1

Name: nativeReserve1 Function: calculateInGivenOut
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
End popogation
TMP_93(uint256) = LIBRARY_CALL, dest:VaderMath, function:VaderMath.calculateSwapReverse(uint256,uint256,uint256), arguments:['amountOut_1', 'nativeReserve1_1', 'foreignReserve1_1'] 
Found: calculateSwapReverse

Name: amountOut_1 Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: nativeReserve1 Function: calculateInGivenOut
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: foreignReserve1 Function: calculateInGivenOut
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
High level cal param_cache
Param: 0
    num: []
    den: []
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [9]
    den: [-1]
    norm: 18
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [10]
    den: [-1]
    norm: 6
    link: None
    fields: []
    fintype: -1
New param cache [[[], [], 'u', None, [], -1, 'u', 'u'], [[9], [-1], 18, None, [], -1, 'u', "'u'"], [[10], [-1], 6, None, [], -1, 'u', "'u'"]]
Old param cache: [[[-1], [-1], 'u', None, [], -1, 'u'], [[-1], [-1], 'u', None, [], -1, 'u'], [[-1], [-1], 'u', None, [], -1, 'u']]
[[], [], 'u', None, [], -1, 'u', 'u']

Name: amountOut Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[9], [-1], 18, None, [], -1, 'u', "'u'"]

Name: reserveIn Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
[[10], [-1], 6, None, [], -1, 'u', "'u'"]

Name: reserveOut Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
calculateSwapReverse(uint256,uint256,uint256)
Propogating All
Propogating All
reserveOut_1
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: reserveOut_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
reserveIn_1
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: reserveIn_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
Propogating All
amountOut_1
Ssa_name: amountOut_1, name: amountOut

Name: amountOut_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountOut_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
y2_1
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Propogating All
reserveOut_1
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: reserveOut_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
y4_1
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Propogating All
y4_1
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
reserveOut_1
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: reserveOut_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
reserveIn_1
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: reserveIn_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
XY_1
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
reserveIn_1
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: reserveIn_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
y2_1
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Propogating All
XY_1
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
numeratorC_1
Ssa_name: numeratorC_1, name: numeratorC

Name: numeratorC Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
numeratorB_1
Ssa_name: numeratorB_1, name: numeratorB

Name: numeratorB Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 2
Fields: 
Finance Type: undef
numeratorA_1
Ssa_name: numeratorA_1, name: numeratorA

Name: numeratorA Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
y2_1
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Propogating All
numerator_1
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
denominator_1
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Propogating All
amountIn_1
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_31 cleared
[i] XY cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: XY, Num: 1
Globalname: XY, contract_name: VaderMath
End popogation
TMP_31(uint256) = reserveIn_1 (c)* reserveOut_1
lnorm: 18 rnorm: 6
Source address: u
Source address: u
Source address: u
[i]Type for TMP_31

Name: TMP_31 Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
XY_1(uint256) := TMP_31(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for XY

Name: XY Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_32 cleared
[i] y2 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountOut_1, name: amountOut

Name: amountOut_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountOut_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountOut, Num: 1
Globalname: amountOut, contract_name: VaderMath
Ssa_name: amountOut_1, name: amountOut

Name: amountOut_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountOut_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountOut, Num: 1
Globalname: amountOut, contract_name: VaderMath
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: y2, Num: 1
Globalname: y2, contract_name: VaderMath
End popogation
TMP_32(uint256) = amountOut_1 (c)* 2
lnorm: u rnorm: 0
Source address: u
[i]Type for TMP_32

Name: TMP_32 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
y2_1(uint256) := TMP_32(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] TMP_33 cleared
[i] y4 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: y4, Num: 1
Globalname: y4, contract_name: VaderMath
End popogation
TMP_33(uint256) = y2_1 (c)* 2
lnorm: 0 rnorm: 0
Source address: u
[i]Type for TMP_33

Name: TMP_33 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
y4_1(uint256) := TMP_33(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
[i] TMP_34 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
End popogation
TMP_34(bool) = y4_1 < reserveOut_1
lnorm: 0 rnorm: 6
[i]Type for TMP_34

Name: TMP_34 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_35(None) = SOLIDITY_CALL require(bool,string)(TMP_34,VaderMath::calculateSwapReverse: Desired Output Exceeds Maximum Output Possible (1/4 of Liquidity Pool))
[i]Type for TMP_35

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_36 cleared
[i] TMP_37 cleared
[i] TMP_38 cleared
[i] TMP_39 cleared
[i] TMP_40 cleared
[i] numeratorA cleared
Propogating parameters and globals to SSA variables...
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: numeratorA_1, name: numeratorA

Name: numeratorA Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numeratorA, Num: 1
Globalname: numeratorA, contract_name: VaderMath
End popogation
TMP_36(uint256) = INTERNAL_CALL, VaderMath.root(uint256)(XY_1)
New param cache [[[9, 10], [-1], 24, None, [], -1, 'u', 'u']]
Old param cache: [[[], [], 'u', None, [], -1, 'u']]
[[9, 10], [-1], 24, None, [], -1, 'u', 'u']

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
root(uint256)
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
Propogating All
c_2
Ssa_name: c_2, name: c

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Propogating All
Propogating All
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_38', 'XY_1'])
Phi
[i]Type for a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_49 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_49(bool) = a_1 > 3
lnorm: 24 rnorm: 0
[i]Type for TMP_49

Name: TMP_49 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_56 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_56(bool) = a_1 != 0
[i]Type for TMP_56

Name: TMP_56 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_4, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: c, Num: 4
Globalname: c, contract_name: VaderMath
End popogation
c_4(uint256) := 1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: c_1, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 1
Globalname: c, contract_name: VaderMath
End popogation
c_1(uint256) := a_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_50 cleared
[i] TMP_51 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: VaderMath
End popogation
TMP_50(uint256) = a_1 (c)/ 2
lnorm: 24 rnorm: 0
Source address: u
lnorm: 24 rnorm: 0
10
9
-1
[i]Type for TMP_50

Name: TMP_50 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_51(uint256) = TMP_50 (c)+ 1
Source address: u
[i]Type for TMP_51

Name: TMP_51 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_51(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
[i] x cleared
[i] TMP_52 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
End popogation
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
c_2(uint256) := ϕ(['c_1', 'c_3'])
Phi

Name: c Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for c

Name: c Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
x_2(uint256) := ϕ(['x_3', 'x_1'])
Phi

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_52(bool) = x_2 < c_2
lnorm: 0 rnorm: 24
[i]Type for TMP_52

Name: TMP_52 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: c_3, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: c, Num: 3
Globalname: c, contract_name: VaderMath
End popogation
c_3(uint256) := x_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] TMP_53 cleared
[i] TMP_54 cleared
[i] TMP_55 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: x_3, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 3
Globalname: x, contract_name: VaderMath
End popogation
TMP_53(uint256) = a_1 (c)/ x_2
lnorm: 24 rnorm: 0
Source address: u
Source address: u
lnorm: 24 rnorm: 0
Source address: u
9
-1
[i]Type for TMP_53

Name: TMP_53 Function: root
Num: 9
Den: -1
Address: u
Norm: 24
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_54(uint256) = TMP_53 (c)+ x_2
10
10
-1
lnorm: 24 rnorm: 0
Source address: u
[i]Type for TMP_54

Name: TMP_54 Function: root
Num: 10
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
TMP_55(uint256) = TMP_54 (c)/ 2
lnorm: 0 rnorm: 0
Source address: u
lnorm: 0 rnorm: 0
10
-1
[i]Type for TMP_55

Name: TMP_55 Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
x_3(uint256) := TMP_55(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_38', 'XY_1'])
Phi
[i]Type for a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_49 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_49(bool) = a_1 > 3
lnorm: 24 rnorm: 0
[i]Type for TMP_49

Name: TMP_49 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_56 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_56(bool) = a_1 != 0
[i]Type for TMP_56

Name: TMP_56 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_4, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: c, Num: 4
Globalname: c, contract_name: VaderMath
End popogation
c_4(uint256) := 1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: c_1, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 1
Globalname: c, contract_name: VaderMath
End popogation
c_1(uint256) := a_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_50 cleared
[i] TMP_51 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: VaderMath
End popogation
TMP_50(uint256) = a_1 (c)/ 2
lnorm: 24 rnorm: 0
Source address: u
lnorm: 24 rnorm: 0
10
9
-1
[i]Type for TMP_50

Name: TMP_50 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_51(uint256) = TMP_50 (c)+ 1
Source address: u
[i]Type for TMP_51

Name: TMP_51 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_51(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
[i] x cleared
[i] TMP_52 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
End popogation
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
c_2(uint256) := ϕ(['c_1', 'c_3'])
Phi

Name: c Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for c

Name: c Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
x_2(uint256) := ϕ(['x_3', 'x_1'])
Phi

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_52(bool) = x_2 < c_2
lnorm: 0 rnorm: 24
[i]Type for TMP_52

Name: TMP_52 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: c_3, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: c, Num: 3
Globalname: c, contract_name: VaderMath
End popogation
c_3(uint256) := x_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] TMP_53 cleared
[i] TMP_54 cleared
[i] TMP_55 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: x_3, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 3
Globalname: x, contract_name: VaderMath
End popogation
TMP_53(uint256) = a_1 (c)/ x_2
lnorm: 24 rnorm: 0
Source address: u
Source address: u
lnorm: 24 rnorm: 0
Source address: u
9
-1
[i]Type for TMP_53

Name: TMP_53 Function: root
Num: 9
Den: -1
Address: u
Norm: 24
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_54(uint256) = TMP_53 (c)+ x_2
10
10
-1
lnorm: 24 rnorm: 0
Source address: u
[i]Type for TMP_54

Name: TMP_54 Function: root
Num: 10
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
TMP_55(uint256) = TMP_54 (c)/ 2
lnorm: 0 rnorm: 0
Source address: u
lnorm: 0 rnorm: 0
10
-1
[i]Type for TMP_55

Name: TMP_55 Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
x_3(uint256) := TMP_55(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_36

Name: TMP_36 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_37(uint256) = reserveOut_1 (c)- y4_1
Source address: u
[i]Type for TMP_37

Name: TMP_37 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
TMP_38(uint256) = reserveIn_1 (c)* TMP_37
lnorm: 18 rnorm: 0
Source address: u
[i]Type for TMP_38

Name: TMP_38 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
TMP_39(uint256) = INTERNAL_CALL, VaderMath.root(uint256)(TMP_38)
New param cache [[[9], [-1], 18, None, [], -1, 'u', 4]]
Old param cache: [[[], [], 'u', None, [], -1, 'u']]
[[9], [-1], 18, None, [], -1, 'u', 4]

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
root(uint256)
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
Propogating All
c_2
Ssa_name: c_2, name: c

Name: c Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Propogating All
Propogating All
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_38', 'XY_1'])
Phi
[i]Type for a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
[i] TMP_49 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
End popogation
TMP_49(bool) = a_1 > 3
lnorm: 18 rnorm: 0
[i]Type for TMP_49

Name: TMP_49 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_56 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
End popogation
TMP_56(bool) = a_1 != 0
[i]Type for TMP_56

Name: TMP_56 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_4, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: c, Num: 4
Globalname: c, contract_name: VaderMath
End popogation
c_4(uint256) := 1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: c_1, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 1
Globalname: c, contract_name: VaderMath
End popogation
c_1(uint256) := a_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_50 cleared
[i] TMP_51 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: VaderMath
End popogation
TMP_50(uint256) = a_1 (c)/ 2
lnorm: 18 rnorm: 0
Source address: u
lnorm: 18 rnorm: 0
9
-1
[i]Type for TMP_50

Name: TMP_50 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_51(uint256) = TMP_50 (c)+ 1
Source address: u
[i]Type for TMP_51

Name: TMP_51 Function: root
Num: 9
Den: -1
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_51(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
[i] x cleared
[i] TMP_52 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
End popogation
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
c_2(uint256) := ϕ(['c_1', 'c_3'])
Phi

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for c

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
x_2(uint256) := ϕ(['x_3', 'x_1'])
Phi

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_52(bool) = x_2 < c_2
lnorm: 0 rnorm: 18
10
10
-1
[i]Type for TMP_52

Name: TMP_52 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: c_3, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: c, Num: 3
Globalname: c, contract_name: VaderMath
End popogation
c_3(uint256) := x_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] TMP_53 cleared
[i] TMP_54 cleared
[i] TMP_55 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: x_3, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 3
Globalname: x, contract_name: VaderMath
End popogation
TMP_53(uint256) = a_1 (c)/ x_2
lnorm: 18 rnorm: 0
Source address: u
Source address: u
lnorm: 18 rnorm: 0
Source address: u
9
10
[i]Type for TMP_53

Name: TMP_53 Function: root
Num: 9
Den: 10
Address: u
Norm: 18
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_54(uint256) = TMP_53 (c)+ x_2
10
10
-1
[i]Type for TMP_54

Name: TMP_54 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_55(uint256) = TMP_54 (c)/ 2
lnorm: u rnorm: 0
lnorm: u rnorm: 0
[i]Type for TMP_55

Name: TMP_55 Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
x_3(uint256) := TMP_55(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_38', 'XY_1'])
Phi
[i]Type for a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
[i] TMP_49 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
End popogation
TMP_49(bool) = a_1 > 3
lnorm: 18 rnorm: 0
[i]Type for TMP_49

Name: TMP_49 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_56 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
End popogation
TMP_56(bool) = a_1 != 0
[i]Type for TMP_56

Name: TMP_56 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_4, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: c, Num: 4
Globalname: c, contract_name: VaderMath
End popogation
c_4(uint256) := 1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: c_1, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 1
Globalname: c, contract_name: VaderMath
End popogation
c_1(uint256) := a_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_50 cleared
[i] TMP_51 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: VaderMath
End popogation
TMP_50(uint256) = a_1 (c)/ 2
lnorm: 18 rnorm: 0
Source address: u
lnorm: 18 rnorm: 0
9
-1
[i]Type for TMP_50

Name: TMP_50 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_51(uint256) = TMP_50 (c)+ 1
Source address: u
[i]Type for TMP_51

Name: TMP_51 Function: root
Num: 9
Den: -1
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_51(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
[i] x cleared
[i] TMP_52 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
End popogation
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
c_2(uint256) := ϕ(['c_1', 'c_3'])
Phi

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for c

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
x_2(uint256) := ϕ(['x_3', 'x_1'])
Phi

Name: x Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
TMP_52(bool) = x_2 < c_2
lnorm: 0 rnorm: 18
9
-1
[i]Type for TMP_52

Name: TMP_52 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: c_3, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: c, Num: 3
Globalname: c, contract_name: VaderMath
End popogation
c_3(uint256) := x_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
[i] TMP_53 cleared
[i] TMP_54 cleared
[i] TMP_55 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: x_3, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 3
Globalname: x, contract_name: VaderMath
End popogation
TMP_53(uint256) = a_1 (c)/ x_2
lnorm: 18 rnorm: 0
Source address: u
Source address: u
lnorm: 18 rnorm: 0
Source address: u
Source address: u
[i]Type for TMP_53

Name: TMP_53 Function: root
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
TMP_54(uint256) = TMP_53 (c)+ x_2
Source address: u
[i]Type for TMP_54

Name: TMP_54 Function: root
Num: 9
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
TMP_55(uint256) = TMP_54 (c)/ 2
lnorm: 0 rnorm: 0
Source address: u
lnorm: 0 rnorm: 0
9
-1
[i]Type for TMP_55

Name: TMP_55 Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
x_3(uint256) := TMP_55(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_39

Name: TMP_39 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_40(uint256) = TMP_36 (c)* TMP_39
lnorm: u rnorm: u
[i]Type for TMP_40

Name: TMP_40 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
numeratorA_1(uint256) := TMP_40(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for numeratorA

Name: numeratorA Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_41 cleared
[i] numeratorB cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: numeratorB_1, name: numeratorB

Name: numeratorB Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: numeratorB, Num: 1
Globalname: numeratorB, contract_name: VaderMath
End popogation
TMP_41(uint256) = y2_1 (c)* reserveIn_1
lnorm: 0 rnorm: 18
Source address: u
[i]Type for TMP_41

Name: TMP_41 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
numeratorB_1(uint256) := TMP_41(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for numeratorB

Name: numeratorB Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] numeratorC cleared
Propogating parameters and globals to SSA variables...
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: numeratorC_1, name: numeratorC

Name: numeratorC Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numeratorC, Num: 1
Globalname: numeratorC, contract_name: VaderMath
End popogation
numeratorC_1(uint256) := XY_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for numeratorC

Name: numeratorC Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_42 cleared
[i] TMP_43 cleared
[i] numerator cleared
Propogating parameters and globals to SSA variables...
Ssa_name: numeratorC_1, name: numeratorC

Name: numeratorC Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: numeratorB_1, name: numeratorB

Name: numeratorB Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: numeratorA_1, name: numeratorA

Name: numeratorA Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numeratorA, Num: 1
Globalname: numeratorA, contract_name: VaderMath
Ssa_name: numeratorC_1, name: numeratorC

Name: numeratorC Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: numeratorB_1, name: numeratorB

Name: numeratorB Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: numeratorA_1, name: numeratorA

Name: numeratorA Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numeratorA, Num: 1
Globalname: numeratorA, contract_name: VaderMath
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numerator, Num: 1
Globalname: numerator, contract_name: VaderMath
End popogation
TMP_42(uint256) = numeratorC_1 (c)- numeratorA_1
Source address: u
[i]Type for TMP_42

Name: TMP_42 Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_43(uint256) = TMP_42 (c)- numeratorB_1
[i]Type for TMP_43

Name: TMP_43 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
numerator_1(uint256) := TMP_43(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for numerator

Name: numerator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] denominator cleared
Propogating parameters and globals to SSA variables...
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: denominator, Num: 1
Globalname: denominator, contract_name: VaderMath
End popogation
denominator_1(uint256) := y2_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for denominator

Name: denominator Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] TMP_44 cleared
[i] amountIn cleared
Propogating parameters and globals to SSA variables...
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numerator, Num: 1
Globalname: numerator, contract_name: VaderMath
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numerator, Num: 1
Globalname: numerator, contract_name: VaderMath
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: amountIn, Num: 1
Globalname: amountIn, contract_name: VaderMath
End popogation
TMP_44(uint256) = numerator_1 (c)/ denominator_1
lnorm: u rnorm: 0
lnorm: u rnorm: 0
[i]Type for TMP_44

Name: TMP_44 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
amountIn_1(uint256) := TMP_44(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for amountIn

Name: amountIn Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
End popogation
RETURN amountIn_1
RETURN

Name: amountIn Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_31 cleared
[i] XY cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: XY, Num: 1
Globalname: XY, contract_name: VaderMath
End popogation
TMP_31(uint256) = reserveIn_1 (c)* reserveOut_1
lnorm: 18 rnorm: 6
Source address: u
Source address: u
Source address: u
[i]Type for TMP_31

Name: TMP_31 Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
XY_1(uint256) := TMP_31(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for XY

Name: XY Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_32 cleared
[i] y2 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountOut_1, name: amountOut

Name: amountOut_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountOut_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountOut, Num: 1
Globalname: amountOut, contract_name: VaderMath
Ssa_name: amountOut_1, name: amountOut

Name: amountOut_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountOut_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountOut, Num: 1
Globalname: amountOut, contract_name: VaderMath
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: y2, Num: 1
Globalname: y2, contract_name: VaderMath
End popogation
TMP_32(uint256) = amountOut_1 (c)* 2
lnorm: u rnorm: 0
Source address: u
[i]Type for TMP_32

Name: TMP_32 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
y2_1(uint256) := TMP_32(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] TMP_33 cleared
[i] y4 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: y4, Num: 1
Globalname: y4, contract_name: VaderMath
End popogation
TMP_33(uint256) = y2_1 (c)* 2
lnorm: 0 rnorm: 0
Source address: u
[i]Type for TMP_33

Name: TMP_33 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
y4_1(uint256) := TMP_33(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
[i] TMP_34 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
End popogation
TMP_34(bool) = y4_1 < reserveOut_1
lnorm: 0 rnorm: 6
[i]Type for TMP_34

Name: TMP_34 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_35(None) = SOLIDITY_CALL require(bool,string)(TMP_34,VaderMath::calculateSwapReverse: Desired Output Exceeds Maximum Output Possible (1/4 of Liquidity Pool))
[i]Type for TMP_35

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_36 cleared
[i] TMP_37 cleared
[i] TMP_38 cleared
[i] TMP_39 cleared
[i] TMP_40 cleared
[i] numeratorA cleared
Propogating parameters and globals to SSA variables...
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: numeratorA_1, name: numeratorA

Name: numeratorA Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numeratorA, Num: 1
Globalname: numeratorA, contract_name: VaderMath
End popogation
TMP_36(uint256) = INTERNAL_CALL, VaderMath.root(uint256)(XY_1)
New param cache [[[9, 10], [-1], 24, None, [], -1, 'u', 'u']]
Old param cache: [[[], [], 'u', None, [], -1, 'u']]
[[9, 10], [-1], 24, None, [], -1, 'u', 'u']

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
root(uint256)
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
Propogating All
c_2
Ssa_name: c_2, name: c

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Propogating All
Propogating All
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_38', 'XY_1'])
Phi
[i]Type for a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_49 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_49(bool) = a_1 > 3
lnorm: 24 rnorm: 0
[i]Type for TMP_49

Name: TMP_49 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_56 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_56(bool) = a_1 != 0
[i]Type for TMP_56

Name: TMP_56 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_4, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: c, Num: 4
Globalname: c, contract_name: VaderMath
End popogation
c_4(uint256) := 1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: c_1, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 1
Globalname: c, contract_name: VaderMath
End popogation
c_1(uint256) := a_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_50 cleared
[i] TMP_51 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: VaderMath
End popogation
TMP_50(uint256) = a_1 (c)/ 2
lnorm: 24 rnorm: 0
Source address: u
lnorm: 24 rnorm: 0
10
9
-1
[i]Type for TMP_50

Name: TMP_50 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_51(uint256) = TMP_50 (c)+ 1
Source address: u
[i]Type for TMP_51

Name: TMP_51 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_51(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
[i] x cleared
[i] TMP_52 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
End popogation
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
c_2(uint256) := ϕ(['c_1', 'c_3'])
Phi

Name: c Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for c

Name: c Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
x_2(uint256) := ϕ(['x_3', 'x_1'])
Phi

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_52(bool) = x_2 < c_2
lnorm: 0 rnorm: 24
[i]Type for TMP_52

Name: TMP_52 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: c_3, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: c, Num: 3
Globalname: c, contract_name: VaderMath
End popogation
c_3(uint256) := x_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] TMP_53 cleared
[i] TMP_54 cleared
[i] TMP_55 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: x_3, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 3
Globalname: x, contract_name: VaderMath
End popogation
TMP_53(uint256) = a_1 (c)/ x_2
lnorm: 24 rnorm: 0
Source address: u
Source address: u
lnorm: 24 rnorm: 0
Source address: u
10
-1
[i]Type for TMP_53

Name: TMP_53 Function: root
Num: 10
Den: -1
Address: u
Norm: 24
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_54(uint256) = TMP_53 (c)+ x_2
9
[i]Type for TMP_54

Name: TMP_54 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_55(uint256) = TMP_54 (c)/ 2
lnorm: u rnorm: 0
lnorm: u rnorm: 0
[i]Type for TMP_55

Name: TMP_55 Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
x_3(uint256) := TMP_55(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_38', 'XY_1'])
Phi
[i]Type for a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_49 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_49(bool) = a_1 > 3
lnorm: 24 rnorm: 0
[i]Type for TMP_49

Name: TMP_49 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_56 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_56(bool) = a_1 != 0
[i]Type for TMP_56

Name: TMP_56 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_4, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: c, Num: 4
Globalname: c, contract_name: VaderMath
End popogation
c_4(uint256) := 1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: c_1, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 1
Globalname: c, contract_name: VaderMath
End popogation
c_1(uint256) := a_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_50 cleared
[i] TMP_51 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: VaderMath
End popogation
TMP_50(uint256) = a_1 (c)/ 2
lnorm: 24 rnorm: 0
Source address: u
lnorm: 24 rnorm: 0
10
9
-1
[i]Type for TMP_50

Name: TMP_50 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_51(uint256) = TMP_50 (c)+ 1
Source address: u
[i]Type for TMP_51

Name: TMP_51 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_51(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
[i] x cleared
[i] TMP_52 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
End popogation
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
c_2(uint256) := ϕ(['c_1', 'c_3'])
Phi

Name: c Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for c

Name: c Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
x_2(uint256) := ϕ(['x_3', 'x_1'])
Phi

Name: x Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for x

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
TMP_52(bool) = x_2 < c_2
lnorm: 0 rnorm: 24
10
9
-1
[i]Type for TMP_52

Name: TMP_52 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: c_3, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: c, Num: 3
Globalname: c, contract_name: VaderMath
End popogation
c_3(uint256) := x_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
[i] TMP_53 cleared
[i] TMP_54 cleared
[i] TMP_55 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: x_3, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 3
Globalname: x, contract_name: VaderMath
End popogation
TMP_53(uint256) = a_1 (c)/ x_2
lnorm: 24 rnorm: 0
Source address: u
Source address: u
lnorm: 24 rnorm: 0
Source address: u
Source address: u
[i]Type for TMP_53

Name: TMP_53 Function: root
Num: -1
Den: -1
Address: u
Norm: 24
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
TMP_54(uint256) = TMP_53 (c)+ x_2
Source address: u
[i]Type for TMP_54

Name: TMP_54 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
XXXX
TMP_55(uint256) = TMP_54 (c)/ 2
lnorm: 0 rnorm: 0
Source address: u
lnorm: 0 rnorm: 0
10
9
-1
[i]Type for TMP_55

Name: TMP_55 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
x_3(uint256) := TMP_55(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_36

Name: TMP_36 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_37(uint256) = reserveOut_1 (c)- y4_1
Source address: u
[i]Type for TMP_37

Name: TMP_37 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
TMP_38(uint256) = reserveIn_1 (c)* TMP_37
lnorm: 18 rnorm: 0
Source address: u
[i]Type for TMP_38

Name: TMP_38 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
TMP_39(uint256) = INTERNAL_CALL, VaderMath.root(uint256)(TMP_38)
New param cache [[[9], [-1], 18, None, [], -1, 'u', 4]]
Old param cache: [[[], [], 'u', None, [], -1, 'u']]
[[9], [-1], 18, None, [], -1, 'u', 4]

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
root(uint256)
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
Propogating All
c_2
Ssa_name: c_2, name: c

Name: c Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Propogating All
Propogating All
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_38', 'XY_1'])
Phi
[i]Type for a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
[i] TMP_49 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
End popogation
TMP_49(bool) = a_1 > 3
lnorm: 18 rnorm: 0
[i]Type for TMP_49

Name: TMP_49 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_56 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
End popogation
TMP_56(bool) = a_1 != 0
[i]Type for TMP_56

Name: TMP_56 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_4, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: c, Num: 4
Globalname: c, contract_name: VaderMath
End popogation
c_4(uint256) := 1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: c_1, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 1
Globalname: c, contract_name: VaderMath
End popogation
c_1(uint256) := a_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_50 cleared
[i] TMP_51 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: VaderMath
End popogation
TMP_50(uint256) = a_1 (c)/ 2
lnorm: 18 rnorm: 0
Source address: u
lnorm: 18 rnorm: 0
9
-1
[i]Type for TMP_50

Name: TMP_50 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_51(uint256) = TMP_50 (c)+ 1
Source address: u
[i]Type for TMP_51

Name: TMP_51 Function: root
Num: 9
Den: -1
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_51(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
[i] x cleared
[i] TMP_52 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
End popogation
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
c_2(uint256) := ϕ(['c_1', 'c_3'])
Phi

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef

Name: c Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for c

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
x_2(uint256) := ϕ(['x_3', 'x_1'])
Phi

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for x

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
TMP_52(bool) = x_2 < c_2
lnorm: 0 rnorm: 18
[i]Type for TMP_52

Name: TMP_52 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: c_3, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: c, Num: 3
Globalname: c, contract_name: VaderMath
End popogation
c_3(uint256) := x_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
[i] TMP_53 cleared
[i] TMP_54 cleared
[i] TMP_55 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: x_3, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 3
Globalname: x, contract_name: VaderMath
End popogation
TMP_53(uint256) = a_1 (c)/ x_2
lnorm: 18 rnorm: 0
Source address: u
Source address: u
lnorm: 18 rnorm: 0
Source address: u
-1
10
[i]Type for TMP_53

Name: TMP_53 Function: root
Num: -1
Den: 10
Address: u
Norm: 18
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
TMP_54(uint256) = TMP_53 (c)+ x_2
[i]Type for TMP_54

Name: TMP_54 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_55(uint256) = TMP_54 (c)/ 2
lnorm: u rnorm: 0
lnorm: u rnorm: 0
[i]Type for TMP_55

Name: TMP_55 Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
x_3(uint256) := TMP_55(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_38', 'XY_1'])
Phi
[i]Type for a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
[i] TMP_49 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
End popogation
TMP_49(bool) = a_1 > 3
lnorm: 18 rnorm: 0
[i]Type for TMP_49

Name: TMP_49 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_56 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
End popogation
TMP_56(bool) = a_1 != 0
[i]Type for TMP_56

Name: TMP_56 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_4, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: c, Num: 4
Globalname: c, contract_name: VaderMath
End popogation
c_4(uint256) := 1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: c_1, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 1
Globalname: c, contract_name: VaderMath
End popogation
c_1(uint256) := a_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_50 cleared
[i] TMP_51 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: VaderMath
End popogation
TMP_50(uint256) = a_1 (c)/ 2
lnorm: 18 rnorm: 0
Source address: u
lnorm: 18 rnorm: 0
9
-1
[i]Type for TMP_50

Name: TMP_50 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_51(uint256) = TMP_50 (c)+ 1
Source address: u
[i]Type for TMP_51

Name: TMP_51 Function: root
Num: 9
Den: -1
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_51(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
[i] x cleared
[i] TMP_52 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
End popogation
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
c_2(uint256) := ϕ(['c_1', 'c_3'])
Phi

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef

Name: c Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for c

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
x_2(uint256) := ϕ(['x_3', 'x_1'])
Phi

Name: x Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
TMP_52(bool) = x_2 < c_2
lnorm: 0 rnorm: 18
9
-1
[i]Type for TMP_52

Name: TMP_52 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: c_3, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: c, Num: 3
Globalname: c, contract_name: VaderMath
End popogation
c_3(uint256) := x_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
[i] TMP_53 cleared
[i] TMP_54 cleared
[i] TMP_55 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: x_3, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 3
Globalname: x, contract_name: VaderMath
End popogation
TMP_53(uint256) = a_1 (c)/ x_2
lnorm: 18 rnorm: 0
Source address: u
Source address: u
lnorm: 18 rnorm: 0
Source address: u
Source address: u
[i]Type for TMP_53

Name: TMP_53 Function: root
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
TMP_54(uint256) = TMP_53 (c)+ x_2
Source address: u
[i]Type for TMP_54

Name: TMP_54 Function: root
Num: 9
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
TMP_55(uint256) = TMP_54 (c)/ 2
lnorm: 0 rnorm: 0
Source address: u
lnorm: 0 rnorm: 0
9
-1
[i]Type for TMP_55

Name: TMP_55 Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
x_3(uint256) := TMP_55(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_39

Name: TMP_39 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_40(uint256) = TMP_36 (c)* TMP_39
lnorm: u rnorm: u
[i]Type for TMP_40

Name: TMP_40 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
numeratorA_1(uint256) := TMP_40(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for numeratorA

Name: numeratorA Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_41 cleared
[i] numeratorB cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: numeratorB_1, name: numeratorB

Name: numeratorB Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: numeratorB, Num: 1
Globalname: numeratorB, contract_name: VaderMath
End popogation
TMP_41(uint256) = y2_1 (c)* reserveIn_1
lnorm: 0 rnorm: 18
Source address: u
[i]Type for TMP_41

Name: TMP_41 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
numeratorB_1(uint256) := TMP_41(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for numeratorB

Name: numeratorB Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] numeratorC cleared
Propogating parameters and globals to SSA variables...
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: numeratorC_1, name: numeratorC

Name: numeratorC Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numeratorC, Num: 1
Globalname: numeratorC, contract_name: VaderMath
End popogation
numeratorC_1(uint256) := XY_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for numeratorC

Name: numeratorC Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_42 cleared
[i] TMP_43 cleared
[i] numerator cleared
Propogating parameters and globals to SSA variables...
Ssa_name: numeratorC_1, name: numeratorC

Name: numeratorC Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: numeratorB_1, name: numeratorB

Name: numeratorB Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: numeratorA_1, name: numeratorA

Name: numeratorA Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numeratorA, Num: 1
Globalname: numeratorA, contract_name: VaderMath
Ssa_name: numeratorC_1, name: numeratorC

Name: numeratorC Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: numeratorB_1, name: numeratorB

Name: numeratorB Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: numeratorA_1, name: numeratorA

Name: numeratorA Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numeratorA, Num: 1
Globalname: numeratorA, contract_name: VaderMath
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numerator, Num: 1
Globalname: numerator, contract_name: VaderMath
End popogation
TMP_42(uint256) = numeratorC_1 (c)- numeratorA_1
Source address: u
[i]Type for TMP_42

Name: TMP_42 Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_43(uint256) = TMP_42 (c)- numeratorB_1
[i]Type for TMP_43

Name: TMP_43 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
numerator_1(uint256) := TMP_43(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for numerator

Name: numerator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] denominator cleared
Propogating parameters and globals to SSA variables...
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: denominator, Num: 1
Globalname: denominator, contract_name: VaderMath
End popogation
denominator_1(uint256) := y2_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for denominator

Name: denominator Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] TMP_44 cleared
[i] amountIn cleared
Propogating parameters and globals to SSA variables...
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numerator, Num: 1
Globalname: numerator, contract_name: VaderMath
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numerator, Num: 1
Globalname: numerator, contract_name: VaderMath
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: amountIn, Num: 1
Globalname: amountIn, contract_name: VaderMath
End popogation
TMP_44(uint256) = numerator_1 (c)/ denominator_1
lnorm: u rnorm: 0
lnorm: u rnorm: 0
[i]Type for TMP_44

Name: TMP_44 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
amountIn_1(uint256) := TMP_44(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for amountIn

Name: amountIn Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
End popogation
RETURN amountIn_1
RETURN

Name: amountIn Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Source address: u
Source address: u
[i]Type for TMP_93

Name: TMP_93 Function: calculateInGivenOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_94(uint256) = LIBRARY_CALL, dest:VaderMath, function:VaderMath.calculateSwapReverse(uint256,uint256,uint256), arguments:['TMP_93', 'foreignReserve0_1', 'nativeReserve0_1'] 
Found: calculateSwapReverse

Name: TMP_93 Function: calculateInGivenOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef

Name: foreignReserve0 Function: calculateInGivenOut
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: nativeReserve0 Function: calculateInGivenOut
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
High level cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [10]
    den: [-1]
    norm: 6
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [9]
    den: [-1]
    norm: 18
    link: None
    fields: []
    fintype: -1
New param cache [[[-1], [-1], 0, None, [], -1, 'u', 2], [[10], [-1], 6, None, [], -1, 'u', "'u'"], [[9], [-1], 18, None, [], -1, 'u', "'u'"]]
Old param cache: [[[-1], [-1], 'u', None, [], -1, 'u'], [[-1], [-1], 'u', None, [], -1, 'u'], [[-1], [-1], 'u', None, [], -1, 'u']]
[[-1], [-1], 0, None, [], -1, 'u', 2]

Name: amountOut Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
[[10], [-1], 6, None, [], -1, 'u', "'u'"]

Name: reserveIn Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
[[9], [-1], 18, None, [], -1, 'u', "'u'"]

Name: reserveOut Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
calculateSwapReverse(uint256,uint256,uint256)
Propogating All
Propogating All
reserveOut_1
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: reserveOut_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
reserveIn_1
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: reserveIn_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
Propogating All
amountOut_1
Ssa_name: amountOut_1, name: amountOut

Name: amountOut_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountOut_1 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Copied ftype
Propogating All
y2_1
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Propogating All
reserveOut_1
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: reserveOut_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
y4_1
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Propogating All
y4_1
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
reserveOut_1
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: reserveOut_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
reserveIn_1
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: reserveIn_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
XY_1
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
reserveIn_1
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: reserveIn_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
y2_1
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Propogating All
XY_1
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
numeratorC_1
Ssa_name: numeratorC_1, name: numeratorC

Name: numeratorC Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
numeratorB_1
Ssa_name: numeratorB_1, name: numeratorB

Name: numeratorB Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 2
Fields: 
Finance Type: undef
numeratorA_1
Ssa_name: numeratorA_1, name: numeratorA

Name: numeratorA Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
y2_1
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Propogating All
numerator_1
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
denominator_1
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Propogating All
amountIn_1
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_31 cleared
[i] XY cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: XY, Num: 1
Globalname: XY, contract_name: VaderMath
End popogation
TMP_31(uint256) = reserveIn_1 (c)* reserveOut_1
lnorm: 6 rnorm: 18
Source address: u
Source address: u
Source address: u
[i]Type for TMP_31

Name: TMP_31 Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
XY_1(uint256) := TMP_31(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for XY

Name: XY Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_32 cleared
[i] y2 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountOut_1, name: amountOut

Name: amountOut_1 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: amountOut_1, name: amountOut

Name: amountOut_1 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: y2, Num: 1
Globalname: y2, contract_name: VaderMath
End popogation
TMP_32(uint256) = amountOut_1 (c)* 2
lnorm: 0 rnorm: 0
Source address: u
[i]Type for TMP_32

Name: TMP_32 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
y2_1(uint256) := TMP_32(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
[i] TMP_33 cleared
[i] y4 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: y4, Num: 1
Globalname: y4, contract_name: VaderMath
End popogation
TMP_33(uint256) = y2_1 (c)* 2
lnorm: 0 rnorm: 0
Source address: u
[i]Type for TMP_33

Name: TMP_33 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 8
Fields: 
Finance Type: undef
XXXX
y4_1(uint256) := TMP_33(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 8
Fields: 
Finance Type: undef
XXXX
[i] TMP_34 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 8
Fields: 
Finance Type: undef
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 8
Fields: 
Finance Type: undef
End popogation
TMP_34(bool) = y4_1 < reserveOut_1
lnorm: 0 rnorm: 18
[i]Type for TMP_34

Name: TMP_34 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_35(None) = SOLIDITY_CALL require(bool,string)(TMP_34,VaderMath::calculateSwapReverse: Desired Output Exceeds Maximum Output Possible (1/4 of Liquidity Pool))
[i]Type for TMP_35

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_36 cleared
[i] TMP_37 cleared
[i] TMP_38 cleared
[i] TMP_39 cleared
[i] TMP_40 cleared
[i] numeratorA cleared
Propogating parameters and globals to SSA variables...
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 8
Fields: 
Finance Type: undef
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 8
Fields: 
Finance Type: undef
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: numeratorA_1, name: numeratorA

Name: numeratorA Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numeratorA, Num: 1
Globalname: numeratorA, contract_name: VaderMath
End popogation
TMP_36(uint256) = INTERNAL_CALL, VaderMath.root(uint256)(XY_1)
New param cache [[[10, 9], [-1], 24, None, [], -1, 'u', 'u']]
Old param cache: [[[], [], 'u', None, [], -1, 'u']]
[[10, 9], [-1], 24, None, [], -1, 'u', 'u']

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
root(uint256)
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
Propogating All
c_2
Ssa_name: c_2, name: c

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Propogating All
Propogating All
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_38', 'XY_1'])
Phi
[i]Type for a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_49 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_49(bool) = a_1 > 3
lnorm: 24 rnorm: 0
[i]Type for TMP_49

Name: TMP_49 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_56 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_56(bool) = a_1 != 0
[i]Type for TMP_56

Name: TMP_56 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_4, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: c, Num: 4
Globalname: c, contract_name: VaderMath
End popogation
c_4(uint256) := 1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: c_1, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 1
Globalname: c, contract_name: VaderMath
End popogation
c_1(uint256) := a_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_50 cleared
[i] TMP_51 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: VaderMath
End popogation
TMP_50(uint256) = a_1 (c)/ 2
lnorm: 24 rnorm: 0
Source address: u
lnorm: 24 rnorm: 0
10
9
-1
[i]Type for TMP_50

Name: TMP_50 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_51(uint256) = TMP_50 (c)+ 1
Source address: u
[i]Type for TMP_51

Name: TMP_51 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_51(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
[i] x cleared
[i] TMP_52 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
End popogation
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
c_2(uint256) := ϕ(['c_1', 'c_3'])
Phi

Name: c Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for c

Name: c Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
x_2(uint256) := ϕ(['x_3', 'x_1'])
Phi

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_52(bool) = x_2 < c_2
lnorm: 0 rnorm: 24
[i]Type for TMP_52

Name: TMP_52 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: c_3, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: c, Num: 3
Globalname: c, contract_name: VaderMath
End popogation
c_3(uint256) := x_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] TMP_53 cleared
[i] TMP_54 cleared
[i] TMP_55 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: x_3, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 3
Globalname: x, contract_name: VaderMath
End popogation
TMP_53(uint256) = a_1 (c)/ x_2
lnorm: 24 rnorm: 0
Source address: u
Source address: u
lnorm: 24 rnorm: 0
Source address: u
10
-1
[i]Type for TMP_53

Name: TMP_53 Function: root
Num: 10
Den: -1
Address: u
Norm: 24
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_54(uint256) = TMP_53 (c)+ x_2
9
[i]Type for TMP_54

Name: TMP_54 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_55(uint256) = TMP_54 (c)/ 2
lnorm: u rnorm: 0
lnorm: u rnorm: 0
[i]Type for TMP_55

Name: TMP_55 Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
x_3(uint256) := TMP_55(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_38', 'XY_1'])
Phi
[i]Type for a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_49 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_49(bool) = a_1 > 3
lnorm: 24 rnorm: 0
[i]Type for TMP_49

Name: TMP_49 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_56 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_56(bool) = a_1 != 0
[i]Type for TMP_56

Name: TMP_56 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_4, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: c, Num: 4
Globalname: c, contract_name: VaderMath
End popogation
c_4(uint256) := 1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: c_1, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 1
Globalname: c, contract_name: VaderMath
End popogation
c_1(uint256) := a_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_50 cleared
[i] TMP_51 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: VaderMath
End popogation
TMP_50(uint256) = a_1 (c)/ 2
lnorm: 24 rnorm: 0
Source address: u
lnorm: 24 rnorm: 0
10
9
-1
[i]Type for TMP_50

Name: TMP_50 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_51(uint256) = TMP_50 (c)+ 1
Source address: u
[i]Type for TMP_51

Name: TMP_51 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_51(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
[i] x cleared
[i] TMP_52 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
End popogation
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
c_2(uint256) := ϕ(['c_1', 'c_3'])
Phi

Name: c Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for c

Name: c Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
x_2(uint256) := ϕ(['x_3', 'x_1'])
Phi

Name: x Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for x

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
TMP_52(bool) = x_2 < c_2
lnorm: 0 rnorm: 24
10
9
-1
[i]Type for TMP_52

Name: TMP_52 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: c_3, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: c, Num: 3
Globalname: c, contract_name: VaderMath
End popogation
c_3(uint256) := x_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
[i] TMP_53 cleared
[i] TMP_54 cleared
[i] TMP_55 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: x_3, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 3
Globalname: x, contract_name: VaderMath
End popogation
TMP_53(uint256) = a_1 (c)/ x_2
lnorm: 24 rnorm: 0
Source address: u
Source address: u
lnorm: 24 rnorm: 0
Source address: u
Source address: u
[i]Type for TMP_53

Name: TMP_53 Function: root
Num: -1
Den: -1
Address: u
Norm: 24
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
TMP_54(uint256) = TMP_53 (c)+ x_2
Source address: u
[i]Type for TMP_54

Name: TMP_54 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
XXXX
TMP_55(uint256) = TMP_54 (c)/ 2
lnorm: 0 rnorm: 0
Source address: u
lnorm: 0 rnorm: 0
10
9
-1
[i]Type for TMP_55

Name: TMP_55 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
x_3(uint256) := TMP_55(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_36

Name: TMP_36 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_37(uint256) = reserveOut_1 (c)- y4_1
Source address: u
[i]Type for TMP_37

Name: TMP_37 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: undef
XXXX
TMP_38(uint256) = reserveIn_1 (c)* TMP_37
lnorm: 6 rnorm: 0
Source address: u
[i]Type for TMP_38

Name: TMP_38 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
XXXX
TMP_39(uint256) = INTERNAL_CALL, VaderMath.root(uint256)(TMP_38)
New param cache [[[10], [-1], 6, None, [], -1, 'u', 8]]
Old param cache: [[[], [], 'u', None, [], -1, 'u']]
[[10], [-1], 6, None, [], -1, 'u', 8]

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
root(uint256)
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Copied ftype
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
Propogating All
c_2
Ssa_name: c_2, name: c

Name: c Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Propogating All
Propogating All
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Copied ftype
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_38', 'XY_1'])
Phi
[i]Type for a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
XXXX
[i] TMP_49 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
End popogation
TMP_49(bool) = a_1 > 3
lnorm: 6 rnorm: 0
[i]Type for TMP_49

Name: TMP_49 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_56 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
End popogation
TMP_56(bool) = a_1 != 0
[i]Type for TMP_56

Name: TMP_56 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_4, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: c, Num: 4
Globalname: c, contract_name: VaderMath
End popogation
c_4(uint256) := 1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Ssa_name: c_1, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 1
Globalname: c, contract_name: VaderMath
End popogation
c_1(uint256) := a_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_50 cleared
[i] TMP_51 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: VaderMath
End popogation
TMP_50(uint256) = a_1 (c)/ 2
lnorm: 6 rnorm: 0
Source address: u
lnorm: 6 rnorm: 0
10
-1
[i]Type for TMP_50

Name: TMP_50 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
TMP_51(uint256) = TMP_50 (c)+ 1
Source address: u
[i]Type for TMP_51

Name: TMP_51 Function: root
Num: 10
Den: -1
Address: u
Norm: u
LF: None
Value: 5
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_51(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 5
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
[i] x cleared
[i] TMP_52 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
End popogation
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
c_2(uint256) := ϕ(['c_1', 'c_3'])
Phi

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef

Name: c Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for c

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
XXXX
x_2(uint256) := ϕ(['x_3', 'x_1'])
Phi

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 5
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for x

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
TMP_52(bool) = x_2 < c_2
lnorm: 0 rnorm: 6
[i]Type for TMP_52

Name: TMP_52 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: c_3, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: c, Num: 3
Globalname: c, contract_name: VaderMath
End popogation
c_3(uint256) := x_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
[i] TMP_53 cleared
[i] TMP_54 cleared
[i] TMP_55 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: x_3, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 3
Globalname: x, contract_name: VaderMath
End popogation
TMP_53(uint256) = a_1 (c)/ x_2
lnorm: 6 rnorm: 0
Source address: u
Source address: u
lnorm: 6 rnorm: 0
Source address: u
-1
9
[i]Type for TMP_53

Name: TMP_53 Function: root
Num: -1
Den: 9
Address: u
Norm: 6
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_54(uint256) = TMP_53 (c)+ x_2
[i]Type for TMP_54

Name: TMP_54 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_55(uint256) = TMP_54 (c)/ 2
lnorm: u rnorm: 0
lnorm: u rnorm: 0
[i]Type for TMP_55

Name: TMP_55 Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
x_3(uint256) := TMP_55(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_38', 'XY_1'])
Phi
[i]Type for a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
XXXX
[i] TMP_49 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
End popogation
TMP_49(bool) = a_1 > 3
lnorm: 6 rnorm: 0
[i]Type for TMP_49

Name: TMP_49 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_56 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
End popogation
TMP_56(bool) = a_1 != 0
[i]Type for TMP_56

Name: TMP_56 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_4, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: c, Num: 4
Globalname: c, contract_name: VaderMath
End popogation
c_4(uint256) := 1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Ssa_name: c_1, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: undef
Name: c, Num: 1
Globalname: c, contract_name: VaderMath
End popogation
c_1(uint256) := a_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_50 cleared
[i] TMP_51 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 5
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: VaderMath
End popogation
TMP_50(uint256) = a_1 (c)/ 2
lnorm: 6 rnorm: 0
Source address: u
lnorm: 6 rnorm: 0
10
-1
[i]Type for TMP_50

Name: TMP_50 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
TMP_51(uint256) = TMP_50 (c)+ 1
Source address: u
[i]Type for TMP_51

Name: TMP_51 Function: root
Num: 10
Den: -1
Address: u
Norm: u
LF: None
Value: 5
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_51(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 5
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
[i] x cleared
[i] TMP_52 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
End popogation
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
c_2(uint256) := ϕ(['c_1', 'c_3'])
Phi

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef

Name: c Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for c

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
XXXX
x_2(uint256) := ϕ(['x_3', 'x_1'])
Phi

Name: x Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 5
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 5
Fields: 
Finance Type: undef
XXXX
TMP_52(bool) = x_2 < c_2
lnorm: 0 rnorm: 6
10
-1
[i]Type for TMP_52

Name: TMP_52 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 5
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 5
Fields: 
Finance Type: undef
Ssa_name: c_3, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: c, Num: 3
Globalname: c, contract_name: VaderMath
End popogation
c_3(uint256) := x_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 5
Fields: 
Finance Type: undef
XXXX
[i] TMP_53 cleared
[i] TMP_54 cleared
[i] TMP_55 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 5
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 5
Fields: 
Finance Type: undef
Ssa_name: x_3, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 3
Globalname: x, contract_name: VaderMath
End popogation
TMP_53(uint256) = a_1 (c)/ x_2
lnorm: 6 rnorm: 0
Source address: u
Source address: u
lnorm: 6 rnorm: 0
Source address: u
Source address: u
[i]Type for TMP_53

Name: TMP_53 Function: root
Num: -1
Den: -1
Address: u
Norm: 6
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
TMP_54(uint256) = TMP_53 (c)+ x_2
Source address: u
[i]Type for TMP_54

Name: TMP_54 Function: root
Num: 10
Den: -1
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
XXXX
TMP_55(uint256) = TMP_54 (c)/ 2
lnorm: 0 rnorm: 0
Source address: u
lnorm: 0 rnorm: 0
10
-1
[i]Type for TMP_55

Name: TMP_55 Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
x_3(uint256) := TMP_55(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_39

Name: TMP_39 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_40(uint256) = TMP_36 (c)* TMP_39
lnorm: u rnorm: u
[i]Type for TMP_40

Name: TMP_40 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
numeratorA_1(uint256) := TMP_40(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for numeratorA

Name: numeratorA Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_41 cleared
[i] numeratorB cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: numeratorB_1, name: numeratorB

Name: numeratorB Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: numeratorB, Num: 1
Globalname: numeratorB, contract_name: VaderMath
End popogation
TMP_41(uint256) = y2_1 (c)* reserveIn_1
lnorm: 0 rnorm: 6
Source address: u
[i]Type for TMP_41

Name: TMP_41 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
numeratorB_1(uint256) := TMP_41(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for numeratorB

Name: numeratorB Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
[i] numeratorC cleared
Propogating parameters and globals to SSA variables...
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: numeratorC_1, name: numeratorC

Name: numeratorC Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numeratorC, Num: 1
Globalname: numeratorC, contract_name: VaderMath
End popogation
numeratorC_1(uint256) := XY_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for numeratorC

Name: numeratorC Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_42 cleared
[i] TMP_43 cleared
[i] numerator cleared
Propogating parameters and globals to SSA variables...
Ssa_name: numeratorC_1, name: numeratorC

Name: numeratorC Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: numeratorB_1, name: numeratorB

Name: numeratorB Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: numeratorA_1, name: numeratorA

Name: numeratorA Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numeratorA, Num: 1
Globalname: numeratorA, contract_name: VaderMath
Ssa_name: numeratorC_1, name: numeratorC

Name: numeratorC Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: numeratorB_1, name: numeratorB

Name: numeratorB Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: numeratorA_1, name: numeratorA

Name: numeratorA Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numeratorA, Num: 1
Globalname: numeratorA, contract_name: VaderMath
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numerator, Num: 1
Globalname: numerator, contract_name: VaderMath
End popogation
TMP_42(uint256) = numeratorC_1 (c)- numeratorA_1
Source address: u
[i]Type for TMP_42

Name: TMP_42 Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_43(uint256) = TMP_42 (c)- numeratorB_1
[i]Type for TMP_43

Name: TMP_43 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
numerator_1(uint256) := TMP_43(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for numerator

Name: numerator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] denominator cleared
Propogating parameters and globals to SSA variables...
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: denominator, Num: 1
Globalname: denominator, contract_name: VaderMath
End popogation
denominator_1(uint256) := y2_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for denominator

Name: denominator Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
[i] TMP_44 cleared
[i] amountIn cleared
Propogating parameters and globals to SSA variables...
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numerator, Num: 1
Globalname: numerator, contract_name: VaderMath
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numerator, Num: 1
Globalname: numerator, contract_name: VaderMath
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: amountIn, Num: 1
Globalname: amountIn, contract_name: VaderMath
End popogation
TMP_44(uint256) = numerator_1 (c)/ denominator_1
lnorm: u rnorm: 0
lnorm: u rnorm: 0
[i]Type for TMP_44

Name: TMP_44 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
amountIn_1(uint256) := TMP_44(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for amountIn

Name: amountIn Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
End popogation
RETURN amountIn_1
RETURN

Name: amountIn Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_31 cleared
[i] XY cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: XY, Num: 1
Globalname: XY, contract_name: VaderMath
End popogation
TMP_31(uint256) = reserveIn_1 (c)* reserveOut_1
lnorm: 6 rnorm: 18
Source address: u
Source address: u
Source address: u
[i]Type for TMP_31

Name: TMP_31 Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
XY_1(uint256) := TMP_31(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for XY

Name: XY Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_32 cleared
[i] y2 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountOut_1, name: amountOut

Name: amountOut_1 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: amountOut_1, name: amountOut

Name: amountOut_1 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: y2, Num: 1
Globalname: y2, contract_name: VaderMath
End popogation
TMP_32(uint256) = amountOut_1 (c)* 2
lnorm: 0 rnorm: 0
Source address: u
[i]Type for TMP_32

Name: TMP_32 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
y2_1(uint256) := TMP_32(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
[i] TMP_33 cleared
[i] y4 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: undef
Name: y4, Num: 1
Globalname: y4, contract_name: VaderMath
End popogation
TMP_33(uint256) = y2_1 (c)* 2
lnorm: 0 rnorm: 0
Source address: u
[i]Type for TMP_33

Name: TMP_33 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 8
Fields: 
Finance Type: undef
XXXX
y4_1(uint256) := TMP_33(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 8
Fields: 
Finance Type: undef
XXXX
[i] TMP_34 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 8
Fields: 
Finance Type: undef
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 8
Fields: 
Finance Type: undef
End popogation
TMP_34(bool) = y4_1 < reserveOut_1
lnorm: 0 rnorm: 18
[i]Type for TMP_34

Name: TMP_34 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_35(None) = SOLIDITY_CALL require(bool,string)(TMP_34,VaderMath::calculateSwapReverse: Desired Output Exceeds Maximum Output Possible (1/4 of Liquidity Pool))
[i]Type for TMP_35

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_36 cleared
[i] TMP_37 cleared
[i] TMP_38 cleared
[i] TMP_39 cleared
[i] TMP_40 cleared
[i] numeratorA cleared
Propogating parameters and globals to SSA variables...
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 8
Fields: 
Finance Type: undef
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 8
Fields: 
Finance Type: undef
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: numeratorA_1, name: numeratorA

Name: numeratorA Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numeratorA, Num: 1
Globalname: numeratorA, contract_name: VaderMath
End popogation
TMP_36(uint256) = INTERNAL_CALL, VaderMath.root(uint256)(XY_1)
New param cache [[[10, 9], [-1], 24, None, [], -1, 'u', 'u']]
Old param cache: [[[], [], 'u', None, [], -1, 'u']]
[[10, 9], [-1], 24, None, [], -1, 'u', 'u']

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
root(uint256)
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
Propogating All
c_2
Ssa_name: c_2, name: c

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 5
Fields: 
Finance Type: undef
Propogating All
Propogating All
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 5
Fields: 
Finance Type: undef
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 5
Fields: 
Finance Type: undef
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_38', 'XY_1'])
Phi
[i]Type for a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_49 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_49(bool) = a_1 > 3
lnorm: 24 rnorm: 0
[i]Type for TMP_49

Name: TMP_49 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_56 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_56(bool) = a_1 != 0
[i]Type for TMP_56

Name: TMP_56 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_4, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: c, Num: 4
Globalname: c, contract_name: VaderMath
End popogation
c_4(uint256) := 1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: c_1, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: undef
Name: c, Num: 1
Globalname: c, contract_name: VaderMath
End popogation
c_1(uint256) := a_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_50 cleared
[i] TMP_51 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 5
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: VaderMath
End popogation
TMP_50(uint256) = a_1 (c)/ 2
lnorm: 24 rnorm: 0
Source address: u
lnorm: 24 rnorm: 0
10
9
-1
[i]Type for TMP_50

Name: TMP_50 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_51(uint256) = TMP_50 (c)+ 1
Source address: u
[i]Type for TMP_51

Name: TMP_51 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_51(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
[i] x cleared
[i] TMP_52 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 5
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 5
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 5
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
End popogation
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 5
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
c_2(uint256) := ϕ(['c_1', 'c_3'])
Phi

Name: c Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 5
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for c

Name: c Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
x_2(uint256) := ϕ(['x_3', 'x_1'])
Phi

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
TMP_52(bool) = x_2 < c_2
lnorm: 0 rnorm: 24
[i]Type for TMP_52

Name: TMP_52 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: c_3, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 5
Fields: 
Finance Type: undef
Name: c, Num: 3
Globalname: c, contract_name: VaderMath
End popogation
c_3(uint256) := x_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
[i] TMP_53 cleared
[i] TMP_54 cleared
[i] TMP_55 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: x_3, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 3
Globalname: x, contract_name: VaderMath
End popogation
TMP_53(uint256) = a_1 (c)/ x_2
lnorm: 24 rnorm: 0
Source address: u
Source address: u
lnorm: 24 rnorm: 0
Source address: u
9
-1
[i]Type for TMP_53

Name: TMP_53 Function: root
Num: 9
Den: -1
Address: u
Norm: 24
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
TMP_54(uint256) = TMP_53 (c)+ x_2
10
10
-1
lnorm: 24 rnorm: 0
Source address: u
[i]Type for TMP_54

Name: TMP_54 Function: root
Num: 10
Den: -1
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
XXXX
TMP_55(uint256) = TMP_54 (c)/ 2
lnorm: 0 rnorm: 0
Source address: u
lnorm: 0 rnorm: 0
10
-1
[i]Type for TMP_55

Name: TMP_55 Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
x_3(uint256) := TMP_55(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_38', 'XY_1'])
Phi
[i]Type for a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_49 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_49(bool) = a_1 > 3
lnorm: 24 rnorm: 0
[i]Type for TMP_49

Name: TMP_49 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_56 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_56(bool) = a_1 != 0
[i]Type for TMP_56

Name: TMP_56 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_4, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: c, Num: 4
Globalname: c, contract_name: VaderMath
End popogation
c_4(uint256) := 1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: c_1, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 1
Globalname: c, contract_name: VaderMath
End popogation
c_1(uint256) := a_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_50 cleared
[i] TMP_51 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: VaderMath
End popogation
TMP_50(uint256) = a_1 (c)/ 2
lnorm: 24 rnorm: 0
Source address: u
lnorm: 24 rnorm: 0
10
9
-1
[i]Type for TMP_50

Name: TMP_50 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_51(uint256) = TMP_50 (c)+ 1
Source address: u
[i]Type for TMP_51

Name: TMP_51 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_51(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
[i] x cleared
[i] TMP_52 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
End popogation
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
c_2(uint256) := ϕ(['c_1', 'c_3'])
Phi

Name: c Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for c

Name: c Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
x_2(uint256) := ϕ(['x_3', 'x_1'])
Phi

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
TMP_52(bool) = x_2 < c_2
lnorm: 0 rnorm: 24
[i]Type for TMP_52

Name: TMP_52 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: c_3, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: c, Num: 3
Globalname: c, contract_name: VaderMath
End popogation
c_3(uint256) := x_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
[i] TMP_53 cleared
[i] TMP_54 cleared
[i] TMP_55 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: x_3, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 3
Globalname: x, contract_name: VaderMath
End popogation
TMP_53(uint256) = a_1 (c)/ x_2
lnorm: 24 rnorm: 0
Source address: u
Source address: u
lnorm: 24 rnorm: 0
Source address: u
9
-1
[i]Type for TMP_53

Name: TMP_53 Function: root
Num: 9
Den: -1
Address: u
Norm: 24
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
TMP_54(uint256) = TMP_53 (c)+ x_2
10
10
-1
lnorm: 24 rnorm: 0
Source address: u
[i]Type for TMP_54

Name: TMP_54 Function: root
Num: 10
Den: -1
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
XXXX
TMP_55(uint256) = TMP_54 (c)/ 2
lnorm: 0 rnorm: 0
Source address: u
lnorm: 0 rnorm: 0
10
-1
[i]Type for TMP_55

Name: TMP_55 Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
x_3(uint256) := TMP_55(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_36

Name: TMP_36 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_37(uint256) = reserveOut_1 (c)- y4_1
Source address: u
[i]Type for TMP_37

Name: TMP_37 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: undef
XXXX
TMP_38(uint256) = reserveIn_1 (c)* TMP_37
lnorm: 6 rnorm: 0
Source address: u
[i]Type for TMP_38

Name: TMP_38 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
XXXX
TMP_39(uint256) = INTERNAL_CALL, VaderMath.root(uint256)(TMP_38)
New param cache [[[10], [-1], 6, None, [], -1, 'u', 8]]
Old param cache: [[[], [], 'u', None, [], -1, 'u']]
[[10], [-1], 6, None, [], -1, 'u', 8]

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
root(uint256)
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Copied ftype
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
Propogating All
c_2
Ssa_name: c_2, name: c

Name: c Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Propogating All
Propogating All
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Copied ftype
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_38', 'XY_1'])
Phi
[i]Type for a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
XXXX
[i] TMP_49 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
End popogation
TMP_49(bool) = a_1 > 3
lnorm: 6 rnorm: 0
[i]Type for TMP_49

Name: TMP_49 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_56 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
End popogation
TMP_56(bool) = a_1 != 0
[i]Type for TMP_56

Name: TMP_56 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_4, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: c, Num: 4
Globalname: c, contract_name: VaderMath
End popogation
c_4(uint256) := 1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Ssa_name: c_1, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 1
Globalname: c, contract_name: VaderMath
End popogation
c_1(uint256) := a_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_50 cleared
[i] TMP_51 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: VaderMath
End popogation
TMP_50(uint256) = a_1 (c)/ 2
lnorm: 6 rnorm: 0
Source address: u
lnorm: 6 rnorm: 0
10
-1
[i]Type for TMP_50

Name: TMP_50 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
TMP_51(uint256) = TMP_50 (c)+ 1
Source address: u
[i]Type for TMP_51

Name: TMP_51 Function: root
Num: 10
Den: -1
Address: u
Norm: u
LF: None
Value: 5
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_51(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 5
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
[i] x cleared
[i] TMP_52 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
End popogation
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
c_2(uint256) := ϕ(['c_1', 'c_3'])
Phi

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for c

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
XXXX
x_2(uint256) := ϕ(['x_3', 'x_1'])
Phi

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 5
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
TMP_52(bool) = x_2 < c_2
lnorm: 0 rnorm: 6
10
-1
[i]Type for TMP_52

Name: TMP_52 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: c_3, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: c, Num: 3
Globalname: c, contract_name: VaderMath
End popogation
c_3(uint256) := x_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
[i] TMP_53 cleared
[i] TMP_54 cleared
[i] TMP_55 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: x_3, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 3
Globalname: x, contract_name: VaderMath
End popogation
TMP_53(uint256) = a_1 (c)/ x_2
lnorm: 6 rnorm: 0
Source address: u
Source address: u
lnorm: 6 rnorm: 0
Source address: u
Source address: u
[i]Type for TMP_53

Name: TMP_53 Function: root
Num: -1
Den: -1
Address: u
Norm: 6
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_54(uint256) = TMP_53 (c)+ x_2
Source address: u
[i]Type for TMP_54

Name: TMP_54 Function: root
Num: 10
Den: -1
Address: u
Norm: u
LF: None
Value: 5
Fields: 
Finance Type: undef
XXXX
TMP_55(uint256) = TMP_54 (c)/ 2
lnorm: 0 rnorm: 0
Source address: u
lnorm: 0 rnorm: 0
10
-1
[i]Type for TMP_55

Name: TMP_55 Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
x_3(uint256) := TMP_55(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_38', 'XY_1'])
Phi
[i]Type for a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
XXXX
[i] TMP_49 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
End popogation
TMP_49(bool) = a_1 > 3
lnorm: 6 rnorm: 0
[i]Type for TMP_49

Name: TMP_49 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_56 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
End popogation
TMP_56(bool) = a_1 != 0
[i]Type for TMP_56

Name: TMP_56 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_4, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: c, Num: 4
Globalname: c, contract_name: VaderMath
End popogation
c_4(uint256) := 1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Ssa_name: c_1, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: undef
Name: c, Num: 1
Globalname: c, contract_name: VaderMath
End popogation
c_1(uint256) := a_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_50 cleared
[i] TMP_51 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 5
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: VaderMath
End popogation
TMP_50(uint256) = a_1 (c)/ 2
lnorm: 6 rnorm: 0
Source address: u
lnorm: 6 rnorm: 0
10
-1
[i]Type for TMP_50

Name: TMP_50 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
TMP_51(uint256) = TMP_50 (c)+ 1
Source address: u
[i]Type for TMP_51

Name: TMP_51 Function: root
Num: 10
Den: -1
Address: u
Norm: u
LF: None
Value: 5
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_51(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 5
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
[i] x cleared
[i] TMP_52 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
End popogation
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
c_2(uint256) := ϕ(['c_1', 'c_3'])
Phi

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for c

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
XXXX
x_2(uint256) := ϕ(['x_3', 'x_1'])
Phi

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 5
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_52(bool) = x_2 < c_2
lnorm: 0 rnorm: 6
10
-1
[i]Type for TMP_52

Name: TMP_52 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: c_3, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: c, Num: 3
Globalname: c, contract_name: VaderMath
End popogation
c_3(uint256) := x_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] TMP_53 cleared
[i] TMP_54 cleared
[i] TMP_55 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: x_3, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 3
Globalname: x, contract_name: VaderMath
End popogation
TMP_53(uint256) = a_1 (c)/ x_2
lnorm: 6 rnorm: 0
Source address: u
Source address: u
lnorm: 6 rnorm: 0
Source address: u
Source address: u
[i]Type for TMP_53

Name: TMP_53 Function: root
Num: -1
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
TMP_54(uint256) = TMP_53 (c)+ x_2
Source address: u
[i]Type for TMP_54

Name: TMP_54 Function: root
Num: 10
Den: -1
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
XXXX
TMP_55(uint256) = TMP_54 (c)/ 2
lnorm: 0 rnorm: 0
Source address: u
lnorm: 0 rnorm: 0
10
-1
[i]Type for TMP_55

Name: TMP_55 Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
x_3(uint256) := TMP_55(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_39

Name: TMP_39 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_40(uint256) = TMP_36 (c)* TMP_39
lnorm: u rnorm: u
[i]Type for TMP_40

Name: TMP_40 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
numeratorA_1(uint256) := TMP_40(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for numeratorA

Name: numeratorA Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_41 cleared
[i] numeratorB cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: numeratorB_1, name: numeratorB

Name: numeratorB Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: numeratorB, Num: 1
Globalname: numeratorB, contract_name: VaderMath
End popogation
TMP_41(uint256) = y2_1 (c)* reserveIn_1
lnorm: 0 rnorm: 6
Source address: u
[i]Type for TMP_41

Name: TMP_41 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
numeratorB_1(uint256) := TMP_41(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for numeratorB

Name: numeratorB Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
[i] numeratorC cleared
Propogating parameters and globals to SSA variables...
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: numeratorC_1, name: numeratorC

Name: numeratorC Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numeratorC, Num: 1
Globalname: numeratorC, contract_name: VaderMath
End popogation
numeratorC_1(uint256) := XY_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for numeratorC

Name: numeratorC Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_42 cleared
[i] TMP_43 cleared
[i] numerator cleared
Propogating parameters and globals to SSA variables...
Ssa_name: numeratorC_1, name: numeratorC

Name: numeratorC Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: numeratorB_1, name: numeratorB

Name: numeratorB Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: numeratorA_1, name: numeratorA

Name: numeratorA Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numeratorA, Num: 1
Globalname: numeratorA, contract_name: VaderMath
Ssa_name: numeratorC_1, name: numeratorC

Name: numeratorC Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: numeratorB_1, name: numeratorB

Name: numeratorB Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: numeratorA_1, name: numeratorA

Name: numeratorA Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numeratorA, Num: 1
Globalname: numeratorA, contract_name: VaderMath
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numerator, Num: 1
Globalname: numerator, contract_name: VaderMath
End popogation
TMP_42(uint256) = numeratorC_1 (c)- numeratorA_1
Source address: u
[i]Type for TMP_42

Name: TMP_42 Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_43(uint256) = TMP_42 (c)- numeratorB_1
[i]Type for TMP_43

Name: TMP_43 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
numerator_1(uint256) := TMP_43(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for numerator

Name: numerator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] denominator cleared
Propogating parameters and globals to SSA variables...
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: denominator, Num: 1
Globalname: denominator, contract_name: VaderMath
End popogation
denominator_1(uint256) := y2_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for denominator

Name: denominator Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
[i] TMP_44 cleared
[i] amountIn cleared
Propogating parameters and globals to SSA variables...
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numerator, Num: 1
Globalname: numerator, contract_name: VaderMath
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numerator, Num: 1
Globalname: numerator, contract_name: VaderMath
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: amountIn, Num: 1
Globalname: amountIn, contract_name: VaderMath
End popogation
TMP_44(uint256) = numerator_1 (c)/ denominator_1
lnorm: u rnorm: 0
lnorm: u rnorm: 0
[i]Type for TMP_44

Name: TMP_44 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
amountIn_1(uint256) := TMP_44(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for amountIn

Name: amountIn Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
End popogation
RETURN amountIn_1
RETURN

Name: amountIn Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u
Source address: u
[i]Type for TMP_94

Name: TMP_94 Function: calculateInGivenOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
RETURN TMP_94
RETURN

Name: TMP_94 Function: calculateInGivenOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
[i] TMP_89 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: nativeReserve_1, name: nativeReserve

Name: nativeReserve Function: calculateInGivenOut
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amountOut_1, name: amountOut

Name: amountOut_1 Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountOut_1 Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountOut, Num: 1
Globalname: amountOut, contract_name: VaderRouter
Ssa_name: foreignReserve_1, name: foreignReserve

Name: foreignReserve Function: calculateInGivenOut
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: nativeReserve_1, name: nativeReserve

Name: nativeReserve Function: calculateInGivenOut
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amountOut_1, name: amountOut

Name: amountOut_1 Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountOut_1 Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountOut, Num: 1
Globalname: amountOut, contract_name: VaderRouter
Ssa_name: foreignReserve_1, name: foreignReserve

Name: foreignReserve Function: calculateInGivenOut
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
End popogation
TMP_89(uint256) = LIBRARY_CALL, dest:VaderMath, function:VaderMath.calculateSwapReverse(uint256,uint256,uint256), arguments:['amountOut_1', 'nativeReserve_1', 'foreignReserve_1'] 
Found: calculateSwapReverse

Name: amountOut_1 Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: nativeReserve Function: calculateInGivenOut
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: foreignReserve Function: calculateInGivenOut
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
High level cal param_cache
Param: 0
    num: []
    den: []
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [9]
    den: [-1]
    norm: 18
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [10]
    den: [-1]
    norm: 6
    link: None
    fields: []
    fintype: -1
New param cache [[[], [], 'u', None, [], -1, 'u', 'u'], [[9], [-1], 18, None, [], -1, 'u', "'u'"], [[10], [-1], 6, None, [], -1, 'u', "'u'"]]
Old param cache: [[[-1], [-1], 'u', None, [], -1, 'u'], [[-1], [-1], 'u', None, [], -1, 'u'], [[-1], [-1], 'u', None, [], -1, 'u']]
[[], [], 'u', None, [], -1, 'u', 'u']

Name: amountOut Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[9], [-1], 18, None, [], -1, 'u', "'u'"]

Name: reserveIn Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
[[10], [-1], 6, None, [], -1, 'u', "'u'"]

Name: reserveOut Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
calculateSwapReverse(uint256,uint256,uint256)
Propogating All
Propogating All
reserveOut_1
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: reserveOut_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
reserveIn_1
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: reserveIn_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
Propogating All
amountOut_1
Ssa_name: amountOut_1, name: amountOut

Name: amountOut_1 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Source address: u

Name: amountOut_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
y2_1
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Propogating All
reserveOut_1
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: reserveOut_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
y4_1
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 8
Fields: 
Finance Type: undef
Propogating All
y4_1
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 8
Fields: 
Finance Type: undef
reserveOut_1
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: reserveOut_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
reserveIn_1
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: reserveIn_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
XY_1
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
reserveIn_1
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: reserveIn_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
y2_1
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Propogating All
XY_1
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
numeratorC_1
Ssa_name: numeratorC_1, name: numeratorC

Name: numeratorC Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
numeratorB_1
Ssa_name: numeratorB_1, name: numeratorB

Name: numeratorB Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
numeratorA_1
Ssa_name: numeratorA_1, name: numeratorA

Name: numeratorA Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
y2_1
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Propogating All
numerator_1
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
denominator_1
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Propogating All
amountIn_1
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_31 cleared
[i] XY cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: XY, Num: 1
Globalname: XY, contract_name: VaderMath
End popogation
TMP_31(uint256) = reserveIn_1 (c)* reserveOut_1
lnorm: 18 rnorm: 6
Source address: u
Source address: u
Source address: u
[i]Type for TMP_31

Name: TMP_31 Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
XY_1(uint256) := TMP_31(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for XY

Name: XY Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_32 cleared
[i] y2 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountOut_1, name: amountOut

Name: amountOut_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountOut_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountOut, Num: 1
Globalname: amountOut, contract_name: VaderMath
Ssa_name: amountOut_1, name: amountOut

Name: amountOut_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountOut_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountOut, Num: 1
Globalname: amountOut, contract_name: VaderMath
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: y2, Num: 1
Globalname: y2, contract_name: VaderMath
End popogation
TMP_32(uint256) = amountOut_1 (c)* 2
lnorm: u rnorm: 0
Source address: u
[i]Type for TMP_32

Name: TMP_32 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
y2_1(uint256) := TMP_32(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] TMP_33 cleared
[i] y4 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: undef
Name: y4, Num: 1
Globalname: y4, contract_name: VaderMath
End popogation
TMP_33(uint256) = y2_1 (c)* 2
lnorm: 0 rnorm: 0
Source address: u
[i]Type for TMP_33

Name: TMP_33 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
y4_1(uint256) := TMP_33(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
[i] TMP_34 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
End popogation
TMP_34(bool) = y4_1 < reserveOut_1
lnorm: 0 rnorm: 6
[i]Type for TMP_34

Name: TMP_34 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_35(None) = SOLIDITY_CALL require(bool,string)(TMP_34,VaderMath::calculateSwapReverse: Desired Output Exceeds Maximum Output Possible (1/4 of Liquidity Pool))
[i]Type for TMP_35

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_36 cleared
[i] TMP_37 cleared
[i] TMP_38 cleared
[i] TMP_39 cleared
[i] TMP_40 cleared
[i] numeratorA cleared
Propogating parameters and globals to SSA variables...
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: numeratorA_1, name: numeratorA

Name: numeratorA Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numeratorA, Num: 1
Globalname: numeratorA, contract_name: VaderMath
End popogation
TMP_36(uint256) = INTERNAL_CALL, VaderMath.root(uint256)(XY_1)
New param cache [[[9, 10], [-1], 24, None, [], -1, 'u', 'u']]
Old param cache: [[[], [], 'u', None, [], -1, 'u']]
[[9, 10], [-1], 24, None, [], -1, 'u', 'u']

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
root(uint256)
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
Propogating All
c_2
Ssa_name: c_2, name: c

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Propogating All
Propogating All
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_38', 'XY_1'])
Phi
[i]Type for a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_49 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_49(bool) = a_1 > 3
lnorm: 24 rnorm: 0
[i]Type for TMP_49

Name: TMP_49 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_56 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_56(bool) = a_1 != 0
[i]Type for TMP_56

Name: TMP_56 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_4, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: c, Num: 4
Globalname: c, contract_name: VaderMath
End popogation
c_4(uint256) := 1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: c_1, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: undef
Name: c, Num: 1
Globalname: c, contract_name: VaderMath
End popogation
c_1(uint256) := a_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_50 cleared
[i] TMP_51 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 5
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: VaderMath
End popogation
TMP_50(uint256) = a_1 (c)/ 2
lnorm: 24 rnorm: 0
Source address: u
lnorm: 24 rnorm: 0
10
9
-1
[i]Type for TMP_50

Name: TMP_50 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_51(uint256) = TMP_50 (c)+ 1
Source address: u
[i]Type for TMP_51

Name: TMP_51 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_51(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
[i] x cleared
[i] TMP_52 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
End popogation
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
c_2(uint256) := ϕ(['c_1', 'c_3'])
Phi

Name: c Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for c

Name: c Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
x_2(uint256) := ϕ(['x_3', 'x_1'])
Phi

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
TMP_52(bool) = x_2 < c_2
lnorm: 0 rnorm: 24
[i]Type for TMP_52

Name: TMP_52 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: c_3, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: c, Num: 3
Globalname: c, contract_name: VaderMath
End popogation
c_3(uint256) := x_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
[i] TMP_53 cleared
[i] TMP_54 cleared
[i] TMP_55 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: x_3, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 3
Globalname: x, contract_name: VaderMath
End popogation
TMP_53(uint256) = a_1 (c)/ x_2
lnorm: 24 rnorm: 0
Source address: u
Source address: u
lnorm: 24 rnorm: 0
Source address: u
9
-1
[i]Type for TMP_53

Name: TMP_53 Function: root
Num: 9
Den: -1
Address: u
Norm: 24
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
TMP_54(uint256) = TMP_53 (c)+ x_2
10
10
-1
lnorm: 24 rnorm: 0
Source address: u
[i]Type for TMP_54

Name: TMP_54 Function: root
Num: 10
Den: -1
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
XXXX
TMP_55(uint256) = TMP_54 (c)/ 2
lnorm: 0 rnorm: 0
Source address: u
lnorm: 0 rnorm: 0
10
-1
[i]Type for TMP_55

Name: TMP_55 Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
x_3(uint256) := TMP_55(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_38', 'XY_1'])
Phi
[i]Type for a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_49 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_49(bool) = a_1 > 3
lnorm: 24 rnorm: 0
[i]Type for TMP_49

Name: TMP_49 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_56 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_56(bool) = a_1 != 0
[i]Type for TMP_56

Name: TMP_56 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_4, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: c, Num: 4
Globalname: c, contract_name: VaderMath
End popogation
c_4(uint256) := 1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: c_1, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 1
Globalname: c, contract_name: VaderMath
End popogation
c_1(uint256) := a_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_50 cleared
[i] TMP_51 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: VaderMath
End popogation
TMP_50(uint256) = a_1 (c)/ 2
lnorm: 24 rnorm: 0
Source address: u
lnorm: 24 rnorm: 0
10
9
-1
[i]Type for TMP_50

Name: TMP_50 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_51(uint256) = TMP_50 (c)+ 1
Source address: u
[i]Type for TMP_51

Name: TMP_51 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_51(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
[i] x cleared
[i] TMP_52 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
End popogation
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
c_2(uint256) := ϕ(['c_1', 'c_3'])
Phi

Name: c Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for c

Name: c Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
x_2(uint256) := ϕ(['x_3', 'x_1'])
Phi

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
TMP_52(bool) = x_2 < c_2
lnorm: 0 rnorm: 24
[i]Type for TMP_52

Name: TMP_52 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: c_3, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: c, Num: 3
Globalname: c, contract_name: VaderMath
End popogation
c_3(uint256) := x_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
[i] TMP_53 cleared
[i] TMP_54 cleared
[i] TMP_55 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: x_3, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 3
Globalname: x, contract_name: VaderMath
End popogation
TMP_53(uint256) = a_1 (c)/ x_2
lnorm: 24 rnorm: 0
Source address: u
Source address: u
lnorm: 24 rnorm: 0
Source address: u
9
-1
[i]Type for TMP_53

Name: TMP_53 Function: root
Num: 9
Den: -1
Address: u
Norm: 24
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
TMP_54(uint256) = TMP_53 (c)+ x_2
10
10
-1
lnorm: 24 rnorm: 0
Source address: u
[i]Type for TMP_54

Name: TMP_54 Function: root
Num: 10
Den: -1
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
XXXX
TMP_55(uint256) = TMP_54 (c)/ 2
lnorm: 0 rnorm: 0
Source address: u
lnorm: 0 rnorm: 0
10
-1
[i]Type for TMP_55

Name: TMP_55 Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
x_3(uint256) := TMP_55(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_36

Name: TMP_36 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_37(uint256) = reserveOut_1 (c)- y4_1
Source address: u
[i]Type for TMP_37

Name: TMP_37 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
TMP_38(uint256) = reserveIn_1 (c)* TMP_37
lnorm: 18 rnorm: 0
Source address: u
[i]Type for TMP_38

Name: TMP_38 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
TMP_39(uint256) = INTERNAL_CALL, VaderMath.root(uint256)(TMP_38)
New param cache [[[9], [-1], 18, None, [], -1, 'u', 4]]
Old param cache: [[[], [], 'u', None, [], -1, 'u']]
[[9], [-1], 18, None, [], -1, 'u', 4]

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
root(uint256)
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
Propogating All
c_2
Ssa_name: c_2, name: c

Name: c Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Propogating All
Propogating All
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_38', 'XY_1'])
Phi
[i]Type for a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
[i] TMP_49 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
End popogation
TMP_49(bool) = a_1 > 3
lnorm: 18 rnorm: 0
[i]Type for TMP_49

Name: TMP_49 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_56 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
End popogation
TMP_56(bool) = a_1 != 0
[i]Type for TMP_56

Name: TMP_56 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_4, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: c, Num: 4
Globalname: c, contract_name: VaderMath
End popogation
c_4(uint256) := 1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: c_1, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 1
Globalname: c, contract_name: VaderMath
End popogation
c_1(uint256) := a_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_50 cleared
[i] TMP_51 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: VaderMath
End popogation
TMP_50(uint256) = a_1 (c)/ 2
lnorm: 18 rnorm: 0
Source address: u
lnorm: 18 rnorm: 0
9
-1
[i]Type for TMP_50

Name: TMP_50 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_51(uint256) = TMP_50 (c)+ 1
Source address: u
[i]Type for TMP_51

Name: TMP_51 Function: root
Num: 9
Den: -1
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_51(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
[i] x cleared
[i] TMP_52 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
End popogation
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
c_2(uint256) := ϕ(['c_1', 'c_3'])
Phi

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for c

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
x_2(uint256) := ϕ(['x_3', 'x_1'])
Phi

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
TMP_52(bool) = x_2 < c_2
lnorm: 0 rnorm: 18
10
10
-1
[i]Type for TMP_52

Name: TMP_52 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: c_3, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: c, Num: 3
Globalname: c, contract_name: VaderMath
End popogation
c_3(uint256) := x_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
[i] TMP_53 cleared
[i] TMP_54 cleared
[i] TMP_55 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: x_3, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 3
Globalname: x, contract_name: VaderMath
End popogation
TMP_53(uint256) = a_1 (c)/ x_2
lnorm: 18 rnorm: 0
Source address: u
Source address: u
lnorm: 18 rnorm: 0
Source address: u
9
10
[i]Type for TMP_53

Name: TMP_53 Function: root
Num: 9
Den: 10
Address: u
Norm: 18
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
TMP_54(uint256) = TMP_53 (c)+ x_2
10
10
-1
[i]Type for TMP_54

Name: TMP_54 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_55(uint256) = TMP_54 (c)/ 2
lnorm: u rnorm: 0
lnorm: u rnorm: 0
[i]Type for TMP_55

Name: TMP_55 Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
x_3(uint256) := TMP_55(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_38', 'XY_1'])
Phi
[i]Type for a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
[i] TMP_49 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
End popogation
TMP_49(bool) = a_1 > 3
lnorm: 18 rnorm: 0
[i]Type for TMP_49

Name: TMP_49 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_56 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
End popogation
TMP_56(bool) = a_1 != 0
[i]Type for TMP_56

Name: TMP_56 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_4, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: c, Num: 4
Globalname: c, contract_name: VaderMath
End popogation
c_4(uint256) := 1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: c_1, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 1
Globalname: c, contract_name: VaderMath
End popogation
c_1(uint256) := a_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_50 cleared
[i] TMP_51 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: VaderMath
End popogation
TMP_50(uint256) = a_1 (c)/ 2
lnorm: 18 rnorm: 0
Source address: u
lnorm: 18 rnorm: 0
9
-1
[i]Type for TMP_50

Name: TMP_50 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_51(uint256) = TMP_50 (c)+ 1
Source address: u
[i]Type for TMP_51

Name: TMP_51 Function: root
Num: 9
Den: -1
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_51(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
[i] x cleared
[i] TMP_52 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
End popogation
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
c_2(uint256) := ϕ(['c_1', 'c_3'])
Phi

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for c

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
x_2(uint256) := ϕ(['x_3', 'x_1'])
Phi

Name: x Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
TMP_52(bool) = x_2 < c_2
lnorm: 0 rnorm: 18
9
-1
[i]Type for TMP_52

Name: TMP_52 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: c_3, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: c, Num: 3
Globalname: c, contract_name: VaderMath
End popogation
c_3(uint256) := x_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
[i] TMP_53 cleared
[i] TMP_54 cleared
[i] TMP_55 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: x_3, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 3
Globalname: x, contract_name: VaderMath
End popogation
TMP_53(uint256) = a_1 (c)/ x_2
lnorm: 18 rnorm: 0
Source address: u
Source address: u
lnorm: 18 rnorm: 0
Source address: u
Source address: u
[i]Type for TMP_53

Name: TMP_53 Function: root
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
TMP_54(uint256) = TMP_53 (c)+ x_2
Source address: u
[i]Type for TMP_54

Name: TMP_54 Function: root
Num: 9
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
TMP_55(uint256) = TMP_54 (c)/ 2
lnorm: 0 rnorm: 0
Source address: u
lnorm: 0 rnorm: 0
9
-1
[i]Type for TMP_55

Name: TMP_55 Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
x_3(uint256) := TMP_55(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_39

Name: TMP_39 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_40(uint256) = TMP_36 (c)* TMP_39
lnorm: u rnorm: u
[i]Type for TMP_40

Name: TMP_40 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
numeratorA_1(uint256) := TMP_40(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for numeratorA

Name: numeratorA Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_41 cleared
[i] numeratorB cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: numeratorB_1, name: numeratorB

Name: numeratorB Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: numeratorB, Num: 1
Globalname: numeratorB, contract_name: VaderMath
End popogation
TMP_41(uint256) = y2_1 (c)* reserveIn_1
lnorm: 0 rnorm: 18
Source address: u
[i]Type for TMP_41

Name: TMP_41 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
numeratorB_1(uint256) := TMP_41(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for numeratorB

Name: numeratorB Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] numeratorC cleared
Propogating parameters and globals to SSA variables...
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: numeratorC_1, name: numeratorC

Name: numeratorC Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numeratorC, Num: 1
Globalname: numeratorC, contract_name: VaderMath
End popogation
numeratorC_1(uint256) := XY_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for numeratorC

Name: numeratorC Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_42 cleared
[i] TMP_43 cleared
[i] numerator cleared
Propogating parameters and globals to SSA variables...
Ssa_name: numeratorC_1, name: numeratorC

Name: numeratorC Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: numeratorB_1, name: numeratorB

Name: numeratorB Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: numeratorA_1, name: numeratorA

Name: numeratorA Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numeratorA, Num: 1
Globalname: numeratorA, contract_name: VaderMath
Ssa_name: numeratorC_1, name: numeratorC

Name: numeratorC Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: numeratorB_1, name: numeratorB

Name: numeratorB Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: numeratorA_1, name: numeratorA

Name: numeratorA Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numeratorA, Num: 1
Globalname: numeratorA, contract_name: VaderMath
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numerator, Num: 1
Globalname: numerator, contract_name: VaderMath
End popogation
TMP_42(uint256) = numeratorC_1 (c)- numeratorA_1
Source address: u
[i]Type for TMP_42

Name: TMP_42 Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_43(uint256) = TMP_42 (c)- numeratorB_1
[i]Type for TMP_43

Name: TMP_43 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
numerator_1(uint256) := TMP_43(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for numerator

Name: numerator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] denominator cleared
Propogating parameters and globals to SSA variables...
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: denominator, Num: 1
Globalname: denominator, contract_name: VaderMath
End popogation
denominator_1(uint256) := y2_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for denominator

Name: denominator Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] TMP_44 cleared
[i] amountIn cleared
Propogating parameters and globals to SSA variables...
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numerator, Num: 1
Globalname: numerator, contract_name: VaderMath
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numerator, Num: 1
Globalname: numerator, contract_name: VaderMath
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: amountIn, Num: 1
Globalname: amountIn, contract_name: VaderMath
End popogation
TMP_44(uint256) = numerator_1 (c)/ denominator_1
lnorm: u rnorm: 0
lnorm: u rnorm: 0
[i]Type for TMP_44

Name: TMP_44 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
amountIn_1(uint256) := TMP_44(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for amountIn

Name: amountIn Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
End popogation
RETURN amountIn_1
RETURN

Name: amountIn Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_31 cleared
[i] XY cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: XY, Num: 1
Globalname: XY, contract_name: VaderMath
End popogation
TMP_31(uint256) = reserveIn_1 (c)* reserveOut_1
lnorm: 18 rnorm: 6
Source address: u
Source address: u
Source address: u
[i]Type for TMP_31

Name: TMP_31 Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
XY_1(uint256) := TMP_31(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for XY

Name: XY Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_32 cleared
[i] y2 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountOut_1, name: amountOut

Name: amountOut_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountOut_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountOut, Num: 1
Globalname: amountOut, contract_name: VaderMath
Ssa_name: amountOut_1, name: amountOut

Name: amountOut_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountOut_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountOut, Num: 1
Globalname: amountOut, contract_name: VaderMath
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: y2, Num: 1
Globalname: y2, contract_name: VaderMath
End popogation
TMP_32(uint256) = amountOut_1 (c)* 2
lnorm: u rnorm: 0
Source address: u
[i]Type for TMP_32

Name: TMP_32 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
y2_1(uint256) := TMP_32(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] TMP_33 cleared
[i] y4 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: y4, Num: 1
Globalname: y4, contract_name: VaderMath
End popogation
TMP_33(uint256) = y2_1 (c)* 2
lnorm: 0 rnorm: 0
Source address: u
[i]Type for TMP_33

Name: TMP_33 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
y4_1(uint256) := TMP_33(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
[i] TMP_34 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
End popogation
TMP_34(bool) = y4_1 < reserveOut_1
lnorm: 0 rnorm: 6
[i]Type for TMP_34

Name: TMP_34 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_35(None) = SOLIDITY_CALL require(bool,string)(TMP_34,VaderMath::calculateSwapReverse: Desired Output Exceeds Maximum Output Possible (1/4 of Liquidity Pool))
[i]Type for TMP_35

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_36 cleared
[i] TMP_37 cleared
[i] TMP_38 cleared
[i] TMP_39 cleared
[i] TMP_40 cleared
[i] numeratorA cleared
Propogating parameters and globals to SSA variables...
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: numeratorA_1, name: numeratorA

Name: numeratorA Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numeratorA, Num: 1
Globalname: numeratorA, contract_name: VaderMath
End popogation
TMP_36(uint256) = INTERNAL_CALL, VaderMath.root(uint256)(XY_1)
New param cache [[[9, 10], [-1], 24, None, [], -1, 'u', 'u']]
Old param cache: [[[], [], 'u', None, [], -1, 'u']]
[[9, 10], [-1], 24, None, [], -1, 'u', 'u']

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
root(uint256)
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
Propogating All
c_2
Ssa_name: c_2, name: c

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Propogating All
Propogating All
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_38', 'XY_1'])
Phi
[i]Type for a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_49 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_49(bool) = a_1 > 3
lnorm: 24 rnorm: 0
[i]Type for TMP_49

Name: TMP_49 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_56 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_56(bool) = a_1 != 0
[i]Type for TMP_56

Name: TMP_56 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_4, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: c, Num: 4
Globalname: c, contract_name: VaderMath
End popogation
c_4(uint256) := 1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: c_1, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 1
Globalname: c, contract_name: VaderMath
End popogation
c_1(uint256) := a_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_50 cleared
[i] TMP_51 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: VaderMath
End popogation
TMP_50(uint256) = a_1 (c)/ 2
lnorm: 24 rnorm: 0
Source address: u
lnorm: 24 rnorm: 0
10
9
-1
[i]Type for TMP_50

Name: TMP_50 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_51(uint256) = TMP_50 (c)+ 1
Source address: u
[i]Type for TMP_51

Name: TMP_51 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_51(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
[i] x cleared
[i] TMP_52 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
End popogation
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
c_2(uint256) := ϕ(['c_1', 'c_3'])
Phi

Name: c Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for c

Name: c Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
x_2(uint256) := ϕ(['x_3', 'x_1'])
Phi

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_52(bool) = x_2 < c_2
lnorm: 0 rnorm: 24
[i]Type for TMP_52

Name: TMP_52 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: c_3, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: c, Num: 3
Globalname: c, contract_name: VaderMath
End popogation
c_3(uint256) := x_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] TMP_53 cleared
[i] TMP_54 cleared
[i] TMP_55 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: x_3, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 3
Globalname: x, contract_name: VaderMath
End popogation
TMP_53(uint256) = a_1 (c)/ x_2
lnorm: 24 rnorm: 0
Source address: u
Source address: u
lnorm: 24 rnorm: 0
Source address: u
10
-1
[i]Type for TMP_53

Name: TMP_53 Function: root
Num: 10
Den: -1
Address: u
Norm: 24
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_54(uint256) = TMP_53 (c)+ x_2
9
[i]Type for TMP_54

Name: TMP_54 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_55(uint256) = TMP_54 (c)/ 2
lnorm: u rnorm: 0
lnorm: u rnorm: 0
[i]Type for TMP_55

Name: TMP_55 Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
x_3(uint256) := TMP_55(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_38', 'XY_1'])
Phi
[i]Type for a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_49 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_49(bool) = a_1 > 3
lnorm: 24 rnorm: 0
[i]Type for TMP_49

Name: TMP_49 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_56 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_56(bool) = a_1 != 0
[i]Type for TMP_56

Name: TMP_56 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_4, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: c, Num: 4
Globalname: c, contract_name: VaderMath
End popogation
c_4(uint256) := 1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: c_1, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 1
Globalname: c, contract_name: VaderMath
End popogation
c_1(uint256) := a_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_50 cleared
[i] TMP_51 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: VaderMath
End popogation
TMP_50(uint256) = a_1 (c)/ 2
lnorm: 24 rnorm: 0
Source address: u
lnorm: 24 rnorm: 0
10
9
-1
[i]Type for TMP_50

Name: TMP_50 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_51(uint256) = TMP_50 (c)+ 1
Source address: u
[i]Type for TMP_51

Name: TMP_51 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_51(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
[i] x cleared
[i] TMP_52 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
End popogation
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
c_2(uint256) := ϕ(['c_1', 'c_3'])
Phi

Name: c Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for c

Name: c Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
x_2(uint256) := ϕ(['x_3', 'x_1'])
Phi

Name: x Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for x

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
TMP_52(bool) = x_2 < c_2
lnorm: 0 rnorm: 24
10
9
-1
[i]Type for TMP_52

Name: TMP_52 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: c_3, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: c, Num: 3
Globalname: c, contract_name: VaderMath
End popogation
c_3(uint256) := x_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
[i] TMP_53 cleared
[i] TMP_54 cleared
[i] TMP_55 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: x_3, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 3
Globalname: x, contract_name: VaderMath
End popogation
TMP_53(uint256) = a_1 (c)/ x_2
lnorm: 24 rnorm: 0
Source address: u
Source address: u
lnorm: 24 rnorm: 0
Source address: u
Source address: u
[i]Type for TMP_53

Name: TMP_53 Function: root
Num: -1
Den: -1
Address: u
Norm: 24
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
TMP_54(uint256) = TMP_53 (c)+ x_2
Source address: u
[i]Type for TMP_54

Name: TMP_54 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
XXXX
TMP_55(uint256) = TMP_54 (c)/ 2
lnorm: 0 rnorm: 0
Source address: u
lnorm: 0 rnorm: 0
10
9
-1
[i]Type for TMP_55

Name: TMP_55 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
x_3(uint256) := TMP_55(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_36

Name: TMP_36 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_37(uint256) = reserveOut_1 (c)- y4_1
Source address: u
[i]Type for TMP_37

Name: TMP_37 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
TMP_38(uint256) = reserveIn_1 (c)* TMP_37
lnorm: 18 rnorm: 0
Source address: u
[i]Type for TMP_38

Name: TMP_38 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
TMP_39(uint256) = INTERNAL_CALL, VaderMath.root(uint256)(TMP_38)
New param cache [[[9], [-1], 18, None, [], -1, 'u', 4]]
Old param cache: [[[], [], 'u', None, [], -1, 'u']]
[[9], [-1], 18, None, [], -1, 'u', 4]

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
root(uint256)
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
Propogating All
c_2
Ssa_name: c_2, name: c

Name: c Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Propogating All
Propogating All
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_38', 'XY_1'])
Phi
[i]Type for a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
[i] TMP_49 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
End popogation
TMP_49(bool) = a_1 > 3
lnorm: 18 rnorm: 0
[i]Type for TMP_49

Name: TMP_49 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_56 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
End popogation
TMP_56(bool) = a_1 != 0
[i]Type for TMP_56

Name: TMP_56 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_4, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: c, Num: 4
Globalname: c, contract_name: VaderMath
End popogation
c_4(uint256) := 1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: c_1, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 1
Globalname: c, contract_name: VaderMath
End popogation
c_1(uint256) := a_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_50 cleared
[i] TMP_51 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: VaderMath
End popogation
TMP_50(uint256) = a_1 (c)/ 2
lnorm: 18 rnorm: 0
Source address: u
lnorm: 18 rnorm: 0
9
-1
[i]Type for TMP_50

Name: TMP_50 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_51(uint256) = TMP_50 (c)+ 1
Source address: u
[i]Type for TMP_51

Name: TMP_51 Function: root
Num: 9
Den: -1
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_51(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
[i] x cleared
[i] TMP_52 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
End popogation
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
c_2(uint256) := ϕ(['c_1', 'c_3'])
Phi

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef

Name: c Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for c

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
x_2(uint256) := ϕ(['x_3', 'x_1'])
Phi

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for x

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
TMP_52(bool) = x_2 < c_2
lnorm: 0 rnorm: 18
[i]Type for TMP_52

Name: TMP_52 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: c_3, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: c, Num: 3
Globalname: c, contract_name: VaderMath
End popogation
c_3(uint256) := x_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
[i] TMP_53 cleared
[i] TMP_54 cleared
[i] TMP_55 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: x_3, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 3
Globalname: x, contract_name: VaderMath
End popogation
TMP_53(uint256) = a_1 (c)/ x_2
lnorm: 18 rnorm: 0
Source address: u
Source address: u
lnorm: 18 rnorm: 0
Source address: u
-1
10
[i]Type for TMP_53

Name: TMP_53 Function: root
Num: -1
Den: 10
Address: u
Norm: 18
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
TMP_54(uint256) = TMP_53 (c)+ x_2
[i]Type for TMP_54

Name: TMP_54 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_55(uint256) = TMP_54 (c)/ 2
lnorm: u rnorm: 0
lnorm: u rnorm: 0
[i]Type for TMP_55

Name: TMP_55 Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
x_3(uint256) := TMP_55(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_38', 'XY_1'])
Phi
[i]Type for a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
[i] TMP_49 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
End popogation
TMP_49(bool) = a_1 > 3
lnorm: 18 rnorm: 0
[i]Type for TMP_49

Name: TMP_49 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_56 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
End popogation
TMP_56(bool) = a_1 != 0
[i]Type for TMP_56

Name: TMP_56 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_4, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: c, Num: 4
Globalname: c, contract_name: VaderMath
End popogation
c_4(uint256) := 1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: c_1, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 1
Globalname: c, contract_name: VaderMath
End popogation
c_1(uint256) := a_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_50 cleared
[i] TMP_51 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: VaderMath
End popogation
TMP_50(uint256) = a_1 (c)/ 2
lnorm: 18 rnorm: 0
Source address: u
lnorm: 18 rnorm: 0
9
-1
[i]Type for TMP_50

Name: TMP_50 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_51(uint256) = TMP_50 (c)+ 1
Source address: u
[i]Type for TMP_51

Name: TMP_51 Function: root
Num: 9
Den: -1
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_51(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
[i] x cleared
[i] TMP_52 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
End popogation
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
c_2(uint256) := ϕ(['c_1', 'c_3'])
Phi

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef

Name: c Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for c

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
x_2(uint256) := ϕ(['x_3', 'x_1'])
Phi

Name: x Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
TMP_52(bool) = x_2 < c_2
lnorm: 0 rnorm: 18
9
-1
[i]Type for TMP_52

Name: TMP_52 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: c_3, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: c, Num: 3
Globalname: c, contract_name: VaderMath
End popogation
c_3(uint256) := x_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
[i] TMP_53 cleared
[i] TMP_54 cleared
[i] TMP_55 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: x_3, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 3
Globalname: x, contract_name: VaderMath
End popogation
TMP_53(uint256) = a_1 (c)/ x_2
lnorm: 18 rnorm: 0
Source address: u
Source address: u
lnorm: 18 rnorm: 0
Source address: u
Source address: u
[i]Type for TMP_53

Name: TMP_53 Function: root
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
TMP_54(uint256) = TMP_53 (c)+ x_2
Source address: u
[i]Type for TMP_54

Name: TMP_54 Function: root
Num: 9
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
TMP_55(uint256) = TMP_54 (c)/ 2
lnorm: 0 rnorm: 0
Source address: u
lnorm: 0 rnorm: 0
9
-1
[i]Type for TMP_55

Name: TMP_55 Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
x_3(uint256) := TMP_55(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_39

Name: TMP_39 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_40(uint256) = TMP_36 (c)* TMP_39
lnorm: u rnorm: u
[i]Type for TMP_40

Name: TMP_40 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
numeratorA_1(uint256) := TMP_40(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for numeratorA

Name: numeratorA Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_41 cleared
[i] numeratorB cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: numeratorB_1, name: numeratorB

Name: numeratorB Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: numeratorB, Num: 1
Globalname: numeratorB, contract_name: VaderMath
End popogation
TMP_41(uint256) = y2_1 (c)* reserveIn_1
lnorm: 0 rnorm: 18
Source address: u
[i]Type for TMP_41

Name: TMP_41 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
numeratorB_1(uint256) := TMP_41(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for numeratorB

Name: numeratorB Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] numeratorC cleared
Propogating parameters and globals to SSA variables...
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: numeratorC_1, name: numeratorC

Name: numeratorC Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numeratorC, Num: 1
Globalname: numeratorC, contract_name: VaderMath
End popogation
numeratorC_1(uint256) := XY_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for numeratorC

Name: numeratorC Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_42 cleared
[i] TMP_43 cleared
[i] numerator cleared
Propogating parameters and globals to SSA variables...
Ssa_name: numeratorC_1, name: numeratorC

Name: numeratorC Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: numeratorB_1, name: numeratorB

Name: numeratorB Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: numeratorA_1, name: numeratorA

Name: numeratorA Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numeratorA, Num: 1
Globalname: numeratorA, contract_name: VaderMath
Ssa_name: numeratorC_1, name: numeratorC

Name: numeratorC Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: numeratorB_1, name: numeratorB

Name: numeratorB Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: numeratorA_1, name: numeratorA

Name: numeratorA Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numeratorA, Num: 1
Globalname: numeratorA, contract_name: VaderMath
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numerator, Num: 1
Globalname: numerator, contract_name: VaderMath
End popogation
TMP_42(uint256) = numeratorC_1 (c)- numeratorA_1
Source address: u
[i]Type for TMP_42

Name: TMP_42 Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_43(uint256) = TMP_42 (c)- numeratorB_1
[i]Type for TMP_43

Name: TMP_43 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
numerator_1(uint256) := TMP_43(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for numerator

Name: numerator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] denominator cleared
Propogating parameters and globals to SSA variables...
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: denominator, Num: 1
Globalname: denominator, contract_name: VaderMath
End popogation
denominator_1(uint256) := y2_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for denominator

Name: denominator Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] TMP_44 cleared
[i] amountIn cleared
Propogating parameters and globals to SSA variables...
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numerator, Num: 1
Globalname: numerator, contract_name: VaderMath
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numerator, Num: 1
Globalname: numerator, contract_name: VaderMath
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: amountIn, Num: 1
Globalname: amountIn, contract_name: VaderMath
End popogation
TMP_44(uint256) = numerator_1 (c)/ denominator_1
lnorm: u rnorm: 0
lnorm: u rnorm: 0
[i]Type for TMP_44

Name: TMP_44 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
amountIn_1(uint256) := TMP_44(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for amountIn

Name: amountIn Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
End popogation
RETURN amountIn_1
RETURN

Name: amountIn Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Source address: u
Source address: u
[i]Type for TMP_89

Name: TMP_89 Function: calculateInGivenOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
RETURN TMP_89
RETURN

Name: TMP_89 Function: calculateInGivenOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
([-1], [-1], 0, 2, 'u', -1)
[i]Type for TMP_41

Name: TMP_41 Function: swapTokensForExactTokens
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
amountIn_1(uint256) := TMP_41(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for amountIn

Name: amountIn Function: swapTokensForExactTokens
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] TMP_42 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: swapTokensForExactTokens
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: amountInMax_1, name: amountInMax

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountInMax_1 Function: swapTokensForExactTokens
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountInMax, Num: 1
Globalname: amountInMax, contract_name: VaderRouter
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: swapTokensForExactTokens
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: amountInMax_1, name: amountInMax

Name: amountInMax_1 Function: swapTokensForExactTokens
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountInMax_1 Function: swapTokensForExactTokens
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountInMax, Num: 1
Globalname: amountInMax, contract_name: VaderRouter
End popogation
TMP_42(bool) = amountInMax_1 >= amountIn_1
lnorm: u rnorm: 0
Source address: u
Source address: u
[i]Type for TMP_42

Name: TMP_42 Function: swapTokensForExactTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_43(None) = SOLIDITY_CALL require(bool,string)(TMP_42,VaderRouter::swapTokensForExactTokens: Large Trade Input)
[i]Type for TMP_43

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_44 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: path_1 (-> []), name: path

Name: path_1 (-> []) Function: swapTokensForExactTokens
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: -991

Name: to_1 Function: swapTokensForExactTokens
Num: 
Den: 
Address: -991
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: swapTokensForExactTokens
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: path_1 (-> []), name: path

Name: path_1 (-> []) Function: swapTokensForExactTokens
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to_1 Function: swapTokensForExactTokens
Num: 
Den: 
Address: -991
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: swapTokensForExactTokens
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
End popogation
TMP_44(uint256) = INTERNAL_CALL, VaderRouter._swap(uint256,address[],address)(amountIn_1,path_1 (-> []),to_1)
New param cache [[[-1], [-1], 0, None, [], -1, 'u', 2], [[], [], 0, None, [], -1, -992, 'u'], [[], [], 0, 'to', [], -1, -991, 'u']]
Old param cache: [[[], [], 'u', None, [], -1, 'u'], [[], [], 0, None, [], -1, -994], [[], [], 0, 'to', [], -1, -993]]
[[-1], [-1], 0, None, [], -1, 'u', 2]

Name: amountIn Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
[[], [], 0, None, [], -1, -992, 'u']

Name: path Function: None
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
[[], [], 0, 'to', [], -1, -991, 'u']

Name: to Function: None
Num: 
Den: 
Address: -991
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_swap(uint256,address[],address)
Propogating All
Propogating All
path_1 (-> [])
Ssa_name: path_1 (-> []), name: path

Name: path Function: _swap
Num: 
Den: 
Address: -994
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: -992

Name: path_1 (-> []) Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
path_1 (-> [])
Ssa_name: path_1 (-> []), name: path

Name: path_1 (-> []) Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: -992

Name: path_1 (-> []) Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
path_1 (-> [])
Ssa_name: path_1 (-> []), name: path

Name: path_1 (-> []) Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: -992

Name: path_1 (-> []) Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
path_1 (-> [])
Ssa_name: path_1 (-> []), name: path

Name: path_1 (-> []) Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: -992

Name: path_1 (-> []) Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
path_1 (-> [])
Ssa_name: path_1 (-> []), name: path

Name: path_1 (-> []) Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: -992

Name: path_1 (-> []) Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
path_1 (-> [])
Ssa_name: path_1 (-> []), name: path

Name: path_1 (-> []) Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: -992

Name: path_1 (-> []) Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
path_1 (-> [])
Ssa_name: path_1 (-> []), name: path

Name: path_1 (-> []) Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: -992

Name: path_1 (-> []) Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
path_1 (-> [])
Ssa_name: path_1 (-> []), name: path

Name: path_1 (-> []) Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: -992

Name: path_1 (-> []) Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
amountIn_1
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: _swap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Copied ftype
pool0_1
Ssa_name: pool0_1, name: pool0

Name: pool0 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
pool1_1
Ssa_name: pool1_1, name: pool1

Name: pool1 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
to_1
Ssa_name: to_1, name: to

Name: to Function: _swap
Num: 
Den: 
Address: -993
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Source address: -991

Name: to_1 Function: _swap
Num: 
Den: 
Address: -991
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Copied ftype
amountIn_1
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: _swap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: _swap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Copied ftype
pool0_1
Ssa_name: pool0_1, name: pool0

Name: pool0 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
path_1 (-> [])
Ssa_name: path_1 (-> []), name: path

Name: path_1 (-> []) Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: -992

Name: path_1 (-> []) Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
amountIn_1
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: _swap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: _swap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Copied ftype
pool_1
Ssa_name: pool_1, name: pool

Name: pool Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
path_1 (-> [])
Ssa_name: path_1 (-> []), name: path

Name: path_1 (-> []) Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: -992

Name: path_1 (-> []) Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
nativeAsset_1
Ssa_name: nativeAsset_1, name: nativeAsset

Name: nativeAsset Function: _swap
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Propogating All
to_1
Ssa_name: to_1, name: to

Name: to_1 Function: _swap
Num: 
Den: 
Address: -991
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Source address: -991

Name: to_1 Function: _swap
Num: 
Den: 
Address: -991
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Copied ftype
amountIn_1
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: _swap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: _swap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Copied ftype
pool_1
Ssa_name: pool_1, name: pool

Name: pool Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
path_1 (-> [])
Ssa_name: path_1 (-> []), name: path

Name: path_1 (-> []) Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: -992

Name: path_1 (-> []) Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
nativeAsset_1
Ssa_name: nativeAsset_1, name: nativeAsset

Name: nativeAsset Function: _swap
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Propogating All
to_1
Ssa_name: to_1, name: to

Name: to_1 Function: _swap
Num: 
Den: 
Address: -991
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Source address: -991

Name: to_1 Function: _swap
Num: 
Den: 
Address: -991
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Copied ftype
amountIn_1
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: _swap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: _swap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Copied ftype
pool_1
Ssa_name: pool_1, name: pool

Name: pool Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] amountIn cleared
[i] path cleared
[i] to cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: _swap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: path_1 (-> []), name: path

Name: path_1 (-> []) Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: -992

Name: path_1 (-> []) Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: to_1, name: to

Name: to_1 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: to
Value: u
Fields: 
Finance Type: undef
Source address: -991

Name: to_1 Function: _swap
Num: 
Den: 
Address: -991
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: factory_8, name: factory

Name: factory Function: _swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
amountIn_1(uint256) := ϕ(['amountIn_1', 'amountIn_1'])
Phi
[i]Type for amountIn

Name: amountIn Function: _swap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
path_1 (-> [])(address[]) := ϕ(['path_1 (-> [])', 'path_1 (-> [])'])
Phi
[i]Type for path

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
to_1(address) := ϕ(['to_1', 'to_1'])
Phi
[i]Type for to

Name: to Function: _swap
Num: 
Den: 
Address: -991
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
XXXX
factory_8(IVaderPoolFactory) := ϕ(['factory_13', 'factory_0', 'factory_16', 'factory_10', 'factory_19', 'factory_21', 'factory_15', 'factory_26', 'factory_1', 'factory_24', 'factory_7'])
Phi
[i]Type for factory

Name: factory Function: _swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_51 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: path_1 (-> []), name: path

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: path_1 (-> []), name: path

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
REF_8 -> LENGTH path_1 (-> [])
[i]Type for REF_8

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_51(bool) = REF_8 == 3
[i]Type for TMP_51

Name: TMP_51 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_52 cleared
[i] TMP_53 cleared
[i] TMP_54 cleared
[i] TMP_55 cleared
[i] TMP_56 cleared
[i] TMP_57 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: path_1 (-> []), name: path

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: factory_8, name: factory

Name: factory Function: _swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: factory_8, name: factory

Name: factory Function: _swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: path_1 (-> []), name: path

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
Ssa_name: factory_11, name: factory

Name: factory Function: _swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_9(address) -> path_1 (-> [])[0]
INDEX
REFERENCE LEFT VALUE PROPAGATION
Source address: -992
[i]Type for REF_9

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_10(address) -> path_1 (-> [])[1]
INDEX
REFERENCE LEFT VALUE PROPAGATION
Source address: -992
[i]Type for REF_10

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_52(bool) = REF_9 != REF_10
[i]Type for TMP_52

Name: TMP_52 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_11(address) -> path_1 (-> [])[1]
INDEX
REFERENCE LEFT VALUE PROPAGATION
Source address: -992
[i]Type for REF_11

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_53(address) = HIGH_LEVEL_CALL, dest:factory_8(IVaderPoolFactory), function:nativeAsset, arguments:[]  
High Call: nativeAsset
Running querryfc
Found: None
Written func info: IVaderPoolFactory, nativeAsset
Retvar: ('c', ['global:nativeAsset'], ['-1'], 18, "'u'", 'u')
{'global:_owner': 1, 'global:_tokenApprovals': 2, 'global:_owners': 3, 'swap:to': -999, 'mint:to': -998, 'mint:TMP_139': 4, 'global:this': 4, 'None:None': 5, 'mint:foreignAsset': 6, 'swap:_nativeAsset': 7, 'swap:_foreignAsset': 8, 'global:nativeAsset': 9, 'global:foreignAsset': 10, 'global:_ZERO_ADDRESS': 11, 'removeLiquidity:tokenA': -997, 'removeLiquidity:tokenB': -996, 'removeLiquidity:to': -995, 'swapExactTokensForTokens:path': -994, 'swapExactTokensForTokens:to': -993, 'swapTokensForExactTokens:path': -992, 'swapTokensForExactTokens:to': -991, 'calculateInGivenOut:path': -990, 'calculateOutGivenIn:path': -989}
([9], [-1], 18, "'u'", 'u', -1)
[i]Type for TMP_53

Name: TMP_53 Function: _swap
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
factory_11(IVaderPoolFactory) := ϕ(['factory_13', 'factory_16', 'factory_10', 'factory_19', 'factory_21', 'factory_15', 'factory_26', 'factory_1', 'factory_24', 'factory_7'])
Phi
[i]Type for factory

Name: factory Function: _swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_54(bool) = REF_11 == TMP_53
[i]Type for TMP_54

Name: TMP_54 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_55(bool) = TMP_52 && TMP_54
[i]Type for TMP_55

Name: TMP_55 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_13(address) -> path_1 (-> [])[2]
INDEX
REFERENCE LEFT VALUE PROPAGATION
Source address: -992
[i]Type for REF_13

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_14(address) -> path_1 (-> [])[1]
INDEX
REFERENCE LEFT VALUE PROPAGATION
Source address: -992
[i]Type for REF_14

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_56(bool) = REF_13 != REF_14
[i]Type for TMP_56

Name: TMP_56 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_57(bool) = TMP_55 && TMP_56
[i]Type for TMP_57

Name: TMP_57 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_58(None) = SOLIDITY_CALL require(bool,string)(TMP_57,VaderRouter::_swap: Incorrect Path)
[i]Type for TMP_58

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_67 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: path_1 (-> []), name: path

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: path_1 (-> []), name: path

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
REF_25 -> LENGTH path_1 (-> [])
[i]Type for REF_25

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_67(bool) = REF_25 == 2
[i]Type for TMP_67

Name: TMP_67 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_68(None) = SOLIDITY_CALL require(bool,string)(TMP_67,VaderRouter::_swap: Incorrect Path Length)
[i]Type for TMP_68

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_69 cleared
[i] nativeAsset cleared
Propogating parameters and globals to SSA variables...
Ssa_name: factory_8, name: factory

Name: factory Function: _swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: factory_8, name: factory

Name: factory Function: _swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeAsset_1, name: nativeAsset

Name: nativeAsset Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Name: nativeAsset, Num: 1
Globalname: nativeAsset, contract_name: VaderRouter
End popogation
Ssa_name: factory_9, name: factory

Name: factory Function: _swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_69(address) = HIGH_LEVEL_CALL, dest:factory_8(IVaderPoolFactory), function:nativeAsset, arguments:[]  
High Call: nativeAsset
Running querryfc
Found: None
Written func info: IVaderPoolFactory, nativeAsset
Retvar: ('c', ['global:nativeAsset'], ['-1'], 18, "'u'", 'u')
{'global:_owner': 1, 'global:_tokenApprovals': 2, 'global:_owners': 3, 'swap:to': -999, 'mint:to': -998, 'mint:TMP_139': 4, 'global:this': 4, 'None:None': 5, 'mint:foreignAsset': 6, 'swap:_nativeAsset': 7, 'swap:_foreignAsset': 8, 'global:nativeAsset': 9, 'global:foreignAsset': 10, 'global:_ZERO_ADDRESS': 11, 'removeLiquidity:tokenA': -997, 'removeLiquidity:tokenB': -996, 'removeLiquidity:to': -995, 'swapExactTokensForTokens:path': -994, 'swapExactTokensForTokens:to': -993, 'swapTokensForExactTokens:path': -992, 'swapTokensForExactTokens:to': -991, 'calculateInGivenOut:path': -990, 'calculateOutGivenIn:path': -989}
([9], [-1], 18, "'u'", 'u', -1)
[i]Type for TMP_69

Name: TMP_69 Function: _swap
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
factory_9(IVaderPoolFactory) := ϕ(['factory_8', 'factory_13', 'factory_16', 'factory_10', 'factory_19', 'factory_21', 'factory_15', 'factory_26', 'factory_1', 'factory_24', 'factory_7'])
Phi
[i]Type for factory

Name: factory Function: _swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
nativeAsset_1(address) := TMP_69(address)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for nativeAsset

Name: nativeAsset Function: _swap
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
[i] TMP_59 cleared
[i] pool0 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: path_1 (-> []), name: path

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: factory_11, name: factory

Name: factory Function: _swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: factory_11, name: factory

Name: factory Function: _swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: path_1 (-> []), name: path

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: pool0_1, name: pool0

Name: pool0 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pool0, Num: 1
Globalname: pool0, contract_name: VaderRouter
End popogation
Ssa_name: factory_12, name: factory

Name: factory Function: _swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_16(address) -> path_1 (-> [])[0]
INDEX
REFERENCE LEFT VALUE PROPAGATION
Source address: -992
[i]Type for REF_16

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_17(address) -> path_1 (-> [])[1]
INDEX
REFERENCE LEFT VALUE PROPAGATION
Source address: -992
[i]Type for REF_17

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_59(IVaderPool) = HIGH_LEVEL_CALL, dest:factory_11(IVaderPoolFactory), function:getPool, arguments:['REF_16', 'REF_17']  
High Call: getPool
Running querryfc
Found: None
Written func info: IVaderPoolFactory, getPool
[i]Type for TMP_59

Name: TMP_59 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
factory_12(IVaderPoolFactory) := ϕ(['factory_13', 'factory_16', 'factory_10', 'factory_19', 'factory_21', 'factory_15', 'factory_26', 'factory_1', 'factory_24', 'factory_7', 'factory_11'])
Phi
[i]Type for factory

Name: factory Function: _swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
pool0_1(IVaderPool) := TMP_59(IVaderPool)
asgn
Finance type key: (-1, -1)
[i]Type for pool0

Name: pool0 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_70 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: path_1 (-> []), name: path

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: path_1 (-> []), name: path

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
REF_27(address) -> path_1 (-> [])[0]
INDEX
REFERENCE LEFT VALUE PROPAGATION
Source address: -992
[i]Type for REF_27

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_28(address) -> path_1 (-> [])[1]
INDEX
REFERENCE LEFT VALUE PROPAGATION
Source address: -992
[i]Type for REF_28

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_70(bool) = REF_27 != REF_28
[i]Type for TMP_70

Name: TMP_70 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_71(None) = SOLIDITY_CALL require(bool,string)(TMP_70,VaderRouter::_swap: Incorrect Path)
[i]Type for TMP_71

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_60 cleared
[i] pool1 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: path_1 (-> []), name: path

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: factory_12, name: factory

Name: factory Function: _swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: factory_12, name: factory

Name: factory Function: _swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: path_1 (-> []), name: path

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: pool1_1, name: pool1

Name: pool1 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pool1, Num: 1
Globalname: pool1, contract_name: VaderRouter
End popogation
Ssa_name: factory_13, name: factory

Name: factory Function: _swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_19(address) -> path_1 (-> [])[1]
INDEX
REFERENCE LEFT VALUE PROPAGATION
Source address: -992
[i]Type for REF_19

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_20(address) -> path_1 (-> [])[2]
INDEX
REFERENCE LEFT VALUE PROPAGATION
Source address: -992
[i]Type for REF_20

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_60(IVaderPool) = HIGH_LEVEL_CALL, dest:factory_12(IVaderPoolFactory), function:getPool, arguments:['REF_19', 'REF_20']  
High Call: getPool
Running querryfc
Found: None
Written func info: IVaderPoolFactory, getPool
[i]Type for TMP_60

Name: TMP_60 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
factory_13(IVaderPoolFactory) := ϕ(['factory_12', 'factory_13', 'factory_16', 'factory_10', 'factory_19', 'factory_21', 'factory_15', 'factory_26', 'factory_1', 'factory_24', 'factory_7'])
Phi
[i]Type for factory

Name: factory Function: _swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
pool1_1(IVaderPool) := TMP_60(IVaderPool)
asgn
Finance type key: (-1, -1)
[i]Type for pool1

Name: pool1 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_72 cleared
[i] pool cleared
Propogating parameters and globals to SSA variables...
Ssa_name: path_1 (-> []), name: path

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: factory_9, name: factory

Name: factory Function: _swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: path_1 (-> []), name: path

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: factory_9, name: factory

Name: factory Function: _swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: pool_1, name: pool

Name: pool Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pool, Num: 1
Globalname: pool, contract_name: VaderRouter
End popogation
Ssa_name: factory_10, name: factory

Name: factory Function: _swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_30(address) -> path_1 (-> [])[0]
INDEX
REFERENCE LEFT VALUE PROPAGATION
Source address: -992
[i]Type for REF_30

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_31(address) -> path_1 (-> [])[1]
INDEX
REFERENCE LEFT VALUE PROPAGATION
Source address: -992
[i]Type for REF_31

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_72(IVaderPool) = HIGH_LEVEL_CALL, dest:factory_9(IVaderPoolFactory), function:getPool, arguments:['REF_30', 'REF_31']  
High Call: getPool
Running querryfc
Found: None
Written func info: IVaderPoolFactory, getPool
[i]Type for TMP_72

Name: TMP_72 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
factory_10(IVaderPoolFactory) := ϕ(['factory_13', 'factory_16', 'factory_10', 'factory_19', 'factory_21', 'factory_15', 'factory_26', 'factory_9', 'factory_1', 'factory_24', 'factory_7'])
Phi
[i]Type for factory

Name: factory Function: _swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
pool_1(IVaderPool) := TMP_72(IVaderPool)
asgn
Finance type key: (-1, -1)
[i]Type for pool

Name: pool Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_61 cleared
[i] TMP_62 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: path_1 (-> []), name: path

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _swap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: pool0_1, name: pool0

Name: pool0 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pool0, Num: 1
Globalname: pool0, contract_name: VaderRouter
Ssa_name: path_1 (-> []), name: path

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _swap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: pool0_1, name: pool0

Name: pool0 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pool0, Num: 1
Globalname: pool0, contract_name: VaderRouter
End popogation
REF_21(address) -> path_1 (-> [])[0]
INDEX
REFERENCE LEFT VALUE PROPAGATION
Source address: -992
[i]Type for REF_21

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_61 = CONVERT REF_21 to IERC20
Converting REF_21

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: -992
ERC20
[i]Type for TMP_61

Name: TMP_61 Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: ERC20
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_62 = CONVERT pool0_1 to address
Converting pool0_1

Name: pool0 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_62

Name: TMP_62 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
LIBRARY_CALL, dest:SafeERC20, function:SafeERC20.safeTransferFrom(IERC20,address,address,uint256), arguments:['TMP_61', 'msg.sender', 'TMP_62', 'amountIn_1'] 
[i] TMP_73 cleared
[i] TMP_74 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: path_1 (-> []), name: path

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _swap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: pool_1, name: pool

Name: pool Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pool, Num: 1
Globalname: pool, contract_name: VaderRouter
Ssa_name: path_1 (-> []), name: path

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _swap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: pool_1, name: pool

Name: pool Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pool, Num: 1
Globalname: pool, contract_name: VaderRouter
End popogation
REF_32(address) -> path_1 (-> [])[0]
INDEX
REFERENCE LEFT VALUE PROPAGATION
Source address: -992
[i]Type for REF_32

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_73 = CONVERT REF_32 to IERC20
Converting REF_32

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: -992
ERC20
[i]Type for TMP_73

Name: TMP_73 Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: ERC20
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_74 = CONVERT pool_1 to address
Converting pool_1

Name: pool Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_74

Name: TMP_74 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
LIBRARY_CALL, dest:SafeERC20, function:SafeERC20.safeTransferFrom(IERC20,address,address,uint256), arguments:['TMP_73', 'msg.sender', 'TMP_74', 'amountIn_1'] 
[i] TMP_76 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: path_1 (-> []), name: path

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeAsset_1, name: nativeAsset

Name: nativeAsset Function: _swap
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: path_1 (-> []), name: path

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeAsset_1, name: nativeAsset

Name: nativeAsset Function: _swap
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
End popogation
REF_34(address) -> path_1 (-> [])[0]
INDEX
REFERENCE LEFT VALUE PROPAGATION
Source address: -992
[i]Type for REF_34

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_76(bool) = REF_34 == nativeAsset_1
[i]Type for TMP_76

Name: TMP_76 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_77 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: to_1, name: to

Name: to Function: _swap
Num: 
Den: 
Address: -991
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _swap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: pool_1, name: pool

Name: pool Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pool, Num: 1
Globalname: pool, contract_name: VaderRouter
Ssa_name: to_1, name: to

Name: to Function: _swap
Num: 
Den: 
Address: -991
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _swap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: pool_1, name: pool

Name: pool Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pool, Num: 1
Globalname: pool, contract_name: VaderRouter
End popogation
TMP_77(uint256) = HIGH_LEVEL_CALL, dest:pool_1(IVaderPool), function:swap, arguments:['amountIn_1', '0', 'to_1']  
High Call: swap
Running querryfc
Found: None
Written func info: IVaderPool, swap
[i]Type for TMP_77

Name: TMP_77 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_77
RETURN

Name: TMP_77 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] TMP_78 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: path_1 (-> []), name: path

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeAsset_1, name: nativeAsset

Name: nativeAsset Function: _swap
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: path_1 (-> []), name: path

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeAsset_1, name: nativeAsset

Name: nativeAsset Function: _swap
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
End popogation
REF_36(address) -> path_1 (-> [])[1]
INDEX
REFERENCE LEFT VALUE PROPAGATION
Source address: -992
[i]Type for REF_36

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_78(bool) = REF_36 == nativeAsset_1
[i]Type for TMP_78

Name: TMP_78 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_79(None) = SOLIDITY_CALL require(bool,string)(TMP_78,VaderRouter::_swap: Incorrect Path)
[i]Type for TMP_79

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_80 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: to_1, name: to

Name: to Function: _swap
Num: 
Den: 
Address: -991
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _swap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: pool_1, name: pool

Name: pool Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pool, Num: 1
Globalname: pool, contract_name: VaderRouter
Ssa_name: to_1, name: to

Name: to Function: _swap
Num: 
Den: 
Address: -991
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _swap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: pool_1, name: pool

Name: pool Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pool, Num: 1
Globalname: pool, contract_name: VaderRouter
End popogation
TMP_80(uint256) = HIGH_LEVEL_CALL, dest:pool_1(IVaderPool), function:swap, arguments:['0', 'amountIn_1', 'to_1']  
High Call: swap
Running querryfc
Found: None
Written func info: IVaderPool, swap
[i]Type for TMP_80

Name: TMP_80 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_80
RETURN

Name: TMP_80 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] TMP_64 cleared
[i] TMP_65 cleared
[i] TMP_66 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: pool1_1, name: pool1

Name: pool1 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pool1, Num: 1
Globalname: pool1, contract_name: VaderRouter
Ssa_name: to_1, name: to

Name: to Function: _swap
Num: 
Den: 
Address: -991
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _swap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: pool0_1, name: pool0

Name: pool0 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pool0, Num: 1
Globalname: pool0, contract_name: VaderRouter
Ssa_name: pool1_1, name: pool1

Name: pool1 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pool1, Num: 1
Globalname: pool1, contract_name: VaderRouter
Ssa_name: to_1, name: to

Name: to Function: _swap
Num: 
Den: 
Address: -991
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _swap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: pool0_1, name: pool0

Name: pool0 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pool0, Num: 1
Globalname: pool0, contract_name: VaderRouter
End popogation
TMP_64 = CONVERT pool1_1 to address
Converting pool1_1

Name: pool1 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_64

Name: TMP_64 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_65(uint256) = HIGH_LEVEL_CALL, dest:pool0_1(IVaderPool), function:swap, arguments:['amountIn_1', '0', 'TMP_64']  
High Call: swap
Running querryfc
Found: None
Written func info: IVaderPool, swap
[i]Type for TMP_65

Name: TMP_65 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_66(uint256) = HIGH_LEVEL_CALL, dest:pool1_1(IVaderPool), function:swap, arguments:['0', 'TMP_65', 'to_1']  
High Call: swap
Running querryfc
Found: None
Written func info: IVaderPool, swap
[i]Type for TMP_66

Name: TMP_66 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_66
RETURN

Name: TMP_66 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] amountIn cleared
[i] path cleared
[i] to cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: _swap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: path_1 (-> []), name: path

Name: path Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: -992

Name: path_1 (-> []) Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: to_1, name: to

Name: to Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: to
Value: u
Fields: 
Finance Type: undef
Source address: -991

Name: to_1 Function: _swap
Num: 
Den: 
Address: -991
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: factory_8, name: factory

Name: factory Function: _swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
amountIn_1(uint256) := ϕ(['amountIn_1', 'amountIn_1'])
Phi
[i]Type for amountIn

Name: amountIn Function: _swap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
path_1 (-> [])(address[]) := ϕ(['path_1 (-> [])', 'path_1 (-> [])'])
Phi
[i]Type for path

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
to_1(address) := ϕ(['to_1', 'to_1'])
Phi
[i]Type for to

Name: to Function: _swap
Num: 
Den: 
Address: -991
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
XXXX
factory_8(IVaderPoolFactory) := ϕ(['factory_13', 'factory_0', 'factory_16', 'factory_10', 'factory_19', 'factory_21', 'factory_15', 'factory_26', 'factory_1', 'factory_24', 'factory_7'])
Phi
[i]Type for factory

Name: factory Function: _swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_51 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: path_1 (-> []), name: path

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: path_1 (-> []), name: path

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
REF_8 -> LENGTH path_1 (-> [])
[i]Type for REF_8

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_51(bool) = REF_8 == 3
[i]Type for TMP_51

Name: TMP_51 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_52 cleared
[i] TMP_53 cleared
[i] TMP_54 cleared
[i] TMP_55 cleared
[i] TMP_56 cleared
[i] TMP_57 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: path_1 (-> []), name: path

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: factory_8, name: factory

Name: factory Function: _swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: factory_8, name: factory

Name: factory Function: _swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: path_1 (-> []), name: path

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
Ssa_name: factory_11, name: factory

Name: factory Function: _swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_9(address) -> path_1 (-> [])[0]
INDEX
REFERENCE LEFT VALUE PROPAGATION
Source address: -992
[i]Type for REF_9

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_10(address) -> path_1 (-> [])[1]
INDEX
REFERENCE LEFT VALUE PROPAGATION
Source address: -992
[i]Type for REF_10

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_52(bool) = REF_9 != REF_10
[i]Type for TMP_52

Name: TMP_52 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_11(address) -> path_1 (-> [])[1]
INDEX
REFERENCE LEFT VALUE PROPAGATION
Source address: -992
[i]Type for REF_11

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_53(address) = HIGH_LEVEL_CALL, dest:factory_8(IVaderPoolFactory), function:nativeAsset, arguments:[]  
High Call: nativeAsset
Running querryfc
Found: None
Written func info: IVaderPoolFactory, nativeAsset
Retvar: ('c', ['global:nativeAsset'], ['-1'], 18, "'u'", 'u')
{'global:_owner': 1, 'global:_tokenApprovals': 2, 'global:_owners': 3, 'swap:to': -999, 'mint:to': -998, 'mint:TMP_139': 4, 'global:this': 4, 'None:None': 5, 'mint:foreignAsset': 6, 'swap:_nativeAsset': 7, 'swap:_foreignAsset': 8, 'global:nativeAsset': 9, 'global:foreignAsset': 10, 'global:_ZERO_ADDRESS': 11, 'removeLiquidity:tokenA': -997, 'removeLiquidity:tokenB': -996, 'removeLiquidity:to': -995, 'swapExactTokensForTokens:path': -994, 'swapExactTokensForTokens:to': -993, 'swapTokensForExactTokens:path': -992, 'swapTokensForExactTokens:to': -991, 'calculateInGivenOut:path': -990, 'calculateOutGivenIn:path': -989}
([9], [-1], 18, "'u'", 'u', -1)
[i]Type for TMP_53

Name: TMP_53 Function: _swap
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
factory_11(IVaderPoolFactory) := ϕ(['factory_13', 'factory_16', 'factory_10', 'factory_19', 'factory_21', 'factory_15', 'factory_26', 'factory_1', 'factory_24', 'factory_7'])
Phi
[i]Type for factory

Name: factory Function: _swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_54(bool) = REF_11 == TMP_53
[i]Type for TMP_54

Name: TMP_54 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_55(bool) = TMP_52 && TMP_54
[i]Type for TMP_55

Name: TMP_55 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_13(address) -> path_1 (-> [])[2]
INDEX
REFERENCE LEFT VALUE PROPAGATION
Source address: -992
[i]Type for REF_13

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_14(address) -> path_1 (-> [])[1]
INDEX
REFERENCE LEFT VALUE PROPAGATION
Source address: -992
[i]Type for REF_14

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_56(bool) = REF_13 != REF_14
[i]Type for TMP_56

Name: TMP_56 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_57(bool) = TMP_55 && TMP_56
[i]Type for TMP_57

Name: TMP_57 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_58(None) = SOLIDITY_CALL require(bool,string)(TMP_57,VaderRouter::_swap: Incorrect Path)
[i]Type for TMP_58

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_67 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: path_1 (-> []), name: path

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: path_1 (-> []), name: path

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
REF_25 -> LENGTH path_1 (-> [])
[i]Type for REF_25

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_67(bool) = REF_25 == 2
[i]Type for TMP_67

Name: TMP_67 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_68(None) = SOLIDITY_CALL require(bool,string)(TMP_67,VaderRouter::_swap: Incorrect Path Length)
[i]Type for TMP_68

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_69 cleared
[i] nativeAsset cleared
Propogating parameters and globals to SSA variables...
Ssa_name: factory_8, name: factory

Name: factory Function: _swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: factory_8, name: factory

Name: factory Function: _swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeAsset_1, name: nativeAsset

Name: nativeAsset Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Name: nativeAsset, Num: 1
Globalname: nativeAsset, contract_name: VaderRouter
End popogation
Ssa_name: factory_9, name: factory

Name: factory Function: _swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_69(address) = HIGH_LEVEL_CALL, dest:factory_8(IVaderPoolFactory), function:nativeAsset, arguments:[]  
High Call: nativeAsset
Running querryfc
Found: None
Written func info: IVaderPoolFactory, nativeAsset
Retvar: ('c', ['global:nativeAsset'], ['-1'], 18, "'u'", 'u')
{'global:_owner': 1, 'global:_tokenApprovals': 2, 'global:_owners': 3, 'swap:to': -999, 'mint:to': -998, 'mint:TMP_139': 4, 'global:this': 4, 'None:None': 5, 'mint:foreignAsset': 6, 'swap:_nativeAsset': 7, 'swap:_foreignAsset': 8, 'global:nativeAsset': 9, 'global:foreignAsset': 10, 'global:_ZERO_ADDRESS': 11, 'removeLiquidity:tokenA': -997, 'removeLiquidity:tokenB': -996, 'removeLiquidity:to': -995, 'swapExactTokensForTokens:path': -994, 'swapExactTokensForTokens:to': -993, 'swapTokensForExactTokens:path': -992, 'swapTokensForExactTokens:to': -991, 'calculateInGivenOut:path': -990, 'calculateOutGivenIn:path': -989}
([9], [-1], 18, "'u'", 'u', -1)
[i]Type for TMP_69

Name: TMP_69 Function: _swap
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
factory_9(IVaderPoolFactory) := ϕ(['factory_8', 'factory_13', 'factory_16', 'factory_10', 'factory_19', 'factory_21', 'factory_15', 'factory_26', 'factory_1', 'factory_24', 'factory_7'])
Phi
[i]Type for factory

Name: factory Function: _swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
nativeAsset_1(address) := TMP_69(address)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for nativeAsset

Name: nativeAsset Function: _swap
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
[i] TMP_59 cleared
[i] pool0 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: path_1 (-> []), name: path

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: factory_11, name: factory

Name: factory Function: _swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: factory_11, name: factory

Name: factory Function: _swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: path_1 (-> []), name: path

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: pool0_1, name: pool0

Name: pool0 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pool0, Num: 1
Globalname: pool0, contract_name: VaderRouter
End popogation
Ssa_name: factory_12, name: factory

Name: factory Function: _swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_16(address) -> path_1 (-> [])[0]
INDEX
REFERENCE LEFT VALUE PROPAGATION
Source address: -992
[i]Type for REF_16

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_17(address) -> path_1 (-> [])[1]
INDEX
REFERENCE LEFT VALUE PROPAGATION
Source address: -992
[i]Type for REF_17

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_59(IVaderPool) = HIGH_LEVEL_CALL, dest:factory_11(IVaderPoolFactory), function:getPool, arguments:['REF_16', 'REF_17']  
High Call: getPool
Running querryfc
Found: None
Written func info: IVaderPoolFactory, getPool
[i]Type for TMP_59

Name: TMP_59 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
factory_12(IVaderPoolFactory) := ϕ(['factory_13', 'factory_16', 'factory_10', 'factory_19', 'factory_21', 'factory_15', 'factory_26', 'factory_1', 'factory_24', 'factory_7', 'factory_11'])
Phi
[i]Type for factory

Name: factory Function: _swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
pool0_1(IVaderPool) := TMP_59(IVaderPool)
asgn
Finance type key: (-1, -1)
[i]Type for pool0

Name: pool0 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_70 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: path_1 (-> []), name: path

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: path_1 (-> []), name: path

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
REF_27(address) -> path_1 (-> [])[0]
INDEX
REFERENCE LEFT VALUE PROPAGATION
Source address: -992
[i]Type for REF_27

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_28(address) -> path_1 (-> [])[1]
INDEX
REFERENCE LEFT VALUE PROPAGATION
Source address: -992
[i]Type for REF_28

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_70(bool) = REF_27 != REF_28
[i]Type for TMP_70

Name: TMP_70 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_71(None) = SOLIDITY_CALL require(bool,string)(TMP_70,VaderRouter::_swap: Incorrect Path)
[i]Type for TMP_71

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_60 cleared
[i] pool1 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: path_1 (-> []), name: path

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: factory_12, name: factory

Name: factory Function: _swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: factory_12, name: factory

Name: factory Function: _swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: path_1 (-> []), name: path

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: pool1_1, name: pool1

Name: pool1 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pool1, Num: 1
Globalname: pool1, contract_name: VaderRouter
End popogation
Ssa_name: factory_13, name: factory

Name: factory Function: _swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_19(address) -> path_1 (-> [])[1]
INDEX
REFERENCE LEFT VALUE PROPAGATION
Source address: -992
[i]Type for REF_19

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_20(address) -> path_1 (-> [])[2]
INDEX
REFERENCE LEFT VALUE PROPAGATION
Source address: -992
[i]Type for REF_20

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_60(IVaderPool) = HIGH_LEVEL_CALL, dest:factory_12(IVaderPoolFactory), function:getPool, arguments:['REF_19', 'REF_20']  
High Call: getPool
Running querryfc
Found: None
Written func info: IVaderPoolFactory, getPool
[i]Type for TMP_60

Name: TMP_60 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
factory_13(IVaderPoolFactory) := ϕ(['factory_12', 'factory_13', 'factory_16', 'factory_10', 'factory_19', 'factory_21', 'factory_15', 'factory_26', 'factory_1', 'factory_24', 'factory_7'])
Phi
[i]Type for factory

Name: factory Function: _swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
pool1_1(IVaderPool) := TMP_60(IVaderPool)
asgn
Finance type key: (-1, -1)
[i]Type for pool1

Name: pool1 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_72 cleared
[i] pool cleared
Propogating parameters and globals to SSA variables...
Ssa_name: path_1 (-> []), name: path

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: factory_9, name: factory

Name: factory Function: _swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: path_1 (-> []), name: path

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: factory_9, name: factory

Name: factory Function: _swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: pool_1, name: pool

Name: pool Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pool, Num: 1
Globalname: pool, contract_name: VaderRouter
End popogation
Ssa_name: factory_10, name: factory

Name: factory Function: _swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_30(address) -> path_1 (-> [])[0]
INDEX
REFERENCE LEFT VALUE PROPAGATION
Source address: -992
[i]Type for REF_30

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_31(address) -> path_1 (-> [])[1]
INDEX
REFERENCE LEFT VALUE PROPAGATION
Source address: -992
[i]Type for REF_31

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_72(IVaderPool) = HIGH_LEVEL_CALL, dest:factory_9(IVaderPoolFactory), function:getPool, arguments:['REF_30', 'REF_31']  
High Call: getPool
Running querryfc
Found: None
Written func info: IVaderPoolFactory, getPool
[i]Type for TMP_72

Name: TMP_72 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
factory_10(IVaderPoolFactory) := ϕ(['factory_13', 'factory_16', 'factory_10', 'factory_19', 'factory_21', 'factory_15', 'factory_26', 'factory_9', 'factory_1', 'factory_24', 'factory_7'])
Phi
[i]Type for factory

Name: factory Function: _swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
pool_1(IVaderPool) := TMP_72(IVaderPool)
asgn
Finance type key: (-1, -1)
[i]Type for pool

Name: pool Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_61 cleared
[i] TMP_62 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: path_1 (-> []), name: path

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _swap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: pool0_1, name: pool0

Name: pool0 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pool0, Num: 1
Globalname: pool0, contract_name: VaderRouter
Ssa_name: path_1 (-> []), name: path

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _swap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: pool0_1, name: pool0

Name: pool0 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pool0, Num: 1
Globalname: pool0, contract_name: VaderRouter
End popogation
REF_21(address) -> path_1 (-> [])[0]
INDEX
REFERENCE LEFT VALUE PROPAGATION
Source address: -992
[i]Type for REF_21

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_61 = CONVERT REF_21 to IERC20
Converting REF_21

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: -992
ERC20
[i]Type for TMP_61

Name: TMP_61 Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: ERC20
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_62 = CONVERT pool0_1 to address
Converting pool0_1

Name: pool0 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_62

Name: TMP_62 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
LIBRARY_CALL, dest:SafeERC20, function:SafeERC20.safeTransferFrom(IERC20,address,address,uint256), arguments:['TMP_61', 'msg.sender', 'TMP_62', 'amountIn_1'] 
[i] TMP_73 cleared
[i] TMP_74 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: path_1 (-> []), name: path

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _swap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: pool_1, name: pool

Name: pool Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pool, Num: 1
Globalname: pool, contract_name: VaderRouter
Ssa_name: path_1 (-> []), name: path

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _swap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: pool_1, name: pool

Name: pool Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pool, Num: 1
Globalname: pool, contract_name: VaderRouter
End popogation
REF_32(address) -> path_1 (-> [])[0]
INDEX
REFERENCE LEFT VALUE PROPAGATION
Source address: -992
[i]Type for REF_32

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_73 = CONVERT REF_32 to IERC20
Converting REF_32

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: -992
ERC20
[i]Type for TMP_73

Name: TMP_73 Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: ERC20
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_74 = CONVERT pool_1 to address
Converting pool_1

Name: pool Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_74

Name: TMP_74 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
LIBRARY_CALL, dest:SafeERC20, function:SafeERC20.safeTransferFrom(IERC20,address,address,uint256), arguments:['TMP_73', 'msg.sender', 'TMP_74', 'amountIn_1'] 
[i] TMP_76 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: path_1 (-> []), name: path

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeAsset_1, name: nativeAsset

Name: nativeAsset Function: _swap
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: path_1 (-> []), name: path

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeAsset_1, name: nativeAsset

Name: nativeAsset Function: _swap
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
End popogation
REF_34(address) -> path_1 (-> [])[0]
INDEX
REFERENCE LEFT VALUE PROPAGATION
Source address: -992
[i]Type for REF_34

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_76(bool) = REF_34 == nativeAsset_1
[i]Type for TMP_76

Name: TMP_76 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_77 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: to_1, name: to

Name: to Function: _swap
Num: 
Den: 
Address: -991
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _swap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: pool_1, name: pool

Name: pool Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pool, Num: 1
Globalname: pool, contract_name: VaderRouter
Ssa_name: to_1, name: to

Name: to Function: _swap
Num: 
Den: 
Address: -991
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _swap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: pool_1, name: pool

Name: pool Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pool, Num: 1
Globalname: pool, contract_name: VaderRouter
End popogation
TMP_77(uint256) = HIGH_LEVEL_CALL, dest:pool_1(IVaderPool), function:swap, arguments:['amountIn_1', '0', 'to_1']  
High Call: swap
Running querryfc
Found: None
Written func info: IVaderPool, swap
[i]Type for TMP_77

Name: TMP_77 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_77
RETURN

Name: TMP_77 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] TMP_78 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: path_1 (-> []), name: path

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeAsset_1, name: nativeAsset

Name: nativeAsset Function: _swap
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: path_1 (-> []), name: path

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeAsset_1, name: nativeAsset

Name: nativeAsset Function: _swap
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
End popogation
REF_36(address) -> path_1 (-> [])[1]
INDEX
REFERENCE LEFT VALUE PROPAGATION
Source address: -992
[i]Type for REF_36

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_78(bool) = REF_36 == nativeAsset_1
[i]Type for TMP_78

Name: TMP_78 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_79(None) = SOLIDITY_CALL require(bool,string)(TMP_78,VaderRouter::_swap: Incorrect Path)
[i]Type for TMP_79

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_80 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: to_1, name: to

Name: to Function: _swap
Num: 
Den: 
Address: -991
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _swap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: pool_1, name: pool

Name: pool Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pool, Num: 1
Globalname: pool, contract_name: VaderRouter
Ssa_name: to_1, name: to

Name: to Function: _swap
Num: 
Den: 
Address: -991
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _swap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: pool_1, name: pool

Name: pool Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pool, Num: 1
Globalname: pool, contract_name: VaderRouter
End popogation
TMP_80(uint256) = HIGH_LEVEL_CALL, dest:pool_1(IVaderPool), function:swap, arguments:['0', 'amountIn_1', 'to_1']  
High Call: swap
Running querryfc
Found: None
Written func info: IVaderPool, swap
[i]Type for TMP_80

Name: TMP_80 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_80
RETURN

Name: TMP_80 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] TMP_64 cleared
[i] TMP_65 cleared
[i] TMP_66 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: pool1_1, name: pool1

Name: pool1 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pool1, Num: 1
Globalname: pool1, contract_name: VaderRouter
Ssa_name: to_1, name: to

Name: to Function: _swap
Num: 
Den: 
Address: -991
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _swap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: pool0_1, name: pool0

Name: pool0 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pool0, Num: 1
Globalname: pool0, contract_name: VaderRouter
Ssa_name: pool1_1, name: pool1

Name: pool1 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pool1, Num: 1
Globalname: pool1, contract_name: VaderRouter
Ssa_name: to_1, name: to

Name: to Function: _swap
Num: 
Den: 
Address: -991
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _swap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: pool0_1, name: pool0

Name: pool0 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pool0, Num: 1
Globalname: pool0, contract_name: VaderRouter
End popogation
TMP_64 = CONVERT pool1_1 to address
Converting pool1_1

Name: pool1 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_64

Name: TMP_64 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_65(uint256) = HIGH_LEVEL_CALL, dest:pool0_1(IVaderPool), function:swap, arguments:['amountIn_1', '0', 'TMP_64']  
High Call: swap
Running querryfc
Found: None
Written func info: IVaderPool, swap
[i]Type for TMP_65

Name: TMP_65 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_66(uint256) = HIGH_LEVEL_CALL, dest:pool1_1(IVaderPool), function:swap, arguments:['0', 'TMP_65', 'to_1']  
High Call: swap
Running querryfc
Found: None
Written func info: IVaderPool, swap
[i]Type for TMP_66

Name: TMP_66 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_66
RETURN

Name: TMP_66 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
([], [], 'u', 'u', 'u', -1)
[i]Type for TMP_44

Name: TMP_44 Function: swapTokensForExactTokens
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX


MODIFIER_CALL, VaderRouter.ensure(uint256)(deadline_1)
TMP_41(uint256) = INTERNAL_CALL, VaderRouter.calculateInGivenOut(uint256,address[])(amountOut_1,path_1 (-> []))
amountIn_1(uint256) := TMP_41(uint256)
TMP_42(bool) = amountInMax_1 >= amountIn_1
TMP_43(None) = SOLIDITY_CALL require(bool,string)(TMP_42,VaderRouter::swapTokensForExactTokens: Large Trade Input)
TMP_44(uint256) = INTERNAL_CALL, VaderRouter._swap(uint256,address[],address)(amountIn_1,path_1 (-> []),to_1)


Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Ssa_name: deadline_1, name: deadline

Name: deadline_1 Function: swapTokensForExactTokens
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: deadline_1 Function: swapTokensForExactTokens
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: deadline, Num: 1
Globalname: deadline, contract_name: VaderRouter
Ssa_name: deadline_1, name: deadline

Name: deadline_1 Function: swapTokensForExactTokens
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: deadline_1 Function: swapTokensForExactTokens
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: deadline, Num: 1
Globalname: deadline, contract_name: VaderRouter
End popogation
MODIFIER_CALL, VaderRouter.ensure(uint256)(deadline_1)
New param cache [[[], [], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[], [], 'u', None, [], -1, 'u']]
[i] TMP_41 cleared
[i] amountIn cleared
Propogating parameters and globals to SSA variables...
Ssa_name: path_1 (-> []), name: path

Name: path_1 (-> []) Function: swapTokensForExactTokens
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountOut_1, name: amountOut

Name: amountOut_1 Function: swapTokensForExactTokens
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountOut_1 Function: swapTokensForExactTokens
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountOut, Num: 1
Globalname: amountOut, contract_name: VaderRouter
Ssa_name: path_1 (-> []), name: path

Name: path_1 (-> []) Function: swapTokensForExactTokens
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountOut_1, name: amountOut

Name: amountOut_1 Function: swapTokensForExactTokens
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountOut_1 Function: swapTokensForExactTokens
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountOut, Num: 1
Globalname: amountOut, contract_name: VaderRouter
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: swapTokensForExactTokens
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: amountIn, Num: 1
Globalname: amountIn, contract_name: VaderRouter
End popogation
TMP_41(uint256) = INTERNAL_CALL, VaderRouter.calculateInGivenOut(uint256,address[])(amountOut_1,path_1 (-> []))
New param cache [[[], [], 'u', None, [], -1, 'u', 'u'], [[], [], 0, None, [], -1, -992, 'u']]
Old param cache: [[[], [], 'u', None, [], -1, 'u'], [[], [], 0, None, [], -1, -992]]
[i]Type for TMP_41

Name: TMP_41 Function: swapTokensForExactTokens
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
amountIn_1(uint256) := TMP_41(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for amountIn

Name: amountIn Function: swapTokensForExactTokens
Num: 
Den: 
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] TMP_42 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: swapTokensForExactTokens
Num: 
Den: 
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: amountIn, Num: 1
Globalname: amountIn, contract_name: VaderRouter
Ssa_name: amountInMax_1, name: amountInMax

Name: amountInMax_1 Function: swapTokensForExactTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: swapTokensForExactTokens
Num: 
Den: 
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: amountIn, Num: 1
Globalname: amountIn, contract_name: VaderRouter
Ssa_name: amountInMax_1, name: amountInMax

Name: amountInMax_1 Function: swapTokensForExactTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
End popogation
TMP_42(bool) = amountInMax_1 >= amountIn_1
lnorm: 0 rnorm: 0
Source address: u
Source address: u
[i]Type for TMP_42

Name: TMP_42 Function: swapTokensForExactTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_43(None) = SOLIDITY_CALL require(bool,string)(TMP_42,VaderRouter::swapTokensForExactTokens: Large Trade Input)
[i]Type for TMP_43

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_44 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: path_1 (-> []), name: path

Name: path_1 (-> []) Function: swapTokensForExactTokens
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to_1 Function: swapTokensForExactTokens
Num: 
Den: 
Address: -991
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: swapTokensForExactTokens
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: path_1 (-> []), name: path

Name: path_1 (-> []) Function: swapTokensForExactTokens
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to_1 Function: swapTokensForExactTokens
Num: 
Den: 
Address: -991
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: swapTokensForExactTokens
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
End popogation
TMP_44(uint256) = INTERNAL_CALL, VaderRouter._swap(uint256,address[],address)(amountIn_1,path_1 (-> []),to_1)
New param cache [[[-1], [-1], 0, None, [], -1, 'u', 2], [[], [], 0, None, [], -1, -992, 'u'], [[], [], 0, 'to', [], -1, -991, 'u']]
Old param cache: [[[], [], 'u', None, [], -1, 'u'], [[], [], 0, None, [], -1, -994], [[], [], 0, 'to', [], -1, -993]]
[[-1], [-1], 0, None, [], -1, 'u', 2]

Name: amountIn Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
[[], [], 0, None, [], -1, -992, 'u']

Name: path Function: None
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
[[], [], 0, 'to', [], -1, -991, 'u']

Name: to Function: None
Num: 
Den: 
Address: -991
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_swap(uint256,address[],address)
Propogating All
Propogating All
path_1 (-> [])
Ssa_name: path_1 (-> []), name: path

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: -992

Name: path_1 (-> []) Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
path_1 (-> [])
Ssa_name: path_1 (-> []), name: path

Name: path_1 (-> []) Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: -992

Name: path_1 (-> []) Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
path_1 (-> [])
Ssa_name: path_1 (-> []), name: path

Name: path_1 (-> []) Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: -992

Name: path_1 (-> []) Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
path_1 (-> [])
Ssa_name: path_1 (-> []), name: path

Name: path_1 (-> []) Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: -992

Name: path_1 (-> []) Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
path_1 (-> [])
Ssa_name: path_1 (-> []), name: path

Name: path_1 (-> []) Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: -992

Name: path_1 (-> []) Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
path_1 (-> [])
Ssa_name: path_1 (-> []), name: path

Name: path_1 (-> []) Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: -992

Name: path_1 (-> []) Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
path_1 (-> [])
Ssa_name: path_1 (-> []), name: path

Name: path_1 (-> []) Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: -992

Name: path_1 (-> []) Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
path_1 (-> [])
Ssa_name: path_1 (-> []), name: path

Name: path_1 (-> []) Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: -992

Name: path_1 (-> []) Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
amountIn_1
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _swap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: _swap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Copied ftype
pool0_1
Ssa_name: pool0_1, name: pool0

Name: pool0 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
pool1_1
Ssa_name: pool1_1, name: pool1

Name: pool1 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
to_1
Ssa_name: to_1, name: to

Name: to Function: _swap
Num: 
Den: 
Address: -991
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Source address: -991

Name: to_1 Function: _swap
Num: 
Den: 
Address: -991
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Copied ftype
amountIn_1
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: _swap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: _swap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Copied ftype
pool0_1
Ssa_name: pool0_1, name: pool0

Name: pool0 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
path_1 (-> [])
Ssa_name: path_1 (-> []), name: path

Name: path_1 (-> []) Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: -992

Name: path_1 (-> []) Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
amountIn_1
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: _swap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: _swap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Copied ftype
pool_1
Ssa_name: pool_1, name: pool

Name: pool Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
path_1 (-> [])
Ssa_name: path_1 (-> []), name: path

Name: path_1 (-> []) Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: -992

Name: path_1 (-> []) Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
nativeAsset_1
Ssa_name: nativeAsset_1, name: nativeAsset

Name: nativeAsset Function: _swap
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Propogating All
to_1
Ssa_name: to_1, name: to

Name: to_1 Function: _swap
Num: 
Den: 
Address: -991
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Source address: -991

Name: to_1 Function: _swap
Num: 
Den: 
Address: -991
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Copied ftype
amountIn_1
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: _swap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: _swap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Copied ftype
pool_1
Ssa_name: pool_1, name: pool

Name: pool Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
path_1 (-> [])
Ssa_name: path_1 (-> []), name: path

Name: path_1 (-> []) Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: -992

Name: path_1 (-> []) Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
nativeAsset_1
Ssa_name: nativeAsset_1, name: nativeAsset

Name: nativeAsset Function: _swap
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Propogating All
to_1
Ssa_name: to_1, name: to

Name: to_1 Function: _swap
Num: 
Den: 
Address: -991
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Source address: -991

Name: to_1 Function: _swap
Num: 
Den: 
Address: -991
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Copied ftype
amountIn_1
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: _swap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: _swap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Copied ftype
pool_1
Ssa_name: pool_1, name: pool

Name: pool Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] amountIn cleared
[i] path cleared
[i] to cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: _swap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: path_1 (-> []), name: path

Name: path_1 (-> []) Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: -992

Name: path_1 (-> []) Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: to_1, name: to

Name: to_1 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: to
Value: u
Fields: 
Finance Type: undef
Source address: -991

Name: to_1 Function: _swap
Num: 
Den: 
Address: -991
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: factory_8, name: factory

Name: factory Function: _swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
amountIn_1(uint256) := ϕ(['amountIn_1', 'amountIn_1'])
Phi
[i]Type for amountIn

Name: amountIn Function: _swap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
path_1 (-> [])(address[]) := ϕ(['path_1 (-> [])', 'path_1 (-> [])'])
Phi
[i]Type for path

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
to_1(address) := ϕ(['to_1', 'to_1'])
Phi
[i]Type for to

Name: to Function: _swap
Num: 
Den: 
Address: -991
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
XXXX
factory_8(IVaderPoolFactory) := ϕ(['factory_13', 'factory_0', 'factory_16', 'factory_10', 'factory_19', 'factory_21', 'factory_15', 'factory_26', 'factory_1', 'factory_24', 'factory_7'])
Phi
[i]Type for factory

Name: factory Function: _swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_51 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: path_1 (-> []), name: path

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: path_1 (-> []), name: path

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
REF_8 -> LENGTH path_1 (-> [])
[i]Type for REF_8

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_51(bool) = REF_8 == 3
[i]Type for TMP_51

Name: TMP_51 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_52 cleared
[i] TMP_53 cleared
[i] TMP_54 cleared
[i] TMP_55 cleared
[i] TMP_56 cleared
[i] TMP_57 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: path_1 (-> []), name: path

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: factory_8, name: factory

Name: factory Function: _swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: factory_8, name: factory

Name: factory Function: _swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: path_1 (-> []), name: path

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
Ssa_name: factory_11, name: factory

Name: factory Function: _swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_9(address) -> path_1 (-> [])[0]
INDEX
REFERENCE LEFT VALUE PROPAGATION
Source address: -992
[i]Type for REF_9

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_10(address) -> path_1 (-> [])[1]
INDEX
REFERENCE LEFT VALUE PROPAGATION
Source address: -992
[i]Type for REF_10

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_52(bool) = REF_9 != REF_10
[i]Type for TMP_52

Name: TMP_52 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_11(address) -> path_1 (-> [])[1]
INDEX
REFERENCE LEFT VALUE PROPAGATION
Source address: -992
[i]Type for REF_11

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_53(address) = HIGH_LEVEL_CALL, dest:factory_8(IVaderPoolFactory), function:nativeAsset, arguments:[]  
High Call: nativeAsset
Running querryfc
Found: None
Written func info: IVaderPoolFactory, nativeAsset
Retvar: ('c', ['global:nativeAsset'], ['-1'], 18, "'u'", 'u')
{'global:_owner': 1, 'global:_tokenApprovals': 2, 'global:_owners': 3, 'swap:to': -999, 'mint:to': -998, 'mint:TMP_139': 4, 'global:this': 4, 'None:None': 5, 'mint:foreignAsset': 6, 'swap:_nativeAsset': 7, 'swap:_foreignAsset': 8, 'global:nativeAsset': 9, 'global:foreignAsset': 10, 'global:_ZERO_ADDRESS': 11, 'removeLiquidity:tokenA': -997, 'removeLiquidity:tokenB': -996, 'removeLiquidity:to': -995, 'swapExactTokensForTokens:path': -994, 'swapExactTokensForTokens:to': -993, 'swapTokensForExactTokens:path': -992, 'swapTokensForExactTokens:to': -991, 'calculateInGivenOut:path': -990, 'calculateOutGivenIn:path': -989}
([9], [-1], 18, "'u'", 'u', -1)
[i]Type for TMP_53

Name: TMP_53 Function: _swap
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
factory_11(IVaderPoolFactory) := ϕ(['factory_13', 'factory_16', 'factory_10', 'factory_19', 'factory_21', 'factory_15', 'factory_26', 'factory_1', 'factory_24', 'factory_7'])
Phi
[i]Type for factory

Name: factory Function: _swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_54(bool) = REF_11 == TMP_53
[i]Type for TMP_54

Name: TMP_54 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_55(bool) = TMP_52 && TMP_54
[i]Type for TMP_55

Name: TMP_55 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_13(address) -> path_1 (-> [])[2]
INDEX
REFERENCE LEFT VALUE PROPAGATION
Source address: -992
[i]Type for REF_13

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_14(address) -> path_1 (-> [])[1]
INDEX
REFERENCE LEFT VALUE PROPAGATION
Source address: -992
[i]Type for REF_14

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_56(bool) = REF_13 != REF_14
[i]Type for TMP_56

Name: TMP_56 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_57(bool) = TMP_55 && TMP_56
[i]Type for TMP_57

Name: TMP_57 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_58(None) = SOLIDITY_CALL require(bool,string)(TMP_57,VaderRouter::_swap: Incorrect Path)
[i]Type for TMP_58

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_67 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: path_1 (-> []), name: path

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: path_1 (-> []), name: path

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
REF_25 -> LENGTH path_1 (-> [])
[i]Type for REF_25

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_67(bool) = REF_25 == 2
[i]Type for TMP_67

Name: TMP_67 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_68(None) = SOLIDITY_CALL require(bool,string)(TMP_67,VaderRouter::_swap: Incorrect Path Length)
[i]Type for TMP_68

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_69 cleared
[i] nativeAsset cleared
Propogating parameters and globals to SSA variables...
Ssa_name: factory_8, name: factory

Name: factory Function: _swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: factory_8, name: factory

Name: factory Function: _swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeAsset_1, name: nativeAsset

Name: nativeAsset Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Name: nativeAsset, Num: 1
Globalname: nativeAsset, contract_name: VaderRouter
End popogation
Ssa_name: factory_9, name: factory

Name: factory Function: _swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_69(address) = HIGH_LEVEL_CALL, dest:factory_8(IVaderPoolFactory), function:nativeAsset, arguments:[]  
High Call: nativeAsset
Running querryfc
Found: None
Written func info: IVaderPoolFactory, nativeAsset
Retvar: ('c', ['global:nativeAsset'], ['-1'], 18, "'u'", 'u')
{'global:_owner': 1, 'global:_tokenApprovals': 2, 'global:_owners': 3, 'swap:to': -999, 'mint:to': -998, 'mint:TMP_139': 4, 'global:this': 4, 'None:None': 5, 'mint:foreignAsset': 6, 'swap:_nativeAsset': 7, 'swap:_foreignAsset': 8, 'global:nativeAsset': 9, 'global:foreignAsset': 10, 'global:_ZERO_ADDRESS': 11, 'removeLiquidity:tokenA': -997, 'removeLiquidity:tokenB': -996, 'removeLiquidity:to': -995, 'swapExactTokensForTokens:path': -994, 'swapExactTokensForTokens:to': -993, 'swapTokensForExactTokens:path': -992, 'swapTokensForExactTokens:to': -991, 'calculateInGivenOut:path': -990, 'calculateOutGivenIn:path': -989}
([9], [-1], 18, "'u'", 'u', -1)
[i]Type for TMP_69

Name: TMP_69 Function: _swap
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
factory_9(IVaderPoolFactory) := ϕ(['factory_8', 'factory_13', 'factory_16', 'factory_10', 'factory_19', 'factory_21', 'factory_15', 'factory_26', 'factory_1', 'factory_24', 'factory_7'])
Phi
[i]Type for factory

Name: factory Function: _swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
nativeAsset_1(address) := TMP_69(address)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for nativeAsset

Name: nativeAsset Function: _swap
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
[i] TMP_59 cleared
[i] pool0 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: path_1 (-> []), name: path

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: factory_11, name: factory

Name: factory Function: _swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: factory_11, name: factory

Name: factory Function: _swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: path_1 (-> []), name: path

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: pool0_1, name: pool0

Name: pool0 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pool0, Num: 1
Globalname: pool0, contract_name: VaderRouter
End popogation
Ssa_name: factory_12, name: factory

Name: factory Function: _swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_16(address) -> path_1 (-> [])[0]
INDEX
REFERENCE LEFT VALUE PROPAGATION
Source address: -992
[i]Type for REF_16

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_17(address) -> path_1 (-> [])[1]
INDEX
REFERENCE LEFT VALUE PROPAGATION
Source address: -992
[i]Type for REF_17

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_59(IVaderPool) = HIGH_LEVEL_CALL, dest:factory_11(IVaderPoolFactory), function:getPool, arguments:['REF_16', 'REF_17']  
High Call: getPool
Running querryfc
Found: None
Written func info: IVaderPoolFactory, getPool
[i]Type for TMP_59

Name: TMP_59 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
factory_12(IVaderPoolFactory) := ϕ(['factory_13', 'factory_16', 'factory_10', 'factory_19', 'factory_21', 'factory_15', 'factory_26', 'factory_1', 'factory_24', 'factory_7', 'factory_11'])
Phi
[i]Type for factory

Name: factory Function: _swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
pool0_1(IVaderPool) := TMP_59(IVaderPool)
asgn
Finance type key: (-1, -1)
[i]Type for pool0

Name: pool0 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_70 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: path_1 (-> []), name: path

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: path_1 (-> []), name: path

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
REF_27(address) -> path_1 (-> [])[0]
INDEX
REFERENCE LEFT VALUE PROPAGATION
Source address: -992
[i]Type for REF_27

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_28(address) -> path_1 (-> [])[1]
INDEX
REFERENCE LEFT VALUE PROPAGATION
Source address: -992
[i]Type for REF_28

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_70(bool) = REF_27 != REF_28
[i]Type for TMP_70

Name: TMP_70 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_71(None) = SOLIDITY_CALL require(bool,string)(TMP_70,VaderRouter::_swap: Incorrect Path)
[i]Type for TMP_71

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_60 cleared
[i] pool1 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: path_1 (-> []), name: path

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: factory_12, name: factory

Name: factory Function: _swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: factory_12, name: factory

Name: factory Function: _swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: path_1 (-> []), name: path

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: pool1_1, name: pool1

Name: pool1 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pool1, Num: 1
Globalname: pool1, contract_name: VaderRouter
End popogation
Ssa_name: factory_13, name: factory

Name: factory Function: _swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_19(address) -> path_1 (-> [])[1]
INDEX
REFERENCE LEFT VALUE PROPAGATION
Source address: -992
[i]Type for REF_19

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_20(address) -> path_1 (-> [])[2]
INDEX
REFERENCE LEFT VALUE PROPAGATION
Source address: -992
[i]Type for REF_20

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_60(IVaderPool) = HIGH_LEVEL_CALL, dest:factory_12(IVaderPoolFactory), function:getPool, arguments:['REF_19', 'REF_20']  
High Call: getPool
Running querryfc
Found: None
Written func info: IVaderPoolFactory, getPool
[i]Type for TMP_60

Name: TMP_60 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
factory_13(IVaderPoolFactory) := ϕ(['factory_12', 'factory_13', 'factory_16', 'factory_10', 'factory_19', 'factory_21', 'factory_15', 'factory_26', 'factory_1', 'factory_24', 'factory_7'])
Phi
[i]Type for factory

Name: factory Function: _swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
pool1_1(IVaderPool) := TMP_60(IVaderPool)
asgn
Finance type key: (-1, -1)
[i]Type for pool1

Name: pool1 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_72 cleared
[i] pool cleared
Propogating parameters and globals to SSA variables...
Ssa_name: path_1 (-> []), name: path

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: factory_9, name: factory

Name: factory Function: _swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: path_1 (-> []), name: path

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: factory_9, name: factory

Name: factory Function: _swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: pool_1, name: pool

Name: pool Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pool, Num: 1
Globalname: pool, contract_name: VaderRouter
End popogation
Ssa_name: factory_10, name: factory

Name: factory Function: _swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_30(address) -> path_1 (-> [])[0]
INDEX
REFERENCE LEFT VALUE PROPAGATION
Source address: -992
[i]Type for REF_30

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_31(address) -> path_1 (-> [])[1]
INDEX
REFERENCE LEFT VALUE PROPAGATION
Source address: -992
[i]Type for REF_31

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_72(IVaderPool) = HIGH_LEVEL_CALL, dest:factory_9(IVaderPoolFactory), function:getPool, arguments:['REF_30', 'REF_31']  
High Call: getPool
Running querryfc
Found: None
Written func info: IVaderPoolFactory, getPool
[i]Type for TMP_72

Name: TMP_72 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
factory_10(IVaderPoolFactory) := ϕ(['factory_13', 'factory_16', 'factory_10', 'factory_19', 'factory_21', 'factory_15', 'factory_26', 'factory_9', 'factory_1', 'factory_24', 'factory_7'])
Phi
[i]Type for factory

Name: factory Function: _swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
pool_1(IVaderPool) := TMP_72(IVaderPool)
asgn
Finance type key: (-1, -1)
[i]Type for pool

Name: pool Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_61 cleared
[i] TMP_62 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: path_1 (-> []), name: path

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _swap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: pool0_1, name: pool0

Name: pool0 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pool0, Num: 1
Globalname: pool0, contract_name: VaderRouter
Ssa_name: path_1 (-> []), name: path

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _swap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: pool0_1, name: pool0

Name: pool0 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pool0, Num: 1
Globalname: pool0, contract_name: VaderRouter
End popogation
REF_21(address) -> path_1 (-> [])[0]
INDEX
REFERENCE LEFT VALUE PROPAGATION
Source address: -992
[i]Type for REF_21

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_61 = CONVERT REF_21 to IERC20
Converting REF_21

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: -992
ERC20
[i]Type for TMP_61

Name: TMP_61 Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: ERC20
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_62 = CONVERT pool0_1 to address
Converting pool0_1

Name: pool0 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_62

Name: TMP_62 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
LIBRARY_CALL, dest:SafeERC20, function:SafeERC20.safeTransferFrom(IERC20,address,address,uint256), arguments:['TMP_61', 'msg.sender', 'TMP_62', 'amountIn_1'] 
[i] TMP_73 cleared
[i] TMP_74 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: path_1 (-> []), name: path

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _swap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: pool_1, name: pool

Name: pool Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pool, Num: 1
Globalname: pool, contract_name: VaderRouter
Ssa_name: path_1 (-> []), name: path

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _swap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: pool_1, name: pool

Name: pool Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pool, Num: 1
Globalname: pool, contract_name: VaderRouter
End popogation
REF_32(address) -> path_1 (-> [])[0]
INDEX
REFERENCE LEFT VALUE PROPAGATION
Source address: -992
[i]Type for REF_32

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_73 = CONVERT REF_32 to IERC20
Converting REF_32

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: -992
ERC20
[i]Type for TMP_73

Name: TMP_73 Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: ERC20
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_74 = CONVERT pool_1 to address
Converting pool_1

Name: pool Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_74

Name: TMP_74 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
LIBRARY_CALL, dest:SafeERC20, function:SafeERC20.safeTransferFrom(IERC20,address,address,uint256), arguments:['TMP_73', 'msg.sender', 'TMP_74', 'amountIn_1'] 
[i] TMP_76 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: path_1 (-> []), name: path

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeAsset_1, name: nativeAsset

Name: nativeAsset Function: _swap
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: path_1 (-> []), name: path

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeAsset_1, name: nativeAsset

Name: nativeAsset Function: _swap
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
End popogation
REF_34(address) -> path_1 (-> [])[0]
INDEX
REFERENCE LEFT VALUE PROPAGATION
Source address: -992
[i]Type for REF_34

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_76(bool) = REF_34 == nativeAsset_1
[i]Type for TMP_76

Name: TMP_76 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_77 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: to_1, name: to

Name: to Function: _swap
Num: 
Den: 
Address: -991
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _swap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: pool_1, name: pool

Name: pool Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pool, Num: 1
Globalname: pool, contract_name: VaderRouter
Ssa_name: to_1, name: to

Name: to Function: _swap
Num: 
Den: 
Address: -991
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _swap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: pool_1, name: pool

Name: pool Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pool, Num: 1
Globalname: pool, contract_name: VaderRouter
End popogation
TMP_77(uint256) = HIGH_LEVEL_CALL, dest:pool_1(IVaderPool), function:swap, arguments:['amountIn_1', '0', 'to_1']  
High Call: swap
Running querryfc
Found: None
Written func info: IVaderPool, swap
[i]Type for TMP_77

Name: TMP_77 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_77
RETURN

Name: TMP_77 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] TMP_78 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: path_1 (-> []), name: path

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeAsset_1, name: nativeAsset

Name: nativeAsset Function: _swap
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: path_1 (-> []), name: path

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeAsset_1, name: nativeAsset

Name: nativeAsset Function: _swap
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
End popogation
REF_36(address) -> path_1 (-> [])[1]
INDEX
REFERENCE LEFT VALUE PROPAGATION
Source address: -992
[i]Type for REF_36

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_78(bool) = REF_36 == nativeAsset_1
[i]Type for TMP_78

Name: TMP_78 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_79(None) = SOLIDITY_CALL require(bool,string)(TMP_78,VaderRouter::_swap: Incorrect Path)
[i]Type for TMP_79

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_80 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: to_1, name: to

Name: to Function: _swap
Num: 
Den: 
Address: -991
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _swap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: pool_1, name: pool

Name: pool Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pool, Num: 1
Globalname: pool, contract_name: VaderRouter
Ssa_name: to_1, name: to

Name: to Function: _swap
Num: 
Den: 
Address: -991
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _swap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: pool_1, name: pool

Name: pool Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pool, Num: 1
Globalname: pool, contract_name: VaderRouter
End popogation
TMP_80(uint256) = HIGH_LEVEL_CALL, dest:pool_1(IVaderPool), function:swap, arguments:['0', 'amountIn_1', 'to_1']  
High Call: swap
Running querryfc
Found: None
Written func info: IVaderPool, swap
[i]Type for TMP_80

Name: TMP_80 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_80
RETURN

Name: TMP_80 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] TMP_64 cleared
[i] TMP_65 cleared
[i] TMP_66 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: pool1_1, name: pool1

Name: pool1 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pool1, Num: 1
Globalname: pool1, contract_name: VaderRouter
Ssa_name: to_1, name: to

Name: to Function: _swap
Num: 
Den: 
Address: -991
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _swap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: pool0_1, name: pool0

Name: pool0 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pool0, Num: 1
Globalname: pool0, contract_name: VaderRouter
Ssa_name: pool1_1, name: pool1

Name: pool1 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pool1, Num: 1
Globalname: pool1, contract_name: VaderRouter
Ssa_name: to_1, name: to

Name: to Function: _swap
Num: 
Den: 
Address: -991
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _swap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: pool0_1, name: pool0

Name: pool0 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pool0, Num: 1
Globalname: pool0, contract_name: VaderRouter
End popogation
TMP_64 = CONVERT pool1_1 to address
Converting pool1_1

Name: pool1 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_64

Name: TMP_64 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_65(uint256) = HIGH_LEVEL_CALL, dest:pool0_1(IVaderPool), function:swap, arguments:['amountIn_1', '0', 'TMP_64']  
High Call: swap
Running querryfc
Found: None
Written func info: IVaderPool, swap
[i]Type for TMP_65

Name: TMP_65 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_66(uint256) = HIGH_LEVEL_CALL, dest:pool1_1(IVaderPool), function:swap, arguments:['0', 'TMP_65', 'to_1']  
High Call: swap
Running querryfc
Found: None
Written func info: IVaderPool, swap
[i]Type for TMP_66

Name: TMP_66 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_66
RETURN

Name: TMP_66 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] amountIn cleared
[i] path cleared
[i] to cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: _swap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: path_1 (-> []), name: path

Name: path Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: -992

Name: path_1 (-> []) Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: to_1, name: to

Name: to Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: to
Value: u
Fields: 
Finance Type: undef
Source address: -991

Name: to_1 Function: _swap
Num: 
Den: 
Address: -991
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: factory_8, name: factory

Name: factory Function: _swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
amountIn_1(uint256) := ϕ(['amountIn_1', 'amountIn_1'])
Phi
[i]Type for amountIn

Name: amountIn Function: _swap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
path_1 (-> [])(address[]) := ϕ(['path_1 (-> [])', 'path_1 (-> [])'])
Phi
[i]Type for path

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
to_1(address) := ϕ(['to_1', 'to_1'])
Phi
[i]Type for to

Name: to Function: _swap
Num: 
Den: 
Address: -991
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
XXXX
factory_8(IVaderPoolFactory) := ϕ(['factory_13', 'factory_0', 'factory_16', 'factory_10', 'factory_19', 'factory_21', 'factory_15', 'factory_26', 'factory_1', 'factory_24', 'factory_7'])
Phi
[i]Type for factory

Name: factory Function: _swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_51 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: path_1 (-> []), name: path

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: path_1 (-> []), name: path

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
REF_8 -> LENGTH path_1 (-> [])
[i]Type for REF_8

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_51(bool) = REF_8 == 3
[i]Type for TMP_51

Name: TMP_51 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_52 cleared
[i] TMP_53 cleared
[i] TMP_54 cleared
[i] TMP_55 cleared
[i] TMP_56 cleared
[i] TMP_57 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: path_1 (-> []), name: path

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: factory_8, name: factory

Name: factory Function: _swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: factory_8, name: factory

Name: factory Function: _swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: path_1 (-> []), name: path

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
Ssa_name: factory_11, name: factory

Name: factory Function: _swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_9(address) -> path_1 (-> [])[0]
INDEX
REFERENCE LEFT VALUE PROPAGATION
Source address: -992
[i]Type for REF_9

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_10(address) -> path_1 (-> [])[1]
INDEX
REFERENCE LEFT VALUE PROPAGATION
Source address: -992
[i]Type for REF_10

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_52(bool) = REF_9 != REF_10
[i]Type for TMP_52

Name: TMP_52 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_11(address) -> path_1 (-> [])[1]
INDEX
REFERENCE LEFT VALUE PROPAGATION
Source address: -992
[i]Type for REF_11

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_53(address) = HIGH_LEVEL_CALL, dest:factory_8(IVaderPoolFactory), function:nativeAsset, arguments:[]  
High Call: nativeAsset
Running querryfc
Found: None
Written func info: IVaderPoolFactory, nativeAsset
Retvar: ('c', ['global:nativeAsset'], ['-1'], 18, "'u'", 'u')
{'global:_owner': 1, 'global:_tokenApprovals': 2, 'global:_owners': 3, 'swap:to': -999, 'mint:to': -998, 'mint:TMP_139': 4, 'global:this': 4, 'None:None': 5, 'mint:foreignAsset': 6, 'swap:_nativeAsset': 7, 'swap:_foreignAsset': 8, 'global:nativeAsset': 9, 'global:foreignAsset': 10, 'global:_ZERO_ADDRESS': 11, 'removeLiquidity:tokenA': -997, 'removeLiquidity:tokenB': -996, 'removeLiquidity:to': -995, 'swapExactTokensForTokens:path': -994, 'swapExactTokensForTokens:to': -993, 'swapTokensForExactTokens:path': -992, 'swapTokensForExactTokens:to': -991, 'calculateInGivenOut:path': -990, 'calculateOutGivenIn:path': -989}
([9], [-1], 18, "'u'", 'u', -1)
[i]Type for TMP_53

Name: TMP_53 Function: _swap
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
factory_11(IVaderPoolFactory) := ϕ(['factory_13', 'factory_16', 'factory_10', 'factory_19', 'factory_21', 'factory_15', 'factory_26', 'factory_1', 'factory_24', 'factory_7'])
Phi
[i]Type for factory

Name: factory Function: _swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_54(bool) = REF_11 == TMP_53
[i]Type for TMP_54

Name: TMP_54 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_55(bool) = TMP_52 && TMP_54
[i]Type for TMP_55

Name: TMP_55 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_13(address) -> path_1 (-> [])[2]
INDEX
REFERENCE LEFT VALUE PROPAGATION
Source address: -992
[i]Type for REF_13

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_14(address) -> path_1 (-> [])[1]
INDEX
REFERENCE LEFT VALUE PROPAGATION
Source address: -992
[i]Type for REF_14

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_56(bool) = REF_13 != REF_14
[i]Type for TMP_56

Name: TMP_56 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_57(bool) = TMP_55 && TMP_56
[i]Type for TMP_57

Name: TMP_57 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_58(None) = SOLIDITY_CALL require(bool,string)(TMP_57,VaderRouter::_swap: Incorrect Path)
[i]Type for TMP_58

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_67 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: path_1 (-> []), name: path

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: path_1 (-> []), name: path

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
REF_25 -> LENGTH path_1 (-> [])
[i]Type for REF_25

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_67(bool) = REF_25 == 2
[i]Type for TMP_67

Name: TMP_67 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_68(None) = SOLIDITY_CALL require(bool,string)(TMP_67,VaderRouter::_swap: Incorrect Path Length)
[i]Type for TMP_68

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_69 cleared
[i] nativeAsset cleared
Propogating parameters and globals to SSA variables...
Ssa_name: factory_8, name: factory

Name: factory Function: _swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: factory_8, name: factory

Name: factory Function: _swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeAsset_1, name: nativeAsset

Name: nativeAsset Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Name: nativeAsset, Num: 1
Globalname: nativeAsset, contract_name: VaderRouter
End popogation
Ssa_name: factory_9, name: factory

Name: factory Function: _swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_69(address) = HIGH_LEVEL_CALL, dest:factory_8(IVaderPoolFactory), function:nativeAsset, arguments:[]  
High Call: nativeAsset
Running querryfc
Found: None
Written func info: IVaderPoolFactory, nativeAsset
Retvar: ('c', ['global:nativeAsset'], ['-1'], 18, "'u'", 'u')
{'global:_owner': 1, 'global:_tokenApprovals': 2, 'global:_owners': 3, 'swap:to': -999, 'mint:to': -998, 'mint:TMP_139': 4, 'global:this': 4, 'None:None': 5, 'mint:foreignAsset': 6, 'swap:_nativeAsset': 7, 'swap:_foreignAsset': 8, 'global:nativeAsset': 9, 'global:foreignAsset': 10, 'global:_ZERO_ADDRESS': 11, 'removeLiquidity:tokenA': -997, 'removeLiquidity:tokenB': -996, 'removeLiquidity:to': -995, 'swapExactTokensForTokens:path': -994, 'swapExactTokensForTokens:to': -993, 'swapTokensForExactTokens:path': -992, 'swapTokensForExactTokens:to': -991, 'calculateInGivenOut:path': -990, 'calculateOutGivenIn:path': -989}
([9], [-1], 18, "'u'", 'u', -1)
[i]Type for TMP_69

Name: TMP_69 Function: _swap
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
factory_9(IVaderPoolFactory) := ϕ(['factory_8', 'factory_13', 'factory_16', 'factory_10', 'factory_19', 'factory_21', 'factory_15', 'factory_26', 'factory_1', 'factory_24', 'factory_7'])
Phi
[i]Type for factory

Name: factory Function: _swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
nativeAsset_1(address) := TMP_69(address)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for nativeAsset

Name: nativeAsset Function: _swap
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
[i] TMP_59 cleared
[i] pool0 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: path_1 (-> []), name: path

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: factory_11, name: factory

Name: factory Function: _swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: factory_11, name: factory

Name: factory Function: _swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: path_1 (-> []), name: path

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: pool0_1, name: pool0

Name: pool0 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pool0, Num: 1
Globalname: pool0, contract_name: VaderRouter
End popogation
Ssa_name: factory_12, name: factory

Name: factory Function: _swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_16(address) -> path_1 (-> [])[0]
INDEX
REFERENCE LEFT VALUE PROPAGATION
Source address: -992
[i]Type for REF_16

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_17(address) -> path_1 (-> [])[1]
INDEX
REFERENCE LEFT VALUE PROPAGATION
Source address: -992
[i]Type for REF_17

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_59(IVaderPool) = HIGH_LEVEL_CALL, dest:factory_11(IVaderPoolFactory), function:getPool, arguments:['REF_16', 'REF_17']  
High Call: getPool
Running querryfc
Found: None
Written func info: IVaderPoolFactory, getPool
[i]Type for TMP_59

Name: TMP_59 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
factory_12(IVaderPoolFactory) := ϕ(['factory_13', 'factory_16', 'factory_10', 'factory_19', 'factory_21', 'factory_15', 'factory_26', 'factory_1', 'factory_24', 'factory_7', 'factory_11'])
Phi
[i]Type for factory

Name: factory Function: _swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
pool0_1(IVaderPool) := TMP_59(IVaderPool)
asgn
Finance type key: (-1, -1)
[i]Type for pool0

Name: pool0 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_70 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: path_1 (-> []), name: path

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: path_1 (-> []), name: path

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
REF_27(address) -> path_1 (-> [])[0]
INDEX
REFERENCE LEFT VALUE PROPAGATION
Source address: -992
[i]Type for REF_27

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_28(address) -> path_1 (-> [])[1]
INDEX
REFERENCE LEFT VALUE PROPAGATION
Source address: -992
[i]Type for REF_28

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_70(bool) = REF_27 != REF_28
[i]Type for TMP_70

Name: TMP_70 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_71(None) = SOLIDITY_CALL require(bool,string)(TMP_70,VaderRouter::_swap: Incorrect Path)
[i]Type for TMP_71

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_60 cleared
[i] pool1 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: path_1 (-> []), name: path

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: factory_12, name: factory

Name: factory Function: _swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: factory_12, name: factory

Name: factory Function: _swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: path_1 (-> []), name: path

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: pool1_1, name: pool1

Name: pool1 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pool1, Num: 1
Globalname: pool1, contract_name: VaderRouter
End popogation
Ssa_name: factory_13, name: factory

Name: factory Function: _swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_19(address) -> path_1 (-> [])[1]
INDEX
REFERENCE LEFT VALUE PROPAGATION
Source address: -992
[i]Type for REF_19

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_20(address) -> path_1 (-> [])[2]
INDEX
REFERENCE LEFT VALUE PROPAGATION
Source address: -992
[i]Type for REF_20

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_60(IVaderPool) = HIGH_LEVEL_CALL, dest:factory_12(IVaderPoolFactory), function:getPool, arguments:['REF_19', 'REF_20']  
High Call: getPool
Running querryfc
Found: None
Written func info: IVaderPoolFactory, getPool
[i]Type for TMP_60

Name: TMP_60 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
factory_13(IVaderPoolFactory) := ϕ(['factory_12', 'factory_13', 'factory_16', 'factory_10', 'factory_19', 'factory_21', 'factory_15', 'factory_26', 'factory_1', 'factory_24', 'factory_7'])
Phi
[i]Type for factory

Name: factory Function: _swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
pool1_1(IVaderPool) := TMP_60(IVaderPool)
asgn
Finance type key: (-1, -1)
[i]Type for pool1

Name: pool1 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_72 cleared
[i] pool cleared
Propogating parameters and globals to SSA variables...
Ssa_name: path_1 (-> []), name: path

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: factory_9, name: factory

Name: factory Function: _swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: path_1 (-> []), name: path

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: factory_9, name: factory

Name: factory Function: _swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: pool_1, name: pool

Name: pool Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pool, Num: 1
Globalname: pool, contract_name: VaderRouter
End popogation
Ssa_name: factory_10, name: factory

Name: factory Function: _swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_30(address) -> path_1 (-> [])[0]
INDEX
REFERENCE LEFT VALUE PROPAGATION
Source address: -992
[i]Type for REF_30

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_31(address) -> path_1 (-> [])[1]
INDEX
REFERENCE LEFT VALUE PROPAGATION
Source address: -992
[i]Type for REF_31

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_72(IVaderPool) = HIGH_LEVEL_CALL, dest:factory_9(IVaderPoolFactory), function:getPool, arguments:['REF_30', 'REF_31']  
High Call: getPool
Running querryfc
Found: None
Written func info: IVaderPoolFactory, getPool
[i]Type for TMP_72

Name: TMP_72 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
factory_10(IVaderPoolFactory) := ϕ(['factory_13', 'factory_16', 'factory_10', 'factory_19', 'factory_21', 'factory_15', 'factory_26', 'factory_9', 'factory_1', 'factory_24', 'factory_7'])
Phi
[i]Type for factory

Name: factory Function: _swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
pool_1(IVaderPool) := TMP_72(IVaderPool)
asgn
Finance type key: (-1, -1)
[i]Type for pool

Name: pool Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_61 cleared
[i] TMP_62 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: path_1 (-> []), name: path

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _swap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: pool0_1, name: pool0

Name: pool0 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pool0, Num: 1
Globalname: pool0, contract_name: VaderRouter
Ssa_name: path_1 (-> []), name: path

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _swap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: pool0_1, name: pool0

Name: pool0 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pool0, Num: 1
Globalname: pool0, contract_name: VaderRouter
End popogation
REF_21(address) -> path_1 (-> [])[0]
INDEX
REFERENCE LEFT VALUE PROPAGATION
Source address: -992
[i]Type for REF_21

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_61 = CONVERT REF_21 to IERC20
Converting REF_21

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: -992
ERC20
[i]Type for TMP_61

Name: TMP_61 Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: ERC20
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_62 = CONVERT pool0_1 to address
Converting pool0_1

Name: pool0 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_62

Name: TMP_62 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
LIBRARY_CALL, dest:SafeERC20, function:SafeERC20.safeTransferFrom(IERC20,address,address,uint256), arguments:['TMP_61', 'msg.sender', 'TMP_62', 'amountIn_1'] 
[i] TMP_73 cleared
[i] TMP_74 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: path_1 (-> []), name: path

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _swap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: pool_1, name: pool

Name: pool Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pool, Num: 1
Globalname: pool, contract_name: VaderRouter
Ssa_name: path_1 (-> []), name: path

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _swap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: pool_1, name: pool

Name: pool Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pool, Num: 1
Globalname: pool, contract_name: VaderRouter
End popogation
REF_32(address) -> path_1 (-> [])[0]
INDEX
REFERENCE LEFT VALUE PROPAGATION
Source address: -992
[i]Type for REF_32

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_73 = CONVERT REF_32 to IERC20
Converting REF_32

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: -992
ERC20
[i]Type for TMP_73

Name: TMP_73 Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: ERC20
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_74 = CONVERT pool_1 to address
Converting pool_1

Name: pool Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_74

Name: TMP_74 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
LIBRARY_CALL, dest:SafeERC20, function:SafeERC20.safeTransferFrom(IERC20,address,address,uint256), arguments:['TMP_73', 'msg.sender', 'TMP_74', 'amountIn_1'] 
[i] TMP_76 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: path_1 (-> []), name: path

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeAsset_1, name: nativeAsset

Name: nativeAsset Function: _swap
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: path_1 (-> []), name: path

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeAsset_1, name: nativeAsset

Name: nativeAsset Function: _swap
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
End popogation
REF_34(address) -> path_1 (-> [])[0]
INDEX
REFERENCE LEFT VALUE PROPAGATION
Source address: -992
[i]Type for REF_34

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_76(bool) = REF_34 == nativeAsset_1
[i]Type for TMP_76

Name: TMP_76 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_77 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: to_1, name: to

Name: to Function: _swap
Num: 
Den: 
Address: -991
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _swap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: pool_1, name: pool

Name: pool Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pool, Num: 1
Globalname: pool, contract_name: VaderRouter
Ssa_name: to_1, name: to

Name: to Function: _swap
Num: 
Den: 
Address: -991
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _swap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: pool_1, name: pool

Name: pool Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pool, Num: 1
Globalname: pool, contract_name: VaderRouter
End popogation
TMP_77(uint256) = HIGH_LEVEL_CALL, dest:pool_1(IVaderPool), function:swap, arguments:['amountIn_1', '0', 'to_1']  
High Call: swap
Running querryfc
Found: None
Written func info: IVaderPool, swap
[i]Type for TMP_77

Name: TMP_77 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_77
RETURN

Name: TMP_77 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] TMP_78 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: path_1 (-> []), name: path

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeAsset_1, name: nativeAsset

Name: nativeAsset Function: _swap
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: path_1 (-> []), name: path

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeAsset_1, name: nativeAsset

Name: nativeAsset Function: _swap
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
End popogation
REF_36(address) -> path_1 (-> [])[1]
INDEX
REFERENCE LEFT VALUE PROPAGATION
Source address: -992
[i]Type for REF_36

Name: path Function: _swap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_78(bool) = REF_36 == nativeAsset_1
[i]Type for TMP_78

Name: TMP_78 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_79(None) = SOLIDITY_CALL require(bool,string)(TMP_78,VaderRouter::_swap: Incorrect Path)
[i]Type for TMP_79

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_80 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: to_1, name: to

Name: to Function: _swap
Num: 
Den: 
Address: -991
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _swap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: pool_1, name: pool

Name: pool Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pool, Num: 1
Globalname: pool, contract_name: VaderRouter
Ssa_name: to_1, name: to

Name: to Function: _swap
Num: 
Den: 
Address: -991
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _swap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: pool_1, name: pool

Name: pool Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pool, Num: 1
Globalname: pool, contract_name: VaderRouter
End popogation
TMP_80(uint256) = HIGH_LEVEL_CALL, dest:pool_1(IVaderPool), function:swap, arguments:['0', 'amountIn_1', 'to_1']  
High Call: swap
Running querryfc
Found: None
Written func info: IVaderPool, swap
[i]Type for TMP_80

Name: TMP_80 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_80
RETURN

Name: TMP_80 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] TMP_64 cleared
[i] TMP_65 cleared
[i] TMP_66 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: pool1_1, name: pool1

Name: pool1 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pool1, Num: 1
Globalname: pool1, contract_name: VaderRouter
Ssa_name: to_1, name: to

Name: to Function: _swap
Num: 
Den: 
Address: -991
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _swap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: pool0_1, name: pool0

Name: pool0 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pool0, Num: 1
Globalname: pool0, contract_name: VaderRouter
Ssa_name: pool1_1, name: pool1

Name: pool1 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pool1, Num: 1
Globalname: pool1, contract_name: VaderRouter
Ssa_name: to_1, name: to

Name: to Function: _swap
Num: 
Den: 
Address: -991
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _swap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: pool0_1, name: pool0

Name: pool0 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pool0, Num: 1
Globalname: pool0, contract_name: VaderRouter
End popogation
TMP_64 = CONVERT pool1_1 to address
Converting pool1_1

Name: pool1 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_64

Name: TMP_64 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_65(uint256) = HIGH_LEVEL_CALL, dest:pool0_1(IVaderPool), function:swap, arguments:['amountIn_1', '0', 'TMP_64']  
High Call: swap
Running querryfc
Found: None
Written func info: IVaderPool, swap
[i]Type for TMP_65

Name: TMP_65 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_66(uint256) = HIGH_LEVEL_CALL, dest:pool1_1(IVaderPool), function:swap, arguments:['0', 'TMP_65', 'to_1']  
High Call: swap
Running querryfc
Found: None
Written func info: IVaderPool, swap
[i]Type for TMP_66

Name: TMP_66 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_66
RETURN

Name: TMP_66 Function: _swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
([], [], 'u', 'u', 'u', -1)
[i]Type for TMP_44

Name: TMP_44 Function: swapTokensForExactTokens
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Reading Function: initialize
Checking funcion...



initialize
Function name: initialize
Finding type for _reserve(IVaderReserve ... )
Value: u
New param cache [[[-1], [-1], 'u', None, [], -1, 'u', 'u']]
FIND RETURN
ENTRY_POINT
initialize(IVaderReserve)


_ZERO_ADDRESS_2(address) := ϕ(['_ZERO_ADDRESS_5', '_ZERO_ADDRESS_0', '_ZERO_ADDRESS_3'])
MODIFIER_CALL, Ownable.onlyOwner()()
TMP_46 = CONVERT _ZERO_ADDRESS_3 to IVaderReserve
TMP_47(bool) = _reserve_1 != TMP_46
TMP_48(None) = SOLIDITY_CALL require(bool,string)(TMP_47,VaderRouter::initialize: Incorrect Reserve Specified)
reserve_8(IVaderReserve) := _reserve_1(IVaderReserve)
INTERNAL_CALL, Ownable.renounceOwnership()()


Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: _ZERO_ADDRESS_2, name: _ZERO_ADDRESS

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _ZERO_ADDRESS, Num: 2
Globalname: _ZERO_ADDRESS, contract_name: VaderRouter
global...

Name: PIC_87 Function: None
Num: -1
Den: -1
Address: 11
Norm: 0
LF: _ZERO_ADDRESS
Value: u
Fields: 
Finance Type: undef
Source address: 11
_ZERO_ADDRESS_2(address) := ϕ(['_ZERO_ADDRESS_5', '_ZERO_ADDRESS_0', '_ZERO_ADDRESS_3'])
Phi
[i]Type for _ZERO_ADDRESS

Name: _ZERO_ADDRESS Function: initialize
Num: -1
Den: -1
Address: 11
Norm: 0
LF: _ZERO_ADDRESS
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, Ownable.onlyOwner()()
New param cache []
FIND RETURN
ENTRY_POINT
onlyOwner()
Propogating All
Propogating All
Propogating All
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, Ownable._checkOwner()()
New param cache []
FIND RETURN
ENTRY_POINT
_checkOwner()
Propogating All
Propogating All
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_2 cleared
[i] TMP_3 cleared
[i] TMP_4 cleared
Propogating parameters and globals to SSA variables...
End popogation
TMP_2(address) = INTERNAL_CALL, Ownable.owner()()
New param cache []
FIND RETURN
ENTRY_POINT
owner()
Propogating All
Propogating All
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: _owner_1, name: _owner

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _owner, Num: 1
Globalname: _owner, contract_name: VaderRouter
global...

Name: PIC_88 Function: None
Num: -1
Den: -1
Address: 1
Norm: 0
LF: _owner
Value: u
Fields: 
Finance Type: undef
Source address: 1
_owner_1(address) := ϕ(['_owner_3', '_owner_0'])
Phi
[i]Type for _owner

Name: _owner Function: owner
Num: -1
Den: -1
Address: 1
Norm: 0
LF: _owner
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: _owner_1, name: _owner

Name: _owner Function: owner
Num: -1
Den: -1
Address: 1
Norm: 0
LF: _owner
Value: u
Fields: 
Finance Type: undef
Ssa_name: _owner_1, name: _owner

Name: _owner Function: owner
Num: -1
Den: -1
Address: 1
Norm: 0
LF: _owner
Value: u
Fields: 
Finance Type: undef
End popogation
RETURN _owner_1
RETURN

Name: _owner Function: owner
Num: -1
Den: -1
Address: 1
Norm: 0
LF: _owner
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: _owner_1, name: _owner

Name: _owner Function: owner
Num: -1
Den: -1
Address: 1
Norm: 0
LF: _owner
Value: u
Fields: 
Finance Type: undef
_owner_1(address) := ϕ(['_owner_3', '_owner_0'])
Phi
[i]Type for _owner

Name: _owner Function: owner
Num: -1
Den: -1
Address: 1
Norm: 0
LF: _owner
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: _owner_1, name: _owner

Name: _owner Function: owner
Num: -1
Den: -1
Address: 1
Norm: 0
LF: _owner
Value: u
Fields: 
Finance Type: undef
Ssa_name: _owner_1, name: _owner

Name: _owner Function: owner
Num: -1
Den: -1
Address: 1
Norm: 0
LF: _owner
Value: u
Fields: 
Finance Type: undef
End popogation
RETURN _owner_1
RETURN

Name: _owner Function: owner
Num: -1
Den: -1
Address: 1
Norm: 0
LF: _owner
Value: u
Fields: 
Finance Type: undef
Source address: 1
Source address: 1
[i]Type for TMP_2

Name: TMP_2 Function: _checkOwner
Num: -1
Den: -1
Address: 1
Norm: 0
LF: _owner
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_3(address) = INTERNAL_CALL, Context._msgSender()()
New param cache []
FIND RETURN
ENTRY_POINT
_msgSender()
Propogating All
Propogating All
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
RETURN msg.sender
RETURN
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
RETURN msg.sender
RETURN
Source address: u
Source address: u
[i]Type for TMP_3

Name: TMP_3 Function: _checkOwner
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_4(bool) = TMP_2 == TMP_3
[i]Type for TMP_4

Name: TMP_4 Function: _checkOwner
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_5(None) = SOLIDITY_CALL require(bool,string)(TMP_4,Ownable: caller is not the owner)
[i]Type for TMP_5

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_2 cleared
[i] TMP_3 cleared
[i] TMP_4 cleared
Propogating parameters and globals to SSA variables...
End popogation
TMP_2(address) = INTERNAL_CALL, Ownable.owner()()
New param cache []
Old param cache: []
Source address: 1
[i]Type for TMP_2

Name: TMP_2 Function: _checkOwner
Num: -1
Den: -1
Address: 1
Norm: 0
LF: _owner
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_3(address) = INTERNAL_CALL, Context._msgSender()()
New param cache []
Old param cache: []
Source address: u
[i]Type for TMP_3

Name: TMP_3 Function: _checkOwner
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_4(bool) = TMP_2 == TMP_3
[i]Type for TMP_4

Name: TMP_4 Function: _checkOwner
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_5(None) = SOLIDITY_CALL require(bool,string)(TMP_4,Ownable: caller is not the owner)
[i]Type for TMP_5

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, Ownable._checkOwner()()
New param cache []
Old param cache: []
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_46 cleared
[i] TMP_47 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve_1, name: _reserve

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _reserve_1 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _reserve, Num: 1
Globalname: _reserve, contract_name: VaderRouter
Ssa_name: _ZERO_ADDRESS_3, name: _ZERO_ADDRESS

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _ZERO_ADDRESS, Num: 3
Globalname: _ZERO_ADDRESS, contract_name: VaderRouter
global...

Name: PIC_87 Function: None
Num: -1
Den: -1
Address: 11
Norm: 0
LF: _ZERO_ADDRESS
Value: u
Fields: 
Finance Type: undef
Source address: 11
Ssa_name: _reserve_1, name: _reserve

Name: _reserve_1 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _reserve_1 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _reserve, Num: 1
Globalname: _reserve, contract_name: VaderRouter
Ssa_name: _ZERO_ADDRESS_3, name: _ZERO_ADDRESS

Name: None Function: None
Num: -1
Den: -1
Address: 11
Norm: 0
LF: _ZERO_ADDRESS
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_46 = CONVERT _ZERO_ADDRESS_3 to IVaderReserve
Converting _ZERO_ADDRESS_3

Name: None Function: None
Num: -1
Den: -1
Address: 11
Norm: 0
LF: _ZERO_ADDRESS
Value: u
Fields: 
Finance Type: undef
Source address: 11
VaderReserve
[i]Type for TMP_46

Name: TMP_46 Function: initialize
Num: -1
Den: -1
Address: 11
Norm: 0
LF: VaderReserve
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_47(bool) = _reserve_1 != TMP_46
[i]Type for TMP_47

Name: TMP_47 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_48(None) = SOLIDITY_CALL require(bool,string)(TMP_47,VaderRouter::initialize: Incorrect Reserve Specified)
[i]Type for TMP_48

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve_1, name: _reserve

Name: _reserve_1 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _reserve_1 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _reserve, Num: 1
Globalname: _reserve, contract_name: VaderRouter
Ssa_name: _reserve_1, name: _reserve

Name: _reserve_1 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _reserve_1 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _reserve, Num: 1
Globalname: _reserve, contract_name: VaderRouter
Ssa_name: reserve_8, name: reserve

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: reserve, Num: 8
Globalname: reserve, contract_name: VaderRouter
global...

Name: PIC_90 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
End popogation
reserve_8(IVaderReserve) := _reserve_1(IVaderReserve)
asgn
Finance type key: (-1, -1)
[i]Type for reserve

Name: reserve Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Copied reserve
Source address: u
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, Ownable.renounceOwnership()()
New param cache []
FIND RETURN
ENTRY_POINT
renounceOwnership()
Propogating All
Propogating All
Propogating All
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, Ownable.onlyOwner()()
New param cache []
Old param cache: []
[i] TMP_6 cleared
Propogating parameters and globals to SSA variables...
End popogation
TMP_6 = CONVERT 0 to address
Converting 0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_6

Name: TMP_6 Function: renounceOwnership
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
INTERNAL_CALL, Ownable._transferOwnership(address)(TMP_6)
New param cache [[[-1], [-1], 0, None, [], -1, 'u', 'u']]
[[-1], [-1], 0, None, [], -1, 'u', 'u']

Name: newOwner Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: newOwner
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_transferOwnership(address)
Propogating All
Propogating All
Propogating All
newOwner_1
Ssa_name: newOwner_1, name: newOwner

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: newOwner_1 Function: _transferOwnership
Num: -1
Den: -1
Address: u
Norm: 0
LF: newOwner
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
newOwner_1
Ssa_name: newOwner_1, name: newOwner

Name: newOwner_1 Function: _transferOwnership
Num: -1
Den: -1
Address: u
Norm: 0
LF: newOwner
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: newOwner_1 Function: _transferOwnership
Num: -1
Den: -1
Address: u
Norm: 0
LF: newOwner
Value: u
Fields: 
Finance Type: undef
Copied ftype
oldOwner_1
Ssa_name: oldOwner_1, name: oldOwner

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] newOwner cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: newOwner_1, name: newOwner

Name: newOwner_1 Function: _transferOwnership
Num: 
Den: 
Address: u
Norm: u
LF: newOwner
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: newOwner_1 Function: _transferOwnership
Num: -1
Den: -1
Address: u
Norm: 0
LF: newOwner
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: _owner_2, name: _owner

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _owner, Num: 2
Globalname: _owner, contract_name: VaderRouter
global...

Name: PIC_88 Function: None
Num: -1
Den: -1
Address: 1
Norm: 0
LF: _owner
Value: u
Fields: 
Finance Type: undef
Source address: 1
newOwner_1(address) := ϕ(['TMP_6', 'TMP_0', 'newOwner_1'])
Phi
[i]Type for newOwner

Name: newOwner Function: _transferOwnership
Num: -1
Den: -1
Address: u
Norm: 0
LF: newOwner
Value: u
Fields: 
Finance Type: undef
XXXX
_owner_2(address) := ϕ(['_owner_3', '_owner_0'])
Phi
[i]Type for _owner

Name: _owner Function: _transferOwnership
Num: -1
Den: -1
Address: 1
Norm: 0
LF: _owner
Value: u
Fields: 
Finance Type: undef
XXXX
[i] oldOwner cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _owner_2, name: _owner

Name: _owner Function: _transferOwnership
Num: -1
Den: -1
Address: 1
Norm: 0
LF: _owner
Value: u
Fields: 
Finance Type: undef
Ssa_name: _owner_2, name: _owner

Name: _owner Function: _transferOwnership
Num: -1
Den: -1
Address: 1
Norm: 0
LF: _owner
Value: u
Fields: 
Finance Type: undef
Ssa_name: oldOwner_1, name: oldOwner

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: oldOwner, Num: 1
Globalname: oldOwner, contract_name: VaderRouter
End popogation
oldOwner_1(address) := _owner_2(address)
asgn
Source address: 1
Finance type key: (-1, -1)
[i]Type for oldOwner

Name: oldOwner Function: _transferOwnership
Num: -1
Den: -1
Address: 1
Norm: 0
LF: _owner
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: newOwner_1, name: newOwner

Name: newOwner Function: _transferOwnership
Num: -1
Den: -1
Address: u
Norm: 0
LF: newOwner
Value: u
Fields: 
Finance Type: undef
Ssa_name: newOwner_1, name: newOwner

Name: newOwner Function: _transferOwnership
Num: -1
Den: -1
Address: u
Norm: 0
LF: newOwner
Value: u
Fields: 
Finance Type: undef
Ssa_name: _owner_3, name: _owner

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _owner, Num: 3
Globalname: _owner, contract_name: VaderRouter
global...

Name: PIC_88 Function: None
Num: -1
Den: -1
Address: 1
Norm: 0
LF: _owner
Value: u
Fields: 
Finance Type: undef
Source address: 1
End popogation
_owner_3(address) := newOwner_1(address)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for _owner

Name: _owner Function: _transferOwnership
Num: -1
Den: -1
Address: u
Norm: 0
LF: newOwner
Value: u
Fields: 
Finance Type: undef
XXXX
Copied _owner
Propogating parameters and globals to SSA variables...
Ssa_name: newOwner_1, name: newOwner

Name: newOwner Function: _transferOwnership
Num: -1
Den: -1
Address: u
Norm: 0
LF: newOwner
Value: u
Fields: 
Finance Type: undef
Ssa_name: oldOwner_1, name: oldOwner

Name: oldOwner Function: _transferOwnership
Num: -1
Den: -1
Address: 1
Norm: 0
LF: _owner
Value: u
Fields: 
Finance Type: undef
Ssa_name: newOwner_1, name: newOwner

Name: newOwner Function: _transferOwnership
Num: -1
Den: -1
Address: u
Norm: 0
LF: newOwner
Value: u
Fields: 
Finance Type: undef
Ssa_name: oldOwner_1, name: oldOwner

Name: oldOwner Function: _transferOwnership
Num: -1
Den: -1
Address: 1
Norm: 0
LF: _owner
Value: u
Fields: 
Finance Type: undef
End popogation
[i] newOwner cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: newOwner_1, name: newOwner

Name: newOwner Function: _transferOwnership
Num: 
Den: 
Address: u
Norm: u
LF: newOwner
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: newOwner_1 Function: _transferOwnership
Num: -1
Den: -1
Address: u
Norm: 0
LF: newOwner
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: _owner_2, name: _owner

Name: _owner Function: _transferOwnership
Num: -1
Den: -1
Address: 1
Norm: 0
LF: _owner
Value: u
Fields: 
Finance Type: undef
newOwner_1(address) := ϕ(['TMP_6', 'TMP_0', 'newOwner_1'])
Phi
[i]Type for newOwner

Name: newOwner Function: _transferOwnership
Num: -1
Den: -1
Address: u
Norm: 0
LF: newOwner
Value: u
Fields: 
Finance Type: undef
XXXX
_owner_2(address) := ϕ(['_owner_3', '_owner_0'])
Phi
[i]Type for _owner

Name: _owner Function: _transferOwnership
Num: -1
Den: -1
Address: 1
Norm: 0
LF: _owner
Value: u
Fields: 
Finance Type: undef
XXXX
[i] oldOwner cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _owner_2, name: _owner

Name: _owner Function: _transferOwnership
Num: -1
Den: -1
Address: 1
Norm: 0
LF: _owner
Value: u
Fields: 
Finance Type: undef
Ssa_name: _owner_2, name: _owner

Name: _owner Function: _transferOwnership
Num: -1
Den: -1
Address: 1
Norm: 0
LF: _owner
Value: u
Fields: 
Finance Type: undef
Ssa_name: oldOwner_1, name: oldOwner

Name: oldOwner Function: _transferOwnership
Num: 
Den: 
Address: u
Norm: u
LF: _owner
Value: u
Fields: 
Finance Type: undef
Name: oldOwner, Num: 1
Globalname: oldOwner, contract_name: VaderRouter
End popogation
oldOwner_1(address) := _owner_2(address)
asgn
Source address: 1
Finance type key: (-1, -1)
[i]Type for oldOwner

Name: oldOwner Function: _transferOwnership
Num: -1
Den: -1
Address: 1
Norm: 0
LF: _owner
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: newOwner_1, name: newOwner

Name: newOwner Function: _transferOwnership
Num: -1
Den: -1
Address: u
Norm: 0
LF: newOwner
Value: u
Fields: 
Finance Type: undef
Ssa_name: newOwner_1, name: newOwner

Name: newOwner Function: _transferOwnership
Num: -1
Den: -1
Address: u
Norm: 0
LF: newOwner
Value: u
Fields: 
Finance Type: undef
Ssa_name: _owner_3, name: _owner

Name: _owner Function: _transferOwnership
Num: -1
Den: -1
Address: u
Norm: 0
LF: newOwner
Value: u
Fields: 
Finance Type: undef
End popogation
_owner_3(address) := newOwner_1(address)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for _owner

Name: _owner Function: _transferOwnership
Num: -1
Den: -1
Address: u
Norm: 0
LF: newOwner
Value: u
Fields: 
Finance Type: undef
XXXX
Copied _owner
Propogating parameters and globals to SSA variables...
Ssa_name: newOwner_1, name: newOwner

Name: newOwner Function: _transferOwnership
Num: -1
Den: -1
Address: u
Norm: 0
LF: newOwner
Value: u
Fields: 
Finance Type: undef
Ssa_name: oldOwner_1, name: oldOwner

Name: oldOwner Function: _transferOwnership
Num: -1
Den: -1
Address: 1
Norm: 0
LF: _owner
Value: u
Fields: 
Finance Type: undef
Ssa_name: newOwner_1, name: newOwner

Name: newOwner Function: _transferOwnership
Num: -1
Den: -1
Address: u
Norm: 0
LF: newOwner
Value: u
Fields: 
Finance Type: undef
Ssa_name: oldOwner_1, name: oldOwner

Name: oldOwner Function: _transferOwnership
Num: -1
Den: -1
Address: 1
Norm: 0
LF: _owner
Value: u
Fields: 
Finance Type: undef
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, Ownable.onlyOwner()()
New param cache []
Old param cache: []
[i] TMP_6 cleared
Propogating parameters and globals to SSA variables...
End popogation
TMP_6 = CONVERT 0 to address
Converting 0

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_6

Name: TMP_6 Function: renounceOwnership
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
INTERNAL_CALL, Ownable._transferOwnership(address)(TMP_6)
New param cache [[[-1], [-1], 0, None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 0, None, [], -1, 'u']]


_ZERO_ADDRESS_2(address) := ϕ(['_ZERO_ADDRESS_5', '_ZERO_ADDRESS_0', '_ZERO_ADDRESS_3'])
MODIFIER_CALL, Ownable.onlyOwner()()
TMP_46 = CONVERT _ZERO_ADDRESS_3 to IVaderReserve
TMP_47(bool) = _reserve_1 != TMP_46
TMP_48(None) = SOLIDITY_CALL require(bool,string)(TMP_47,VaderRouter::initialize: Incorrect Reserve Specified)
reserve_8(IVaderReserve) := _reserve_1(IVaderReserve)
INTERNAL_CALL, Ownable.renounceOwnership()()


Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: _ZERO_ADDRESS_2, name: _ZERO_ADDRESS

Name: _ZERO_ADDRESS Function: initialize
Num: -1
Den: -1
Address: 11
Norm: 0
LF: _ZERO_ADDRESS
Value: u
Fields: 
Finance Type: undef
_ZERO_ADDRESS_2(address) := ϕ(['_ZERO_ADDRESS_5', '_ZERO_ADDRESS_0', '_ZERO_ADDRESS_3'])
Phi
[i]Type for _ZERO_ADDRESS

Name: _ZERO_ADDRESS Function: initialize
Num: -1
Den: -1
Address: 11
Norm: 0
LF: _ZERO_ADDRESS
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, Ownable.onlyOwner()()
New param cache []
Old param cache: []
[i] TMP_46 cleared
[i] TMP_47 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve_1, name: _reserve

Name: _reserve_1 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _reserve_1 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _reserve, Num: 1
Globalname: _reserve, contract_name: VaderRouter
Ssa_name: _ZERO_ADDRESS_3, name: _ZERO_ADDRESS

Name: _ZERO_ADDRESS Function: None
Num: -1
Den: -1
Address: 11
Norm: 0
LF: _ZERO_ADDRESS
Value: u
Fields: 
Finance Type: undef
Ssa_name: _reserve_1, name: _reserve

Name: _reserve_1 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _reserve_1 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _reserve, Num: 1
Globalname: _reserve, contract_name: VaderRouter
Ssa_name: _ZERO_ADDRESS_3, name: _ZERO_ADDRESS

Name: _ZERO_ADDRESS Function: None
Num: -1
Den: -1
Address: 11
Norm: 0
LF: _ZERO_ADDRESS
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_46 = CONVERT _ZERO_ADDRESS_3 to IVaderReserve
Converting _ZERO_ADDRESS_3

Name: _ZERO_ADDRESS Function: None
Num: -1
Den: -1
Address: 11
Norm: 0
LF: _ZERO_ADDRESS
Value: u
Fields: 
Finance Type: undef
Source address: 11
VaderReserve
[i]Type for TMP_46

Name: TMP_46 Function: initialize
Num: -1
Den: -1
Address: 11
Norm: 0
LF: VaderReserve
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_47(bool) = _reserve_1 != TMP_46
[i]Type for TMP_47

Name: TMP_47 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_48(None) = SOLIDITY_CALL require(bool,string)(TMP_47,VaderRouter::initialize: Incorrect Reserve Specified)
[i]Type for TMP_48

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve_1, name: _reserve

Name: _reserve_1 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _reserve_1 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _reserve, Num: 1
Globalname: _reserve, contract_name: VaderRouter
Ssa_name: _reserve_1, name: _reserve

Name: _reserve_1 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _reserve_1 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _reserve, Num: 1
Globalname: _reserve, contract_name: VaderRouter
Ssa_name: reserve_8, name: reserve

Name: reserve Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
reserve_8(IVaderReserve) := _reserve_1(IVaderReserve)
asgn
Finance type key: (-1, -1)
[i]Type for reserve

Name: reserve Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Copied reserve
Source address: u
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, Ownable.renounceOwnership()()
New param cache []
Old param cache: []
Reading Function: _swap
Function _swap not marked
Reading Function: _addLiquidity
Function _addLiquidity not marked
Reading Function: calculateInGivenOut
Checking funcion...



calculateInGivenOut
Function name: calculateInGivenOut
Finding type for amountOut(uint256 ... )
Value: u
Finding type for path(address[] ... )
prev address? -992
Head Addr: -992
    Norm: 0
    Set: {-992}
    Fin: NULL
New param cache [[[-1], [-1], 'u', None, [], -1, 'u', 'u'], [[], [], 0, None, [], -1, -992, 'u']]
Old param cache: [[[], [], 'u', None, [], -1, 'u'], [[], [], 0, None, [], -1, -992]]
FIND RETURN
ENTRY_POINT
calculateInGivenOut(uint256,address[])


amountOut_1(uint256) := ϕ(['amountOut_1'])
path_1 (-> [])(address[]) := ϕ(['path_1 (-> [])'])
factory_17(IVaderPoolFactory) := ϕ(['factory_13', 'factory_0', 'factory_16', 'factory_10', 'factory_19', 'factory_21', 'factory_15', 'factory_26', 'factory_1', 'factory_24', 'factory_7'])
REF_40 -> LENGTH path_1 (-> [])
TMP_85(bool) = REF_40 == 2
CONDITION TMP_85
TMP_86(address) = HIGH_LEVEL_CALL, dest:factory_17(IVaderPoolFactory), function:nativeAsset, arguments:[]  
factory_18(IVaderPoolFactory) := ϕ(['factory_13', 'factory_16', 'factory_10', 'factory_19', 'factory_21', 'factory_15', 'factory_26', 'factory_1', 'factory_24', 'factory_17', 'factory_7'])
nativeAsset_1(address) := TMP_86(address)
REF_43(address) -> path_1 (-> [])[0]
REF_44(address) -> path_1 (-> [])[1]
TMP_87(IVaderPool) = HIGH_LEVEL_CALL, dest:factory_18(IVaderPoolFactory), function:getPool, arguments:['REF_43', 'REF_44']  
factory_19(IVaderPoolFactory) := ϕ(['factory_13', 'factory_16', 'factory_10', 'factory_19', 'factory_21', 'factory_15', 'factory_26', 'factory_1', 'factory_24', 'factory_18', 'factory_7'])
pool_1(IVaderPool) := TMP_87(IVaderPool)
REF_50(address) -> path_1 (-> [])[0]
REF_51(address) -> path_1 (-> [])[1]
TMP_91(IVaderPool) = HIGH_LEVEL_CALL, dest:factory_17(IVaderPoolFactory), function:getPool, arguments:['REF_50', 'REF_51']  
factory_20(IVaderPoolFactory) := ϕ(['factory_13', 'factory_16', 'factory_10', 'factory_19', 'factory_21', 'factory_15', 'factory_26', 'factory_1', 'factory_24', 'factory_7'])
pool0_1(IVaderPool) := TMP_91(IVaderPool)
REF_53(address) -> path_1 (-> [])[1]
REF_54(address) -> path_1 (-> [])[2]
TMP_92(IVaderPool) = HIGH_LEVEL_CALL, dest:factory_20(IVaderPoolFactory), function:getPool, arguments:['REF_53', 'REF_54']  
factory_21(IVaderPoolFactory) := ϕ(['factory_13', 'factory_16', 'factory_10', 'factory_19', 'factory_21', 'factory_15', 'factory_26', 'factory_20', 'factory_1', 'factory_24', 'factory_7'])
pool1_1(IVaderPool) := TMP_92(IVaderPool)
TUPLE_3(uint112,uint112,uint32) = HIGH_LEVEL_CALL, dest:pool_1(IVaderPool), function:getReserves, arguments:[]  
nativeReserve_1(uint256)= UNPACK TUPLE_3 index: 0 
foreignReserve_1(uint256)= UNPACK TUPLE_3 index: 1 
REF_46(address) -> path_1 (-> [])[0]
TMP_88(bool) = REF_46 == nativeAsset_1
CONDITION TMP_88
TMP_89(uint256) = LIBRARY_CALL, dest:VaderMath, function:VaderMath.calculateSwapReverse(uint256,uint256,uint256), arguments:['amountOut_1', 'nativeReserve_1', 'foreignReserve_1'] 
RETURN TMP_89
TMP_90(uint256) = LIBRARY_CALL, dest:VaderMath, function:VaderMath.calculateSwapReverse(uint256,uint256,uint256), arguments:['amountOut_1', 'foreignReserve_1', 'nativeReserve_1'] 
RETURN TMP_90
TUPLE_4(uint112,uint112,uint32) = HIGH_LEVEL_CALL, dest:pool0_1(IVaderPool), function:getReserves, arguments:[]  
nativeReserve0_1(uint256)= UNPACK TUPLE_4 index: 0 
foreignReserve0_1(uint256)= UNPACK TUPLE_4 index: 1 
TUPLE_5(uint112,uint112,uint32) = HIGH_LEVEL_CALL, dest:pool1_1(IVaderPool), function:getReserves, arguments:[]  
nativeReserve1_1(uint256)= UNPACK TUPLE_5 index: 0 
foreignReserve1_1(uint256)= UNPACK TUPLE_5 index: 1 
TMP_93(uint256) = LIBRARY_CALL, dest:VaderMath, function:VaderMath.calculateSwapReverse(uint256,uint256,uint256), arguments:['amountOut_1', 'nativeReserve1_1', 'foreignReserve1_1'] 
TMP_94(uint256) = LIBRARY_CALL, dest:VaderMath, function:VaderMath.calculateSwapReverse(uint256,uint256,uint256), arguments:['TMP_93', 'foreignReserve0_1', 'nativeReserve0_1'] 
RETURN TMP_94


[i] amountOut cleared
[i] path cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: amountOut_1, name: amountOut

Name: amountOut_1 Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountOut_1 Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountOut, Num: 1
Globalname: amountOut, contract_name: VaderRouter
Ssa_name: path_1 (-> []), name: path

Name: path Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: -992

Name: path_1 (-> []) Function: calculateInGivenOut
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: factory_17, name: factory

Name: factory Function: calculateInGivenOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
amountOut_1(uint256) := ϕ(['amountOut_1'])
Phi

Name: amountOut_1 Function: swapTokensForExactTokens
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for amountOut

Name: amountOut Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
path_1 (-> [])(address[]) := ϕ(['path_1 (-> [])'])
Phi
[i]Type for path

Name: path Function: calculateInGivenOut
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
factory_17(IVaderPoolFactory) := ϕ(['factory_13', 'factory_0', 'factory_16', 'factory_10', 'factory_19', 'factory_21', 'factory_15', 'factory_26', 'factory_1', 'factory_24', 'factory_7'])
Phi
[i]Type for factory

Name: factory Function: calculateInGivenOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_85 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: path_1 (-> []), name: path

Name: path Function: calculateInGivenOut
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: path_1 (-> []), name: path

Name: path Function: calculateInGivenOut
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
REF_40 -> LENGTH path_1 (-> [])
[i]Type for REF_40

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_85(bool) = REF_40 == 2
[i]Type for TMP_85

Name: TMP_85 Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_86 cleared
[i] nativeAsset cleared
Propogating parameters and globals to SSA variables...
Ssa_name: factory_17, name: factory

Name: factory Function: calculateInGivenOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: factory_17, name: factory

Name: factory Function: calculateInGivenOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeAsset_1, name: nativeAsset

Name: nativeAsset Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Name: nativeAsset, Num: 1
Globalname: nativeAsset, contract_name: VaderRouter
End popogation
Ssa_name: factory_18, name: factory

Name: factory Function: calculateInGivenOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_86(address) = HIGH_LEVEL_CALL, dest:factory_17(IVaderPoolFactory), function:nativeAsset, arguments:[]  
High Call: nativeAsset
Running querryfc
Found: None
Written func info: IVaderPoolFactory, nativeAsset
Retvar: ('c', ['global:nativeAsset'], ['-1'], 18, "'u'", 'u')
{'global:_owner': 1, 'global:_tokenApprovals': 2, 'global:_owners': 3, 'swap:to': -999, 'mint:to': -998, 'mint:TMP_139': 4, 'global:this': 4, 'None:None': 5, 'mint:foreignAsset': 6, 'swap:_nativeAsset': 7, 'swap:_foreignAsset': 8, 'global:nativeAsset': 9, 'global:foreignAsset': 10, 'global:_ZERO_ADDRESS': 11, 'removeLiquidity:tokenA': -997, 'removeLiquidity:tokenB': -996, 'removeLiquidity:to': -995, 'swapExactTokensForTokens:path': -994, 'swapExactTokensForTokens:to': -993, 'swapTokensForExactTokens:path': -992, 'swapTokensForExactTokens:to': -991, 'calculateInGivenOut:path': -990, 'calculateOutGivenIn:path': -989}
([9], [-1], 18, "'u'", 'u', -1)
[i]Type for TMP_86

Name: TMP_86 Function: calculateInGivenOut
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
factory_18(IVaderPoolFactory) := ϕ(['factory_13', 'factory_16', 'factory_10', 'factory_19', 'factory_21', 'factory_15', 'factory_26', 'factory_1', 'factory_24', 'factory_17', 'factory_7'])
Phi
[i]Type for factory

Name: factory Function: calculateInGivenOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
nativeAsset_1(address) := TMP_86(address)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for nativeAsset

Name: nativeAsset Function: calculateInGivenOut
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
[i] TMP_87 cleared
[i] pool cleared
Propogating parameters and globals to SSA variables...
Ssa_name: path_1 (-> []), name: path

Name: path Function: calculateInGivenOut
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: factory_18, name: factory

Name: factory Function: calculateInGivenOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: path_1 (-> []), name: path

Name: path Function: calculateInGivenOut
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: factory_18, name: factory

Name: factory Function: calculateInGivenOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: pool_1, name: pool

Name: pool Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pool, Num: 1
Globalname: pool, contract_name: VaderRouter
End popogation
Ssa_name: factory_19, name: factory

Name: factory Function: calculateInGivenOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_43(address) -> path_1 (-> [])[0]
INDEX
REFERENCE LEFT VALUE PROPAGATION
Source address: -992
[i]Type for REF_43

Name: path Function: calculateInGivenOut
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_44(address) -> path_1 (-> [])[1]
INDEX
REFERENCE LEFT VALUE PROPAGATION
Source address: -992
[i]Type for REF_44

Name: path Function: calculateInGivenOut
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_87(IVaderPool) = HIGH_LEVEL_CALL, dest:factory_18(IVaderPoolFactory), function:getPool, arguments:['REF_43', 'REF_44']  
High Call: getPool
Running querryfc
Found: None
Written func info: IVaderPoolFactory, getPool
[i]Type for TMP_87

Name: TMP_87 Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
factory_19(IVaderPoolFactory) := ϕ(['factory_13', 'factory_16', 'factory_10', 'factory_19', 'factory_21', 'factory_15', 'factory_26', 'factory_1', 'factory_24', 'factory_18', 'factory_7'])
Phi
[i]Type for factory

Name: factory Function: calculateInGivenOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
pool_1(IVaderPool) := TMP_87(IVaderPool)
asgn
Finance type key: (-1, -1)
[i]Type for pool

Name: pool Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_91 cleared
[i] pool0 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: path_1 (-> []), name: path

Name: path Function: calculateInGivenOut
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: factory_17, name: factory

Name: factory Function: calculateInGivenOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: path_1 (-> []), name: path

Name: path Function: calculateInGivenOut
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: factory_17, name: factory

Name: factory Function: calculateInGivenOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: pool0_1, name: pool0

Name: pool0 Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pool0, Num: 1
Globalname: pool0, contract_name: VaderRouter
End popogation
Ssa_name: factory_20, name: factory

Name: factory Function: calculateInGivenOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_50(address) -> path_1 (-> [])[0]
INDEX
REFERENCE LEFT VALUE PROPAGATION
Source address: -992
[i]Type for REF_50

Name: path Function: calculateInGivenOut
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_51(address) -> path_1 (-> [])[1]
INDEX
REFERENCE LEFT VALUE PROPAGATION
Source address: -992
[i]Type for REF_51

Name: path Function: calculateInGivenOut
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_91(IVaderPool) = HIGH_LEVEL_CALL, dest:factory_17(IVaderPoolFactory), function:getPool, arguments:['REF_50', 'REF_51']  
High Call: getPool
Running querryfc
Found: None
Written func info: IVaderPoolFactory, getPool
[i]Type for TMP_91

Name: TMP_91 Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
factory_20(IVaderPoolFactory) := ϕ(['factory_13', 'factory_16', 'factory_10', 'factory_19', 'factory_21', 'factory_15', 'factory_26', 'factory_1', 'factory_24', 'factory_7'])
Phi
[i]Type for factory

Name: factory Function: calculateInGivenOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
pool0_1(IVaderPool) := TMP_91(IVaderPool)
asgn
Finance type key: (-1, -1)
[i]Type for pool0

Name: pool0 Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_92 cleared
[i] pool1 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: path_1 (-> []), name: path

Name: path Function: calculateInGivenOut
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: factory_20, name: factory

Name: factory Function: calculateInGivenOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: factory_20, name: factory

Name: factory Function: calculateInGivenOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: path_1 (-> []), name: path

Name: path Function: calculateInGivenOut
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: pool1_1, name: pool1

Name: pool1 Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pool1, Num: 1
Globalname: pool1, contract_name: VaderRouter
End popogation
Ssa_name: factory_21, name: factory

Name: factory Function: calculateInGivenOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_53(address) -> path_1 (-> [])[1]
INDEX
REFERENCE LEFT VALUE PROPAGATION
Source address: -992
[i]Type for REF_53

Name: path Function: calculateInGivenOut
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_54(address) -> path_1 (-> [])[2]
INDEX
REFERENCE LEFT VALUE PROPAGATION
Source address: -992
[i]Type for REF_54

Name: path Function: calculateInGivenOut
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_92(IVaderPool) = HIGH_LEVEL_CALL, dest:factory_20(IVaderPoolFactory), function:getPool, arguments:['REF_53', 'REF_54']  
High Call: getPool
Running querryfc
Found: None
Written func info: IVaderPoolFactory, getPool
[i]Type for TMP_92

Name: TMP_92 Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
factory_21(IVaderPoolFactory) := ϕ(['factory_13', 'factory_16', 'factory_10', 'factory_19', 'factory_21', 'factory_15', 'factory_26', 'factory_20', 'factory_1', 'factory_24', 'factory_7'])
Phi
[i]Type for factory

Name: factory Function: calculateInGivenOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
pool1_1(IVaderPool) := TMP_92(IVaderPool)
asgn
Finance type key: (-1, -1)
[i]Type for pool1

Name: pool1 Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] nativeReserve cleared
[i] foreignReserve cleared
Propogating parameters and globals to SSA variables...
Ssa_name: pool_1, name: pool

Name: pool Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pool, Num: 1
Globalname: pool, contract_name: VaderRouter
Ssa_name: pool_1, name: pool

Name: pool Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pool, Num: 1
Globalname: pool, contract_name: VaderRouter
Ssa_name: nativeReserve_1, name: nativeReserve

Name: nativeReserve Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Name: nativeReserve, Num: 1
Globalname: nativeReserve, contract_name: VaderRouter
Ssa_name: foreignReserve_1, name: foreignReserve

Name: foreignReserve Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Name: foreignReserve, Num: 1
Globalname: foreignReserve, contract_name: VaderRouter
End popogation
TUPLE_3(uint112,uint112,uint32) = HIGH_LEVEL_CALL, dest:pool_1(IVaderPool), function:getReserves, arguments:[]  
High Call: getReserves
Running querryfc
Found: None
Written func info: IVaderPool, getReserves
Retvar: ('c', ['global:nativeAsset'], ['-1'], 18, "'u'", 'u')
{'global:_owner': 1, 'global:_tokenApprovals': 2, 'global:_owners': 3, 'swap:to': -999, 'mint:to': -998, 'mint:TMP_139': 4, 'global:this': 4, 'None:None': 5, 'mint:foreignAsset': 6, 'swap:_nativeAsset': 7, 'swap:_foreignAsset': 8, 'global:nativeAsset': 9, 'global:foreignAsset': 10, 'global:_ZERO_ADDRESS': 11, 'removeLiquidity:tokenA': -997, 'removeLiquidity:tokenB': -996, 'removeLiquidity:to': -995, 'swapExactTokensForTokens:path': -994, 'swapExactTokensForTokens:to': -993, 'swapTokensForExactTokens:path': -992, 'swapTokensForExactTokens:to': -991, 'calculateInGivenOut:path': -990, 'calculateOutGivenIn:path': -989}
Retvar: ('c', ['global:foreignAsset'], ['-1'], 6, "'u'", 'u')
{'global:_owner': 1, 'global:_tokenApprovals': 2, 'global:_owners': 3, 'swap:to': -999, 'mint:to': -998, 'mint:TMP_139': 4, 'global:this': 4, 'None:None': 5, 'mint:foreignAsset': 6, 'swap:_nativeAsset': 7, 'swap:_foreignAsset': 8, 'global:nativeAsset': 9, 'global:foreignAsset': 10, 'global:_ZERO_ADDRESS': 11, 'removeLiquidity:tokenA': -997, 'removeLiquidity:tokenB': -996, 'removeLiquidity:to': -995, 'swapExactTokensForTokens:path': -994, 'swapExactTokensForTokens:to': -993, 'swapTokensForExactTokens:path': -992, 'swapTokensForExactTokens:to': -991, 'calculateInGivenOut:path': -990, 'calculateOutGivenIn:path': -989}
[i]Type for TUPLE_3

Name: TUPLE_3 Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
nativeReserve_1(uint256)= UNPACK TUPLE_3 index: 0 
([9], [-1], 18, "'u'", 'u', -1)
[i]Type for nativeReserve

Name: nativeReserve Function: calculateInGivenOut
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
foreignReserve_1(uint256)= UNPACK TUPLE_3 index: 1 
([10], [-1], 6, "'u'", 'u', -1)
[i]Type for foreignReserve

Name: foreignReserve Function: calculateInGivenOut
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_88 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: nativeAsset_1, name: nativeAsset

Name: nativeAsset Function: calculateInGivenOut
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: path_1 (-> []), name: path

Name: path Function: calculateInGivenOut
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeAsset_1, name: nativeAsset

Name: nativeAsset Function: calculateInGivenOut
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: path_1 (-> []), name: path

Name: path Function: calculateInGivenOut
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
REF_46(address) -> path_1 (-> [])[0]
INDEX
REFERENCE LEFT VALUE PROPAGATION
Source address: -992
[i]Type for REF_46

Name: path Function: calculateInGivenOut
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_88(bool) = REF_46 == nativeAsset_1
[i]Type for TMP_88

Name: TMP_88 Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_89 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: nativeReserve_1, name: nativeReserve

Name: nativeReserve Function: calculateInGivenOut
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amountOut_1, name: amountOut

Name: amountOut Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountOut_1 Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountOut, Num: 1
Globalname: amountOut, contract_name: VaderRouter
Ssa_name: foreignReserve_1, name: foreignReserve

Name: foreignReserve Function: calculateInGivenOut
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: nativeReserve_1, name: nativeReserve

Name: nativeReserve Function: calculateInGivenOut
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amountOut_1, name: amountOut

Name: amountOut_1 Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountOut_1 Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountOut, Num: 1
Globalname: amountOut, contract_name: VaderRouter
Ssa_name: foreignReserve_1, name: foreignReserve

Name: foreignReserve Function: calculateInGivenOut
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
End popogation
TMP_89(uint256) = LIBRARY_CALL, dest:VaderMath, function:VaderMath.calculateSwapReverse(uint256,uint256,uint256), arguments:['amountOut_1', 'nativeReserve_1', 'foreignReserve_1'] 
Found: calculateSwapReverse

Name: amountOut_1 Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: nativeReserve Function: calculateInGivenOut
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: foreignReserve Function: calculateInGivenOut
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
High level cal param_cache
Param: 0
    num: []
    den: []
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [9]
    den: [-1]
    norm: 18
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [10]
    den: [-1]
    norm: 6
    link: None
    fields: []
    fintype: -1
New param cache [[[], [], 'u', None, [], -1, 'u', 'u'], [[9], [-1], 18, None, [], -1, 'u', "'u'"], [[10], [-1], 6, None, [], -1, 'u', "'u'"]]
Old param cache: [[[-1], [-1], 'u', None, [], -1, 'u'], [[-1], [-1], 'u', None, [], -1, 'u'], [[-1], [-1], 'u', None, [], -1, 'u']]
[[], [], 'u', None, [], -1, 'u', 'u']

Name: amountOut Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[9], [-1], 18, None, [], -1, 'u', "'u'"]

Name: reserveIn Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
[[10], [-1], 6, None, [], -1, 'u', "'u'"]

Name: reserveOut Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
calculateSwapReverse(uint256,uint256,uint256)
Propogating All
Propogating All
reserveOut_1
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: reserveOut_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
reserveIn_1
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: reserveIn_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
Propogating All
amountOut_1
Ssa_name: amountOut_1, name: amountOut

Name: amountOut_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountOut_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
y2_1
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Propogating All
reserveOut_1
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: reserveOut_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
y4_1
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Propogating All
y4_1
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
reserveOut_1
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: reserveOut_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
reserveIn_1
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: reserveIn_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
XY_1
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
reserveIn_1
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: reserveIn_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
y2_1
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Propogating All
XY_1
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
numeratorC_1
Ssa_name: numeratorC_1, name: numeratorC

Name: numeratorC Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
numeratorB_1
Ssa_name: numeratorB_1, name: numeratorB

Name: numeratorB Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 2
Fields: 
Finance Type: undef
numeratorA_1
Ssa_name: numeratorA_1, name: numeratorA

Name: numeratorA Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
y2_1
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Propogating All
numerator_1
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
denominator_1
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Propogating All
amountIn_1
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_31 cleared
[i] XY cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: XY, Num: 1
Globalname: XY, contract_name: VaderMath
End popogation
TMP_31(uint256) = reserveIn_1 (c)* reserveOut_1
lnorm: 18 rnorm: 6
Source address: u
Source address: u
Source address: u
[i]Type for TMP_31

Name: TMP_31 Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
XY_1(uint256) := TMP_31(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for XY

Name: XY Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_32 cleared
[i] y2 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountOut_1, name: amountOut

Name: amountOut_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountOut_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountOut, Num: 1
Globalname: amountOut, contract_name: VaderMath
Ssa_name: amountOut_1, name: amountOut

Name: amountOut_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountOut_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountOut, Num: 1
Globalname: amountOut, contract_name: VaderMath
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: y2, Num: 1
Globalname: y2, contract_name: VaderMath
End popogation
TMP_32(uint256) = amountOut_1 (c)* 2
lnorm: u rnorm: 0
Source address: u
[i]Type for TMP_32

Name: TMP_32 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
y2_1(uint256) := TMP_32(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] TMP_33 cleared
[i] y4 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: y4, Num: 1
Globalname: y4, contract_name: VaderMath
End popogation
TMP_33(uint256) = y2_1 (c)* 2
lnorm: 0 rnorm: 0
Source address: u
[i]Type for TMP_33

Name: TMP_33 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
y4_1(uint256) := TMP_33(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
[i] TMP_34 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
End popogation
TMP_34(bool) = y4_1 < reserveOut_1
lnorm: 0 rnorm: 6
[i]Type for TMP_34

Name: TMP_34 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_35(None) = SOLIDITY_CALL require(bool,string)(TMP_34,VaderMath::calculateSwapReverse: Desired Output Exceeds Maximum Output Possible (1/4 of Liquidity Pool))
[i]Type for TMP_35

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_36 cleared
[i] TMP_37 cleared
[i] TMP_38 cleared
[i] TMP_39 cleared
[i] TMP_40 cleared
[i] numeratorA cleared
Propogating parameters and globals to SSA variables...
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: numeratorA_1, name: numeratorA

Name: numeratorA Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numeratorA, Num: 1
Globalname: numeratorA, contract_name: VaderMath
End popogation
TMP_36(uint256) = INTERNAL_CALL, VaderMath.root(uint256)(XY_1)
New param cache [[[9, 10], [-1], 24, None, [], -1, 'u', 'u']]
Old param cache: [[[], [], 'u', None, [], -1, 'u']]
[[9, 10], [-1], 24, None, [], -1, 'u', 'u']

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
root(uint256)
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
Propogating All
c_2
Ssa_name: c_2, name: c

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Propogating All
Propogating All
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_38', 'XY_1'])
Phi
[i]Type for a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_49 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_49(bool) = a_1 > 3
lnorm: 24 rnorm: 0
[i]Type for TMP_49

Name: TMP_49 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_56 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_56(bool) = a_1 != 0
[i]Type for TMP_56

Name: TMP_56 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_4, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: c, Num: 4
Globalname: c, contract_name: VaderMath
End popogation
c_4(uint256) := 1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: c_1, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 1
Globalname: c, contract_name: VaderMath
End popogation
c_1(uint256) := a_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_50 cleared
[i] TMP_51 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: VaderMath
End popogation
TMP_50(uint256) = a_1 (c)/ 2
lnorm: 24 rnorm: 0
Source address: u
lnorm: 24 rnorm: 0
10
9
-1
[i]Type for TMP_50

Name: TMP_50 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_51(uint256) = TMP_50 (c)+ 1
Source address: u
[i]Type for TMP_51

Name: TMP_51 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_51(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
[i] x cleared
[i] TMP_52 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
End popogation
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
c_2(uint256) := ϕ(['c_1', 'c_3'])
Phi

Name: c Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for c

Name: c Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
x_2(uint256) := ϕ(['x_3', 'x_1'])
Phi

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_52(bool) = x_2 < c_2
lnorm: 0 rnorm: 24
[i]Type for TMP_52

Name: TMP_52 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: c_3, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: c, Num: 3
Globalname: c, contract_name: VaderMath
End popogation
c_3(uint256) := x_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] TMP_53 cleared
[i] TMP_54 cleared
[i] TMP_55 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: x_3, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 3
Globalname: x, contract_name: VaderMath
End popogation
TMP_53(uint256) = a_1 (c)/ x_2
lnorm: 24 rnorm: 0
Source address: u
Source address: u
lnorm: 24 rnorm: 0
Source address: u
10
-1
[i]Type for TMP_53

Name: TMP_53 Function: root
Num: 10
Den: -1
Address: u
Norm: 24
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_54(uint256) = TMP_53 (c)+ x_2
9
[i]Type for TMP_54

Name: TMP_54 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_55(uint256) = TMP_54 (c)/ 2
lnorm: u rnorm: 0
lnorm: u rnorm: 0
[i]Type for TMP_55

Name: TMP_55 Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
x_3(uint256) := TMP_55(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_38', 'XY_1'])
Phi
[i]Type for a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_49 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_49(bool) = a_1 > 3
lnorm: 24 rnorm: 0
[i]Type for TMP_49

Name: TMP_49 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_56 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_56(bool) = a_1 != 0
[i]Type for TMP_56

Name: TMP_56 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_4, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: c, Num: 4
Globalname: c, contract_name: VaderMath
End popogation
c_4(uint256) := 1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: c_1, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 1
Globalname: c, contract_name: VaderMath
End popogation
c_1(uint256) := a_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_50 cleared
[i] TMP_51 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: VaderMath
End popogation
TMP_50(uint256) = a_1 (c)/ 2
lnorm: 24 rnorm: 0
Source address: u
lnorm: 24 rnorm: 0
10
9
-1
[i]Type for TMP_50

Name: TMP_50 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_51(uint256) = TMP_50 (c)+ 1
Source address: u
[i]Type for TMP_51

Name: TMP_51 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_51(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
[i] x cleared
[i] TMP_52 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
End popogation
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
c_2(uint256) := ϕ(['c_1', 'c_3'])
Phi

Name: c Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for c

Name: c Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
x_2(uint256) := ϕ(['x_3', 'x_1'])
Phi

Name: x Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for x

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
TMP_52(bool) = x_2 < c_2
lnorm: 0 rnorm: 24
10
9
-1
[i]Type for TMP_52

Name: TMP_52 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: c_3, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: c, Num: 3
Globalname: c, contract_name: VaderMath
End popogation
c_3(uint256) := x_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
[i] TMP_53 cleared
[i] TMP_54 cleared
[i] TMP_55 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: x_3, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 3
Globalname: x, contract_name: VaderMath
End popogation
TMP_53(uint256) = a_1 (c)/ x_2
lnorm: 24 rnorm: 0
Source address: u
Source address: u
lnorm: 24 rnorm: 0
Source address: u
Source address: u
[i]Type for TMP_53

Name: TMP_53 Function: root
Num: -1
Den: -1
Address: u
Norm: 24
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
TMP_54(uint256) = TMP_53 (c)+ x_2
Source address: u
[i]Type for TMP_54

Name: TMP_54 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
XXXX
TMP_55(uint256) = TMP_54 (c)/ 2
lnorm: 0 rnorm: 0
Source address: u
lnorm: 0 rnorm: 0
10
9
-1
[i]Type for TMP_55

Name: TMP_55 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
x_3(uint256) := TMP_55(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_36

Name: TMP_36 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_37(uint256) = reserveOut_1 (c)- y4_1
Source address: u
[i]Type for TMP_37

Name: TMP_37 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
TMP_38(uint256) = reserveIn_1 (c)* TMP_37
lnorm: 18 rnorm: 0
Source address: u
[i]Type for TMP_38

Name: TMP_38 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
TMP_39(uint256) = INTERNAL_CALL, VaderMath.root(uint256)(TMP_38)
New param cache [[[9], [-1], 18, None, [], -1, 'u', 4]]
Old param cache: [[[], [], 'u', None, [], -1, 'u']]
[[9], [-1], 18, None, [], -1, 'u', 4]

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
root(uint256)
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
Propogating All
c_2
Ssa_name: c_2, name: c

Name: c Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Propogating All
Propogating All
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_38', 'XY_1'])
Phi
[i]Type for a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
[i] TMP_49 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
End popogation
TMP_49(bool) = a_1 > 3
lnorm: 18 rnorm: 0
[i]Type for TMP_49

Name: TMP_49 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_56 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
End popogation
TMP_56(bool) = a_1 != 0
[i]Type for TMP_56

Name: TMP_56 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_4, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: c, Num: 4
Globalname: c, contract_name: VaderMath
End popogation
c_4(uint256) := 1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: c_1, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 1
Globalname: c, contract_name: VaderMath
End popogation
c_1(uint256) := a_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_50 cleared
[i] TMP_51 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: VaderMath
End popogation
TMP_50(uint256) = a_1 (c)/ 2
lnorm: 18 rnorm: 0
Source address: u
lnorm: 18 rnorm: 0
9
-1
[i]Type for TMP_50

Name: TMP_50 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_51(uint256) = TMP_50 (c)+ 1
Source address: u
[i]Type for TMP_51

Name: TMP_51 Function: root
Num: 9
Den: -1
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_51(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
[i] x cleared
[i] TMP_52 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
End popogation
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
c_2(uint256) := ϕ(['c_1', 'c_3'])
Phi

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef

Name: c Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for c

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
x_2(uint256) := ϕ(['x_3', 'x_1'])
Phi

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for x

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
TMP_52(bool) = x_2 < c_2
lnorm: 0 rnorm: 18
[i]Type for TMP_52

Name: TMP_52 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: c_3, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: c, Num: 3
Globalname: c, contract_name: VaderMath
End popogation
c_3(uint256) := x_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
[i] TMP_53 cleared
[i] TMP_54 cleared
[i] TMP_55 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: x_3, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 3
Globalname: x, contract_name: VaderMath
End popogation
TMP_53(uint256) = a_1 (c)/ x_2
lnorm: 18 rnorm: 0
Source address: u
Source address: u
lnorm: 18 rnorm: 0
Source address: u
-1
10
[i]Type for TMP_53

Name: TMP_53 Function: root
Num: -1
Den: 10
Address: u
Norm: 18
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
TMP_54(uint256) = TMP_53 (c)+ x_2
[i]Type for TMP_54

Name: TMP_54 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_55(uint256) = TMP_54 (c)/ 2
lnorm: u rnorm: 0
lnorm: u rnorm: 0
[i]Type for TMP_55

Name: TMP_55 Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
x_3(uint256) := TMP_55(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_38', 'XY_1'])
Phi
[i]Type for a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
[i] TMP_49 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
End popogation
TMP_49(bool) = a_1 > 3
lnorm: 18 rnorm: 0
[i]Type for TMP_49

Name: TMP_49 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_56 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
End popogation
TMP_56(bool) = a_1 != 0
[i]Type for TMP_56

Name: TMP_56 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_4, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: c, Num: 4
Globalname: c, contract_name: VaderMath
End popogation
c_4(uint256) := 1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: c_1, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 1
Globalname: c, contract_name: VaderMath
End popogation
c_1(uint256) := a_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_50 cleared
[i] TMP_51 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: VaderMath
End popogation
TMP_50(uint256) = a_1 (c)/ 2
lnorm: 18 rnorm: 0
Source address: u
lnorm: 18 rnorm: 0
9
-1
[i]Type for TMP_50

Name: TMP_50 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_51(uint256) = TMP_50 (c)+ 1
Source address: u
[i]Type for TMP_51

Name: TMP_51 Function: root
Num: 9
Den: -1
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_51(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
[i] x cleared
[i] TMP_52 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
End popogation
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
c_2(uint256) := ϕ(['c_1', 'c_3'])
Phi

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef

Name: c Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for c

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
x_2(uint256) := ϕ(['x_3', 'x_1'])
Phi

Name: x Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
TMP_52(bool) = x_2 < c_2
lnorm: 0 rnorm: 18
9
-1
[i]Type for TMP_52

Name: TMP_52 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: c_3, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: c, Num: 3
Globalname: c, contract_name: VaderMath
End popogation
c_3(uint256) := x_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
[i] TMP_53 cleared
[i] TMP_54 cleared
[i] TMP_55 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: x_3, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 3
Globalname: x, contract_name: VaderMath
End popogation
TMP_53(uint256) = a_1 (c)/ x_2
lnorm: 18 rnorm: 0
Source address: u
Source address: u
lnorm: 18 rnorm: 0
Source address: u
Source address: u
[i]Type for TMP_53

Name: TMP_53 Function: root
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
TMP_54(uint256) = TMP_53 (c)+ x_2
Source address: u
[i]Type for TMP_54

Name: TMP_54 Function: root
Num: 9
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
TMP_55(uint256) = TMP_54 (c)/ 2
lnorm: 0 rnorm: 0
Source address: u
lnorm: 0 rnorm: 0
9
-1
[i]Type for TMP_55

Name: TMP_55 Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
x_3(uint256) := TMP_55(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_39

Name: TMP_39 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_40(uint256) = TMP_36 (c)* TMP_39
lnorm: u rnorm: u
[i]Type for TMP_40

Name: TMP_40 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
numeratorA_1(uint256) := TMP_40(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for numeratorA

Name: numeratorA Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_41 cleared
[i] numeratorB cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: numeratorB_1, name: numeratorB

Name: numeratorB Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: numeratorB, Num: 1
Globalname: numeratorB, contract_name: VaderMath
End popogation
TMP_41(uint256) = y2_1 (c)* reserveIn_1
lnorm: 0 rnorm: 18
Source address: u
[i]Type for TMP_41

Name: TMP_41 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
numeratorB_1(uint256) := TMP_41(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for numeratorB

Name: numeratorB Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] numeratorC cleared
Propogating parameters and globals to SSA variables...
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: numeratorC_1, name: numeratorC

Name: numeratorC Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numeratorC, Num: 1
Globalname: numeratorC, contract_name: VaderMath
End popogation
numeratorC_1(uint256) := XY_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for numeratorC

Name: numeratorC Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_42 cleared
[i] TMP_43 cleared
[i] numerator cleared
Propogating parameters and globals to SSA variables...
Ssa_name: numeratorC_1, name: numeratorC

Name: numeratorC Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: numeratorB_1, name: numeratorB

Name: numeratorB Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: numeratorA_1, name: numeratorA

Name: numeratorA Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numeratorA, Num: 1
Globalname: numeratorA, contract_name: VaderMath
Ssa_name: numeratorC_1, name: numeratorC

Name: numeratorC Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: numeratorB_1, name: numeratorB

Name: numeratorB Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: numeratorA_1, name: numeratorA

Name: numeratorA Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numeratorA, Num: 1
Globalname: numeratorA, contract_name: VaderMath
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numerator, Num: 1
Globalname: numerator, contract_name: VaderMath
End popogation
TMP_42(uint256) = numeratorC_1 (c)- numeratorA_1
Source address: u
[i]Type for TMP_42

Name: TMP_42 Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_43(uint256) = TMP_42 (c)- numeratorB_1
[i]Type for TMP_43

Name: TMP_43 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
numerator_1(uint256) := TMP_43(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for numerator

Name: numerator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] denominator cleared
Propogating parameters and globals to SSA variables...
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: denominator, Num: 1
Globalname: denominator, contract_name: VaderMath
End popogation
denominator_1(uint256) := y2_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for denominator

Name: denominator Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] TMP_44 cleared
[i] amountIn cleared
Propogating parameters and globals to SSA variables...
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numerator, Num: 1
Globalname: numerator, contract_name: VaderMath
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numerator, Num: 1
Globalname: numerator, contract_name: VaderMath
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: amountIn, Num: 1
Globalname: amountIn, contract_name: VaderMath
End popogation
TMP_44(uint256) = numerator_1 (c)/ denominator_1
lnorm: u rnorm: 0
lnorm: u rnorm: 0
[i]Type for TMP_44

Name: TMP_44 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
amountIn_1(uint256) := TMP_44(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for amountIn

Name: amountIn Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
End popogation
RETURN amountIn_1
RETURN

Name: amountIn Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_31 cleared
[i] XY cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: XY, Num: 1
Globalname: XY, contract_name: VaderMath
End popogation
TMP_31(uint256) = reserveIn_1 (c)* reserveOut_1
lnorm: 18 rnorm: 6
Source address: u
Source address: u
Source address: u
[i]Type for TMP_31

Name: TMP_31 Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
XY_1(uint256) := TMP_31(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for XY

Name: XY Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_32 cleared
[i] y2 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountOut_1, name: amountOut

Name: amountOut_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountOut_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountOut, Num: 1
Globalname: amountOut, contract_name: VaderMath
Ssa_name: amountOut_1, name: amountOut

Name: amountOut_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountOut_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountOut, Num: 1
Globalname: amountOut, contract_name: VaderMath
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: y2, Num: 1
Globalname: y2, contract_name: VaderMath
End popogation
TMP_32(uint256) = amountOut_1 (c)* 2
lnorm: u rnorm: 0
Source address: u
[i]Type for TMP_32

Name: TMP_32 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
y2_1(uint256) := TMP_32(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] TMP_33 cleared
[i] y4 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: y4, Num: 1
Globalname: y4, contract_name: VaderMath
End popogation
TMP_33(uint256) = y2_1 (c)* 2
lnorm: 0 rnorm: 0
Source address: u
[i]Type for TMP_33

Name: TMP_33 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
y4_1(uint256) := TMP_33(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
[i] TMP_34 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
End popogation
TMP_34(bool) = y4_1 < reserveOut_1
lnorm: 0 rnorm: 6
[i]Type for TMP_34

Name: TMP_34 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_35(None) = SOLIDITY_CALL require(bool,string)(TMP_34,VaderMath::calculateSwapReverse: Desired Output Exceeds Maximum Output Possible (1/4 of Liquidity Pool))
[i]Type for TMP_35

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_36 cleared
[i] TMP_37 cleared
[i] TMP_38 cleared
[i] TMP_39 cleared
[i] TMP_40 cleared
[i] numeratorA cleared
Propogating parameters and globals to SSA variables...
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: numeratorA_1, name: numeratorA

Name: numeratorA Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numeratorA, Num: 1
Globalname: numeratorA, contract_name: VaderMath
End popogation
TMP_36(uint256) = INTERNAL_CALL, VaderMath.root(uint256)(XY_1)
New param cache [[[9, 10], [-1], 24, None, [], -1, 'u', 'u']]
Old param cache: [[[], [], 'u', None, [], -1, 'u']]
[[9, 10], [-1], 24, None, [], -1, 'u', 'u']

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
root(uint256)
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
Propogating All
c_2
Ssa_name: c_2, name: c

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Propogating All
Propogating All
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_38', 'XY_1'])
Phi
[i]Type for a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_49 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_49(bool) = a_1 > 3
lnorm: 24 rnorm: 0
[i]Type for TMP_49

Name: TMP_49 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_56 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_56(bool) = a_1 != 0
[i]Type for TMP_56

Name: TMP_56 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_4, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: c, Num: 4
Globalname: c, contract_name: VaderMath
End popogation
c_4(uint256) := 1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: c_1, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 1
Globalname: c, contract_name: VaderMath
End popogation
c_1(uint256) := a_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_50 cleared
[i] TMP_51 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: VaderMath
End popogation
TMP_50(uint256) = a_1 (c)/ 2
lnorm: 24 rnorm: 0
Source address: u
lnorm: 24 rnorm: 0
10
9
-1
[i]Type for TMP_50

Name: TMP_50 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_51(uint256) = TMP_50 (c)+ 1
Source address: u
[i]Type for TMP_51

Name: TMP_51 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_51(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
[i] x cleared
[i] TMP_52 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
End popogation
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
c_2(uint256) := ϕ(['c_1', 'c_3'])
Phi

Name: c Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for c

Name: c Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
x_2(uint256) := ϕ(['x_3', 'x_1'])
Phi

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_52(bool) = x_2 < c_2
lnorm: 0 rnorm: 24
[i]Type for TMP_52

Name: TMP_52 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: c_3, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: c, Num: 3
Globalname: c, contract_name: VaderMath
End popogation
c_3(uint256) := x_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] TMP_53 cleared
[i] TMP_54 cleared
[i] TMP_55 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: x_3, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 3
Globalname: x, contract_name: VaderMath
End popogation
TMP_53(uint256) = a_1 (c)/ x_2
lnorm: 24 rnorm: 0
Source address: u
Source address: u
lnorm: 24 rnorm: 0
Source address: u
10
-1
[i]Type for TMP_53

Name: TMP_53 Function: root
Num: 10
Den: -1
Address: u
Norm: 24
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_54(uint256) = TMP_53 (c)+ x_2
9
[i]Type for TMP_54

Name: TMP_54 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_55(uint256) = TMP_54 (c)/ 2
lnorm: u rnorm: 0
lnorm: u rnorm: 0
[i]Type for TMP_55

Name: TMP_55 Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
x_3(uint256) := TMP_55(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_38', 'XY_1'])
Phi
[i]Type for a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_49 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_49(bool) = a_1 > 3
lnorm: 24 rnorm: 0
[i]Type for TMP_49

Name: TMP_49 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_56 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_56(bool) = a_1 != 0
[i]Type for TMP_56

Name: TMP_56 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_4, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: c, Num: 4
Globalname: c, contract_name: VaderMath
End popogation
c_4(uint256) := 1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: c_1, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 1
Globalname: c, contract_name: VaderMath
End popogation
c_1(uint256) := a_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_50 cleared
[i] TMP_51 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: VaderMath
End popogation
TMP_50(uint256) = a_1 (c)/ 2
lnorm: 24 rnorm: 0
Source address: u
lnorm: 24 rnorm: 0
10
9
-1
[i]Type for TMP_50

Name: TMP_50 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_51(uint256) = TMP_50 (c)+ 1
Source address: u
[i]Type for TMP_51

Name: TMP_51 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_51(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
[i] x cleared
[i] TMP_52 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
End popogation
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
c_2(uint256) := ϕ(['c_1', 'c_3'])
Phi

Name: c Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for c

Name: c Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
x_2(uint256) := ϕ(['x_3', 'x_1'])
Phi

Name: x Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for x

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
TMP_52(bool) = x_2 < c_2
lnorm: 0 rnorm: 24
10
9
-1
[i]Type for TMP_52

Name: TMP_52 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: c_3, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: c, Num: 3
Globalname: c, contract_name: VaderMath
End popogation
c_3(uint256) := x_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
[i] TMP_53 cleared
[i] TMP_54 cleared
[i] TMP_55 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: x_3, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 3
Globalname: x, contract_name: VaderMath
End popogation
TMP_53(uint256) = a_1 (c)/ x_2
lnorm: 24 rnorm: 0
Source address: u
Source address: u
lnorm: 24 rnorm: 0
Source address: u
Source address: u
[i]Type for TMP_53

Name: TMP_53 Function: root
Num: -1
Den: -1
Address: u
Norm: 24
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
TMP_54(uint256) = TMP_53 (c)+ x_2
Source address: u
[i]Type for TMP_54

Name: TMP_54 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
XXXX
TMP_55(uint256) = TMP_54 (c)/ 2
lnorm: 0 rnorm: 0
Source address: u
lnorm: 0 rnorm: 0
10
9
-1
[i]Type for TMP_55

Name: TMP_55 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
x_3(uint256) := TMP_55(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_36

Name: TMP_36 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_37(uint256) = reserveOut_1 (c)- y4_1
Source address: u
[i]Type for TMP_37

Name: TMP_37 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
TMP_38(uint256) = reserveIn_1 (c)* TMP_37
lnorm: 18 rnorm: 0
Source address: u
[i]Type for TMP_38

Name: TMP_38 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
TMP_39(uint256) = INTERNAL_CALL, VaderMath.root(uint256)(TMP_38)
New param cache [[[9], [-1], 18, None, [], -1, 'u', 4]]
Old param cache: [[[], [], 'u', None, [], -1, 'u']]
[[9], [-1], 18, None, [], -1, 'u', 4]

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
root(uint256)
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
Propogating All
c_2
Ssa_name: c_2, name: c

Name: c Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Propogating All
Propogating All
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_38', 'XY_1'])
Phi
[i]Type for a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
[i] TMP_49 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
End popogation
TMP_49(bool) = a_1 > 3
lnorm: 18 rnorm: 0
[i]Type for TMP_49

Name: TMP_49 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_56 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
End popogation
TMP_56(bool) = a_1 != 0
[i]Type for TMP_56

Name: TMP_56 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_4, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: c, Num: 4
Globalname: c, contract_name: VaderMath
End popogation
c_4(uint256) := 1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: c_1, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 1
Globalname: c, contract_name: VaderMath
End popogation
c_1(uint256) := a_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_50 cleared
[i] TMP_51 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: VaderMath
End popogation
TMP_50(uint256) = a_1 (c)/ 2
lnorm: 18 rnorm: 0
Source address: u
lnorm: 18 rnorm: 0
9
-1
[i]Type for TMP_50

Name: TMP_50 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_51(uint256) = TMP_50 (c)+ 1
Source address: u
[i]Type for TMP_51

Name: TMP_51 Function: root
Num: 9
Den: -1
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_51(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
[i] x cleared
[i] TMP_52 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
End popogation
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
c_2(uint256) := ϕ(['c_1', 'c_3'])
Phi

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef

Name: c Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for c

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
x_2(uint256) := ϕ(['x_3', 'x_1'])
Phi

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for x

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
TMP_52(bool) = x_2 < c_2
lnorm: 0 rnorm: 18
[i]Type for TMP_52

Name: TMP_52 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: c_3, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: c, Num: 3
Globalname: c, contract_name: VaderMath
End popogation
c_3(uint256) := x_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
[i] TMP_53 cleared
[i] TMP_54 cleared
[i] TMP_55 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: x_3, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 3
Globalname: x, contract_name: VaderMath
End popogation
TMP_53(uint256) = a_1 (c)/ x_2
lnorm: 18 rnorm: 0
Source address: u
Source address: u
lnorm: 18 rnorm: 0
Source address: u
-1
10
[i]Type for TMP_53

Name: TMP_53 Function: root
Num: -1
Den: 10
Address: u
Norm: 18
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
TMP_54(uint256) = TMP_53 (c)+ x_2
[i]Type for TMP_54

Name: TMP_54 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_55(uint256) = TMP_54 (c)/ 2
lnorm: u rnorm: 0
lnorm: u rnorm: 0
[i]Type for TMP_55

Name: TMP_55 Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
x_3(uint256) := TMP_55(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_38', 'XY_1'])
Phi
[i]Type for a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
[i] TMP_49 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
End popogation
TMP_49(bool) = a_1 > 3
lnorm: 18 rnorm: 0
[i]Type for TMP_49

Name: TMP_49 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_56 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
End popogation
TMP_56(bool) = a_1 != 0
[i]Type for TMP_56

Name: TMP_56 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_4, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: c, Num: 4
Globalname: c, contract_name: VaderMath
End popogation
c_4(uint256) := 1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: c_1, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 1
Globalname: c, contract_name: VaderMath
End popogation
c_1(uint256) := a_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_50 cleared
[i] TMP_51 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: VaderMath
End popogation
TMP_50(uint256) = a_1 (c)/ 2
lnorm: 18 rnorm: 0
Source address: u
lnorm: 18 rnorm: 0
9
-1
[i]Type for TMP_50

Name: TMP_50 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_51(uint256) = TMP_50 (c)+ 1
Source address: u
[i]Type for TMP_51

Name: TMP_51 Function: root
Num: 9
Den: -1
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_51(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
[i] x cleared
[i] TMP_52 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
End popogation
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
c_2(uint256) := ϕ(['c_1', 'c_3'])
Phi

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef

Name: c Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for c

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
x_2(uint256) := ϕ(['x_3', 'x_1'])
Phi

Name: x Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
TMP_52(bool) = x_2 < c_2
lnorm: 0 rnorm: 18
9
-1
[i]Type for TMP_52

Name: TMP_52 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: c_3, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: c, Num: 3
Globalname: c, contract_name: VaderMath
End popogation
c_3(uint256) := x_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
[i] TMP_53 cleared
[i] TMP_54 cleared
[i] TMP_55 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: x_3, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 3
Globalname: x, contract_name: VaderMath
End popogation
TMP_53(uint256) = a_1 (c)/ x_2
lnorm: 18 rnorm: 0
Source address: u
Source address: u
lnorm: 18 rnorm: 0
Source address: u
Source address: u
[i]Type for TMP_53

Name: TMP_53 Function: root
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
TMP_54(uint256) = TMP_53 (c)+ x_2
Source address: u
[i]Type for TMP_54

Name: TMP_54 Function: root
Num: 9
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
TMP_55(uint256) = TMP_54 (c)/ 2
lnorm: 0 rnorm: 0
Source address: u
lnorm: 0 rnorm: 0
9
-1
[i]Type for TMP_55

Name: TMP_55 Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
x_3(uint256) := TMP_55(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_39

Name: TMP_39 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_40(uint256) = TMP_36 (c)* TMP_39
lnorm: u rnorm: u
[i]Type for TMP_40

Name: TMP_40 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
numeratorA_1(uint256) := TMP_40(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for numeratorA

Name: numeratorA Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_41 cleared
[i] numeratorB cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: numeratorB_1, name: numeratorB

Name: numeratorB Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: numeratorB, Num: 1
Globalname: numeratorB, contract_name: VaderMath
End popogation
TMP_41(uint256) = y2_1 (c)* reserveIn_1
lnorm: 0 rnorm: 18
Source address: u
[i]Type for TMP_41

Name: TMP_41 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
numeratorB_1(uint256) := TMP_41(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for numeratorB

Name: numeratorB Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] numeratorC cleared
Propogating parameters and globals to SSA variables...
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: numeratorC_1, name: numeratorC

Name: numeratorC Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numeratorC, Num: 1
Globalname: numeratorC, contract_name: VaderMath
End popogation
numeratorC_1(uint256) := XY_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for numeratorC

Name: numeratorC Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_42 cleared
[i] TMP_43 cleared
[i] numerator cleared
Propogating parameters and globals to SSA variables...
Ssa_name: numeratorC_1, name: numeratorC

Name: numeratorC Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: numeratorB_1, name: numeratorB

Name: numeratorB Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: numeratorA_1, name: numeratorA

Name: numeratorA Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numeratorA, Num: 1
Globalname: numeratorA, contract_name: VaderMath
Ssa_name: numeratorC_1, name: numeratorC

Name: numeratorC Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: numeratorB_1, name: numeratorB

Name: numeratorB Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: numeratorA_1, name: numeratorA

Name: numeratorA Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numeratorA, Num: 1
Globalname: numeratorA, contract_name: VaderMath
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numerator, Num: 1
Globalname: numerator, contract_name: VaderMath
End popogation
TMP_42(uint256) = numeratorC_1 (c)- numeratorA_1
Source address: u
[i]Type for TMP_42

Name: TMP_42 Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_43(uint256) = TMP_42 (c)- numeratorB_1
[i]Type for TMP_43

Name: TMP_43 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
numerator_1(uint256) := TMP_43(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for numerator

Name: numerator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] denominator cleared
Propogating parameters and globals to SSA variables...
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: denominator, Num: 1
Globalname: denominator, contract_name: VaderMath
End popogation
denominator_1(uint256) := y2_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for denominator

Name: denominator Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] TMP_44 cleared
[i] amountIn cleared
Propogating parameters and globals to SSA variables...
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numerator, Num: 1
Globalname: numerator, contract_name: VaderMath
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numerator, Num: 1
Globalname: numerator, contract_name: VaderMath
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: amountIn, Num: 1
Globalname: amountIn, contract_name: VaderMath
End popogation
TMP_44(uint256) = numerator_1 (c)/ denominator_1
lnorm: u rnorm: 0
lnorm: u rnorm: 0
[i]Type for TMP_44

Name: TMP_44 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
amountIn_1(uint256) := TMP_44(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for amountIn

Name: amountIn Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
End popogation
RETURN amountIn_1
RETURN

Name: amountIn Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Source address: u
Source address: u
[i]Type for TMP_89

Name: TMP_89 Function: calculateInGivenOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
RETURN TMP_89
RETURN

Name: TMP_89 Function: calculateInGivenOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
[i] TMP_90 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: foreignReserve_1, name: foreignReserve

Name: foreignReserve Function: calculateInGivenOut
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amountOut_1, name: amountOut

Name: amountOut_1 Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountOut_1 Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountOut, Num: 1
Globalname: amountOut, contract_name: VaderRouter
Ssa_name: nativeReserve_1, name: nativeReserve

Name: nativeReserve Function: calculateInGivenOut
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: foreignReserve_1, name: foreignReserve

Name: foreignReserve Function: calculateInGivenOut
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amountOut_1, name: amountOut

Name: amountOut_1 Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountOut_1 Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountOut, Num: 1
Globalname: amountOut, contract_name: VaderRouter
Ssa_name: nativeReserve_1, name: nativeReserve

Name: nativeReserve Function: calculateInGivenOut
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
End popogation
TMP_90(uint256) = LIBRARY_CALL, dest:VaderMath, function:VaderMath.calculateSwapReverse(uint256,uint256,uint256), arguments:['amountOut_1', 'foreignReserve_1', 'nativeReserve_1'] 
Found: calculateSwapReverse

Name: amountOut_1 Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: foreignReserve Function: calculateInGivenOut
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: nativeReserve Function: calculateInGivenOut
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
High level cal param_cache
Param: 0
    num: []
    den: []
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [10]
    den: [-1]
    norm: 6
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [9]
    den: [-1]
    norm: 18
    link: None
    fields: []
    fintype: -1
New param cache [[[], [], 'u', None, [], -1, 'u', 'u'], [[10], [-1], 6, None, [], -1, 'u', "'u'"], [[9], [-1], 18, None, [], -1, 'u', "'u'"]]
Old param cache: [[[-1], [-1], 'u', None, [], -1, 'u'], [[-1], [-1], 'u', None, [], -1, 'u'], [[-1], [-1], 'u', None, [], -1, 'u']]
[[], [], 'u', None, [], -1, 'u', 'u']

Name: amountOut Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[10], [-1], 6, None, [], -1, 'u', "'u'"]

Name: reserveIn Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
[[9], [-1], 18, None, [], -1, 'u', "'u'"]

Name: reserveOut Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
calculateSwapReverse(uint256,uint256,uint256)
Propogating All
Propogating All
reserveOut_1
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: reserveOut_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
reserveIn_1
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: reserveIn_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
Propogating All
amountOut_1
Ssa_name: amountOut_1, name: amountOut

Name: amountOut_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountOut_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
y2_1
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Propogating All
reserveOut_1
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: reserveOut_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
y4_1
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Propogating All
y4_1
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
reserveOut_1
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: reserveOut_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
reserveIn_1
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: reserveIn_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
XY_1
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
reserveIn_1
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: reserveIn_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
y2_1
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Propogating All
XY_1
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
numeratorC_1
Ssa_name: numeratorC_1, name: numeratorC

Name: numeratorC Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
numeratorB_1
Ssa_name: numeratorB_1, name: numeratorB

Name: numeratorB Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 2
Fields: 
Finance Type: undef
numeratorA_1
Ssa_name: numeratorA_1, name: numeratorA

Name: numeratorA Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
y2_1
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Propogating All
numerator_1
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
denominator_1
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Propogating All
amountIn_1
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_31 cleared
[i] XY cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: XY, Num: 1
Globalname: XY, contract_name: VaderMath
End popogation
TMP_31(uint256) = reserveIn_1 (c)* reserveOut_1
lnorm: 6 rnorm: 18
Source address: u
Source address: u
Source address: u
[i]Type for TMP_31

Name: TMP_31 Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
XY_1(uint256) := TMP_31(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for XY

Name: XY Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_32 cleared
[i] y2 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountOut_1, name: amountOut

Name: amountOut_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountOut_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountOut, Num: 1
Globalname: amountOut, contract_name: VaderMath
Ssa_name: amountOut_1, name: amountOut

Name: amountOut_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountOut_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountOut, Num: 1
Globalname: amountOut, contract_name: VaderMath
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: y2, Num: 1
Globalname: y2, contract_name: VaderMath
End popogation
TMP_32(uint256) = amountOut_1 (c)* 2
lnorm: u rnorm: 0
Source address: u
[i]Type for TMP_32

Name: TMP_32 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
y2_1(uint256) := TMP_32(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] TMP_33 cleared
[i] y4 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: y4, Num: 1
Globalname: y4, contract_name: VaderMath
End popogation
TMP_33(uint256) = y2_1 (c)* 2
lnorm: 0 rnorm: 0
Source address: u
[i]Type for TMP_33

Name: TMP_33 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
y4_1(uint256) := TMP_33(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
[i] TMP_34 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
End popogation
TMP_34(bool) = y4_1 < reserveOut_1
lnorm: 0 rnorm: 18
[i]Type for TMP_34

Name: TMP_34 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_35(None) = SOLIDITY_CALL require(bool,string)(TMP_34,VaderMath::calculateSwapReverse: Desired Output Exceeds Maximum Output Possible (1/4 of Liquidity Pool))
[i]Type for TMP_35

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_36 cleared
[i] TMP_37 cleared
[i] TMP_38 cleared
[i] TMP_39 cleared
[i] TMP_40 cleared
[i] numeratorA cleared
Propogating parameters and globals to SSA variables...
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: numeratorA_1, name: numeratorA

Name: numeratorA Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numeratorA, Num: 1
Globalname: numeratorA, contract_name: VaderMath
End popogation
TMP_36(uint256) = INTERNAL_CALL, VaderMath.root(uint256)(XY_1)
New param cache [[[10, 9], [-1], 24, None, [], -1, 'u', 'u']]
Old param cache: [[[], [], 'u', None, [], -1, 'u']]
[[10, 9], [-1], 24, None, [], -1, 'u', 'u']

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
root(uint256)
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
Propogating All
c_2
Ssa_name: c_2, name: c

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Propogating All
Propogating All
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_38', 'XY_1'])
Phi
[i]Type for a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_49 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_49(bool) = a_1 > 3
lnorm: 24 rnorm: 0
[i]Type for TMP_49

Name: TMP_49 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_56 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_56(bool) = a_1 != 0
[i]Type for TMP_56

Name: TMP_56 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_4, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: c, Num: 4
Globalname: c, contract_name: VaderMath
End popogation
c_4(uint256) := 1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: c_1, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 1
Globalname: c, contract_name: VaderMath
End popogation
c_1(uint256) := a_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_50 cleared
[i] TMP_51 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: VaderMath
End popogation
TMP_50(uint256) = a_1 (c)/ 2
lnorm: 24 rnorm: 0
Source address: u
lnorm: 24 rnorm: 0
10
9
-1
[i]Type for TMP_50

Name: TMP_50 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_51(uint256) = TMP_50 (c)+ 1
Source address: u
[i]Type for TMP_51

Name: TMP_51 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_51(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
[i] x cleared
[i] TMP_52 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
End popogation
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
c_2(uint256) := ϕ(['c_1', 'c_3'])
Phi

Name: c Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for c

Name: c Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
x_2(uint256) := ϕ(['x_3', 'x_1'])
Phi

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_52(bool) = x_2 < c_2
lnorm: 0 rnorm: 24
[i]Type for TMP_52

Name: TMP_52 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: c_3, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: c, Num: 3
Globalname: c, contract_name: VaderMath
End popogation
c_3(uint256) := x_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] TMP_53 cleared
[i] TMP_54 cleared
[i] TMP_55 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: x_3, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 3
Globalname: x, contract_name: VaderMath
End popogation
TMP_53(uint256) = a_1 (c)/ x_2
lnorm: 24 rnorm: 0
Source address: u
Source address: u
lnorm: 24 rnorm: 0
Source address: u
10
-1
[i]Type for TMP_53

Name: TMP_53 Function: root
Num: 10
Den: -1
Address: u
Norm: 24
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_54(uint256) = TMP_53 (c)+ x_2
9
[i]Type for TMP_54

Name: TMP_54 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_55(uint256) = TMP_54 (c)/ 2
lnorm: u rnorm: 0
lnorm: u rnorm: 0
[i]Type for TMP_55

Name: TMP_55 Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
x_3(uint256) := TMP_55(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_38', 'XY_1'])
Phi
[i]Type for a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_49 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_49(bool) = a_1 > 3
lnorm: 24 rnorm: 0
[i]Type for TMP_49

Name: TMP_49 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_56 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_56(bool) = a_1 != 0
[i]Type for TMP_56

Name: TMP_56 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_4, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: c, Num: 4
Globalname: c, contract_name: VaderMath
End popogation
c_4(uint256) := 1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: c_1, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 1
Globalname: c, contract_name: VaderMath
End popogation
c_1(uint256) := a_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_50 cleared
[i] TMP_51 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: VaderMath
End popogation
TMP_50(uint256) = a_1 (c)/ 2
lnorm: 24 rnorm: 0
Source address: u
lnorm: 24 rnorm: 0
10
9
-1
[i]Type for TMP_50

Name: TMP_50 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_51(uint256) = TMP_50 (c)+ 1
Source address: u
[i]Type for TMP_51

Name: TMP_51 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_51(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
[i] x cleared
[i] TMP_52 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
End popogation
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
c_2(uint256) := ϕ(['c_1', 'c_3'])
Phi

Name: c Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for c

Name: c Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
x_2(uint256) := ϕ(['x_3', 'x_1'])
Phi

Name: x Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for x

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
TMP_52(bool) = x_2 < c_2
lnorm: 0 rnorm: 24
10
9
-1
[i]Type for TMP_52

Name: TMP_52 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: c_3, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: c, Num: 3
Globalname: c, contract_name: VaderMath
End popogation
c_3(uint256) := x_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
[i] TMP_53 cleared
[i] TMP_54 cleared
[i] TMP_55 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: x_3, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 3
Globalname: x, contract_name: VaderMath
End popogation
TMP_53(uint256) = a_1 (c)/ x_2
lnorm: 24 rnorm: 0
Source address: u
Source address: u
lnorm: 24 rnorm: 0
Source address: u
Source address: u
[i]Type for TMP_53

Name: TMP_53 Function: root
Num: -1
Den: -1
Address: u
Norm: 24
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
TMP_54(uint256) = TMP_53 (c)+ x_2
Source address: u
[i]Type for TMP_54

Name: TMP_54 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
XXXX
TMP_55(uint256) = TMP_54 (c)/ 2
lnorm: 0 rnorm: 0
Source address: u
lnorm: 0 rnorm: 0
10
9
-1
[i]Type for TMP_55

Name: TMP_55 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
x_3(uint256) := TMP_55(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_36

Name: TMP_36 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_37(uint256) = reserveOut_1 (c)- y4_1
Source address: u
[i]Type for TMP_37

Name: TMP_37 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
TMP_38(uint256) = reserveIn_1 (c)* TMP_37
lnorm: 6 rnorm: 0
Source address: u
[i]Type for TMP_38

Name: TMP_38 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
TMP_39(uint256) = INTERNAL_CALL, VaderMath.root(uint256)(TMP_38)
New param cache [[[10], [-1], 6, None, [], -1, 'u', 4]]
Old param cache: [[[], [], 'u', None, [], -1, 'u']]
[[10], [-1], 6, None, [], -1, 'u', 4]

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
root(uint256)
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
Propogating All
c_2
Ssa_name: c_2, name: c

Name: c Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Propogating All
Propogating All
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_38', 'XY_1'])
Phi
[i]Type for a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
[i] TMP_49 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
End popogation
TMP_49(bool) = a_1 > 3
lnorm: 6 rnorm: 0
[i]Type for TMP_49

Name: TMP_49 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_56 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
End popogation
TMP_56(bool) = a_1 != 0
[i]Type for TMP_56

Name: TMP_56 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_4, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: c, Num: 4
Globalname: c, contract_name: VaderMath
End popogation
c_4(uint256) := 1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: c_1, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 1
Globalname: c, contract_name: VaderMath
End popogation
c_1(uint256) := a_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_50 cleared
[i] TMP_51 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: VaderMath
End popogation
TMP_50(uint256) = a_1 (c)/ 2
lnorm: 6 rnorm: 0
Source address: u
lnorm: 6 rnorm: 0
10
-1
[i]Type for TMP_50

Name: TMP_50 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_51(uint256) = TMP_50 (c)+ 1
Source address: u
[i]Type for TMP_51

Name: TMP_51 Function: root
Num: 10
Den: -1
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_51(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
[i] x cleared
[i] TMP_52 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
End popogation
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
c_2(uint256) := ϕ(['c_1', 'c_3'])
Phi

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef

Name: c Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for c

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
x_2(uint256) := ϕ(['x_3', 'x_1'])
Phi

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for x

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
TMP_52(bool) = x_2 < c_2
lnorm: 0 rnorm: 6
[i]Type for TMP_52

Name: TMP_52 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: c_3, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: c, Num: 3
Globalname: c, contract_name: VaderMath
End popogation
c_3(uint256) := x_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
[i] TMP_53 cleared
[i] TMP_54 cleared
[i] TMP_55 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: x_3, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 3
Globalname: x, contract_name: VaderMath
End popogation
TMP_53(uint256) = a_1 (c)/ x_2
lnorm: 6 rnorm: 0
Source address: u
Source address: u
lnorm: 6 rnorm: 0
Source address: u
-1
9
[i]Type for TMP_53

Name: TMP_53 Function: root
Num: -1
Den: 9
Address: u
Norm: 6
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
TMP_54(uint256) = TMP_53 (c)+ x_2
[i]Type for TMP_54

Name: TMP_54 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_55(uint256) = TMP_54 (c)/ 2
lnorm: u rnorm: 0
lnorm: u rnorm: 0
[i]Type for TMP_55

Name: TMP_55 Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
x_3(uint256) := TMP_55(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_38', 'XY_1'])
Phi
[i]Type for a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
[i] TMP_49 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
End popogation
TMP_49(bool) = a_1 > 3
lnorm: 6 rnorm: 0
[i]Type for TMP_49

Name: TMP_49 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_56 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
End popogation
TMP_56(bool) = a_1 != 0
[i]Type for TMP_56

Name: TMP_56 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_4, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: c, Num: 4
Globalname: c, contract_name: VaderMath
End popogation
c_4(uint256) := 1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: c_1, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 1
Globalname: c, contract_name: VaderMath
End popogation
c_1(uint256) := a_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_50 cleared
[i] TMP_51 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: VaderMath
End popogation
TMP_50(uint256) = a_1 (c)/ 2
lnorm: 6 rnorm: 0
Source address: u
lnorm: 6 rnorm: 0
10
-1
[i]Type for TMP_50

Name: TMP_50 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_51(uint256) = TMP_50 (c)+ 1
Source address: u
[i]Type for TMP_51

Name: TMP_51 Function: root
Num: 10
Den: -1
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_51(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
[i] x cleared
[i] TMP_52 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
End popogation
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
c_2(uint256) := ϕ(['c_1', 'c_3'])
Phi

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef

Name: c Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for c

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
x_2(uint256) := ϕ(['x_3', 'x_1'])
Phi

Name: x Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
TMP_52(bool) = x_2 < c_2
lnorm: 0 rnorm: 6
10
-1
[i]Type for TMP_52

Name: TMP_52 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: c_3, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: c, Num: 3
Globalname: c, contract_name: VaderMath
End popogation
c_3(uint256) := x_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
[i] TMP_53 cleared
[i] TMP_54 cleared
[i] TMP_55 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: x_3, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 3
Globalname: x, contract_name: VaderMath
End popogation
TMP_53(uint256) = a_1 (c)/ x_2
lnorm: 6 rnorm: 0
Source address: u
Source address: u
lnorm: 6 rnorm: 0
Source address: u
Source address: u
[i]Type for TMP_53

Name: TMP_53 Function: root
Num: -1
Den: -1
Address: u
Norm: 6
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
TMP_54(uint256) = TMP_53 (c)+ x_2
Source address: u
[i]Type for TMP_54

Name: TMP_54 Function: root
Num: 10
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
TMP_55(uint256) = TMP_54 (c)/ 2
lnorm: 0 rnorm: 0
Source address: u
lnorm: 0 rnorm: 0
10
-1
[i]Type for TMP_55

Name: TMP_55 Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
x_3(uint256) := TMP_55(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_39

Name: TMP_39 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_40(uint256) = TMP_36 (c)* TMP_39
lnorm: u rnorm: u
[i]Type for TMP_40

Name: TMP_40 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
numeratorA_1(uint256) := TMP_40(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for numeratorA

Name: numeratorA Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_41 cleared
[i] numeratorB cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: numeratorB_1, name: numeratorB

Name: numeratorB Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: numeratorB, Num: 1
Globalname: numeratorB, contract_name: VaderMath
End popogation
TMP_41(uint256) = y2_1 (c)* reserveIn_1
lnorm: 0 rnorm: 6
Source address: u
[i]Type for TMP_41

Name: TMP_41 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
numeratorB_1(uint256) := TMP_41(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for numeratorB

Name: numeratorB Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] numeratorC cleared
Propogating parameters and globals to SSA variables...
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: numeratorC_1, name: numeratorC

Name: numeratorC Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numeratorC, Num: 1
Globalname: numeratorC, contract_name: VaderMath
End popogation
numeratorC_1(uint256) := XY_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for numeratorC

Name: numeratorC Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_42 cleared
[i] TMP_43 cleared
[i] numerator cleared
Propogating parameters and globals to SSA variables...
Ssa_name: numeratorC_1, name: numeratorC

Name: numeratorC Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: numeratorB_1, name: numeratorB

Name: numeratorB Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: numeratorA_1, name: numeratorA

Name: numeratorA Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numeratorA, Num: 1
Globalname: numeratorA, contract_name: VaderMath
Ssa_name: numeratorC_1, name: numeratorC

Name: numeratorC Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: numeratorB_1, name: numeratorB

Name: numeratorB Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: numeratorA_1, name: numeratorA

Name: numeratorA Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numeratorA, Num: 1
Globalname: numeratorA, contract_name: VaderMath
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numerator, Num: 1
Globalname: numerator, contract_name: VaderMath
End popogation
TMP_42(uint256) = numeratorC_1 (c)- numeratorA_1
Source address: u
[i]Type for TMP_42

Name: TMP_42 Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_43(uint256) = TMP_42 (c)- numeratorB_1
[i]Type for TMP_43

Name: TMP_43 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
numerator_1(uint256) := TMP_43(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for numerator

Name: numerator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] denominator cleared
Propogating parameters and globals to SSA variables...
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: denominator, Num: 1
Globalname: denominator, contract_name: VaderMath
End popogation
denominator_1(uint256) := y2_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for denominator

Name: denominator Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] TMP_44 cleared
[i] amountIn cleared
Propogating parameters and globals to SSA variables...
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numerator, Num: 1
Globalname: numerator, contract_name: VaderMath
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numerator, Num: 1
Globalname: numerator, contract_name: VaderMath
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: amountIn, Num: 1
Globalname: amountIn, contract_name: VaderMath
End popogation
TMP_44(uint256) = numerator_1 (c)/ denominator_1
lnorm: u rnorm: 0
lnorm: u rnorm: 0
[i]Type for TMP_44

Name: TMP_44 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
amountIn_1(uint256) := TMP_44(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for amountIn

Name: amountIn Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
End popogation
RETURN amountIn_1
RETURN

Name: amountIn Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_31 cleared
[i] XY cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: XY, Num: 1
Globalname: XY, contract_name: VaderMath
End popogation
TMP_31(uint256) = reserveIn_1 (c)* reserveOut_1
lnorm: 6 rnorm: 18
Source address: u
Source address: u
Source address: u
[i]Type for TMP_31

Name: TMP_31 Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
XY_1(uint256) := TMP_31(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for XY

Name: XY Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_32 cleared
[i] y2 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountOut_1, name: amountOut

Name: amountOut_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountOut_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountOut, Num: 1
Globalname: amountOut, contract_name: VaderMath
Ssa_name: amountOut_1, name: amountOut

Name: amountOut_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountOut_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountOut, Num: 1
Globalname: amountOut, contract_name: VaderMath
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: y2, Num: 1
Globalname: y2, contract_name: VaderMath
End popogation
TMP_32(uint256) = amountOut_1 (c)* 2
lnorm: u rnorm: 0
Source address: u
[i]Type for TMP_32

Name: TMP_32 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
y2_1(uint256) := TMP_32(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] TMP_33 cleared
[i] y4 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: y4, Num: 1
Globalname: y4, contract_name: VaderMath
End popogation
TMP_33(uint256) = y2_1 (c)* 2
lnorm: 0 rnorm: 0
Source address: u
[i]Type for TMP_33

Name: TMP_33 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
y4_1(uint256) := TMP_33(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
[i] TMP_34 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
End popogation
TMP_34(bool) = y4_1 < reserveOut_1
lnorm: 0 rnorm: 18
[i]Type for TMP_34

Name: TMP_34 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_35(None) = SOLIDITY_CALL require(bool,string)(TMP_34,VaderMath::calculateSwapReverse: Desired Output Exceeds Maximum Output Possible (1/4 of Liquidity Pool))
[i]Type for TMP_35

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_36 cleared
[i] TMP_37 cleared
[i] TMP_38 cleared
[i] TMP_39 cleared
[i] TMP_40 cleared
[i] numeratorA cleared
Propogating parameters and globals to SSA variables...
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: numeratorA_1, name: numeratorA

Name: numeratorA Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numeratorA, Num: 1
Globalname: numeratorA, contract_name: VaderMath
End popogation
TMP_36(uint256) = INTERNAL_CALL, VaderMath.root(uint256)(XY_1)
New param cache [[[10, 9], [-1], 24, None, [], -1, 'u', 'u']]
Old param cache: [[[], [], 'u', None, [], -1, 'u']]
[[10, 9], [-1], 24, None, [], -1, 'u', 'u']

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
root(uint256)
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
Propogating All
c_2
Ssa_name: c_2, name: c

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Propogating All
Propogating All
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_38', 'XY_1'])
Phi
[i]Type for a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_49 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_49(bool) = a_1 > 3
lnorm: 24 rnorm: 0
[i]Type for TMP_49

Name: TMP_49 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_56 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_56(bool) = a_1 != 0
[i]Type for TMP_56

Name: TMP_56 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_4, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: c, Num: 4
Globalname: c, contract_name: VaderMath
End popogation
c_4(uint256) := 1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: c_1, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 1
Globalname: c, contract_name: VaderMath
End popogation
c_1(uint256) := a_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_50 cleared
[i] TMP_51 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: VaderMath
End popogation
TMP_50(uint256) = a_1 (c)/ 2
lnorm: 24 rnorm: 0
Source address: u
lnorm: 24 rnorm: 0
10
9
-1
[i]Type for TMP_50

Name: TMP_50 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_51(uint256) = TMP_50 (c)+ 1
Source address: u
[i]Type for TMP_51

Name: TMP_51 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_51(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
[i] x cleared
[i] TMP_52 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
End popogation
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
c_2(uint256) := ϕ(['c_1', 'c_3'])
Phi

Name: c Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for c

Name: c Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
x_2(uint256) := ϕ(['x_3', 'x_1'])
Phi

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_52(bool) = x_2 < c_2
lnorm: 0 rnorm: 24
[i]Type for TMP_52

Name: TMP_52 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: c_3, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: c, Num: 3
Globalname: c, contract_name: VaderMath
End popogation
c_3(uint256) := x_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] TMP_53 cleared
[i] TMP_54 cleared
[i] TMP_55 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: x_3, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 3
Globalname: x, contract_name: VaderMath
End popogation
TMP_53(uint256) = a_1 (c)/ x_2
lnorm: 24 rnorm: 0
Source address: u
Source address: u
lnorm: 24 rnorm: 0
Source address: u
9
-1
[i]Type for TMP_53

Name: TMP_53 Function: root
Num: 9
Den: -1
Address: u
Norm: 24
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_54(uint256) = TMP_53 (c)+ x_2
10
10
-1
lnorm: 24 rnorm: 0
Source address: u
[i]Type for TMP_54

Name: TMP_54 Function: root
Num: 10
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
TMP_55(uint256) = TMP_54 (c)/ 2
lnorm: 0 rnorm: 0
Source address: u
lnorm: 0 rnorm: 0
10
-1
[i]Type for TMP_55

Name: TMP_55 Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
x_3(uint256) := TMP_55(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_38', 'XY_1'])
Phi
[i]Type for a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_49 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_49(bool) = a_1 > 3
lnorm: 24 rnorm: 0
[i]Type for TMP_49

Name: TMP_49 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_56 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_56(bool) = a_1 != 0
[i]Type for TMP_56

Name: TMP_56 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_4, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: c, Num: 4
Globalname: c, contract_name: VaderMath
End popogation
c_4(uint256) := 1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: c_1, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 1
Globalname: c, contract_name: VaderMath
End popogation
c_1(uint256) := a_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_50 cleared
[i] TMP_51 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: VaderMath
End popogation
TMP_50(uint256) = a_1 (c)/ 2
lnorm: 24 rnorm: 0
Source address: u
lnorm: 24 rnorm: 0
10
9
-1
[i]Type for TMP_50

Name: TMP_50 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_51(uint256) = TMP_50 (c)+ 1
Source address: u
[i]Type for TMP_51

Name: TMP_51 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_51(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
[i] x cleared
[i] TMP_52 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
End popogation
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
c_2(uint256) := ϕ(['c_1', 'c_3'])
Phi

Name: c Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for c

Name: c Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
x_2(uint256) := ϕ(['x_3', 'x_1'])
Phi

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_52(bool) = x_2 < c_2
lnorm: 0 rnorm: 24
[i]Type for TMP_52

Name: TMP_52 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: c_3, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: c, Num: 3
Globalname: c, contract_name: VaderMath
End popogation
c_3(uint256) := x_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] TMP_53 cleared
[i] TMP_54 cleared
[i] TMP_55 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: x_3, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 3
Globalname: x, contract_name: VaderMath
End popogation
TMP_53(uint256) = a_1 (c)/ x_2
lnorm: 24 rnorm: 0
Source address: u
Source address: u
lnorm: 24 rnorm: 0
Source address: u
9
-1
[i]Type for TMP_53

Name: TMP_53 Function: root
Num: 9
Den: -1
Address: u
Norm: 24
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_54(uint256) = TMP_53 (c)+ x_2
10
10
-1
lnorm: 24 rnorm: 0
Source address: u
[i]Type for TMP_54

Name: TMP_54 Function: root
Num: 10
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
TMP_55(uint256) = TMP_54 (c)/ 2
lnorm: 0 rnorm: 0
Source address: u
lnorm: 0 rnorm: 0
10
-1
[i]Type for TMP_55

Name: TMP_55 Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
x_3(uint256) := TMP_55(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_36

Name: TMP_36 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_37(uint256) = reserveOut_1 (c)- y4_1
Source address: u
[i]Type for TMP_37

Name: TMP_37 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
TMP_38(uint256) = reserveIn_1 (c)* TMP_37
lnorm: 6 rnorm: 0
Source address: u
[i]Type for TMP_38

Name: TMP_38 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
TMP_39(uint256) = INTERNAL_CALL, VaderMath.root(uint256)(TMP_38)
New param cache [[[10], [-1], 6, None, [], -1, 'u', 4]]
Old param cache: [[[], [], 'u', None, [], -1, 'u']]
[[10], [-1], 6, None, [], -1, 'u', 4]

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
root(uint256)
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
Propogating All
c_2
Ssa_name: c_2, name: c

Name: c Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Propogating All
Propogating All
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_38', 'XY_1'])
Phi
[i]Type for a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
[i] TMP_49 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
End popogation
TMP_49(bool) = a_1 > 3
lnorm: 6 rnorm: 0
[i]Type for TMP_49

Name: TMP_49 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_56 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
End popogation
TMP_56(bool) = a_1 != 0
[i]Type for TMP_56

Name: TMP_56 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_4, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: c, Num: 4
Globalname: c, contract_name: VaderMath
End popogation
c_4(uint256) := 1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: c_1, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 1
Globalname: c, contract_name: VaderMath
End popogation
c_1(uint256) := a_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_50 cleared
[i] TMP_51 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: VaderMath
End popogation
TMP_50(uint256) = a_1 (c)/ 2
lnorm: 6 rnorm: 0
Source address: u
lnorm: 6 rnorm: 0
10
-1
[i]Type for TMP_50

Name: TMP_50 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_51(uint256) = TMP_50 (c)+ 1
Source address: u
[i]Type for TMP_51

Name: TMP_51 Function: root
Num: 10
Den: -1
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_51(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
[i] x cleared
[i] TMP_52 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
End popogation
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
c_2(uint256) := ϕ(['c_1', 'c_3'])
Phi

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for c

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
x_2(uint256) := ϕ(['x_3', 'x_1'])
Phi

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_52(bool) = x_2 < c_2
lnorm: 0 rnorm: 6
10
-1
[i]Type for TMP_52

Name: TMP_52 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: c_3, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: c, Num: 3
Globalname: c, contract_name: VaderMath
End popogation
c_3(uint256) := x_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] TMP_53 cleared
[i] TMP_54 cleared
[i] TMP_55 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: x_3, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 3
Globalname: x, contract_name: VaderMath
End popogation
TMP_53(uint256) = a_1 (c)/ x_2
lnorm: 6 rnorm: 0
Source address: u
Source address: u
lnorm: 6 rnorm: 0
Source address: u
Source address: u
[i]Type for TMP_53

Name: TMP_53 Function: root
Num: -1
Den: -1
Address: u
Norm: 6
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_54(uint256) = TMP_53 (c)+ x_2
Source address: u
[i]Type for TMP_54

Name: TMP_54 Function: root
Num: 10
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
TMP_55(uint256) = TMP_54 (c)/ 2
lnorm: 0 rnorm: 0
Source address: u
lnorm: 0 rnorm: 0
10
-1
[i]Type for TMP_55

Name: TMP_55 Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
x_3(uint256) := TMP_55(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_38', 'XY_1'])
Phi
[i]Type for a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
[i] TMP_49 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
End popogation
TMP_49(bool) = a_1 > 3
lnorm: 6 rnorm: 0
[i]Type for TMP_49

Name: TMP_49 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_56 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
End popogation
TMP_56(bool) = a_1 != 0
[i]Type for TMP_56

Name: TMP_56 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_4, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: c, Num: 4
Globalname: c, contract_name: VaderMath
End popogation
c_4(uint256) := 1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: c_1, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 1
Globalname: c, contract_name: VaderMath
End popogation
c_1(uint256) := a_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_50 cleared
[i] TMP_51 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: VaderMath
End popogation
TMP_50(uint256) = a_1 (c)/ 2
lnorm: 6 rnorm: 0
Source address: u
lnorm: 6 rnorm: 0
10
-1
[i]Type for TMP_50

Name: TMP_50 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_51(uint256) = TMP_50 (c)+ 1
Source address: u
[i]Type for TMP_51

Name: TMP_51 Function: root
Num: 10
Den: -1
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_51(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
[i] x cleared
[i] TMP_52 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
End popogation
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
c_2(uint256) := ϕ(['c_1', 'c_3'])
Phi

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for c

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
x_2(uint256) := ϕ(['x_3', 'x_1'])
Phi

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_52(bool) = x_2 < c_2
lnorm: 0 rnorm: 6
10
-1
[i]Type for TMP_52

Name: TMP_52 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: c_3, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: c, Num: 3
Globalname: c, contract_name: VaderMath
End popogation
c_3(uint256) := x_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] TMP_53 cleared
[i] TMP_54 cleared
[i] TMP_55 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: x_3, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 3
Globalname: x, contract_name: VaderMath
End popogation
TMP_53(uint256) = a_1 (c)/ x_2
lnorm: 6 rnorm: 0
Source address: u
Source address: u
lnorm: 6 rnorm: 0
Source address: u
Source address: u
[i]Type for TMP_53

Name: TMP_53 Function: root
Num: -1
Den: -1
Address: u
Norm: 6
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_54(uint256) = TMP_53 (c)+ x_2
Source address: u
[i]Type for TMP_54

Name: TMP_54 Function: root
Num: 10
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
TMP_55(uint256) = TMP_54 (c)/ 2
lnorm: 0 rnorm: 0
Source address: u
lnorm: 0 rnorm: 0
10
-1
[i]Type for TMP_55

Name: TMP_55 Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
x_3(uint256) := TMP_55(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_39

Name: TMP_39 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_40(uint256) = TMP_36 (c)* TMP_39
lnorm: u rnorm: u
[i]Type for TMP_40

Name: TMP_40 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
numeratorA_1(uint256) := TMP_40(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for numeratorA

Name: numeratorA Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_41 cleared
[i] numeratorB cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: numeratorB_1, name: numeratorB

Name: numeratorB Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: numeratorB, Num: 1
Globalname: numeratorB, contract_name: VaderMath
End popogation
TMP_41(uint256) = y2_1 (c)* reserveIn_1
lnorm: 0 rnorm: 6
Source address: u
[i]Type for TMP_41

Name: TMP_41 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
numeratorB_1(uint256) := TMP_41(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for numeratorB

Name: numeratorB Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] numeratorC cleared
Propogating parameters and globals to SSA variables...
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: numeratorC_1, name: numeratorC

Name: numeratorC Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numeratorC, Num: 1
Globalname: numeratorC, contract_name: VaderMath
End popogation
numeratorC_1(uint256) := XY_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for numeratorC

Name: numeratorC Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_42 cleared
[i] TMP_43 cleared
[i] numerator cleared
Propogating parameters and globals to SSA variables...
Ssa_name: numeratorC_1, name: numeratorC

Name: numeratorC Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: numeratorB_1, name: numeratorB

Name: numeratorB Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: numeratorA_1, name: numeratorA

Name: numeratorA Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numeratorA, Num: 1
Globalname: numeratorA, contract_name: VaderMath
Ssa_name: numeratorC_1, name: numeratorC

Name: numeratorC Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: numeratorB_1, name: numeratorB

Name: numeratorB Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: numeratorA_1, name: numeratorA

Name: numeratorA Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numeratorA, Num: 1
Globalname: numeratorA, contract_name: VaderMath
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numerator, Num: 1
Globalname: numerator, contract_name: VaderMath
End popogation
TMP_42(uint256) = numeratorC_1 (c)- numeratorA_1
Source address: u
[i]Type for TMP_42

Name: TMP_42 Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_43(uint256) = TMP_42 (c)- numeratorB_1
[i]Type for TMP_43

Name: TMP_43 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
numerator_1(uint256) := TMP_43(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for numerator

Name: numerator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] denominator cleared
Propogating parameters and globals to SSA variables...
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: denominator, Num: 1
Globalname: denominator, contract_name: VaderMath
End popogation
denominator_1(uint256) := y2_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for denominator

Name: denominator Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] TMP_44 cleared
[i] amountIn cleared
Propogating parameters and globals to SSA variables...
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numerator, Num: 1
Globalname: numerator, contract_name: VaderMath
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numerator, Num: 1
Globalname: numerator, contract_name: VaderMath
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: amountIn, Num: 1
Globalname: amountIn, contract_name: VaderMath
End popogation
TMP_44(uint256) = numerator_1 (c)/ denominator_1
lnorm: u rnorm: 0
lnorm: u rnorm: 0
[i]Type for TMP_44

Name: TMP_44 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
amountIn_1(uint256) := TMP_44(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for amountIn

Name: amountIn Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
End popogation
RETURN amountIn_1
RETURN

Name: amountIn Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Source address: u
Source address: u
[i]Type for TMP_90

Name: TMP_90 Function: calculateInGivenOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
RETURN TMP_90
RETURN

Name: TMP_90 Function: calculateInGivenOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
[i] nativeReserve0 cleared
[i] foreignReserve0 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: pool0_1, name: pool0

Name: pool0 Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pool0, Num: 1
Globalname: pool0, contract_name: VaderRouter
Ssa_name: pool0_1, name: pool0

Name: pool0 Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pool0, Num: 1
Globalname: pool0, contract_name: VaderRouter
Ssa_name: nativeReserve0_1, name: nativeReserve0

Name: nativeReserve0 Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Name: nativeReserve0, Num: 1
Globalname: nativeReserve0, contract_name: VaderRouter
Ssa_name: foreignReserve0_1, name: foreignReserve0

Name: foreignReserve0 Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Name: foreignReserve0, Num: 1
Globalname: foreignReserve0, contract_name: VaderRouter
End popogation
TUPLE_4(uint112,uint112,uint32) = HIGH_LEVEL_CALL, dest:pool0_1(IVaderPool), function:getReserves, arguments:[]  
High Call: getReserves
Running querryfc
Found: None
Written func info: IVaderPool, getReserves
Retvar: ('c', ['global:nativeAsset'], ['-1'], 18, "'u'", 'u')
{'global:_owner': 1, 'global:_tokenApprovals': 2, 'global:_owners': 3, 'swap:to': -999, 'mint:to': -998, 'mint:TMP_139': 4, 'global:this': 4, 'None:None': 5, 'mint:foreignAsset': 6, 'swap:_nativeAsset': 7, 'swap:_foreignAsset': 8, 'global:nativeAsset': 9, 'global:foreignAsset': 10, 'global:_ZERO_ADDRESS': 11, 'removeLiquidity:tokenA': -997, 'removeLiquidity:tokenB': -996, 'removeLiquidity:to': -995, 'swapExactTokensForTokens:path': -994, 'swapExactTokensForTokens:to': -993, 'swapTokensForExactTokens:path': -992, 'swapTokensForExactTokens:to': -991, 'calculateInGivenOut:path': -990, 'calculateOutGivenIn:path': -989}
Retvar: ('c', ['global:foreignAsset'], ['-1'], 6, "'u'", 'u')
{'global:_owner': 1, 'global:_tokenApprovals': 2, 'global:_owners': 3, 'swap:to': -999, 'mint:to': -998, 'mint:TMP_139': 4, 'global:this': 4, 'None:None': 5, 'mint:foreignAsset': 6, 'swap:_nativeAsset': 7, 'swap:_foreignAsset': 8, 'global:nativeAsset': 9, 'global:foreignAsset': 10, 'global:_ZERO_ADDRESS': 11, 'removeLiquidity:tokenA': -997, 'removeLiquidity:tokenB': -996, 'removeLiquidity:to': -995, 'swapExactTokensForTokens:path': -994, 'swapExactTokensForTokens:to': -993, 'swapTokensForExactTokens:path': -992, 'swapTokensForExactTokens:to': -991, 'calculateInGivenOut:path': -990, 'calculateOutGivenIn:path': -989}
[i]Type for TUPLE_4

Name: TUPLE_4 Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
nativeReserve0_1(uint256)= UNPACK TUPLE_4 index: 0 
([9], [-1], 18, "'u'", 'u', -1)
[i]Type for nativeReserve0

Name: nativeReserve0 Function: calculateInGivenOut
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
foreignReserve0_1(uint256)= UNPACK TUPLE_4 index: 1 
([10], [-1], 6, "'u'", 'u', -1)
[i]Type for foreignReserve0

Name: foreignReserve0 Function: calculateInGivenOut
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] nativeReserve1 cleared
[i] foreignReserve1 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: pool1_1, name: pool1

Name: pool1 Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pool1, Num: 1
Globalname: pool1, contract_name: VaderRouter
Ssa_name: pool1_1, name: pool1

Name: pool1 Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pool1, Num: 1
Globalname: pool1, contract_name: VaderRouter
Ssa_name: nativeReserve1_1, name: nativeReserve1

Name: nativeReserve1 Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Name: nativeReserve1, Num: 1
Globalname: nativeReserve1, contract_name: VaderRouter
Ssa_name: foreignReserve1_1, name: foreignReserve1

Name: foreignReserve1 Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Name: foreignReserve1, Num: 1
Globalname: foreignReserve1, contract_name: VaderRouter
End popogation
TUPLE_5(uint112,uint112,uint32) = HIGH_LEVEL_CALL, dest:pool1_1(IVaderPool), function:getReserves, arguments:[]  
High Call: getReserves
Running querryfc
Found: None
Written func info: IVaderPool, getReserves
Retvar: ('c', ['global:nativeAsset'], ['-1'], 18, "'u'", 'u')
{'global:_owner': 1, 'global:_tokenApprovals': 2, 'global:_owners': 3, 'swap:to': -999, 'mint:to': -998, 'mint:TMP_139': 4, 'global:this': 4, 'None:None': 5, 'mint:foreignAsset': 6, 'swap:_nativeAsset': 7, 'swap:_foreignAsset': 8, 'global:nativeAsset': 9, 'global:foreignAsset': 10, 'global:_ZERO_ADDRESS': 11, 'removeLiquidity:tokenA': -997, 'removeLiquidity:tokenB': -996, 'removeLiquidity:to': -995, 'swapExactTokensForTokens:path': -994, 'swapExactTokensForTokens:to': -993, 'swapTokensForExactTokens:path': -992, 'swapTokensForExactTokens:to': -991, 'calculateInGivenOut:path': -990, 'calculateOutGivenIn:path': -989}
Retvar: ('c', ['global:foreignAsset'], ['-1'], 6, "'u'", 'u')
{'global:_owner': 1, 'global:_tokenApprovals': 2, 'global:_owners': 3, 'swap:to': -999, 'mint:to': -998, 'mint:TMP_139': 4, 'global:this': 4, 'None:None': 5, 'mint:foreignAsset': 6, 'swap:_nativeAsset': 7, 'swap:_foreignAsset': 8, 'global:nativeAsset': 9, 'global:foreignAsset': 10, 'global:_ZERO_ADDRESS': 11, 'removeLiquidity:tokenA': -997, 'removeLiquidity:tokenB': -996, 'removeLiquidity:to': -995, 'swapExactTokensForTokens:path': -994, 'swapExactTokensForTokens:to': -993, 'swapTokensForExactTokens:path': -992, 'swapTokensForExactTokens:to': -991, 'calculateInGivenOut:path': -990, 'calculateOutGivenIn:path': -989}
[i]Type for TUPLE_5

Name: TUPLE_5 Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
nativeReserve1_1(uint256)= UNPACK TUPLE_5 index: 0 
([9], [-1], 18, "'u'", 'u', -1)
[i]Type for nativeReserve1

Name: nativeReserve1 Function: calculateInGivenOut
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
foreignReserve1_1(uint256)= UNPACK TUPLE_5 index: 1 
([10], [-1], 6, "'u'", 'u', -1)
[i]Type for foreignReserve1

Name: foreignReserve1 Function: calculateInGivenOut
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
[i] TMP_93 cleared
[i] TMP_94 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: foreignReserve1_1, name: foreignReserve1

Name: foreignReserve1 Function: calculateInGivenOut
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: foreignReserve0_1, name: foreignReserve0

Name: foreignReserve0 Function: calculateInGivenOut
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: nativeReserve0_1, name: nativeReserve0

Name: nativeReserve0 Function: calculateInGivenOut
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amountOut_1, name: amountOut

Name: amountOut_1 Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountOut_1 Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountOut, Num: 1
Globalname: amountOut, contract_name: VaderRouter
Ssa_name: nativeReserve1_1, name: nativeReserve1

Name: nativeReserve1 Function: calculateInGivenOut
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: foreignReserve1_1, name: foreignReserve1

Name: foreignReserve1 Function: calculateInGivenOut
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: foreignReserve0_1, name: foreignReserve0

Name: foreignReserve0 Function: calculateInGivenOut
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: nativeReserve0_1, name: nativeReserve0

Name: nativeReserve0 Function: calculateInGivenOut
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amountOut_1, name: amountOut

Name: amountOut_1 Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountOut_1 Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountOut, Num: 1
Globalname: amountOut, contract_name: VaderRouter
Ssa_name: nativeReserve1_1, name: nativeReserve1

Name: nativeReserve1 Function: calculateInGivenOut
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
End popogation
TMP_93(uint256) = LIBRARY_CALL, dest:VaderMath, function:VaderMath.calculateSwapReverse(uint256,uint256,uint256), arguments:['amountOut_1', 'nativeReserve1_1', 'foreignReserve1_1'] 
Found: calculateSwapReverse

Name: amountOut_1 Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: nativeReserve1 Function: calculateInGivenOut
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: foreignReserve1 Function: calculateInGivenOut
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
High level cal param_cache
Param: 0
    num: []
    den: []
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [9]
    den: [-1]
    norm: 18
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [10]
    den: [-1]
    norm: 6
    link: None
    fields: []
    fintype: -1
New param cache [[[], [], 'u', None, [], -1, 'u', 'u'], [[9], [-1], 18, None, [], -1, 'u', "'u'"], [[10], [-1], 6, None, [], -1, 'u', "'u'"]]
Old param cache: [[[-1], [-1], 'u', None, [], -1, 'u'], [[-1], [-1], 'u', None, [], -1, 'u'], [[-1], [-1], 'u', None, [], -1, 'u']]
[[], [], 'u', None, [], -1, 'u', 'u']

Name: amountOut Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[9], [-1], 18, None, [], -1, 'u', "'u'"]

Name: reserveIn Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
[[10], [-1], 6, None, [], -1, 'u', "'u'"]

Name: reserveOut Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
calculateSwapReverse(uint256,uint256,uint256)
Propogating All
Propogating All
reserveOut_1
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: reserveOut_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
reserveIn_1
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: reserveIn_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
Propogating All
amountOut_1
Ssa_name: amountOut_1, name: amountOut

Name: amountOut_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountOut_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
y2_1
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Propogating All
reserveOut_1
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: reserveOut_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
y4_1
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Propogating All
y4_1
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
reserveOut_1
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: reserveOut_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
reserveIn_1
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: reserveIn_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
XY_1
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
reserveIn_1
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: reserveIn_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
y2_1
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Propogating All
XY_1
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
numeratorC_1
Ssa_name: numeratorC_1, name: numeratorC

Name: numeratorC Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
numeratorB_1
Ssa_name: numeratorB_1, name: numeratorB

Name: numeratorB Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 2
Fields: 
Finance Type: undef
numeratorA_1
Ssa_name: numeratorA_1, name: numeratorA

Name: numeratorA Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
y2_1
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Propogating All
numerator_1
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
denominator_1
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Propogating All
amountIn_1
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_31 cleared
[i] XY cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: XY, Num: 1
Globalname: XY, contract_name: VaderMath
End popogation
TMP_31(uint256) = reserveIn_1 (c)* reserveOut_1
lnorm: 18 rnorm: 6
Source address: u
Source address: u
Source address: u
[i]Type for TMP_31

Name: TMP_31 Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
XY_1(uint256) := TMP_31(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for XY

Name: XY Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_32 cleared
[i] y2 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountOut_1, name: amountOut

Name: amountOut_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountOut_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountOut, Num: 1
Globalname: amountOut, contract_name: VaderMath
Ssa_name: amountOut_1, name: amountOut

Name: amountOut_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountOut_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountOut, Num: 1
Globalname: amountOut, contract_name: VaderMath
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: y2, Num: 1
Globalname: y2, contract_name: VaderMath
End popogation
TMP_32(uint256) = amountOut_1 (c)* 2
lnorm: u rnorm: 0
Source address: u
[i]Type for TMP_32

Name: TMP_32 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
y2_1(uint256) := TMP_32(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] TMP_33 cleared
[i] y4 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: y4, Num: 1
Globalname: y4, contract_name: VaderMath
End popogation
TMP_33(uint256) = y2_1 (c)* 2
lnorm: 0 rnorm: 0
Source address: u
[i]Type for TMP_33

Name: TMP_33 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
y4_1(uint256) := TMP_33(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
[i] TMP_34 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
End popogation
TMP_34(bool) = y4_1 < reserveOut_1
lnorm: 0 rnorm: 6
[i]Type for TMP_34

Name: TMP_34 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_35(None) = SOLIDITY_CALL require(bool,string)(TMP_34,VaderMath::calculateSwapReverse: Desired Output Exceeds Maximum Output Possible (1/4 of Liquidity Pool))
[i]Type for TMP_35

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_36 cleared
[i] TMP_37 cleared
[i] TMP_38 cleared
[i] TMP_39 cleared
[i] TMP_40 cleared
[i] numeratorA cleared
Propogating parameters and globals to SSA variables...
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: numeratorA_1, name: numeratorA

Name: numeratorA Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numeratorA, Num: 1
Globalname: numeratorA, contract_name: VaderMath
End popogation
TMP_36(uint256) = INTERNAL_CALL, VaderMath.root(uint256)(XY_1)
New param cache [[[9, 10], [-1], 24, None, [], -1, 'u', 'u']]
Old param cache: [[[], [], 'u', None, [], -1, 'u']]
[[9, 10], [-1], 24, None, [], -1, 'u', 'u']

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
root(uint256)
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
Propogating All
c_2
Ssa_name: c_2, name: c

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Propogating All
Propogating All
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_38', 'XY_1'])
Phi
[i]Type for a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_49 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_49(bool) = a_1 > 3
lnorm: 24 rnorm: 0
[i]Type for TMP_49

Name: TMP_49 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_56 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_56(bool) = a_1 != 0
[i]Type for TMP_56

Name: TMP_56 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_4, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: c, Num: 4
Globalname: c, contract_name: VaderMath
End popogation
c_4(uint256) := 1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: c_1, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 1
Globalname: c, contract_name: VaderMath
End popogation
c_1(uint256) := a_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_50 cleared
[i] TMP_51 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: VaderMath
End popogation
TMP_50(uint256) = a_1 (c)/ 2
lnorm: 24 rnorm: 0
Source address: u
lnorm: 24 rnorm: 0
10
9
-1
[i]Type for TMP_50

Name: TMP_50 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_51(uint256) = TMP_50 (c)+ 1
Source address: u
[i]Type for TMP_51

Name: TMP_51 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_51(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
[i] x cleared
[i] TMP_52 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
End popogation
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
c_2(uint256) := ϕ(['c_1', 'c_3'])
Phi

Name: c Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for c

Name: c Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
x_2(uint256) := ϕ(['x_3', 'x_1'])
Phi

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_52(bool) = x_2 < c_2
lnorm: 0 rnorm: 24
[i]Type for TMP_52

Name: TMP_52 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: c_3, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: c, Num: 3
Globalname: c, contract_name: VaderMath
End popogation
c_3(uint256) := x_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] TMP_53 cleared
[i] TMP_54 cleared
[i] TMP_55 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: x_3, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 3
Globalname: x, contract_name: VaderMath
End popogation
TMP_53(uint256) = a_1 (c)/ x_2
lnorm: 24 rnorm: 0
Source address: u
Source address: u
lnorm: 24 rnorm: 0
Source address: u
9
-1
[i]Type for TMP_53

Name: TMP_53 Function: root
Num: 9
Den: -1
Address: u
Norm: 24
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_54(uint256) = TMP_53 (c)+ x_2
10
10
-1
lnorm: 24 rnorm: 0
Source address: u
[i]Type for TMP_54

Name: TMP_54 Function: root
Num: 10
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
TMP_55(uint256) = TMP_54 (c)/ 2
lnorm: 0 rnorm: 0
Source address: u
lnorm: 0 rnorm: 0
10
-1
[i]Type for TMP_55

Name: TMP_55 Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
x_3(uint256) := TMP_55(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_38', 'XY_1'])
Phi
[i]Type for a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_49 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_49(bool) = a_1 > 3
lnorm: 24 rnorm: 0
[i]Type for TMP_49

Name: TMP_49 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_56 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_56(bool) = a_1 != 0
[i]Type for TMP_56

Name: TMP_56 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_4, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: c, Num: 4
Globalname: c, contract_name: VaderMath
End popogation
c_4(uint256) := 1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: c_1, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 1
Globalname: c, contract_name: VaderMath
End popogation
c_1(uint256) := a_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_50 cleared
[i] TMP_51 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: VaderMath
End popogation
TMP_50(uint256) = a_1 (c)/ 2
lnorm: 24 rnorm: 0
Source address: u
lnorm: 24 rnorm: 0
10
9
-1
[i]Type for TMP_50

Name: TMP_50 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_51(uint256) = TMP_50 (c)+ 1
Source address: u
[i]Type for TMP_51

Name: TMP_51 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_51(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
[i] x cleared
[i] TMP_52 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
End popogation
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
c_2(uint256) := ϕ(['c_1', 'c_3'])
Phi

Name: c Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for c

Name: c Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
x_2(uint256) := ϕ(['x_3', 'x_1'])
Phi

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_52(bool) = x_2 < c_2
lnorm: 0 rnorm: 24
[i]Type for TMP_52

Name: TMP_52 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: c_3, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: c, Num: 3
Globalname: c, contract_name: VaderMath
End popogation
c_3(uint256) := x_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] TMP_53 cleared
[i] TMP_54 cleared
[i] TMP_55 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: x_3, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 3
Globalname: x, contract_name: VaderMath
End popogation
TMP_53(uint256) = a_1 (c)/ x_2
lnorm: 24 rnorm: 0
Source address: u
Source address: u
lnorm: 24 rnorm: 0
Source address: u
9
-1
[i]Type for TMP_53

Name: TMP_53 Function: root
Num: 9
Den: -1
Address: u
Norm: 24
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_54(uint256) = TMP_53 (c)+ x_2
10
10
-1
lnorm: 24 rnorm: 0
Source address: u
[i]Type for TMP_54

Name: TMP_54 Function: root
Num: 10
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
TMP_55(uint256) = TMP_54 (c)/ 2
lnorm: 0 rnorm: 0
Source address: u
lnorm: 0 rnorm: 0
10
-1
[i]Type for TMP_55

Name: TMP_55 Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
x_3(uint256) := TMP_55(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_36

Name: TMP_36 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_37(uint256) = reserveOut_1 (c)- y4_1
Source address: u
[i]Type for TMP_37

Name: TMP_37 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
TMP_38(uint256) = reserveIn_1 (c)* TMP_37
lnorm: 18 rnorm: 0
Source address: u
[i]Type for TMP_38

Name: TMP_38 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
TMP_39(uint256) = INTERNAL_CALL, VaderMath.root(uint256)(TMP_38)
New param cache [[[9], [-1], 18, None, [], -1, 'u', 4]]
Old param cache: [[[], [], 'u', None, [], -1, 'u']]
[[9], [-1], 18, None, [], -1, 'u', 4]

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
root(uint256)
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
Propogating All
c_2
Ssa_name: c_2, name: c

Name: c Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Propogating All
Propogating All
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_38', 'XY_1'])
Phi
[i]Type for a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
[i] TMP_49 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
End popogation
TMP_49(bool) = a_1 > 3
lnorm: 18 rnorm: 0
[i]Type for TMP_49

Name: TMP_49 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_56 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
End popogation
TMP_56(bool) = a_1 != 0
[i]Type for TMP_56

Name: TMP_56 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_4, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: c, Num: 4
Globalname: c, contract_name: VaderMath
End popogation
c_4(uint256) := 1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: c_1, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 1
Globalname: c, contract_name: VaderMath
End popogation
c_1(uint256) := a_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_50 cleared
[i] TMP_51 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: VaderMath
End popogation
TMP_50(uint256) = a_1 (c)/ 2
lnorm: 18 rnorm: 0
Source address: u
lnorm: 18 rnorm: 0
9
-1
[i]Type for TMP_50

Name: TMP_50 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_51(uint256) = TMP_50 (c)+ 1
Source address: u
[i]Type for TMP_51

Name: TMP_51 Function: root
Num: 9
Den: -1
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_51(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
[i] x cleared
[i] TMP_52 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
End popogation
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
c_2(uint256) := ϕ(['c_1', 'c_3'])
Phi

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for c

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
x_2(uint256) := ϕ(['x_3', 'x_1'])
Phi

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_52(bool) = x_2 < c_2
lnorm: 0 rnorm: 18
10
10
-1
[i]Type for TMP_52

Name: TMP_52 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: c_3, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: c, Num: 3
Globalname: c, contract_name: VaderMath
End popogation
c_3(uint256) := x_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] TMP_53 cleared
[i] TMP_54 cleared
[i] TMP_55 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: x_3, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 3
Globalname: x, contract_name: VaderMath
End popogation
TMP_53(uint256) = a_1 (c)/ x_2
lnorm: 18 rnorm: 0
Source address: u
Source address: u
lnorm: 18 rnorm: 0
Source address: u
9
10
[i]Type for TMP_53

Name: TMP_53 Function: root
Num: 9
Den: 10
Address: u
Norm: 18
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_54(uint256) = TMP_53 (c)+ x_2
10
10
-1
[i]Type for TMP_54

Name: TMP_54 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_55(uint256) = TMP_54 (c)/ 2
lnorm: u rnorm: 0
lnorm: u rnorm: 0
[i]Type for TMP_55

Name: TMP_55 Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
x_3(uint256) := TMP_55(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_38', 'XY_1'])
Phi
[i]Type for a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
[i] TMP_49 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
End popogation
TMP_49(bool) = a_1 > 3
lnorm: 18 rnorm: 0
[i]Type for TMP_49

Name: TMP_49 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_56 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
End popogation
TMP_56(bool) = a_1 != 0
[i]Type for TMP_56

Name: TMP_56 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_4, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: c, Num: 4
Globalname: c, contract_name: VaderMath
End popogation
c_4(uint256) := 1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: c_1, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 1
Globalname: c, contract_name: VaderMath
End popogation
c_1(uint256) := a_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_50 cleared
[i] TMP_51 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: VaderMath
End popogation
TMP_50(uint256) = a_1 (c)/ 2
lnorm: 18 rnorm: 0
Source address: u
lnorm: 18 rnorm: 0
9
-1
[i]Type for TMP_50

Name: TMP_50 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_51(uint256) = TMP_50 (c)+ 1
Source address: u
[i]Type for TMP_51

Name: TMP_51 Function: root
Num: 9
Den: -1
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_51(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
[i] x cleared
[i] TMP_52 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
End popogation
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
c_2(uint256) := ϕ(['c_1', 'c_3'])
Phi

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for c

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
x_2(uint256) := ϕ(['x_3', 'x_1'])
Phi

Name: x Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
TMP_52(bool) = x_2 < c_2
lnorm: 0 rnorm: 18
9
-1
[i]Type for TMP_52

Name: TMP_52 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: c_3, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: c, Num: 3
Globalname: c, contract_name: VaderMath
End popogation
c_3(uint256) := x_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
[i] TMP_53 cleared
[i] TMP_54 cleared
[i] TMP_55 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: x_3, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 3
Globalname: x, contract_name: VaderMath
End popogation
TMP_53(uint256) = a_1 (c)/ x_2
lnorm: 18 rnorm: 0
Source address: u
Source address: u
lnorm: 18 rnorm: 0
Source address: u
Source address: u
[i]Type for TMP_53

Name: TMP_53 Function: root
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
TMP_54(uint256) = TMP_53 (c)+ x_2
Source address: u
[i]Type for TMP_54

Name: TMP_54 Function: root
Num: 9
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
TMP_55(uint256) = TMP_54 (c)/ 2
lnorm: 0 rnorm: 0
Source address: u
lnorm: 0 rnorm: 0
9
-1
[i]Type for TMP_55

Name: TMP_55 Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
x_3(uint256) := TMP_55(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_39

Name: TMP_39 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_40(uint256) = TMP_36 (c)* TMP_39
lnorm: u rnorm: u
[i]Type for TMP_40

Name: TMP_40 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
numeratorA_1(uint256) := TMP_40(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for numeratorA

Name: numeratorA Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_41 cleared
[i] numeratorB cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: numeratorB_1, name: numeratorB

Name: numeratorB Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: numeratorB, Num: 1
Globalname: numeratorB, contract_name: VaderMath
End popogation
TMP_41(uint256) = y2_1 (c)* reserveIn_1
lnorm: 0 rnorm: 18
Source address: u
[i]Type for TMP_41

Name: TMP_41 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
numeratorB_1(uint256) := TMP_41(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for numeratorB

Name: numeratorB Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] numeratorC cleared
Propogating parameters and globals to SSA variables...
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: numeratorC_1, name: numeratorC

Name: numeratorC Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numeratorC, Num: 1
Globalname: numeratorC, contract_name: VaderMath
End popogation
numeratorC_1(uint256) := XY_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for numeratorC

Name: numeratorC Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_42 cleared
[i] TMP_43 cleared
[i] numerator cleared
Propogating parameters and globals to SSA variables...
Ssa_name: numeratorC_1, name: numeratorC

Name: numeratorC Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: numeratorB_1, name: numeratorB

Name: numeratorB Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: numeratorA_1, name: numeratorA

Name: numeratorA Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numeratorA, Num: 1
Globalname: numeratorA, contract_name: VaderMath
Ssa_name: numeratorC_1, name: numeratorC

Name: numeratorC Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: numeratorB_1, name: numeratorB

Name: numeratorB Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: numeratorA_1, name: numeratorA

Name: numeratorA Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numeratorA, Num: 1
Globalname: numeratorA, contract_name: VaderMath
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numerator, Num: 1
Globalname: numerator, contract_name: VaderMath
End popogation
TMP_42(uint256) = numeratorC_1 (c)- numeratorA_1
Source address: u
[i]Type for TMP_42

Name: TMP_42 Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_43(uint256) = TMP_42 (c)- numeratorB_1
[i]Type for TMP_43

Name: TMP_43 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
numerator_1(uint256) := TMP_43(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for numerator

Name: numerator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] denominator cleared
Propogating parameters and globals to SSA variables...
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: denominator, Num: 1
Globalname: denominator, contract_name: VaderMath
End popogation
denominator_1(uint256) := y2_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for denominator

Name: denominator Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] TMP_44 cleared
[i] amountIn cleared
Propogating parameters and globals to SSA variables...
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numerator, Num: 1
Globalname: numerator, contract_name: VaderMath
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numerator, Num: 1
Globalname: numerator, contract_name: VaderMath
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: amountIn, Num: 1
Globalname: amountIn, contract_name: VaderMath
End popogation
TMP_44(uint256) = numerator_1 (c)/ denominator_1
lnorm: u rnorm: 0
lnorm: u rnorm: 0
[i]Type for TMP_44

Name: TMP_44 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
amountIn_1(uint256) := TMP_44(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for amountIn

Name: amountIn Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
End popogation
RETURN amountIn_1
RETURN

Name: amountIn Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_31 cleared
[i] XY cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: XY, Num: 1
Globalname: XY, contract_name: VaderMath
End popogation
TMP_31(uint256) = reserveIn_1 (c)* reserveOut_1
lnorm: 18 rnorm: 6
Source address: u
Source address: u
Source address: u
[i]Type for TMP_31

Name: TMP_31 Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
XY_1(uint256) := TMP_31(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for XY

Name: XY Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_32 cleared
[i] y2 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountOut_1, name: amountOut

Name: amountOut_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountOut_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountOut, Num: 1
Globalname: amountOut, contract_name: VaderMath
Ssa_name: amountOut_1, name: amountOut

Name: amountOut_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountOut_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountOut, Num: 1
Globalname: amountOut, contract_name: VaderMath
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: y2, Num: 1
Globalname: y2, contract_name: VaderMath
End popogation
TMP_32(uint256) = amountOut_1 (c)* 2
lnorm: u rnorm: 0
Source address: u
[i]Type for TMP_32

Name: TMP_32 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
y2_1(uint256) := TMP_32(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] TMP_33 cleared
[i] y4 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: y4, Num: 1
Globalname: y4, contract_name: VaderMath
End popogation
TMP_33(uint256) = y2_1 (c)* 2
lnorm: 0 rnorm: 0
Source address: u
[i]Type for TMP_33

Name: TMP_33 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
y4_1(uint256) := TMP_33(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
[i] TMP_34 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
End popogation
TMP_34(bool) = y4_1 < reserveOut_1
lnorm: 0 rnorm: 6
[i]Type for TMP_34

Name: TMP_34 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_35(None) = SOLIDITY_CALL require(bool,string)(TMP_34,VaderMath::calculateSwapReverse: Desired Output Exceeds Maximum Output Possible (1/4 of Liquidity Pool))
[i]Type for TMP_35

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_36 cleared
[i] TMP_37 cleared
[i] TMP_38 cleared
[i] TMP_39 cleared
[i] TMP_40 cleared
[i] numeratorA cleared
Propogating parameters and globals to SSA variables...
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: numeratorA_1, name: numeratorA

Name: numeratorA Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numeratorA, Num: 1
Globalname: numeratorA, contract_name: VaderMath
End popogation
TMP_36(uint256) = INTERNAL_CALL, VaderMath.root(uint256)(XY_1)
New param cache [[[9, 10], [-1], 24, None, [], -1, 'u', 'u']]
Old param cache: [[[], [], 'u', None, [], -1, 'u']]
[[9, 10], [-1], 24, None, [], -1, 'u', 'u']

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
root(uint256)
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
Propogating All
c_2
Ssa_name: c_2, name: c

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Propogating All
Propogating All
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_38', 'XY_1'])
Phi
[i]Type for a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_49 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_49(bool) = a_1 > 3
lnorm: 24 rnorm: 0
[i]Type for TMP_49

Name: TMP_49 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_56 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_56(bool) = a_1 != 0
[i]Type for TMP_56

Name: TMP_56 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_4, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: c, Num: 4
Globalname: c, contract_name: VaderMath
End popogation
c_4(uint256) := 1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: c_1, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 1
Globalname: c, contract_name: VaderMath
End popogation
c_1(uint256) := a_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_50 cleared
[i] TMP_51 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: VaderMath
End popogation
TMP_50(uint256) = a_1 (c)/ 2
lnorm: 24 rnorm: 0
Source address: u
lnorm: 24 rnorm: 0
10
9
-1
[i]Type for TMP_50

Name: TMP_50 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_51(uint256) = TMP_50 (c)+ 1
Source address: u
[i]Type for TMP_51

Name: TMP_51 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_51(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
[i] x cleared
[i] TMP_52 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
End popogation
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
c_2(uint256) := ϕ(['c_1', 'c_3'])
Phi

Name: c Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for c

Name: c Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
x_2(uint256) := ϕ(['x_3', 'x_1'])
Phi

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_52(bool) = x_2 < c_2
lnorm: 0 rnorm: 24
[i]Type for TMP_52

Name: TMP_52 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: c_3, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: c, Num: 3
Globalname: c, contract_name: VaderMath
End popogation
c_3(uint256) := x_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] TMP_53 cleared
[i] TMP_54 cleared
[i] TMP_55 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: x_3, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 3
Globalname: x, contract_name: VaderMath
End popogation
TMP_53(uint256) = a_1 (c)/ x_2
lnorm: 24 rnorm: 0
Source address: u
Source address: u
lnorm: 24 rnorm: 0
Source address: u
10
-1
[i]Type for TMP_53

Name: TMP_53 Function: root
Num: 10
Den: -1
Address: u
Norm: 24
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_54(uint256) = TMP_53 (c)+ x_2
9
[i]Type for TMP_54

Name: TMP_54 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_55(uint256) = TMP_54 (c)/ 2
lnorm: u rnorm: 0
lnorm: u rnorm: 0
[i]Type for TMP_55

Name: TMP_55 Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
x_3(uint256) := TMP_55(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_38', 'XY_1'])
Phi
[i]Type for a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_49 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_49(bool) = a_1 > 3
lnorm: 24 rnorm: 0
[i]Type for TMP_49

Name: TMP_49 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_56 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_56(bool) = a_1 != 0
[i]Type for TMP_56

Name: TMP_56 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_4, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: c, Num: 4
Globalname: c, contract_name: VaderMath
End popogation
c_4(uint256) := 1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: c_1, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 1
Globalname: c, contract_name: VaderMath
End popogation
c_1(uint256) := a_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_50 cleared
[i] TMP_51 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: VaderMath
End popogation
TMP_50(uint256) = a_1 (c)/ 2
lnorm: 24 rnorm: 0
Source address: u
lnorm: 24 rnorm: 0
10
9
-1
[i]Type for TMP_50

Name: TMP_50 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_51(uint256) = TMP_50 (c)+ 1
Source address: u
[i]Type for TMP_51

Name: TMP_51 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_51(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
[i] x cleared
[i] TMP_52 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
End popogation
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
c_2(uint256) := ϕ(['c_1', 'c_3'])
Phi

Name: c Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for c

Name: c Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
x_2(uint256) := ϕ(['x_3', 'x_1'])
Phi

Name: x Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for x

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
TMP_52(bool) = x_2 < c_2
lnorm: 0 rnorm: 24
10
9
-1
[i]Type for TMP_52

Name: TMP_52 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: c_3, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: c, Num: 3
Globalname: c, contract_name: VaderMath
End popogation
c_3(uint256) := x_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
[i] TMP_53 cleared
[i] TMP_54 cleared
[i] TMP_55 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: x_3, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 3
Globalname: x, contract_name: VaderMath
End popogation
TMP_53(uint256) = a_1 (c)/ x_2
lnorm: 24 rnorm: 0
Source address: u
Source address: u
lnorm: 24 rnorm: 0
Source address: u
Source address: u
[i]Type for TMP_53

Name: TMP_53 Function: root
Num: -1
Den: -1
Address: u
Norm: 24
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
TMP_54(uint256) = TMP_53 (c)+ x_2
Source address: u
[i]Type for TMP_54

Name: TMP_54 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
XXXX
TMP_55(uint256) = TMP_54 (c)/ 2
lnorm: 0 rnorm: 0
Source address: u
lnorm: 0 rnorm: 0
10
9
-1
[i]Type for TMP_55

Name: TMP_55 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
x_3(uint256) := TMP_55(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_36

Name: TMP_36 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_37(uint256) = reserveOut_1 (c)- y4_1
Source address: u
[i]Type for TMP_37

Name: TMP_37 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
TMP_38(uint256) = reserveIn_1 (c)* TMP_37
lnorm: 18 rnorm: 0
Source address: u
[i]Type for TMP_38

Name: TMP_38 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
TMP_39(uint256) = INTERNAL_CALL, VaderMath.root(uint256)(TMP_38)
New param cache [[[9], [-1], 18, None, [], -1, 'u', 4]]
Old param cache: [[[], [], 'u', None, [], -1, 'u']]
[[9], [-1], 18, None, [], -1, 'u', 4]

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
root(uint256)
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
Propogating All
c_2
Ssa_name: c_2, name: c

Name: c Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Propogating All
Propogating All
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_38', 'XY_1'])
Phi
[i]Type for a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
[i] TMP_49 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
End popogation
TMP_49(bool) = a_1 > 3
lnorm: 18 rnorm: 0
[i]Type for TMP_49

Name: TMP_49 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_56 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
End popogation
TMP_56(bool) = a_1 != 0
[i]Type for TMP_56

Name: TMP_56 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_4, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: c, Num: 4
Globalname: c, contract_name: VaderMath
End popogation
c_4(uint256) := 1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: c_1, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 1
Globalname: c, contract_name: VaderMath
End popogation
c_1(uint256) := a_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_50 cleared
[i] TMP_51 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: VaderMath
End popogation
TMP_50(uint256) = a_1 (c)/ 2
lnorm: 18 rnorm: 0
Source address: u
lnorm: 18 rnorm: 0
9
-1
[i]Type for TMP_50

Name: TMP_50 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_51(uint256) = TMP_50 (c)+ 1
Source address: u
[i]Type for TMP_51

Name: TMP_51 Function: root
Num: 9
Den: -1
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_51(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
[i] x cleared
[i] TMP_52 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
End popogation
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
c_2(uint256) := ϕ(['c_1', 'c_3'])
Phi

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef

Name: c Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for c

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
x_2(uint256) := ϕ(['x_3', 'x_1'])
Phi

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for x

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
TMP_52(bool) = x_2 < c_2
lnorm: 0 rnorm: 18
[i]Type for TMP_52

Name: TMP_52 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: c_3, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: c, Num: 3
Globalname: c, contract_name: VaderMath
End popogation
c_3(uint256) := x_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
[i] TMP_53 cleared
[i] TMP_54 cleared
[i] TMP_55 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: x_3, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 3
Globalname: x, contract_name: VaderMath
End popogation
TMP_53(uint256) = a_1 (c)/ x_2
lnorm: 18 rnorm: 0
Source address: u
Source address: u
lnorm: 18 rnorm: 0
Source address: u
-1
10
[i]Type for TMP_53

Name: TMP_53 Function: root
Num: -1
Den: 10
Address: u
Norm: 18
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
TMP_54(uint256) = TMP_53 (c)+ x_2
[i]Type for TMP_54

Name: TMP_54 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_55(uint256) = TMP_54 (c)/ 2
lnorm: u rnorm: 0
lnorm: u rnorm: 0
[i]Type for TMP_55

Name: TMP_55 Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
x_3(uint256) := TMP_55(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_38', 'XY_1'])
Phi
[i]Type for a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
[i] TMP_49 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
End popogation
TMP_49(bool) = a_1 > 3
lnorm: 18 rnorm: 0
[i]Type for TMP_49

Name: TMP_49 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_56 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
End popogation
TMP_56(bool) = a_1 != 0
[i]Type for TMP_56

Name: TMP_56 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_4, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: c, Num: 4
Globalname: c, contract_name: VaderMath
End popogation
c_4(uint256) := 1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: c_1, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 1
Globalname: c, contract_name: VaderMath
End popogation
c_1(uint256) := a_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_50 cleared
[i] TMP_51 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: VaderMath
End popogation
TMP_50(uint256) = a_1 (c)/ 2
lnorm: 18 rnorm: 0
Source address: u
lnorm: 18 rnorm: 0
9
-1
[i]Type for TMP_50

Name: TMP_50 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_51(uint256) = TMP_50 (c)+ 1
Source address: u
[i]Type for TMP_51

Name: TMP_51 Function: root
Num: 9
Den: -1
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_51(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
[i] x cleared
[i] TMP_52 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
End popogation
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
c_2(uint256) := ϕ(['c_1', 'c_3'])
Phi

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef

Name: c Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for c

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
x_2(uint256) := ϕ(['x_3', 'x_1'])
Phi

Name: x Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
TMP_52(bool) = x_2 < c_2
lnorm: 0 rnorm: 18
9
-1
[i]Type for TMP_52

Name: TMP_52 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: c_3, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: c, Num: 3
Globalname: c, contract_name: VaderMath
End popogation
c_3(uint256) := x_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
[i] TMP_53 cleared
[i] TMP_54 cleared
[i] TMP_55 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: x_3, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 3
Globalname: x, contract_name: VaderMath
End popogation
TMP_53(uint256) = a_1 (c)/ x_2
lnorm: 18 rnorm: 0
Source address: u
Source address: u
lnorm: 18 rnorm: 0
Source address: u
Source address: u
[i]Type for TMP_53

Name: TMP_53 Function: root
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
TMP_54(uint256) = TMP_53 (c)+ x_2
Source address: u
[i]Type for TMP_54

Name: TMP_54 Function: root
Num: 9
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
TMP_55(uint256) = TMP_54 (c)/ 2
lnorm: 0 rnorm: 0
Source address: u
lnorm: 0 rnorm: 0
9
-1
[i]Type for TMP_55

Name: TMP_55 Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
x_3(uint256) := TMP_55(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_39

Name: TMP_39 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_40(uint256) = TMP_36 (c)* TMP_39
lnorm: u rnorm: u
[i]Type for TMP_40

Name: TMP_40 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
numeratorA_1(uint256) := TMP_40(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for numeratorA

Name: numeratorA Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_41 cleared
[i] numeratorB cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: numeratorB_1, name: numeratorB

Name: numeratorB Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: numeratorB, Num: 1
Globalname: numeratorB, contract_name: VaderMath
End popogation
TMP_41(uint256) = y2_1 (c)* reserveIn_1
lnorm: 0 rnorm: 18
Source address: u
[i]Type for TMP_41

Name: TMP_41 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
numeratorB_1(uint256) := TMP_41(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for numeratorB

Name: numeratorB Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] numeratorC cleared
Propogating parameters and globals to SSA variables...
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: numeratorC_1, name: numeratorC

Name: numeratorC Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numeratorC, Num: 1
Globalname: numeratorC, contract_name: VaderMath
End popogation
numeratorC_1(uint256) := XY_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for numeratorC

Name: numeratorC Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_42 cleared
[i] TMP_43 cleared
[i] numerator cleared
Propogating parameters and globals to SSA variables...
Ssa_name: numeratorC_1, name: numeratorC

Name: numeratorC Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: numeratorB_1, name: numeratorB

Name: numeratorB Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: numeratorA_1, name: numeratorA

Name: numeratorA Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numeratorA, Num: 1
Globalname: numeratorA, contract_name: VaderMath
Ssa_name: numeratorC_1, name: numeratorC

Name: numeratorC Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: numeratorB_1, name: numeratorB

Name: numeratorB Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: numeratorA_1, name: numeratorA

Name: numeratorA Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numeratorA, Num: 1
Globalname: numeratorA, contract_name: VaderMath
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numerator, Num: 1
Globalname: numerator, contract_name: VaderMath
End popogation
TMP_42(uint256) = numeratorC_1 (c)- numeratorA_1
Source address: u
[i]Type for TMP_42

Name: TMP_42 Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_43(uint256) = TMP_42 (c)- numeratorB_1
[i]Type for TMP_43

Name: TMP_43 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
numerator_1(uint256) := TMP_43(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for numerator

Name: numerator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] denominator cleared
Propogating parameters and globals to SSA variables...
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: denominator, Num: 1
Globalname: denominator, contract_name: VaderMath
End popogation
denominator_1(uint256) := y2_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for denominator

Name: denominator Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] TMP_44 cleared
[i] amountIn cleared
Propogating parameters and globals to SSA variables...
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numerator, Num: 1
Globalname: numerator, contract_name: VaderMath
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numerator, Num: 1
Globalname: numerator, contract_name: VaderMath
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: amountIn, Num: 1
Globalname: amountIn, contract_name: VaderMath
End popogation
TMP_44(uint256) = numerator_1 (c)/ denominator_1
lnorm: u rnorm: 0
lnorm: u rnorm: 0
[i]Type for TMP_44

Name: TMP_44 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
amountIn_1(uint256) := TMP_44(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for amountIn

Name: amountIn Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
End popogation
RETURN amountIn_1
RETURN

Name: amountIn Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Source address: u
Source address: u
[i]Type for TMP_93

Name: TMP_93 Function: calculateInGivenOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_94(uint256) = LIBRARY_CALL, dest:VaderMath, function:VaderMath.calculateSwapReverse(uint256,uint256,uint256), arguments:['TMP_93', 'foreignReserve0_1', 'nativeReserve0_1'] 
Found: calculateSwapReverse

Name: TMP_93 Function: calculateInGivenOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef

Name: foreignReserve0 Function: calculateInGivenOut
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: nativeReserve0 Function: calculateInGivenOut
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
High level cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [10]
    den: [-1]
    norm: 6
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [9]
    den: [-1]
    norm: 18
    link: None
    fields: []
    fintype: -1
New param cache [[[-1], [-1], 0, None, [], -1, 'u', 2], [[10], [-1], 6, None, [], -1, 'u', "'u'"], [[9], [-1], 18, None, [], -1, 'u', "'u'"]]
Old param cache: [[[-1], [-1], 'u', None, [], -1, 'u'], [[-1], [-1], 'u', None, [], -1, 'u'], [[-1], [-1], 'u', None, [], -1, 'u']]
[[-1], [-1], 0, None, [], -1, 'u', 2]

Name: amountOut Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
[[10], [-1], 6, None, [], -1, 'u', "'u'"]

Name: reserveIn Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
[[9], [-1], 18, None, [], -1, 'u', "'u'"]

Name: reserveOut Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
calculateSwapReverse(uint256,uint256,uint256)
Propogating All
Propogating All
reserveOut_1
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: reserveOut_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
reserveIn_1
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: reserveIn_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
Propogating All
amountOut_1
Ssa_name: amountOut_1, name: amountOut

Name: amountOut_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountOut_1 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Copied ftype
Propogating All
y2_1
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Propogating All
reserveOut_1
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: reserveOut_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
y4_1
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Propogating All
y4_1
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
reserveOut_1
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: reserveOut_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
reserveIn_1
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: reserveIn_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
XY_1
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
reserveIn_1
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: reserveIn_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
y2_1
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Propogating All
XY_1
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
numeratorC_1
Ssa_name: numeratorC_1, name: numeratorC

Name: numeratorC Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
numeratorB_1
Ssa_name: numeratorB_1, name: numeratorB

Name: numeratorB Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 2
Fields: 
Finance Type: undef
numeratorA_1
Ssa_name: numeratorA_1, name: numeratorA

Name: numeratorA Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
y2_1
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Propogating All
numerator_1
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
denominator_1
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Propogating All
amountIn_1
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_31 cleared
[i] XY cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: XY, Num: 1
Globalname: XY, contract_name: VaderMath
End popogation
TMP_31(uint256) = reserveIn_1 (c)* reserveOut_1
lnorm: 6 rnorm: 18
Source address: u
Source address: u
Source address: u
[i]Type for TMP_31

Name: TMP_31 Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
XY_1(uint256) := TMP_31(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for XY

Name: XY Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_32 cleared
[i] y2 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountOut_1, name: amountOut

Name: amountOut_1 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: amountOut_1, name: amountOut

Name: amountOut_1 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: y2, Num: 1
Globalname: y2, contract_name: VaderMath
End popogation
TMP_32(uint256) = amountOut_1 (c)* 2
lnorm: 0 rnorm: 0
Source address: u
[i]Type for TMP_32

Name: TMP_32 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
y2_1(uint256) := TMP_32(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
[i] TMP_33 cleared
[i] y4 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: y4, Num: 1
Globalname: y4, contract_name: VaderMath
End popogation
TMP_33(uint256) = y2_1 (c)* 2
lnorm: 0 rnorm: 0
Source address: u
[i]Type for TMP_33

Name: TMP_33 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 8
Fields: 
Finance Type: undef
XXXX
y4_1(uint256) := TMP_33(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 8
Fields: 
Finance Type: undef
XXXX
[i] TMP_34 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 8
Fields: 
Finance Type: undef
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 8
Fields: 
Finance Type: undef
End popogation
TMP_34(bool) = y4_1 < reserveOut_1
lnorm: 0 rnorm: 18
[i]Type for TMP_34

Name: TMP_34 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_35(None) = SOLIDITY_CALL require(bool,string)(TMP_34,VaderMath::calculateSwapReverse: Desired Output Exceeds Maximum Output Possible (1/4 of Liquidity Pool))
[i]Type for TMP_35

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_36 cleared
[i] TMP_37 cleared
[i] TMP_38 cleared
[i] TMP_39 cleared
[i] TMP_40 cleared
[i] numeratorA cleared
Propogating parameters and globals to SSA variables...
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 8
Fields: 
Finance Type: undef
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 8
Fields: 
Finance Type: undef
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: numeratorA_1, name: numeratorA

Name: numeratorA Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numeratorA, Num: 1
Globalname: numeratorA, contract_name: VaderMath
End popogation
TMP_36(uint256) = INTERNAL_CALL, VaderMath.root(uint256)(XY_1)
New param cache [[[10, 9], [-1], 24, None, [], -1, 'u', 'u']]
Old param cache: [[[], [], 'u', None, [], -1, 'u']]
[[10, 9], [-1], 24, None, [], -1, 'u', 'u']

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
root(uint256)
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
Propogating All
c_2
Ssa_name: c_2, name: c

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Propogating All
Propogating All
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_38', 'XY_1'])
Phi
[i]Type for a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_49 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_49(bool) = a_1 > 3
lnorm: 24 rnorm: 0
[i]Type for TMP_49

Name: TMP_49 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_56 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_56(bool) = a_1 != 0
[i]Type for TMP_56

Name: TMP_56 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_4, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: c, Num: 4
Globalname: c, contract_name: VaderMath
End popogation
c_4(uint256) := 1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: c_1, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 1
Globalname: c, contract_name: VaderMath
End popogation
c_1(uint256) := a_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_50 cleared
[i] TMP_51 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: VaderMath
End popogation
TMP_50(uint256) = a_1 (c)/ 2
lnorm: 24 rnorm: 0
Source address: u
lnorm: 24 rnorm: 0
10
9
-1
[i]Type for TMP_50

Name: TMP_50 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_51(uint256) = TMP_50 (c)+ 1
Source address: u
[i]Type for TMP_51

Name: TMP_51 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_51(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
[i] x cleared
[i] TMP_52 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
End popogation
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
c_2(uint256) := ϕ(['c_1', 'c_3'])
Phi

Name: c Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for c

Name: c Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
x_2(uint256) := ϕ(['x_3', 'x_1'])
Phi

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_52(bool) = x_2 < c_2
lnorm: 0 rnorm: 24
[i]Type for TMP_52

Name: TMP_52 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: c_3, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: c, Num: 3
Globalname: c, contract_name: VaderMath
End popogation
c_3(uint256) := x_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] TMP_53 cleared
[i] TMP_54 cleared
[i] TMP_55 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: x_3, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 3
Globalname: x, contract_name: VaderMath
End popogation
TMP_53(uint256) = a_1 (c)/ x_2
lnorm: 24 rnorm: 0
Source address: u
Source address: u
lnorm: 24 rnorm: 0
Source address: u
10
-1
[i]Type for TMP_53

Name: TMP_53 Function: root
Num: 10
Den: -1
Address: u
Norm: 24
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_54(uint256) = TMP_53 (c)+ x_2
9
[i]Type for TMP_54

Name: TMP_54 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_55(uint256) = TMP_54 (c)/ 2
lnorm: u rnorm: 0
lnorm: u rnorm: 0
[i]Type for TMP_55

Name: TMP_55 Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
x_3(uint256) := TMP_55(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_38', 'XY_1'])
Phi
[i]Type for a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_49 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_49(bool) = a_1 > 3
lnorm: 24 rnorm: 0
[i]Type for TMP_49

Name: TMP_49 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_56 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_56(bool) = a_1 != 0
[i]Type for TMP_56

Name: TMP_56 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_4, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: c, Num: 4
Globalname: c, contract_name: VaderMath
End popogation
c_4(uint256) := 1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: c_1, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 1
Globalname: c, contract_name: VaderMath
End popogation
c_1(uint256) := a_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_50 cleared
[i] TMP_51 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: VaderMath
End popogation
TMP_50(uint256) = a_1 (c)/ 2
lnorm: 24 rnorm: 0
Source address: u
lnorm: 24 rnorm: 0
10
9
-1
[i]Type for TMP_50

Name: TMP_50 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_51(uint256) = TMP_50 (c)+ 1
Source address: u
[i]Type for TMP_51

Name: TMP_51 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_51(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
[i] x cleared
[i] TMP_52 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
End popogation
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
c_2(uint256) := ϕ(['c_1', 'c_3'])
Phi

Name: c Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for c

Name: c Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
x_2(uint256) := ϕ(['x_3', 'x_1'])
Phi

Name: x Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for x

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
TMP_52(bool) = x_2 < c_2
lnorm: 0 rnorm: 24
10
9
-1
[i]Type for TMP_52

Name: TMP_52 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: c_3, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: c, Num: 3
Globalname: c, contract_name: VaderMath
End popogation
c_3(uint256) := x_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
[i] TMP_53 cleared
[i] TMP_54 cleared
[i] TMP_55 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: x_3, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 3
Globalname: x, contract_name: VaderMath
End popogation
TMP_53(uint256) = a_1 (c)/ x_2
lnorm: 24 rnorm: 0
Source address: u
Source address: u
lnorm: 24 rnorm: 0
Source address: u
Source address: u
[i]Type for TMP_53

Name: TMP_53 Function: root
Num: -1
Den: -1
Address: u
Norm: 24
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
TMP_54(uint256) = TMP_53 (c)+ x_2
Source address: u
[i]Type for TMP_54

Name: TMP_54 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
XXXX
TMP_55(uint256) = TMP_54 (c)/ 2
lnorm: 0 rnorm: 0
Source address: u
lnorm: 0 rnorm: 0
10
9
-1
[i]Type for TMP_55

Name: TMP_55 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
x_3(uint256) := TMP_55(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_36

Name: TMP_36 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_37(uint256) = reserveOut_1 (c)- y4_1
Source address: u
[i]Type for TMP_37

Name: TMP_37 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: undef
XXXX
TMP_38(uint256) = reserveIn_1 (c)* TMP_37
lnorm: 6 rnorm: 0
Source address: u
[i]Type for TMP_38

Name: TMP_38 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
XXXX
TMP_39(uint256) = INTERNAL_CALL, VaderMath.root(uint256)(TMP_38)
New param cache [[[10], [-1], 6, None, [], -1, 'u', 8]]
Old param cache: [[[], [], 'u', None, [], -1, 'u']]
[[10], [-1], 6, None, [], -1, 'u', 8]

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
root(uint256)
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Copied ftype
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
Propogating All
c_2
Ssa_name: c_2, name: c

Name: c Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Propogating All
Propogating All
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Copied ftype
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_38', 'XY_1'])
Phi
[i]Type for a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
XXXX
[i] TMP_49 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
End popogation
TMP_49(bool) = a_1 > 3
lnorm: 6 rnorm: 0
[i]Type for TMP_49

Name: TMP_49 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_56 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
End popogation
TMP_56(bool) = a_1 != 0
[i]Type for TMP_56

Name: TMP_56 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_4, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: c, Num: 4
Globalname: c, contract_name: VaderMath
End popogation
c_4(uint256) := 1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Ssa_name: c_1, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 1
Globalname: c, contract_name: VaderMath
End popogation
c_1(uint256) := a_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_50 cleared
[i] TMP_51 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: VaderMath
End popogation
TMP_50(uint256) = a_1 (c)/ 2
lnorm: 6 rnorm: 0
Source address: u
lnorm: 6 rnorm: 0
10
-1
[i]Type for TMP_50

Name: TMP_50 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
TMP_51(uint256) = TMP_50 (c)+ 1
Source address: u
[i]Type for TMP_51

Name: TMP_51 Function: root
Num: 10
Den: -1
Address: u
Norm: u
LF: None
Value: 5
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_51(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 5
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
[i] x cleared
[i] TMP_52 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
End popogation
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
c_2(uint256) := ϕ(['c_1', 'c_3'])
Phi

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef

Name: c Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for c

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
XXXX
x_2(uint256) := ϕ(['x_3', 'x_1'])
Phi

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 5
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for x

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
TMP_52(bool) = x_2 < c_2
lnorm: 0 rnorm: 6
[i]Type for TMP_52

Name: TMP_52 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: c_3, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: c, Num: 3
Globalname: c, contract_name: VaderMath
End popogation
c_3(uint256) := x_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
[i] TMP_53 cleared
[i] TMP_54 cleared
[i] TMP_55 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: x_3, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 3
Globalname: x, contract_name: VaderMath
End popogation
TMP_53(uint256) = a_1 (c)/ x_2
lnorm: 6 rnorm: 0
Source address: u
Source address: u
lnorm: 6 rnorm: 0
Source address: u
-1
9
[i]Type for TMP_53

Name: TMP_53 Function: root
Num: -1
Den: 9
Address: u
Norm: 6
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_54(uint256) = TMP_53 (c)+ x_2
[i]Type for TMP_54

Name: TMP_54 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_55(uint256) = TMP_54 (c)/ 2
lnorm: u rnorm: 0
lnorm: u rnorm: 0
[i]Type for TMP_55

Name: TMP_55 Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
x_3(uint256) := TMP_55(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_38', 'XY_1'])
Phi
[i]Type for a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
XXXX
[i] TMP_49 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
End popogation
TMP_49(bool) = a_1 > 3
lnorm: 6 rnorm: 0
[i]Type for TMP_49

Name: TMP_49 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_56 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
End popogation
TMP_56(bool) = a_1 != 0
[i]Type for TMP_56

Name: TMP_56 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_4, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: c, Num: 4
Globalname: c, contract_name: VaderMath
End popogation
c_4(uint256) := 1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Ssa_name: c_1, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: undef
Name: c, Num: 1
Globalname: c, contract_name: VaderMath
End popogation
c_1(uint256) := a_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_50 cleared
[i] TMP_51 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 5
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: VaderMath
End popogation
TMP_50(uint256) = a_1 (c)/ 2
lnorm: 6 rnorm: 0
Source address: u
lnorm: 6 rnorm: 0
10
-1
[i]Type for TMP_50

Name: TMP_50 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
TMP_51(uint256) = TMP_50 (c)+ 1
Source address: u
[i]Type for TMP_51

Name: TMP_51 Function: root
Num: 10
Den: -1
Address: u
Norm: u
LF: None
Value: 5
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_51(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 5
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
[i] x cleared
[i] TMP_52 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
End popogation
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
c_2(uint256) := ϕ(['c_1', 'c_3'])
Phi

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef

Name: c Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for c

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
XXXX
x_2(uint256) := ϕ(['x_3', 'x_1'])
Phi

Name: x Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 5
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 5
Fields: 
Finance Type: undef
XXXX
TMP_52(bool) = x_2 < c_2
lnorm: 0 rnorm: 6
10
-1
[i]Type for TMP_52

Name: TMP_52 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 5
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 5
Fields: 
Finance Type: undef
Ssa_name: c_3, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: c, Num: 3
Globalname: c, contract_name: VaderMath
End popogation
c_3(uint256) := x_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 5
Fields: 
Finance Type: undef
XXXX
[i] TMP_53 cleared
[i] TMP_54 cleared
[i] TMP_55 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 5
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 5
Fields: 
Finance Type: undef
Ssa_name: x_3, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 3
Globalname: x, contract_name: VaderMath
End popogation
TMP_53(uint256) = a_1 (c)/ x_2
lnorm: 6 rnorm: 0
Source address: u
Source address: u
lnorm: 6 rnorm: 0
Source address: u
Source address: u
[i]Type for TMP_53

Name: TMP_53 Function: root
Num: -1
Den: -1
Address: u
Norm: 6
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
TMP_54(uint256) = TMP_53 (c)+ x_2
Source address: u
[i]Type for TMP_54

Name: TMP_54 Function: root
Num: 10
Den: -1
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
XXXX
TMP_55(uint256) = TMP_54 (c)/ 2
lnorm: 0 rnorm: 0
Source address: u
lnorm: 0 rnorm: 0
10
-1
[i]Type for TMP_55

Name: TMP_55 Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
x_3(uint256) := TMP_55(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_39

Name: TMP_39 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_40(uint256) = TMP_36 (c)* TMP_39
lnorm: u rnorm: u
[i]Type for TMP_40

Name: TMP_40 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
numeratorA_1(uint256) := TMP_40(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for numeratorA

Name: numeratorA Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_41 cleared
[i] numeratorB cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: numeratorB_1, name: numeratorB

Name: numeratorB Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: numeratorB, Num: 1
Globalname: numeratorB, contract_name: VaderMath
End popogation
TMP_41(uint256) = y2_1 (c)* reserveIn_1
lnorm: 0 rnorm: 6
Source address: u
[i]Type for TMP_41

Name: TMP_41 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
numeratorB_1(uint256) := TMP_41(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for numeratorB

Name: numeratorB Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
[i] numeratorC cleared
Propogating parameters and globals to SSA variables...
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: numeratorC_1, name: numeratorC

Name: numeratorC Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numeratorC, Num: 1
Globalname: numeratorC, contract_name: VaderMath
End popogation
numeratorC_1(uint256) := XY_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for numeratorC

Name: numeratorC Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_42 cleared
[i] TMP_43 cleared
[i] numerator cleared
Propogating parameters and globals to SSA variables...
Ssa_name: numeratorC_1, name: numeratorC

Name: numeratorC Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: numeratorB_1, name: numeratorB

Name: numeratorB Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: numeratorA_1, name: numeratorA

Name: numeratorA Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numeratorA, Num: 1
Globalname: numeratorA, contract_name: VaderMath
Ssa_name: numeratorC_1, name: numeratorC

Name: numeratorC Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: numeratorB_1, name: numeratorB

Name: numeratorB Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: numeratorA_1, name: numeratorA

Name: numeratorA Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numeratorA, Num: 1
Globalname: numeratorA, contract_name: VaderMath
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numerator, Num: 1
Globalname: numerator, contract_name: VaderMath
End popogation
TMP_42(uint256) = numeratorC_1 (c)- numeratorA_1
Source address: u
[i]Type for TMP_42

Name: TMP_42 Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_43(uint256) = TMP_42 (c)- numeratorB_1
[i]Type for TMP_43

Name: TMP_43 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
numerator_1(uint256) := TMP_43(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for numerator

Name: numerator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] denominator cleared
Propogating parameters and globals to SSA variables...
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: denominator, Num: 1
Globalname: denominator, contract_name: VaderMath
End popogation
denominator_1(uint256) := y2_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for denominator

Name: denominator Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
[i] TMP_44 cleared
[i] amountIn cleared
Propogating parameters and globals to SSA variables...
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numerator, Num: 1
Globalname: numerator, contract_name: VaderMath
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numerator, Num: 1
Globalname: numerator, contract_name: VaderMath
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: amountIn, Num: 1
Globalname: amountIn, contract_name: VaderMath
End popogation
TMP_44(uint256) = numerator_1 (c)/ denominator_1
lnorm: u rnorm: 0
lnorm: u rnorm: 0
[i]Type for TMP_44

Name: TMP_44 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
amountIn_1(uint256) := TMP_44(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for amountIn

Name: amountIn Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
End popogation
RETURN amountIn_1
RETURN

Name: amountIn Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_31 cleared
[i] XY cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: XY, Num: 1
Globalname: XY, contract_name: VaderMath
End popogation
TMP_31(uint256) = reserveIn_1 (c)* reserveOut_1
lnorm: 6 rnorm: 18
Source address: u
Source address: u
Source address: u
[i]Type for TMP_31

Name: TMP_31 Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
XY_1(uint256) := TMP_31(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for XY

Name: XY Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_32 cleared
[i] y2 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountOut_1, name: amountOut

Name: amountOut_1 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: amountOut_1, name: amountOut

Name: amountOut_1 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: y2, Num: 1
Globalname: y2, contract_name: VaderMath
End popogation
TMP_32(uint256) = amountOut_1 (c)* 2
lnorm: 0 rnorm: 0
Source address: u
[i]Type for TMP_32

Name: TMP_32 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
y2_1(uint256) := TMP_32(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
[i] TMP_33 cleared
[i] y4 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: undef
Name: y4, Num: 1
Globalname: y4, contract_name: VaderMath
End popogation
TMP_33(uint256) = y2_1 (c)* 2
lnorm: 0 rnorm: 0
Source address: u
[i]Type for TMP_33

Name: TMP_33 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 8
Fields: 
Finance Type: undef
XXXX
y4_1(uint256) := TMP_33(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 8
Fields: 
Finance Type: undef
XXXX
[i] TMP_34 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 8
Fields: 
Finance Type: undef
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 8
Fields: 
Finance Type: undef
End popogation
TMP_34(bool) = y4_1 < reserveOut_1
lnorm: 0 rnorm: 18
[i]Type for TMP_34

Name: TMP_34 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_35(None) = SOLIDITY_CALL require(bool,string)(TMP_34,VaderMath::calculateSwapReverse: Desired Output Exceeds Maximum Output Possible (1/4 of Liquidity Pool))
[i]Type for TMP_35

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_36 cleared
[i] TMP_37 cleared
[i] TMP_38 cleared
[i] TMP_39 cleared
[i] TMP_40 cleared
[i] numeratorA cleared
Propogating parameters and globals to SSA variables...
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 8
Fields: 
Finance Type: undef
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 8
Fields: 
Finance Type: undef
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: numeratorA_1, name: numeratorA

Name: numeratorA Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numeratorA, Num: 1
Globalname: numeratorA, contract_name: VaderMath
End popogation
TMP_36(uint256) = INTERNAL_CALL, VaderMath.root(uint256)(XY_1)
New param cache [[[10, 9], [-1], 24, None, [], -1, 'u', 'u']]
Old param cache: [[[], [], 'u', None, [], -1, 'u']]
[[10, 9], [-1], 24, None, [], -1, 'u', 'u']

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
root(uint256)
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
Propogating All
c_2
Ssa_name: c_2, name: c

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 5
Fields: 
Finance Type: undef
Propogating All
Propogating All
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 5
Fields: 
Finance Type: undef
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 5
Fields: 
Finance Type: undef
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_38', 'XY_1'])
Phi
[i]Type for a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_49 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_49(bool) = a_1 > 3
lnorm: 24 rnorm: 0
[i]Type for TMP_49

Name: TMP_49 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_56 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_56(bool) = a_1 != 0
[i]Type for TMP_56

Name: TMP_56 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_4, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: c, Num: 4
Globalname: c, contract_name: VaderMath
End popogation
c_4(uint256) := 1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: c_1, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: undef
Name: c, Num: 1
Globalname: c, contract_name: VaderMath
End popogation
c_1(uint256) := a_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_50 cleared
[i] TMP_51 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 5
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: VaderMath
End popogation
TMP_50(uint256) = a_1 (c)/ 2
lnorm: 24 rnorm: 0
Source address: u
lnorm: 24 rnorm: 0
10
9
-1
[i]Type for TMP_50

Name: TMP_50 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_51(uint256) = TMP_50 (c)+ 1
Source address: u
[i]Type for TMP_51

Name: TMP_51 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_51(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
[i] x cleared
[i] TMP_52 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 5
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 5
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 5
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
End popogation
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 5
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
c_2(uint256) := ϕ(['c_1', 'c_3'])
Phi

Name: c Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 5
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for c

Name: c Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
x_2(uint256) := ϕ(['x_3', 'x_1'])
Phi

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
TMP_52(bool) = x_2 < c_2
lnorm: 0 rnorm: 24
[i]Type for TMP_52

Name: TMP_52 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: c_3, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 5
Fields: 
Finance Type: undef
Name: c, Num: 3
Globalname: c, contract_name: VaderMath
End popogation
c_3(uint256) := x_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
[i] TMP_53 cleared
[i] TMP_54 cleared
[i] TMP_55 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: x_3, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 3
Globalname: x, contract_name: VaderMath
End popogation
TMP_53(uint256) = a_1 (c)/ x_2
lnorm: 24 rnorm: 0
Source address: u
Source address: u
lnorm: 24 rnorm: 0
Source address: u
9
-1
[i]Type for TMP_53

Name: TMP_53 Function: root
Num: 9
Den: -1
Address: u
Norm: 24
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
TMP_54(uint256) = TMP_53 (c)+ x_2
10
10
-1
lnorm: 24 rnorm: 0
Source address: u
[i]Type for TMP_54

Name: TMP_54 Function: root
Num: 10
Den: -1
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
XXXX
TMP_55(uint256) = TMP_54 (c)/ 2
lnorm: 0 rnorm: 0
Source address: u
lnorm: 0 rnorm: 0
10
-1
[i]Type for TMP_55

Name: TMP_55 Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
x_3(uint256) := TMP_55(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_38', 'XY_1'])
Phi
[i]Type for a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_49 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_49(bool) = a_1 > 3
lnorm: 24 rnorm: 0
[i]Type for TMP_49

Name: TMP_49 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_56 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_56(bool) = a_1 != 0
[i]Type for TMP_56

Name: TMP_56 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_4, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: c, Num: 4
Globalname: c, contract_name: VaderMath
End popogation
c_4(uint256) := 1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: c_1, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 1
Globalname: c, contract_name: VaderMath
End popogation
c_1(uint256) := a_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_50 cleared
[i] TMP_51 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: VaderMath
End popogation
TMP_50(uint256) = a_1 (c)/ 2
lnorm: 24 rnorm: 0
Source address: u
lnorm: 24 rnorm: 0
10
9
-1
[i]Type for TMP_50

Name: TMP_50 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_51(uint256) = TMP_50 (c)+ 1
Source address: u
[i]Type for TMP_51

Name: TMP_51 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_51(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
[i] x cleared
[i] TMP_52 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
End popogation
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
c_2(uint256) := ϕ(['c_1', 'c_3'])
Phi

Name: c Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for c

Name: c Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
x_2(uint256) := ϕ(['x_3', 'x_1'])
Phi

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
TMP_52(bool) = x_2 < c_2
lnorm: 0 rnorm: 24
[i]Type for TMP_52

Name: TMP_52 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: c_3, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: c, Num: 3
Globalname: c, contract_name: VaderMath
End popogation
c_3(uint256) := x_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
[i] TMP_53 cleared
[i] TMP_54 cleared
[i] TMP_55 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: x_3, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 3
Globalname: x, contract_name: VaderMath
End popogation
TMP_53(uint256) = a_1 (c)/ x_2
lnorm: 24 rnorm: 0
Source address: u
Source address: u
lnorm: 24 rnorm: 0
Source address: u
9
-1
[i]Type for TMP_53

Name: TMP_53 Function: root
Num: 9
Den: -1
Address: u
Norm: 24
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
TMP_54(uint256) = TMP_53 (c)+ x_2
10
10
-1
lnorm: 24 rnorm: 0
Source address: u
[i]Type for TMP_54

Name: TMP_54 Function: root
Num: 10
Den: -1
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
XXXX
TMP_55(uint256) = TMP_54 (c)/ 2
lnorm: 0 rnorm: 0
Source address: u
lnorm: 0 rnorm: 0
10
-1
[i]Type for TMP_55

Name: TMP_55 Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
x_3(uint256) := TMP_55(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_36

Name: TMP_36 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_37(uint256) = reserveOut_1 (c)- y4_1
Source address: u
[i]Type for TMP_37

Name: TMP_37 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: undef
XXXX
TMP_38(uint256) = reserveIn_1 (c)* TMP_37
lnorm: 6 rnorm: 0
Source address: u
[i]Type for TMP_38

Name: TMP_38 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
XXXX
TMP_39(uint256) = INTERNAL_CALL, VaderMath.root(uint256)(TMP_38)
New param cache [[[10], [-1], 6, None, [], -1, 'u', 8]]
Old param cache: [[[], [], 'u', None, [], -1, 'u']]
[[10], [-1], 6, None, [], -1, 'u', 8]

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
root(uint256)
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Copied ftype
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
Propogating All
c_2
Ssa_name: c_2, name: c

Name: c Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Propogating All
Propogating All
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Copied ftype
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_38', 'XY_1'])
Phi
[i]Type for a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
XXXX
[i] TMP_49 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
End popogation
TMP_49(bool) = a_1 > 3
lnorm: 6 rnorm: 0
[i]Type for TMP_49

Name: TMP_49 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_56 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
End popogation
TMP_56(bool) = a_1 != 0
[i]Type for TMP_56

Name: TMP_56 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_4, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: c, Num: 4
Globalname: c, contract_name: VaderMath
End popogation
c_4(uint256) := 1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Ssa_name: c_1, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 1
Globalname: c, contract_name: VaderMath
End popogation
c_1(uint256) := a_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_50 cleared
[i] TMP_51 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: VaderMath
End popogation
TMP_50(uint256) = a_1 (c)/ 2
lnorm: 6 rnorm: 0
Source address: u
lnorm: 6 rnorm: 0
10
-1
[i]Type for TMP_50

Name: TMP_50 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
TMP_51(uint256) = TMP_50 (c)+ 1
Source address: u
[i]Type for TMP_51

Name: TMP_51 Function: root
Num: 10
Den: -1
Address: u
Norm: u
LF: None
Value: 5
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_51(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 5
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
[i] x cleared
[i] TMP_52 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
End popogation
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
c_2(uint256) := ϕ(['c_1', 'c_3'])
Phi

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for c

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
XXXX
x_2(uint256) := ϕ(['x_3', 'x_1'])
Phi

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 5
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
TMP_52(bool) = x_2 < c_2
lnorm: 0 rnorm: 6
10
-1
[i]Type for TMP_52

Name: TMP_52 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: c_3, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: c, Num: 3
Globalname: c, contract_name: VaderMath
End popogation
c_3(uint256) := x_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
[i] TMP_53 cleared
[i] TMP_54 cleared
[i] TMP_55 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: x_3, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 3
Globalname: x, contract_name: VaderMath
End popogation
TMP_53(uint256) = a_1 (c)/ x_2
lnorm: 6 rnorm: 0
Source address: u
Source address: u
lnorm: 6 rnorm: 0
Source address: u
Source address: u
[i]Type for TMP_53

Name: TMP_53 Function: root
Num: -1
Den: -1
Address: u
Norm: 6
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_54(uint256) = TMP_53 (c)+ x_2
Source address: u
[i]Type for TMP_54

Name: TMP_54 Function: root
Num: 10
Den: -1
Address: u
Norm: u
LF: None
Value: 5
Fields: 
Finance Type: undef
XXXX
TMP_55(uint256) = TMP_54 (c)/ 2
lnorm: 0 rnorm: 0
Source address: u
lnorm: 0 rnorm: 0
10
-1
[i]Type for TMP_55

Name: TMP_55 Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
x_3(uint256) := TMP_55(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_38', 'XY_1'])
Phi
[i]Type for a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
XXXX
[i] TMP_49 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
End popogation
TMP_49(bool) = a_1 > 3
lnorm: 6 rnorm: 0
[i]Type for TMP_49

Name: TMP_49 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_56 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
End popogation
TMP_56(bool) = a_1 != 0
[i]Type for TMP_56

Name: TMP_56 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_4, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: c, Num: 4
Globalname: c, contract_name: VaderMath
End popogation
c_4(uint256) := 1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Ssa_name: c_1, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: undef
Name: c, Num: 1
Globalname: c, contract_name: VaderMath
End popogation
c_1(uint256) := a_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_50 cleared
[i] TMP_51 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 5
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: VaderMath
End popogation
TMP_50(uint256) = a_1 (c)/ 2
lnorm: 6 rnorm: 0
Source address: u
lnorm: 6 rnorm: 0
10
-1
[i]Type for TMP_50

Name: TMP_50 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
TMP_51(uint256) = TMP_50 (c)+ 1
Source address: u
[i]Type for TMP_51

Name: TMP_51 Function: root
Num: 10
Den: -1
Address: u
Norm: u
LF: None
Value: 5
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_51(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 5
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
[i] x cleared
[i] TMP_52 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
End popogation
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
c_2(uint256) := ϕ(['c_1', 'c_3'])
Phi

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for c

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
XXXX
x_2(uint256) := ϕ(['x_3', 'x_1'])
Phi

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 5
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_52(bool) = x_2 < c_2
lnorm: 0 rnorm: 6
10
-1
[i]Type for TMP_52

Name: TMP_52 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: c_3, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: c, Num: 3
Globalname: c, contract_name: VaderMath
End popogation
c_3(uint256) := x_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] TMP_53 cleared
[i] TMP_54 cleared
[i] TMP_55 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: x_3, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 3
Globalname: x, contract_name: VaderMath
End popogation
TMP_53(uint256) = a_1 (c)/ x_2
lnorm: 6 rnorm: 0
Source address: u
Source address: u
lnorm: 6 rnorm: 0
Source address: u
Source address: u
[i]Type for TMP_53

Name: TMP_53 Function: root
Num: -1
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
TMP_54(uint256) = TMP_53 (c)+ x_2
Source address: u
[i]Type for TMP_54

Name: TMP_54 Function: root
Num: 10
Den: -1
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
XXXX
TMP_55(uint256) = TMP_54 (c)/ 2
lnorm: 0 rnorm: 0
Source address: u
lnorm: 0 rnorm: 0
10
-1
[i]Type for TMP_55

Name: TMP_55 Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
x_3(uint256) := TMP_55(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_39

Name: TMP_39 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_40(uint256) = TMP_36 (c)* TMP_39
lnorm: u rnorm: u
[i]Type for TMP_40

Name: TMP_40 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
numeratorA_1(uint256) := TMP_40(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for numeratorA

Name: numeratorA Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_41 cleared
[i] numeratorB cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: numeratorB_1, name: numeratorB

Name: numeratorB Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: numeratorB, Num: 1
Globalname: numeratorB, contract_name: VaderMath
End popogation
TMP_41(uint256) = y2_1 (c)* reserveIn_1
lnorm: 0 rnorm: 6
Source address: u
[i]Type for TMP_41

Name: TMP_41 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
numeratorB_1(uint256) := TMP_41(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for numeratorB

Name: numeratorB Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
[i] numeratorC cleared
Propogating parameters and globals to SSA variables...
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: numeratorC_1, name: numeratorC

Name: numeratorC Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numeratorC, Num: 1
Globalname: numeratorC, contract_name: VaderMath
End popogation
numeratorC_1(uint256) := XY_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for numeratorC

Name: numeratorC Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_42 cleared
[i] TMP_43 cleared
[i] numerator cleared
Propogating parameters and globals to SSA variables...
Ssa_name: numeratorC_1, name: numeratorC

Name: numeratorC Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: numeratorB_1, name: numeratorB

Name: numeratorB Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: numeratorA_1, name: numeratorA

Name: numeratorA Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numeratorA, Num: 1
Globalname: numeratorA, contract_name: VaderMath
Ssa_name: numeratorC_1, name: numeratorC

Name: numeratorC Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: numeratorB_1, name: numeratorB

Name: numeratorB Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: numeratorA_1, name: numeratorA

Name: numeratorA Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numeratorA, Num: 1
Globalname: numeratorA, contract_name: VaderMath
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numerator, Num: 1
Globalname: numerator, contract_name: VaderMath
End popogation
TMP_42(uint256) = numeratorC_1 (c)- numeratorA_1
Source address: u
[i]Type for TMP_42

Name: TMP_42 Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_43(uint256) = TMP_42 (c)- numeratorB_1
[i]Type for TMP_43

Name: TMP_43 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
numerator_1(uint256) := TMP_43(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for numerator

Name: numerator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] denominator cleared
Propogating parameters and globals to SSA variables...
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: denominator, Num: 1
Globalname: denominator, contract_name: VaderMath
End popogation
denominator_1(uint256) := y2_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for denominator

Name: denominator Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
[i] TMP_44 cleared
[i] amountIn cleared
Propogating parameters and globals to SSA variables...
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numerator, Num: 1
Globalname: numerator, contract_name: VaderMath
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numerator, Num: 1
Globalname: numerator, contract_name: VaderMath
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: amountIn, Num: 1
Globalname: amountIn, contract_name: VaderMath
End popogation
TMP_44(uint256) = numerator_1 (c)/ denominator_1
lnorm: u rnorm: 0
lnorm: u rnorm: 0
[i]Type for TMP_44

Name: TMP_44 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
amountIn_1(uint256) := TMP_44(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for amountIn

Name: amountIn Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
End popogation
RETURN amountIn_1
RETURN

Name: amountIn Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u
Source address: u
[i]Type for TMP_94

Name: TMP_94 Function: calculateInGivenOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
RETURN TMP_94
RETURN

Name: TMP_94 Function: calculateInGivenOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef


amountOut_1(uint256) := ϕ(['amountOut_1'])
path_1 (-> [])(address[]) := ϕ(['path_1 (-> [])'])
factory_17(IVaderPoolFactory) := ϕ(['factory_13', 'factory_0', 'factory_16', 'factory_10', 'factory_19', 'factory_21', 'factory_15', 'factory_26', 'factory_1', 'factory_24', 'factory_7'])
REF_40 -> LENGTH path_1 (-> [])
TMP_85(bool) = REF_40 == 2
CONDITION TMP_85
TMP_86(address) = HIGH_LEVEL_CALL, dest:factory_17(IVaderPoolFactory), function:nativeAsset, arguments:[]  
factory_18(IVaderPoolFactory) := ϕ(['factory_13', 'factory_16', 'factory_10', 'factory_19', 'factory_21', 'factory_15', 'factory_26', 'factory_1', 'factory_24', 'factory_17', 'factory_7'])
nativeAsset_1(address) := TMP_86(address)
REF_43(address) -> path_1 (-> [])[0]
REF_44(address) -> path_1 (-> [])[1]
TMP_87(IVaderPool) = HIGH_LEVEL_CALL, dest:factory_18(IVaderPoolFactory), function:getPool, arguments:['REF_43', 'REF_44']  
factory_19(IVaderPoolFactory) := ϕ(['factory_13', 'factory_16', 'factory_10', 'factory_19', 'factory_21', 'factory_15', 'factory_26', 'factory_1', 'factory_24', 'factory_18', 'factory_7'])
pool_1(IVaderPool) := TMP_87(IVaderPool)
REF_50(address) -> path_1 (-> [])[0]
REF_51(address) -> path_1 (-> [])[1]
TMP_91(IVaderPool) = HIGH_LEVEL_CALL, dest:factory_17(IVaderPoolFactory), function:getPool, arguments:['REF_50', 'REF_51']  
factory_20(IVaderPoolFactory) := ϕ(['factory_13', 'factory_16', 'factory_10', 'factory_19', 'factory_21', 'factory_15', 'factory_26', 'factory_1', 'factory_24', 'factory_7'])
pool0_1(IVaderPool) := TMP_91(IVaderPool)
REF_53(address) -> path_1 (-> [])[1]
REF_54(address) -> path_1 (-> [])[2]
TMP_92(IVaderPool) = HIGH_LEVEL_CALL, dest:factory_20(IVaderPoolFactory), function:getPool, arguments:['REF_53', 'REF_54']  
factory_21(IVaderPoolFactory) := ϕ(['factory_13', 'factory_16', 'factory_10', 'factory_19', 'factory_21', 'factory_15', 'factory_26', 'factory_20', 'factory_1', 'factory_24', 'factory_7'])
pool1_1(IVaderPool) := TMP_92(IVaderPool)
TUPLE_3(uint112,uint112,uint32) = HIGH_LEVEL_CALL, dest:pool_1(IVaderPool), function:getReserves, arguments:[]  
nativeReserve_1(uint256)= UNPACK TUPLE_3 index: 0 
foreignReserve_1(uint256)= UNPACK TUPLE_3 index: 1 
REF_46(address) -> path_1 (-> [])[0]
TMP_88(bool) = REF_46 == nativeAsset_1
CONDITION TMP_88
TMP_89(uint256) = LIBRARY_CALL, dest:VaderMath, function:VaderMath.calculateSwapReverse(uint256,uint256,uint256), arguments:['amountOut_1', 'nativeReserve_1', 'foreignReserve_1'] 
RETURN TMP_89
TMP_90(uint256) = LIBRARY_CALL, dest:VaderMath, function:VaderMath.calculateSwapReverse(uint256,uint256,uint256), arguments:['amountOut_1', 'foreignReserve_1', 'nativeReserve_1'] 
RETURN TMP_90
TUPLE_4(uint112,uint112,uint32) = HIGH_LEVEL_CALL, dest:pool0_1(IVaderPool), function:getReserves, arguments:[]  
nativeReserve0_1(uint256)= UNPACK TUPLE_4 index: 0 
foreignReserve0_1(uint256)= UNPACK TUPLE_4 index: 1 
TUPLE_5(uint112,uint112,uint32) = HIGH_LEVEL_CALL, dest:pool1_1(IVaderPool), function:getReserves, arguments:[]  
nativeReserve1_1(uint256)= UNPACK TUPLE_5 index: 0 
foreignReserve1_1(uint256)= UNPACK TUPLE_5 index: 1 
TMP_93(uint256) = LIBRARY_CALL, dest:VaderMath, function:VaderMath.calculateSwapReverse(uint256,uint256,uint256), arguments:['amountOut_1', 'nativeReserve1_1', 'foreignReserve1_1'] 
TMP_94(uint256) = LIBRARY_CALL, dest:VaderMath, function:VaderMath.calculateSwapReverse(uint256,uint256,uint256), arguments:['TMP_93', 'foreignReserve0_1', 'nativeReserve0_1'] 
RETURN TMP_94


[i] amountOut cleared
[i] path cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: amountOut_1, name: amountOut

Name: amountOut_1 Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountOut_1 Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountOut, Num: 1
Globalname: amountOut, contract_name: VaderRouter
Ssa_name: path_1 (-> []), name: path

Name: path Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: -992

Name: path_1 (-> []) Function: calculateInGivenOut
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: factory_17, name: factory

Name: factory Function: calculateInGivenOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
amountOut_1(uint256) := ϕ(['amountOut_1'])
Phi

Name: amountOut_1 Function: swapTokensForExactTokens
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for amountOut

Name: amountOut Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
path_1 (-> [])(address[]) := ϕ(['path_1 (-> [])'])
Phi
[i]Type for path

Name: path Function: calculateInGivenOut
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
factory_17(IVaderPoolFactory) := ϕ(['factory_13', 'factory_0', 'factory_16', 'factory_10', 'factory_19', 'factory_21', 'factory_15', 'factory_26', 'factory_1', 'factory_24', 'factory_7'])
Phi
[i]Type for factory

Name: factory Function: calculateInGivenOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_85 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: path_1 (-> []), name: path

Name: path Function: calculateInGivenOut
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: path_1 (-> []), name: path

Name: path Function: calculateInGivenOut
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
REF_40 -> LENGTH path_1 (-> [])
[i]Type for REF_40

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_85(bool) = REF_40 == 2
[i]Type for TMP_85

Name: TMP_85 Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_86 cleared
[i] nativeAsset cleared
Propogating parameters and globals to SSA variables...
Ssa_name: factory_17, name: factory

Name: factory Function: calculateInGivenOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: factory_17, name: factory

Name: factory Function: calculateInGivenOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeAsset_1, name: nativeAsset

Name: nativeAsset Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Name: nativeAsset, Num: 1
Globalname: nativeAsset, contract_name: VaderRouter
End popogation
Ssa_name: factory_18, name: factory

Name: factory Function: calculateInGivenOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_86(address) = HIGH_LEVEL_CALL, dest:factory_17(IVaderPoolFactory), function:nativeAsset, arguments:[]  
High Call: nativeAsset
Running querryfc
Found: None
Written func info: IVaderPoolFactory, nativeAsset
Retvar: ('c', ['global:nativeAsset'], ['-1'], 18, "'u'", 'u')
{'global:_owner': 1, 'global:_tokenApprovals': 2, 'global:_owners': 3, 'swap:to': -999, 'mint:to': -998, 'mint:TMP_139': 4, 'global:this': 4, 'None:None': 5, 'mint:foreignAsset': 6, 'swap:_nativeAsset': 7, 'swap:_foreignAsset': 8, 'global:nativeAsset': 9, 'global:foreignAsset': 10, 'global:_ZERO_ADDRESS': 11, 'removeLiquidity:tokenA': -997, 'removeLiquidity:tokenB': -996, 'removeLiquidity:to': -995, 'swapExactTokensForTokens:path': -994, 'swapExactTokensForTokens:to': -993, 'swapTokensForExactTokens:path': -992, 'swapTokensForExactTokens:to': -991, 'calculateInGivenOut:path': -990, 'calculateOutGivenIn:path': -989}
([9], [-1], 18, "'u'", 'u', -1)
[i]Type for TMP_86

Name: TMP_86 Function: calculateInGivenOut
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
factory_18(IVaderPoolFactory) := ϕ(['factory_13', 'factory_16', 'factory_10', 'factory_19', 'factory_21', 'factory_15', 'factory_26', 'factory_1', 'factory_24', 'factory_17', 'factory_7'])
Phi
[i]Type for factory

Name: factory Function: calculateInGivenOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
nativeAsset_1(address) := TMP_86(address)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for nativeAsset

Name: nativeAsset Function: calculateInGivenOut
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
[i] TMP_87 cleared
[i] pool cleared
Propogating parameters and globals to SSA variables...
Ssa_name: path_1 (-> []), name: path

Name: path Function: calculateInGivenOut
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: factory_18, name: factory

Name: factory Function: calculateInGivenOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: path_1 (-> []), name: path

Name: path Function: calculateInGivenOut
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: factory_18, name: factory

Name: factory Function: calculateInGivenOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: pool_1, name: pool

Name: pool Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pool, Num: 1
Globalname: pool, contract_name: VaderRouter
End popogation
Ssa_name: factory_19, name: factory

Name: factory Function: calculateInGivenOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_43(address) -> path_1 (-> [])[0]
INDEX
REFERENCE LEFT VALUE PROPAGATION
Source address: -992
[i]Type for REF_43

Name: path Function: calculateInGivenOut
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_44(address) -> path_1 (-> [])[1]
INDEX
REFERENCE LEFT VALUE PROPAGATION
Source address: -992
[i]Type for REF_44

Name: path Function: calculateInGivenOut
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_87(IVaderPool) = HIGH_LEVEL_CALL, dest:factory_18(IVaderPoolFactory), function:getPool, arguments:['REF_43', 'REF_44']  
High Call: getPool
Running querryfc
Found: None
Written func info: IVaderPoolFactory, getPool
[i]Type for TMP_87

Name: TMP_87 Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
factory_19(IVaderPoolFactory) := ϕ(['factory_13', 'factory_16', 'factory_10', 'factory_19', 'factory_21', 'factory_15', 'factory_26', 'factory_1', 'factory_24', 'factory_18', 'factory_7'])
Phi
[i]Type for factory

Name: factory Function: calculateInGivenOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
pool_1(IVaderPool) := TMP_87(IVaderPool)
asgn
Finance type key: (-1, -1)
[i]Type for pool

Name: pool Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_91 cleared
[i] pool0 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: path_1 (-> []), name: path

Name: path Function: calculateInGivenOut
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: factory_17, name: factory

Name: factory Function: calculateInGivenOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: path_1 (-> []), name: path

Name: path Function: calculateInGivenOut
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: factory_17, name: factory

Name: factory Function: calculateInGivenOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: pool0_1, name: pool0

Name: pool0 Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pool0, Num: 1
Globalname: pool0, contract_name: VaderRouter
End popogation
Ssa_name: factory_20, name: factory

Name: factory Function: calculateInGivenOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_50(address) -> path_1 (-> [])[0]
INDEX
REFERENCE LEFT VALUE PROPAGATION
Source address: -992
[i]Type for REF_50

Name: path Function: calculateInGivenOut
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_51(address) -> path_1 (-> [])[1]
INDEX
REFERENCE LEFT VALUE PROPAGATION
Source address: -992
[i]Type for REF_51

Name: path Function: calculateInGivenOut
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_91(IVaderPool) = HIGH_LEVEL_CALL, dest:factory_17(IVaderPoolFactory), function:getPool, arguments:['REF_50', 'REF_51']  
High Call: getPool
Running querryfc
Found: None
Written func info: IVaderPoolFactory, getPool
[i]Type for TMP_91

Name: TMP_91 Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
factory_20(IVaderPoolFactory) := ϕ(['factory_13', 'factory_16', 'factory_10', 'factory_19', 'factory_21', 'factory_15', 'factory_26', 'factory_1', 'factory_24', 'factory_7'])
Phi
[i]Type for factory

Name: factory Function: calculateInGivenOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
pool0_1(IVaderPool) := TMP_91(IVaderPool)
asgn
Finance type key: (-1, -1)
[i]Type for pool0

Name: pool0 Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_92 cleared
[i] pool1 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: path_1 (-> []), name: path

Name: path Function: calculateInGivenOut
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: factory_20, name: factory

Name: factory Function: calculateInGivenOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: factory_20, name: factory

Name: factory Function: calculateInGivenOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: path_1 (-> []), name: path

Name: path Function: calculateInGivenOut
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: pool1_1, name: pool1

Name: pool1 Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pool1, Num: 1
Globalname: pool1, contract_name: VaderRouter
End popogation
Ssa_name: factory_21, name: factory

Name: factory Function: calculateInGivenOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_53(address) -> path_1 (-> [])[1]
INDEX
REFERENCE LEFT VALUE PROPAGATION
Source address: -992
[i]Type for REF_53

Name: path Function: calculateInGivenOut
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_54(address) -> path_1 (-> [])[2]
INDEX
REFERENCE LEFT VALUE PROPAGATION
Source address: -992
[i]Type for REF_54

Name: path Function: calculateInGivenOut
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_92(IVaderPool) = HIGH_LEVEL_CALL, dest:factory_20(IVaderPoolFactory), function:getPool, arguments:['REF_53', 'REF_54']  
High Call: getPool
Running querryfc
Found: None
Written func info: IVaderPoolFactory, getPool
[i]Type for TMP_92

Name: TMP_92 Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
factory_21(IVaderPoolFactory) := ϕ(['factory_13', 'factory_16', 'factory_10', 'factory_19', 'factory_21', 'factory_15', 'factory_26', 'factory_20', 'factory_1', 'factory_24', 'factory_7'])
Phi
[i]Type for factory

Name: factory Function: calculateInGivenOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
pool1_1(IVaderPool) := TMP_92(IVaderPool)
asgn
Finance type key: (-1, -1)
[i]Type for pool1

Name: pool1 Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] nativeReserve cleared
[i] foreignReserve cleared
Propogating parameters and globals to SSA variables...
Ssa_name: pool_1, name: pool

Name: pool Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pool, Num: 1
Globalname: pool, contract_name: VaderRouter
Ssa_name: pool_1, name: pool

Name: pool Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pool, Num: 1
Globalname: pool, contract_name: VaderRouter
Ssa_name: nativeReserve_1, name: nativeReserve

Name: nativeReserve Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Name: nativeReserve, Num: 1
Globalname: nativeReserve, contract_name: VaderRouter
Ssa_name: foreignReserve_1, name: foreignReserve

Name: foreignReserve Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Name: foreignReserve, Num: 1
Globalname: foreignReserve, contract_name: VaderRouter
End popogation
TUPLE_3(uint112,uint112,uint32) = HIGH_LEVEL_CALL, dest:pool_1(IVaderPool), function:getReserves, arguments:[]  
High Call: getReserves
Running querryfc
Found: None
Written func info: IVaderPool, getReserves
Retvar: ('c', ['global:nativeAsset'], ['-1'], 18, "'u'", 'u')
{'global:_owner': 1, 'global:_tokenApprovals': 2, 'global:_owners': 3, 'swap:to': -999, 'mint:to': -998, 'mint:TMP_139': 4, 'global:this': 4, 'None:None': 5, 'mint:foreignAsset': 6, 'swap:_nativeAsset': 7, 'swap:_foreignAsset': 8, 'global:nativeAsset': 9, 'global:foreignAsset': 10, 'global:_ZERO_ADDRESS': 11, 'removeLiquidity:tokenA': -997, 'removeLiquidity:tokenB': -996, 'removeLiquidity:to': -995, 'swapExactTokensForTokens:path': -994, 'swapExactTokensForTokens:to': -993, 'swapTokensForExactTokens:path': -992, 'swapTokensForExactTokens:to': -991, 'calculateInGivenOut:path': -990, 'calculateOutGivenIn:path': -989}
Retvar: ('c', ['global:foreignAsset'], ['-1'], 6, "'u'", 'u')
{'global:_owner': 1, 'global:_tokenApprovals': 2, 'global:_owners': 3, 'swap:to': -999, 'mint:to': -998, 'mint:TMP_139': 4, 'global:this': 4, 'None:None': 5, 'mint:foreignAsset': 6, 'swap:_nativeAsset': 7, 'swap:_foreignAsset': 8, 'global:nativeAsset': 9, 'global:foreignAsset': 10, 'global:_ZERO_ADDRESS': 11, 'removeLiquidity:tokenA': -997, 'removeLiquidity:tokenB': -996, 'removeLiquidity:to': -995, 'swapExactTokensForTokens:path': -994, 'swapExactTokensForTokens:to': -993, 'swapTokensForExactTokens:path': -992, 'swapTokensForExactTokens:to': -991, 'calculateInGivenOut:path': -990, 'calculateOutGivenIn:path': -989}
[i]Type for TUPLE_3

Name: TUPLE_3 Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
nativeReserve_1(uint256)= UNPACK TUPLE_3 index: 0 
([9], [-1], 18, "'u'", 'u', -1)
[i]Type for nativeReserve

Name: nativeReserve Function: calculateInGivenOut
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
foreignReserve_1(uint256)= UNPACK TUPLE_3 index: 1 
([10], [-1], 6, "'u'", 'u', -1)
[i]Type for foreignReserve

Name: foreignReserve Function: calculateInGivenOut
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_88 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: nativeAsset_1, name: nativeAsset

Name: nativeAsset Function: calculateInGivenOut
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: path_1 (-> []), name: path

Name: path Function: calculateInGivenOut
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeAsset_1, name: nativeAsset

Name: nativeAsset Function: calculateInGivenOut
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: path_1 (-> []), name: path

Name: path Function: calculateInGivenOut
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
REF_46(address) -> path_1 (-> [])[0]
INDEX
REFERENCE LEFT VALUE PROPAGATION
Source address: -992
[i]Type for REF_46

Name: path Function: calculateInGivenOut
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_88(bool) = REF_46 == nativeAsset_1
[i]Type for TMP_88

Name: TMP_88 Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_89 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: nativeReserve_1, name: nativeReserve

Name: nativeReserve Function: calculateInGivenOut
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amountOut_1, name: amountOut

Name: amountOut Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountOut_1 Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountOut, Num: 1
Globalname: amountOut, contract_name: VaderRouter
Ssa_name: foreignReserve_1, name: foreignReserve

Name: foreignReserve Function: calculateInGivenOut
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: nativeReserve_1, name: nativeReserve

Name: nativeReserve Function: calculateInGivenOut
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amountOut_1, name: amountOut

Name: amountOut_1 Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountOut_1 Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountOut, Num: 1
Globalname: amountOut, contract_name: VaderRouter
Ssa_name: foreignReserve_1, name: foreignReserve

Name: foreignReserve Function: calculateInGivenOut
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
End popogation
TMP_89(uint256) = LIBRARY_CALL, dest:VaderMath, function:VaderMath.calculateSwapReverse(uint256,uint256,uint256), arguments:['amountOut_1', 'nativeReserve_1', 'foreignReserve_1'] 
Found: calculateSwapReverse

Name: amountOut_1 Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: nativeReserve Function: calculateInGivenOut
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: foreignReserve Function: calculateInGivenOut
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
High level cal param_cache
Param: 0
    num: []
    den: []
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [9]
    den: [-1]
    norm: 18
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [10]
    den: [-1]
    norm: 6
    link: None
    fields: []
    fintype: -1
New param cache [[[], [], 'u', None, [], -1, 'u', 'u'], [[9], [-1], 18, None, [], -1, 'u', "'u'"], [[10], [-1], 6, None, [], -1, 'u', "'u'"]]
Old param cache: [[[-1], [-1], 'u', None, [], -1, 'u'], [[-1], [-1], 'u', None, [], -1, 'u'], [[-1], [-1], 'u', None, [], -1, 'u']]
[[], [], 'u', None, [], -1, 'u', 'u']

Name: amountOut Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[9], [-1], 18, None, [], -1, 'u', "'u'"]

Name: reserveIn Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
[[10], [-1], 6, None, [], -1, 'u', "'u'"]

Name: reserveOut Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
calculateSwapReverse(uint256,uint256,uint256)
Propogating All
Propogating All
reserveOut_1
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: reserveOut_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
reserveIn_1
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: reserveIn_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
Propogating All
amountOut_1
Ssa_name: amountOut_1, name: amountOut

Name: amountOut_1 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Source address: u

Name: amountOut_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
y2_1
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Propogating All
reserveOut_1
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: reserveOut_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
y4_1
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 8
Fields: 
Finance Type: undef
Propogating All
y4_1
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 8
Fields: 
Finance Type: undef
reserveOut_1
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: reserveOut_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
reserveIn_1
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: reserveIn_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
XY_1
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
reserveIn_1
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: reserveIn_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
y2_1
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Propogating All
XY_1
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
numeratorC_1
Ssa_name: numeratorC_1, name: numeratorC

Name: numeratorC Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
numeratorB_1
Ssa_name: numeratorB_1, name: numeratorB

Name: numeratorB Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
numeratorA_1
Ssa_name: numeratorA_1, name: numeratorA

Name: numeratorA Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
y2_1
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Propogating All
numerator_1
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
denominator_1
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Propogating All
amountIn_1
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_31 cleared
[i] XY cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: XY, Num: 1
Globalname: XY, contract_name: VaderMath
End popogation
TMP_31(uint256) = reserveIn_1 (c)* reserveOut_1
lnorm: 18 rnorm: 6
Source address: u
Source address: u
Source address: u
[i]Type for TMP_31

Name: TMP_31 Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
XY_1(uint256) := TMP_31(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for XY

Name: XY Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_32 cleared
[i] y2 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountOut_1, name: amountOut

Name: amountOut_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountOut_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountOut, Num: 1
Globalname: amountOut, contract_name: VaderMath
Ssa_name: amountOut_1, name: amountOut

Name: amountOut_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountOut_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountOut, Num: 1
Globalname: amountOut, contract_name: VaderMath
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: y2, Num: 1
Globalname: y2, contract_name: VaderMath
End popogation
TMP_32(uint256) = amountOut_1 (c)* 2
lnorm: u rnorm: 0
Source address: u
[i]Type for TMP_32

Name: TMP_32 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
y2_1(uint256) := TMP_32(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] TMP_33 cleared
[i] y4 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: undef
Name: y4, Num: 1
Globalname: y4, contract_name: VaderMath
End popogation
TMP_33(uint256) = y2_1 (c)* 2
lnorm: 0 rnorm: 0
Source address: u
[i]Type for TMP_33

Name: TMP_33 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
y4_1(uint256) := TMP_33(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
[i] TMP_34 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
End popogation
TMP_34(bool) = y4_1 < reserveOut_1
lnorm: 0 rnorm: 6
[i]Type for TMP_34

Name: TMP_34 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_35(None) = SOLIDITY_CALL require(bool,string)(TMP_34,VaderMath::calculateSwapReverse: Desired Output Exceeds Maximum Output Possible (1/4 of Liquidity Pool))
[i]Type for TMP_35

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_36 cleared
[i] TMP_37 cleared
[i] TMP_38 cleared
[i] TMP_39 cleared
[i] TMP_40 cleared
[i] numeratorA cleared
Propogating parameters and globals to SSA variables...
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: numeratorA_1, name: numeratorA

Name: numeratorA Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numeratorA, Num: 1
Globalname: numeratorA, contract_name: VaderMath
End popogation
TMP_36(uint256) = INTERNAL_CALL, VaderMath.root(uint256)(XY_1)
New param cache [[[9, 10], [-1], 24, None, [], -1, 'u', 'u']]
Old param cache: [[[], [], 'u', None, [], -1, 'u']]
[[9, 10], [-1], 24, None, [], -1, 'u', 'u']

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
root(uint256)
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
Propogating All
c_2
Ssa_name: c_2, name: c

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Propogating All
Propogating All
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_38', 'XY_1'])
Phi
[i]Type for a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_49 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_49(bool) = a_1 > 3
lnorm: 24 rnorm: 0
[i]Type for TMP_49

Name: TMP_49 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_56 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_56(bool) = a_1 != 0
[i]Type for TMP_56

Name: TMP_56 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_4, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: c, Num: 4
Globalname: c, contract_name: VaderMath
End popogation
c_4(uint256) := 1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: c_1, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: undef
Name: c, Num: 1
Globalname: c, contract_name: VaderMath
End popogation
c_1(uint256) := a_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_50 cleared
[i] TMP_51 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 5
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: VaderMath
End popogation
TMP_50(uint256) = a_1 (c)/ 2
lnorm: 24 rnorm: 0
Source address: u
lnorm: 24 rnorm: 0
10
9
-1
[i]Type for TMP_50

Name: TMP_50 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_51(uint256) = TMP_50 (c)+ 1
Source address: u
[i]Type for TMP_51

Name: TMP_51 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_51(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
[i] x cleared
[i] TMP_52 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
End popogation
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
c_2(uint256) := ϕ(['c_1', 'c_3'])
Phi

Name: c Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for c

Name: c Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
x_2(uint256) := ϕ(['x_3', 'x_1'])
Phi

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
TMP_52(bool) = x_2 < c_2
lnorm: 0 rnorm: 24
[i]Type for TMP_52

Name: TMP_52 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: c_3, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: c, Num: 3
Globalname: c, contract_name: VaderMath
End popogation
c_3(uint256) := x_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
[i] TMP_53 cleared
[i] TMP_54 cleared
[i] TMP_55 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: x_3, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 3
Globalname: x, contract_name: VaderMath
End popogation
TMP_53(uint256) = a_1 (c)/ x_2
lnorm: 24 rnorm: 0
Source address: u
Source address: u
lnorm: 24 rnorm: 0
Source address: u
9
-1
[i]Type for TMP_53

Name: TMP_53 Function: root
Num: 9
Den: -1
Address: u
Norm: 24
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
TMP_54(uint256) = TMP_53 (c)+ x_2
10
10
-1
lnorm: 24 rnorm: 0
Source address: u
[i]Type for TMP_54

Name: TMP_54 Function: root
Num: 10
Den: -1
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
XXXX
TMP_55(uint256) = TMP_54 (c)/ 2
lnorm: 0 rnorm: 0
Source address: u
lnorm: 0 rnorm: 0
10
-1
[i]Type for TMP_55

Name: TMP_55 Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
x_3(uint256) := TMP_55(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_38', 'XY_1'])
Phi
[i]Type for a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_49 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_49(bool) = a_1 > 3
lnorm: 24 rnorm: 0
[i]Type for TMP_49

Name: TMP_49 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_56 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_56(bool) = a_1 != 0
[i]Type for TMP_56

Name: TMP_56 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_4, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: c, Num: 4
Globalname: c, contract_name: VaderMath
End popogation
c_4(uint256) := 1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: c_1, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 1
Globalname: c, contract_name: VaderMath
End popogation
c_1(uint256) := a_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_50 cleared
[i] TMP_51 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: VaderMath
End popogation
TMP_50(uint256) = a_1 (c)/ 2
lnorm: 24 rnorm: 0
Source address: u
lnorm: 24 rnorm: 0
10
9
-1
[i]Type for TMP_50

Name: TMP_50 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_51(uint256) = TMP_50 (c)+ 1
Source address: u
[i]Type for TMP_51

Name: TMP_51 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_51(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
[i] x cleared
[i] TMP_52 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
End popogation
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
c_2(uint256) := ϕ(['c_1', 'c_3'])
Phi

Name: c Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for c

Name: c Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
x_2(uint256) := ϕ(['x_3', 'x_1'])
Phi

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
TMP_52(bool) = x_2 < c_2
lnorm: 0 rnorm: 24
[i]Type for TMP_52

Name: TMP_52 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: c_3, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: c, Num: 3
Globalname: c, contract_name: VaderMath
End popogation
c_3(uint256) := x_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
[i] TMP_53 cleared
[i] TMP_54 cleared
[i] TMP_55 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: x_3, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 3
Globalname: x, contract_name: VaderMath
End popogation
TMP_53(uint256) = a_1 (c)/ x_2
lnorm: 24 rnorm: 0
Source address: u
Source address: u
lnorm: 24 rnorm: 0
Source address: u
9
-1
[i]Type for TMP_53

Name: TMP_53 Function: root
Num: 9
Den: -1
Address: u
Norm: 24
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
TMP_54(uint256) = TMP_53 (c)+ x_2
10
10
-1
lnorm: 24 rnorm: 0
Source address: u
[i]Type for TMP_54

Name: TMP_54 Function: root
Num: 10
Den: -1
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
XXXX
TMP_55(uint256) = TMP_54 (c)/ 2
lnorm: 0 rnorm: 0
Source address: u
lnorm: 0 rnorm: 0
10
-1
[i]Type for TMP_55

Name: TMP_55 Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
x_3(uint256) := TMP_55(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_36

Name: TMP_36 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_37(uint256) = reserveOut_1 (c)- y4_1
Source address: u
[i]Type for TMP_37

Name: TMP_37 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
TMP_38(uint256) = reserveIn_1 (c)* TMP_37
lnorm: 18 rnorm: 0
Source address: u
[i]Type for TMP_38

Name: TMP_38 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
TMP_39(uint256) = INTERNAL_CALL, VaderMath.root(uint256)(TMP_38)
New param cache [[[9], [-1], 18, None, [], -1, 'u', 4]]
Old param cache: [[[], [], 'u', None, [], -1, 'u']]
[[9], [-1], 18, None, [], -1, 'u', 4]

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
root(uint256)
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
Propogating All
c_2
Ssa_name: c_2, name: c

Name: c Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Propogating All
Propogating All
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_38', 'XY_1'])
Phi
[i]Type for a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
[i] TMP_49 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
End popogation
TMP_49(bool) = a_1 > 3
lnorm: 18 rnorm: 0
[i]Type for TMP_49

Name: TMP_49 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_56 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
End popogation
TMP_56(bool) = a_1 != 0
[i]Type for TMP_56

Name: TMP_56 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_4, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: c, Num: 4
Globalname: c, contract_name: VaderMath
End popogation
c_4(uint256) := 1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: c_1, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 1
Globalname: c, contract_name: VaderMath
End popogation
c_1(uint256) := a_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_50 cleared
[i] TMP_51 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: VaderMath
End popogation
TMP_50(uint256) = a_1 (c)/ 2
lnorm: 18 rnorm: 0
Source address: u
lnorm: 18 rnorm: 0
9
-1
[i]Type for TMP_50

Name: TMP_50 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_51(uint256) = TMP_50 (c)+ 1
Source address: u
[i]Type for TMP_51

Name: TMP_51 Function: root
Num: 9
Den: -1
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_51(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
[i] x cleared
[i] TMP_52 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
End popogation
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
c_2(uint256) := ϕ(['c_1', 'c_3'])
Phi

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for c

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
x_2(uint256) := ϕ(['x_3', 'x_1'])
Phi

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
TMP_52(bool) = x_2 < c_2
lnorm: 0 rnorm: 18
10
10
-1
[i]Type for TMP_52

Name: TMP_52 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: c_3, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: c, Num: 3
Globalname: c, contract_name: VaderMath
End popogation
c_3(uint256) := x_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
[i] TMP_53 cleared
[i] TMP_54 cleared
[i] TMP_55 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: x_3, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 3
Globalname: x, contract_name: VaderMath
End popogation
TMP_53(uint256) = a_1 (c)/ x_2
lnorm: 18 rnorm: 0
Source address: u
Source address: u
lnorm: 18 rnorm: 0
Source address: u
9
10
[i]Type for TMP_53

Name: TMP_53 Function: root
Num: 9
Den: 10
Address: u
Norm: 18
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
TMP_54(uint256) = TMP_53 (c)+ x_2
10
10
-1
[i]Type for TMP_54

Name: TMP_54 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_55(uint256) = TMP_54 (c)/ 2
lnorm: u rnorm: 0
lnorm: u rnorm: 0
[i]Type for TMP_55

Name: TMP_55 Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
x_3(uint256) := TMP_55(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_38', 'XY_1'])
Phi
[i]Type for a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
[i] TMP_49 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
End popogation
TMP_49(bool) = a_1 > 3
lnorm: 18 rnorm: 0
[i]Type for TMP_49

Name: TMP_49 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_56 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
End popogation
TMP_56(bool) = a_1 != 0
[i]Type for TMP_56

Name: TMP_56 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_4, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: c, Num: 4
Globalname: c, contract_name: VaderMath
End popogation
c_4(uint256) := 1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: c_1, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 1
Globalname: c, contract_name: VaderMath
End popogation
c_1(uint256) := a_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_50 cleared
[i] TMP_51 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: VaderMath
End popogation
TMP_50(uint256) = a_1 (c)/ 2
lnorm: 18 rnorm: 0
Source address: u
lnorm: 18 rnorm: 0
9
-1
[i]Type for TMP_50

Name: TMP_50 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_51(uint256) = TMP_50 (c)+ 1
Source address: u
[i]Type for TMP_51

Name: TMP_51 Function: root
Num: 9
Den: -1
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_51(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
[i] x cleared
[i] TMP_52 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
End popogation
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
c_2(uint256) := ϕ(['c_1', 'c_3'])
Phi

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for c

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
x_2(uint256) := ϕ(['x_3', 'x_1'])
Phi

Name: x Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
TMP_52(bool) = x_2 < c_2
lnorm: 0 rnorm: 18
9
-1
[i]Type for TMP_52

Name: TMP_52 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: c_3, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: c, Num: 3
Globalname: c, contract_name: VaderMath
End popogation
c_3(uint256) := x_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
[i] TMP_53 cleared
[i] TMP_54 cleared
[i] TMP_55 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: x_3, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 3
Globalname: x, contract_name: VaderMath
End popogation
TMP_53(uint256) = a_1 (c)/ x_2
lnorm: 18 rnorm: 0
Source address: u
Source address: u
lnorm: 18 rnorm: 0
Source address: u
Source address: u
[i]Type for TMP_53

Name: TMP_53 Function: root
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
TMP_54(uint256) = TMP_53 (c)+ x_2
Source address: u
[i]Type for TMP_54

Name: TMP_54 Function: root
Num: 9
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
TMP_55(uint256) = TMP_54 (c)/ 2
lnorm: 0 rnorm: 0
Source address: u
lnorm: 0 rnorm: 0
9
-1
[i]Type for TMP_55

Name: TMP_55 Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
x_3(uint256) := TMP_55(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_39

Name: TMP_39 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_40(uint256) = TMP_36 (c)* TMP_39
lnorm: u rnorm: u
[i]Type for TMP_40

Name: TMP_40 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
numeratorA_1(uint256) := TMP_40(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for numeratorA

Name: numeratorA Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_41 cleared
[i] numeratorB cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: numeratorB_1, name: numeratorB

Name: numeratorB Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: numeratorB, Num: 1
Globalname: numeratorB, contract_name: VaderMath
End popogation
TMP_41(uint256) = y2_1 (c)* reserveIn_1
lnorm: 0 rnorm: 18
Source address: u
[i]Type for TMP_41

Name: TMP_41 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
numeratorB_1(uint256) := TMP_41(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for numeratorB

Name: numeratorB Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] numeratorC cleared
Propogating parameters and globals to SSA variables...
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: numeratorC_1, name: numeratorC

Name: numeratorC Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numeratorC, Num: 1
Globalname: numeratorC, contract_name: VaderMath
End popogation
numeratorC_1(uint256) := XY_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for numeratorC

Name: numeratorC Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_42 cleared
[i] TMP_43 cleared
[i] numerator cleared
Propogating parameters and globals to SSA variables...
Ssa_name: numeratorC_1, name: numeratorC

Name: numeratorC Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: numeratorB_1, name: numeratorB

Name: numeratorB Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: numeratorA_1, name: numeratorA

Name: numeratorA Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numeratorA, Num: 1
Globalname: numeratorA, contract_name: VaderMath
Ssa_name: numeratorC_1, name: numeratorC

Name: numeratorC Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: numeratorB_1, name: numeratorB

Name: numeratorB Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: numeratorA_1, name: numeratorA

Name: numeratorA Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numeratorA, Num: 1
Globalname: numeratorA, contract_name: VaderMath
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numerator, Num: 1
Globalname: numerator, contract_name: VaderMath
End popogation
TMP_42(uint256) = numeratorC_1 (c)- numeratorA_1
Source address: u
[i]Type for TMP_42

Name: TMP_42 Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_43(uint256) = TMP_42 (c)- numeratorB_1
[i]Type for TMP_43

Name: TMP_43 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
numerator_1(uint256) := TMP_43(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for numerator

Name: numerator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] denominator cleared
Propogating parameters and globals to SSA variables...
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: denominator, Num: 1
Globalname: denominator, contract_name: VaderMath
End popogation
denominator_1(uint256) := y2_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for denominator

Name: denominator Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] TMP_44 cleared
[i] amountIn cleared
Propogating parameters and globals to SSA variables...
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numerator, Num: 1
Globalname: numerator, contract_name: VaderMath
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numerator, Num: 1
Globalname: numerator, contract_name: VaderMath
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: amountIn, Num: 1
Globalname: amountIn, contract_name: VaderMath
End popogation
TMP_44(uint256) = numerator_1 (c)/ denominator_1
lnorm: u rnorm: 0
lnorm: u rnorm: 0
[i]Type for TMP_44

Name: TMP_44 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
amountIn_1(uint256) := TMP_44(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for amountIn

Name: amountIn Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
End popogation
RETURN amountIn_1
RETURN

Name: amountIn Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_31 cleared
[i] XY cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: XY, Num: 1
Globalname: XY, contract_name: VaderMath
End popogation
TMP_31(uint256) = reserveIn_1 (c)* reserveOut_1
lnorm: 18 rnorm: 6
Source address: u
Source address: u
Source address: u
[i]Type for TMP_31

Name: TMP_31 Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
XY_1(uint256) := TMP_31(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for XY

Name: XY Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_32 cleared
[i] y2 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountOut_1, name: amountOut

Name: amountOut_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountOut_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountOut, Num: 1
Globalname: amountOut, contract_name: VaderMath
Ssa_name: amountOut_1, name: amountOut

Name: amountOut_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountOut_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountOut, Num: 1
Globalname: amountOut, contract_name: VaderMath
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: y2, Num: 1
Globalname: y2, contract_name: VaderMath
End popogation
TMP_32(uint256) = amountOut_1 (c)* 2
lnorm: u rnorm: 0
Source address: u
[i]Type for TMP_32

Name: TMP_32 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
y2_1(uint256) := TMP_32(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] TMP_33 cleared
[i] y4 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: y4, Num: 1
Globalname: y4, contract_name: VaderMath
End popogation
TMP_33(uint256) = y2_1 (c)* 2
lnorm: 0 rnorm: 0
Source address: u
[i]Type for TMP_33

Name: TMP_33 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
y4_1(uint256) := TMP_33(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
[i] TMP_34 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
End popogation
TMP_34(bool) = y4_1 < reserveOut_1
lnorm: 0 rnorm: 6
[i]Type for TMP_34

Name: TMP_34 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_35(None) = SOLIDITY_CALL require(bool,string)(TMP_34,VaderMath::calculateSwapReverse: Desired Output Exceeds Maximum Output Possible (1/4 of Liquidity Pool))
[i]Type for TMP_35

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_36 cleared
[i] TMP_37 cleared
[i] TMP_38 cleared
[i] TMP_39 cleared
[i] TMP_40 cleared
[i] numeratorA cleared
Propogating parameters and globals to SSA variables...
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: numeratorA_1, name: numeratorA

Name: numeratorA Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numeratorA, Num: 1
Globalname: numeratorA, contract_name: VaderMath
End popogation
TMP_36(uint256) = INTERNAL_CALL, VaderMath.root(uint256)(XY_1)
New param cache [[[9, 10], [-1], 24, None, [], -1, 'u', 'u']]
Old param cache: [[[], [], 'u', None, [], -1, 'u']]
[[9, 10], [-1], 24, None, [], -1, 'u', 'u']

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
root(uint256)
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
Propogating All
c_2
Ssa_name: c_2, name: c

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Propogating All
Propogating All
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_38', 'XY_1'])
Phi
[i]Type for a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_49 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_49(bool) = a_1 > 3
lnorm: 24 rnorm: 0
[i]Type for TMP_49

Name: TMP_49 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_56 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_56(bool) = a_1 != 0
[i]Type for TMP_56

Name: TMP_56 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_4, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: c, Num: 4
Globalname: c, contract_name: VaderMath
End popogation
c_4(uint256) := 1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: c_1, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 1
Globalname: c, contract_name: VaderMath
End popogation
c_1(uint256) := a_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_50 cleared
[i] TMP_51 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: VaderMath
End popogation
TMP_50(uint256) = a_1 (c)/ 2
lnorm: 24 rnorm: 0
Source address: u
lnorm: 24 rnorm: 0
10
9
-1
[i]Type for TMP_50

Name: TMP_50 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_51(uint256) = TMP_50 (c)+ 1
Source address: u
[i]Type for TMP_51

Name: TMP_51 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_51(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
[i] x cleared
[i] TMP_52 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
End popogation
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
c_2(uint256) := ϕ(['c_1', 'c_3'])
Phi

Name: c Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for c

Name: c Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
x_2(uint256) := ϕ(['x_3', 'x_1'])
Phi

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_52(bool) = x_2 < c_2
lnorm: 0 rnorm: 24
[i]Type for TMP_52

Name: TMP_52 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: c_3, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: c, Num: 3
Globalname: c, contract_name: VaderMath
End popogation
c_3(uint256) := x_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] TMP_53 cleared
[i] TMP_54 cleared
[i] TMP_55 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: x_3, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 3
Globalname: x, contract_name: VaderMath
End popogation
TMP_53(uint256) = a_1 (c)/ x_2
lnorm: 24 rnorm: 0
Source address: u
Source address: u
lnorm: 24 rnorm: 0
Source address: u
10
-1
[i]Type for TMP_53

Name: TMP_53 Function: root
Num: 10
Den: -1
Address: u
Norm: 24
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_54(uint256) = TMP_53 (c)+ x_2
9
[i]Type for TMP_54

Name: TMP_54 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_55(uint256) = TMP_54 (c)/ 2
lnorm: u rnorm: 0
lnorm: u rnorm: 0
[i]Type for TMP_55

Name: TMP_55 Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
x_3(uint256) := TMP_55(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_38', 'XY_1'])
Phi
[i]Type for a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_49 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_49(bool) = a_1 > 3
lnorm: 24 rnorm: 0
[i]Type for TMP_49

Name: TMP_49 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_56 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_56(bool) = a_1 != 0
[i]Type for TMP_56

Name: TMP_56 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_4, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: c, Num: 4
Globalname: c, contract_name: VaderMath
End popogation
c_4(uint256) := 1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: c_1, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 1
Globalname: c, contract_name: VaderMath
End popogation
c_1(uint256) := a_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_50 cleared
[i] TMP_51 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: VaderMath
End popogation
TMP_50(uint256) = a_1 (c)/ 2
lnorm: 24 rnorm: 0
Source address: u
lnorm: 24 rnorm: 0
10
9
-1
[i]Type for TMP_50

Name: TMP_50 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_51(uint256) = TMP_50 (c)+ 1
Source address: u
[i]Type for TMP_51

Name: TMP_51 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_51(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
[i] x cleared
[i] TMP_52 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
End popogation
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
c_2(uint256) := ϕ(['c_1', 'c_3'])
Phi

Name: c Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for c

Name: c Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
x_2(uint256) := ϕ(['x_3', 'x_1'])
Phi

Name: x Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for x

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
TMP_52(bool) = x_2 < c_2
lnorm: 0 rnorm: 24
10
9
-1
[i]Type for TMP_52

Name: TMP_52 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: c_3, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: c, Num: 3
Globalname: c, contract_name: VaderMath
End popogation
c_3(uint256) := x_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
[i] TMP_53 cleared
[i] TMP_54 cleared
[i] TMP_55 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: x_3, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 3
Globalname: x, contract_name: VaderMath
End popogation
TMP_53(uint256) = a_1 (c)/ x_2
lnorm: 24 rnorm: 0
Source address: u
Source address: u
lnorm: 24 rnorm: 0
Source address: u
Source address: u
[i]Type for TMP_53

Name: TMP_53 Function: root
Num: -1
Den: -1
Address: u
Norm: 24
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
TMP_54(uint256) = TMP_53 (c)+ x_2
Source address: u
[i]Type for TMP_54

Name: TMP_54 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
XXXX
TMP_55(uint256) = TMP_54 (c)/ 2
lnorm: 0 rnorm: 0
Source address: u
lnorm: 0 rnorm: 0
10
9
-1
[i]Type for TMP_55

Name: TMP_55 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
x_3(uint256) := TMP_55(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_36

Name: TMP_36 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_37(uint256) = reserveOut_1 (c)- y4_1
Source address: u
[i]Type for TMP_37

Name: TMP_37 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
TMP_38(uint256) = reserveIn_1 (c)* TMP_37
lnorm: 18 rnorm: 0
Source address: u
[i]Type for TMP_38

Name: TMP_38 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
TMP_39(uint256) = INTERNAL_CALL, VaderMath.root(uint256)(TMP_38)
New param cache [[[9], [-1], 18, None, [], -1, 'u', 4]]
Old param cache: [[[], [], 'u', None, [], -1, 'u']]
[[9], [-1], 18, None, [], -1, 'u', 4]

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
root(uint256)
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
Propogating All
c_2
Ssa_name: c_2, name: c

Name: c Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Propogating All
Propogating All
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_38', 'XY_1'])
Phi
[i]Type for a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
[i] TMP_49 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
End popogation
TMP_49(bool) = a_1 > 3
lnorm: 18 rnorm: 0
[i]Type for TMP_49

Name: TMP_49 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_56 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
End popogation
TMP_56(bool) = a_1 != 0
[i]Type for TMP_56

Name: TMP_56 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_4, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: c, Num: 4
Globalname: c, contract_name: VaderMath
End popogation
c_4(uint256) := 1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: c_1, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 1
Globalname: c, contract_name: VaderMath
End popogation
c_1(uint256) := a_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_50 cleared
[i] TMP_51 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: VaderMath
End popogation
TMP_50(uint256) = a_1 (c)/ 2
lnorm: 18 rnorm: 0
Source address: u
lnorm: 18 rnorm: 0
9
-1
[i]Type for TMP_50

Name: TMP_50 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_51(uint256) = TMP_50 (c)+ 1
Source address: u
[i]Type for TMP_51

Name: TMP_51 Function: root
Num: 9
Den: -1
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_51(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
[i] x cleared
[i] TMP_52 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
End popogation
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
c_2(uint256) := ϕ(['c_1', 'c_3'])
Phi

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef

Name: c Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for c

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
x_2(uint256) := ϕ(['x_3', 'x_1'])
Phi

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for x

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
TMP_52(bool) = x_2 < c_2
lnorm: 0 rnorm: 18
[i]Type for TMP_52

Name: TMP_52 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: c_3, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: c, Num: 3
Globalname: c, contract_name: VaderMath
End popogation
c_3(uint256) := x_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
[i] TMP_53 cleared
[i] TMP_54 cleared
[i] TMP_55 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: x_3, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 3
Globalname: x, contract_name: VaderMath
End popogation
TMP_53(uint256) = a_1 (c)/ x_2
lnorm: 18 rnorm: 0
Source address: u
Source address: u
lnorm: 18 rnorm: 0
Source address: u
-1
10
[i]Type for TMP_53

Name: TMP_53 Function: root
Num: -1
Den: 10
Address: u
Norm: 18
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
TMP_54(uint256) = TMP_53 (c)+ x_2
[i]Type for TMP_54

Name: TMP_54 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_55(uint256) = TMP_54 (c)/ 2
lnorm: u rnorm: 0
lnorm: u rnorm: 0
[i]Type for TMP_55

Name: TMP_55 Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
x_3(uint256) := TMP_55(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_38', 'XY_1'])
Phi
[i]Type for a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
[i] TMP_49 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
End popogation
TMP_49(bool) = a_1 > 3
lnorm: 18 rnorm: 0
[i]Type for TMP_49

Name: TMP_49 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_56 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
End popogation
TMP_56(bool) = a_1 != 0
[i]Type for TMP_56

Name: TMP_56 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_4, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: c, Num: 4
Globalname: c, contract_name: VaderMath
End popogation
c_4(uint256) := 1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: c_1, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 1
Globalname: c, contract_name: VaderMath
End popogation
c_1(uint256) := a_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_50 cleared
[i] TMP_51 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: VaderMath
End popogation
TMP_50(uint256) = a_1 (c)/ 2
lnorm: 18 rnorm: 0
Source address: u
lnorm: 18 rnorm: 0
9
-1
[i]Type for TMP_50

Name: TMP_50 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_51(uint256) = TMP_50 (c)+ 1
Source address: u
[i]Type for TMP_51

Name: TMP_51 Function: root
Num: 9
Den: -1
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_51(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
[i] x cleared
[i] TMP_52 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
End popogation
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
c_2(uint256) := ϕ(['c_1', 'c_3'])
Phi

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef

Name: c Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for c

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
x_2(uint256) := ϕ(['x_3', 'x_1'])
Phi

Name: x Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
TMP_52(bool) = x_2 < c_2
lnorm: 0 rnorm: 18
9
-1
[i]Type for TMP_52

Name: TMP_52 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: c_3, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: c, Num: 3
Globalname: c, contract_name: VaderMath
End popogation
c_3(uint256) := x_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
[i] TMP_53 cleared
[i] TMP_54 cleared
[i] TMP_55 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: x_3, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 3
Globalname: x, contract_name: VaderMath
End popogation
TMP_53(uint256) = a_1 (c)/ x_2
lnorm: 18 rnorm: 0
Source address: u
Source address: u
lnorm: 18 rnorm: 0
Source address: u
Source address: u
[i]Type for TMP_53

Name: TMP_53 Function: root
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
TMP_54(uint256) = TMP_53 (c)+ x_2
Source address: u
[i]Type for TMP_54

Name: TMP_54 Function: root
Num: 9
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
TMP_55(uint256) = TMP_54 (c)/ 2
lnorm: 0 rnorm: 0
Source address: u
lnorm: 0 rnorm: 0
9
-1
[i]Type for TMP_55

Name: TMP_55 Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
x_3(uint256) := TMP_55(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_39

Name: TMP_39 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_40(uint256) = TMP_36 (c)* TMP_39
lnorm: u rnorm: u
[i]Type for TMP_40

Name: TMP_40 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
numeratorA_1(uint256) := TMP_40(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for numeratorA

Name: numeratorA Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_41 cleared
[i] numeratorB cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: numeratorB_1, name: numeratorB

Name: numeratorB Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: numeratorB, Num: 1
Globalname: numeratorB, contract_name: VaderMath
End popogation
TMP_41(uint256) = y2_1 (c)* reserveIn_1
lnorm: 0 rnorm: 18
Source address: u
[i]Type for TMP_41

Name: TMP_41 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
numeratorB_1(uint256) := TMP_41(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for numeratorB

Name: numeratorB Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] numeratorC cleared
Propogating parameters and globals to SSA variables...
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: numeratorC_1, name: numeratorC

Name: numeratorC Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numeratorC, Num: 1
Globalname: numeratorC, contract_name: VaderMath
End popogation
numeratorC_1(uint256) := XY_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for numeratorC

Name: numeratorC Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_42 cleared
[i] TMP_43 cleared
[i] numerator cleared
Propogating parameters and globals to SSA variables...
Ssa_name: numeratorC_1, name: numeratorC

Name: numeratorC Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: numeratorB_1, name: numeratorB

Name: numeratorB Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: numeratorA_1, name: numeratorA

Name: numeratorA Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numeratorA, Num: 1
Globalname: numeratorA, contract_name: VaderMath
Ssa_name: numeratorC_1, name: numeratorC

Name: numeratorC Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: numeratorB_1, name: numeratorB

Name: numeratorB Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: numeratorA_1, name: numeratorA

Name: numeratorA Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numeratorA, Num: 1
Globalname: numeratorA, contract_name: VaderMath
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numerator, Num: 1
Globalname: numerator, contract_name: VaderMath
End popogation
TMP_42(uint256) = numeratorC_1 (c)- numeratorA_1
Source address: u
[i]Type for TMP_42

Name: TMP_42 Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_43(uint256) = TMP_42 (c)- numeratorB_1
[i]Type for TMP_43

Name: TMP_43 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
numerator_1(uint256) := TMP_43(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for numerator

Name: numerator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] denominator cleared
Propogating parameters and globals to SSA variables...
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: denominator, Num: 1
Globalname: denominator, contract_name: VaderMath
End popogation
denominator_1(uint256) := y2_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for denominator

Name: denominator Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] TMP_44 cleared
[i] amountIn cleared
Propogating parameters and globals to SSA variables...
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numerator, Num: 1
Globalname: numerator, contract_name: VaderMath
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numerator, Num: 1
Globalname: numerator, contract_name: VaderMath
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: amountIn, Num: 1
Globalname: amountIn, contract_name: VaderMath
End popogation
TMP_44(uint256) = numerator_1 (c)/ denominator_1
lnorm: u rnorm: 0
lnorm: u rnorm: 0
[i]Type for TMP_44

Name: TMP_44 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
amountIn_1(uint256) := TMP_44(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for amountIn

Name: amountIn Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
End popogation
RETURN amountIn_1
RETURN

Name: amountIn Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Source address: u
Source address: u
[i]Type for TMP_89

Name: TMP_89 Function: calculateInGivenOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
RETURN TMP_89
RETURN

Name: TMP_89 Function: calculateInGivenOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
[i] TMP_90 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: foreignReserve_1, name: foreignReserve

Name: foreignReserve Function: calculateInGivenOut
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amountOut_1, name: amountOut

Name: amountOut_1 Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountOut_1 Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountOut, Num: 1
Globalname: amountOut, contract_name: VaderRouter
Ssa_name: nativeReserve_1, name: nativeReserve

Name: nativeReserve Function: calculateInGivenOut
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: foreignReserve_1, name: foreignReserve

Name: foreignReserve Function: calculateInGivenOut
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amountOut_1, name: amountOut

Name: amountOut_1 Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountOut_1 Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountOut, Num: 1
Globalname: amountOut, contract_name: VaderRouter
Ssa_name: nativeReserve_1, name: nativeReserve

Name: nativeReserve Function: calculateInGivenOut
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
End popogation
TMP_90(uint256) = LIBRARY_CALL, dest:VaderMath, function:VaderMath.calculateSwapReverse(uint256,uint256,uint256), arguments:['amountOut_1', 'foreignReserve_1', 'nativeReserve_1'] 
Found: calculateSwapReverse

Name: amountOut_1 Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: foreignReserve Function: calculateInGivenOut
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: nativeReserve Function: calculateInGivenOut
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
High level cal param_cache
Param: 0
    num: []
    den: []
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [10]
    den: [-1]
    norm: 6
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [9]
    den: [-1]
    norm: 18
    link: None
    fields: []
    fintype: -1
New param cache [[[], [], 'u', None, [], -1, 'u', 'u'], [[10], [-1], 6, None, [], -1, 'u', "'u'"], [[9], [-1], 18, None, [], -1, 'u', "'u'"]]
Old param cache: [[[-1], [-1], 'u', None, [], -1, 'u'], [[-1], [-1], 'u', None, [], -1, 'u'], [[-1], [-1], 'u', None, [], -1, 'u']]
[[], [], 'u', None, [], -1, 'u', 'u']

Name: amountOut Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[10], [-1], 6, None, [], -1, 'u', "'u'"]

Name: reserveIn Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
[[9], [-1], 18, None, [], -1, 'u', "'u'"]

Name: reserveOut Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
calculateSwapReverse(uint256,uint256,uint256)
Propogating All
Propogating All
reserveOut_1
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: reserveOut_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
reserveIn_1
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: reserveIn_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
Propogating All
amountOut_1
Ssa_name: amountOut_1, name: amountOut

Name: amountOut_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountOut_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
y2_1
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Propogating All
reserveOut_1
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: reserveOut_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
y4_1
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Propogating All
y4_1
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
reserveOut_1
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: reserveOut_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
reserveIn_1
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: reserveIn_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
XY_1
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
reserveIn_1
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: reserveIn_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
y2_1
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Propogating All
XY_1
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
numeratorC_1
Ssa_name: numeratorC_1, name: numeratorC

Name: numeratorC Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
numeratorB_1
Ssa_name: numeratorB_1, name: numeratorB

Name: numeratorB Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 2
Fields: 
Finance Type: undef
numeratorA_1
Ssa_name: numeratorA_1, name: numeratorA

Name: numeratorA Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
y2_1
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Propogating All
numerator_1
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
denominator_1
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Propogating All
amountIn_1
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_31 cleared
[i] XY cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: XY, Num: 1
Globalname: XY, contract_name: VaderMath
End popogation
TMP_31(uint256) = reserveIn_1 (c)* reserveOut_1
lnorm: 6 rnorm: 18
Source address: u
Source address: u
Source address: u
[i]Type for TMP_31

Name: TMP_31 Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
XY_1(uint256) := TMP_31(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for XY

Name: XY Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_32 cleared
[i] y2 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountOut_1, name: amountOut

Name: amountOut_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountOut_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountOut, Num: 1
Globalname: amountOut, contract_name: VaderMath
Ssa_name: amountOut_1, name: amountOut

Name: amountOut_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountOut_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountOut, Num: 1
Globalname: amountOut, contract_name: VaderMath
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: y2, Num: 1
Globalname: y2, contract_name: VaderMath
End popogation
TMP_32(uint256) = amountOut_1 (c)* 2
lnorm: u rnorm: 0
Source address: u
[i]Type for TMP_32

Name: TMP_32 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
y2_1(uint256) := TMP_32(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] TMP_33 cleared
[i] y4 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: y4, Num: 1
Globalname: y4, contract_name: VaderMath
End popogation
TMP_33(uint256) = y2_1 (c)* 2
lnorm: 0 rnorm: 0
Source address: u
[i]Type for TMP_33

Name: TMP_33 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
y4_1(uint256) := TMP_33(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
[i] TMP_34 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
End popogation
TMP_34(bool) = y4_1 < reserveOut_1
lnorm: 0 rnorm: 18
[i]Type for TMP_34

Name: TMP_34 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_35(None) = SOLIDITY_CALL require(bool,string)(TMP_34,VaderMath::calculateSwapReverse: Desired Output Exceeds Maximum Output Possible (1/4 of Liquidity Pool))
[i]Type for TMP_35

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_36 cleared
[i] TMP_37 cleared
[i] TMP_38 cleared
[i] TMP_39 cleared
[i] TMP_40 cleared
[i] numeratorA cleared
Propogating parameters and globals to SSA variables...
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: numeratorA_1, name: numeratorA

Name: numeratorA Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numeratorA, Num: 1
Globalname: numeratorA, contract_name: VaderMath
End popogation
TMP_36(uint256) = INTERNAL_CALL, VaderMath.root(uint256)(XY_1)
New param cache [[[10, 9], [-1], 24, None, [], -1, 'u', 'u']]
Old param cache: [[[], [], 'u', None, [], -1, 'u']]
[[10, 9], [-1], 24, None, [], -1, 'u', 'u']

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
root(uint256)
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
Propogating All
c_2
Ssa_name: c_2, name: c

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Propogating All
Propogating All
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_38', 'XY_1'])
Phi
[i]Type for a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_49 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_49(bool) = a_1 > 3
lnorm: 24 rnorm: 0
[i]Type for TMP_49

Name: TMP_49 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_56 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_56(bool) = a_1 != 0
[i]Type for TMP_56

Name: TMP_56 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_4, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: c, Num: 4
Globalname: c, contract_name: VaderMath
End popogation
c_4(uint256) := 1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: c_1, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 1
Globalname: c, contract_name: VaderMath
End popogation
c_1(uint256) := a_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_50 cleared
[i] TMP_51 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: VaderMath
End popogation
TMP_50(uint256) = a_1 (c)/ 2
lnorm: 24 rnorm: 0
Source address: u
lnorm: 24 rnorm: 0
10
9
-1
[i]Type for TMP_50

Name: TMP_50 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_51(uint256) = TMP_50 (c)+ 1
Source address: u
[i]Type for TMP_51

Name: TMP_51 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_51(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
[i] x cleared
[i] TMP_52 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
End popogation
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
c_2(uint256) := ϕ(['c_1', 'c_3'])
Phi

Name: c Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for c

Name: c Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
x_2(uint256) := ϕ(['x_3', 'x_1'])
Phi

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_52(bool) = x_2 < c_2
lnorm: 0 rnorm: 24
[i]Type for TMP_52

Name: TMP_52 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: c_3, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: c, Num: 3
Globalname: c, contract_name: VaderMath
End popogation
c_3(uint256) := x_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] TMP_53 cleared
[i] TMP_54 cleared
[i] TMP_55 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: x_3, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 3
Globalname: x, contract_name: VaderMath
End popogation
TMP_53(uint256) = a_1 (c)/ x_2
lnorm: 24 rnorm: 0
Source address: u
Source address: u
lnorm: 24 rnorm: 0
Source address: u
10
-1
[i]Type for TMP_53

Name: TMP_53 Function: root
Num: 10
Den: -1
Address: u
Norm: 24
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_54(uint256) = TMP_53 (c)+ x_2
9
[i]Type for TMP_54

Name: TMP_54 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_55(uint256) = TMP_54 (c)/ 2
lnorm: u rnorm: 0
lnorm: u rnorm: 0
[i]Type for TMP_55

Name: TMP_55 Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
x_3(uint256) := TMP_55(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_38', 'XY_1'])
Phi
[i]Type for a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_49 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_49(bool) = a_1 > 3
lnorm: 24 rnorm: 0
[i]Type for TMP_49

Name: TMP_49 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_56 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_56(bool) = a_1 != 0
[i]Type for TMP_56

Name: TMP_56 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_4, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: c, Num: 4
Globalname: c, contract_name: VaderMath
End popogation
c_4(uint256) := 1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: c_1, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 1
Globalname: c, contract_name: VaderMath
End popogation
c_1(uint256) := a_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_50 cleared
[i] TMP_51 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: VaderMath
End popogation
TMP_50(uint256) = a_1 (c)/ 2
lnorm: 24 rnorm: 0
Source address: u
lnorm: 24 rnorm: 0
10
9
-1
[i]Type for TMP_50

Name: TMP_50 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_51(uint256) = TMP_50 (c)+ 1
Source address: u
[i]Type for TMP_51

Name: TMP_51 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_51(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
[i] x cleared
[i] TMP_52 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
End popogation
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
c_2(uint256) := ϕ(['c_1', 'c_3'])
Phi

Name: c Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for c

Name: c Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
x_2(uint256) := ϕ(['x_3', 'x_1'])
Phi

Name: x Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for x

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
TMP_52(bool) = x_2 < c_2
lnorm: 0 rnorm: 24
10
9
-1
[i]Type for TMP_52

Name: TMP_52 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: c_3, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: c, Num: 3
Globalname: c, contract_name: VaderMath
End popogation
c_3(uint256) := x_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
[i] TMP_53 cleared
[i] TMP_54 cleared
[i] TMP_55 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: x_3, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 3
Globalname: x, contract_name: VaderMath
End popogation
TMP_53(uint256) = a_1 (c)/ x_2
lnorm: 24 rnorm: 0
Source address: u
Source address: u
lnorm: 24 rnorm: 0
Source address: u
Source address: u
[i]Type for TMP_53

Name: TMP_53 Function: root
Num: -1
Den: -1
Address: u
Norm: 24
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
TMP_54(uint256) = TMP_53 (c)+ x_2
Source address: u
[i]Type for TMP_54

Name: TMP_54 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
XXXX
TMP_55(uint256) = TMP_54 (c)/ 2
lnorm: 0 rnorm: 0
Source address: u
lnorm: 0 rnorm: 0
10
9
-1
[i]Type for TMP_55

Name: TMP_55 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
x_3(uint256) := TMP_55(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_36

Name: TMP_36 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_37(uint256) = reserveOut_1 (c)- y4_1
Source address: u
[i]Type for TMP_37

Name: TMP_37 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
TMP_38(uint256) = reserveIn_1 (c)* TMP_37
lnorm: 6 rnorm: 0
Source address: u
[i]Type for TMP_38

Name: TMP_38 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
TMP_39(uint256) = INTERNAL_CALL, VaderMath.root(uint256)(TMP_38)
New param cache [[[10], [-1], 6, None, [], -1, 'u', 4]]
Old param cache: [[[], [], 'u', None, [], -1, 'u']]
[[10], [-1], 6, None, [], -1, 'u', 4]

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
root(uint256)
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
Propogating All
c_2
Ssa_name: c_2, name: c

Name: c Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Propogating All
Propogating All
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_38', 'XY_1'])
Phi
[i]Type for a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
[i] TMP_49 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
End popogation
TMP_49(bool) = a_1 > 3
lnorm: 6 rnorm: 0
[i]Type for TMP_49

Name: TMP_49 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_56 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
End popogation
TMP_56(bool) = a_1 != 0
[i]Type for TMP_56

Name: TMP_56 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_4, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: c, Num: 4
Globalname: c, contract_name: VaderMath
End popogation
c_4(uint256) := 1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: c_1, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 1
Globalname: c, contract_name: VaderMath
End popogation
c_1(uint256) := a_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_50 cleared
[i] TMP_51 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: VaderMath
End popogation
TMP_50(uint256) = a_1 (c)/ 2
lnorm: 6 rnorm: 0
Source address: u
lnorm: 6 rnorm: 0
10
-1
[i]Type for TMP_50

Name: TMP_50 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_51(uint256) = TMP_50 (c)+ 1
Source address: u
[i]Type for TMP_51

Name: TMP_51 Function: root
Num: 10
Den: -1
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_51(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
[i] x cleared
[i] TMP_52 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
End popogation
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
c_2(uint256) := ϕ(['c_1', 'c_3'])
Phi

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef

Name: c Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for c

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
x_2(uint256) := ϕ(['x_3', 'x_1'])
Phi

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for x

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
TMP_52(bool) = x_2 < c_2
lnorm: 0 rnorm: 6
[i]Type for TMP_52

Name: TMP_52 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: c_3, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: c, Num: 3
Globalname: c, contract_name: VaderMath
End popogation
c_3(uint256) := x_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
[i] TMP_53 cleared
[i] TMP_54 cleared
[i] TMP_55 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: x_3, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 3
Globalname: x, contract_name: VaderMath
End popogation
TMP_53(uint256) = a_1 (c)/ x_2
lnorm: 6 rnorm: 0
Source address: u
Source address: u
lnorm: 6 rnorm: 0
Source address: u
-1
9
[i]Type for TMP_53

Name: TMP_53 Function: root
Num: -1
Den: 9
Address: u
Norm: 6
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
TMP_54(uint256) = TMP_53 (c)+ x_2
[i]Type for TMP_54

Name: TMP_54 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_55(uint256) = TMP_54 (c)/ 2
lnorm: u rnorm: 0
lnorm: u rnorm: 0
[i]Type for TMP_55

Name: TMP_55 Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
x_3(uint256) := TMP_55(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_38', 'XY_1'])
Phi
[i]Type for a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
[i] TMP_49 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
End popogation
TMP_49(bool) = a_1 > 3
lnorm: 6 rnorm: 0
[i]Type for TMP_49

Name: TMP_49 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_56 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
End popogation
TMP_56(bool) = a_1 != 0
[i]Type for TMP_56

Name: TMP_56 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_4, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: c, Num: 4
Globalname: c, contract_name: VaderMath
End popogation
c_4(uint256) := 1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: c_1, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 1
Globalname: c, contract_name: VaderMath
End popogation
c_1(uint256) := a_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_50 cleared
[i] TMP_51 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: VaderMath
End popogation
TMP_50(uint256) = a_1 (c)/ 2
lnorm: 6 rnorm: 0
Source address: u
lnorm: 6 rnorm: 0
10
-1
[i]Type for TMP_50

Name: TMP_50 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_51(uint256) = TMP_50 (c)+ 1
Source address: u
[i]Type for TMP_51

Name: TMP_51 Function: root
Num: 10
Den: -1
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_51(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
[i] x cleared
[i] TMP_52 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
End popogation
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
c_2(uint256) := ϕ(['c_1', 'c_3'])
Phi

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef

Name: c Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for c

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
x_2(uint256) := ϕ(['x_3', 'x_1'])
Phi

Name: x Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
TMP_52(bool) = x_2 < c_2
lnorm: 0 rnorm: 6
10
-1
[i]Type for TMP_52

Name: TMP_52 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: c_3, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: c, Num: 3
Globalname: c, contract_name: VaderMath
End popogation
c_3(uint256) := x_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
[i] TMP_53 cleared
[i] TMP_54 cleared
[i] TMP_55 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: x_3, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 3
Globalname: x, contract_name: VaderMath
End popogation
TMP_53(uint256) = a_1 (c)/ x_2
lnorm: 6 rnorm: 0
Source address: u
Source address: u
lnorm: 6 rnorm: 0
Source address: u
Source address: u
[i]Type for TMP_53

Name: TMP_53 Function: root
Num: -1
Den: -1
Address: u
Norm: 6
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
TMP_54(uint256) = TMP_53 (c)+ x_2
Source address: u
[i]Type for TMP_54

Name: TMP_54 Function: root
Num: 10
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
TMP_55(uint256) = TMP_54 (c)/ 2
lnorm: 0 rnorm: 0
Source address: u
lnorm: 0 rnorm: 0
10
-1
[i]Type for TMP_55

Name: TMP_55 Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
x_3(uint256) := TMP_55(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_39

Name: TMP_39 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_40(uint256) = TMP_36 (c)* TMP_39
lnorm: u rnorm: u
[i]Type for TMP_40

Name: TMP_40 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
numeratorA_1(uint256) := TMP_40(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for numeratorA

Name: numeratorA Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_41 cleared
[i] numeratorB cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: numeratorB_1, name: numeratorB

Name: numeratorB Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: numeratorB, Num: 1
Globalname: numeratorB, contract_name: VaderMath
End popogation
TMP_41(uint256) = y2_1 (c)* reserveIn_1
lnorm: 0 rnorm: 6
Source address: u
[i]Type for TMP_41

Name: TMP_41 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
numeratorB_1(uint256) := TMP_41(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for numeratorB

Name: numeratorB Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] numeratorC cleared
Propogating parameters and globals to SSA variables...
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: numeratorC_1, name: numeratorC

Name: numeratorC Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numeratorC, Num: 1
Globalname: numeratorC, contract_name: VaderMath
End popogation
numeratorC_1(uint256) := XY_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for numeratorC

Name: numeratorC Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_42 cleared
[i] TMP_43 cleared
[i] numerator cleared
Propogating parameters and globals to SSA variables...
Ssa_name: numeratorC_1, name: numeratorC

Name: numeratorC Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: numeratorB_1, name: numeratorB

Name: numeratorB Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: numeratorA_1, name: numeratorA

Name: numeratorA Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numeratorA, Num: 1
Globalname: numeratorA, contract_name: VaderMath
Ssa_name: numeratorC_1, name: numeratorC

Name: numeratorC Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: numeratorB_1, name: numeratorB

Name: numeratorB Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: numeratorA_1, name: numeratorA

Name: numeratorA Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numeratorA, Num: 1
Globalname: numeratorA, contract_name: VaderMath
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numerator, Num: 1
Globalname: numerator, contract_name: VaderMath
End popogation
TMP_42(uint256) = numeratorC_1 (c)- numeratorA_1
Source address: u
[i]Type for TMP_42

Name: TMP_42 Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_43(uint256) = TMP_42 (c)- numeratorB_1
[i]Type for TMP_43

Name: TMP_43 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
numerator_1(uint256) := TMP_43(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for numerator

Name: numerator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] denominator cleared
Propogating parameters and globals to SSA variables...
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: denominator, Num: 1
Globalname: denominator, contract_name: VaderMath
End popogation
denominator_1(uint256) := y2_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for denominator

Name: denominator Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] TMP_44 cleared
[i] amountIn cleared
Propogating parameters and globals to SSA variables...
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numerator, Num: 1
Globalname: numerator, contract_name: VaderMath
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numerator, Num: 1
Globalname: numerator, contract_name: VaderMath
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: amountIn, Num: 1
Globalname: amountIn, contract_name: VaderMath
End popogation
TMP_44(uint256) = numerator_1 (c)/ denominator_1
lnorm: u rnorm: 0
lnorm: u rnorm: 0
[i]Type for TMP_44

Name: TMP_44 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
amountIn_1(uint256) := TMP_44(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for amountIn

Name: amountIn Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
End popogation
RETURN amountIn_1
RETURN

Name: amountIn Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_31 cleared
[i] XY cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: XY, Num: 1
Globalname: XY, contract_name: VaderMath
End popogation
TMP_31(uint256) = reserveIn_1 (c)* reserveOut_1
lnorm: 6 rnorm: 18
Source address: u
Source address: u
Source address: u
[i]Type for TMP_31

Name: TMP_31 Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
XY_1(uint256) := TMP_31(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for XY

Name: XY Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_32 cleared
[i] y2 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountOut_1, name: amountOut

Name: amountOut_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountOut_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountOut, Num: 1
Globalname: amountOut, contract_name: VaderMath
Ssa_name: amountOut_1, name: amountOut

Name: amountOut_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountOut_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountOut, Num: 1
Globalname: amountOut, contract_name: VaderMath
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: y2, Num: 1
Globalname: y2, contract_name: VaderMath
End popogation
TMP_32(uint256) = amountOut_1 (c)* 2
lnorm: u rnorm: 0
Source address: u
[i]Type for TMP_32

Name: TMP_32 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
y2_1(uint256) := TMP_32(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] TMP_33 cleared
[i] y4 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: y4, Num: 1
Globalname: y4, contract_name: VaderMath
End popogation
TMP_33(uint256) = y2_1 (c)* 2
lnorm: 0 rnorm: 0
Source address: u
[i]Type for TMP_33

Name: TMP_33 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
y4_1(uint256) := TMP_33(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
[i] TMP_34 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
End popogation
TMP_34(bool) = y4_1 < reserveOut_1
lnorm: 0 rnorm: 18
[i]Type for TMP_34

Name: TMP_34 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_35(None) = SOLIDITY_CALL require(bool,string)(TMP_34,VaderMath::calculateSwapReverse: Desired Output Exceeds Maximum Output Possible (1/4 of Liquidity Pool))
[i]Type for TMP_35

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_36 cleared
[i] TMP_37 cleared
[i] TMP_38 cleared
[i] TMP_39 cleared
[i] TMP_40 cleared
[i] numeratorA cleared
Propogating parameters and globals to SSA variables...
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: numeratorA_1, name: numeratorA

Name: numeratorA Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numeratorA, Num: 1
Globalname: numeratorA, contract_name: VaderMath
End popogation
TMP_36(uint256) = INTERNAL_CALL, VaderMath.root(uint256)(XY_1)
New param cache [[[10, 9], [-1], 24, None, [], -1, 'u', 'u']]
Old param cache: [[[], [], 'u', None, [], -1, 'u']]
[[10, 9], [-1], 24, None, [], -1, 'u', 'u']

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
root(uint256)
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
Propogating All
c_2
Ssa_name: c_2, name: c

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Propogating All
Propogating All
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_38', 'XY_1'])
Phi
[i]Type for a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_49 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_49(bool) = a_1 > 3
lnorm: 24 rnorm: 0
[i]Type for TMP_49

Name: TMP_49 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_56 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_56(bool) = a_1 != 0
[i]Type for TMP_56

Name: TMP_56 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_4, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: c, Num: 4
Globalname: c, contract_name: VaderMath
End popogation
c_4(uint256) := 1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: c_1, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 1
Globalname: c, contract_name: VaderMath
End popogation
c_1(uint256) := a_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_50 cleared
[i] TMP_51 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: VaderMath
End popogation
TMP_50(uint256) = a_1 (c)/ 2
lnorm: 24 rnorm: 0
Source address: u
lnorm: 24 rnorm: 0
10
9
-1
[i]Type for TMP_50

Name: TMP_50 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_51(uint256) = TMP_50 (c)+ 1
Source address: u
[i]Type for TMP_51

Name: TMP_51 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_51(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
[i] x cleared
[i] TMP_52 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
End popogation
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
c_2(uint256) := ϕ(['c_1', 'c_3'])
Phi

Name: c Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for c

Name: c Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
x_2(uint256) := ϕ(['x_3', 'x_1'])
Phi

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_52(bool) = x_2 < c_2
lnorm: 0 rnorm: 24
[i]Type for TMP_52

Name: TMP_52 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: c_3, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: c, Num: 3
Globalname: c, contract_name: VaderMath
End popogation
c_3(uint256) := x_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] TMP_53 cleared
[i] TMP_54 cleared
[i] TMP_55 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: x_3, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 3
Globalname: x, contract_name: VaderMath
End popogation
TMP_53(uint256) = a_1 (c)/ x_2
lnorm: 24 rnorm: 0
Source address: u
Source address: u
lnorm: 24 rnorm: 0
Source address: u
9
-1
[i]Type for TMP_53

Name: TMP_53 Function: root
Num: 9
Den: -1
Address: u
Norm: 24
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_54(uint256) = TMP_53 (c)+ x_2
10
10
-1
lnorm: 24 rnorm: 0
Source address: u
[i]Type for TMP_54

Name: TMP_54 Function: root
Num: 10
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
TMP_55(uint256) = TMP_54 (c)/ 2
lnorm: 0 rnorm: 0
Source address: u
lnorm: 0 rnorm: 0
10
-1
[i]Type for TMP_55

Name: TMP_55 Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
x_3(uint256) := TMP_55(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_38', 'XY_1'])
Phi
[i]Type for a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_49 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_49(bool) = a_1 > 3
lnorm: 24 rnorm: 0
[i]Type for TMP_49

Name: TMP_49 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_56 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_56(bool) = a_1 != 0
[i]Type for TMP_56

Name: TMP_56 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_4, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: c, Num: 4
Globalname: c, contract_name: VaderMath
End popogation
c_4(uint256) := 1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: c_1, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 1
Globalname: c, contract_name: VaderMath
End popogation
c_1(uint256) := a_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_50 cleared
[i] TMP_51 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: VaderMath
End popogation
TMP_50(uint256) = a_1 (c)/ 2
lnorm: 24 rnorm: 0
Source address: u
lnorm: 24 rnorm: 0
10
9
-1
[i]Type for TMP_50

Name: TMP_50 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_51(uint256) = TMP_50 (c)+ 1
Source address: u
[i]Type for TMP_51

Name: TMP_51 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_51(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
[i] x cleared
[i] TMP_52 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
End popogation
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
c_2(uint256) := ϕ(['c_1', 'c_3'])
Phi

Name: c Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for c

Name: c Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
x_2(uint256) := ϕ(['x_3', 'x_1'])
Phi

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_52(bool) = x_2 < c_2
lnorm: 0 rnorm: 24
[i]Type for TMP_52

Name: TMP_52 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: c_3, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: c, Num: 3
Globalname: c, contract_name: VaderMath
End popogation
c_3(uint256) := x_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] TMP_53 cleared
[i] TMP_54 cleared
[i] TMP_55 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: x_3, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 3
Globalname: x, contract_name: VaderMath
End popogation
TMP_53(uint256) = a_1 (c)/ x_2
lnorm: 24 rnorm: 0
Source address: u
Source address: u
lnorm: 24 rnorm: 0
Source address: u
9
-1
[i]Type for TMP_53

Name: TMP_53 Function: root
Num: 9
Den: -1
Address: u
Norm: 24
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_54(uint256) = TMP_53 (c)+ x_2
10
10
-1
lnorm: 24 rnorm: 0
Source address: u
[i]Type for TMP_54

Name: TMP_54 Function: root
Num: 10
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
TMP_55(uint256) = TMP_54 (c)/ 2
lnorm: 0 rnorm: 0
Source address: u
lnorm: 0 rnorm: 0
10
-1
[i]Type for TMP_55

Name: TMP_55 Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
x_3(uint256) := TMP_55(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_36

Name: TMP_36 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_37(uint256) = reserveOut_1 (c)- y4_1
Source address: u
[i]Type for TMP_37

Name: TMP_37 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
TMP_38(uint256) = reserveIn_1 (c)* TMP_37
lnorm: 6 rnorm: 0
Source address: u
[i]Type for TMP_38

Name: TMP_38 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
TMP_39(uint256) = INTERNAL_CALL, VaderMath.root(uint256)(TMP_38)
New param cache [[[10], [-1], 6, None, [], -1, 'u', 4]]
Old param cache: [[[], [], 'u', None, [], -1, 'u']]
[[10], [-1], 6, None, [], -1, 'u', 4]

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
root(uint256)
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
Propogating All
c_2
Ssa_name: c_2, name: c

Name: c Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Propogating All
Propogating All
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_38', 'XY_1'])
Phi
[i]Type for a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
[i] TMP_49 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
End popogation
TMP_49(bool) = a_1 > 3
lnorm: 6 rnorm: 0
[i]Type for TMP_49

Name: TMP_49 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_56 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
End popogation
TMP_56(bool) = a_1 != 0
[i]Type for TMP_56

Name: TMP_56 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_4, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: c, Num: 4
Globalname: c, contract_name: VaderMath
End popogation
c_4(uint256) := 1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: c_1, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 1
Globalname: c, contract_name: VaderMath
End popogation
c_1(uint256) := a_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_50 cleared
[i] TMP_51 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: VaderMath
End popogation
TMP_50(uint256) = a_1 (c)/ 2
lnorm: 6 rnorm: 0
Source address: u
lnorm: 6 rnorm: 0
10
-1
[i]Type for TMP_50

Name: TMP_50 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_51(uint256) = TMP_50 (c)+ 1
Source address: u
[i]Type for TMP_51

Name: TMP_51 Function: root
Num: 10
Den: -1
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_51(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
[i] x cleared
[i] TMP_52 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
End popogation
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
c_2(uint256) := ϕ(['c_1', 'c_3'])
Phi

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for c

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
x_2(uint256) := ϕ(['x_3', 'x_1'])
Phi

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_52(bool) = x_2 < c_2
lnorm: 0 rnorm: 6
10
-1
[i]Type for TMP_52

Name: TMP_52 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: c_3, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: c, Num: 3
Globalname: c, contract_name: VaderMath
End popogation
c_3(uint256) := x_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] TMP_53 cleared
[i] TMP_54 cleared
[i] TMP_55 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: x_3, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 3
Globalname: x, contract_name: VaderMath
End popogation
TMP_53(uint256) = a_1 (c)/ x_2
lnorm: 6 rnorm: 0
Source address: u
Source address: u
lnorm: 6 rnorm: 0
Source address: u
Source address: u
[i]Type for TMP_53

Name: TMP_53 Function: root
Num: -1
Den: -1
Address: u
Norm: 6
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_54(uint256) = TMP_53 (c)+ x_2
Source address: u
[i]Type for TMP_54

Name: TMP_54 Function: root
Num: 10
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
TMP_55(uint256) = TMP_54 (c)/ 2
lnorm: 0 rnorm: 0
Source address: u
lnorm: 0 rnorm: 0
10
-1
[i]Type for TMP_55

Name: TMP_55 Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
x_3(uint256) := TMP_55(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_38', 'XY_1'])
Phi
[i]Type for a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
[i] TMP_49 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
End popogation
TMP_49(bool) = a_1 > 3
lnorm: 6 rnorm: 0
[i]Type for TMP_49

Name: TMP_49 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_56 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
End popogation
TMP_56(bool) = a_1 != 0
[i]Type for TMP_56

Name: TMP_56 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_4, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: c, Num: 4
Globalname: c, contract_name: VaderMath
End popogation
c_4(uint256) := 1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: c_1, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 1
Globalname: c, contract_name: VaderMath
End popogation
c_1(uint256) := a_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_50 cleared
[i] TMP_51 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: VaderMath
End popogation
TMP_50(uint256) = a_1 (c)/ 2
lnorm: 6 rnorm: 0
Source address: u
lnorm: 6 rnorm: 0
10
-1
[i]Type for TMP_50

Name: TMP_50 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_51(uint256) = TMP_50 (c)+ 1
Source address: u
[i]Type for TMP_51

Name: TMP_51 Function: root
Num: 10
Den: -1
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_51(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
[i] x cleared
[i] TMP_52 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
End popogation
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
c_2(uint256) := ϕ(['c_1', 'c_3'])
Phi

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for c

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
x_2(uint256) := ϕ(['x_3', 'x_1'])
Phi

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_52(bool) = x_2 < c_2
lnorm: 0 rnorm: 6
10
-1
[i]Type for TMP_52

Name: TMP_52 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: c_3, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: c, Num: 3
Globalname: c, contract_name: VaderMath
End popogation
c_3(uint256) := x_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] TMP_53 cleared
[i] TMP_54 cleared
[i] TMP_55 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: x_3, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 3
Globalname: x, contract_name: VaderMath
End popogation
TMP_53(uint256) = a_1 (c)/ x_2
lnorm: 6 rnorm: 0
Source address: u
Source address: u
lnorm: 6 rnorm: 0
Source address: u
Source address: u
[i]Type for TMP_53

Name: TMP_53 Function: root
Num: -1
Den: -1
Address: u
Norm: 6
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_54(uint256) = TMP_53 (c)+ x_2
Source address: u
[i]Type for TMP_54

Name: TMP_54 Function: root
Num: 10
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
TMP_55(uint256) = TMP_54 (c)/ 2
lnorm: 0 rnorm: 0
Source address: u
lnorm: 0 rnorm: 0
10
-1
[i]Type for TMP_55

Name: TMP_55 Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
x_3(uint256) := TMP_55(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_39

Name: TMP_39 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_40(uint256) = TMP_36 (c)* TMP_39
lnorm: u rnorm: u
[i]Type for TMP_40

Name: TMP_40 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
numeratorA_1(uint256) := TMP_40(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for numeratorA

Name: numeratorA Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_41 cleared
[i] numeratorB cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: numeratorB_1, name: numeratorB

Name: numeratorB Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: numeratorB, Num: 1
Globalname: numeratorB, contract_name: VaderMath
End popogation
TMP_41(uint256) = y2_1 (c)* reserveIn_1
lnorm: 0 rnorm: 6
Source address: u
[i]Type for TMP_41

Name: TMP_41 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
numeratorB_1(uint256) := TMP_41(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for numeratorB

Name: numeratorB Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] numeratorC cleared
Propogating parameters and globals to SSA variables...
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: numeratorC_1, name: numeratorC

Name: numeratorC Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numeratorC, Num: 1
Globalname: numeratorC, contract_name: VaderMath
End popogation
numeratorC_1(uint256) := XY_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for numeratorC

Name: numeratorC Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_42 cleared
[i] TMP_43 cleared
[i] numerator cleared
Propogating parameters and globals to SSA variables...
Ssa_name: numeratorC_1, name: numeratorC

Name: numeratorC Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: numeratorB_1, name: numeratorB

Name: numeratorB Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: numeratorA_1, name: numeratorA

Name: numeratorA Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numeratorA, Num: 1
Globalname: numeratorA, contract_name: VaderMath
Ssa_name: numeratorC_1, name: numeratorC

Name: numeratorC Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: numeratorB_1, name: numeratorB

Name: numeratorB Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: numeratorA_1, name: numeratorA

Name: numeratorA Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numeratorA, Num: 1
Globalname: numeratorA, contract_name: VaderMath
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numerator, Num: 1
Globalname: numerator, contract_name: VaderMath
End popogation
TMP_42(uint256) = numeratorC_1 (c)- numeratorA_1
Source address: u
[i]Type for TMP_42

Name: TMP_42 Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_43(uint256) = TMP_42 (c)- numeratorB_1
[i]Type for TMP_43

Name: TMP_43 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
numerator_1(uint256) := TMP_43(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for numerator

Name: numerator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] denominator cleared
Propogating parameters and globals to SSA variables...
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: denominator, Num: 1
Globalname: denominator, contract_name: VaderMath
End popogation
denominator_1(uint256) := y2_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for denominator

Name: denominator Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] TMP_44 cleared
[i] amountIn cleared
Propogating parameters and globals to SSA variables...
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numerator, Num: 1
Globalname: numerator, contract_name: VaderMath
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numerator, Num: 1
Globalname: numerator, contract_name: VaderMath
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: amountIn, Num: 1
Globalname: amountIn, contract_name: VaderMath
End popogation
TMP_44(uint256) = numerator_1 (c)/ denominator_1
lnorm: u rnorm: 0
lnorm: u rnorm: 0
[i]Type for TMP_44

Name: TMP_44 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
amountIn_1(uint256) := TMP_44(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for amountIn

Name: amountIn Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
End popogation
RETURN amountIn_1
RETURN

Name: amountIn Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Source address: u
Source address: u
[i]Type for TMP_90

Name: TMP_90 Function: calculateInGivenOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
RETURN TMP_90
RETURN

Name: TMP_90 Function: calculateInGivenOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
[i] nativeReserve0 cleared
[i] foreignReserve0 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: pool0_1, name: pool0

Name: pool0 Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pool0, Num: 1
Globalname: pool0, contract_name: VaderRouter
Ssa_name: pool0_1, name: pool0

Name: pool0 Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pool0, Num: 1
Globalname: pool0, contract_name: VaderRouter
Ssa_name: nativeReserve0_1, name: nativeReserve0

Name: nativeReserve0 Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Name: nativeReserve0, Num: 1
Globalname: nativeReserve0, contract_name: VaderRouter
Ssa_name: foreignReserve0_1, name: foreignReserve0

Name: foreignReserve0 Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Name: foreignReserve0, Num: 1
Globalname: foreignReserve0, contract_name: VaderRouter
End popogation
TUPLE_4(uint112,uint112,uint32) = HIGH_LEVEL_CALL, dest:pool0_1(IVaderPool), function:getReserves, arguments:[]  
High Call: getReserves
Running querryfc
Found: None
Written func info: IVaderPool, getReserves
Retvar: ('c', ['global:nativeAsset'], ['-1'], 18, "'u'", 'u')
{'global:_owner': 1, 'global:_tokenApprovals': 2, 'global:_owners': 3, 'swap:to': -999, 'mint:to': -998, 'mint:TMP_139': 4, 'global:this': 4, 'None:None': 5, 'mint:foreignAsset': 6, 'swap:_nativeAsset': 7, 'swap:_foreignAsset': 8, 'global:nativeAsset': 9, 'global:foreignAsset': 10, 'global:_ZERO_ADDRESS': 11, 'removeLiquidity:tokenA': -997, 'removeLiquidity:tokenB': -996, 'removeLiquidity:to': -995, 'swapExactTokensForTokens:path': -994, 'swapExactTokensForTokens:to': -993, 'swapTokensForExactTokens:path': -992, 'swapTokensForExactTokens:to': -991, 'calculateInGivenOut:path': -990, 'calculateOutGivenIn:path': -989}
Retvar: ('c', ['global:foreignAsset'], ['-1'], 6, "'u'", 'u')
{'global:_owner': 1, 'global:_tokenApprovals': 2, 'global:_owners': 3, 'swap:to': -999, 'mint:to': -998, 'mint:TMP_139': 4, 'global:this': 4, 'None:None': 5, 'mint:foreignAsset': 6, 'swap:_nativeAsset': 7, 'swap:_foreignAsset': 8, 'global:nativeAsset': 9, 'global:foreignAsset': 10, 'global:_ZERO_ADDRESS': 11, 'removeLiquidity:tokenA': -997, 'removeLiquidity:tokenB': -996, 'removeLiquidity:to': -995, 'swapExactTokensForTokens:path': -994, 'swapExactTokensForTokens:to': -993, 'swapTokensForExactTokens:path': -992, 'swapTokensForExactTokens:to': -991, 'calculateInGivenOut:path': -990, 'calculateOutGivenIn:path': -989}
[i]Type for TUPLE_4

Name: TUPLE_4 Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
nativeReserve0_1(uint256)= UNPACK TUPLE_4 index: 0 
([9], [-1], 18, "'u'", 'u', -1)
[i]Type for nativeReserve0

Name: nativeReserve0 Function: calculateInGivenOut
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
foreignReserve0_1(uint256)= UNPACK TUPLE_4 index: 1 
([10], [-1], 6, "'u'", 'u', -1)
[i]Type for foreignReserve0

Name: foreignReserve0 Function: calculateInGivenOut
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] nativeReserve1 cleared
[i] foreignReserve1 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: pool1_1, name: pool1

Name: pool1 Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pool1, Num: 1
Globalname: pool1, contract_name: VaderRouter
Ssa_name: pool1_1, name: pool1

Name: pool1 Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pool1, Num: 1
Globalname: pool1, contract_name: VaderRouter
Ssa_name: nativeReserve1_1, name: nativeReserve1

Name: nativeReserve1 Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Name: nativeReserve1, Num: 1
Globalname: nativeReserve1, contract_name: VaderRouter
Ssa_name: foreignReserve1_1, name: foreignReserve1

Name: foreignReserve1 Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Name: foreignReserve1, Num: 1
Globalname: foreignReserve1, contract_name: VaderRouter
End popogation
TUPLE_5(uint112,uint112,uint32) = HIGH_LEVEL_CALL, dest:pool1_1(IVaderPool), function:getReserves, arguments:[]  
High Call: getReserves
Running querryfc
Found: None
Written func info: IVaderPool, getReserves
Retvar: ('c', ['global:nativeAsset'], ['-1'], 18, "'u'", 'u')
{'global:_owner': 1, 'global:_tokenApprovals': 2, 'global:_owners': 3, 'swap:to': -999, 'mint:to': -998, 'mint:TMP_139': 4, 'global:this': 4, 'None:None': 5, 'mint:foreignAsset': 6, 'swap:_nativeAsset': 7, 'swap:_foreignAsset': 8, 'global:nativeAsset': 9, 'global:foreignAsset': 10, 'global:_ZERO_ADDRESS': 11, 'removeLiquidity:tokenA': -997, 'removeLiquidity:tokenB': -996, 'removeLiquidity:to': -995, 'swapExactTokensForTokens:path': -994, 'swapExactTokensForTokens:to': -993, 'swapTokensForExactTokens:path': -992, 'swapTokensForExactTokens:to': -991, 'calculateInGivenOut:path': -990, 'calculateOutGivenIn:path': -989}
Retvar: ('c', ['global:foreignAsset'], ['-1'], 6, "'u'", 'u')
{'global:_owner': 1, 'global:_tokenApprovals': 2, 'global:_owners': 3, 'swap:to': -999, 'mint:to': -998, 'mint:TMP_139': 4, 'global:this': 4, 'None:None': 5, 'mint:foreignAsset': 6, 'swap:_nativeAsset': 7, 'swap:_foreignAsset': 8, 'global:nativeAsset': 9, 'global:foreignAsset': 10, 'global:_ZERO_ADDRESS': 11, 'removeLiquidity:tokenA': -997, 'removeLiquidity:tokenB': -996, 'removeLiquidity:to': -995, 'swapExactTokensForTokens:path': -994, 'swapExactTokensForTokens:to': -993, 'swapTokensForExactTokens:path': -992, 'swapTokensForExactTokens:to': -991, 'calculateInGivenOut:path': -990, 'calculateOutGivenIn:path': -989}
[i]Type for TUPLE_5

Name: TUPLE_5 Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
nativeReserve1_1(uint256)= UNPACK TUPLE_5 index: 0 
([9], [-1], 18, "'u'", 'u', -1)
[i]Type for nativeReserve1

Name: nativeReserve1 Function: calculateInGivenOut
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
foreignReserve1_1(uint256)= UNPACK TUPLE_5 index: 1 
([10], [-1], 6, "'u'", 'u', -1)
[i]Type for foreignReserve1

Name: foreignReserve1 Function: calculateInGivenOut
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
[i] TMP_93 cleared
[i] TMP_94 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: foreignReserve1_1, name: foreignReserve1

Name: foreignReserve1 Function: calculateInGivenOut
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: foreignReserve0_1, name: foreignReserve0

Name: foreignReserve0 Function: calculateInGivenOut
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: nativeReserve0_1, name: nativeReserve0

Name: nativeReserve0 Function: calculateInGivenOut
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amountOut_1, name: amountOut

Name: amountOut_1 Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountOut_1 Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountOut, Num: 1
Globalname: amountOut, contract_name: VaderRouter
Ssa_name: nativeReserve1_1, name: nativeReserve1

Name: nativeReserve1 Function: calculateInGivenOut
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: foreignReserve1_1, name: foreignReserve1

Name: foreignReserve1 Function: calculateInGivenOut
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: foreignReserve0_1, name: foreignReserve0

Name: foreignReserve0 Function: calculateInGivenOut
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: nativeReserve0_1, name: nativeReserve0

Name: nativeReserve0 Function: calculateInGivenOut
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amountOut_1, name: amountOut

Name: amountOut_1 Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountOut_1 Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountOut, Num: 1
Globalname: amountOut, contract_name: VaderRouter
Ssa_name: nativeReserve1_1, name: nativeReserve1

Name: nativeReserve1 Function: calculateInGivenOut
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
End popogation
TMP_93(uint256) = LIBRARY_CALL, dest:VaderMath, function:VaderMath.calculateSwapReverse(uint256,uint256,uint256), arguments:['amountOut_1', 'nativeReserve1_1', 'foreignReserve1_1'] 
Found: calculateSwapReverse

Name: amountOut_1 Function: calculateInGivenOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: nativeReserve1 Function: calculateInGivenOut
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: foreignReserve1 Function: calculateInGivenOut
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
High level cal param_cache
Param: 0
    num: []
    den: []
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [9]
    den: [-1]
    norm: 18
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [10]
    den: [-1]
    norm: 6
    link: None
    fields: []
    fintype: -1
New param cache [[[], [], 'u', None, [], -1, 'u', 'u'], [[9], [-1], 18, None, [], -1, 'u', "'u'"], [[10], [-1], 6, None, [], -1, 'u', "'u'"]]
Old param cache: [[[-1], [-1], 'u', None, [], -1, 'u'], [[-1], [-1], 'u', None, [], -1, 'u'], [[-1], [-1], 'u', None, [], -1, 'u']]
[[], [], 'u', None, [], -1, 'u', 'u']

Name: amountOut Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[9], [-1], 18, None, [], -1, 'u', "'u'"]

Name: reserveIn Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
[[10], [-1], 6, None, [], -1, 'u', "'u'"]

Name: reserveOut Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
calculateSwapReverse(uint256,uint256,uint256)
Propogating All
Propogating All
reserveOut_1
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: reserveOut_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
reserveIn_1
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: reserveIn_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
Propogating All
amountOut_1
Ssa_name: amountOut_1, name: amountOut

Name: amountOut_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountOut_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
y2_1
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Propogating All
reserveOut_1
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: reserveOut_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
y4_1
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Propogating All
y4_1
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
reserveOut_1
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: reserveOut_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
reserveIn_1
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: reserveIn_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
XY_1
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
reserveIn_1
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: reserveIn_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
y2_1
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Propogating All
XY_1
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
numeratorC_1
Ssa_name: numeratorC_1, name: numeratorC

Name: numeratorC Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
numeratorB_1
Ssa_name: numeratorB_1, name: numeratorB

Name: numeratorB Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 2
Fields: 
Finance Type: undef
numeratorA_1
Ssa_name: numeratorA_1, name: numeratorA

Name: numeratorA Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
y2_1
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Propogating All
numerator_1
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
denominator_1
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Propogating All
amountIn_1
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_31 cleared
[i] XY cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: XY, Num: 1
Globalname: XY, contract_name: VaderMath
End popogation
TMP_31(uint256) = reserveIn_1 (c)* reserveOut_1
lnorm: 18 rnorm: 6
Source address: u
Source address: u
Source address: u
[i]Type for TMP_31

Name: TMP_31 Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
XY_1(uint256) := TMP_31(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for XY

Name: XY Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_32 cleared
[i] y2 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountOut_1, name: amountOut

Name: amountOut_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountOut_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountOut, Num: 1
Globalname: amountOut, contract_name: VaderMath
Ssa_name: amountOut_1, name: amountOut

Name: amountOut_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountOut_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountOut, Num: 1
Globalname: amountOut, contract_name: VaderMath
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: y2, Num: 1
Globalname: y2, contract_name: VaderMath
End popogation
TMP_32(uint256) = amountOut_1 (c)* 2
lnorm: u rnorm: 0
Source address: u
[i]Type for TMP_32

Name: TMP_32 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
y2_1(uint256) := TMP_32(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] TMP_33 cleared
[i] y4 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: y4, Num: 1
Globalname: y4, contract_name: VaderMath
End popogation
TMP_33(uint256) = y2_1 (c)* 2
lnorm: 0 rnorm: 0
Source address: u
[i]Type for TMP_33

Name: TMP_33 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
y4_1(uint256) := TMP_33(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
[i] TMP_34 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
End popogation
TMP_34(bool) = y4_1 < reserveOut_1
lnorm: 0 rnorm: 6
[i]Type for TMP_34

Name: TMP_34 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_35(None) = SOLIDITY_CALL require(bool,string)(TMP_34,VaderMath::calculateSwapReverse: Desired Output Exceeds Maximum Output Possible (1/4 of Liquidity Pool))
[i]Type for TMP_35

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_36 cleared
[i] TMP_37 cleared
[i] TMP_38 cleared
[i] TMP_39 cleared
[i] TMP_40 cleared
[i] numeratorA cleared
Propogating parameters and globals to SSA variables...
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: numeratorA_1, name: numeratorA

Name: numeratorA Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numeratorA, Num: 1
Globalname: numeratorA, contract_name: VaderMath
End popogation
TMP_36(uint256) = INTERNAL_CALL, VaderMath.root(uint256)(XY_1)
New param cache [[[9, 10], [-1], 24, None, [], -1, 'u', 'u']]
Old param cache: [[[], [], 'u', None, [], -1, 'u']]
[[9, 10], [-1], 24, None, [], -1, 'u', 'u']

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
root(uint256)
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
Propogating All
c_2
Ssa_name: c_2, name: c

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Propogating All
Propogating All
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_38', 'XY_1'])
Phi
[i]Type for a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_49 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_49(bool) = a_1 > 3
lnorm: 24 rnorm: 0
[i]Type for TMP_49

Name: TMP_49 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_56 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_56(bool) = a_1 != 0
[i]Type for TMP_56

Name: TMP_56 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_4, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: c, Num: 4
Globalname: c, contract_name: VaderMath
End popogation
c_4(uint256) := 1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: c_1, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 1
Globalname: c, contract_name: VaderMath
End popogation
c_1(uint256) := a_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_50 cleared
[i] TMP_51 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: VaderMath
End popogation
TMP_50(uint256) = a_1 (c)/ 2
lnorm: 24 rnorm: 0
Source address: u
lnorm: 24 rnorm: 0
10
9
-1
[i]Type for TMP_50

Name: TMP_50 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_51(uint256) = TMP_50 (c)+ 1
Source address: u
[i]Type for TMP_51

Name: TMP_51 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_51(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
[i] x cleared
[i] TMP_52 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
End popogation
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
c_2(uint256) := ϕ(['c_1', 'c_3'])
Phi

Name: c Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for c

Name: c Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
x_2(uint256) := ϕ(['x_3', 'x_1'])
Phi

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_52(bool) = x_2 < c_2
lnorm: 0 rnorm: 24
[i]Type for TMP_52

Name: TMP_52 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: c_3, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: c, Num: 3
Globalname: c, contract_name: VaderMath
End popogation
c_3(uint256) := x_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] TMP_53 cleared
[i] TMP_54 cleared
[i] TMP_55 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: x_3, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 3
Globalname: x, contract_name: VaderMath
End popogation
TMP_53(uint256) = a_1 (c)/ x_2
lnorm: 24 rnorm: 0
Source address: u
Source address: u
lnorm: 24 rnorm: 0
Source address: u
9
-1
[i]Type for TMP_53

Name: TMP_53 Function: root
Num: 9
Den: -1
Address: u
Norm: 24
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_54(uint256) = TMP_53 (c)+ x_2
10
10
-1
lnorm: 24 rnorm: 0
Source address: u
[i]Type for TMP_54

Name: TMP_54 Function: root
Num: 10
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
TMP_55(uint256) = TMP_54 (c)/ 2
lnorm: 0 rnorm: 0
Source address: u
lnorm: 0 rnorm: 0
10
-1
[i]Type for TMP_55

Name: TMP_55 Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
x_3(uint256) := TMP_55(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_38', 'XY_1'])
Phi
[i]Type for a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_49 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_49(bool) = a_1 > 3
lnorm: 24 rnorm: 0
[i]Type for TMP_49

Name: TMP_49 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_56 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_56(bool) = a_1 != 0
[i]Type for TMP_56

Name: TMP_56 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_4, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: c, Num: 4
Globalname: c, contract_name: VaderMath
End popogation
c_4(uint256) := 1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: c_1, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 1
Globalname: c, contract_name: VaderMath
End popogation
c_1(uint256) := a_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_50 cleared
[i] TMP_51 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: VaderMath
End popogation
TMP_50(uint256) = a_1 (c)/ 2
lnorm: 24 rnorm: 0
Source address: u
lnorm: 24 rnorm: 0
10
9
-1
[i]Type for TMP_50

Name: TMP_50 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_51(uint256) = TMP_50 (c)+ 1
Source address: u
[i]Type for TMP_51

Name: TMP_51 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_51(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
[i] x cleared
[i] TMP_52 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
End popogation
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
c_2(uint256) := ϕ(['c_1', 'c_3'])
Phi

Name: c Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for c

Name: c Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
x_2(uint256) := ϕ(['x_3', 'x_1'])
Phi

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_52(bool) = x_2 < c_2
lnorm: 0 rnorm: 24
[i]Type for TMP_52

Name: TMP_52 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: c_3, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: c, Num: 3
Globalname: c, contract_name: VaderMath
End popogation
c_3(uint256) := x_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] TMP_53 cleared
[i] TMP_54 cleared
[i] TMP_55 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: x_3, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 3
Globalname: x, contract_name: VaderMath
End popogation
TMP_53(uint256) = a_1 (c)/ x_2
lnorm: 24 rnorm: 0
Source address: u
Source address: u
lnorm: 24 rnorm: 0
Source address: u
9
-1
[i]Type for TMP_53

Name: TMP_53 Function: root
Num: 9
Den: -1
Address: u
Norm: 24
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_54(uint256) = TMP_53 (c)+ x_2
10
10
-1
lnorm: 24 rnorm: 0
Source address: u
[i]Type for TMP_54

Name: TMP_54 Function: root
Num: 10
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
TMP_55(uint256) = TMP_54 (c)/ 2
lnorm: 0 rnorm: 0
Source address: u
lnorm: 0 rnorm: 0
10
-1
[i]Type for TMP_55

Name: TMP_55 Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
x_3(uint256) := TMP_55(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_36

Name: TMP_36 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_37(uint256) = reserveOut_1 (c)- y4_1
Source address: u
[i]Type for TMP_37

Name: TMP_37 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
TMP_38(uint256) = reserveIn_1 (c)* TMP_37
lnorm: 18 rnorm: 0
Source address: u
[i]Type for TMP_38

Name: TMP_38 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
TMP_39(uint256) = INTERNAL_CALL, VaderMath.root(uint256)(TMP_38)
New param cache [[[9], [-1], 18, None, [], -1, 'u', 4]]
Old param cache: [[[], [], 'u', None, [], -1, 'u']]
[[9], [-1], 18, None, [], -1, 'u', 4]

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
root(uint256)
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
Propogating All
c_2
Ssa_name: c_2, name: c

Name: c Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Propogating All
Propogating All
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_38', 'XY_1'])
Phi
[i]Type for a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
[i] TMP_49 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
End popogation
TMP_49(bool) = a_1 > 3
lnorm: 18 rnorm: 0
[i]Type for TMP_49

Name: TMP_49 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_56 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
End popogation
TMP_56(bool) = a_1 != 0
[i]Type for TMP_56

Name: TMP_56 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_4, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: c, Num: 4
Globalname: c, contract_name: VaderMath
End popogation
c_4(uint256) := 1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: c_1, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 1
Globalname: c, contract_name: VaderMath
End popogation
c_1(uint256) := a_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_50 cleared
[i] TMP_51 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: VaderMath
End popogation
TMP_50(uint256) = a_1 (c)/ 2
lnorm: 18 rnorm: 0
Source address: u
lnorm: 18 rnorm: 0
9
-1
[i]Type for TMP_50

Name: TMP_50 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_51(uint256) = TMP_50 (c)+ 1
Source address: u
[i]Type for TMP_51

Name: TMP_51 Function: root
Num: 9
Den: -1
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_51(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
[i] x cleared
[i] TMP_52 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
End popogation
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
c_2(uint256) := ϕ(['c_1', 'c_3'])
Phi

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for c

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
x_2(uint256) := ϕ(['x_3', 'x_1'])
Phi

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_52(bool) = x_2 < c_2
lnorm: 0 rnorm: 18
10
10
-1
[i]Type for TMP_52

Name: TMP_52 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: c_3, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: c, Num: 3
Globalname: c, contract_name: VaderMath
End popogation
c_3(uint256) := x_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] TMP_53 cleared
[i] TMP_54 cleared
[i] TMP_55 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: x_3, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 3
Globalname: x, contract_name: VaderMath
End popogation
TMP_53(uint256) = a_1 (c)/ x_2
lnorm: 18 rnorm: 0
Source address: u
Source address: u
lnorm: 18 rnorm: 0
Source address: u
9
10
[i]Type for TMP_53

Name: TMP_53 Function: root
Num: 9
Den: 10
Address: u
Norm: 18
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_54(uint256) = TMP_53 (c)+ x_2
10
10
-1
[i]Type for TMP_54

Name: TMP_54 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_55(uint256) = TMP_54 (c)/ 2
lnorm: u rnorm: 0
lnorm: u rnorm: 0
[i]Type for TMP_55

Name: TMP_55 Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
x_3(uint256) := TMP_55(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_38', 'XY_1'])
Phi
[i]Type for a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
[i] TMP_49 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
End popogation
TMP_49(bool) = a_1 > 3
lnorm: 18 rnorm: 0
[i]Type for TMP_49

Name: TMP_49 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_56 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
End popogation
TMP_56(bool) = a_1 != 0
[i]Type for TMP_56

Name: TMP_56 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_4, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: c, Num: 4
Globalname: c, contract_name: VaderMath
End popogation
c_4(uint256) := 1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: c_1, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 1
Globalname: c, contract_name: VaderMath
End popogation
c_1(uint256) := a_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_50 cleared
[i] TMP_51 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: VaderMath
End popogation
TMP_50(uint256) = a_1 (c)/ 2
lnorm: 18 rnorm: 0
Source address: u
lnorm: 18 rnorm: 0
9
-1
[i]Type for TMP_50

Name: TMP_50 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_51(uint256) = TMP_50 (c)+ 1
Source address: u
[i]Type for TMP_51

Name: TMP_51 Function: root
Num: 9
Den: -1
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_51(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
[i] x cleared
[i] TMP_52 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
End popogation
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
c_2(uint256) := ϕ(['c_1', 'c_3'])
Phi

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for c

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
x_2(uint256) := ϕ(['x_3', 'x_1'])
Phi

Name: x Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
TMP_52(bool) = x_2 < c_2
lnorm: 0 rnorm: 18
9
-1
[i]Type for TMP_52

Name: TMP_52 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: c_3, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: c, Num: 3
Globalname: c, contract_name: VaderMath
End popogation
c_3(uint256) := x_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
[i] TMP_53 cleared
[i] TMP_54 cleared
[i] TMP_55 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: x_3, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 3
Globalname: x, contract_name: VaderMath
End popogation
TMP_53(uint256) = a_1 (c)/ x_2
lnorm: 18 rnorm: 0
Source address: u
Source address: u
lnorm: 18 rnorm: 0
Source address: u
Source address: u
[i]Type for TMP_53

Name: TMP_53 Function: root
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
TMP_54(uint256) = TMP_53 (c)+ x_2
Source address: u
[i]Type for TMP_54

Name: TMP_54 Function: root
Num: 9
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
TMP_55(uint256) = TMP_54 (c)/ 2
lnorm: 0 rnorm: 0
Source address: u
lnorm: 0 rnorm: 0
9
-1
[i]Type for TMP_55

Name: TMP_55 Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
x_3(uint256) := TMP_55(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_39

Name: TMP_39 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_40(uint256) = TMP_36 (c)* TMP_39
lnorm: u rnorm: u
[i]Type for TMP_40

Name: TMP_40 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
numeratorA_1(uint256) := TMP_40(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for numeratorA

Name: numeratorA Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_41 cleared
[i] numeratorB cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: numeratorB_1, name: numeratorB

Name: numeratorB Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: numeratorB, Num: 1
Globalname: numeratorB, contract_name: VaderMath
End popogation
TMP_41(uint256) = y2_1 (c)* reserveIn_1
lnorm: 0 rnorm: 18
Source address: u
[i]Type for TMP_41

Name: TMP_41 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
numeratorB_1(uint256) := TMP_41(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for numeratorB

Name: numeratorB Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] numeratorC cleared
Propogating parameters and globals to SSA variables...
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: numeratorC_1, name: numeratorC

Name: numeratorC Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numeratorC, Num: 1
Globalname: numeratorC, contract_name: VaderMath
End popogation
numeratorC_1(uint256) := XY_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for numeratorC

Name: numeratorC Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_42 cleared
[i] TMP_43 cleared
[i] numerator cleared
Propogating parameters and globals to SSA variables...
Ssa_name: numeratorC_1, name: numeratorC

Name: numeratorC Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: numeratorB_1, name: numeratorB

Name: numeratorB Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: numeratorA_1, name: numeratorA

Name: numeratorA Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numeratorA, Num: 1
Globalname: numeratorA, contract_name: VaderMath
Ssa_name: numeratorC_1, name: numeratorC

Name: numeratorC Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: numeratorB_1, name: numeratorB

Name: numeratorB Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: numeratorA_1, name: numeratorA

Name: numeratorA Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numeratorA, Num: 1
Globalname: numeratorA, contract_name: VaderMath
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numerator, Num: 1
Globalname: numerator, contract_name: VaderMath
End popogation
TMP_42(uint256) = numeratorC_1 (c)- numeratorA_1
Source address: u
[i]Type for TMP_42

Name: TMP_42 Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_43(uint256) = TMP_42 (c)- numeratorB_1
[i]Type for TMP_43

Name: TMP_43 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
numerator_1(uint256) := TMP_43(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for numerator

Name: numerator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] denominator cleared
Propogating parameters and globals to SSA variables...
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: denominator, Num: 1
Globalname: denominator, contract_name: VaderMath
End popogation
denominator_1(uint256) := y2_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for denominator

Name: denominator Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] TMP_44 cleared
[i] amountIn cleared
Propogating parameters and globals to SSA variables...
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numerator, Num: 1
Globalname: numerator, contract_name: VaderMath
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numerator, Num: 1
Globalname: numerator, contract_name: VaderMath
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: amountIn, Num: 1
Globalname: amountIn, contract_name: VaderMath
End popogation
TMP_44(uint256) = numerator_1 (c)/ denominator_1
lnorm: u rnorm: 0
lnorm: u rnorm: 0
[i]Type for TMP_44

Name: TMP_44 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
amountIn_1(uint256) := TMP_44(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for amountIn

Name: amountIn Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
End popogation
RETURN amountIn_1
RETURN

Name: amountIn Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_31 cleared
[i] XY cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: XY, Num: 1
Globalname: XY, contract_name: VaderMath
End popogation
TMP_31(uint256) = reserveIn_1 (c)* reserveOut_1
lnorm: 18 rnorm: 6
Source address: u
Source address: u
Source address: u
[i]Type for TMP_31

Name: TMP_31 Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
XY_1(uint256) := TMP_31(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for XY

Name: XY Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_32 cleared
[i] y2 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountOut_1, name: amountOut

Name: amountOut_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountOut_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountOut, Num: 1
Globalname: amountOut, contract_name: VaderMath
Ssa_name: amountOut_1, name: amountOut

Name: amountOut_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountOut_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountOut, Num: 1
Globalname: amountOut, contract_name: VaderMath
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: y2, Num: 1
Globalname: y2, contract_name: VaderMath
End popogation
TMP_32(uint256) = amountOut_1 (c)* 2
lnorm: u rnorm: 0
Source address: u
[i]Type for TMP_32

Name: TMP_32 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
y2_1(uint256) := TMP_32(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] TMP_33 cleared
[i] y4 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: y4, Num: 1
Globalname: y4, contract_name: VaderMath
End popogation
TMP_33(uint256) = y2_1 (c)* 2
lnorm: 0 rnorm: 0
Source address: u
[i]Type for TMP_33

Name: TMP_33 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
y4_1(uint256) := TMP_33(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
[i] TMP_34 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
End popogation
TMP_34(bool) = y4_1 < reserveOut_1
lnorm: 0 rnorm: 6
[i]Type for TMP_34

Name: TMP_34 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_35(None) = SOLIDITY_CALL require(bool,string)(TMP_34,VaderMath::calculateSwapReverse: Desired Output Exceeds Maximum Output Possible (1/4 of Liquidity Pool))
[i]Type for TMP_35

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_36 cleared
[i] TMP_37 cleared
[i] TMP_38 cleared
[i] TMP_39 cleared
[i] TMP_40 cleared
[i] numeratorA cleared
Propogating parameters and globals to SSA variables...
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: numeratorA_1, name: numeratorA

Name: numeratorA Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numeratorA, Num: 1
Globalname: numeratorA, contract_name: VaderMath
End popogation
TMP_36(uint256) = INTERNAL_CALL, VaderMath.root(uint256)(XY_1)
New param cache [[[9, 10], [-1], 24, None, [], -1, 'u', 'u']]
Old param cache: [[[], [], 'u', None, [], -1, 'u']]
[[9, 10], [-1], 24, None, [], -1, 'u', 'u']

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
root(uint256)
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
Propogating All
c_2
Ssa_name: c_2, name: c

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Propogating All
Propogating All
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_38', 'XY_1'])
Phi
[i]Type for a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_49 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_49(bool) = a_1 > 3
lnorm: 24 rnorm: 0
[i]Type for TMP_49

Name: TMP_49 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_56 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_56(bool) = a_1 != 0
[i]Type for TMP_56

Name: TMP_56 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_4, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: c, Num: 4
Globalname: c, contract_name: VaderMath
End popogation
c_4(uint256) := 1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: c_1, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 1
Globalname: c, contract_name: VaderMath
End popogation
c_1(uint256) := a_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_50 cleared
[i] TMP_51 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: VaderMath
End popogation
TMP_50(uint256) = a_1 (c)/ 2
lnorm: 24 rnorm: 0
Source address: u
lnorm: 24 rnorm: 0
10
9
-1
[i]Type for TMP_50

Name: TMP_50 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_51(uint256) = TMP_50 (c)+ 1
Source address: u
[i]Type for TMP_51

Name: TMP_51 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_51(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
[i] x cleared
[i] TMP_52 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
End popogation
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
c_2(uint256) := ϕ(['c_1', 'c_3'])
Phi

Name: c Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for c

Name: c Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
x_2(uint256) := ϕ(['x_3', 'x_1'])
Phi

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_52(bool) = x_2 < c_2
lnorm: 0 rnorm: 24
[i]Type for TMP_52

Name: TMP_52 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: c_3, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: c, Num: 3
Globalname: c, contract_name: VaderMath
End popogation
c_3(uint256) := x_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] TMP_53 cleared
[i] TMP_54 cleared
[i] TMP_55 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: x_3, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 3
Globalname: x, contract_name: VaderMath
End popogation
TMP_53(uint256) = a_1 (c)/ x_2
lnorm: 24 rnorm: 0
Source address: u
Source address: u
lnorm: 24 rnorm: 0
Source address: u
10
-1
[i]Type for TMP_53

Name: TMP_53 Function: root
Num: 10
Den: -1
Address: u
Norm: 24
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_54(uint256) = TMP_53 (c)+ x_2
9
[i]Type for TMP_54

Name: TMP_54 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_55(uint256) = TMP_54 (c)/ 2
lnorm: u rnorm: 0
lnorm: u rnorm: 0
[i]Type for TMP_55

Name: TMP_55 Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
x_3(uint256) := TMP_55(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_38', 'XY_1'])
Phi
[i]Type for a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_49 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_49(bool) = a_1 > 3
lnorm: 24 rnorm: 0
[i]Type for TMP_49

Name: TMP_49 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_56 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_56(bool) = a_1 != 0
[i]Type for TMP_56

Name: TMP_56 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_4, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: c, Num: 4
Globalname: c, contract_name: VaderMath
End popogation
c_4(uint256) := 1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: c_1, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 1
Globalname: c, contract_name: VaderMath
End popogation
c_1(uint256) := a_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_50 cleared
[i] TMP_51 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: VaderMath
End popogation
TMP_50(uint256) = a_1 (c)/ 2
lnorm: 24 rnorm: 0
Source address: u
lnorm: 24 rnorm: 0
10
9
-1
[i]Type for TMP_50

Name: TMP_50 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_51(uint256) = TMP_50 (c)+ 1
Source address: u
[i]Type for TMP_51

Name: TMP_51 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_51(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
[i] x cleared
[i] TMP_52 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
End popogation
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
c_2(uint256) := ϕ(['c_1', 'c_3'])
Phi

Name: c Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for c

Name: c Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
x_2(uint256) := ϕ(['x_3', 'x_1'])
Phi

Name: x Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for x

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
TMP_52(bool) = x_2 < c_2
lnorm: 0 rnorm: 24
10
9
-1
[i]Type for TMP_52

Name: TMP_52 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: c_3, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: c, Num: 3
Globalname: c, contract_name: VaderMath
End popogation
c_3(uint256) := x_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
[i] TMP_53 cleared
[i] TMP_54 cleared
[i] TMP_55 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: x_3, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 3
Globalname: x, contract_name: VaderMath
End popogation
TMP_53(uint256) = a_1 (c)/ x_2
lnorm: 24 rnorm: 0
Source address: u
Source address: u
lnorm: 24 rnorm: 0
Source address: u
Source address: u
[i]Type for TMP_53

Name: TMP_53 Function: root
Num: -1
Den: -1
Address: u
Norm: 24
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
TMP_54(uint256) = TMP_53 (c)+ x_2
Source address: u
[i]Type for TMP_54

Name: TMP_54 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
XXXX
TMP_55(uint256) = TMP_54 (c)/ 2
lnorm: 0 rnorm: 0
Source address: u
lnorm: 0 rnorm: 0
10
9
-1
[i]Type for TMP_55

Name: TMP_55 Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
x_3(uint256) := TMP_55(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_36

Name: TMP_36 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_37(uint256) = reserveOut_1 (c)- y4_1
Source address: u
[i]Type for TMP_37

Name: TMP_37 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
TMP_38(uint256) = reserveIn_1 (c)* TMP_37
lnorm: 18 rnorm: 0
Source address: u
[i]Type for TMP_38

Name: TMP_38 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
TMP_39(uint256) = INTERNAL_CALL, VaderMath.root(uint256)(TMP_38)
New param cache [[[9], [-1], 18, None, [], -1, 'u', 4]]
Old param cache: [[[], [], 'u', None, [], -1, 'u']]
[[9], [-1], 18, None, [], -1, 'u', 4]

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
root(uint256)
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
Propogating All
c_2
Ssa_name: c_2, name: c

Name: c Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Propogating All
Propogating All
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_38', 'XY_1'])
Phi
[i]Type for a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
[i] TMP_49 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
End popogation
TMP_49(bool) = a_1 > 3
lnorm: 18 rnorm: 0
[i]Type for TMP_49

Name: TMP_49 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_56 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
End popogation
TMP_56(bool) = a_1 != 0
[i]Type for TMP_56

Name: TMP_56 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_4, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: c, Num: 4
Globalname: c, contract_name: VaderMath
End popogation
c_4(uint256) := 1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: c_1, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 1
Globalname: c, contract_name: VaderMath
End popogation
c_1(uint256) := a_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_50 cleared
[i] TMP_51 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: VaderMath
End popogation
TMP_50(uint256) = a_1 (c)/ 2
lnorm: 18 rnorm: 0
Source address: u
lnorm: 18 rnorm: 0
9
-1
[i]Type for TMP_50

Name: TMP_50 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_51(uint256) = TMP_50 (c)+ 1
Source address: u
[i]Type for TMP_51

Name: TMP_51 Function: root
Num: 9
Den: -1
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_51(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
[i] x cleared
[i] TMP_52 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
End popogation
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
c_2(uint256) := ϕ(['c_1', 'c_3'])
Phi

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef

Name: c Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for c

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
x_2(uint256) := ϕ(['x_3', 'x_1'])
Phi

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for x

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
TMP_52(bool) = x_2 < c_2
lnorm: 0 rnorm: 18
[i]Type for TMP_52

Name: TMP_52 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: c_3, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: c, Num: 3
Globalname: c, contract_name: VaderMath
End popogation
c_3(uint256) := x_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
[i] TMP_53 cleared
[i] TMP_54 cleared
[i] TMP_55 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: x_3, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 3
Globalname: x, contract_name: VaderMath
End popogation
TMP_53(uint256) = a_1 (c)/ x_2
lnorm: 18 rnorm: 0
Source address: u
Source address: u
lnorm: 18 rnorm: 0
Source address: u
-1
10
[i]Type for TMP_53

Name: TMP_53 Function: root
Num: -1
Den: 10
Address: u
Norm: 18
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
TMP_54(uint256) = TMP_53 (c)+ x_2
[i]Type for TMP_54

Name: TMP_54 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_55(uint256) = TMP_54 (c)/ 2
lnorm: u rnorm: 0
lnorm: u rnorm: 0
[i]Type for TMP_55

Name: TMP_55 Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
x_3(uint256) := TMP_55(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_38', 'XY_1'])
Phi
[i]Type for a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
[i] TMP_49 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
End popogation
TMP_49(bool) = a_1 > 3
lnorm: 18 rnorm: 0
[i]Type for TMP_49

Name: TMP_49 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_56 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
End popogation
TMP_56(bool) = a_1 != 0
[i]Type for TMP_56

Name: TMP_56 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_4, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: c, Num: 4
Globalname: c, contract_name: VaderMath
End popogation
c_4(uint256) := 1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: c_1, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 1
Globalname: c, contract_name: VaderMath
End popogation
c_1(uint256) := a_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_50 cleared
[i] TMP_51 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: VaderMath
End popogation
TMP_50(uint256) = a_1 (c)/ 2
lnorm: 18 rnorm: 0
Source address: u
lnorm: 18 rnorm: 0
9
-1
[i]Type for TMP_50

Name: TMP_50 Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_51(uint256) = TMP_50 (c)+ 1
Source address: u
[i]Type for TMP_51

Name: TMP_51 Function: root
Num: 9
Den: -1
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_51(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
[i] x cleared
[i] TMP_52 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
End popogation
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
c_2(uint256) := ϕ(['c_1', 'c_3'])
Phi

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef

Name: c Function: root
Num: 9, 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for c

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
x_2(uint256) := ϕ(['x_3', 'x_1'])
Phi

Name: x Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
TMP_52(bool) = x_2 < c_2
lnorm: 0 rnorm: 18
9
-1
[i]Type for TMP_52

Name: TMP_52 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: c_3, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: c, Num: 3
Globalname: c, contract_name: VaderMath
End popogation
c_3(uint256) := x_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
[i] TMP_53 cleared
[i] TMP_54 cleared
[i] TMP_55 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: x_3, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 3
Globalname: x, contract_name: VaderMath
End popogation
TMP_53(uint256) = a_1 (c)/ x_2
lnorm: 18 rnorm: 0
Source address: u
Source address: u
lnorm: 18 rnorm: 0
Source address: u
Source address: u
[i]Type for TMP_53

Name: TMP_53 Function: root
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
TMP_54(uint256) = TMP_53 (c)+ x_2
Source address: u
[i]Type for TMP_54

Name: TMP_54 Function: root
Num: 9
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
TMP_55(uint256) = TMP_54 (c)/ 2
lnorm: 0 rnorm: 0
Source address: u
lnorm: 0 rnorm: 0
9
-1
[i]Type for TMP_55

Name: TMP_55 Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
x_3(uint256) := TMP_55(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_39

Name: TMP_39 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_40(uint256) = TMP_36 (c)* TMP_39
lnorm: u rnorm: u
[i]Type for TMP_40

Name: TMP_40 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
numeratorA_1(uint256) := TMP_40(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for numeratorA

Name: numeratorA Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_41 cleared
[i] numeratorB cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: numeratorB_1, name: numeratorB

Name: numeratorB Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: numeratorB, Num: 1
Globalname: numeratorB, contract_name: VaderMath
End popogation
TMP_41(uint256) = y2_1 (c)* reserveIn_1
lnorm: 0 rnorm: 18
Source address: u
[i]Type for TMP_41

Name: TMP_41 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
numeratorB_1(uint256) := TMP_41(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for numeratorB

Name: numeratorB Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] numeratorC cleared
Propogating parameters and globals to SSA variables...
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: numeratorC_1, name: numeratorC

Name: numeratorC Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numeratorC, Num: 1
Globalname: numeratorC, contract_name: VaderMath
End popogation
numeratorC_1(uint256) := XY_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for numeratorC

Name: numeratorC Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_42 cleared
[i] TMP_43 cleared
[i] numerator cleared
Propogating parameters and globals to SSA variables...
Ssa_name: numeratorC_1, name: numeratorC

Name: numeratorC Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: numeratorB_1, name: numeratorB

Name: numeratorB Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: numeratorA_1, name: numeratorA

Name: numeratorA Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numeratorA, Num: 1
Globalname: numeratorA, contract_name: VaderMath
Ssa_name: numeratorC_1, name: numeratorC

Name: numeratorC Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: numeratorB_1, name: numeratorB

Name: numeratorB Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: numeratorA_1, name: numeratorA

Name: numeratorA Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numeratorA, Num: 1
Globalname: numeratorA, contract_name: VaderMath
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numerator, Num: 1
Globalname: numerator, contract_name: VaderMath
End popogation
TMP_42(uint256) = numeratorC_1 (c)- numeratorA_1
Source address: u
[i]Type for TMP_42

Name: TMP_42 Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_43(uint256) = TMP_42 (c)- numeratorB_1
[i]Type for TMP_43

Name: TMP_43 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
numerator_1(uint256) := TMP_43(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for numerator

Name: numerator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] denominator cleared
Propogating parameters and globals to SSA variables...
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: denominator, Num: 1
Globalname: denominator, contract_name: VaderMath
End popogation
denominator_1(uint256) := y2_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for denominator

Name: denominator Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] TMP_44 cleared
[i] amountIn cleared
Propogating parameters and globals to SSA variables...
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numerator, Num: 1
Globalname: numerator, contract_name: VaderMath
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numerator, Num: 1
Globalname: numerator, contract_name: VaderMath
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: amountIn, Num: 1
Globalname: amountIn, contract_name: VaderMath
End popogation
TMP_44(uint256) = numerator_1 (c)/ denominator_1
lnorm: u rnorm: 0
lnorm: u rnorm: 0
[i]Type for TMP_44

Name: TMP_44 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
amountIn_1(uint256) := TMP_44(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for amountIn

Name: amountIn Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
End popogation
RETURN amountIn_1
RETURN

Name: amountIn Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Source address: u
Source address: u
[i]Type for TMP_93

Name: TMP_93 Function: calculateInGivenOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_94(uint256) = LIBRARY_CALL, dest:VaderMath, function:VaderMath.calculateSwapReverse(uint256,uint256,uint256), arguments:['TMP_93', 'foreignReserve0_1', 'nativeReserve0_1'] 
Found: calculateSwapReverse

Name: TMP_93 Function: calculateInGivenOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef

Name: foreignReserve0 Function: calculateInGivenOut
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: nativeReserve0 Function: calculateInGivenOut
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
High level cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [10]
    den: [-1]
    norm: 6
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [9]
    den: [-1]
    norm: 18
    link: None
    fields: []
    fintype: -1
New param cache [[[-1], [-1], 0, None, [], -1, 'u', 2], [[10], [-1], 6, None, [], -1, 'u', "'u'"], [[9], [-1], 18, None, [], -1, 'u', "'u'"]]
Old param cache: [[[-1], [-1], 'u', None, [], -1, 'u'], [[-1], [-1], 'u', None, [], -1, 'u'], [[-1], [-1], 'u', None, [], -1, 'u']]
[[-1], [-1], 0, None, [], -1, 'u', 2]

Name: amountOut Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
[[10], [-1], 6, None, [], -1, 'u', "'u'"]

Name: reserveIn Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
[[9], [-1], 18, None, [], -1, 'u', "'u'"]

Name: reserveOut Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
calculateSwapReverse(uint256,uint256,uint256)
Propogating All
Propogating All
reserveOut_1
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: reserveOut_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
reserveIn_1
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: reserveIn_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
Propogating All
amountOut_1
Ssa_name: amountOut_1, name: amountOut

Name: amountOut_1 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountOut_1 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Copied ftype
Propogating All
y2_1
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Propogating All
reserveOut_1
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: reserveOut_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
y4_1
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Propogating All
y4_1
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
reserveOut_1
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: reserveOut_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
reserveIn_1
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: reserveIn_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
XY_1
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
reserveIn_1
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: reserveIn_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
y2_1
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Propogating All
XY_1
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
numeratorC_1
Ssa_name: numeratorC_1, name: numeratorC

Name: numeratorC Function: calculateSwapReverse
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
numeratorB_1
Ssa_name: numeratorB_1, name: numeratorB

Name: numeratorB Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 2
Fields: 
Finance Type: undef
numeratorA_1
Ssa_name: numeratorA_1, name: numeratorA

Name: numeratorA Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
y2_1
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Propogating All
numerator_1
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
denominator_1
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Propogating All
amountIn_1
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_31 cleared
[i] XY cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: XY, Num: 1
Globalname: XY, contract_name: VaderMath
End popogation
TMP_31(uint256) = reserveIn_1 (c)* reserveOut_1
lnorm: 6 rnorm: 18
Source address: u
Source address: u
Source address: u
[i]Type for TMP_31

Name: TMP_31 Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
XY_1(uint256) := TMP_31(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for XY

Name: XY Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_32 cleared
[i] y2 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountOut_1, name: amountOut

Name: amountOut_1 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: amountOut_1, name: amountOut

Name: amountOut_1 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: y2, Num: 1
Globalname: y2, contract_name: VaderMath
End popogation
TMP_32(uint256) = amountOut_1 (c)* 2
lnorm: 0 rnorm: 0
Source address: u
[i]Type for TMP_32

Name: TMP_32 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
y2_1(uint256) := TMP_32(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
[i] TMP_33 cleared
[i] y4 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: y4, Num: 1
Globalname: y4, contract_name: VaderMath
End popogation
TMP_33(uint256) = y2_1 (c)* 2
lnorm: 0 rnorm: 0
Source address: u
[i]Type for TMP_33

Name: TMP_33 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 8
Fields: 
Finance Type: undef
XXXX
y4_1(uint256) := TMP_33(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 8
Fields: 
Finance Type: undef
XXXX
[i] TMP_34 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 8
Fields: 
Finance Type: undef
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 8
Fields: 
Finance Type: undef
End popogation
TMP_34(bool) = y4_1 < reserveOut_1
lnorm: 0 rnorm: 18
[i]Type for TMP_34

Name: TMP_34 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_35(None) = SOLIDITY_CALL require(bool,string)(TMP_34,VaderMath::calculateSwapReverse: Desired Output Exceeds Maximum Output Possible (1/4 of Liquidity Pool))
[i]Type for TMP_35

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_36 cleared
[i] TMP_37 cleared
[i] TMP_38 cleared
[i] TMP_39 cleared
[i] TMP_40 cleared
[i] numeratorA cleared
Propogating parameters and globals to SSA variables...
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 8
Fields: 
Finance Type: undef
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 8
Fields: 
Finance Type: undef
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: numeratorA_1, name: numeratorA

Name: numeratorA Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numeratorA, Num: 1
Globalname: numeratorA, contract_name: VaderMath
End popogation
TMP_36(uint256) = INTERNAL_CALL, VaderMath.root(uint256)(XY_1)
New param cache [[[10, 9], [-1], 24, None, [], -1, 'u', 'u']]
Old param cache: [[[], [], 'u', None, [], -1, 'u']]
[[10, 9], [-1], 24, None, [], -1, 'u', 'u']

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
root(uint256)
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
Propogating All
c_2
Ssa_name: c_2, name: c

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 4
Fields: 
Finance Type: undef
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Propogating All
Propogating All
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_38', 'XY_1'])
Phi
[i]Type for a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_49 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_49(bool) = a_1 > 3
lnorm: 24 rnorm: 0
[i]Type for TMP_49

Name: TMP_49 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_56 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_56(bool) = a_1 != 0
[i]Type for TMP_56

Name: TMP_56 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_4, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: c, Num: 4
Globalname: c, contract_name: VaderMath
End popogation
c_4(uint256) := 1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: c_1, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 1
Globalname: c, contract_name: VaderMath
End popogation
c_1(uint256) := a_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_50 cleared
[i] TMP_51 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: VaderMath
End popogation
TMP_50(uint256) = a_1 (c)/ 2
lnorm: 24 rnorm: 0
Source address: u
lnorm: 24 rnorm: 0
10
9
-1
[i]Type for TMP_50

Name: TMP_50 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_51(uint256) = TMP_50 (c)+ 1
Source address: u
[i]Type for TMP_51

Name: TMP_51 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_51(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
[i] x cleared
[i] TMP_52 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
End popogation
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
c_2(uint256) := ϕ(['c_1', 'c_3'])
Phi

Name: c Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for c

Name: c Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
x_2(uint256) := ϕ(['x_3', 'x_1'])
Phi

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_52(bool) = x_2 < c_2
lnorm: 0 rnorm: 24
[i]Type for TMP_52

Name: TMP_52 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: c_3, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: c, Num: 3
Globalname: c, contract_name: VaderMath
End popogation
c_3(uint256) := x_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] TMP_53 cleared
[i] TMP_54 cleared
[i] TMP_55 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: x_3, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 3
Globalname: x, contract_name: VaderMath
End popogation
TMP_53(uint256) = a_1 (c)/ x_2
lnorm: 24 rnorm: 0
Source address: u
Source address: u
lnorm: 24 rnorm: 0
Source address: u
10
-1
[i]Type for TMP_53

Name: TMP_53 Function: root
Num: 10
Den: -1
Address: u
Norm: 24
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_54(uint256) = TMP_53 (c)+ x_2
9
[i]Type for TMP_54

Name: TMP_54 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_55(uint256) = TMP_54 (c)/ 2
lnorm: u rnorm: 0
lnorm: u rnorm: 0
[i]Type for TMP_55

Name: TMP_55 Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
x_3(uint256) := TMP_55(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_38', 'XY_1'])
Phi
[i]Type for a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_49 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_49(bool) = a_1 > 3
lnorm: 24 rnorm: 0
[i]Type for TMP_49

Name: TMP_49 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_56 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_56(bool) = a_1 != 0
[i]Type for TMP_56

Name: TMP_56 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_4, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: c, Num: 4
Globalname: c, contract_name: VaderMath
End popogation
c_4(uint256) := 1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: c_1, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 1
Globalname: c, contract_name: VaderMath
End popogation
c_1(uint256) := a_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_50 cleared
[i] TMP_51 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: VaderMath
End popogation
TMP_50(uint256) = a_1 (c)/ 2
lnorm: 24 rnorm: 0
Source address: u
lnorm: 24 rnorm: 0
10
9
-1
[i]Type for TMP_50

Name: TMP_50 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_51(uint256) = TMP_50 (c)+ 1
Source address: u
[i]Type for TMP_51

Name: TMP_51 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_51(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
[i] x cleared
[i] TMP_52 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
End popogation
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
c_2(uint256) := ϕ(['c_1', 'c_3'])
Phi

Name: c Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef

Name: c Function: root
Num: 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for c

Name: c Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
x_2(uint256) := ϕ(['x_3', 'x_1'])
Phi

Name: x Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for x

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
TMP_52(bool) = x_2 < c_2
lnorm: 0 rnorm: 24
10
9
-1
[i]Type for TMP_52

Name: TMP_52 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: c_3, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: c, Num: 3
Globalname: c, contract_name: VaderMath
End popogation
c_3(uint256) := x_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
[i] TMP_53 cleared
[i] TMP_54 cleared
[i] TMP_55 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: x_3, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 3
Globalname: x, contract_name: VaderMath
End popogation
TMP_53(uint256) = a_1 (c)/ x_2
lnorm: 24 rnorm: 0
Source address: u
Source address: u
lnorm: 24 rnorm: 0
Source address: u
Source address: u
[i]Type for TMP_53

Name: TMP_53 Function: root
Num: -1
Den: -1
Address: u
Norm: 24
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
TMP_54(uint256) = TMP_53 (c)+ x_2
Source address: u
[i]Type for TMP_54

Name: TMP_54 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
XXXX
TMP_55(uint256) = TMP_54 (c)/ 2
lnorm: 0 rnorm: 0
Source address: u
lnorm: 0 rnorm: 0
10
9
-1
[i]Type for TMP_55

Name: TMP_55 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
x_3(uint256) := TMP_55(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_36

Name: TMP_36 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_37(uint256) = reserveOut_1 (c)- y4_1
Source address: u
[i]Type for TMP_37

Name: TMP_37 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: undef
XXXX
TMP_38(uint256) = reserveIn_1 (c)* TMP_37
lnorm: 6 rnorm: 0
Source address: u
[i]Type for TMP_38

Name: TMP_38 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
XXXX
TMP_39(uint256) = INTERNAL_CALL, VaderMath.root(uint256)(TMP_38)
New param cache [[[10], [-1], 6, None, [], -1, 'u', 8]]
Old param cache: [[[], [], 'u', None, [], -1, 'u']]
[[10], [-1], 6, None, [], -1, 'u', 8]

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
root(uint256)
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Copied ftype
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
Propogating All
c_2
Ssa_name: c_2, name: c

Name: c Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Propogating All
Propogating All
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Copied ftype
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_38', 'XY_1'])
Phi
[i]Type for a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
XXXX
[i] TMP_49 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
End popogation
TMP_49(bool) = a_1 > 3
lnorm: 6 rnorm: 0
[i]Type for TMP_49

Name: TMP_49 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_56 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
End popogation
TMP_56(bool) = a_1 != 0
[i]Type for TMP_56

Name: TMP_56 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_4, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: c, Num: 4
Globalname: c, contract_name: VaderMath
End popogation
c_4(uint256) := 1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Ssa_name: c_1, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 1
Globalname: c, contract_name: VaderMath
End popogation
c_1(uint256) := a_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_50 cleared
[i] TMP_51 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: VaderMath
End popogation
TMP_50(uint256) = a_1 (c)/ 2
lnorm: 6 rnorm: 0
Source address: u
lnorm: 6 rnorm: 0
10
-1
[i]Type for TMP_50

Name: TMP_50 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
TMP_51(uint256) = TMP_50 (c)+ 1
Source address: u
[i]Type for TMP_51

Name: TMP_51 Function: root
Num: 10
Den: -1
Address: u
Norm: u
LF: None
Value: 5
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_51(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 5
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
[i] x cleared
[i] TMP_52 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
End popogation
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
c_2(uint256) := ϕ(['c_1', 'c_3'])
Phi

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef

Name: c Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for c

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
XXXX
x_2(uint256) := ϕ(['x_3', 'x_1'])
Phi

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 5
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for x

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
TMP_52(bool) = x_2 < c_2
lnorm: 0 rnorm: 6
[i]Type for TMP_52

Name: TMP_52 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: c_3, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: c, Num: 3
Globalname: c, contract_name: VaderMath
End popogation
c_3(uint256) := x_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
[i] TMP_53 cleared
[i] TMP_54 cleared
[i] TMP_55 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: x_3, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 3
Globalname: x, contract_name: VaderMath
End popogation
TMP_53(uint256) = a_1 (c)/ x_2
lnorm: 6 rnorm: 0
Source address: u
Source address: u
lnorm: 6 rnorm: 0
Source address: u
-1
9
[i]Type for TMP_53

Name: TMP_53 Function: root
Num: -1
Den: 9
Address: u
Norm: 6
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_54(uint256) = TMP_53 (c)+ x_2
[i]Type for TMP_54

Name: TMP_54 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_55(uint256) = TMP_54 (c)/ 2
lnorm: u rnorm: 0
lnorm: u rnorm: 0
[i]Type for TMP_55

Name: TMP_55 Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
x_3(uint256) := TMP_55(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_38', 'XY_1'])
Phi
[i]Type for a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
XXXX
[i] TMP_49 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
End popogation
TMP_49(bool) = a_1 > 3
lnorm: 6 rnorm: 0
[i]Type for TMP_49

Name: TMP_49 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_56 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
End popogation
TMP_56(bool) = a_1 != 0
[i]Type for TMP_56

Name: TMP_56 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_4, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: c, Num: 4
Globalname: c, contract_name: VaderMath
End popogation
c_4(uint256) := 1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Ssa_name: c_1, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: undef
Name: c, Num: 1
Globalname: c, contract_name: VaderMath
End popogation
c_1(uint256) := a_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_50 cleared
[i] TMP_51 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 5
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: VaderMath
End popogation
TMP_50(uint256) = a_1 (c)/ 2
lnorm: 6 rnorm: 0
Source address: u
lnorm: 6 rnorm: 0
10
-1
[i]Type for TMP_50

Name: TMP_50 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
TMP_51(uint256) = TMP_50 (c)+ 1
Source address: u
[i]Type for TMP_51

Name: TMP_51 Function: root
Num: 10
Den: -1
Address: u
Norm: u
LF: None
Value: 5
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_51(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 5
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
[i] x cleared
[i] TMP_52 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
End popogation
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
c_2(uint256) := ϕ(['c_1', 'c_3'])
Phi

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef

Name: c Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for c

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
XXXX
x_2(uint256) := ϕ(['x_3', 'x_1'])
Phi

Name: x Function: root
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 5
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 5
Fields: 
Finance Type: undef
XXXX
TMP_52(bool) = x_2 < c_2
lnorm: 0 rnorm: 6
10
-1
[i]Type for TMP_52

Name: TMP_52 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 5
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 5
Fields: 
Finance Type: undef
Ssa_name: c_3, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: c, Num: 3
Globalname: c, contract_name: VaderMath
End popogation
c_3(uint256) := x_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 5
Fields: 
Finance Type: undef
XXXX
[i] TMP_53 cleared
[i] TMP_54 cleared
[i] TMP_55 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 5
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 5
Fields: 
Finance Type: undef
Ssa_name: x_3, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 3
Globalname: x, contract_name: VaderMath
End popogation
TMP_53(uint256) = a_1 (c)/ x_2
lnorm: 6 rnorm: 0
Source address: u
Source address: u
lnorm: 6 rnorm: 0
Source address: u
Source address: u
[i]Type for TMP_53

Name: TMP_53 Function: root
Num: -1
Den: -1
Address: u
Norm: 6
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
TMP_54(uint256) = TMP_53 (c)+ x_2
Source address: u
[i]Type for TMP_54

Name: TMP_54 Function: root
Num: 10
Den: -1
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
XXXX
TMP_55(uint256) = TMP_54 (c)/ 2
lnorm: 0 rnorm: 0
Source address: u
lnorm: 0 rnorm: 0
10
-1
[i]Type for TMP_55

Name: TMP_55 Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
x_3(uint256) := TMP_55(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_39

Name: TMP_39 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_40(uint256) = TMP_36 (c)* TMP_39
lnorm: u rnorm: u
[i]Type for TMP_40

Name: TMP_40 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
numeratorA_1(uint256) := TMP_40(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for numeratorA

Name: numeratorA Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_41 cleared
[i] numeratorB cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: numeratorB_1, name: numeratorB

Name: numeratorB Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: numeratorB, Num: 1
Globalname: numeratorB, contract_name: VaderMath
End popogation
TMP_41(uint256) = y2_1 (c)* reserveIn_1
lnorm: 0 rnorm: 6
Source address: u
[i]Type for TMP_41

Name: TMP_41 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
numeratorB_1(uint256) := TMP_41(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for numeratorB

Name: numeratorB Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
[i] numeratorC cleared
Propogating parameters and globals to SSA variables...
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: numeratorC_1, name: numeratorC

Name: numeratorC Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numeratorC, Num: 1
Globalname: numeratorC, contract_name: VaderMath
End popogation
numeratorC_1(uint256) := XY_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for numeratorC

Name: numeratorC Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_42 cleared
[i] TMP_43 cleared
[i] numerator cleared
Propogating parameters and globals to SSA variables...
Ssa_name: numeratorC_1, name: numeratorC

Name: numeratorC Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: numeratorB_1, name: numeratorB

Name: numeratorB Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: numeratorA_1, name: numeratorA

Name: numeratorA Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numeratorA, Num: 1
Globalname: numeratorA, contract_name: VaderMath
Ssa_name: numeratorC_1, name: numeratorC

Name: numeratorC Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: numeratorB_1, name: numeratorB

Name: numeratorB Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: numeratorA_1, name: numeratorA

Name: numeratorA Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numeratorA, Num: 1
Globalname: numeratorA, contract_name: VaderMath
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numerator, Num: 1
Globalname: numerator, contract_name: VaderMath
End popogation
TMP_42(uint256) = numeratorC_1 (c)- numeratorA_1
Source address: u
[i]Type for TMP_42

Name: TMP_42 Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_43(uint256) = TMP_42 (c)- numeratorB_1
[i]Type for TMP_43

Name: TMP_43 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
numerator_1(uint256) := TMP_43(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for numerator

Name: numerator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] denominator cleared
Propogating parameters and globals to SSA variables...
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: denominator, Num: 1
Globalname: denominator, contract_name: VaderMath
End popogation
denominator_1(uint256) := y2_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for denominator

Name: denominator Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
[i] TMP_44 cleared
[i] amountIn cleared
Propogating parameters and globals to SSA variables...
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numerator, Num: 1
Globalname: numerator, contract_name: VaderMath
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numerator, Num: 1
Globalname: numerator, contract_name: VaderMath
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: amountIn, Num: 1
Globalname: amountIn, contract_name: VaderMath
End popogation
TMP_44(uint256) = numerator_1 (c)/ denominator_1
lnorm: u rnorm: 0
lnorm: u rnorm: 0
[i]Type for TMP_44

Name: TMP_44 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
amountIn_1(uint256) := TMP_44(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for amountIn

Name: amountIn Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
End popogation
RETURN amountIn_1
RETURN

Name: amountIn Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_31 cleared
[i] XY cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: XY, Num: 1
Globalname: XY, contract_name: VaderMath
End popogation
TMP_31(uint256) = reserveIn_1 (c)* reserveOut_1
lnorm: 6 rnorm: 18
Source address: u
Source address: u
Source address: u
[i]Type for TMP_31

Name: TMP_31 Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
XY_1(uint256) := TMP_31(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for XY

Name: XY Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_32 cleared
[i] y2 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountOut_1, name: amountOut

Name: amountOut_1 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: amountOut_1, name: amountOut

Name: amountOut_1 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: y2, Num: 1
Globalname: y2, contract_name: VaderMath
End popogation
TMP_32(uint256) = amountOut_1 (c)* 2
lnorm: 0 rnorm: 0
Source address: u
[i]Type for TMP_32

Name: TMP_32 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
y2_1(uint256) := TMP_32(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
[i] TMP_33 cleared
[i] y4 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: undef
Name: y4, Num: 1
Globalname: y4, contract_name: VaderMath
End popogation
TMP_33(uint256) = y2_1 (c)* 2
lnorm: 0 rnorm: 0
Source address: u
[i]Type for TMP_33

Name: TMP_33 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 8
Fields: 
Finance Type: undef
XXXX
y4_1(uint256) := TMP_33(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 8
Fields: 
Finance Type: undef
XXXX
[i] TMP_34 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 8
Fields: 
Finance Type: undef
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 8
Fields: 
Finance Type: undef
End popogation
TMP_34(bool) = y4_1 < reserveOut_1
lnorm: 0 rnorm: 18
[i]Type for TMP_34

Name: TMP_34 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_35(None) = SOLIDITY_CALL require(bool,string)(TMP_34,VaderMath::calculateSwapReverse: Desired Output Exceeds Maximum Output Possible (1/4 of Liquidity Pool))
[i]Type for TMP_35

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_36 cleared
[i] TMP_37 cleared
[i] TMP_38 cleared
[i] TMP_39 cleared
[i] TMP_40 cleared
[i] numeratorA cleared
Propogating parameters and globals to SSA variables...
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 8
Fields: 
Finance Type: undef
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: y4_1, name: y4

Name: y4 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 8
Fields: 
Finance Type: undef
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwapReverse
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: numeratorA_1, name: numeratorA

Name: numeratorA Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numeratorA, Num: 1
Globalname: numeratorA, contract_name: VaderMath
End popogation
TMP_36(uint256) = INTERNAL_CALL, VaderMath.root(uint256)(XY_1)
New param cache [[[10, 9], [-1], 24, None, [], -1, 'u', 'u']]
Old param cache: [[[], [], 'u', None, [], -1, 'u']]
[[10, 9], [-1], 24, None, [], -1, 'u', 'u']

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
root(uint256)
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
Propogating All
c_2
Ssa_name: c_2, name: c

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 5
Fields: 
Finance Type: undef
Propogating All
Propogating All
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 5
Fields: 
Finance Type: undef
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 5
Fields: 
Finance Type: undef
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_38', 'XY_1'])
Phi
[i]Type for a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_49 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_49(bool) = a_1 > 3
lnorm: 24 rnorm: 0
[i]Type for TMP_49

Name: TMP_49 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_56 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_56(bool) = a_1 != 0
[i]Type for TMP_56

Name: TMP_56 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_4, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: c, Num: 4
Globalname: c, contract_name: VaderMath
End popogation
c_4(uint256) := 1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: c_1, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: undef
Name: c, Num: 1
Globalname: c, contract_name: VaderMath
End popogation
c_1(uint256) := a_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_50 cleared
[i] TMP_51 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 5
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: VaderMath
End popogation
TMP_50(uint256) = a_1 (c)/ 2
lnorm: 24 rnorm: 0
Source address: u
lnorm: 24 rnorm: 0
10
9
-1
[i]Type for TMP_50

Name: TMP_50 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_51(uint256) = TMP_50 (c)+ 1
Source address: u
[i]Type for TMP_51

Name: TMP_51 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_51(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
[i] x cleared
[i] TMP_52 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 5
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 5
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 5
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
End popogation
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 5
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
c_2(uint256) := ϕ(['c_1', 'c_3'])
Phi

Name: c Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 5
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for c

Name: c Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
x_2(uint256) := ϕ(['x_3', 'x_1'])
Phi

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
TMP_52(bool) = x_2 < c_2
lnorm: 0 rnorm: 24
[i]Type for TMP_52

Name: TMP_52 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: c_3, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 5
Fields: 
Finance Type: undef
Name: c, Num: 3
Globalname: c, contract_name: VaderMath
End popogation
c_3(uint256) := x_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
[i] TMP_53 cleared
[i] TMP_54 cleared
[i] TMP_55 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: x_3, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 3
Globalname: x, contract_name: VaderMath
End popogation
TMP_53(uint256) = a_1 (c)/ x_2
lnorm: 24 rnorm: 0
Source address: u
Source address: u
lnorm: 24 rnorm: 0
Source address: u
9
-1
[i]Type for TMP_53

Name: TMP_53 Function: root
Num: 9
Den: -1
Address: u
Norm: 24
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
TMP_54(uint256) = TMP_53 (c)+ x_2
10
10
-1
lnorm: 24 rnorm: 0
Source address: u
[i]Type for TMP_54

Name: TMP_54 Function: root
Num: 10
Den: -1
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
XXXX
TMP_55(uint256) = TMP_54 (c)/ 2
lnorm: 0 rnorm: 0
Source address: u
lnorm: 0 rnorm: 0
10
-1
[i]Type for TMP_55

Name: TMP_55 Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
x_3(uint256) := TMP_55(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_38', 'XY_1'])
Phi
[i]Type for a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_49 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_49(bool) = a_1 > 3
lnorm: 24 rnorm: 0
[i]Type for TMP_49

Name: TMP_49 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_56 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_56(bool) = a_1 != 0
[i]Type for TMP_56

Name: TMP_56 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_4, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: c, Num: 4
Globalname: c, contract_name: VaderMath
End popogation
c_4(uint256) := 1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: c_1, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 1
Globalname: c, contract_name: VaderMath
End popogation
c_1(uint256) := a_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_50 cleared
[i] TMP_51 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: VaderMath
End popogation
TMP_50(uint256) = a_1 (c)/ 2
lnorm: 24 rnorm: 0
Source address: u
lnorm: 24 rnorm: 0
10
9
-1
[i]Type for TMP_50

Name: TMP_50 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_51(uint256) = TMP_50 (c)+ 1
Source address: u
[i]Type for TMP_51

Name: TMP_51 Function: root
Num: 10, 9
Den: -1
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_51(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
[i] x cleared
[i] TMP_52 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
End popogation
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
c_2(uint256) := ϕ(['c_1', 'c_3'])
Phi

Name: c Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for c

Name: c Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
x_2(uint256) := ϕ(['x_3', 'x_1'])
Phi

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef

Name: x Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
TMP_52(bool) = x_2 < c_2
lnorm: 0 rnorm: 24
[i]Type for TMP_52

Name: TMP_52 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: c_3, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: c, Num: 3
Globalname: c, contract_name: VaderMath
End popogation
c_3(uint256) := x_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
[i] TMP_53 cleared
[i] TMP_54 cleared
[i] TMP_55 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: x_3, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 3
Globalname: x, contract_name: VaderMath
End popogation
TMP_53(uint256) = a_1 (c)/ x_2
lnorm: 24 rnorm: 0
Source address: u
Source address: u
lnorm: 24 rnorm: 0
Source address: u
9
-1
[i]Type for TMP_53

Name: TMP_53 Function: root
Num: 9
Den: -1
Address: u
Norm: 24
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
TMP_54(uint256) = TMP_53 (c)+ x_2
10
10
-1
lnorm: 24 rnorm: 0
Source address: u
[i]Type for TMP_54

Name: TMP_54 Function: root
Num: 10
Den: -1
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
XXXX
TMP_55(uint256) = TMP_54 (c)/ 2
lnorm: 0 rnorm: 0
Source address: u
lnorm: 0 rnorm: 0
10
-1
[i]Type for TMP_55

Name: TMP_55 Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
x_3(uint256) := TMP_55(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_36

Name: TMP_36 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_37(uint256) = reserveOut_1 (c)- y4_1
Source address: u
[i]Type for TMP_37

Name: TMP_37 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: undef
XXXX
TMP_38(uint256) = reserveIn_1 (c)* TMP_37
lnorm: 6 rnorm: 0
Source address: u
[i]Type for TMP_38

Name: TMP_38 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
XXXX
TMP_39(uint256) = INTERNAL_CALL, VaderMath.root(uint256)(TMP_38)
New param cache [[[10], [-1], 6, None, [], -1, 'u', 8]]
Old param cache: [[[], [], 'u', None, [], -1, 'u']]
[[10], [-1], 6, None, [], -1, 'u', 8]

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
root(uint256)
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Copied ftype
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
Propogating All
c_2
Ssa_name: c_2, name: c

Name: c Function: root
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Propogating All
Propogating All
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Copied ftype
x_2
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a_1 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_38', 'XY_1'])
Phi
[i]Type for a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
XXXX
[i] TMP_49 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
End popogation
TMP_49(bool) = a_1 > 3
lnorm: 6 rnorm: 0
[i]Type for TMP_49

Name: TMP_49 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_56 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
End popogation
TMP_56(bool) = a_1 != 0
[i]Type for TMP_56

Name: TMP_56 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_4, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: c, Num: 4
Globalname: c, contract_name: VaderMath
End popogation
c_4(uint256) := 1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Ssa_name: c_1, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 1
Globalname: c, contract_name: VaderMath
End popogation
c_1(uint256) := a_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_50 cleared
[i] TMP_51 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: VaderMath
End popogation
TMP_50(uint256) = a_1 (c)/ 2
lnorm: 6 rnorm: 0
Source address: u
lnorm: 6 rnorm: 0
10
-1
[i]Type for TMP_50

Name: TMP_50 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
TMP_51(uint256) = TMP_50 (c)+ 1
Source address: u
[i]Type for TMP_51

Name: TMP_51 Function: root
Num: 10
Den: -1
Address: u
Norm: u
LF: None
Value: 5
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_51(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 5
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
[i] x cleared
[i] TMP_52 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
End popogation
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
c_2(uint256) := ϕ(['c_1', 'c_3'])
Phi

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for c

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
XXXX
x_2(uint256) := ϕ(['x_3', 'x_1'])
Phi

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 5
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
TMP_52(bool) = x_2 < c_2
lnorm: 0 rnorm: 6
10
-1
[i]Type for TMP_52

Name: TMP_52 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: c_3, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: c, Num: 3
Globalname: c, contract_name: VaderMath
End popogation
c_3(uint256) := x_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
[i] TMP_53 cleared
[i] TMP_54 cleared
[i] TMP_55 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: x_3, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 3
Globalname: x, contract_name: VaderMath
End popogation
TMP_53(uint256) = a_1 (c)/ x_2
lnorm: 6 rnorm: 0
Source address: u
Source address: u
lnorm: 6 rnorm: 0
Source address: u
Source address: u
[i]Type for TMP_53

Name: TMP_53 Function: root
Num: -1
Den: -1
Address: u
Norm: 6
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_54(uint256) = TMP_53 (c)+ x_2
Source address: u
[i]Type for TMP_54

Name: TMP_54 Function: root
Num: 10
Den: -1
Address: u
Norm: u
LF: None
Value: 5
Fields: 
Finance Type: undef
XXXX
TMP_55(uint256) = TMP_54 (c)/ 2
lnorm: 0 rnorm: 0
Source address: u
lnorm: 0 rnorm: 0
10
-1
[i]Type for TMP_55

Name: TMP_55 Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
x_3(uint256) := TMP_55(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_38', 'XY_1'])
Phi
[i]Type for a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
XXXX
[i] TMP_49 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
End popogation
TMP_49(bool) = a_1 > 3
lnorm: 6 rnorm: 0
[i]Type for TMP_49

Name: TMP_49 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_56 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
End popogation
TMP_56(bool) = a_1 != 0
[i]Type for TMP_56

Name: TMP_56 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_4, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: c, Num: 4
Globalname: c, contract_name: VaderMath
End popogation
c_4(uint256) := 1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Ssa_name: c_1, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: undef
Name: c, Num: 1
Globalname: c, contract_name: VaderMath
End popogation
c_1(uint256) := a_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_50 cleared
[i] TMP_51 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 5
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: VaderMath
End popogation
TMP_50(uint256) = a_1 (c)/ 2
lnorm: 6 rnorm: 0
Source address: u
lnorm: 6 rnorm: 0
10
-1
[i]Type for TMP_50

Name: TMP_50 Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
TMP_51(uint256) = TMP_50 (c)+ 1
Source address: u
[i]Type for TMP_51

Name: TMP_51 Function: root
Num: 10
Den: -1
Address: u
Norm: u
LF: None
Value: 5
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_51(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 5
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
[i] x cleared
[i] TMP_52 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
End popogation
Ssa_name: c_2, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: VaderMath
Ssa_name: x_2, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: x, Num: 2
Globalname: x, contract_name: VaderMath
c_2(uint256) := ϕ(['c_1', 'c_3'])
Phi

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for c

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
XXXX
x_2(uint256) := ϕ(['x_3', 'x_1'])
Phi

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 5
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_52(bool) = x_2 < c_2
lnorm: 0 rnorm: 6
10
-1
[i]Type for TMP_52

Name: TMP_52 Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: c_3, name: c

Name: c Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: c, Num: 3
Globalname: c, contract_name: VaderMath
End popogation
c_3(uint256) := x_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] TMP_53 cleared
[i] TMP_54 cleared
[i] TMP_55 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: root
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 8
Fields: 
Finance Type: undef
Ssa_name: x_2, name: x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: x_3, name: x

Name: x Function: root
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: x, Num: 3
Globalname: x, contract_name: VaderMath
End popogation
TMP_53(uint256) = a_1 (c)/ x_2
lnorm: 6 rnorm: 0
Source address: u
Source address: u
lnorm: 6 rnorm: 0
Source address: u
Source address: u
[i]Type for TMP_53

Name: TMP_53 Function: root
Num: -1
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
TMP_54(uint256) = TMP_53 (c)+ x_2
Source address: u
[i]Type for TMP_54

Name: TMP_54 Function: root
Num: 10
Den: -1
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
XXXX
TMP_55(uint256) = TMP_54 (c)/ 2
lnorm: 0 rnorm: 0
Source address: u
lnorm: 0 rnorm: 0
10
-1
[i]Type for TMP_55

Name: TMP_55 Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
x_3(uint256) := TMP_55(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: root
Num: 10
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_39

Name: TMP_39 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_40(uint256) = TMP_36 (c)* TMP_39
lnorm: u rnorm: u
[i]Type for TMP_40

Name: TMP_40 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
numeratorA_1(uint256) := TMP_40(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for numeratorA

Name: numeratorA Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_41 cleared
[i] numeratorB cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: numeratorB_1, name: numeratorB

Name: numeratorB Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: numeratorB, Num: 1
Globalname: numeratorB, contract_name: VaderMath
End popogation
TMP_41(uint256) = y2_1 (c)* reserveIn_1
lnorm: 0 rnorm: 6
Source address: u
[i]Type for TMP_41

Name: TMP_41 Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
numeratorB_1(uint256) := TMP_41(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for numeratorB

Name: numeratorB Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
[i] numeratorC cleared
Propogating parameters and globals to SSA variables...
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: XY_1, name: XY

Name: XY Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: numeratorC_1, name: numeratorC

Name: numeratorC Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numeratorC, Num: 1
Globalname: numeratorC, contract_name: VaderMath
End popogation
numeratorC_1(uint256) := XY_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for numeratorC

Name: numeratorC Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_42 cleared
[i] TMP_43 cleared
[i] numerator cleared
Propogating parameters and globals to SSA variables...
Ssa_name: numeratorC_1, name: numeratorC

Name: numeratorC Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: numeratorB_1, name: numeratorB

Name: numeratorB Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: numeratorA_1, name: numeratorA

Name: numeratorA Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numeratorA, Num: 1
Globalname: numeratorA, contract_name: VaderMath
Ssa_name: numeratorC_1, name: numeratorC

Name: numeratorC Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: numeratorB_1, name: numeratorB

Name: numeratorB Function: calculateSwapReverse
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: numeratorA_1, name: numeratorA

Name: numeratorA Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numeratorA, Num: 1
Globalname: numeratorA, contract_name: VaderMath
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numerator, Num: 1
Globalname: numerator, contract_name: VaderMath
End popogation
TMP_42(uint256) = numeratorC_1 (c)- numeratorA_1
Source address: u
[i]Type for TMP_42

Name: TMP_42 Function: calculateSwapReverse
Num: 10, 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_43(uint256) = TMP_42 (c)- numeratorB_1
[i]Type for TMP_43

Name: TMP_43 Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
numerator_1(uint256) := TMP_43(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for numerator

Name: numerator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] denominator cleared
Propogating parameters and globals to SSA variables...
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: y2_1, name: y2

Name: y2 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: denominator, Num: 1
Globalname: denominator, contract_name: VaderMath
End popogation
denominator_1(uint256) := y2_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for denominator

Name: denominator Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
[i] TMP_44 cleared
[i] amountIn cleared
Propogating parameters and globals to SSA variables...
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numerator, Num: 1
Globalname: numerator, contract_name: VaderMath
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numerator, Num: 1
Globalname: numerator, contract_name: VaderMath
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: calculateSwapReverse
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: amountIn, Num: 1
Globalname: amountIn, contract_name: VaderMath
End popogation
TMP_44(uint256) = numerator_1 (c)/ denominator_1
lnorm: u rnorm: 0
lnorm: u rnorm: 0
[i]Type for TMP_44

Name: TMP_44 Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
amountIn_1(uint256) := TMP_44(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for amountIn

Name: amountIn Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
End popogation
RETURN amountIn_1
RETURN

Name: amountIn Function: calculateSwapReverse
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Source address: u
Source address: u
[i]Type for TMP_94

Name: TMP_94 Function: calculateInGivenOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
RETURN TMP_94
RETURN

Name: TMP_94 Function: calculateInGivenOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
Reading Function: calculateOutGivenIn
Checking funcion...



calculateOutGivenIn
Function name: calculateOutGivenIn
Finding type for amountIn(uint256 ... )
Value: u
Finding type for path(address[] ... )
prev address? u
Head Addr: -989
    Norm: 0
    Set: {-989}
    Fin: NULL
New param cache [[[-1], [-1], 'u', None, [], -1, 'u', 'u'], [[], [], 0, None, [], -1, -989, 'u']]
FIND RETURN
ENTRY_POINT
calculateOutGivenIn(uint256,address[])


factory_22(IVaderPoolFactory) := ϕ(['factory_13', 'factory_0', 'factory_16', 'factory_10', 'factory_19', 'factory_21', 'factory_15', 'factory_26', 'factory_1', 'factory_24', 'factory_7'])
REF_59 -> LENGTH path_1 (-> [])
TMP_95(bool) = REF_59 == 2
CONDITION TMP_95
TMP_96(address) = HIGH_LEVEL_CALL, dest:factory_22(IVaderPoolFactory), function:nativeAsset, arguments:[]  
factory_23(IVaderPoolFactory) := ϕ(['factory_13', 'factory_16', 'factory_10', 'factory_19', 'factory_21', 'factory_15', 'factory_26', 'factory_1', 'factory_24', 'factory_7', 'factory_22'])
nativeAsset_1(address) := TMP_96(address)
REF_69(address) -> path_1 (-> [])[0]
REF_70(address) -> path_1 (-> [])[1]
TMP_101(IVaderPool) = HIGH_LEVEL_CALL, dest:factory_22(IVaderPoolFactory), function:getPool, arguments:['REF_69', 'REF_70']  
factory_25(IVaderPoolFactory) := ϕ(['factory_13', 'factory_16', 'factory_10', 'factory_19', 'factory_21', 'factory_15', 'factory_26', 'factory_1', 'factory_24', 'factory_7'])
pool0_1(IVaderPool) := TMP_101(IVaderPool)
REF_62(address) -> path_1 (-> [])[0]
REF_63(address) -> path_1 (-> [])[1]
TMP_97(IVaderPool) = HIGH_LEVEL_CALL, dest:factory_23(IVaderPoolFactory), function:getPool, arguments:['REF_62', 'REF_63']  
factory_24(IVaderPoolFactory) := ϕ(['factory_13', 'factory_16', 'factory_10', 'factory_19', 'factory_21', 'factory_15', 'factory_26', 'factory_1', 'factory_24', 'factory_7', 'factory_23'])
pool_1(IVaderPool) := TMP_97(IVaderPool)
REF_72(address) -> path_1 (-> [])[1]
REF_73(address) -> path_1 (-> [])[2]
TMP_102(IVaderPool) = HIGH_LEVEL_CALL, dest:factory_25(IVaderPoolFactory), function:getPool, arguments:['REF_72', 'REF_73']  
factory_26(IVaderPoolFactory) := ϕ(['factory_13', 'factory_16', 'factory_10', 'factory_19', 'factory_21', 'factory_15', 'factory_26', 'factory_25', 'factory_1', 'factory_24', 'factory_7'])
pool1_1(IVaderPool) := TMP_102(IVaderPool)
TUPLE_6(uint112,uint112,uint32) = HIGH_LEVEL_CALL, dest:pool_1(IVaderPool), function:getReserves, arguments:[]  
nativeReserve_1(uint256)= UNPACK TUPLE_6 index: 0 
foreignReserve_1(uint256)= UNPACK TUPLE_6 index: 1 
REF_65(address) -> path_1 (-> [])[0]
TMP_98(bool) = REF_65 == nativeAsset_1
CONDITION TMP_98
TUPLE_7(uint112,uint112,uint32) = HIGH_LEVEL_CALL, dest:pool0_1(IVaderPool), function:getReserves, arguments:[]  
nativeReserve0_1(uint256)= UNPACK TUPLE_7 index: 0 
foreignReserve0_1(uint256)= UNPACK TUPLE_7 index: 1 
TMP_100(uint256) = LIBRARY_CALL, dest:VaderMath, function:VaderMath.calculateSwap(uint256,uint256,uint256), arguments:['amountIn_1', 'foreignReserve_1', 'nativeReserve_1'] 
RETURN TMP_100
TMP_99(uint256) = LIBRARY_CALL, dest:VaderMath, function:VaderMath.calculateSwap(uint256,uint256,uint256), arguments:['amountIn_1', 'nativeReserve_1', 'foreignReserve_1'] 
RETURN TMP_99
TUPLE_8(uint112,uint112,uint32) = HIGH_LEVEL_CALL, dest:pool1_1(IVaderPool), function:getReserves, arguments:[]  
nativeReserve1_1(uint256)= UNPACK TUPLE_8 index: 0 
foreignReserve1_1(uint256)= UNPACK TUPLE_8 index: 1 
TMP_103(uint256) = LIBRARY_CALL, dest:VaderMath, function:VaderMath.calculateSwap(uint256,uint256,uint256), arguments:['amountIn_1', 'nativeReserve1_1', 'foreignReserve1_1'] 
TMP_104(uint256) = LIBRARY_CALL, dest:VaderMath, function:VaderMath.calculateSwap(uint256,uint256,uint256), arguments:['TMP_103', 'foreignReserve0_1', 'nativeReserve0_1'] 
RETURN TMP_104


Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: factory_22, name: factory

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: factory, Num: 22
Globalname: factory, contract_name: VaderRouter
global...

Name: factory Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
factory_22(IVaderPoolFactory) := ϕ(['factory_13', 'factory_0', 'factory_16', 'factory_10', 'factory_19', 'factory_21', 'factory_15', 'factory_26', 'factory_1', 'factory_24', 'factory_7'])
Phi
[i]Type for factory

Name: factory Function: calculateOutGivenIn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_95 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: path_1 (-> []), name: path

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: -989

Name: path_1 (-> []) Function: calculateOutGivenIn
Num: 
Den: 
Address: -989
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: path_1 (-> []), name: path

Name: path_1 (-> []) Function: calculateOutGivenIn
Num: 
Den: 
Address: -989
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
REF_59 -> LENGTH path_1 (-> [])
[i]Type for REF_59

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_95(bool) = REF_59 == 2
[i]Type for TMP_95

Name: TMP_95 Function: calculateOutGivenIn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_96 cleared
[i] nativeAsset cleared
Propogating parameters and globals to SSA variables...
Ssa_name: factory_22, name: factory

Name: factory Function: calculateOutGivenIn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: factory_22, name: factory

Name: factory Function: calculateOutGivenIn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeAsset_1, name: nativeAsset

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: nativeAsset, Num: 1
Globalname: nativeAsset, contract_name: VaderRouter
End popogation
Ssa_name: factory_23, name: factory

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: factory, Num: 23
Globalname: factory, contract_name: VaderRouter
global...

Name: factory Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
TMP_96(address) = HIGH_LEVEL_CALL, dest:factory_22(IVaderPoolFactory), function:nativeAsset, arguments:[]  
High Call: nativeAsset
Running querryfc
Found: None
Written func info: IVaderPoolFactory, nativeAsset
Retvar: ('c', ['global:nativeAsset'], ['-1'], 18, "'u'", 'u')
{'global:_owner': 1, 'global:_tokenApprovals': 2, 'global:_owners': 3, 'swap:to': -999, 'mint:to': -998, 'mint:TMP_139': 4, 'global:this': 4, 'None:None': 5, 'mint:foreignAsset': 6, 'swap:_nativeAsset': 7, 'swap:_foreignAsset': 8, 'global:nativeAsset': 9, 'global:foreignAsset': 10, 'global:_ZERO_ADDRESS': 11, 'removeLiquidity:tokenA': -997, 'removeLiquidity:tokenB': -996, 'removeLiquidity:to': -995, 'swapExactTokensForTokens:path': -994, 'swapExactTokensForTokens:to': -993, 'swapTokensForExactTokens:path': -992, 'swapTokensForExactTokens:to': -991, 'calculateInGivenOut:path': -990, 'calculateOutGivenIn:path': -989}
([9], [-1], 18, "'u'", 'u', -1)
[i]Type for TMP_96

Name: TMP_96 Function: calculateOutGivenIn
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
factory_23(IVaderPoolFactory) := ϕ(['factory_13', 'factory_16', 'factory_10', 'factory_19', 'factory_21', 'factory_15', 'factory_26', 'factory_1', 'factory_24', 'factory_7', 'factory_22'])
Phi
[i]Type for factory

Name: factory Function: calculateOutGivenIn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
nativeAsset_1(address) := TMP_96(address)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for nativeAsset

Name: nativeAsset Function: calculateOutGivenIn
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
[i] TMP_101 cleared
[i] pool0 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: path_1 (-> []), name: path

Name: path_1 (-> []) Function: calculateOutGivenIn
Num: 
Den: 
Address: -989
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: factory_22, name: factory

Name: factory Function: calculateOutGivenIn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: path_1 (-> []), name: path

Name: path_1 (-> []) Function: calculateOutGivenIn
Num: 
Den: 
Address: -989
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: factory_22, name: factory

Name: factory Function: calculateOutGivenIn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: pool0_1, name: pool0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pool0, Num: 1
Globalname: pool0, contract_name: VaderRouter
End popogation
Ssa_name: factory_25, name: factory

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: factory, Num: 25
Globalname: factory, contract_name: VaderRouter
global...

Name: factory Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
REF_69(address) -> path_1 (-> [])[0]
INDEX
REFERENCE LEFT VALUE PROPAGATION
Source address: -989
[i]Type for REF_69

Name: path_1 (-> []) Function: calculateOutGivenIn
Num: 
Den: 
Address: -989
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_70(address) -> path_1 (-> [])[1]
INDEX
REFERENCE LEFT VALUE PROPAGATION
Source address: -989
[i]Type for REF_70

Name: path_1 (-> []) Function: calculateOutGivenIn
Num: 
Den: 
Address: -989
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_101(IVaderPool) = HIGH_LEVEL_CALL, dest:factory_22(IVaderPoolFactory), function:getPool, arguments:['REF_69', 'REF_70']  
High Call: getPool
Running querryfc
Found: None
Written func info: IVaderPoolFactory, getPool
[i]Type for TMP_101

Name: TMP_101 Function: calculateOutGivenIn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
factory_25(IVaderPoolFactory) := ϕ(['factory_13', 'factory_16', 'factory_10', 'factory_19', 'factory_21', 'factory_15', 'factory_26', 'factory_1', 'factory_24', 'factory_7'])
Phi
[i]Type for factory

Name: factory Function: calculateOutGivenIn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
pool0_1(IVaderPool) := TMP_101(IVaderPool)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for pool0

Name: pool0 Function: calculateOutGivenIn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_97 cleared
[i] pool cleared
Propogating parameters and globals to SSA variables...
Ssa_name: path_1 (-> []), name: path

Name: path_1 (-> []) Function: calculateOutGivenIn
Num: 
Den: 
Address: -989
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: factory_23, name: factory

Name: factory Function: calculateOutGivenIn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: factory_23, name: factory

Name: factory Function: calculateOutGivenIn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: path_1 (-> []), name: path

Name: path_1 (-> []) Function: calculateOutGivenIn
Num: 
Den: 
Address: -989
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: pool_1, name: pool

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pool, Num: 1
Globalname: pool, contract_name: VaderRouter
End popogation
Ssa_name: factory_24, name: factory

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: factory, Num: 24
Globalname: factory, contract_name: VaderRouter
global...

Name: factory Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
REF_62(address) -> path_1 (-> [])[0]
INDEX
REFERENCE LEFT VALUE PROPAGATION
Source address: -989
[i]Type for REF_62

Name: path_1 (-> []) Function: calculateOutGivenIn
Num: 
Den: 
Address: -989
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_63(address) -> path_1 (-> [])[1]
INDEX
REFERENCE LEFT VALUE PROPAGATION
Source address: -989
[i]Type for REF_63

Name: path_1 (-> []) Function: calculateOutGivenIn
Num: 
Den: 
Address: -989
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_97(IVaderPool) = HIGH_LEVEL_CALL, dest:factory_23(IVaderPoolFactory), function:getPool, arguments:['REF_62', 'REF_63']  
High Call: getPool
Running querryfc
Found: None
Written func info: IVaderPoolFactory, getPool
[i]Type for TMP_97

Name: TMP_97 Function: calculateOutGivenIn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
factory_24(IVaderPoolFactory) := ϕ(['factory_13', 'factory_16', 'factory_10', 'factory_19', 'factory_21', 'factory_15', 'factory_26', 'factory_1', 'factory_24', 'factory_7', 'factory_23'])
Phi
[i]Type for factory

Name: factory Function: calculateOutGivenIn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
pool_1(IVaderPool) := TMP_97(IVaderPool)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for pool

Name: pool Function: calculateOutGivenIn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_102 cleared
[i] pool1 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: path_1 (-> []), name: path

Name: path_1 (-> []) Function: calculateOutGivenIn
Num: 
Den: 
Address: -989
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: factory_25, name: factory

Name: factory Function: calculateOutGivenIn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: factory_25, name: factory

Name: factory Function: calculateOutGivenIn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: path_1 (-> []), name: path

Name: path_1 (-> []) Function: calculateOutGivenIn
Num: 
Den: 
Address: -989
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: pool1_1, name: pool1

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pool1, Num: 1
Globalname: pool1, contract_name: VaderRouter
End popogation
Ssa_name: factory_26, name: factory

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: factory, Num: 26
Globalname: factory, contract_name: VaderRouter
global...

Name: factory Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
REF_72(address) -> path_1 (-> [])[1]
INDEX
REFERENCE LEFT VALUE PROPAGATION
Source address: -989
[i]Type for REF_72

Name: path_1 (-> []) Function: calculateOutGivenIn
Num: 
Den: 
Address: -989
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_73(address) -> path_1 (-> [])[2]
INDEX
REFERENCE LEFT VALUE PROPAGATION
Source address: -989
[i]Type for REF_73

Name: path_1 (-> []) Function: calculateOutGivenIn
Num: 
Den: 
Address: -989
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_102(IVaderPool) = HIGH_LEVEL_CALL, dest:factory_25(IVaderPoolFactory), function:getPool, arguments:['REF_72', 'REF_73']  
High Call: getPool
Running querryfc
Found: None
Written func info: IVaderPoolFactory, getPool
[i]Type for TMP_102

Name: TMP_102 Function: calculateOutGivenIn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
factory_26(IVaderPoolFactory) := ϕ(['factory_13', 'factory_16', 'factory_10', 'factory_19', 'factory_21', 'factory_15', 'factory_26', 'factory_25', 'factory_1', 'factory_24', 'factory_7'])
Phi
[i]Type for factory

Name: factory Function: calculateOutGivenIn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
pool1_1(IVaderPool) := TMP_102(IVaderPool)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for pool1

Name: pool1 Function: calculateOutGivenIn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] nativeReserve cleared
[i] foreignReserve cleared
Propogating parameters and globals to SSA variables...
Ssa_name: pool_1, name: pool

Name: pool Function: calculateOutGivenIn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: pool_1, name: pool

Name: pool Function: calculateOutGivenIn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeReserve_1, name: nativeReserve

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: nativeReserve, Num: 1
Globalname: nativeReserve, contract_name: VaderRouter
Ssa_name: foreignReserve_1, name: foreignReserve

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: foreignReserve, Num: 1
Globalname: foreignReserve, contract_name: VaderRouter
End popogation
TUPLE_6(uint112,uint112,uint32) = HIGH_LEVEL_CALL, dest:pool_1(IVaderPool), function:getReserves, arguments:[]  
High Call: getReserves
Running querryfc
Found: None
Written func info: IVaderPool, getReserves
Retvar: ('c', ['global:nativeAsset'], ['-1'], 18, "'u'", 'u')
{'global:_owner': 1, 'global:_tokenApprovals': 2, 'global:_owners': 3, 'swap:to': -999, 'mint:to': -998, 'mint:TMP_139': 4, 'global:this': 4, 'None:None': 5, 'mint:foreignAsset': 6, 'swap:_nativeAsset': 7, 'swap:_foreignAsset': 8, 'global:nativeAsset': 9, 'global:foreignAsset': 10, 'global:_ZERO_ADDRESS': 11, 'removeLiquidity:tokenA': -997, 'removeLiquidity:tokenB': -996, 'removeLiquidity:to': -995, 'swapExactTokensForTokens:path': -994, 'swapExactTokensForTokens:to': -993, 'swapTokensForExactTokens:path': -992, 'swapTokensForExactTokens:to': -991, 'calculateInGivenOut:path': -990, 'calculateOutGivenIn:path': -989}
Retvar: ('c', ['global:foreignAsset'], ['-1'], 6, "'u'", 'u')
{'global:_owner': 1, 'global:_tokenApprovals': 2, 'global:_owners': 3, 'swap:to': -999, 'mint:to': -998, 'mint:TMP_139': 4, 'global:this': 4, 'None:None': 5, 'mint:foreignAsset': 6, 'swap:_nativeAsset': 7, 'swap:_foreignAsset': 8, 'global:nativeAsset': 9, 'global:foreignAsset': 10, 'global:_ZERO_ADDRESS': 11, 'removeLiquidity:tokenA': -997, 'removeLiquidity:tokenB': -996, 'removeLiquidity:to': -995, 'swapExactTokensForTokens:path': -994, 'swapExactTokensForTokens:to': -993, 'swapTokensForExactTokens:path': -992, 'swapTokensForExactTokens:to': -991, 'calculateInGivenOut:path': -990, 'calculateOutGivenIn:path': -989}
[i]Type for TUPLE_6

Name: TUPLE_6 Function: calculateOutGivenIn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
nativeReserve_1(uint256)= UNPACK TUPLE_6 index: 0 
([9], [-1], 18, "'u'", 'u', -1)
[i]Type for nativeReserve

Name: nativeReserve Function: calculateOutGivenIn
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
foreignReserve_1(uint256)= UNPACK TUPLE_6 index: 1 
([10], [-1], 6, "'u'", 'u', -1)
[i]Type for foreignReserve

Name: foreignReserve Function: calculateOutGivenIn
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
[i] TMP_98 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: path_1 (-> []), name: path

Name: path_1 (-> []) Function: calculateOutGivenIn
Num: 
Den: 
Address: -989
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeAsset_1, name: nativeAsset

Name: nativeAsset Function: calculateOutGivenIn
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: path_1 (-> []), name: path

Name: path_1 (-> []) Function: calculateOutGivenIn
Num: 
Den: 
Address: -989
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeAsset_1, name: nativeAsset

Name: nativeAsset Function: calculateOutGivenIn
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
End popogation
REF_65(address) -> path_1 (-> [])[0]
INDEX
REFERENCE LEFT VALUE PROPAGATION
Source address: -989
[i]Type for REF_65

Name: path_1 (-> []) Function: calculateOutGivenIn
Num: 
Den: 
Address: -989
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_98(bool) = REF_65 == nativeAsset_1
[i]Type for TMP_98

Name: TMP_98 Function: calculateOutGivenIn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] nativeReserve0 cleared
[i] foreignReserve0 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: pool0_1, name: pool0

Name: pool0 Function: calculateOutGivenIn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: pool0_1, name: pool0

Name: pool0 Function: calculateOutGivenIn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeReserve0_1, name: nativeReserve0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: nativeReserve0, Num: 1
Globalname: nativeReserve0, contract_name: VaderRouter
Ssa_name: foreignReserve0_1, name: foreignReserve0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: foreignReserve0, Num: 1
Globalname: foreignReserve0, contract_name: VaderRouter
End popogation
TUPLE_7(uint112,uint112,uint32) = HIGH_LEVEL_CALL, dest:pool0_1(IVaderPool), function:getReserves, arguments:[]  
High Call: getReserves
Running querryfc
Found: None
Written func info: IVaderPool, getReserves
Retvar: ('c', ['global:nativeAsset'], ['-1'], 18, "'u'", 'u')
{'global:_owner': 1, 'global:_tokenApprovals': 2, 'global:_owners': 3, 'swap:to': -999, 'mint:to': -998, 'mint:TMP_139': 4, 'global:this': 4, 'None:None': 5, 'mint:foreignAsset': 6, 'swap:_nativeAsset': 7, 'swap:_foreignAsset': 8, 'global:nativeAsset': 9, 'global:foreignAsset': 10, 'global:_ZERO_ADDRESS': 11, 'removeLiquidity:tokenA': -997, 'removeLiquidity:tokenB': -996, 'removeLiquidity:to': -995, 'swapExactTokensForTokens:path': -994, 'swapExactTokensForTokens:to': -993, 'swapTokensForExactTokens:path': -992, 'swapTokensForExactTokens:to': -991, 'calculateInGivenOut:path': -990, 'calculateOutGivenIn:path': -989}
Retvar: ('c', ['global:foreignAsset'], ['-1'], 6, "'u'", 'u')
{'global:_owner': 1, 'global:_tokenApprovals': 2, 'global:_owners': 3, 'swap:to': -999, 'mint:to': -998, 'mint:TMP_139': 4, 'global:this': 4, 'None:None': 5, 'mint:foreignAsset': 6, 'swap:_nativeAsset': 7, 'swap:_foreignAsset': 8, 'global:nativeAsset': 9, 'global:foreignAsset': 10, 'global:_ZERO_ADDRESS': 11, 'removeLiquidity:tokenA': -997, 'removeLiquidity:tokenB': -996, 'removeLiquidity:to': -995, 'swapExactTokensForTokens:path': -994, 'swapExactTokensForTokens:to': -993, 'swapTokensForExactTokens:path': -992, 'swapTokensForExactTokens:to': -991, 'calculateInGivenOut:path': -990, 'calculateOutGivenIn:path': -989}
[i]Type for TUPLE_7

Name: TUPLE_7 Function: calculateOutGivenIn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
nativeReserve0_1(uint256)= UNPACK TUPLE_7 index: 0 
([9], [-1], 18, "'u'", 'u', -1)
[i]Type for nativeReserve0

Name: nativeReserve0 Function: calculateOutGivenIn
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
foreignReserve0_1(uint256)= UNPACK TUPLE_7 index: 1 
([10], [-1], 6, "'u'", 'u', -1)
[i]Type for foreignReserve0

Name: foreignReserve0 Function: calculateOutGivenIn
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
[i] TMP_100 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: foreignReserve_1, name: foreignReserve

Name: foreignReserve Function: calculateOutGivenIn
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: nativeReserve_1, name: nativeReserve

Name: nativeReserve Function: calculateOutGivenIn
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: calculateOutGivenIn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountIn, Num: 1
Globalname: amountIn, contract_name: VaderRouter
Ssa_name: foreignReserve_1, name: foreignReserve

Name: foreignReserve Function: calculateOutGivenIn
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: nativeReserve_1, name: nativeReserve

Name: nativeReserve Function: calculateOutGivenIn
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: calculateOutGivenIn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: calculateOutGivenIn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountIn, Num: 1
Globalname: amountIn, contract_name: VaderRouter
End popogation
TMP_100(uint256) = LIBRARY_CALL, dest:VaderMath, function:VaderMath.calculateSwap(uint256,uint256,uint256), arguments:['amountIn_1', 'foreignReserve_1', 'nativeReserve_1'] 
Found: calculateSwap

Name: amountIn_1 Function: calculateOutGivenIn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: foreignReserve Function: calculateOutGivenIn
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: nativeReserve Function: calculateOutGivenIn
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
High level cal param_cache
Param: 0
    num: []
    den: []
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [10]
    den: [-1]
    norm: 6
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [9]
    den: [-1]
    norm: 18
    link: None
    fields: []
    fintype: -1
New param cache [[[], [], 'u', None, [], -1, 'u', 'u'], [[10], [-1], 6, None, [], -1, 'u', "'u'"], [[9], [-1], 18, None, [], -1, 'u', "'u'"]]
Old param cache: [[[-1], [-1], 'u', None, [], -1, 'u'], [[-1], [-1], 'u', None, [], -1, 'u'], [[-1], [-1], 'u', None, [], -1, 'u']]
[[], [], 'u', None, [], -1, 'u', 'u']

Name: amountIn Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[10], [-1], 6, None, [], -1, 'u', "'u'"]

Name: reserveIn Function: calculateSwap
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
[[9], [-1], 18, None, [], -1, 'u', "'u'"]

Name: reserveOut Function: calculateSwap
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
calculateSwap(uint256,uint256,uint256)
Propogating All
Propogating All
reserveOut_1
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: reserveOut_1 Function: calculateSwap
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
reserveIn_1
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: reserveIn_1 Function: calculateSwap
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
amountIn_1
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
reserveIn_1
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwap
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: reserveIn_1 Function: calculateSwap
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
amountIn_1
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
numerator_1
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
denominator_1
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
amountOut_1
Ssa_name: amountOut_1, name: amountOut

Name: amountOut Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_26 cleared
[i] TMP_27 cleared
[i] numerator cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwap
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwap
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountIn, Num: 1
Globalname: amountIn, contract_name: VaderMath
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwap
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwap
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountIn, Num: 1
Globalname: amountIn, contract_name: VaderMath
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numerator, Num: 1
Globalname: numerator, contract_name: VaderMath
End popogation
TMP_26(uint256) = amountIn_1 (c)* reserveIn_1
lnorm: u rnorm: 6
Source address: u
[i]Type for TMP_26

Name: TMP_26 Function: calculateSwap
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_27(uint256) = TMP_26 (c)* reserveOut_1
lnorm: 6 rnorm: 18
Source address: u
Source address: u
Source address: u
[i]Type for TMP_27

Name: TMP_27 Function: calculateSwap
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
numerator_1(uint256) := TMP_27(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for numerator

Name: numerator Function: calculateSwap
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_28 cleared
[i] TMP_29 cleared
[i] denominator cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwap
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountIn, Num: 1
Globalname: amountIn, contract_name: VaderMath
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwap
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountIn, Num: 1
Globalname: amountIn, contract_name: VaderMath
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: denominator, Num: 1
Globalname: denominator, contract_name: VaderMath
End popogation
TMP_28(uint256) = amountIn_1 (c)+ reserveIn_1
Source address: u
[i]Type for TMP_28

Name: TMP_28 Function: calculateSwap
Num: 10
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_29(uint256) = INTERNAL_CALL, VaderMath.pow(uint256)(TMP_28)
New param cache [[[10], [-1], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[], [], 'u', None, [], -1, 'u']]
[[10], [-1], 'u', None, [], -1, 'u', 'u']

Name: a Function: pow
Num: 10
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
pow(uint256)
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: pow
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: pow
Num: 10
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a_1 Function: pow
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: pow
Num: 10
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_28'])
Phi
[i]Type for a

Name: a Function: pow
Num: 10
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_48 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: pow
Num: 10
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: pow
Num: 10
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_48(uint256) = a_1 (c)* a_1
lnorm: u rnorm: u
Source address: u
Source address: u
Source address: u
[i]Type for TMP_48

Name: TMP_48 Function: pow
Num: 10, 10
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_48
RETURN

Name: TMP_48 Function: pow
Num: 10, 10
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a Function: pow
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: pow
Num: 10
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_28'])
Phi
[i]Type for a

Name: a Function: pow
Num: 10
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_48 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: pow
Num: 10
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: pow
Num: 10
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_48(uint256) = a_1 (c)* a_1
lnorm: u rnorm: u
Source address: u
Source address: u
Source address: u
[i]Type for TMP_48

Name: TMP_48 Function: pow
Num: 10, 10
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_48
RETURN

Name: TMP_48 Function: pow
Num: 10, 10
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Source address: u
[i]Type for TMP_29

Name: TMP_29 Function: calculateSwap
Num: 10, 10
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
denominator_1(uint256) := TMP_29(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for denominator

Name: denominator Function: calculateSwap
Num: 10, 10
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_30 cleared
[i] amountOut cleared
Propogating parameters and globals to SSA variables...
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwap
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwap
Num: 10, 10
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwap
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwap
Num: 10, 10
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountOut_1, name: amountOut

Name: amountOut Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: amountOut, Num: 1
Globalname: amountOut, contract_name: VaderMath
End popogation
TMP_30(uint256) = numerator_1 (c)/ denominator_1
lnorm: 24 rnorm: u
Source address: u
Source address: u
lnorm: 24 rnorm: u
Source address: u
9
10
[i]Type for TMP_30

Name: TMP_30 Function: calculateSwap
Num: 9
Den: 10
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
amountOut_1(uint256) := TMP_30(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for amountOut

Name: amountOut Function: calculateSwap
Num: 9
Den: 10
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: amountOut_1, name: amountOut

Name: amountOut Function: calculateSwap
Num: 9
Den: 10
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountOut_1, name: amountOut

Name: amountOut Function: calculateSwap
Num: 9
Den: 10
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
RETURN amountOut_1
RETURN

Name: amountOut Function: calculateSwap
Num: 9
Den: 10
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_26 cleared
[i] TMP_27 cleared
[i] numerator cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwap
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwap
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountIn, Num: 1
Globalname: amountIn, contract_name: VaderMath
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwap
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwap
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountIn, Num: 1
Globalname: amountIn, contract_name: VaderMath
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numerator, Num: 1
Globalname: numerator, contract_name: VaderMath
End popogation
TMP_26(uint256) = amountIn_1 (c)* reserveIn_1
lnorm: u rnorm: 6
Source address: u
[i]Type for TMP_26

Name: TMP_26 Function: calculateSwap
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_27(uint256) = TMP_26 (c)* reserveOut_1
lnorm: 6 rnorm: 18
Source address: u
Source address: u
Source address: u
[i]Type for TMP_27

Name: TMP_27 Function: calculateSwap
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
numerator_1(uint256) := TMP_27(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for numerator

Name: numerator Function: calculateSwap
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_28 cleared
[i] TMP_29 cleared
[i] denominator cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwap
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountIn, Num: 1
Globalname: amountIn, contract_name: VaderMath
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwap
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountIn, Num: 1
Globalname: amountIn, contract_name: VaderMath
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: denominator, Num: 1
Globalname: denominator, contract_name: VaderMath
End popogation
TMP_28(uint256) = amountIn_1 (c)+ reserveIn_1
Source address: u
[i]Type for TMP_28

Name: TMP_28 Function: calculateSwap
Num: 10
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_29(uint256) = INTERNAL_CALL, VaderMath.pow(uint256)(TMP_28)
New param cache [[[10], [-1], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[], [], 'u', None, [], -1, 'u']]
[[10], [-1], 'u', None, [], -1, 'u', 'u']

Name: a Function: pow
Num: 10
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
pow(uint256)
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a Function: pow
Num: 10
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: pow
Num: 10
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a_1 Function: pow
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: pow
Num: 10
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_28'])
Phi
[i]Type for a

Name: a Function: pow
Num: 10
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_48 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: pow
Num: 10
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: pow
Num: 10
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_48(uint256) = a_1 (c)* a_1
lnorm: u rnorm: u
Source address: u
Source address: u
Source address: u
[i]Type for TMP_48

Name: TMP_48 Function: pow
Num: 10, 10
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_48
RETURN

Name: TMP_48 Function: pow
Num: 10, 10
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a Function: pow
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: pow
Num: 10
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_28'])
Phi
[i]Type for a

Name: a Function: pow
Num: 10
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_48 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: pow
Num: 10
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: pow
Num: 10
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_48(uint256) = a_1 (c)* a_1
lnorm: u rnorm: u
Source address: u
Source address: u
Source address: u
[i]Type for TMP_48

Name: TMP_48 Function: pow
Num: 10, 10
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_48
RETURN

Name: TMP_48 Function: pow
Num: 10, 10
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Source address: u
[i]Type for TMP_29

Name: TMP_29 Function: calculateSwap
Num: 10, 10
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
denominator_1(uint256) := TMP_29(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for denominator

Name: denominator Function: calculateSwap
Num: 10, 10
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_30 cleared
[i] amountOut cleared
Propogating parameters and globals to SSA variables...
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwap
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwap
Num: 10, 10
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwap
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwap
Num: 10, 10
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountOut_1, name: amountOut

Name: amountOut Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: amountOut, Num: 1
Globalname: amountOut, contract_name: VaderMath
End popogation
TMP_30(uint256) = numerator_1 (c)/ denominator_1
lnorm: 24 rnorm: u
Source address: u
Source address: u
lnorm: 24 rnorm: u
Source address: u
9
10
[i]Type for TMP_30

Name: TMP_30 Function: calculateSwap
Num: 9
Den: 10
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
amountOut_1(uint256) := TMP_30(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for amountOut

Name: amountOut Function: calculateSwap
Num: 9
Den: 10
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: amountOut_1, name: amountOut

Name: amountOut Function: calculateSwap
Num: 9
Den: 10
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountOut_1, name: amountOut

Name: amountOut Function: calculateSwap
Num: 9
Den: 10
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
RETURN amountOut_1
RETURN

Name: amountOut Function: calculateSwap
Num: 9
Den: 10
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Source address: u
[i]Type for TMP_100

Name: TMP_100 Function: calculateOutGivenIn
Num: 9
Den: 10
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_100
RETURN

Name: TMP_100 Function: calculateOutGivenIn
Num: 9
Den: 10
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
[i] TMP_99 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: foreignReserve_1, name: foreignReserve

Name: foreignReserve Function: calculateOutGivenIn
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: nativeReserve_1, name: nativeReserve

Name: nativeReserve Function: calculateOutGivenIn
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: calculateOutGivenIn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: calculateOutGivenIn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountIn, Num: 1
Globalname: amountIn, contract_name: VaderRouter
Ssa_name: foreignReserve_1, name: foreignReserve

Name: foreignReserve Function: calculateOutGivenIn
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: nativeReserve_1, name: nativeReserve

Name: nativeReserve Function: calculateOutGivenIn
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: calculateOutGivenIn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: calculateOutGivenIn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountIn, Num: 1
Globalname: amountIn, contract_name: VaderRouter
End popogation
TMP_99(uint256) = LIBRARY_CALL, dest:VaderMath, function:VaderMath.calculateSwap(uint256,uint256,uint256), arguments:['amountIn_1', 'nativeReserve_1', 'foreignReserve_1'] 
Found: calculateSwap

Name: amountIn_1 Function: calculateOutGivenIn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: nativeReserve Function: calculateOutGivenIn
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: foreignReserve Function: calculateOutGivenIn
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
High level cal param_cache
Param: 0
    num: []
    den: []
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [9]
    den: [-1]
    norm: 18
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [10]
    den: [-1]
    norm: 6
    link: None
    fields: []
    fintype: -1
New param cache [[[], [], 'u', None, [], -1, 'u', 'u'], [[9], [-1], 18, None, [], -1, 'u', "'u'"], [[10], [-1], 6, None, [], -1, 'u', "'u'"]]
Old param cache: [[[-1], [-1], 'u', None, [], -1, 'u'], [[-1], [-1], 'u', None, [], -1, 'u'], [[-1], [-1], 'u', None, [], -1, 'u']]
[[], [], 'u', None, [], -1, 'u', 'u']

Name: amountIn Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[9], [-1], 18, None, [], -1, 'u', "'u'"]

Name: reserveIn Function: calculateSwap
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
[[10], [-1], 6, None, [], -1, 'u', "'u'"]

Name: reserveOut Function: calculateSwap
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
calculateSwap(uint256,uint256,uint256)
Propogating All
Propogating All
reserveOut_1
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwap
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: reserveOut_1 Function: calculateSwap
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
reserveIn_1
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwap
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: reserveIn_1 Function: calculateSwap
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
amountIn_1
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
reserveIn_1
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwap
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: reserveIn_1 Function: calculateSwap
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
amountIn_1
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
numerator_1
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwap
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
denominator_1
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwap
Num: 10, 10
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
amountOut_1
Ssa_name: amountOut_1, name: amountOut

Name: amountOut Function: calculateSwap
Num: 9
Den: 10
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_26 cleared
[i] TMP_27 cleared
[i] numerator cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwap
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwap
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountIn, Num: 1
Globalname: amountIn, contract_name: VaderMath
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwap
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwap
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountIn, Num: 1
Globalname: amountIn, contract_name: VaderMath
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numerator, Num: 1
Globalname: numerator, contract_name: VaderMath
End popogation
TMP_26(uint256) = amountIn_1 (c)* reserveIn_1
lnorm: u rnorm: 18
Source address: u
[i]Type for TMP_26

Name: TMP_26 Function: calculateSwap
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_27(uint256) = TMP_26 (c)* reserveOut_1
lnorm: 18 rnorm: 6
Source address: u
Source address: u
Source address: u
[i]Type for TMP_27

Name: TMP_27 Function: calculateSwap
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
numerator_1(uint256) := TMP_27(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for numerator

Name: numerator Function: calculateSwap
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_28 cleared
[i] TMP_29 cleared
[i] denominator cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwap
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountIn, Num: 1
Globalname: amountIn, contract_name: VaderMath
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwap
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountIn, Num: 1
Globalname: amountIn, contract_name: VaderMath
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: denominator, Num: 1
Globalname: denominator, contract_name: VaderMath
End popogation
TMP_28(uint256) = amountIn_1 (c)+ reserveIn_1
Source address: u
[i]Type for TMP_28

Name: TMP_28 Function: calculateSwap
Num: 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_29(uint256) = INTERNAL_CALL, VaderMath.pow(uint256)(TMP_28)
New param cache [[[9], [-1], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[], [], 'u', None, [], -1, 'u']]
[[9], [-1], 'u', None, [], -1, 'u', 'u']

Name: a Function: pow
Num: 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
pow(uint256)
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a Function: pow
Num: 10
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: pow
Num: 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a_1 Function: pow
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: pow
Num: 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_28'])
Phi
[i]Type for a

Name: a Function: pow
Num: 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_48 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: pow
Num: 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: pow
Num: 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_48(uint256) = a_1 (c)* a_1
lnorm: u rnorm: u
Source address: u
Source address: u
Source address: u
[i]Type for TMP_48

Name: TMP_48 Function: pow
Num: 9, 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_48
RETURN

Name: TMP_48 Function: pow
Num: 9, 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a Function: pow
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: pow
Num: 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_28'])
Phi
[i]Type for a

Name: a Function: pow
Num: 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_48 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: pow
Num: 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: pow
Num: 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_48(uint256) = a_1 (c)* a_1
lnorm: u rnorm: u
Source address: u
Source address: u
Source address: u
[i]Type for TMP_48

Name: TMP_48 Function: pow
Num: 9, 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_48
RETURN

Name: TMP_48 Function: pow
Num: 9, 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Source address: u
[i]Type for TMP_29

Name: TMP_29 Function: calculateSwap
Num: 9, 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
denominator_1(uint256) := TMP_29(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for denominator

Name: denominator Function: calculateSwap
Num: 9, 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_30 cleared
[i] amountOut cleared
Propogating parameters and globals to SSA variables...
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwap
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwap
Num: 9, 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwap
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwap
Num: 9, 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountOut_1, name: amountOut

Name: amountOut Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: amountOut, Num: 1
Globalname: amountOut, contract_name: VaderMath
End popogation
TMP_30(uint256) = numerator_1 (c)/ denominator_1
lnorm: 24 rnorm: u
Source address: u
Source address: u
lnorm: 24 rnorm: u
Source address: u
10
9
[i]Type for TMP_30

Name: TMP_30 Function: calculateSwap
Num: 10
Den: 9
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
amountOut_1(uint256) := TMP_30(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for amountOut

Name: amountOut Function: calculateSwap
Num: 10
Den: 9
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: amountOut_1, name: amountOut

Name: amountOut Function: calculateSwap
Num: 10
Den: 9
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountOut_1, name: amountOut

Name: amountOut Function: calculateSwap
Num: 10
Den: 9
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
RETURN amountOut_1
RETURN

Name: amountOut Function: calculateSwap
Num: 10
Den: 9
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_26 cleared
[i] TMP_27 cleared
[i] numerator cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwap
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwap
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountIn, Num: 1
Globalname: amountIn, contract_name: VaderMath
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwap
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwap
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountIn, Num: 1
Globalname: amountIn, contract_name: VaderMath
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numerator, Num: 1
Globalname: numerator, contract_name: VaderMath
End popogation
TMP_26(uint256) = amountIn_1 (c)* reserveIn_1
lnorm: u rnorm: 18
Source address: u
[i]Type for TMP_26

Name: TMP_26 Function: calculateSwap
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_27(uint256) = TMP_26 (c)* reserveOut_1
lnorm: 18 rnorm: 6
Source address: u
Source address: u
Source address: u
[i]Type for TMP_27

Name: TMP_27 Function: calculateSwap
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
numerator_1(uint256) := TMP_27(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for numerator

Name: numerator Function: calculateSwap
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_28 cleared
[i] TMP_29 cleared
[i] denominator cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwap
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountIn, Num: 1
Globalname: amountIn, contract_name: VaderMath
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwap
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountIn, Num: 1
Globalname: amountIn, contract_name: VaderMath
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: denominator, Num: 1
Globalname: denominator, contract_name: VaderMath
End popogation
TMP_28(uint256) = amountIn_1 (c)+ reserveIn_1
Source address: u
[i]Type for TMP_28

Name: TMP_28 Function: calculateSwap
Num: 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_29(uint256) = INTERNAL_CALL, VaderMath.pow(uint256)(TMP_28)
New param cache [[[9], [-1], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[], [], 'u', None, [], -1, 'u']]
[[9], [-1], 'u', None, [], -1, 'u', 'u']

Name: a Function: pow
Num: 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
pow(uint256)
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a Function: pow
Num: 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: pow
Num: 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a_1 Function: pow
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: pow
Num: 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_28'])
Phi
[i]Type for a

Name: a Function: pow
Num: 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_48 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: pow
Num: 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: pow
Num: 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_48(uint256) = a_1 (c)* a_1
lnorm: u rnorm: u
Source address: u
Source address: u
Source address: u
[i]Type for TMP_48

Name: TMP_48 Function: pow
Num: 9, 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_48
RETURN

Name: TMP_48 Function: pow
Num: 9, 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a Function: pow
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: pow
Num: 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_28'])
Phi
[i]Type for a

Name: a Function: pow
Num: 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_48 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: pow
Num: 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: pow
Num: 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_48(uint256) = a_1 (c)* a_1
lnorm: u rnorm: u
Source address: u
Source address: u
Source address: u
[i]Type for TMP_48

Name: TMP_48 Function: pow
Num: 9, 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_48
RETURN

Name: TMP_48 Function: pow
Num: 9, 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Source address: u
[i]Type for TMP_29

Name: TMP_29 Function: calculateSwap
Num: 9, 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
denominator_1(uint256) := TMP_29(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for denominator

Name: denominator Function: calculateSwap
Num: 9, 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_30 cleared
[i] amountOut cleared
Propogating parameters and globals to SSA variables...
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwap
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwap
Num: 9, 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwap
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwap
Num: 9, 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountOut_1, name: amountOut

Name: amountOut Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: amountOut, Num: 1
Globalname: amountOut, contract_name: VaderMath
End popogation
TMP_30(uint256) = numerator_1 (c)/ denominator_1
lnorm: 24 rnorm: u
Source address: u
Source address: u
lnorm: 24 rnorm: u
Source address: u
10
9
[i]Type for TMP_30

Name: TMP_30 Function: calculateSwap
Num: 10
Den: 9
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
amountOut_1(uint256) := TMP_30(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for amountOut

Name: amountOut Function: calculateSwap
Num: 10
Den: 9
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: amountOut_1, name: amountOut

Name: amountOut Function: calculateSwap
Num: 10
Den: 9
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountOut_1, name: amountOut

Name: amountOut Function: calculateSwap
Num: 10
Den: 9
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
RETURN amountOut_1
RETURN

Name: amountOut Function: calculateSwap
Num: 10
Den: 9
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Source address: u
[i]Type for TMP_99

Name: TMP_99 Function: calculateOutGivenIn
Num: 10
Den: 9
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_99
RETURN

Name: TMP_99 Function: calculateOutGivenIn
Num: 10
Den: 9
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] nativeReserve1 cleared
[i] foreignReserve1 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: pool1_1, name: pool1

Name: pool1 Function: calculateOutGivenIn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: pool1_1, name: pool1

Name: pool1 Function: calculateOutGivenIn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeReserve1_1, name: nativeReserve1

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: nativeReserve1, Num: 1
Globalname: nativeReserve1, contract_name: VaderRouter
Ssa_name: foreignReserve1_1, name: foreignReserve1

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: foreignReserve1, Num: 1
Globalname: foreignReserve1, contract_name: VaderRouter
End popogation
TUPLE_8(uint112,uint112,uint32) = HIGH_LEVEL_CALL, dest:pool1_1(IVaderPool), function:getReserves, arguments:[]  
High Call: getReserves
Running querryfc
Found: None
Written func info: IVaderPool, getReserves
Retvar: ('c', ['global:nativeAsset'], ['-1'], 18, "'u'", 'u')
{'global:_owner': 1, 'global:_tokenApprovals': 2, 'global:_owners': 3, 'swap:to': -999, 'mint:to': -998, 'mint:TMP_139': 4, 'global:this': 4, 'None:None': 5, 'mint:foreignAsset': 6, 'swap:_nativeAsset': 7, 'swap:_foreignAsset': 8, 'global:nativeAsset': 9, 'global:foreignAsset': 10, 'global:_ZERO_ADDRESS': 11, 'removeLiquidity:tokenA': -997, 'removeLiquidity:tokenB': -996, 'removeLiquidity:to': -995, 'swapExactTokensForTokens:path': -994, 'swapExactTokensForTokens:to': -993, 'swapTokensForExactTokens:path': -992, 'swapTokensForExactTokens:to': -991, 'calculateInGivenOut:path': -990, 'calculateOutGivenIn:path': -989}
Retvar: ('c', ['global:foreignAsset'], ['-1'], 6, "'u'", 'u')
{'global:_owner': 1, 'global:_tokenApprovals': 2, 'global:_owners': 3, 'swap:to': -999, 'mint:to': -998, 'mint:TMP_139': 4, 'global:this': 4, 'None:None': 5, 'mint:foreignAsset': 6, 'swap:_nativeAsset': 7, 'swap:_foreignAsset': 8, 'global:nativeAsset': 9, 'global:foreignAsset': 10, 'global:_ZERO_ADDRESS': 11, 'removeLiquidity:tokenA': -997, 'removeLiquidity:tokenB': -996, 'removeLiquidity:to': -995, 'swapExactTokensForTokens:path': -994, 'swapExactTokensForTokens:to': -993, 'swapTokensForExactTokens:path': -992, 'swapTokensForExactTokens:to': -991, 'calculateInGivenOut:path': -990, 'calculateOutGivenIn:path': -989}
[i]Type for TUPLE_8

Name: TUPLE_8 Function: calculateOutGivenIn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
nativeReserve1_1(uint256)= UNPACK TUPLE_8 index: 0 
([9], [-1], 18, "'u'", 'u', -1)
[i]Type for nativeReserve1

Name: nativeReserve1 Function: calculateOutGivenIn
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
foreignReserve1_1(uint256)= UNPACK TUPLE_8 index: 1 
([10], [-1], 6, "'u'", 'u', -1)
[i]Type for foreignReserve1

Name: foreignReserve1 Function: calculateOutGivenIn
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
[i] TMP_103 cleared
[i] TMP_104 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: foreignReserve1_1, name: foreignReserve1

Name: foreignReserve1 Function: calculateOutGivenIn
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: foreignReserve0_1, name: foreignReserve0

Name: foreignReserve0 Function: calculateOutGivenIn
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: nativeReserve1_1, name: nativeReserve1

Name: nativeReserve1 Function: calculateOutGivenIn
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: nativeReserve0_1, name: nativeReserve0

Name: nativeReserve0 Function: calculateOutGivenIn
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: calculateOutGivenIn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: calculateOutGivenIn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountIn, Num: 1
Globalname: amountIn, contract_name: VaderRouter
Ssa_name: foreignReserve1_1, name: foreignReserve1

Name: foreignReserve1 Function: calculateOutGivenIn
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: foreignReserve0_1, name: foreignReserve0

Name: foreignReserve0 Function: calculateOutGivenIn
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: nativeReserve1_1, name: nativeReserve1

Name: nativeReserve1 Function: calculateOutGivenIn
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: nativeReserve0_1, name: nativeReserve0

Name: nativeReserve0 Function: calculateOutGivenIn
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: calculateOutGivenIn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: calculateOutGivenIn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountIn, Num: 1
Globalname: amountIn, contract_name: VaderRouter
End popogation
TMP_103(uint256) = LIBRARY_CALL, dest:VaderMath, function:VaderMath.calculateSwap(uint256,uint256,uint256), arguments:['amountIn_1', 'nativeReserve1_1', 'foreignReserve1_1'] 
Found: calculateSwap

Name: amountIn_1 Function: calculateOutGivenIn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: nativeReserve1 Function: calculateOutGivenIn
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: foreignReserve1 Function: calculateOutGivenIn
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
High level cal param_cache
Param: 0
    num: []
    den: []
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [9]
    den: [-1]
    norm: 18
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [10]
    den: [-1]
    norm: 6
    link: None
    fields: []
    fintype: -1
New param cache [[[], [], 'u', None, [], -1, 'u', 'u'], [[9], [-1], 18, None, [], -1, 'u', "'u'"], [[10], [-1], 6, None, [], -1, 'u', "'u'"]]
Old param cache: [[[-1], [-1], 'u', None, [], -1, 'u'], [[-1], [-1], 'u', None, [], -1, 'u'], [[-1], [-1], 'u', None, [], -1, 'u']]
[[], [], 'u', None, [], -1, 'u', 'u']

Name: amountIn Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[9], [-1], 18, None, [], -1, 'u', "'u'"]

Name: reserveIn Function: calculateSwap
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
[[10], [-1], 6, None, [], -1, 'u', "'u'"]

Name: reserveOut Function: calculateSwap
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
calculateSwap(uint256,uint256,uint256)
Propogating All
Propogating All
reserveOut_1
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwap
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: reserveOut_1 Function: calculateSwap
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
reserveIn_1
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwap
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: reserveIn_1 Function: calculateSwap
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
amountIn_1
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
reserveIn_1
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwap
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: reserveIn_1 Function: calculateSwap
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
amountIn_1
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
numerator_1
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwap
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
denominator_1
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwap
Num: 9, 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
amountOut_1
Ssa_name: amountOut_1, name: amountOut

Name: amountOut Function: calculateSwap
Num: 10
Den: 9
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_26 cleared
[i] TMP_27 cleared
[i] numerator cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwap
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwap
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountIn, Num: 1
Globalname: amountIn, contract_name: VaderMath
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwap
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwap
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountIn, Num: 1
Globalname: amountIn, contract_name: VaderMath
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numerator, Num: 1
Globalname: numerator, contract_name: VaderMath
End popogation
TMP_26(uint256) = amountIn_1 (c)* reserveIn_1
lnorm: u rnorm: 18
Source address: u
[i]Type for TMP_26

Name: TMP_26 Function: calculateSwap
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_27(uint256) = TMP_26 (c)* reserveOut_1
lnorm: 18 rnorm: 6
Source address: u
Source address: u
Source address: u
[i]Type for TMP_27

Name: TMP_27 Function: calculateSwap
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
numerator_1(uint256) := TMP_27(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for numerator

Name: numerator Function: calculateSwap
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_28 cleared
[i] TMP_29 cleared
[i] denominator cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwap
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountIn, Num: 1
Globalname: amountIn, contract_name: VaderMath
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwap
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountIn, Num: 1
Globalname: amountIn, contract_name: VaderMath
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: denominator, Num: 1
Globalname: denominator, contract_name: VaderMath
End popogation
TMP_28(uint256) = amountIn_1 (c)+ reserveIn_1
Source address: u
[i]Type for TMP_28

Name: TMP_28 Function: calculateSwap
Num: 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_29(uint256) = INTERNAL_CALL, VaderMath.pow(uint256)(TMP_28)
New param cache [[[9], [-1], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[], [], 'u', None, [], -1, 'u']]
[[9], [-1], 'u', None, [], -1, 'u', 'u']

Name: a Function: pow
Num: 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
pow(uint256)
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a Function: pow
Num: 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: pow
Num: 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a_1 Function: pow
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: pow
Num: 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_28'])
Phi
[i]Type for a

Name: a Function: pow
Num: 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_48 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: pow
Num: 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: pow
Num: 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_48(uint256) = a_1 (c)* a_1
lnorm: u rnorm: u
Source address: u
Source address: u
Source address: u
[i]Type for TMP_48

Name: TMP_48 Function: pow
Num: 9, 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_48
RETURN

Name: TMP_48 Function: pow
Num: 9, 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a Function: pow
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: pow
Num: 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_28'])
Phi
[i]Type for a

Name: a Function: pow
Num: 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_48 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: pow
Num: 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: pow
Num: 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_48(uint256) = a_1 (c)* a_1
lnorm: u rnorm: u
Source address: u
Source address: u
Source address: u
[i]Type for TMP_48

Name: TMP_48 Function: pow
Num: 9, 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_48
RETURN

Name: TMP_48 Function: pow
Num: 9, 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Source address: u
[i]Type for TMP_29

Name: TMP_29 Function: calculateSwap
Num: 9, 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
denominator_1(uint256) := TMP_29(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for denominator

Name: denominator Function: calculateSwap
Num: 9, 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_30 cleared
[i] amountOut cleared
Propogating parameters and globals to SSA variables...
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwap
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwap
Num: 9, 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwap
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwap
Num: 9, 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountOut_1, name: amountOut

Name: amountOut Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: amountOut, Num: 1
Globalname: amountOut, contract_name: VaderMath
End popogation
TMP_30(uint256) = numerator_1 (c)/ denominator_1
lnorm: 24 rnorm: u
Source address: u
Source address: u
lnorm: 24 rnorm: u
Source address: u
10
9
[i]Type for TMP_30

Name: TMP_30 Function: calculateSwap
Num: 10
Den: 9
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
amountOut_1(uint256) := TMP_30(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for amountOut

Name: amountOut Function: calculateSwap
Num: 10
Den: 9
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: amountOut_1, name: amountOut

Name: amountOut Function: calculateSwap
Num: 10
Den: 9
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountOut_1, name: amountOut

Name: amountOut Function: calculateSwap
Num: 10
Den: 9
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
RETURN amountOut_1
RETURN

Name: amountOut Function: calculateSwap
Num: 10
Den: 9
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_26 cleared
[i] TMP_27 cleared
[i] numerator cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwap
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwap
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountIn, Num: 1
Globalname: amountIn, contract_name: VaderMath
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwap
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwap
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountIn, Num: 1
Globalname: amountIn, contract_name: VaderMath
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numerator, Num: 1
Globalname: numerator, contract_name: VaderMath
End popogation
TMP_26(uint256) = amountIn_1 (c)* reserveIn_1
lnorm: u rnorm: 18
Source address: u
[i]Type for TMP_26

Name: TMP_26 Function: calculateSwap
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_27(uint256) = TMP_26 (c)* reserveOut_1
lnorm: 18 rnorm: 6
Source address: u
Source address: u
Source address: u
[i]Type for TMP_27

Name: TMP_27 Function: calculateSwap
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
numerator_1(uint256) := TMP_27(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for numerator

Name: numerator Function: calculateSwap
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_28 cleared
[i] TMP_29 cleared
[i] denominator cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwap
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountIn, Num: 1
Globalname: amountIn, contract_name: VaderMath
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwap
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountIn, Num: 1
Globalname: amountIn, contract_name: VaderMath
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: denominator, Num: 1
Globalname: denominator, contract_name: VaderMath
End popogation
TMP_28(uint256) = amountIn_1 (c)+ reserveIn_1
Source address: u
[i]Type for TMP_28

Name: TMP_28 Function: calculateSwap
Num: 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_29(uint256) = INTERNAL_CALL, VaderMath.pow(uint256)(TMP_28)
New param cache [[[9], [-1], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[], [], 'u', None, [], -1, 'u']]
[[9], [-1], 'u', None, [], -1, 'u', 'u']

Name: a Function: pow
Num: 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
pow(uint256)
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a Function: pow
Num: 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: pow
Num: 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a_1 Function: pow
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: pow
Num: 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_28'])
Phi
[i]Type for a

Name: a Function: pow
Num: 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_48 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: pow
Num: 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: pow
Num: 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_48(uint256) = a_1 (c)* a_1
lnorm: u rnorm: u
Source address: u
Source address: u
Source address: u
[i]Type for TMP_48

Name: TMP_48 Function: pow
Num: 9, 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_48
RETURN

Name: TMP_48 Function: pow
Num: 9, 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a Function: pow
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: pow
Num: 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_28'])
Phi
[i]Type for a

Name: a Function: pow
Num: 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_48 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: pow
Num: 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: pow
Num: 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_48(uint256) = a_1 (c)* a_1
lnorm: u rnorm: u
Source address: u
Source address: u
Source address: u
[i]Type for TMP_48

Name: TMP_48 Function: pow
Num: 9, 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_48
RETURN

Name: TMP_48 Function: pow
Num: 9, 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Source address: u
[i]Type for TMP_29

Name: TMP_29 Function: calculateSwap
Num: 9, 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
denominator_1(uint256) := TMP_29(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for denominator

Name: denominator Function: calculateSwap
Num: 9, 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_30 cleared
[i] amountOut cleared
Propogating parameters and globals to SSA variables...
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwap
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwap
Num: 9, 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwap
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwap
Num: 9, 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountOut_1, name: amountOut

Name: amountOut Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: amountOut, Num: 1
Globalname: amountOut, contract_name: VaderMath
End popogation
TMP_30(uint256) = numerator_1 (c)/ denominator_1
lnorm: 24 rnorm: u
Source address: u
Source address: u
lnorm: 24 rnorm: u
Source address: u
10
9
[i]Type for TMP_30

Name: TMP_30 Function: calculateSwap
Num: 10
Den: 9
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
amountOut_1(uint256) := TMP_30(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for amountOut

Name: amountOut Function: calculateSwap
Num: 10
Den: 9
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: amountOut_1, name: amountOut

Name: amountOut Function: calculateSwap
Num: 10
Den: 9
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountOut_1, name: amountOut

Name: amountOut Function: calculateSwap
Num: 10
Den: 9
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
RETURN amountOut_1
RETURN

Name: amountOut Function: calculateSwap
Num: 10
Den: 9
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Source address: u
[i]Type for TMP_103

Name: TMP_103 Function: calculateOutGivenIn
Num: 10
Den: 9
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_104(uint256) = LIBRARY_CALL, dest:VaderMath, function:VaderMath.calculateSwap(uint256,uint256,uint256), arguments:['TMP_103', 'foreignReserve0_1', 'nativeReserve0_1'] 
Found: calculateSwap

Name: TMP_103 Function: calculateOutGivenIn
Num: 10
Den: 9
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef

Name: foreignReserve0 Function: calculateOutGivenIn
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: nativeReserve0 Function: calculateOutGivenIn
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
High level cal param_cache
Param: 0
    num: [10]
    den: [9]
    norm: 24
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [10]
    den: [-1]
    norm: 6
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [9]
    den: [-1]
    norm: 18
    link: None
    fields: []
    fintype: -1
New param cache [[[10], [9], 24, None, [], -1, 'u', 'u'], [[10], [-1], 6, None, [], -1, 'u', "'u'"], [[9], [-1], 18, None, [], -1, 'u', "'u'"]]
Old param cache: [[[-1], [-1], 'u', None, [], -1, 'u'], [[-1], [-1], 'u', None, [], -1, 'u'], [[-1], [-1], 'u', None, [], -1, 'u']]
[[10], [9], 24, None, [], -1, 'u', 'u']

Name: amountIn Function: calculateSwap
Num: 10
Den: 9
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
[[10], [-1], 6, None, [], -1, 'u', "'u'"]

Name: reserveIn Function: calculateSwap
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
[[9], [-1], 18, None, [], -1, 'u', "'u'"]

Name: reserveOut Function: calculateSwap
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
calculateSwap(uint256,uint256,uint256)
Propogating All
Propogating All
reserveOut_1
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwap
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: reserveOut_1 Function: calculateSwap
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
reserveIn_1
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwap
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: reserveIn_1 Function: calculateSwap
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
amountIn_1
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: calculateSwap
Num: 10
Den: 9
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
reserveIn_1
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwap
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: reserveIn_1 Function: calculateSwap
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
amountIn_1
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: calculateSwap
Num: 10
Den: 9
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: calculateSwap
Num: 10
Den: 9
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
numerator_1
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwap
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
denominator_1
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwap
Num: 9, 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
amountOut_1
Ssa_name: amountOut_1, name: amountOut

Name: amountOut Function: calculateSwap
Num: 10
Den: 9
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_26 cleared
[i] TMP_27 cleared
[i] numerator cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwap
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwap
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: calculateSwap
Num: 10
Den: 9
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwap
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwap
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: calculateSwap
Num: 10
Den: 9
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numerator, Num: 1
Globalname: numerator, contract_name: VaderMath
End popogation
TMP_26(uint256) = amountIn_1 (c)* reserveIn_1
lnorm: 24 rnorm: 6
Source address: u
Source address: u
Source address: u
[i]Type for TMP_26

Name: TMP_26 Function: calculateSwap
Num: 10, 10
Den: 9
Address: u
Norm: 30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_27(uint256) = TMP_26 (c)* reserveOut_1
lnorm: 30 rnorm: 18
Source address: u
Source address: u
Source address: u
[i]Type for TMP_27

Name: TMP_27 Function: calculateSwap
Num: 10, 10
Den: -1
Address: u
Norm: 48
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
numerator_1(uint256) := TMP_27(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for numerator

Name: numerator Function: calculateSwap
Num: 10, 10
Den: -1
Address: u
Norm: 48
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_28 cleared
[i] TMP_29 cleared
[i] denominator cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwap
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: calculateSwap
Num: 10
Den: 9
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwap
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: calculateSwap
Num: 10
Den: 9
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: denominator, Num: 1
Globalname: denominator, contract_name: VaderMath
End popogation
TMP_28(uint256) = amountIn_1 (c)+ reserveIn_1
10
-1
Error with TMP_28 in function calculateSwap
Error with: TMP_28 in function calculateSwap
[i]Type for TMP_28

Name: TMP_28 Function: calculateSwap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_29(uint256) = INTERNAL_CALL, VaderMath.pow(uint256)(TMP_28)
New param cache [[[-1], [-1], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[], [], 'u', None, [], -1, 'u']]
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: a Function: pow
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
pow(uint256)
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a Function: pow
Num: 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: pow
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a_1 Function: pow
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: pow
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_28'])
Phi
[i]Type for a

Name: a Function: pow
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_48 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: pow
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: pow
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_48(uint256) = a_1 (c)* a_1
lnorm: u rnorm: u
Source address: u
[i]Type for TMP_48

Name: TMP_48 Function: pow
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_48
RETURN

Name: TMP_48 Function: pow
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a Function: pow
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: pow
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_28'])
Phi
[i]Type for a

Name: a Function: pow
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_48 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: pow
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: pow
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_48(uint256) = a_1 (c)* a_1
lnorm: u rnorm: u
Source address: u
[i]Type for TMP_48

Name: TMP_48 Function: pow
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_48
RETURN

Name: TMP_48 Function: pow
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Source address: u
[i]Type for TMP_29

Name: TMP_29 Function: calculateSwap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
denominator_1(uint256) := TMP_29(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for denominator

Name: denominator Function: calculateSwap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_30 cleared
[i] amountOut cleared
Propogating parameters and globals to SSA variables...
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwap
Num: 10, 10
Den: -1
Address: u
Norm: 48
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwap
Num: 10, 10
Den: -1
Address: u
Norm: 48
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountOut_1, name: amountOut

Name: amountOut Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: amountOut, Num: 1
Globalname: amountOut, contract_name: VaderMath
End popogation
TMP_30(uint256) = numerator_1 (c)/ denominator_1
lnorm: 48 rnorm: u
Source address: u
lnorm: 48 rnorm: u
10
10
-1
[i]Type for TMP_30

Name: TMP_30 Function: calculateSwap
Num: 10, 10
Den: -1
Address: u
Norm: 48
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
amountOut_1(uint256) := TMP_30(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for amountOut

Name: amountOut Function: calculateSwap
Num: 10, 10
Den: -1
Address: u
Norm: 48
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: amountOut_1, name: amountOut

Name: amountOut Function: calculateSwap
Num: 10, 10
Den: -1
Address: u
Norm: 48
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountOut_1, name: amountOut

Name: amountOut Function: calculateSwap
Num: 10, 10
Den: -1
Address: u
Norm: 48
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
RETURN amountOut_1
RETURN

Name: amountOut Function: calculateSwap
Num: 10, 10
Den: -1
Address: u
Norm: 48
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_26 cleared
[i] TMP_27 cleared
[i] numerator cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwap
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwap
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: calculateSwap
Num: 10
Den: 9
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwap
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwap
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: calculateSwap
Num: 10
Den: 9
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numerator, Num: 1
Globalname: numerator, contract_name: VaderMath
End popogation
TMP_26(uint256) = amountIn_1 (c)* reserveIn_1
lnorm: 24 rnorm: 6
Source address: u
Source address: u
Source address: u
[i]Type for TMP_26

Name: TMP_26 Function: calculateSwap
Num: 10, 10
Den: 9
Address: u
Norm: 30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_27(uint256) = TMP_26 (c)* reserveOut_1
lnorm: 30 rnorm: 18
Source address: u
Source address: u
Source address: u
[i]Type for TMP_27

Name: TMP_27 Function: calculateSwap
Num: 10, 10
Den: -1
Address: u
Norm: 48
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
numerator_1(uint256) := TMP_27(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for numerator

Name: numerator Function: calculateSwap
Num: 10, 10
Den: -1
Address: u
Norm: 48
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_28 cleared
[i] TMP_29 cleared
[i] denominator cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwap
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: calculateSwap
Num: 10
Den: 9
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwap
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: calculateSwap
Num: 10
Den: 9
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: denominator, Num: 1
Globalname: denominator, contract_name: VaderMath
End popogation
TMP_28(uint256) = amountIn_1 (c)+ reserveIn_1
10
-1
[i]Type for TMP_28

Name: TMP_28 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_29(uint256) = INTERNAL_CALL, VaderMath.pow(uint256)(TMP_28)
New param cache [[[], [], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[], [], 'u', None, [], -1, 'u']]
[i]Type for TMP_29

Name: TMP_29 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
denominator_1(uint256) := TMP_29(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for denominator

Name: denominator Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_30 cleared
[i] amountOut cleared
Propogating parameters and globals to SSA variables...
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwap
Num: 10, 10
Den: -1
Address: u
Norm: 48
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: denominator, Num: 1
Globalname: denominator, contract_name: VaderMath
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwap
Num: 10, 10
Den: -1
Address: u
Norm: 48
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: denominator, Num: 1
Globalname: denominator, contract_name: VaderMath
Ssa_name: amountOut_1, name: amountOut

Name: amountOut Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: amountOut, Num: 1
Globalname: amountOut, contract_name: VaderMath
End popogation
TMP_30(uint256) = numerator_1 (c)/ denominator_1
lnorm: 48 rnorm: u
Source address: u
lnorm: 48 rnorm: u
[i]Type for TMP_30

Name: TMP_30 Function: calculateSwap
Num: 10, 10
Den: -1
Address: u
Norm: 48
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
amountOut_1(uint256) := TMP_30(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for amountOut

Name: amountOut Function: calculateSwap
Num: 10, 10
Den: -1
Address: u
Norm: 48
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: amountOut_1, name: amountOut

Name: amountOut Function: calculateSwap
Num: 10, 10
Den: -1
Address: u
Norm: 48
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountOut_1, name: amountOut

Name: amountOut Function: calculateSwap
Num: 10, 10
Den: -1
Address: u
Norm: 48
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
RETURN amountOut_1
RETURN

Name: amountOut Function: calculateSwap
Num: 10, 10
Den: -1
Address: u
Norm: 48
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Source address: u
[i]Type for TMP_104

Name: TMP_104 Function: calculateOutGivenIn
Num: 10, 10
Den: -1
Address: u
Norm: 48
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_104
RETURN

Name: TMP_104 Function: calculateOutGivenIn
Num: 10, 10
Den: -1
Address: u
Norm: 48
LF: None
Value: u
Fields: 
Finance Type: undef


factory_22(IVaderPoolFactory) := ϕ(['factory_13', 'factory_0', 'factory_16', 'factory_10', 'factory_19', 'factory_21', 'factory_15', 'factory_26', 'factory_1', 'factory_24', 'factory_7'])
REF_59 -> LENGTH path_1 (-> [])
TMP_95(bool) = REF_59 == 2
CONDITION TMP_95
TMP_96(address) = HIGH_LEVEL_CALL, dest:factory_22(IVaderPoolFactory), function:nativeAsset, arguments:[]  
factory_23(IVaderPoolFactory) := ϕ(['factory_13', 'factory_16', 'factory_10', 'factory_19', 'factory_21', 'factory_15', 'factory_26', 'factory_1', 'factory_24', 'factory_7', 'factory_22'])
nativeAsset_1(address) := TMP_96(address)
REF_69(address) -> path_1 (-> [])[0]
REF_70(address) -> path_1 (-> [])[1]
TMP_101(IVaderPool) = HIGH_LEVEL_CALL, dest:factory_22(IVaderPoolFactory), function:getPool, arguments:['REF_69', 'REF_70']  
factory_25(IVaderPoolFactory) := ϕ(['factory_13', 'factory_16', 'factory_10', 'factory_19', 'factory_21', 'factory_15', 'factory_26', 'factory_1', 'factory_24', 'factory_7'])
pool0_1(IVaderPool) := TMP_101(IVaderPool)
REF_62(address) -> path_1 (-> [])[0]
REF_63(address) -> path_1 (-> [])[1]
TMP_97(IVaderPool) = HIGH_LEVEL_CALL, dest:factory_23(IVaderPoolFactory), function:getPool, arguments:['REF_62', 'REF_63']  
factory_24(IVaderPoolFactory) := ϕ(['factory_13', 'factory_16', 'factory_10', 'factory_19', 'factory_21', 'factory_15', 'factory_26', 'factory_1', 'factory_24', 'factory_7', 'factory_23'])
pool_1(IVaderPool) := TMP_97(IVaderPool)
REF_72(address) -> path_1 (-> [])[1]
REF_73(address) -> path_1 (-> [])[2]
TMP_102(IVaderPool) = HIGH_LEVEL_CALL, dest:factory_25(IVaderPoolFactory), function:getPool, arguments:['REF_72', 'REF_73']  
factory_26(IVaderPoolFactory) := ϕ(['factory_13', 'factory_16', 'factory_10', 'factory_19', 'factory_21', 'factory_15', 'factory_26', 'factory_25', 'factory_1', 'factory_24', 'factory_7'])
pool1_1(IVaderPool) := TMP_102(IVaderPool)
TUPLE_6(uint112,uint112,uint32) = HIGH_LEVEL_CALL, dest:pool_1(IVaderPool), function:getReserves, arguments:[]  
nativeReserve_1(uint256)= UNPACK TUPLE_6 index: 0 
foreignReserve_1(uint256)= UNPACK TUPLE_6 index: 1 
REF_65(address) -> path_1 (-> [])[0]
TMP_98(bool) = REF_65 == nativeAsset_1
CONDITION TMP_98
TUPLE_7(uint112,uint112,uint32) = HIGH_LEVEL_CALL, dest:pool0_1(IVaderPool), function:getReserves, arguments:[]  
nativeReserve0_1(uint256)= UNPACK TUPLE_7 index: 0 
foreignReserve0_1(uint256)= UNPACK TUPLE_7 index: 1 
TMP_100(uint256) = LIBRARY_CALL, dest:VaderMath, function:VaderMath.calculateSwap(uint256,uint256,uint256), arguments:['amountIn_1', 'foreignReserve_1', 'nativeReserve_1'] 
RETURN TMP_100
TMP_99(uint256) = LIBRARY_CALL, dest:VaderMath, function:VaderMath.calculateSwap(uint256,uint256,uint256), arguments:['amountIn_1', 'nativeReserve_1', 'foreignReserve_1'] 
RETURN TMP_99
TUPLE_8(uint112,uint112,uint32) = HIGH_LEVEL_CALL, dest:pool1_1(IVaderPool), function:getReserves, arguments:[]  
nativeReserve1_1(uint256)= UNPACK TUPLE_8 index: 0 
foreignReserve1_1(uint256)= UNPACK TUPLE_8 index: 1 
TMP_103(uint256) = LIBRARY_CALL, dest:VaderMath, function:VaderMath.calculateSwap(uint256,uint256,uint256), arguments:['amountIn_1', 'nativeReserve1_1', 'foreignReserve1_1'] 
TMP_104(uint256) = LIBRARY_CALL, dest:VaderMath, function:VaderMath.calculateSwap(uint256,uint256,uint256), arguments:['TMP_103', 'foreignReserve0_1', 'nativeReserve0_1'] 
RETURN TMP_104


Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: factory_22, name: factory

Name: factory Function: calculateOutGivenIn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
factory_22(IVaderPoolFactory) := ϕ(['factory_13', 'factory_0', 'factory_16', 'factory_10', 'factory_19', 'factory_21', 'factory_15', 'factory_26', 'factory_1', 'factory_24', 'factory_7'])
Phi
[i]Type for factory

Name: factory Function: calculateOutGivenIn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_95 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: path_1 (-> []), name: path

Name: path_1 (-> []) Function: calculateOutGivenIn
Num: 
Den: 
Address: -989
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: path_1 (-> []), name: path

Name: path_1 (-> []) Function: calculateOutGivenIn
Num: 
Den: 
Address: -989
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
REF_59 -> LENGTH path_1 (-> [])
[i]Type for REF_59

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_95(bool) = REF_59 == 2
[i]Type for TMP_95

Name: TMP_95 Function: calculateOutGivenIn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_96 cleared
[i] nativeAsset cleared
Propogating parameters and globals to SSA variables...
Ssa_name: factory_22, name: factory

Name: factory Function: calculateOutGivenIn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: factory_22, name: factory

Name: factory Function: calculateOutGivenIn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeAsset_1, name: nativeAsset

Name: nativeAsset Function: calculateOutGivenIn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Name: nativeAsset, Num: 1
Globalname: nativeAsset, contract_name: VaderRouter
End popogation
Ssa_name: factory_23, name: factory

Name: factory Function: calculateOutGivenIn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_96(address) = HIGH_LEVEL_CALL, dest:factory_22(IVaderPoolFactory), function:nativeAsset, arguments:[]  
High Call: nativeAsset
Running querryfc
Found: None
Written func info: IVaderPoolFactory, nativeAsset
Retvar: ('c', ['global:nativeAsset'], ['-1'], 18, "'u'", 'u')
{'global:_owner': 1, 'global:_tokenApprovals': 2, 'global:_owners': 3, 'swap:to': -999, 'mint:to': -998, 'mint:TMP_139': 4, 'global:this': 4, 'None:None': 5, 'mint:foreignAsset': 6, 'swap:_nativeAsset': 7, 'swap:_foreignAsset': 8, 'global:nativeAsset': 9, 'global:foreignAsset': 10, 'global:_ZERO_ADDRESS': 11, 'removeLiquidity:tokenA': -997, 'removeLiquidity:tokenB': -996, 'removeLiquidity:to': -995, 'swapExactTokensForTokens:path': -994, 'swapExactTokensForTokens:to': -993, 'swapTokensForExactTokens:path': -992, 'swapTokensForExactTokens:to': -991, 'calculateInGivenOut:path': -990, 'calculateOutGivenIn:path': -989}
([9], [-1], 18, "'u'", 'u', -1)
[i]Type for TMP_96

Name: TMP_96 Function: calculateOutGivenIn
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
factory_23(IVaderPoolFactory) := ϕ(['factory_13', 'factory_16', 'factory_10', 'factory_19', 'factory_21', 'factory_15', 'factory_26', 'factory_1', 'factory_24', 'factory_7', 'factory_22'])
Phi
[i]Type for factory

Name: factory Function: calculateOutGivenIn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
nativeAsset_1(address) := TMP_96(address)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for nativeAsset

Name: nativeAsset Function: calculateOutGivenIn
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
[i] TMP_101 cleared
[i] pool0 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: path_1 (-> []), name: path

Name: path_1 (-> []) Function: calculateOutGivenIn
Num: 
Den: 
Address: -989
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: factory_22, name: factory

Name: factory Function: calculateOutGivenIn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: path_1 (-> []), name: path

Name: path_1 (-> []) Function: calculateOutGivenIn
Num: 
Den: 
Address: -989
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: factory_22, name: factory

Name: factory Function: calculateOutGivenIn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: pool0_1, name: pool0

Name: pool0 Function: calculateOutGivenIn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pool0, Num: 1
Globalname: pool0, contract_name: VaderRouter
End popogation
Ssa_name: factory_25, name: factory

Name: factory Function: calculateOutGivenIn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_69(address) -> path_1 (-> [])[0]
INDEX
REFERENCE LEFT VALUE PROPAGATION
Source address: -989
[i]Type for REF_69

Name: path_1 (-> []) Function: calculateOutGivenIn
Num: 
Den: 
Address: -989
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_70(address) -> path_1 (-> [])[1]
INDEX
REFERENCE LEFT VALUE PROPAGATION
Source address: -989
[i]Type for REF_70

Name: path_1 (-> []) Function: calculateOutGivenIn
Num: 
Den: 
Address: -989
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_101(IVaderPool) = HIGH_LEVEL_CALL, dest:factory_22(IVaderPoolFactory), function:getPool, arguments:['REF_69', 'REF_70']  
High Call: getPool
Running querryfc
Found: None
Written func info: IVaderPoolFactory, getPool
[i]Type for TMP_101

Name: TMP_101 Function: calculateOutGivenIn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
factory_25(IVaderPoolFactory) := ϕ(['factory_13', 'factory_16', 'factory_10', 'factory_19', 'factory_21', 'factory_15', 'factory_26', 'factory_1', 'factory_24', 'factory_7'])
Phi
[i]Type for factory

Name: factory Function: calculateOutGivenIn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
pool0_1(IVaderPool) := TMP_101(IVaderPool)
asgn
Finance type key: (-1, -1)
[i]Type for pool0

Name: pool0 Function: calculateOutGivenIn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_97 cleared
[i] pool cleared
Propogating parameters and globals to SSA variables...
Ssa_name: path_1 (-> []), name: path

Name: path_1 (-> []) Function: calculateOutGivenIn
Num: 
Den: 
Address: -989
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: factory_23, name: factory

Name: factory Function: calculateOutGivenIn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: factory_23, name: factory

Name: factory Function: calculateOutGivenIn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: path_1 (-> []), name: path

Name: path_1 (-> []) Function: calculateOutGivenIn
Num: 
Den: 
Address: -989
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: pool_1, name: pool

Name: pool Function: calculateOutGivenIn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pool, Num: 1
Globalname: pool, contract_name: VaderRouter
End popogation
Ssa_name: factory_24, name: factory

Name: factory Function: calculateOutGivenIn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_62(address) -> path_1 (-> [])[0]
INDEX
REFERENCE LEFT VALUE PROPAGATION
Source address: -989
[i]Type for REF_62

Name: path_1 (-> []) Function: calculateOutGivenIn
Num: 
Den: 
Address: -989
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_63(address) -> path_1 (-> [])[1]
INDEX
REFERENCE LEFT VALUE PROPAGATION
Source address: -989
[i]Type for REF_63

Name: path_1 (-> []) Function: calculateOutGivenIn
Num: 
Den: 
Address: -989
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_97(IVaderPool) = HIGH_LEVEL_CALL, dest:factory_23(IVaderPoolFactory), function:getPool, arguments:['REF_62', 'REF_63']  
High Call: getPool
Running querryfc
Found: None
Written func info: IVaderPoolFactory, getPool
[i]Type for TMP_97

Name: TMP_97 Function: calculateOutGivenIn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
factory_24(IVaderPoolFactory) := ϕ(['factory_13', 'factory_16', 'factory_10', 'factory_19', 'factory_21', 'factory_15', 'factory_26', 'factory_1', 'factory_24', 'factory_7', 'factory_23'])
Phi
[i]Type for factory

Name: factory Function: calculateOutGivenIn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
pool_1(IVaderPool) := TMP_97(IVaderPool)
asgn
Finance type key: (-1, -1)
[i]Type for pool

Name: pool Function: calculateOutGivenIn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_102 cleared
[i] pool1 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: path_1 (-> []), name: path

Name: path_1 (-> []) Function: calculateOutGivenIn
Num: 
Den: 
Address: -989
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: factory_25, name: factory

Name: factory Function: calculateOutGivenIn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: factory_25, name: factory

Name: factory Function: calculateOutGivenIn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: path_1 (-> []), name: path

Name: path_1 (-> []) Function: calculateOutGivenIn
Num: 
Den: 
Address: -989
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: pool1_1, name: pool1

Name: pool1 Function: calculateOutGivenIn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pool1, Num: 1
Globalname: pool1, contract_name: VaderRouter
End popogation
Ssa_name: factory_26, name: factory

Name: factory Function: calculateOutGivenIn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_72(address) -> path_1 (-> [])[1]
INDEX
REFERENCE LEFT VALUE PROPAGATION
Source address: -989
[i]Type for REF_72

Name: path_1 (-> []) Function: calculateOutGivenIn
Num: 
Den: 
Address: -989
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_73(address) -> path_1 (-> [])[2]
INDEX
REFERENCE LEFT VALUE PROPAGATION
Source address: -989
[i]Type for REF_73

Name: path_1 (-> []) Function: calculateOutGivenIn
Num: 
Den: 
Address: -989
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_102(IVaderPool) = HIGH_LEVEL_CALL, dest:factory_25(IVaderPoolFactory), function:getPool, arguments:['REF_72', 'REF_73']  
High Call: getPool
Running querryfc
Found: None
Written func info: IVaderPoolFactory, getPool
[i]Type for TMP_102

Name: TMP_102 Function: calculateOutGivenIn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
factory_26(IVaderPoolFactory) := ϕ(['factory_13', 'factory_16', 'factory_10', 'factory_19', 'factory_21', 'factory_15', 'factory_26', 'factory_25', 'factory_1', 'factory_24', 'factory_7'])
Phi
[i]Type for factory

Name: factory Function: calculateOutGivenIn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
pool1_1(IVaderPool) := TMP_102(IVaderPool)
asgn
Finance type key: (-1, -1)
[i]Type for pool1

Name: pool1 Function: calculateOutGivenIn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] nativeReserve cleared
[i] foreignReserve cleared
Propogating parameters and globals to SSA variables...
Ssa_name: pool_1, name: pool

Name: pool Function: calculateOutGivenIn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pool, Num: 1
Globalname: pool, contract_name: VaderRouter
Ssa_name: pool_1, name: pool

Name: pool Function: calculateOutGivenIn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pool, Num: 1
Globalname: pool, contract_name: VaderRouter
Ssa_name: nativeReserve_1, name: nativeReserve

Name: nativeReserve Function: calculateOutGivenIn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Name: nativeReserve, Num: 1
Globalname: nativeReserve, contract_name: VaderRouter
Ssa_name: foreignReserve_1, name: foreignReserve

Name: foreignReserve Function: calculateOutGivenIn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Name: foreignReserve, Num: 1
Globalname: foreignReserve, contract_name: VaderRouter
End popogation
TUPLE_6(uint112,uint112,uint32) = HIGH_LEVEL_CALL, dest:pool_1(IVaderPool), function:getReserves, arguments:[]  
High Call: getReserves
Running querryfc
Found: None
Written func info: IVaderPool, getReserves
Retvar: ('c', ['global:nativeAsset'], ['-1'], 18, "'u'", 'u')
{'global:_owner': 1, 'global:_tokenApprovals': 2, 'global:_owners': 3, 'swap:to': -999, 'mint:to': -998, 'mint:TMP_139': 4, 'global:this': 4, 'None:None': 5, 'mint:foreignAsset': 6, 'swap:_nativeAsset': 7, 'swap:_foreignAsset': 8, 'global:nativeAsset': 9, 'global:foreignAsset': 10, 'global:_ZERO_ADDRESS': 11, 'removeLiquidity:tokenA': -997, 'removeLiquidity:tokenB': -996, 'removeLiquidity:to': -995, 'swapExactTokensForTokens:path': -994, 'swapExactTokensForTokens:to': -993, 'swapTokensForExactTokens:path': -992, 'swapTokensForExactTokens:to': -991, 'calculateInGivenOut:path': -990, 'calculateOutGivenIn:path': -989}
Retvar: ('c', ['global:foreignAsset'], ['-1'], 6, "'u'", 'u')
{'global:_owner': 1, 'global:_tokenApprovals': 2, 'global:_owners': 3, 'swap:to': -999, 'mint:to': -998, 'mint:TMP_139': 4, 'global:this': 4, 'None:None': 5, 'mint:foreignAsset': 6, 'swap:_nativeAsset': 7, 'swap:_foreignAsset': 8, 'global:nativeAsset': 9, 'global:foreignAsset': 10, 'global:_ZERO_ADDRESS': 11, 'removeLiquidity:tokenA': -997, 'removeLiquidity:tokenB': -996, 'removeLiquidity:to': -995, 'swapExactTokensForTokens:path': -994, 'swapExactTokensForTokens:to': -993, 'swapTokensForExactTokens:path': -992, 'swapTokensForExactTokens:to': -991, 'calculateInGivenOut:path': -990, 'calculateOutGivenIn:path': -989}
[i]Type for TUPLE_6

Name: TUPLE_6 Function: calculateOutGivenIn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
nativeReserve_1(uint256)= UNPACK TUPLE_6 index: 0 
([9], [-1], 18, "'u'", 'u', -1)
[i]Type for nativeReserve

Name: nativeReserve Function: calculateOutGivenIn
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
foreignReserve_1(uint256)= UNPACK TUPLE_6 index: 1 
([10], [-1], 6, "'u'", 'u', -1)
[i]Type for foreignReserve

Name: foreignReserve Function: calculateOutGivenIn
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
[i] TMP_98 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: path_1 (-> []), name: path

Name: path_1 (-> []) Function: calculateOutGivenIn
Num: 
Den: 
Address: -989
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeAsset_1, name: nativeAsset

Name: nativeAsset Function: calculateOutGivenIn
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: path_1 (-> []), name: path

Name: path_1 (-> []) Function: calculateOutGivenIn
Num: 
Den: 
Address: -989
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeAsset_1, name: nativeAsset

Name: nativeAsset Function: calculateOutGivenIn
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
End popogation
REF_65(address) -> path_1 (-> [])[0]
INDEX
REFERENCE LEFT VALUE PROPAGATION
Source address: -989
[i]Type for REF_65

Name: path_1 (-> []) Function: calculateOutGivenIn
Num: 
Den: 
Address: -989
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_98(bool) = REF_65 == nativeAsset_1
[i]Type for TMP_98

Name: TMP_98 Function: calculateOutGivenIn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] nativeReserve0 cleared
[i] foreignReserve0 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: pool0_1, name: pool0

Name: pool0 Function: calculateOutGivenIn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pool0, Num: 1
Globalname: pool0, contract_name: VaderRouter
Ssa_name: pool0_1, name: pool0

Name: pool0 Function: calculateOutGivenIn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pool0, Num: 1
Globalname: pool0, contract_name: VaderRouter
Ssa_name: nativeReserve0_1, name: nativeReserve0

Name: nativeReserve0 Function: calculateOutGivenIn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Name: nativeReserve0, Num: 1
Globalname: nativeReserve0, contract_name: VaderRouter
Ssa_name: foreignReserve0_1, name: foreignReserve0

Name: foreignReserve0 Function: calculateOutGivenIn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Name: foreignReserve0, Num: 1
Globalname: foreignReserve0, contract_name: VaderRouter
End popogation
TUPLE_7(uint112,uint112,uint32) = HIGH_LEVEL_CALL, dest:pool0_1(IVaderPool), function:getReserves, arguments:[]  
High Call: getReserves
Running querryfc
Found: None
Written func info: IVaderPool, getReserves
Retvar: ('c', ['global:nativeAsset'], ['-1'], 18, "'u'", 'u')
{'global:_owner': 1, 'global:_tokenApprovals': 2, 'global:_owners': 3, 'swap:to': -999, 'mint:to': -998, 'mint:TMP_139': 4, 'global:this': 4, 'None:None': 5, 'mint:foreignAsset': 6, 'swap:_nativeAsset': 7, 'swap:_foreignAsset': 8, 'global:nativeAsset': 9, 'global:foreignAsset': 10, 'global:_ZERO_ADDRESS': 11, 'removeLiquidity:tokenA': -997, 'removeLiquidity:tokenB': -996, 'removeLiquidity:to': -995, 'swapExactTokensForTokens:path': -994, 'swapExactTokensForTokens:to': -993, 'swapTokensForExactTokens:path': -992, 'swapTokensForExactTokens:to': -991, 'calculateInGivenOut:path': -990, 'calculateOutGivenIn:path': -989}
Retvar: ('c', ['global:foreignAsset'], ['-1'], 6, "'u'", 'u')
{'global:_owner': 1, 'global:_tokenApprovals': 2, 'global:_owners': 3, 'swap:to': -999, 'mint:to': -998, 'mint:TMP_139': 4, 'global:this': 4, 'None:None': 5, 'mint:foreignAsset': 6, 'swap:_nativeAsset': 7, 'swap:_foreignAsset': 8, 'global:nativeAsset': 9, 'global:foreignAsset': 10, 'global:_ZERO_ADDRESS': 11, 'removeLiquidity:tokenA': -997, 'removeLiquidity:tokenB': -996, 'removeLiquidity:to': -995, 'swapExactTokensForTokens:path': -994, 'swapExactTokensForTokens:to': -993, 'swapTokensForExactTokens:path': -992, 'swapTokensForExactTokens:to': -991, 'calculateInGivenOut:path': -990, 'calculateOutGivenIn:path': -989}
[i]Type for TUPLE_7

Name: TUPLE_7 Function: calculateOutGivenIn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
nativeReserve0_1(uint256)= UNPACK TUPLE_7 index: 0 
([9], [-1], 18, "'u'", 'u', -1)
[i]Type for nativeReserve0

Name: nativeReserve0 Function: calculateOutGivenIn
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
foreignReserve0_1(uint256)= UNPACK TUPLE_7 index: 1 
([10], [-1], 6, "'u'", 'u', -1)
[i]Type for foreignReserve0

Name: foreignReserve0 Function: calculateOutGivenIn
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
[i] TMP_100 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: foreignReserve_1, name: foreignReserve

Name: foreignReserve Function: calculateOutGivenIn
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: nativeReserve_1, name: nativeReserve

Name: nativeReserve Function: calculateOutGivenIn
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: calculateOutGivenIn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: calculateOutGivenIn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountIn, Num: 1
Globalname: amountIn, contract_name: VaderRouter
Ssa_name: foreignReserve_1, name: foreignReserve

Name: foreignReserve Function: calculateOutGivenIn
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: nativeReserve_1, name: nativeReserve

Name: nativeReserve Function: calculateOutGivenIn
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: calculateOutGivenIn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: calculateOutGivenIn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountIn, Num: 1
Globalname: amountIn, contract_name: VaderRouter
End popogation
TMP_100(uint256) = LIBRARY_CALL, dest:VaderMath, function:VaderMath.calculateSwap(uint256,uint256,uint256), arguments:['amountIn_1', 'foreignReserve_1', 'nativeReserve_1'] 
Found: calculateSwap

Name: amountIn_1 Function: calculateOutGivenIn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: foreignReserve Function: calculateOutGivenIn
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: nativeReserve Function: calculateOutGivenIn
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
High level cal param_cache
Param: 0
    num: []
    den: []
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [10]
    den: [-1]
    norm: 6
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [9]
    den: [-1]
    norm: 18
    link: None
    fields: []
    fintype: -1
New param cache [[[], [], 'u', None, [], -1, 'u', 'u'], [[10], [-1], 6, None, [], -1, 'u', "'u'"], [[9], [-1], 18, None, [], -1, 'u', "'u'"]]
Old param cache: [[[-1], [-1], 'u', None, [], -1, 'u'], [[-1], [-1], 'u', None, [], -1, 'u'], [[-1], [-1], 'u', None, [], -1, 'u']]
[[], [], 'u', None, [], -1, 'u', 'u']

Name: amountIn Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[10], [-1], 6, None, [], -1, 'u', "'u'"]

Name: reserveIn Function: calculateSwap
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
[[9], [-1], 18, None, [], -1, 'u', "'u'"]

Name: reserveOut Function: calculateSwap
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
calculateSwap(uint256,uint256,uint256)
Propogating All
Propogating All
reserveOut_1
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwap
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: reserveOut_1 Function: calculateSwap
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
reserveIn_1
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwap
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: reserveIn_1 Function: calculateSwap
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
amountIn_1
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: calculateSwap
Num: 10
Den: 9
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
reserveIn_1
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwap
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: reserveIn_1 Function: calculateSwap
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
amountIn_1
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
numerator_1
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwap
Num: 10, 10
Den: -1
Address: u
Norm: 48
LF: None
Value: u
Fields: 
Finance Type: undef
denominator_1
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
amountOut_1
Ssa_name: amountOut_1, name: amountOut

Name: amountOut Function: calculateSwap
Num: 10, 10
Den: -1
Address: u
Norm: 48
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_26 cleared
[i] TMP_27 cleared
[i] numerator cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwap
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwap
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountIn, Num: 1
Globalname: amountIn, contract_name: VaderMath
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwap
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwap
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountIn, Num: 1
Globalname: amountIn, contract_name: VaderMath
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numerator, Num: 1
Globalname: numerator, contract_name: VaderMath
End popogation
TMP_26(uint256) = amountIn_1 (c)* reserveIn_1
lnorm: u rnorm: 6
Source address: u
[i]Type for TMP_26

Name: TMP_26 Function: calculateSwap
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_27(uint256) = TMP_26 (c)* reserveOut_1
lnorm: 6 rnorm: 18
Source address: u
Source address: u
Source address: u
[i]Type for TMP_27

Name: TMP_27 Function: calculateSwap
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
numerator_1(uint256) := TMP_27(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for numerator

Name: numerator Function: calculateSwap
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_28 cleared
[i] TMP_29 cleared
[i] denominator cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwap
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountIn, Num: 1
Globalname: amountIn, contract_name: VaderMath
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwap
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountIn, Num: 1
Globalname: amountIn, contract_name: VaderMath
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: denominator, Num: 1
Globalname: denominator, contract_name: VaderMath
End popogation
TMP_28(uint256) = amountIn_1 (c)+ reserveIn_1
Source address: u
[i]Type for TMP_28

Name: TMP_28 Function: calculateSwap
Num: 10
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_29(uint256) = INTERNAL_CALL, VaderMath.pow(uint256)(TMP_28)
New param cache [[[10], [-1], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[], [], 'u', None, [], -1, 'u']]
[[10], [-1], 'u', None, [], -1, 'u', 'u']

Name: a Function: pow
Num: 10
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
pow(uint256)
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a Function: pow
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: pow
Num: 10
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a_1 Function: pow
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: pow
Num: 10
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_28'])
Phi
[i]Type for a

Name: a Function: pow
Num: 10
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_48 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: pow
Num: 10
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: pow
Num: 10
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_48(uint256) = a_1 (c)* a_1
lnorm: u rnorm: u
Source address: u
Source address: u
Source address: u
[i]Type for TMP_48

Name: TMP_48 Function: pow
Num: 10, 10
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_48
RETURN

Name: TMP_48 Function: pow
Num: 10, 10
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a Function: pow
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: pow
Num: 10
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_28'])
Phi
[i]Type for a

Name: a Function: pow
Num: 10
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_48 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: pow
Num: 10
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: pow
Num: 10
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_48(uint256) = a_1 (c)* a_1
lnorm: u rnorm: u
Source address: u
Source address: u
Source address: u
[i]Type for TMP_48

Name: TMP_48 Function: pow
Num: 10, 10
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_48
RETURN

Name: TMP_48 Function: pow
Num: 10, 10
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Source address: u
[i]Type for TMP_29

Name: TMP_29 Function: calculateSwap
Num: 10, 10
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
denominator_1(uint256) := TMP_29(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for denominator

Name: denominator Function: calculateSwap
Num: 10, 10
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_30 cleared
[i] amountOut cleared
Propogating parameters and globals to SSA variables...
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwap
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwap
Num: 10, 10
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwap
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwap
Num: 10, 10
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountOut_1, name: amountOut

Name: amountOut Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: amountOut, Num: 1
Globalname: amountOut, contract_name: VaderMath
End popogation
TMP_30(uint256) = numerator_1 (c)/ denominator_1
lnorm: 24 rnorm: u
Source address: u
Source address: u
lnorm: 24 rnorm: u
Source address: u
9
10
[i]Type for TMP_30

Name: TMP_30 Function: calculateSwap
Num: 9
Den: 10
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
amountOut_1(uint256) := TMP_30(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for amountOut

Name: amountOut Function: calculateSwap
Num: 9
Den: 10
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: amountOut_1, name: amountOut

Name: amountOut Function: calculateSwap
Num: 9
Den: 10
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountOut_1, name: amountOut

Name: amountOut Function: calculateSwap
Num: 9
Den: 10
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
RETURN amountOut_1
RETURN

Name: amountOut Function: calculateSwap
Num: 9
Den: 10
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_26 cleared
[i] TMP_27 cleared
[i] numerator cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwap
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwap
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountIn, Num: 1
Globalname: amountIn, contract_name: VaderMath
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwap
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwap
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountIn, Num: 1
Globalname: amountIn, contract_name: VaderMath
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numerator, Num: 1
Globalname: numerator, contract_name: VaderMath
End popogation
TMP_26(uint256) = amountIn_1 (c)* reserveIn_1
lnorm: u rnorm: 6
Source address: u
[i]Type for TMP_26

Name: TMP_26 Function: calculateSwap
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_27(uint256) = TMP_26 (c)* reserveOut_1
lnorm: 6 rnorm: 18
Source address: u
Source address: u
Source address: u
[i]Type for TMP_27

Name: TMP_27 Function: calculateSwap
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
numerator_1(uint256) := TMP_27(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for numerator

Name: numerator Function: calculateSwap
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_28 cleared
[i] TMP_29 cleared
[i] denominator cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwap
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountIn, Num: 1
Globalname: amountIn, contract_name: VaderMath
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwap
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountIn, Num: 1
Globalname: amountIn, contract_name: VaderMath
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: denominator, Num: 1
Globalname: denominator, contract_name: VaderMath
End popogation
TMP_28(uint256) = amountIn_1 (c)+ reserveIn_1
Source address: u
[i]Type for TMP_28

Name: TMP_28 Function: calculateSwap
Num: 10
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_29(uint256) = INTERNAL_CALL, VaderMath.pow(uint256)(TMP_28)
New param cache [[[10], [-1], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[], [], 'u', None, [], -1, 'u']]
[[10], [-1], 'u', None, [], -1, 'u', 'u']

Name: a Function: pow
Num: 10
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
pow(uint256)
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a Function: pow
Num: 10
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: pow
Num: 10
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a_1 Function: pow
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: pow
Num: 10
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_28'])
Phi
[i]Type for a

Name: a Function: pow
Num: 10
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_48 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: pow
Num: 10
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: pow
Num: 10
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_48(uint256) = a_1 (c)* a_1
lnorm: u rnorm: u
Source address: u
Source address: u
Source address: u
[i]Type for TMP_48

Name: TMP_48 Function: pow
Num: 10, 10
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_48
RETURN

Name: TMP_48 Function: pow
Num: 10, 10
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a Function: pow
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: pow
Num: 10
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_28'])
Phi
[i]Type for a

Name: a Function: pow
Num: 10
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_48 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: pow
Num: 10
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: pow
Num: 10
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_48(uint256) = a_1 (c)* a_1
lnorm: u rnorm: u
Source address: u
Source address: u
Source address: u
[i]Type for TMP_48

Name: TMP_48 Function: pow
Num: 10, 10
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_48
RETURN

Name: TMP_48 Function: pow
Num: 10, 10
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Source address: u
[i]Type for TMP_29

Name: TMP_29 Function: calculateSwap
Num: 10, 10
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
denominator_1(uint256) := TMP_29(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for denominator

Name: denominator Function: calculateSwap
Num: 10, 10
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_30 cleared
[i] amountOut cleared
Propogating parameters and globals to SSA variables...
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwap
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwap
Num: 10, 10
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwap
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwap
Num: 10, 10
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountOut_1, name: amountOut

Name: amountOut Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: amountOut, Num: 1
Globalname: amountOut, contract_name: VaderMath
End popogation
TMP_30(uint256) = numerator_1 (c)/ denominator_1
lnorm: 24 rnorm: u
Source address: u
Source address: u
lnorm: 24 rnorm: u
Source address: u
9
10
[i]Type for TMP_30

Name: TMP_30 Function: calculateSwap
Num: 9
Den: 10
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
amountOut_1(uint256) := TMP_30(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for amountOut

Name: amountOut Function: calculateSwap
Num: 9
Den: 10
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: amountOut_1, name: amountOut

Name: amountOut Function: calculateSwap
Num: 9
Den: 10
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountOut_1, name: amountOut

Name: amountOut Function: calculateSwap
Num: 9
Den: 10
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
RETURN amountOut_1
RETURN

Name: amountOut Function: calculateSwap
Num: 9
Den: 10
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Source address: u
[i]Type for TMP_100

Name: TMP_100 Function: calculateOutGivenIn
Num: 9
Den: 10
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_100
RETURN

Name: TMP_100 Function: calculateOutGivenIn
Num: 9
Den: 10
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
[i] TMP_99 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: foreignReserve_1, name: foreignReserve

Name: foreignReserve Function: calculateOutGivenIn
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: nativeReserve_1, name: nativeReserve

Name: nativeReserve Function: calculateOutGivenIn
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: calculateOutGivenIn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: calculateOutGivenIn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountIn, Num: 1
Globalname: amountIn, contract_name: VaderRouter
Ssa_name: foreignReserve_1, name: foreignReserve

Name: foreignReserve Function: calculateOutGivenIn
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: nativeReserve_1, name: nativeReserve

Name: nativeReserve Function: calculateOutGivenIn
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: calculateOutGivenIn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: calculateOutGivenIn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountIn, Num: 1
Globalname: amountIn, contract_name: VaderRouter
End popogation
TMP_99(uint256) = LIBRARY_CALL, dest:VaderMath, function:VaderMath.calculateSwap(uint256,uint256,uint256), arguments:['amountIn_1', 'nativeReserve_1', 'foreignReserve_1'] 
Found: calculateSwap

Name: amountIn_1 Function: calculateOutGivenIn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: nativeReserve Function: calculateOutGivenIn
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: foreignReserve Function: calculateOutGivenIn
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
High level cal param_cache
Param: 0
    num: []
    den: []
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [9]
    den: [-1]
    norm: 18
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [10]
    den: [-1]
    norm: 6
    link: None
    fields: []
    fintype: -1
New param cache [[[], [], 'u', None, [], -1, 'u', 'u'], [[9], [-1], 18, None, [], -1, 'u', "'u'"], [[10], [-1], 6, None, [], -1, 'u', "'u'"]]
Old param cache: [[[-1], [-1], 'u', None, [], -1, 'u'], [[-1], [-1], 'u', None, [], -1, 'u'], [[-1], [-1], 'u', None, [], -1, 'u']]
[[], [], 'u', None, [], -1, 'u', 'u']

Name: amountIn Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[9], [-1], 18, None, [], -1, 'u', "'u'"]

Name: reserveIn Function: calculateSwap
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
[[10], [-1], 6, None, [], -1, 'u', "'u'"]

Name: reserveOut Function: calculateSwap
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
calculateSwap(uint256,uint256,uint256)
Propogating All
Propogating All
reserveOut_1
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwap
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: reserveOut_1 Function: calculateSwap
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
reserveIn_1
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwap
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: reserveIn_1 Function: calculateSwap
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
amountIn_1
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
reserveIn_1
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwap
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: reserveIn_1 Function: calculateSwap
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
amountIn_1
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
numerator_1
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwap
Num: 10, 9
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
denominator_1
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwap
Num: 10, 10
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
amountOut_1
Ssa_name: amountOut_1, name: amountOut

Name: amountOut Function: calculateSwap
Num: 9
Den: 10
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_26 cleared
[i] TMP_27 cleared
[i] numerator cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwap
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwap
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountIn, Num: 1
Globalname: amountIn, contract_name: VaderMath
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwap
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwap
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountIn, Num: 1
Globalname: amountIn, contract_name: VaderMath
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numerator, Num: 1
Globalname: numerator, contract_name: VaderMath
End popogation
TMP_26(uint256) = amountIn_1 (c)* reserveIn_1
lnorm: u rnorm: 18
Source address: u
[i]Type for TMP_26

Name: TMP_26 Function: calculateSwap
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_27(uint256) = TMP_26 (c)* reserveOut_1
lnorm: 18 rnorm: 6
Source address: u
Source address: u
Source address: u
[i]Type for TMP_27

Name: TMP_27 Function: calculateSwap
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
numerator_1(uint256) := TMP_27(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for numerator

Name: numerator Function: calculateSwap
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_28 cleared
[i] TMP_29 cleared
[i] denominator cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwap
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountIn, Num: 1
Globalname: amountIn, contract_name: VaderMath
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwap
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountIn, Num: 1
Globalname: amountIn, contract_name: VaderMath
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: denominator, Num: 1
Globalname: denominator, contract_name: VaderMath
End popogation
TMP_28(uint256) = amountIn_1 (c)+ reserveIn_1
Source address: u
[i]Type for TMP_28

Name: TMP_28 Function: calculateSwap
Num: 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_29(uint256) = INTERNAL_CALL, VaderMath.pow(uint256)(TMP_28)
New param cache [[[9], [-1], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[], [], 'u', None, [], -1, 'u']]
[[9], [-1], 'u', None, [], -1, 'u', 'u']

Name: a Function: pow
Num: 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
pow(uint256)
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a Function: pow
Num: 10
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: pow
Num: 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a_1 Function: pow
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: pow
Num: 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_28'])
Phi
[i]Type for a

Name: a Function: pow
Num: 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_48 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: pow
Num: 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: pow
Num: 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_48(uint256) = a_1 (c)* a_1
lnorm: u rnorm: u
Source address: u
Source address: u
Source address: u
[i]Type for TMP_48

Name: TMP_48 Function: pow
Num: 9, 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_48
RETURN

Name: TMP_48 Function: pow
Num: 9, 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a Function: pow
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: pow
Num: 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_28'])
Phi
[i]Type for a

Name: a Function: pow
Num: 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_48 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: pow
Num: 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: pow
Num: 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_48(uint256) = a_1 (c)* a_1
lnorm: u rnorm: u
Source address: u
Source address: u
Source address: u
[i]Type for TMP_48

Name: TMP_48 Function: pow
Num: 9, 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_48
RETURN

Name: TMP_48 Function: pow
Num: 9, 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Source address: u
[i]Type for TMP_29

Name: TMP_29 Function: calculateSwap
Num: 9, 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
denominator_1(uint256) := TMP_29(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for denominator

Name: denominator Function: calculateSwap
Num: 9, 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_30 cleared
[i] amountOut cleared
Propogating parameters and globals to SSA variables...
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwap
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwap
Num: 9, 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwap
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwap
Num: 9, 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountOut_1, name: amountOut

Name: amountOut Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: amountOut, Num: 1
Globalname: amountOut, contract_name: VaderMath
End popogation
TMP_30(uint256) = numerator_1 (c)/ denominator_1
lnorm: 24 rnorm: u
Source address: u
Source address: u
lnorm: 24 rnorm: u
Source address: u
10
9
[i]Type for TMP_30

Name: TMP_30 Function: calculateSwap
Num: 10
Den: 9
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
amountOut_1(uint256) := TMP_30(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for amountOut

Name: amountOut Function: calculateSwap
Num: 10
Den: 9
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: amountOut_1, name: amountOut

Name: amountOut Function: calculateSwap
Num: 10
Den: 9
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountOut_1, name: amountOut

Name: amountOut Function: calculateSwap
Num: 10
Den: 9
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
RETURN amountOut_1
RETURN

Name: amountOut Function: calculateSwap
Num: 10
Den: 9
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_26 cleared
[i] TMP_27 cleared
[i] numerator cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwap
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwap
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountIn, Num: 1
Globalname: amountIn, contract_name: VaderMath
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwap
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwap
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountIn, Num: 1
Globalname: amountIn, contract_name: VaderMath
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numerator, Num: 1
Globalname: numerator, contract_name: VaderMath
End popogation
TMP_26(uint256) = amountIn_1 (c)* reserveIn_1
lnorm: u rnorm: 18
Source address: u
[i]Type for TMP_26

Name: TMP_26 Function: calculateSwap
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_27(uint256) = TMP_26 (c)* reserveOut_1
lnorm: 18 rnorm: 6
Source address: u
Source address: u
Source address: u
[i]Type for TMP_27

Name: TMP_27 Function: calculateSwap
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
numerator_1(uint256) := TMP_27(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for numerator

Name: numerator Function: calculateSwap
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_28 cleared
[i] TMP_29 cleared
[i] denominator cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwap
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountIn, Num: 1
Globalname: amountIn, contract_name: VaderMath
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwap
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountIn, Num: 1
Globalname: amountIn, contract_name: VaderMath
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: denominator, Num: 1
Globalname: denominator, contract_name: VaderMath
End popogation
TMP_28(uint256) = amountIn_1 (c)+ reserveIn_1
Source address: u
[i]Type for TMP_28

Name: TMP_28 Function: calculateSwap
Num: 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_29(uint256) = INTERNAL_CALL, VaderMath.pow(uint256)(TMP_28)
New param cache [[[9], [-1], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[], [], 'u', None, [], -1, 'u']]
[[9], [-1], 'u', None, [], -1, 'u', 'u']

Name: a Function: pow
Num: 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
pow(uint256)
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a Function: pow
Num: 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: pow
Num: 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a_1 Function: pow
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: pow
Num: 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_28'])
Phi
[i]Type for a

Name: a Function: pow
Num: 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_48 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: pow
Num: 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: pow
Num: 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_48(uint256) = a_1 (c)* a_1
lnorm: u rnorm: u
Source address: u
Source address: u
Source address: u
[i]Type for TMP_48

Name: TMP_48 Function: pow
Num: 9, 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_48
RETURN

Name: TMP_48 Function: pow
Num: 9, 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a Function: pow
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: pow
Num: 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_28'])
Phi
[i]Type for a

Name: a Function: pow
Num: 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_48 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: pow
Num: 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: pow
Num: 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_48(uint256) = a_1 (c)* a_1
lnorm: u rnorm: u
Source address: u
Source address: u
Source address: u
[i]Type for TMP_48

Name: TMP_48 Function: pow
Num: 9, 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_48
RETURN

Name: TMP_48 Function: pow
Num: 9, 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Source address: u
[i]Type for TMP_29

Name: TMP_29 Function: calculateSwap
Num: 9, 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
denominator_1(uint256) := TMP_29(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for denominator

Name: denominator Function: calculateSwap
Num: 9, 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_30 cleared
[i] amountOut cleared
Propogating parameters and globals to SSA variables...
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwap
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwap
Num: 9, 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwap
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwap
Num: 9, 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountOut_1, name: amountOut

Name: amountOut Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: amountOut, Num: 1
Globalname: amountOut, contract_name: VaderMath
End popogation
TMP_30(uint256) = numerator_1 (c)/ denominator_1
lnorm: 24 rnorm: u
Source address: u
Source address: u
lnorm: 24 rnorm: u
Source address: u
10
9
[i]Type for TMP_30

Name: TMP_30 Function: calculateSwap
Num: 10
Den: 9
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
amountOut_1(uint256) := TMP_30(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for amountOut

Name: amountOut Function: calculateSwap
Num: 10
Den: 9
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: amountOut_1, name: amountOut

Name: amountOut Function: calculateSwap
Num: 10
Den: 9
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountOut_1, name: amountOut

Name: amountOut Function: calculateSwap
Num: 10
Den: 9
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
RETURN amountOut_1
RETURN

Name: amountOut Function: calculateSwap
Num: 10
Den: 9
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Source address: u
[i]Type for TMP_99

Name: TMP_99 Function: calculateOutGivenIn
Num: 10
Den: 9
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_99
RETURN

Name: TMP_99 Function: calculateOutGivenIn
Num: 10
Den: 9
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] nativeReserve1 cleared
[i] foreignReserve1 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: pool1_1, name: pool1

Name: pool1 Function: calculateOutGivenIn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pool1, Num: 1
Globalname: pool1, contract_name: VaderRouter
Ssa_name: pool1_1, name: pool1

Name: pool1 Function: calculateOutGivenIn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pool1, Num: 1
Globalname: pool1, contract_name: VaderRouter
Ssa_name: nativeReserve1_1, name: nativeReserve1

Name: nativeReserve1 Function: calculateOutGivenIn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Name: nativeReserve1, Num: 1
Globalname: nativeReserve1, contract_name: VaderRouter
Ssa_name: foreignReserve1_1, name: foreignReserve1

Name: foreignReserve1 Function: calculateOutGivenIn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Name: foreignReserve1, Num: 1
Globalname: foreignReserve1, contract_name: VaderRouter
End popogation
TUPLE_8(uint112,uint112,uint32) = HIGH_LEVEL_CALL, dest:pool1_1(IVaderPool), function:getReserves, arguments:[]  
High Call: getReserves
Running querryfc
Found: None
Written func info: IVaderPool, getReserves
Retvar: ('c', ['global:nativeAsset'], ['-1'], 18, "'u'", 'u')
{'global:_owner': 1, 'global:_tokenApprovals': 2, 'global:_owners': 3, 'swap:to': -999, 'mint:to': -998, 'mint:TMP_139': 4, 'global:this': 4, 'None:None': 5, 'mint:foreignAsset': 6, 'swap:_nativeAsset': 7, 'swap:_foreignAsset': 8, 'global:nativeAsset': 9, 'global:foreignAsset': 10, 'global:_ZERO_ADDRESS': 11, 'removeLiquidity:tokenA': -997, 'removeLiquidity:tokenB': -996, 'removeLiquidity:to': -995, 'swapExactTokensForTokens:path': -994, 'swapExactTokensForTokens:to': -993, 'swapTokensForExactTokens:path': -992, 'swapTokensForExactTokens:to': -991, 'calculateInGivenOut:path': -990, 'calculateOutGivenIn:path': -989}
Retvar: ('c', ['global:foreignAsset'], ['-1'], 6, "'u'", 'u')
{'global:_owner': 1, 'global:_tokenApprovals': 2, 'global:_owners': 3, 'swap:to': -999, 'mint:to': -998, 'mint:TMP_139': 4, 'global:this': 4, 'None:None': 5, 'mint:foreignAsset': 6, 'swap:_nativeAsset': 7, 'swap:_foreignAsset': 8, 'global:nativeAsset': 9, 'global:foreignAsset': 10, 'global:_ZERO_ADDRESS': 11, 'removeLiquidity:tokenA': -997, 'removeLiquidity:tokenB': -996, 'removeLiquidity:to': -995, 'swapExactTokensForTokens:path': -994, 'swapExactTokensForTokens:to': -993, 'swapTokensForExactTokens:path': -992, 'swapTokensForExactTokens:to': -991, 'calculateInGivenOut:path': -990, 'calculateOutGivenIn:path': -989}
[i]Type for TUPLE_8

Name: TUPLE_8 Function: calculateOutGivenIn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
nativeReserve1_1(uint256)= UNPACK TUPLE_8 index: 0 
([9], [-1], 18, "'u'", 'u', -1)
[i]Type for nativeReserve1

Name: nativeReserve1 Function: calculateOutGivenIn
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
foreignReserve1_1(uint256)= UNPACK TUPLE_8 index: 1 
([10], [-1], 6, "'u'", 'u', -1)
[i]Type for foreignReserve1

Name: foreignReserve1 Function: calculateOutGivenIn
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
[i] TMP_103 cleared
[i] TMP_104 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: foreignReserve1_1, name: foreignReserve1

Name: foreignReserve1 Function: calculateOutGivenIn
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: foreignReserve0_1, name: foreignReserve0

Name: foreignReserve0 Function: calculateOutGivenIn
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: nativeReserve1_1, name: nativeReserve1

Name: nativeReserve1 Function: calculateOutGivenIn
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: nativeReserve0_1, name: nativeReserve0

Name: nativeReserve0 Function: calculateOutGivenIn
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: calculateOutGivenIn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: calculateOutGivenIn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountIn, Num: 1
Globalname: amountIn, contract_name: VaderRouter
Ssa_name: foreignReserve1_1, name: foreignReserve1

Name: foreignReserve1 Function: calculateOutGivenIn
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: foreignReserve0_1, name: foreignReserve0

Name: foreignReserve0 Function: calculateOutGivenIn
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: nativeReserve1_1, name: nativeReserve1

Name: nativeReserve1 Function: calculateOutGivenIn
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: nativeReserve0_1, name: nativeReserve0

Name: nativeReserve0 Function: calculateOutGivenIn
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: calculateOutGivenIn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: calculateOutGivenIn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountIn, Num: 1
Globalname: amountIn, contract_name: VaderRouter
End popogation
TMP_103(uint256) = LIBRARY_CALL, dest:VaderMath, function:VaderMath.calculateSwap(uint256,uint256,uint256), arguments:['amountIn_1', 'nativeReserve1_1', 'foreignReserve1_1'] 
Found: calculateSwap

Name: amountIn_1 Function: calculateOutGivenIn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: nativeReserve1 Function: calculateOutGivenIn
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: foreignReserve1 Function: calculateOutGivenIn
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
High level cal param_cache
Param: 0
    num: []
    den: []
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [9]
    den: [-1]
    norm: 18
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [10]
    den: [-1]
    norm: 6
    link: None
    fields: []
    fintype: -1
New param cache [[[], [], 'u', None, [], -1, 'u', 'u'], [[9], [-1], 18, None, [], -1, 'u', "'u'"], [[10], [-1], 6, None, [], -1, 'u', "'u'"]]
Old param cache: [[[-1], [-1], 'u', None, [], -1, 'u'], [[-1], [-1], 'u', None, [], -1, 'u'], [[-1], [-1], 'u', None, [], -1, 'u']]
[[], [], 'u', None, [], -1, 'u', 'u']

Name: amountIn Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[9], [-1], 18, None, [], -1, 'u', "'u'"]

Name: reserveIn Function: calculateSwap
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
[[10], [-1], 6, None, [], -1, 'u', "'u'"]

Name: reserveOut Function: calculateSwap
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
calculateSwap(uint256,uint256,uint256)
Propogating All
Propogating All
reserveOut_1
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwap
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: reserveOut_1 Function: calculateSwap
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
reserveIn_1
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwap
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: reserveIn_1 Function: calculateSwap
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
amountIn_1
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
reserveIn_1
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwap
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: reserveIn_1 Function: calculateSwap
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
amountIn_1
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
numerator_1
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwap
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
denominator_1
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwap
Num: 9, 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
amountOut_1
Ssa_name: amountOut_1, name: amountOut

Name: amountOut Function: calculateSwap
Num: 10
Den: 9
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_26 cleared
[i] TMP_27 cleared
[i] numerator cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwap
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwap
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountIn, Num: 1
Globalname: amountIn, contract_name: VaderMath
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwap
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwap
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountIn, Num: 1
Globalname: amountIn, contract_name: VaderMath
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numerator, Num: 1
Globalname: numerator, contract_name: VaderMath
End popogation
TMP_26(uint256) = amountIn_1 (c)* reserveIn_1
lnorm: u rnorm: 18
Source address: u
[i]Type for TMP_26

Name: TMP_26 Function: calculateSwap
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_27(uint256) = TMP_26 (c)* reserveOut_1
lnorm: 18 rnorm: 6
Source address: u
Source address: u
Source address: u
[i]Type for TMP_27

Name: TMP_27 Function: calculateSwap
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
numerator_1(uint256) := TMP_27(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for numerator

Name: numerator Function: calculateSwap
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_28 cleared
[i] TMP_29 cleared
[i] denominator cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwap
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountIn, Num: 1
Globalname: amountIn, contract_name: VaderMath
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwap
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountIn, Num: 1
Globalname: amountIn, contract_name: VaderMath
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: denominator, Num: 1
Globalname: denominator, contract_name: VaderMath
End popogation
TMP_28(uint256) = amountIn_1 (c)+ reserveIn_1
Source address: u
[i]Type for TMP_28

Name: TMP_28 Function: calculateSwap
Num: 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_29(uint256) = INTERNAL_CALL, VaderMath.pow(uint256)(TMP_28)
New param cache [[[9], [-1], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[], [], 'u', None, [], -1, 'u']]
[[9], [-1], 'u', None, [], -1, 'u', 'u']

Name: a Function: pow
Num: 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
pow(uint256)
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a Function: pow
Num: 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: pow
Num: 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a_1 Function: pow
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: pow
Num: 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_28'])
Phi
[i]Type for a

Name: a Function: pow
Num: 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_48 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: pow
Num: 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: pow
Num: 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_48(uint256) = a_1 (c)* a_1
lnorm: u rnorm: u
Source address: u
Source address: u
Source address: u
[i]Type for TMP_48

Name: TMP_48 Function: pow
Num: 9, 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_48
RETURN

Name: TMP_48 Function: pow
Num: 9, 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a Function: pow
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: pow
Num: 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_28'])
Phi
[i]Type for a

Name: a Function: pow
Num: 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_48 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: pow
Num: 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: pow
Num: 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_48(uint256) = a_1 (c)* a_1
lnorm: u rnorm: u
Source address: u
Source address: u
Source address: u
[i]Type for TMP_48

Name: TMP_48 Function: pow
Num: 9, 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_48
RETURN

Name: TMP_48 Function: pow
Num: 9, 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Source address: u
[i]Type for TMP_29

Name: TMP_29 Function: calculateSwap
Num: 9, 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
denominator_1(uint256) := TMP_29(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for denominator

Name: denominator Function: calculateSwap
Num: 9, 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_30 cleared
[i] amountOut cleared
Propogating parameters and globals to SSA variables...
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwap
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwap
Num: 9, 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwap
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwap
Num: 9, 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountOut_1, name: amountOut

Name: amountOut Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: amountOut, Num: 1
Globalname: amountOut, contract_name: VaderMath
End popogation
TMP_30(uint256) = numerator_1 (c)/ denominator_1
lnorm: 24 rnorm: u
Source address: u
Source address: u
lnorm: 24 rnorm: u
Source address: u
10
9
[i]Type for TMP_30

Name: TMP_30 Function: calculateSwap
Num: 10
Den: 9
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
amountOut_1(uint256) := TMP_30(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for amountOut

Name: amountOut Function: calculateSwap
Num: 10
Den: 9
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: amountOut_1, name: amountOut

Name: amountOut Function: calculateSwap
Num: 10
Den: 9
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountOut_1, name: amountOut

Name: amountOut Function: calculateSwap
Num: 10
Den: 9
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
RETURN amountOut_1
RETURN

Name: amountOut Function: calculateSwap
Num: 10
Den: 9
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_26 cleared
[i] TMP_27 cleared
[i] numerator cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwap
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwap
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountIn, Num: 1
Globalname: amountIn, contract_name: VaderMath
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwap
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwap
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountIn, Num: 1
Globalname: amountIn, contract_name: VaderMath
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numerator, Num: 1
Globalname: numerator, contract_name: VaderMath
End popogation
TMP_26(uint256) = amountIn_1 (c)* reserveIn_1
lnorm: u rnorm: 18
Source address: u
[i]Type for TMP_26

Name: TMP_26 Function: calculateSwap
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_27(uint256) = TMP_26 (c)* reserveOut_1
lnorm: 18 rnorm: 6
Source address: u
Source address: u
Source address: u
[i]Type for TMP_27

Name: TMP_27 Function: calculateSwap
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
numerator_1(uint256) := TMP_27(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for numerator

Name: numerator Function: calculateSwap
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_28 cleared
[i] TMP_29 cleared
[i] denominator cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwap
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountIn, Num: 1
Globalname: amountIn, contract_name: VaderMath
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwap
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountIn, Num: 1
Globalname: amountIn, contract_name: VaderMath
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: denominator, Num: 1
Globalname: denominator, contract_name: VaderMath
End popogation
TMP_28(uint256) = amountIn_1 (c)+ reserveIn_1
Source address: u
[i]Type for TMP_28

Name: TMP_28 Function: calculateSwap
Num: 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_29(uint256) = INTERNAL_CALL, VaderMath.pow(uint256)(TMP_28)
New param cache [[[9], [-1], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[], [], 'u', None, [], -1, 'u']]
[[9], [-1], 'u', None, [], -1, 'u', 'u']

Name: a Function: pow
Num: 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
pow(uint256)
Propogating All
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a Function: pow
Num: 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: pow
Num: 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a_1 Function: pow
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: pow
Num: 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_28'])
Phi
[i]Type for a

Name: a Function: pow
Num: 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_48 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: pow
Num: 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: pow
Num: 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_48(uint256) = a_1 (c)* a_1
lnorm: u rnorm: u
Source address: u
Source address: u
Source address: u
[i]Type for TMP_48

Name: TMP_48 Function: pow
Num: 9, 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_48
RETURN

Name: TMP_48 Function: pow
Num: 9, 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] a cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a Function: pow
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: pow
Num: 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
a_1(uint256) := ϕ(['TMP_28'])
Phi
[i]Type for a

Name: a Function: pow
Num: 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_48 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: pow
Num: 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: pow
Num: 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_48(uint256) = a_1 (c)* a_1
lnorm: u rnorm: u
Source address: u
Source address: u
Source address: u
[i]Type for TMP_48

Name: TMP_48 Function: pow
Num: 9, 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_48
RETURN

Name: TMP_48 Function: pow
Num: 9, 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Source address: u
[i]Type for TMP_29

Name: TMP_29 Function: calculateSwap
Num: 9, 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
denominator_1(uint256) := TMP_29(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for denominator

Name: denominator Function: calculateSwap
Num: 9, 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_30 cleared
[i] amountOut cleared
Propogating parameters and globals to SSA variables...
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwap
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwap
Num: 9, 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwap
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwap
Num: 9, 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountOut_1, name: amountOut

Name: amountOut Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: amountOut, Num: 1
Globalname: amountOut, contract_name: VaderMath
End popogation
TMP_30(uint256) = numerator_1 (c)/ denominator_1
lnorm: 24 rnorm: u
Source address: u
Source address: u
lnorm: 24 rnorm: u
Source address: u
10
9
[i]Type for TMP_30

Name: TMP_30 Function: calculateSwap
Num: 10
Den: 9
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
amountOut_1(uint256) := TMP_30(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for amountOut

Name: amountOut Function: calculateSwap
Num: 10
Den: 9
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: amountOut_1, name: amountOut

Name: amountOut Function: calculateSwap
Num: 10
Den: 9
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountOut_1, name: amountOut

Name: amountOut Function: calculateSwap
Num: 10
Den: 9
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
RETURN amountOut_1
RETURN

Name: amountOut Function: calculateSwap
Num: 10
Den: 9
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Source address: u
[i]Type for TMP_103

Name: TMP_103 Function: calculateOutGivenIn
Num: 10
Den: 9
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_104(uint256) = LIBRARY_CALL, dest:VaderMath, function:VaderMath.calculateSwap(uint256,uint256,uint256), arguments:['TMP_103', 'foreignReserve0_1', 'nativeReserve0_1'] 
Found: calculateSwap

Name: TMP_103 Function: calculateOutGivenIn
Num: 10
Den: 9
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef

Name: foreignReserve0 Function: calculateOutGivenIn
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: nativeReserve0 Function: calculateOutGivenIn
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
High level cal param_cache
Param: 0
    num: [10]
    den: [9]
    norm: 24
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [10]
    den: [-1]
    norm: 6
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [9]
    den: [-1]
    norm: 18
    link: None
    fields: []
    fintype: -1
New param cache [[[10], [9], 24, None, [], -1, 'u', 'u'], [[10], [-1], 6, None, [], -1, 'u', "'u'"], [[9], [-1], 18, None, [], -1, 'u', "'u'"]]
Old param cache: [[[-1], [-1], 'u', None, [], -1, 'u'], [[-1], [-1], 'u', None, [], -1, 'u'], [[-1], [-1], 'u', None, [], -1, 'u']]
[[10], [9], 24, None, [], -1, 'u', 'u']

Name: amountIn Function: calculateSwap
Num: 10
Den: 9
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
[[10], [-1], 6, None, [], -1, 'u', "'u'"]

Name: reserveIn Function: calculateSwap
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
[[9], [-1], 18, None, [], -1, 'u', "'u'"]

Name: reserveOut Function: calculateSwap
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
calculateSwap(uint256,uint256,uint256)
Propogating All
Propogating All
reserveOut_1
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwap
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: reserveOut_1 Function: calculateSwap
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
reserveIn_1
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwap
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: reserveIn_1 Function: calculateSwap
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
amountIn_1
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: calculateSwap
Num: 10
Den: 9
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
reserveIn_1
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwap
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: reserveIn_1 Function: calculateSwap
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
amountIn_1
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: calculateSwap
Num: 10
Den: 9
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: calculateSwap
Num: 10
Den: 9
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
numerator_1
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwap
Num: 9, 10
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
denominator_1
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwap
Num: 9, 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
amountOut_1
Ssa_name: amountOut_1, name: amountOut

Name: amountOut Function: calculateSwap
Num: 10
Den: 9
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_26 cleared
[i] TMP_27 cleared
[i] numerator cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwap
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwap
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: calculateSwap
Num: 10
Den: 9
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwap
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwap
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: calculateSwap
Num: 10
Den: 9
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numerator, Num: 1
Globalname: numerator, contract_name: VaderMath
End popogation
TMP_26(uint256) = amountIn_1 (c)* reserveIn_1
lnorm: 24 rnorm: 6
Source address: u
Source address: u
Source address: u
[i]Type for TMP_26

Name: TMP_26 Function: calculateSwap
Num: 10, 10
Den: 9
Address: u
Norm: 30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_27(uint256) = TMP_26 (c)* reserveOut_1
lnorm: 30 rnorm: 18
Source address: u
Source address: u
Source address: u
[i]Type for TMP_27

Name: TMP_27 Function: calculateSwap
Num: 10, 10
Den: -1
Address: u
Norm: 48
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
numerator_1(uint256) := TMP_27(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for numerator

Name: numerator Function: calculateSwap
Num: 10, 10
Den: -1
Address: u
Norm: 48
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_28 cleared
[i] TMP_29 cleared
[i] denominator cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwap
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: calculateSwap
Num: 10
Den: 9
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwap
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: calculateSwap
Num: 10
Den: 9
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: denominator, Num: 1
Globalname: denominator, contract_name: VaderMath
End popogation
TMP_28(uint256) = amountIn_1 (c)+ reserveIn_1
10
-1
[i]Type for TMP_28

Name: TMP_28 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_29(uint256) = INTERNAL_CALL, VaderMath.pow(uint256)(TMP_28)
New param cache [[[], [], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[], [], 'u', None, [], -1, 'u']]
[i]Type for TMP_29

Name: TMP_29 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
denominator_1(uint256) := TMP_29(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for denominator

Name: denominator Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_30 cleared
[i] amountOut cleared
Propogating parameters and globals to SSA variables...
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwap
Num: 10, 10
Den: -1
Address: u
Norm: 48
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: denominator, Num: 1
Globalname: denominator, contract_name: VaderMath
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwap
Num: 10, 10
Den: -1
Address: u
Norm: 48
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: denominator, Num: 1
Globalname: denominator, contract_name: VaderMath
Ssa_name: amountOut_1, name: amountOut

Name: amountOut Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: amountOut, Num: 1
Globalname: amountOut, contract_name: VaderMath
End popogation
TMP_30(uint256) = numerator_1 (c)/ denominator_1
lnorm: 48 rnorm: u
Source address: u
lnorm: 48 rnorm: u
[i]Type for TMP_30

Name: TMP_30 Function: calculateSwap
Num: 10, 10
Den: -1
Address: u
Norm: 48
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
amountOut_1(uint256) := TMP_30(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for amountOut

Name: amountOut Function: calculateSwap
Num: 10, 10
Den: -1
Address: u
Norm: 48
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: amountOut_1, name: amountOut

Name: amountOut Function: calculateSwap
Num: 10, 10
Den: -1
Address: u
Norm: 48
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountOut_1, name: amountOut

Name: amountOut Function: calculateSwap
Num: 10, 10
Den: -1
Address: u
Norm: 48
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
RETURN amountOut_1
RETURN

Name: amountOut Function: calculateSwap
Num: 10, 10
Den: -1
Address: u
Norm: 48
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_26 cleared
[i] TMP_27 cleared
[i] numerator cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwap
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwap
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: calculateSwap
Num: 10
Den: 9
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: reserveOut_1, name: reserveOut

Name: reserveOut_1 Function: calculateSwap
Num: 9
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwap
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: calculateSwap
Num: 10
Den: 9
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: numerator, Num: 1
Globalname: numerator, contract_name: VaderMath
End popogation
TMP_26(uint256) = amountIn_1 (c)* reserveIn_1
lnorm: 24 rnorm: 6
Source address: u
Source address: u
Source address: u
[i]Type for TMP_26

Name: TMP_26 Function: calculateSwap
Num: 10, 10
Den: 9
Address: u
Norm: 30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_27(uint256) = TMP_26 (c)* reserveOut_1
lnorm: 30 rnorm: 18
Source address: u
Source address: u
Source address: u
[i]Type for TMP_27

Name: TMP_27 Function: calculateSwap
Num: 10, 10
Den: -1
Address: u
Norm: 48
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
numerator_1(uint256) := TMP_27(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for numerator

Name: numerator Function: calculateSwap
Num: 10, 10
Den: -1
Address: u
Norm: 48
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_28 cleared
[i] TMP_29 cleared
[i] denominator cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwap
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: calculateSwap
Num: 10
Den: 9
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: reserveIn_1, name: reserveIn

Name: reserveIn_1 Function: calculateSwap
Num: 10
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: calculateSwap
Num: 10
Den: 9
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: denominator, Num: 1
Globalname: denominator, contract_name: VaderMath
End popogation
TMP_28(uint256) = amountIn_1 (c)+ reserveIn_1
10
-1
[i]Type for TMP_28

Name: TMP_28 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_29(uint256) = INTERNAL_CALL, VaderMath.pow(uint256)(TMP_28)
New param cache [[[], [], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[], [], 'u', None, [], -1, 'u']]
[i]Type for TMP_29

Name: TMP_29 Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
denominator_1(uint256) := TMP_29(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for denominator

Name: denominator Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_30 cleared
[i] amountOut cleared
Propogating parameters and globals to SSA variables...
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwap
Num: 10, 10
Den: -1
Address: u
Norm: 48
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: denominator, Num: 1
Globalname: denominator, contract_name: VaderMath
Ssa_name: numerator_1, name: numerator

Name: numerator Function: calculateSwap
Num: 10, 10
Den: -1
Address: u
Norm: 48
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: denominator_1, name: denominator

Name: denominator Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: denominator, Num: 1
Globalname: denominator, contract_name: VaderMath
Ssa_name: amountOut_1, name: amountOut

Name: amountOut Function: calculateSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: amountOut, Num: 1
Globalname: amountOut, contract_name: VaderMath
End popogation
TMP_30(uint256) = numerator_1 (c)/ denominator_1
lnorm: 48 rnorm: u
Source address: u
lnorm: 48 rnorm: u
[i]Type for TMP_30

Name: TMP_30 Function: calculateSwap
Num: 10, 10
Den: -1
Address: u
Norm: 48
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
amountOut_1(uint256) := TMP_30(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for amountOut

Name: amountOut Function: calculateSwap
Num: 10, 10
Den: -1
Address: u
Norm: 48
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: amountOut_1, name: amountOut

Name: amountOut Function: calculateSwap
Num: 10, 10
Den: -1
Address: u
Norm: 48
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountOut_1, name: amountOut

Name: amountOut Function: calculateSwap
Num: 10, 10
Den: -1
Address: u
Norm: 48
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
RETURN amountOut_1
RETURN

Name: amountOut Function: calculateSwap
Num: 10, 10
Den: -1
Address: u
Norm: 48
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Source address: u
[i]Type for TMP_104

Name: TMP_104 Function: calculateOutGivenIn
Num: 10, 10
Den: -1
Address: u
Norm: 48
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_104
RETURN

Name: TMP_104 Function: calculateOutGivenIn
Num: 10, 10
Den: -1
Address: u
Norm: 48
LF: None
Value: u
Fields: 
Finance Type: undef
Reading Function: slitherConstructorConstantVariables
Function slitherConstructorConstantVariables not marked
Address: 1, Label: global:_owner
Address: 2, Label: global:_tokenApprovals
Address: 3, Label: global:_owners
Address: -999, Label: swap:to
Address: -998, Label: mint:to
Address: 4, Label: mint:TMP_139
Address: 4, Label: global:this
Address: 5, Label: None:None
Address: 6, Label: mint:foreignAsset
Address: 7, Label: swap:_nativeAsset
Address: 8, Label: swap:_foreignAsset
Address: 9, Label: global:nativeAsset
Address: 10, Label: global:foreignAsset
Address: 11, Label: global:_ZERO_ADDRESS
Address: -997, Label: removeLiquidity:tokenA
Address: -996, Label: removeLiquidity:tokenB
Address: -995, Label: removeLiquidity:to
Address: -994, Label: swapExactTokensForTokens:path
Address: -993, Label: swapExactTokensForTokens:to
Address: -992, Label: swapTokensForExactTokens:path
Address: -991, Label: swapTokensForExactTokens:to
Address: -990, Label: calculateInGivenOut:path
Address: -989, Label: calculateOutGivenIn:path
Head Addr: 1
    Norm: 0
    Set: {1}
    Fin: NULL
Head Addr: 2
    Norm: 0
    Set: {2}
    Fin: NULL
Head Addr: 3
    Norm: 0
    Set: {3}
    Fin: NULL
Head Addr: -999
    Norm: 0
    Set: {-999}
    Fin: NULL
Head Addr: -998
    Norm: 0
    Set: {-998}
    Fin: NULL
Head Addr: 4
    Norm: u
    Set: {4}
    Fin: NULL
Head Addr: 5
    Norm: u
    Set: {5}
    Fin: NULL
Head Addr: 6
    Norm: u
    Set: {6}
    Fin: NULL
Head Addr: 7
    Norm: u
    Set: {7}
    Fin: NULL
Head Addr: 8
    Norm: u
    Set: {8}
    Fin: NULL
Head Addr: 9
    Norm: u
    Set: {9}
    Fin: NULL
Head Addr: 10
    Norm: u
    Set: {10}
    Fin: NULL
Head Addr: 11
    Norm: 0
    Set: {11}
    Fin: NULL
Head Addr: -997
    Norm: 18
    Set: {-997}
    Fin: NULL
Head Addr: -996
    Norm: 6
    Set: {-996}
    Fin: NULL
Head Addr: -995
    Norm: 0
    Set: {-995}
    Fin: NULL
Head Addr: -994
    Norm: 0
    Set: {-994}
    Fin: NULL
Head Addr: -993
    Norm: 0
    Set: {-993}
    Fin: NULL
Head Addr: -992
    Norm: 0
    Set: {-992}
    Fin: NULL
Head Addr: -991
    Norm: 0
    Set: {-991}
    Fin: NULL
Head Addr: -990
    Norm: u
    Set: {-990}
    Fin: NULL
Head Addr: -989
    Norm: 0
    Set: {-989}
    Fin: NULL
Function count: 171
Time elapsed: 1.3279640674591064
Analyzed_contracts_count: 1
total compilations: 5, contracts: 1
contract name: UQ112x112
Function count: 171
Time elapsed: 9.918212890625e-05
Analyzed_contracts_count: 3
total compilations: 5, contracts: 3
contract name: GasThrottle
contract name: IAggregator
contract name: ProtocolConstants
Function count: 171
Time elapsed: 0.00010895729064941406
Currently Omitted (9)
Currently Omitted (3)
Executing Group 15
[*] Tested 17 warnings for Badger Dao p2
Group 15 complete
Elapsed time: 26.394804071 seconds
Testing complete
