Switched global version to 0.8.3
Checking Utils
Checking iERC20
Checking iFACTORY
Checking iPOOLS
Checking iROUTER
Checking iSYNTH
Checking iVADER
Checking console
Add to address_to_label {'global:FACTORY': 1}
Add to address_to_label {'global:FACTORY': 1, 'global:POOLS': 2}
Add to address_to_label {'global:FACTORY': 1, 'global:POOLS': 2, 'global:USDV': 3}
Add to address_to_label {'global:FACTORY': 1, 'global:POOLS': 2, 'global:USDV': 3, 'global:VADER': 4}
Add to address_to_label {'global:FACTORY': 1, 'global:POOLS': 2, 'global:USDV': 3, 'global:VADER': 4, 'global:ROUTER': 5}
Add to address_to_label {'global:FACTORY': 1, 'global:POOLS': 2, 'global:USDV': 3, 'global:VADER': 4, 'global:ROUTER': 5, 'assetChecks:collateralAsset': -999}
Add to address_to_label {'global:FACTORY': 1, 'global:POOLS': 2, 'global:USDV': 3, 'global:VADER': 4, 'global:ROUTER': 5, 'assetChecks:collateralAsset': -999, 'assetChecks:debtAsset': -998}
Add to address_to_label {'global:FACTORY': 1, 'global:POOLS': 2, 'global:USDV': 3, 'global:VADER': 4, 'global:ROUTER': 5, 'assetChecks:collateralAsset': -999, 'assetChecks:debtAsset': -998, 'isBase:token': -997}
Add to address_to_label {'global:FACTORY': 1, 'global:POOLS': 2, 'global:USDV': 3, 'global:VADER': 4, 'global:ROUTER': 5, 'assetChecks:collateralAsset': -999, 'assetChecks:debtAsset': -998, 'isBase:token': -997, 'isPool:token': -996}
Add to address_to_label {'global:FACTORY': 1, 'global:POOLS': 2, 'global:USDV': 3, 'global:VADER': 4, 'global:ROUTER': 5, 'assetChecks:collateralAsset': -999, 'assetChecks:debtAsset': -998, 'isBase:token': -997, 'isPool:token': -996, 'calcValueInBase:token': -995}
Add to address_to_label {'global:FACTORY': 1, 'global:POOLS': 2, 'global:USDV': 3, 'global:VADER': 4, 'global:ROUTER': 5, 'assetChecks:collateralAsset': -999, 'assetChecks:debtAsset': -998, 'isBase:token': -997, 'isPool:token': -996, 'calcValueInBase:token': -995, 'calcValueInToken:token': -994}
Add to address_to_label {'global:FACTORY': 1, 'global:POOLS': 2, 'global:USDV': 3, 'global:VADER': 4, 'global:ROUTER': 5, 'assetChecks:collateralAsset': -999, 'assetChecks:debtAsset': -998, 'isBase:token': -997, 'isPool:token': -996, 'calcValueInBase:token': -995, 'calcValueInToken:token': -994, 'calcValueOfTokenInToken:token1': -993}
Add to address_to_label {'global:FACTORY': 1, 'global:POOLS': 2, 'global:USDV': 3, 'global:VADER': 4, 'global:ROUTER': 5, 'assetChecks:collateralAsset': -999, 'assetChecks:debtAsset': -998, 'isBase:token': -997, 'isPool:token': -996, 'calcValueInBase:token': -995, 'calcValueInToken:token': -994, 'calcValueOfTokenInToken:token1': -993, 'calcValueOfTokenInToken:token2': -992}
Add to address_to_label {'global:FACTORY': 1, 'global:POOLS': 2, 'global:USDV': 3, 'global:VADER': 4, 'global:ROUTER': 5, 'assetChecks:collateralAsset': -999, 'assetChecks:debtAsset': -998, 'isBase:token': -997, 'isPool:token': -996, 'calcValueInBase:token': -995, 'calcValueInToken:token': -994, 'calcValueOfTokenInToken:token1': -993, 'calcValueOfTokenInToken:token2': -992, 'calcSwapValueInBase:token': -991}
Add to address_to_label {'global:FACTORY': 1, 'global:POOLS': 2, 'global:USDV': 3, 'global:VADER': 4, 'global:ROUTER': 5, 'assetChecks:collateralAsset': -999, 'assetChecks:debtAsset': -998, 'isBase:token': -997, 'isPool:token': -996, 'calcValueInBase:token': -995, 'calcValueInToken:token': -994, 'calcValueOfTokenInToken:token1': -993, 'calcValueOfTokenInToken:token2': -992, 'calcSwapValueInBase:token': -991, 'calcSwapValueInToken:token': -990}
Add to address_to_label {'global:FACTORY': 1, 'global:POOLS': 2, 'global:USDV': 3, 'global:VADER': 4, 'global:ROUTER': 5, 'assetChecks:collateralAsset': -999, 'assetChecks:debtAsset': -998, 'isBase:token': -997, 'isPool:token': -996, 'calcValueInBase:token': -995, 'calcValueInToken:token': -994, 'calcValueOfTokenInToken:token1': -993, 'calcValueOfTokenInToken:token2': -992, 'calcSwapValueInBase:token': -991, 'calcSwapValueInToken:token': -990, 'requirePriceBounds:token': -989}
Add to address_to_label {'global:FACTORY': 1, 'global:POOLS': 2, 'global:USDV': 3, 'global:VADER': 4, 'global:ROUTER': 5, 'assetChecks:collateralAsset': -999, 'assetChecks:debtAsset': -998, 'isBase:token': -997, 'isPool:token': -996, 'calcValueInBase:token': -995, 'calcValueInToken:token': -994, 'calcValueOfTokenInToken:token1': -993, 'calcValueOfTokenInToken:token2': -992, 'calcSwapValueInBase:token': -991, 'calcSwapValueInToken:token': -990, 'requirePriceBounds:token': -989, 'getRewardShare:token': -988}
Add to address_to_label {'global:FACTORY': 1, 'global:POOLS': 2, 'global:USDV': 3, 'global:VADER': 4, 'global:ROUTER': 5, 'assetChecks:collateralAsset': -999, 'assetChecks:debtAsset': -998, 'isBase:token': -997, 'isPool:token': -996, 'calcValueInBase:token': -995, 'calcValueInToken:token': -994, 'calcValueOfTokenInToken:token1': -993, 'calcValueOfTokenInToken:token2': -992, 'calcSwapValueInBase:token': -991, 'calcSwapValueInToken:token': -990, 'requirePriceBounds:token': -989, 'getRewardShare:token': -988, 'getProtection:member': -987}
Add to address_to_label {'global:FACTORY': 1, 'global:POOLS': 2, 'global:USDV': 3, 'global:VADER': 4, 'global:ROUTER': 5, 'assetChecks:collateralAsset': -999, 'assetChecks:debtAsset': -998, 'isBase:token': -997, 'isPool:token': -996, 'calcValueInBase:token': -995, 'calcValueInToken:token': -994, 'calcValueOfTokenInToken:token1': -993, 'calcValueOfTokenInToken:token2': -992, 'calcSwapValueInBase:token': -991, 'calcSwapValueInToken:token': -990, 'requirePriceBounds:token': -989, 'getRewardShare:token': -988, 'getProtection:member': -987, 'getProtection:token': -986}
Add to address_to_label {'global:FACTORY': 1, 'global:POOLS': 2, 'global:USDV': 3, 'global:VADER': 4, 'global:ROUTER': 5, 'assetChecks:collateralAsset': -999, 'assetChecks:debtAsset': -998, 'isBase:token': -997, 'isPool:token': -996, 'calcValueInBase:token': -995, 'calcValueInToken:token': -994, 'calcValueOfTokenInToken:token1': -993, 'calcValueOfTokenInToken:token2': -992, 'calcSwapValueInBase:token': -991, 'calcSwapValueInToken:token': -990, 'requirePriceBounds:token': -989, 'getRewardShare:token': -988, 'getProtection:member': -987, 'getProtection:token': -986, 'getCoverage:member': -985}
Add to address_to_label {'global:FACTORY': 1, 'global:POOLS': 2, 'global:USDV': 3, 'global:VADER': 4, 'global:ROUTER': 5, 'assetChecks:collateralAsset': -999, 'assetChecks:debtAsset': -998, 'isBase:token': -997, 'isPool:token': -996, 'calcValueInBase:token': -995, 'calcValueInToken:token': -994, 'calcValueOfTokenInToken:token1': -993, 'calcValueOfTokenInToken:token2': -992, 'calcSwapValueInBase:token': -991, 'calcSwapValueInToken:token': -990, 'requirePriceBounds:token': -989, 'getRewardShare:token': -988, 'getProtection:member': -987, 'getProtection:token': -986, 'getCoverage:member': -985, 'getCoverage:token': -984}
Add to address_to_label {'global:FACTORY': 1, 'global:POOLS': 2, 'global:USDV': 3, 'global:VADER': 4, 'global:ROUTER': 5, 'assetChecks:collateralAsset': -999, 'assetChecks:debtAsset': -998, 'isBase:token': -997, 'isPool:token': -996, 'calcValueInBase:token': -995, 'calcValueInToken:token': -994, 'calcValueOfTokenInToken:token1': -993, 'calcValueOfTokenInToken:token2': -992, 'calcSwapValueInBase:token': -991, 'calcSwapValueInToken:token': -990, 'requirePriceBounds:token': -989, 'getRewardShare:token': -988, 'getProtection:member': -987, 'getProtection:token': -986, 'getCoverage:member': -985, 'getCoverage:token': -984, 'getCollateralValueInBase:member': -983}
Add to address_to_label {'global:FACTORY': 1, 'global:POOLS': 2, 'global:USDV': 3, 'global:VADER': 4, 'global:ROUTER': 5, 'assetChecks:collateralAsset': -999, 'assetChecks:debtAsset': -998, 'isBase:token': -997, 'isPool:token': -996, 'calcValueInBase:token': -995, 'calcValueInToken:token': -994, 'calcValueOfTokenInToken:token1': -993, 'calcValueOfTokenInToken:token2': -992, 'calcSwapValueInBase:token': -991, 'calcSwapValueInToken:token': -990, 'requirePriceBounds:token': -989, 'getRewardShare:token': -988, 'getProtection:member': -987, 'getProtection:token': -986, 'getCoverage:member': -985, 'getCoverage:token': -984, 'getCollateralValueInBase:member': -983, 'getCollateralValueInBase:collateralAsset': -982}
Add to address_to_label {'global:FACTORY': 1, 'global:POOLS': 2, 'global:USDV': 3, 'global:VADER': 4, 'global:ROUTER': 5, 'assetChecks:collateralAsset': -999, 'assetChecks:debtAsset': -998, 'isBase:token': -997, 'isPool:token': -996, 'calcValueInBase:token': -995, 'calcValueInToken:token': -994, 'calcValueOfTokenInToken:token1': -993, 'calcValueOfTokenInToken:token2': -992, 'calcSwapValueInBase:token': -991, 'calcSwapValueInToken:token': -990, 'requirePriceBounds:token': -989, 'getRewardShare:token': -988, 'getProtection:member': -987, 'getProtection:token': -986, 'getCoverage:member': -985, 'getCoverage:token': -984, 'getCollateralValueInBase:member': -983, 'getCollateralValueInBase:collateralAsset': -982, 'getCollateralValueInBase:debtAsset': -981}
Add to address_to_label {'global:FACTORY': 1, 'global:POOLS': 2, 'global:USDV': 3, 'global:VADER': 4, 'global:ROUTER': 5, 'assetChecks:collateralAsset': -999, 'assetChecks:debtAsset': -998, 'isBase:token': -997, 'isPool:token': -996, 'calcValueInBase:token': -995, 'calcValueInToken:token': -994, 'calcValueOfTokenInToken:token1': -993, 'calcValueOfTokenInToken:token2': -992, 'calcSwapValueInBase:token': -991, 'calcSwapValueInToken:token': -990, 'requirePriceBounds:token': -989, 'getRewardShare:token': -988, 'getProtection:member': -987, 'getProtection:token': -986, 'getCoverage:member': -985, 'getCoverage:token': -984, 'getCollateralValueInBase:member': -983, 'getCollateralValueInBase:collateralAsset': -982, 'getCollateralValueInBase:debtAsset': -981, 'getDebtValueInCollateral:member': -980}
Add to address_to_label {'global:FACTORY': 1, 'global:POOLS': 2, 'global:USDV': 3, 'global:VADER': 4, 'global:ROUTER': 5, 'assetChecks:collateralAsset': -999, 'assetChecks:debtAsset': -998, 'isBase:token': -997, 'isPool:token': -996, 'calcValueInBase:token': -995, 'calcValueInToken:token': -994, 'calcValueOfTokenInToken:token1': -993, 'calcValueOfTokenInToken:token2': -992, 'calcSwapValueInBase:token': -991, 'calcSwapValueInToken:token': -990, 'requirePriceBounds:token': -989, 'getRewardShare:token': -988, 'getProtection:member': -987, 'getProtection:token': -986, 'getCoverage:member': -985, 'getCoverage:token': -984, 'getCollateralValueInBase:member': -983, 'getCollateralValueInBase:collateralAsset': -982, 'getCollateralValueInBase:debtAsset': -981, 'getDebtValueInCollateral:member': -980, 'getDebtValueInCollateral:collateralAsset': -979}
Add to address_to_label {'global:FACTORY': 1, 'global:POOLS': 2, 'global:USDV': 3, 'global:VADER': 4, 'global:ROUTER': 5, 'assetChecks:collateralAsset': -999, 'assetChecks:debtAsset': -998, 'isBase:token': -997, 'isPool:token': -996, 'calcValueInBase:token': -995, 'calcValueInToken:token': -994, 'calcValueOfTokenInToken:token1': -993, 'calcValueOfTokenInToken:token2': -992, 'calcSwapValueInBase:token': -991, 'calcSwapValueInToken:token': -990, 'requirePriceBounds:token': -989, 'getRewardShare:token': -988, 'getProtection:member': -987, 'getProtection:token': -986, 'getCoverage:member': -985, 'getCoverage:token': -984, 'getCollateralValueInBase:member': -983, 'getCollateralValueInBase:collateralAsset': -982, 'getCollateralValueInBase:debtAsset': -981, 'getDebtValueInCollateral:member': -980, 'getDebtValueInCollateral:collateralAsset': -979, 'getDebtValueInCollateral:debtAsset': -978}
Add to address_to_label {'global:FACTORY': 1, 'global:POOLS': 2, 'global:USDV': 3, 'global:VADER': 4, 'global:ROUTER': 5, 'assetChecks:collateralAsset': -999, 'assetChecks:debtAsset': -998, 'isBase:token': -997, 'isPool:token': -996, 'calcValueInBase:token': -995, 'calcValueInToken:token': -994, 'calcValueOfTokenInToken:token1': -993, 'calcValueOfTokenInToken:token2': -992, 'calcSwapValueInBase:token': -991, 'calcSwapValueInToken:token': -990, 'requirePriceBounds:token': -989, 'getRewardShare:token': -988, 'getProtection:member': -987, 'getProtection:token': -986, 'getCoverage:member': -985, 'getCoverage:token': -984, 'getCollateralValueInBase:member': -983, 'getCollateralValueInBase:collateralAsset': -982, 'getCollateralValueInBase:debtAsset': -981, 'getDebtValueInCollateral:member': -980, 'getDebtValueInCollateral:collateralAsset': -979, 'getDebtValueInCollateral:debtAsset': -978, 'getInterestOwed:collateralAsset': -977}
Add to address_to_label {'global:FACTORY': 1, 'global:POOLS': 2, 'global:USDV': 3, 'global:VADER': 4, 'global:ROUTER': 5, 'assetChecks:collateralAsset': -999, 'assetChecks:debtAsset': -998, 'isBase:token': -997, 'isPool:token': -996, 'calcValueInBase:token': -995, 'calcValueInToken:token': -994, 'calcValueOfTokenInToken:token1': -993, 'calcValueOfTokenInToken:token2': -992, 'calcSwapValueInBase:token': -991, 'calcSwapValueInToken:token': -990, 'requirePriceBounds:token': -989, 'getRewardShare:token': -988, 'getProtection:member': -987, 'getProtection:token': -986, 'getCoverage:member': -985, 'getCoverage:token': -984, 'getCollateralValueInBase:member': -983, 'getCollateralValueInBase:collateralAsset': -982, 'getCollateralValueInBase:debtAsset': -981, 'getDebtValueInCollateral:member': -980, 'getDebtValueInCollateral:collateralAsset': -979, 'getDebtValueInCollateral:debtAsset': -978, 'getInterestOwed:collateralAsset': -977, 'getInterestOwed:debtAsset': -976}
Add to address_to_label {'global:FACTORY': 1, 'global:POOLS': 2, 'global:USDV': 3, 'global:VADER': 4, 'global:ROUTER': 5, 'assetChecks:collateralAsset': -999, 'assetChecks:debtAsset': -998, 'isBase:token': -997, 'isPool:token': -996, 'calcValueInBase:token': -995, 'calcValueInToken:token': -994, 'calcValueOfTokenInToken:token1': -993, 'calcValueOfTokenInToken:token2': -992, 'calcSwapValueInBase:token': -991, 'calcSwapValueInToken:token': -990, 'requirePriceBounds:token': -989, 'getRewardShare:token': -988, 'getProtection:member': -987, 'getProtection:token': -986, 'getCoverage:member': -985, 'getCoverage:token': -984, 'getCollateralValueInBase:member': -983, 'getCollateralValueInBase:collateralAsset': -982, 'getCollateralValueInBase:debtAsset': -981, 'getDebtValueInCollateral:member': -980, 'getDebtValueInCollateral:collateralAsset': -979, 'getDebtValueInCollateral:debtAsset': -978, 'getInterestOwed:collateralAsset': -977, 'getInterestOwed:debtAsset': -976, 'getInterestPayment:collateralAsset': -975}
Add to address_to_label {'global:FACTORY': 1, 'global:POOLS': 2, 'global:USDV': 3, 'global:VADER': 4, 'global:ROUTER': 5, 'assetChecks:collateralAsset': -999, 'assetChecks:debtAsset': -998, 'isBase:token': -997, 'isPool:token': -996, 'calcValueInBase:token': -995, 'calcValueInToken:token': -994, 'calcValueOfTokenInToken:token1': -993, 'calcValueOfTokenInToken:token2': -992, 'calcSwapValueInBase:token': -991, 'calcSwapValueInToken:token': -990, 'requirePriceBounds:token': -989, 'getRewardShare:token': -988, 'getProtection:member': -987, 'getProtection:token': -986, 'getCoverage:member': -985, 'getCoverage:token': -984, 'getCollateralValueInBase:member': -983, 'getCollateralValueInBase:collateralAsset': -982, 'getCollateralValueInBase:debtAsset': -981, 'getDebtValueInCollateral:member': -980, 'getDebtValueInCollateral:collateralAsset': -979, 'getDebtValueInCollateral:debtAsset': -978, 'getInterestOwed:collateralAsset': -977, 'getInterestOwed:debtAsset': -976, 'getInterestPayment:collateralAsset': -975, 'getInterestPayment:debtAsset': -974}
Add to address_to_label {'global:FACTORY': 1, 'global:POOLS': 2, 'global:USDV': 3, 'global:VADER': 4, 'global:ROUTER': 5, 'assetChecks:collateralAsset': -999, 'assetChecks:debtAsset': -998, 'isBase:token': -997, 'isPool:token': -996, 'calcValueInBase:token': -995, 'calcValueInToken:token': -994, 'calcValueOfTokenInToken:token1': -993, 'calcValueOfTokenInToken:token2': -992, 'calcSwapValueInBase:token': -991, 'calcSwapValueInToken:token': -990, 'requirePriceBounds:token': -989, 'getRewardShare:token': -988, 'getProtection:member': -987, 'getProtection:token': -986, 'getCoverage:member': -985, 'getCoverage:token': -984, 'getCollateralValueInBase:member': -983, 'getCollateralValueInBase:collateralAsset': -982, 'getCollateralValueInBase:debtAsset': -981, 'getDebtValueInCollateral:member': -980, 'getDebtValueInCollateral:collateralAsset': -979, 'getDebtValueInCollateral:debtAsset': -978, 'getInterestOwed:collateralAsset': -977, 'getInterestOwed:debtAsset': -976, 'getInterestPayment:collateralAsset': -975, 'getInterestPayment:debtAsset': -974, 'getDebtLoading:collateralAsset': -973}
Add to address_to_label {'global:FACTORY': 1, 'global:POOLS': 2, 'global:USDV': 3, 'global:VADER': 4, 'global:ROUTER': 5, 'assetChecks:collateralAsset': -999, 'assetChecks:debtAsset': -998, 'isBase:token': -997, 'isPool:token': -996, 'calcValueInBase:token': -995, 'calcValueInToken:token': -994, 'calcValueOfTokenInToken:token1': -993, 'calcValueOfTokenInToken:token2': -992, 'calcSwapValueInBase:token': -991, 'calcSwapValueInToken:token': -990, 'requirePriceBounds:token': -989, 'getRewardShare:token': -988, 'getProtection:member': -987, 'getProtection:token': -986, 'getCoverage:member': -985, 'getCoverage:token': -984, 'getCollateralValueInBase:member': -983, 'getCollateralValueInBase:collateralAsset': -982, 'getCollateralValueInBase:debtAsset': -981, 'getDebtValueInCollateral:member': -980, 'getDebtValueInCollateral:collateralAsset': -979, 'getDebtValueInCollateral:debtAsset': -978, 'getInterestOwed:collateralAsset': -977, 'getInterestOwed:debtAsset': -976, 'getInterestPayment:collateralAsset': -975, 'getInterestPayment:debtAsset': -974, 'getDebtLoading:collateralAsset': -973, 'getDebtLoading:debtAsset': -972}
Add to address_to_label {'global:FACTORY': 1, 'global:POOLS': 2, 'global:USDV': 3, 'global:VADER': 4, 'global:ROUTER': 5, 'assetChecks:collateralAsset': -999, 'assetChecks:debtAsset': -998, 'isBase:token': -997, 'isPool:token': -996, 'calcValueInBase:token': -995, 'calcValueInToken:token': -994, 'calcValueOfTokenInToken:token1': -993, 'calcValueOfTokenInToken:token2': -992, 'calcSwapValueInBase:token': -991, 'calcSwapValueInToken:token': -990, 'requirePriceBounds:token': -989, 'getRewardShare:token': -988, 'getProtection:member': -987, 'getProtection:token': -986, 'getCoverage:member': -985, 'getCoverage:token': -984, 'getCollateralValueInBase:member': -983, 'getCollateralValueInBase:collateralAsset': -982, 'getCollateralValueInBase:debtAsset': -981, 'getDebtValueInCollateral:member': -980, 'getDebtValueInCollateral:collateralAsset': -979, 'getDebtValueInCollateral:debtAsset': -978, 'getInterestOwed:collateralAsset': -977, 'getInterestOwed:debtAsset': -976, 'getInterestPayment:collateralAsset': -975, 'getInterestPayment:debtAsset': -974, 'getDebtLoading:collateralAsset': -973, 'getDebtLoading:debtAsset': -972, 'getDebtAsset:debtAsset': -971}
Finding type for one(uint256 ... )
Finding type for POOLS(address ... )
prev address? u
Head Addr: 2
    Norm: 0
    Set: {2}
    Fin: NULL
Finding type for FACTORY(address ... )
prev address? u
Head Addr: 1
    Norm: 0
    Set: {1}
    Fin: NULL
Finding type for _year(uint256 ... )
Finding type for ROUTER(address ... )
prev address? u
Head Addr: 5
    Norm: 0
    Set: {5}
    Fin: NULL
Finding type for VADER(address ... )
prev address? u
Head Addr: 4
    Norm: 0
    Set: {4}
    Fin: NULL
Finding type for USDV(address ... )
prev address? u
Head Addr: 3
    Norm: 0
    Set: {3}
    Fin: NULL
Finding type for inited(bool ... )
Finding type for _10k(uint256 ... )



constructor




Propogating parameters and globals to SSA variables...
End popogation




Propogating parameters and globals to SSA variables...
End popogation



init



getFeeOnTransfer
Finding type for totalSupply(uint256 ... )
Finding type for maxSupply(uint256 ... )
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1


TMP_2(uint256) = INTERNAL_CALL, Utils.calcShare(uint256,uint256,uint256)(totalSupply_1,maxSupply_1,100)
RETURN TMP_2


Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
maxSupply_1
maxSupply_1
maxSupply
maxSupply

Name: maxSupply_1 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
totalSupply_1
totalSupply_1
totalSupply
totalSupply

Name: totalSupply_1 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_2(uint256) = INTERNAL_CALL, Utils.calcShare(uint256,uint256,uint256)(totalSupply_1,maxSupply_1,100)
[i]Type for TMP_2

Name: TMP_2 Function: getFeeOnTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_2


TMP_2(uint256) = INTERNAL_CALL, Utils.calcShare(uint256,uint256,uint256)(totalSupply_1,maxSupply_1,100)
RETURN TMP_2


Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
maxSupply_1
maxSupply_1
maxSupply
maxSupply

Name: maxSupply_1 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
totalSupply_1
totalSupply_1
totalSupply
totalSupply

Name: totalSupply_1 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_2(uint256) = INTERNAL_CALL, Utils.calcShare(uint256,uint256,uint256)(totalSupply_1,maxSupply_1,100)
[i]Type for TMP_2

Name: TMP_2 Function: getFeeOnTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_2



assetChecks
Finding type for collateralAsset(address ... )
prev address? u
Head Addr: -999
    Norm: 0
    Set: {-999}
    Fin: NULL
Finding type for debtAsset(address ... )
prev address? u
Head Addr: -998
    Norm: 0
    Set: {-998}
    Fin: NULL
Param: 0
    num: []
    den: []
    norm: u
    link: collateralAsset
    fields: []
    fintype: -1
Param: 1
    num: []
    den: []
    norm: u
    link: debtAsset
    fields: []
    fintype: -1


VADER_2(address) := ϕ(['VADER_0', 'VADER_6', 'VADER_1'])
USDV_2(address) := ϕ(['USDV_0', 'USDV_1'])
POOLS_2(address) := ϕ(['POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_35', 'POOLS_32', 'POOLS_9', 'POOLS_1', 'POOLS_26', 'POOLS_11', 'POOLS_21', 'POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_0', 'POOLS_29', 'POOLS_47'])
TMP_3(bool) = collateralAsset_1 == VADER_2
CONDITION TMP_3
TMP_7(bool) = collateralAsset_1 == USDV_2
CONDITION TMP_7
TMP_11 = CONVERT POOLS_2 to iPOOLS
TMP_12(bool) = HIGH_LEVEL_CALL, dest:TMP_11(iPOOLS), function:isSynth, arguments:['collateralAsset_1']  
POOLS_3(address) := ϕ(['POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_35', 'POOLS_32', 'POOLS_1', 'POOLS_9', 'POOLS_26', 'POOLS_11', 'POOLS_21', 'POOLS_2', 'POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_47'])
TMP_13 = CONVERT POOLS_3 to iPOOLS
TMP_14 = CONVERT collateralAsset_1 to iSYNTH
TMP_15(address) = HIGH_LEVEL_CALL, dest:TMP_14(iSYNTH), function:TOKEN, arguments:[]  
POOLS_4(address) := ϕ(['POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_3', 'POOLS_35', 'POOLS_32', 'POOLS_1', 'POOLS_9', 'POOLS_26', 'POOLS_11', 'POOLS_21', 'POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_47'])
TMP_16(bool) = HIGH_LEVEL_CALL, dest:TMP_13(iPOOLS), function:isAnchor, arguments:['TMP_15']  
POOLS_5(address) := ϕ(['POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_35', 'POOLS_32', 'POOLS_1', 'POOLS_9', 'POOLS_26', 'POOLS_11', 'POOLS_21', 'POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_4', 'POOLS_47'])
TMP_17(bool) = TMP_12 && TMP_16
CONDITION TMP_17
TMP_8 = CONVERT POOLS_2 to iPOOLS
TMP_9(bool) = HIGH_LEVEL_CALL, dest:TMP_8(iPOOLS), function:isAsset, arguments:['debtAsset_1']  
POOLS_11(address) := ϕ(['POOLS_45', 'POOLS_26', 'POOLS_1', 'POOLS_54', 'POOLS_10', 'POOLS_19', 'POOLS_29', 'POOLS_11', 'POOLS_21', 'POOLS_47', 'POOLS_12', 'POOLS_8', 'POOLS_17', 'POOLS_23', 'POOLS_35', 'POOLS_15', 'POOLS_32', 'POOLS_9'])
TMP_10(None) = SOLIDITY_CALL require(bool,string)(TMP_9,Bad Combo)
TMP_4 = CONVERT POOLS_2 to iPOOLS
TMP_5(bool) = HIGH_LEVEL_CALL, dest:TMP_4(iPOOLS), function:isAnchor, arguments:['debtAsset_1']  
POOLS_12(address) := ϕ(['POOLS_45', 'POOLS_26', 'POOLS_1', 'POOLS_54', 'POOLS_10', 'POOLS_19', 'POOLS_29', 'POOLS_11', 'POOLS_21', 'POOLS_47', 'POOLS_12', 'POOLS_8', 'POOLS_17', 'POOLS_23', 'POOLS_35', 'POOLS_15', 'POOLS_32', 'POOLS_9'])
TMP_6(None) = SOLIDITY_CALL require(bool,string)(TMP_5,Bad Combo)
TMP_21 = CONVERT POOLS_5 to iPOOLS
TMP_22(bool) = HIGH_LEVEL_CALL, dest:TMP_21(iPOOLS), function:isSynth, arguments:['collateralAsset_1']  
POOLS_6(address) := ϕ(['POOLS_54', 'POOLS_10', 'POOLS_5', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_35', 'POOLS_32', 'POOLS_1', 'POOLS_9', 'POOLS_26', 'POOLS_11', 'POOLS_21', 'POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_47'])
TMP_23 = CONVERT POOLS_6 to iPOOLS
TMP_24 = CONVERT collateralAsset_1 to iSYNTH
TMP_25(address) = HIGH_LEVEL_CALL, dest:TMP_24(iSYNTH), function:TOKEN, arguments:[]  
POOLS_7(address) := ϕ(['POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_35', 'POOLS_32', 'POOLS_1', 'POOLS_9', 'POOLS_26', 'POOLS_11', 'POOLS_21', 'POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_6', 'POOLS_47'])
TMP_26(bool) = HIGH_LEVEL_CALL, dest:TMP_23(iPOOLS), function:isAsset, arguments:['TMP_25']  
POOLS_8(address) := ϕ(['POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_35', 'POOLS_32', 'POOLS_7', 'POOLS_1', 'POOLS_9', 'POOLS_26', 'POOLS_11', 'POOLS_21', 'POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_47'])
TMP_27(bool) = TMP_22 && TMP_26
CONDITION TMP_27
TMP_18 = CONVERT POOLS_5 to iPOOLS
TMP_19(bool) = HIGH_LEVEL_CALL, dest:TMP_18(iPOOLS), function:isAnchor, arguments:['debtAsset_1']  
POOLS_10(address) := ϕ(['POOLS_45', 'POOLS_26', 'POOLS_1', 'POOLS_54', 'POOLS_10', 'POOLS_19', 'POOLS_29', 'POOLS_11', 'POOLS_21', 'POOLS_47', 'POOLS_12', 'POOLS_8', 'POOLS_17', 'POOLS_23', 'POOLS_35', 'POOLS_15', 'POOLS_32', 'POOLS_9'])
TMP_20(None) = SOLIDITY_CALL require(bool,string)(TMP_19,Bad Combo)
TMP_28 = CONVERT POOLS_8 to iPOOLS
TMP_29(bool) = HIGH_LEVEL_CALL, dest:TMP_28(iPOOLS), function:isAsset, arguments:['debtAsset_1']  
POOLS_9(address) := ϕ(['POOLS_45', 'POOLS_26', 'POOLS_1', 'POOLS_54', 'POOLS_10', 'POOLS_19', 'POOLS_29', 'POOLS_11', 'POOLS_21', 'POOLS_47', 'POOLS_12', 'POOLS_8', 'POOLS_17', 'POOLS_23', 'POOLS_35', 'POOLS_15', 'POOLS_32', 'POOLS_9'])
TMP_30(None) = SOLIDITY_CALL require(bool,string)(TMP_29,Bad Combo)


Propogating parameters and globals to SSA variables...
End popogation
VADER_2
VADER
VADER

Name: None Function: None
Num: -1
Den: -1
Address: 4
Norm: u
LF: VADER
Value: u
Fields: 
Finance Type: undef
USDV_2
USDV
USDV

Name: None Function: None
Num: -1
Den: -1
Address: 3
Norm: u
LF: USDV
Value: u
Fields: 
Finance Type: undef
POOLS_2
POOLS
POOLS

Name: None Function: None
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
VADER_2(address) := ϕ(['VADER_0', 'VADER_6', 'VADER_1'])
Phi
[i]Type for VADER

Name: VADER Function: assetChecks
Num: -1
Den: -1
Address: 4
Norm: u
LF: VADER
Value: u
Fields: 
Finance Type: undef
XXXX
USDV_2(address) := ϕ(['USDV_0', 'USDV_1'])
Phi
[i]Type for USDV

Name: USDV Function: assetChecks
Num: -1
Den: -1
Address: 3
Norm: u
LF: USDV
Value: u
Fields: 
Finance Type: undef
XXXX
POOLS_2(address) := ϕ(['POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_35', 'POOLS_32', 'POOLS_9', 'POOLS_1', 'POOLS_26', 'POOLS_11', 'POOLS_21', 'POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_0', 'POOLS_29', 'POOLS_47'])
Phi
[i]Type for POOLS

Name: POOLS Function: assetChecks
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
VADER_2
VADER_2
VADER

Name: VADER Function: assetChecks
Num: -1
Den: -1
Address: 4
Norm: u
LF: VADER
Value: u
Fields: 
Finance Type: undef
collateralAsset_1
collateralAsset_1
collateralAsset

Name: collateralAsset_1 Function: None
Num: 
Den: 
Address: -999
Norm: u
LF: collateralAsset
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_3(bool) = collateralAsset_1 == VADER_2
[i]Type for TMP_3

Name: TMP_3 Function: assetChecks
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
collateralAsset_1
collateralAsset_1
collateralAsset

Name: collateralAsset_1 Function: None
Num: 
Den: 
Address: -999
Norm: u
LF: collateralAsset
Value: u
Fields: 
Finance Type: undef
USDV_2
USDV_2
USDV

Name: USDV Function: assetChecks
Num: -1
Den: -1
Address: 3
Norm: u
LF: USDV
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_7(bool) = collateralAsset_1 == USDV_2
[i]Type for TMP_7

Name: TMP_7 Function: assetChecks
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
POOLS_3
POOLS_3
POOLS
POOLS

Name: None Function: None
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
POOLS_2
POOLS_2
POOLS

Name: POOLS Function: assetChecks
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
collateralAsset_1
collateralAsset_1
collateralAsset

Name: collateralAsset_1 Function: None
Num: 
Den: 
Address: -999
Norm: u
LF: collateralAsset
Value: u
Fields: 
Finance Type: undef
End popogation
POOLS_3
POOLS

Name: None Function: None
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
POOLS_4
POOLS
POOLS

Name: None Function: None
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
POOLS_5
POOLS
POOLS

Name: None Function: None
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_11 = CONVERT POOLS_2 to iPOOLS
Converting POOLS_2

Name: POOLS Function: assetChecks
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
POOLS
[i]Type for TMP_11

Name: TMP_11 Function: assetChecks
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_12(bool) = HIGH_LEVEL_CALL, dest:TMP_11(iPOOLS), function:isSynth, arguments:['collateralAsset_1']  
High Call: isSynth
Running querryfc
[i]Type for TMP_12

Name: TMP_12 Function: assetChecks
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
POOLS_3(address) := ϕ(['POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_35', 'POOLS_32', 'POOLS_1', 'POOLS_9', 'POOLS_26', 'POOLS_11', 'POOLS_21', 'POOLS_2', 'POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_47'])
Phi
[i]Type for POOLS

Name: POOLS Function: assetChecks
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_13 = CONVERT POOLS_3 to iPOOLS
Converting POOLS_3

Name: POOLS Function: assetChecks
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
POOLS
[i]Type for TMP_13

Name: TMP_13 Function: assetChecks
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_14 = CONVERT collateralAsset_1 to iSYNTH
Converting collateralAsset_1

Name: collateralAsset_1 Function: None
Num: 
Den: 
Address: -999
Norm: u
LF: collateralAsset
Value: u
Fields: 
Finance Type: undef
SYNTH
[i]Type for TMP_14

Name: TMP_14 Function: assetChecks
Num: 
Den: 
Address: -999
Norm: u
LF: SYNTH
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_15(address) = HIGH_LEVEL_CALL, dest:TMP_14(iSYNTH), function:TOKEN, arguments:[]  
High Call: TOKEN
Running querryfc
Written func info: SYNTH, TOKEN
Retvar: ('c', [-1], [-1], 'u', 'u', 'global:POOLS')
([-1], [-1], 'u', 'global:POOLS', -1)
[i]Type for TMP_15

Name: TMP_15 Function: assetChecks
Num: -1
Den: -1
Address: -1
Norm: u
LF: None
Value: global:POOLS
Fields: 
Finance Type: undef
XXXX
POOLS_4(address) := ϕ(['POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_3', 'POOLS_35', 'POOLS_32', 'POOLS_1', 'POOLS_9', 'POOLS_26', 'POOLS_11', 'POOLS_21', 'POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_47'])
Phi
[i]Type for POOLS

Name: POOLS Function: assetChecks
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_16(bool) = HIGH_LEVEL_CALL, dest:TMP_13(iPOOLS), function:isAnchor, arguments:['TMP_15']  
High Call: isAnchor
Running querryfc
[i]Type for TMP_16

Name: TMP_16 Function: assetChecks
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
POOLS_5(address) := ϕ(['POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_35', 'POOLS_32', 'POOLS_1', 'POOLS_9', 'POOLS_26', 'POOLS_11', 'POOLS_21', 'POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_4', 'POOLS_47'])
Phi
[i]Type for POOLS

Name: POOLS Function: assetChecks
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_17(bool) = TMP_12 && TMP_16
[i]Type for TMP_17

Name: TMP_17 Function: assetChecks
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
POOLS_2
POOLS_2
POOLS

Name: POOLS Function: assetChecks
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
debtAsset_1
debtAsset_1
debtAsset

Name: debtAsset_1 Function: None
Num: 
Den: 
Address: -998
Norm: u
LF: debtAsset
Value: u
Fields: 
Finance Type: undef
End popogation
POOLS_11
POOLS
POOLS

Name: None Function: None
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_8 = CONVERT POOLS_2 to iPOOLS
Converting POOLS_2

Name: POOLS Function: assetChecks
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
POOLS
[i]Type for TMP_8

Name: TMP_8 Function: assetChecks
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_9(bool) = HIGH_LEVEL_CALL, dest:TMP_8(iPOOLS), function:isAsset, arguments:['debtAsset_1']  
High Call: isAsset
Running querryfc
[i]Type for TMP_9

Name: TMP_9 Function: assetChecks
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
POOLS_11(address) := ϕ(['POOLS_45', 'POOLS_26', 'POOLS_1', 'POOLS_54', 'POOLS_10', 'POOLS_19', 'POOLS_29', 'POOLS_11', 'POOLS_21', 'POOLS_47', 'POOLS_12', 'POOLS_8', 'POOLS_17', 'POOLS_23', 'POOLS_35', 'POOLS_15', 'POOLS_32', 'POOLS_9'])
Phi
[i]Type for POOLS

Name: POOLS Function: assetChecks
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_10(None) = SOLIDITY_CALL require(bool,string)(TMP_9,Bad Combo)
[i]Type for TMP_10

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
POOLS_2
POOLS_2
POOLS

Name: POOLS Function: assetChecks
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
debtAsset_1
debtAsset_1
debtAsset

Name: debtAsset_1 Function: None
Num: 
Den: 
Address: -998
Norm: u
LF: debtAsset
Value: u
Fields: 
Finance Type: undef
End popogation
POOLS_12
POOLS
POOLS

Name: None Function: None
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_4 = CONVERT POOLS_2 to iPOOLS
Converting POOLS_2

Name: POOLS Function: assetChecks
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
POOLS
[i]Type for TMP_4

Name: TMP_4 Function: assetChecks
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_5(bool) = HIGH_LEVEL_CALL, dest:TMP_4(iPOOLS), function:isAnchor, arguments:['debtAsset_1']  
High Call: isAnchor
Running querryfc
[i]Type for TMP_5

Name: TMP_5 Function: assetChecks
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
POOLS_12(address) := ϕ(['POOLS_45', 'POOLS_26', 'POOLS_1', 'POOLS_54', 'POOLS_10', 'POOLS_19', 'POOLS_29', 'POOLS_11', 'POOLS_21', 'POOLS_47', 'POOLS_12', 'POOLS_8', 'POOLS_17', 'POOLS_23', 'POOLS_35', 'POOLS_15', 'POOLS_32', 'POOLS_9'])
Phi
[i]Type for POOLS

Name: POOLS Function: assetChecks
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_6(None) = SOLIDITY_CALL require(bool,string)(TMP_5,Bad Combo)
[i]Type for TMP_6

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
collateralAsset_1
collateralAsset_1
collateralAsset

Name: collateralAsset Function: None
Num: 
Den: 
Address: -999
Norm: u
LF: collateralAsset
Value: u
Fields: 
Finance Type: undef
POOLS_6
POOLS_6
POOLS
POOLS

Name: None Function: None
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
POOLS_5
POOLS_5
POOLS

Name: POOLS Function: assetChecks
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
End popogation
POOLS_6
POOLS

Name: None Function: None
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
POOLS_7
POOLS
POOLS

Name: None Function: None
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
POOLS_8
POOLS
POOLS

Name: None Function: None
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_21 = CONVERT POOLS_5 to iPOOLS
Converting POOLS_5

Name: POOLS Function: assetChecks
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
POOLS
[i]Type for TMP_21

Name: TMP_21 Function: assetChecks
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_22(bool) = HIGH_LEVEL_CALL, dest:TMP_21(iPOOLS), function:isSynth, arguments:['collateralAsset_1']  
High Call: isSynth
Running querryfc
[i]Type for TMP_22

Name: TMP_22 Function: assetChecks
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
POOLS_6(address) := ϕ(['POOLS_54', 'POOLS_10', 'POOLS_5', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_35', 'POOLS_32', 'POOLS_1', 'POOLS_9', 'POOLS_26', 'POOLS_11', 'POOLS_21', 'POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_47'])
Phi
[i]Type for POOLS

Name: POOLS Function: assetChecks
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_23 = CONVERT POOLS_6 to iPOOLS
Converting POOLS_6

Name: POOLS Function: assetChecks
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
POOLS
[i]Type for TMP_23

Name: TMP_23 Function: assetChecks
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_24 = CONVERT collateralAsset_1 to iSYNTH
Converting collateralAsset_1

Name: collateralAsset Function: None
Num: 
Den: 
Address: -999
Norm: u
LF: collateralAsset
Value: u
Fields: 
Finance Type: undef
SYNTH
[i]Type for TMP_24

Name: TMP_24 Function: assetChecks
Num: 
Den: 
Address: -999
Norm: u
LF: SYNTH
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_25(address) = HIGH_LEVEL_CALL, dest:TMP_24(iSYNTH), function:TOKEN, arguments:[]  
High Call: TOKEN
Running querryfc
Written func info: SYNTH, TOKEN
Retvar: ('c', [-1], [-1], 'u', 'u', 'global:POOLS')
([-1], [-1], 'u', 'global:POOLS', -1)
[i]Type for TMP_25

Name: TMP_25 Function: assetChecks
Num: -1
Den: -1
Address: -1
Norm: u
LF: None
Value: global:POOLS
Fields: 
Finance Type: undef
XXXX
POOLS_7(address) := ϕ(['POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_35', 'POOLS_32', 'POOLS_1', 'POOLS_9', 'POOLS_26', 'POOLS_11', 'POOLS_21', 'POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_6', 'POOLS_47'])
Phi
[i]Type for POOLS

Name: POOLS Function: assetChecks
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_26(bool) = HIGH_LEVEL_CALL, dest:TMP_23(iPOOLS), function:isAsset, arguments:['TMP_25']  
High Call: isAsset
Running querryfc
[i]Type for TMP_26

Name: TMP_26 Function: assetChecks
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
POOLS_8(address) := ϕ(['POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_35', 'POOLS_32', 'POOLS_7', 'POOLS_1', 'POOLS_9', 'POOLS_26', 'POOLS_11', 'POOLS_21', 'POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_47'])
Phi
[i]Type for POOLS

Name: POOLS Function: assetChecks
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_27(bool) = TMP_22 && TMP_26
[i]Type for TMP_27

Name: TMP_27 Function: assetChecks
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
debtAsset_1
debtAsset_1
debtAsset

Name: debtAsset_1 Function: None
Num: 
Den: 
Address: -998
Norm: u
LF: debtAsset
Value: u
Fields: 
Finance Type: undef
POOLS_5
POOLS_5
POOLS

Name: POOLS Function: assetChecks
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
End popogation
POOLS_10
POOLS
POOLS

Name: None Function: None
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_18 = CONVERT POOLS_5 to iPOOLS
Converting POOLS_5

Name: POOLS Function: assetChecks
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
POOLS
[i]Type for TMP_18

Name: TMP_18 Function: assetChecks
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_19(bool) = HIGH_LEVEL_CALL, dest:TMP_18(iPOOLS), function:isAnchor, arguments:['debtAsset_1']  
High Call: isAnchor
Running querryfc
[i]Type for TMP_19

Name: TMP_19 Function: assetChecks
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
POOLS_10(address) := ϕ(['POOLS_45', 'POOLS_26', 'POOLS_1', 'POOLS_54', 'POOLS_10', 'POOLS_19', 'POOLS_29', 'POOLS_11', 'POOLS_21', 'POOLS_47', 'POOLS_12', 'POOLS_8', 'POOLS_17', 'POOLS_23', 'POOLS_35', 'POOLS_15', 'POOLS_32', 'POOLS_9'])
Phi
[i]Type for POOLS

Name: POOLS Function: assetChecks
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_20(None) = SOLIDITY_CALL require(bool,string)(TMP_19,Bad Combo)
[i]Type for TMP_20

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
debtAsset_1
debtAsset_1
debtAsset

Name: debtAsset_1 Function: None
Num: 
Den: 
Address: -998
Norm: u
LF: debtAsset
Value: u
Fields: 
Finance Type: undef
POOLS_8
POOLS_8
POOLS

Name: POOLS Function: assetChecks
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
End popogation
POOLS_9
POOLS
POOLS

Name: None Function: None
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_28 = CONVERT POOLS_8 to iPOOLS
Converting POOLS_8

Name: POOLS Function: assetChecks
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
POOLS
[i]Type for TMP_28

Name: TMP_28 Function: assetChecks
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_29(bool) = HIGH_LEVEL_CALL, dest:TMP_28(iPOOLS), function:isAsset, arguments:['debtAsset_1']  
High Call: isAsset
Running querryfc
[i]Type for TMP_29

Name: TMP_29 Function: assetChecks
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
POOLS_9(address) := ϕ(['POOLS_45', 'POOLS_26', 'POOLS_1', 'POOLS_54', 'POOLS_10', 'POOLS_19', 'POOLS_29', 'POOLS_11', 'POOLS_21', 'POOLS_47', 'POOLS_12', 'POOLS_8', 'POOLS_17', 'POOLS_23', 'POOLS_35', 'POOLS_15', 'POOLS_32', 'POOLS_9'])
Phi
[i]Type for POOLS

Name: POOLS Function: assetChecks
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_30(None) = SOLIDITY_CALL require(bool,string)(TMP_29,Bad Combo)
[i]Type for TMP_30

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation


VADER_2(address) := ϕ(['VADER_0', 'VADER_6', 'VADER_1'])
USDV_2(address) := ϕ(['USDV_0', 'USDV_1'])
POOLS_2(address) := ϕ(['POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_35', 'POOLS_32', 'POOLS_9', 'POOLS_1', 'POOLS_26', 'POOLS_11', 'POOLS_21', 'POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_0', 'POOLS_29', 'POOLS_47'])
TMP_3(bool) = collateralAsset_1 == VADER_2
CONDITION TMP_3
TMP_7(bool) = collateralAsset_1 == USDV_2
CONDITION TMP_7
TMP_11 = CONVERT POOLS_2 to iPOOLS
TMP_12(bool) = HIGH_LEVEL_CALL, dest:TMP_11(iPOOLS), function:isSynth, arguments:['collateralAsset_1']  
POOLS_3(address) := ϕ(['POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_35', 'POOLS_32', 'POOLS_1', 'POOLS_9', 'POOLS_26', 'POOLS_11', 'POOLS_21', 'POOLS_2', 'POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_47'])
TMP_13 = CONVERT POOLS_3 to iPOOLS
TMP_14 = CONVERT collateralAsset_1 to iSYNTH
TMP_15(address) = HIGH_LEVEL_CALL, dest:TMP_14(iSYNTH), function:TOKEN, arguments:[]  
POOLS_4(address) := ϕ(['POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_3', 'POOLS_35', 'POOLS_32', 'POOLS_1', 'POOLS_9', 'POOLS_26', 'POOLS_11', 'POOLS_21', 'POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_47'])
TMP_16(bool) = HIGH_LEVEL_CALL, dest:TMP_13(iPOOLS), function:isAnchor, arguments:['TMP_15']  
POOLS_5(address) := ϕ(['POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_35', 'POOLS_32', 'POOLS_1', 'POOLS_9', 'POOLS_26', 'POOLS_11', 'POOLS_21', 'POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_4', 'POOLS_47'])
TMP_17(bool) = TMP_12 && TMP_16
CONDITION TMP_17
TMP_8 = CONVERT POOLS_2 to iPOOLS
TMP_9(bool) = HIGH_LEVEL_CALL, dest:TMP_8(iPOOLS), function:isAsset, arguments:['debtAsset_1']  
POOLS_11(address) := ϕ(['POOLS_45', 'POOLS_26', 'POOLS_1', 'POOLS_54', 'POOLS_10', 'POOLS_19', 'POOLS_29', 'POOLS_11', 'POOLS_21', 'POOLS_47', 'POOLS_12', 'POOLS_8', 'POOLS_17', 'POOLS_23', 'POOLS_35', 'POOLS_15', 'POOLS_32', 'POOLS_9'])
TMP_10(None) = SOLIDITY_CALL require(bool,string)(TMP_9,Bad Combo)
TMP_4 = CONVERT POOLS_2 to iPOOLS
TMP_5(bool) = HIGH_LEVEL_CALL, dest:TMP_4(iPOOLS), function:isAnchor, arguments:['debtAsset_1']  
POOLS_12(address) := ϕ(['POOLS_45', 'POOLS_26', 'POOLS_1', 'POOLS_54', 'POOLS_10', 'POOLS_19', 'POOLS_29', 'POOLS_11', 'POOLS_21', 'POOLS_47', 'POOLS_12', 'POOLS_8', 'POOLS_17', 'POOLS_23', 'POOLS_35', 'POOLS_15', 'POOLS_32', 'POOLS_9'])
TMP_6(None) = SOLIDITY_CALL require(bool,string)(TMP_5,Bad Combo)
TMP_21 = CONVERT POOLS_5 to iPOOLS
TMP_22(bool) = HIGH_LEVEL_CALL, dest:TMP_21(iPOOLS), function:isSynth, arguments:['collateralAsset_1']  
POOLS_6(address) := ϕ(['POOLS_54', 'POOLS_10', 'POOLS_5', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_35', 'POOLS_32', 'POOLS_1', 'POOLS_9', 'POOLS_26', 'POOLS_11', 'POOLS_21', 'POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_47'])
TMP_23 = CONVERT POOLS_6 to iPOOLS
TMP_24 = CONVERT collateralAsset_1 to iSYNTH
TMP_25(address) = HIGH_LEVEL_CALL, dest:TMP_24(iSYNTH), function:TOKEN, arguments:[]  
POOLS_7(address) := ϕ(['POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_35', 'POOLS_32', 'POOLS_1', 'POOLS_9', 'POOLS_26', 'POOLS_11', 'POOLS_21', 'POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_6', 'POOLS_47'])
TMP_26(bool) = HIGH_LEVEL_CALL, dest:TMP_23(iPOOLS), function:isAsset, arguments:['TMP_25']  
POOLS_8(address) := ϕ(['POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_35', 'POOLS_32', 'POOLS_7', 'POOLS_1', 'POOLS_9', 'POOLS_26', 'POOLS_11', 'POOLS_21', 'POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_47'])
TMP_27(bool) = TMP_22 && TMP_26
CONDITION TMP_27
TMP_18 = CONVERT POOLS_5 to iPOOLS
TMP_19(bool) = HIGH_LEVEL_CALL, dest:TMP_18(iPOOLS), function:isAnchor, arguments:['debtAsset_1']  
POOLS_10(address) := ϕ(['POOLS_45', 'POOLS_26', 'POOLS_1', 'POOLS_54', 'POOLS_10', 'POOLS_19', 'POOLS_29', 'POOLS_11', 'POOLS_21', 'POOLS_47', 'POOLS_12', 'POOLS_8', 'POOLS_17', 'POOLS_23', 'POOLS_35', 'POOLS_15', 'POOLS_32', 'POOLS_9'])
TMP_20(None) = SOLIDITY_CALL require(bool,string)(TMP_19,Bad Combo)
TMP_28 = CONVERT POOLS_8 to iPOOLS
TMP_29(bool) = HIGH_LEVEL_CALL, dest:TMP_28(iPOOLS), function:isAsset, arguments:['debtAsset_1']  
POOLS_9(address) := ϕ(['POOLS_45', 'POOLS_26', 'POOLS_1', 'POOLS_54', 'POOLS_10', 'POOLS_19', 'POOLS_29', 'POOLS_11', 'POOLS_21', 'POOLS_47', 'POOLS_12', 'POOLS_8', 'POOLS_17', 'POOLS_23', 'POOLS_35', 'POOLS_15', 'POOLS_32', 'POOLS_9'])
TMP_30(None) = SOLIDITY_CALL require(bool,string)(TMP_29,Bad Combo)


Propogating parameters and globals to SSA variables...
End popogation
VADER_2
VADER

Name: VADER Function: assetChecks
Num: -1
Den: -1
Address: 4
Norm: u
LF: VADER
Value: u
Fields: 
Finance Type: undef
USDV_2
USDV

Name: USDV Function: assetChecks
Num: -1
Den: -1
Address: 3
Norm: u
LF: USDV
Value: u
Fields: 
Finance Type: undef
POOLS_2
POOLS

Name: POOLS Function: assetChecks
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
VADER_2(address) := ϕ(['VADER_0', 'VADER_6', 'VADER_1'])
Phi
[i]Type for VADER

Name: VADER Function: assetChecks
Num: -1
Den: -1
Address: 4
Norm: u
LF: VADER
Value: u
Fields: 
Finance Type: undef
XXXX
USDV_2(address) := ϕ(['USDV_0', 'USDV_1'])
Phi
[i]Type for USDV

Name: USDV Function: assetChecks
Num: -1
Den: -1
Address: 3
Norm: u
LF: USDV
Value: u
Fields: 
Finance Type: undef
XXXX
POOLS_2(address) := ϕ(['POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_35', 'POOLS_32', 'POOLS_9', 'POOLS_1', 'POOLS_26', 'POOLS_11', 'POOLS_21', 'POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_0', 'POOLS_29', 'POOLS_47'])
Phi
[i]Type for POOLS

Name: POOLS Function: assetChecks
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
VADER_2
VADER_2
VADER

Name: VADER Function: assetChecks
Num: -1
Den: -1
Address: 4
Norm: u
LF: VADER
Value: u
Fields: 
Finance Type: undef
collateralAsset_1
collateralAsset_1
collateralAsset

Name: collateralAsset Function: None
Num: 
Den: 
Address: -999
Norm: u
LF: collateralAsset
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_3(bool) = collateralAsset_1 == VADER_2
[i]Type for TMP_3

Name: TMP_3 Function: assetChecks
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
collateralAsset_1
collateralAsset_1
collateralAsset

Name: collateralAsset Function: None
Num: 
Den: 
Address: -999
Norm: u
LF: collateralAsset
Value: u
Fields: 
Finance Type: undef
USDV_2
USDV_2
USDV

Name: USDV Function: assetChecks
Num: -1
Den: -1
Address: 3
Norm: u
LF: USDV
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_7(bool) = collateralAsset_1 == USDV_2
[i]Type for TMP_7

Name: TMP_7 Function: assetChecks
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
POOLS_3
POOLS_3
POOLS

Name: POOLS Function: assetChecks
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
POOLS_2
POOLS_2
POOLS

Name: POOLS Function: assetChecks
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
collateralAsset_1
collateralAsset_1
collateralAsset

Name: collateralAsset Function: None
Num: 
Den: 
Address: -999
Norm: u
LF: collateralAsset
Value: u
Fields: 
Finance Type: undef
End popogation
POOLS_3
POOLS

Name: POOLS Function: assetChecks
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
POOLS_4
POOLS

Name: POOLS Function: assetChecks
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
POOLS_5
POOLS

Name: POOLS Function: assetChecks
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_11 = CONVERT POOLS_2 to iPOOLS
Converting POOLS_2

Name: POOLS Function: assetChecks
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
POOLS
[i]Type for TMP_11

Name: TMP_11 Function: assetChecks
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_12(bool) = HIGH_LEVEL_CALL, dest:TMP_11(iPOOLS), function:isSynth, arguments:['collateralAsset_1']  
High Call: isSynth
Running querryfc
[i]Type for TMP_12

Name: TMP_12 Function: assetChecks
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
POOLS_3(address) := ϕ(['POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_35', 'POOLS_32', 'POOLS_1', 'POOLS_9', 'POOLS_26', 'POOLS_11', 'POOLS_21', 'POOLS_2', 'POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_47'])
Phi
[i]Type for POOLS

Name: POOLS Function: assetChecks
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_13 = CONVERT POOLS_3 to iPOOLS
Converting POOLS_3

Name: POOLS Function: assetChecks
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
POOLS
[i]Type for TMP_13

Name: TMP_13 Function: assetChecks
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_14 = CONVERT collateralAsset_1 to iSYNTH
Converting collateralAsset_1

Name: collateralAsset Function: None
Num: 
Den: 
Address: -999
Norm: u
LF: collateralAsset
Value: u
Fields: 
Finance Type: undef
SYNTH
[i]Type for TMP_14

Name: TMP_14 Function: assetChecks
Num: 
Den: 
Address: -999
Norm: u
LF: SYNTH
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_15(address) = HIGH_LEVEL_CALL, dest:TMP_14(iSYNTH), function:TOKEN, arguments:[]  
High Call: TOKEN
Running querryfc
Written func info: SYNTH, TOKEN
Retvar: ('c', [-1], [-1], 'u', 'u', 'global:POOLS')
([-1], [-1], 'u', 'global:POOLS', -1)
[i]Type for TMP_15

Name: TMP_15 Function: assetChecks
Num: -1
Den: -1
Address: -1
Norm: u
LF: None
Value: global:POOLS
Fields: 
Finance Type: undef
XXXX
POOLS_4(address) := ϕ(['POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_3', 'POOLS_35', 'POOLS_32', 'POOLS_1', 'POOLS_9', 'POOLS_26', 'POOLS_11', 'POOLS_21', 'POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_47'])
Phi
[i]Type for POOLS

Name: POOLS Function: assetChecks
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_16(bool) = HIGH_LEVEL_CALL, dest:TMP_13(iPOOLS), function:isAnchor, arguments:['TMP_15']  
High Call: isAnchor
Running querryfc
[i]Type for TMP_16

Name: TMP_16 Function: assetChecks
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
POOLS_5(address) := ϕ(['POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_35', 'POOLS_32', 'POOLS_1', 'POOLS_9', 'POOLS_26', 'POOLS_11', 'POOLS_21', 'POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_4', 'POOLS_47'])
Phi
[i]Type for POOLS

Name: POOLS Function: assetChecks
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_17(bool) = TMP_12 && TMP_16
[i]Type for TMP_17

Name: TMP_17 Function: assetChecks
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
POOLS_2
POOLS_2
POOLS

Name: POOLS Function: assetChecks
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
debtAsset_1
debtAsset_1
debtAsset

Name: debtAsset_1 Function: None
Num: 
Den: 
Address: -998
Norm: u
LF: debtAsset
Value: u
Fields: 
Finance Type: undef
End popogation
POOLS_11
POOLS

Name: POOLS Function: assetChecks
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_8 = CONVERT POOLS_2 to iPOOLS
Converting POOLS_2

Name: POOLS Function: assetChecks
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
POOLS
[i]Type for TMP_8

Name: TMP_8 Function: assetChecks
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_9(bool) = HIGH_LEVEL_CALL, dest:TMP_8(iPOOLS), function:isAsset, arguments:['debtAsset_1']  
High Call: isAsset
Running querryfc
[i]Type for TMP_9

Name: TMP_9 Function: assetChecks
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
POOLS_11(address) := ϕ(['POOLS_45', 'POOLS_26', 'POOLS_1', 'POOLS_54', 'POOLS_10', 'POOLS_19', 'POOLS_29', 'POOLS_11', 'POOLS_21', 'POOLS_47', 'POOLS_12', 'POOLS_8', 'POOLS_17', 'POOLS_23', 'POOLS_35', 'POOLS_15', 'POOLS_32', 'POOLS_9'])
Phi
[i]Type for POOLS

Name: POOLS Function: assetChecks
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_10(None) = SOLIDITY_CALL require(bool,string)(TMP_9,Bad Combo)
[i]Type for TMP_10

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
POOLS_2
POOLS_2
POOLS

Name: POOLS Function: assetChecks
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
debtAsset_1
debtAsset_1
debtAsset

Name: debtAsset_1 Function: None
Num: 
Den: 
Address: -998
Norm: u
LF: debtAsset
Value: u
Fields: 
Finance Type: undef
End popogation
POOLS_12
POOLS

Name: POOLS Function: assetChecks
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_4 = CONVERT POOLS_2 to iPOOLS
Converting POOLS_2

Name: POOLS Function: assetChecks
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
POOLS
[i]Type for TMP_4

Name: TMP_4 Function: assetChecks
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_5(bool) = HIGH_LEVEL_CALL, dest:TMP_4(iPOOLS), function:isAnchor, arguments:['debtAsset_1']  
High Call: isAnchor
Running querryfc
[i]Type for TMP_5

Name: TMP_5 Function: assetChecks
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
POOLS_12(address) := ϕ(['POOLS_45', 'POOLS_26', 'POOLS_1', 'POOLS_54', 'POOLS_10', 'POOLS_19', 'POOLS_29', 'POOLS_11', 'POOLS_21', 'POOLS_47', 'POOLS_12', 'POOLS_8', 'POOLS_17', 'POOLS_23', 'POOLS_35', 'POOLS_15', 'POOLS_32', 'POOLS_9'])
Phi
[i]Type for POOLS

Name: POOLS Function: assetChecks
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_6(None) = SOLIDITY_CALL require(bool,string)(TMP_5,Bad Combo)
[i]Type for TMP_6

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
collateralAsset_1
collateralAsset_1
collateralAsset

Name: collateralAsset Function: None
Num: 
Den: 
Address: -999
Norm: u
LF: collateralAsset
Value: u
Fields: 
Finance Type: undef
POOLS_6
POOLS_6
POOLS

Name: POOLS Function: assetChecks
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
POOLS_5
POOLS_5
POOLS

Name: POOLS Function: assetChecks
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
End popogation
POOLS_6
POOLS

Name: POOLS Function: assetChecks
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
POOLS_7
POOLS

Name: POOLS Function: assetChecks
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
POOLS_8
POOLS

Name: POOLS Function: assetChecks
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_21 = CONVERT POOLS_5 to iPOOLS
Converting POOLS_5

Name: POOLS Function: assetChecks
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
POOLS
[i]Type for TMP_21

Name: TMP_21 Function: assetChecks
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_22(bool) = HIGH_LEVEL_CALL, dest:TMP_21(iPOOLS), function:isSynth, arguments:['collateralAsset_1']  
High Call: isSynth
Running querryfc
[i]Type for TMP_22

Name: TMP_22 Function: assetChecks
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
POOLS_6(address) := ϕ(['POOLS_54', 'POOLS_10', 'POOLS_5', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_35', 'POOLS_32', 'POOLS_1', 'POOLS_9', 'POOLS_26', 'POOLS_11', 'POOLS_21', 'POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_47'])
Phi
[i]Type for POOLS

Name: POOLS Function: assetChecks
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_23 = CONVERT POOLS_6 to iPOOLS
Converting POOLS_6

Name: POOLS Function: assetChecks
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
POOLS
[i]Type for TMP_23

Name: TMP_23 Function: assetChecks
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_24 = CONVERT collateralAsset_1 to iSYNTH
Converting collateralAsset_1

Name: collateralAsset Function: None
Num: 
Den: 
Address: -999
Norm: u
LF: collateralAsset
Value: u
Fields: 
Finance Type: undef
SYNTH
[i]Type for TMP_24

Name: TMP_24 Function: assetChecks
Num: 
Den: 
Address: -999
Norm: u
LF: SYNTH
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_25(address) = HIGH_LEVEL_CALL, dest:TMP_24(iSYNTH), function:TOKEN, arguments:[]  
High Call: TOKEN
Running querryfc
Written func info: SYNTH, TOKEN
Retvar: ('c', [-1], [-1], 'u', 'u', 'global:POOLS')
([-1], [-1], 'u', 'global:POOLS', -1)
[i]Type for TMP_25

Name: TMP_25 Function: assetChecks
Num: -1
Den: -1
Address: -1
Norm: u
LF: None
Value: global:POOLS
Fields: 
Finance Type: undef
XXXX
POOLS_7(address) := ϕ(['POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_35', 'POOLS_32', 'POOLS_1', 'POOLS_9', 'POOLS_26', 'POOLS_11', 'POOLS_21', 'POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_6', 'POOLS_47'])
Phi
[i]Type for POOLS

Name: POOLS Function: assetChecks
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_26(bool) = HIGH_LEVEL_CALL, dest:TMP_23(iPOOLS), function:isAsset, arguments:['TMP_25']  
High Call: isAsset
Running querryfc
[i]Type for TMP_26

Name: TMP_26 Function: assetChecks
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
POOLS_8(address) := ϕ(['POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_35', 'POOLS_32', 'POOLS_7', 'POOLS_1', 'POOLS_9', 'POOLS_26', 'POOLS_11', 'POOLS_21', 'POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_47'])
Phi
[i]Type for POOLS

Name: POOLS Function: assetChecks
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_27(bool) = TMP_22 && TMP_26
[i]Type for TMP_27

Name: TMP_27 Function: assetChecks
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
debtAsset_1
debtAsset_1
debtAsset

Name: debtAsset_1 Function: None
Num: 
Den: 
Address: -998
Norm: u
LF: debtAsset
Value: u
Fields: 
Finance Type: undef
POOLS_5
POOLS_5
POOLS

Name: POOLS Function: assetChecks
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
End popogation
POOLS_10
POOLS

Name: POOLS Function: assetChecks
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_18 = CONVERT POOLS_5 to iPOOLS
Converting POOLS_5

Name: POOLS Function: assetChecks
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
POOLS
[i]Type for TMP_18

Name: TMP_18 Function: assetChecks
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_19(bool) = HIGH_LEVEL_CALL, dest:TMP_18(iPOOLS), function:isAnchor, arguments:['debtAsset_1']  
High Call: isAnchor
Running querryfc
[i]Type for TMP_19

Name: TMP_19 Function: assetChecks
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
POOLS_10(address) := ϕ(['POOLS_45', 'POOLS_26', 'POOLS_1', 'POOLS_54', 'POOLS_10', 'POOLS_19', 'POOLS_29', 'POOLS_11', 'POOLS_21', 'POOLS_47', 'POOLS_12', 'POOLS_8', 'POOLS_17', 'POOLS_23', 'POOLS_35', 'POOLS_15', 'POOLS_32', 'POOLS_9'])
Phi
[i]Type for POOLS

Name: POOLS Function: assetChecks
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_20(None) = SOLIDITY_CALL require(bool,string)(TMP_19,Bad Combo)
[i]Type for TMP_20

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
debtAsset_1
debtAsset_1
debtAsset

Name: debtAsset_1 Function: None
Num: 
Den: 
Address: -998
Norm: u
LF: debtAsset
Value: u
Fields: 
Finance Type: undef
POOLS_8
POOLS_8
POOLS

Name: POOLS Function: assetChecks
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
End popogation
POOLS_9
POOLS

Name: POOLS Function: assetChecks
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_28 = CONVERT POOLS_8 to iPOOLS
Converting POOLS_8

Name: POOLS Function: assetChecks
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
POOLS
[i]Type for TMP_28

Name: TMP_28 Function: assetChecks
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_29(bool) = HIGH_LEVEL_CALL, dest:TMP_28(iPOOLS), function:isAsset, arguments:['debtAsset_1']  
High Call: isAsset
Running querryfc
[i]Type for TMP_29

Name: TMP_29 Function: assetChecks
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
POOLS_9(address) := ϕ(['POOLS_45', 'POOLS_26', 'POOLS_1', 'POOLS_54', 'POOLS_10', 'POOLS_19', 'POOLS_29', 'POOLS_11', 'POOLS_21', 'POOLS_47', 'POOLS_12', 'POOLS_8', 'POOLS_17', 'POOLS_23', 'POOLS_35', 'POOLS_15', 'POOLS_32', 'POOLS_9'])
Phi
[i]Type for POOLS

Name: POOLS Function: assetChecks
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_30(None) = SOLIDITY_CALL require(bool,string)(TMP_29,Bad Combo)
[i]Type for TMP_30

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation



isBase
Finding type for token(address ... )
prev address? u
Head Addr: -997
    Norm: 0
    Set: {-997}
    Fin: NULL
Param: 0
    num: []
    den: []
    norm: u
    link: token
    fields: []
    fintype: -1


token_1(address) := ϕ(['collateralAsset_1', 'collateralAsset_1'])
VADER_3(address) := ϕ(['VADER_0', 'VADER_6', 'VADER_1'])
USDV_3(address) := ϕ(['USDV_0', 'USDV_1'])
TMP_31(bool) = token_1 == VADER_3
TMP_32(bool) = token_1 == USDV_3
TMP_33(bool) = TMP_31 || TMP_32
CONDITION TMP_33
RETURN True


Propogating parameters and globals to SSA variables...
End popogation
token_1
token

Name: token_1 Function: None
Num: 
Den: 
Address: -997
Norm: u
LF: token
Value: u
Fields: 
Finance Type: undef
VADER_3
VADER
VADER

Name: None Function: None
Num: -1
Den: -1
Address: 4
Norm: u
LF: VADER
Value: u
Fields: 
Finance Type: undef
USDV_3
USDV
USDV

Name: None Function: None
Num: -1
Den: -1
Address: 3
Norm: u
LF: USDV
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['collateralAsset_1', 'collateralAsset_1'])
Phi
[i]Type for token

Name: token Function: isBase
Num: 
Den: 
Address: -997
Norm: u
LF: token
Value: u
Fields: 
Finance Type: undef
XXXX
VADER_3(address) := ϕ(['VADER_0', 'VADER_6', 'VADER_1'])
Phi
[i]Type for VADER

Name: VADER Function: isBase
Num: -1
Den: -1
Address: 4
Norm: u
LF: VADER
Value: u
Fields: 
Finance Type: undef
XXXX
USDV_3(address) := ϕ(['USDV_0', 'USDV_1'])
Phi
[i]Type for USDV

Name: USDV Function: isBase
Num: -1
Den: -1
Address: 3
Norm: u
LF: USDV
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
USDV_3
USDV_3
USDV

Name: USDV Function: isBase
Num: -1
Den: -1
Address: 3
Norm: u
LF: USDV
Value: u
Fields: 
Finance Type: undef
VADER_3
VADER_3
VADER

Name: VADER Function: isBase
Num: -1
Den: -1
Address: 4
Norm: u
LF: VADER
Value: u
Fields: 
Finance Type: undef
token_1
token_1
token

Name: token Function: isBase
Num: 
Den: 
Address: -997
Norm: u
LF: token
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_31(bool) = token_1 == VADER_3
[i]Type for TMP_31

Name: TMP_31 Function: isBase
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_32(bool) = token_1 == USDV_3
[i]Type for TMP_32

Name: TMP_32 Function: isBase
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_33(bool) = TMP_31 || TMP_32
[i]Type for TMP_33

Name: TMP_33 Function: isBase
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
RETURN True
Propogating parameters and globals to SSA variables...
End popogation


token_1(address) := ϕ(['collateralAsset_1', 'collateralAsset_1'])
VADER_3(address) := ϕ(['VADER_0', 'VADER_6', 'VADER_1'])
USDV_3(address) := ϕ(['USDV_0', 'USDV_1'])
TMP_31(bool) = token_1 == VADER_3
TMP_32(bool) = token_1 == USDV_3
TMP_33(bool) = TMP_31 || TMP_32
CONDITION TMP_33
RETURN True


Propogating parameters and globals to SSA variables...
End popogation
token_1
token

Name: token_1 Function: isBase
Num: 
Den: 
Address: -997
Norm: u
LF: token
Value: u
Fields: 
Finance Type: undef
VADER_3
VADER

Name: VADER Function: isBase
Num: -1
Den: -1
Address: 4
Norm: u
LF: VADER
Value: u
Fields: 
Finance Type: undef
USDV_3
USDV

Name: USDV Function: isBase
Num: -1
Den: -1
Address: 3
Norm: u
LF: USDV
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['collateralAsset_1', 'collateralAsset_1'])
Phi
[i]Type for token

Name: token Function: isBase
Num: 
Den: 
Address: -997
Norm: u
LF: token
Value: u
Fields: 
Finance Type: undef
XXXX
VADER_3(address) := ϕ(['VADER_0', 'VADER_6', 'VADER_1'])
Phi
[i]Type for VADER

Name: VADER Function: isBase
Num: -1
Den: -1
Address: 4
Norm: u
LF: VADER
Value: u
Fields: 
Finance Type: undef
XXXX
USDV_3(address) := ϕ(['USDV_0', 'USDV_1'])
Phi
[i]Type for USDV

Name: USDV Function: isBase
Num: -1
Den: -1
Address: 3
Norm: u
LF: USDV
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
USDV_3
USDV_3
USDV

Name: USDV Function: isBase
Num: -1
Den: -1
Address: 3
Norm: u
LF: USDV
Value: u
Fields: 
Finance Type: undef
VADER_3
VADER_3
VADER

Name: VADER Function: isBase
Num: -1
Den: -1
Address: 4
Norm: u
LF: VADER
Value: u
Fields: 
Finance Type: undef
token_1
token_1
token

Name: token Function: isBase
Num: 
Den: 
Address: -997
Norm: u
LF: token
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_31(bool) = token_1 == VADER_3
[i]Type for TMP_31

Name: TMP_31 Function: isBase
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_32(bool) = token_1 == USDV_3
[i]Type for TMP_32

Name: TMP_32 Function: isBase
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_33(bool) = TMP_31 || TMP_32
[i]Type for TMP_33

Name: TMP_33 Function: isBase
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
RETURN True
Propogating parameters and globals to SSA variables...
End popogation



isPool
Finding type for token(address ... )
prev address? u
Head Addr: -996
    Norm: 0
    Set: {-996}
    Fin: NULL
Param: 0
    num: []
    den: []
    norm: u
    link: token
    fields: []
    fintype: -1


token_1(address) := ϕ(['collateralAsset_1'])
POOLS_13(address) := ϕ(['POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_35', 'POOLS_32', 'POOLS_9', 'POOLS_1', 'POOLS_26', 'POOLS_11', 'POOLS_21', 'POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_0', 'POOLS_29', 'POOLS_47'])
TMP_34 = CONVERT POOLS_13 to iPOOLS
TMP_35(bool) = HIGH_LEVEL_CALL, dest:TMP_34(iPOOLS), function:isAnchor, arguments:['token_1']  
POOLS_14(address) := ϕ(['POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_35', 'POOLS_32', 'POOLS_1', 'POOLS_9', 'POOLS_26', 'POOLS_11', 'POOLS_21', 'POOLS_8', 'POOLS_13', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_47'])
TMP_36 = CONVERT POOLS_14 to iPOOLS
TMP_37(bool) = HIGH_LEVEL_CALL, dest:TMP_36(iPOOLS), function:isAsset, arguments:['token_1']  
POOLS_15(address) := ϕ(['POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_35', 'POOLS_32', 'POOLS_1', 'POOLS_9', 'POOLS_26', 'POOLS_11', 'POOLS_21', 'POOLS_8', 'POOLS_14', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_47'])
TMP_38(bool) = TMP_35 || TMP_37
CONDITION TMP_38
pool_1(bool) := True(bool)


Propogating parameters and globals to SSA variables...
End popogation
token_1
token

Name: token_1 Function: None
Num: 
Den: 
Address: -996
Norm: u
LF: token
Value: u
Fields: 
Finance Type: undef
POOLS_13
POOLS
POOLS

Name: None Function: None
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['collateralAsset_1'])
Phi
[i]Type for token

Name: token Function: isPool
Num: 
Den: 
Address: -996
Norm: u
LF: token
Value: u
Fields: 
Finance Type: undef
XXXX
POOLS_13(address) := ϕ(['POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_35', 'POOLS_32', 'POOLS_9', 'POOLS_1', 'POOLS_26', 'POOLS_11', 'POOLS_21', 'POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_0', 'POOLS_29', 'POOLS_47'])
Phi
[i]Type for POOLS

Name: POOLS Function: isPool
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
token_1
token_1
token

Name: token Function: isPool
Num: 
Den: 
Address: -996
Norm: u
LF: token
Value: u
Fields: 
Finance Type: undef
POOLS_14
POOLS_14
POOLS
POOLS

Name: None Function: None
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
POOLS_13
POOLS_13
POOLS

Name: POOLS Function: isPool
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
End popogation
POOLS_14
POOLS

Name: None Function: None
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
POOLS_15
POOLS
POOLS

Name: None Function: None
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_34 = CONVERT POOLS_13 to iPOOLS
Converting POOLS_13

Name: POOLS Function: isPool
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
POOLS
[i]Type for TMP_34

Name: TMP_34 Function: isPool
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_35(bool) = HIGH_LEVEL_CALL, dest:TMP_34(iPOOLS), function:isAnchor, arguments:['token_1']  
High Call: isAnchor
Running querryfc
[i]Type for TMP_35

Name: TMP_35 Function: isPool
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
POOLS_14(address) := ϕ(['POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_35', 'POOLS_32', 'POOLS_1', 'POOLS_9', 'POOLS_26', 'POOLS_11', 'POOLS_21', 'POOLS_8', 'POOLS_13', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_47'])
Phi
[i]Type for POOLS

Name: POOLS Function: isPool
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_36 = CONVERT POOLS_14 to iPOOLS
Converting POOLS_14

Name: POOLS Function: isPool
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
POOLS
[i]Type for TMP_36

Name: TMP_36 Function: isPool
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_37(bool) = HIGH_LEVEL_CALL, dest:TMP_36(iPOOLS), function:isAsset, arguments:['token_1']  
High Call: isAsset
Running querryfc
[i]Type for TMP_37

Name: TMP_37 Function: isPool
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
POOLS_15(address) := ϕ(['POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_35', 'POOLS_32', 'POOLS_1', 'POOLS_9', 'POOLS_26', 'POOLS_11', 'POOLS_21', 'POOLS_8', 'POOLS_14', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_47'])
Phi
[i]Type for POOLS

Name: POOLS Function: isPool
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_38(bool) = TMP_35 || TMP_37
[i]Type for TMP_38

Name: TMP_38 Function: isPool
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
pool_1
pool_1
pool
pool

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
pool_1(bool) := True(bool)
asgn
Finance type key: (-1, -1)
[i]Type for pool

Name: pool Function: isPool
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: True
Fields: 
Finance Type: undef
XXXX


token_1(address) := ϕ(['collateralAsset_1'])
POOLS_13(address) := ϕ(['POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_35', 'POOLS_32', 'POOLS_9', 'POOLS_1', 'POOLS_26', 'POOLS_11', 'POOLS_21', 'POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_0', 'POOLS_29', 'POOLS_47'])
TMP_34 = CONVERT POOLS_13 to iPOOLS
TMP_35(bool) = HIGH_LEVEL_CALL, dest:TMP_34(iPOOLS), function:isAnchor, arguments:['token_1']  
POOLS_14(address) := ϕ(['POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_35', 'POOLS_32', 'POOLS_1', 'POOLS_9', 'POOLS_26', 'POOLS_11', 'POOLS_21', 'POOLS_8', 'POOLS_13', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_47'])
TMP_36 = CONVERT POOLS_14 to iPOOLS
TMP_37(bool) = HIGH_LEVEL_CALL, dest:TMP_36(iPOOLS), function:isAsset, arguments:['token_1']  
POOLS_15(address) := ϕ(['POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_35', 'POOLS_32', 'POOLS_1', 'POOLS_9', 'POOLS_26', 'POOLS_11', 'POOLS_21', 'POOLS_8', 'POOLS_14', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_47'])
TMP_38(bool) = TMP_35 || TMP_37
CONDITION TMP_38
pool_1(bool) := True(bool)


Propogating parameters and globals to SSA variables...
End popogation
token_1
token

Name: token_1 Function: isPool
Num: 
Den: 
Address: -996
Norm: u
LF: token
Value: u
Fields: 
Finance Type: undef
POOLS_13
POOLS

Name: POOLS Function: isPool
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['collateralAsset_1'])
Phi
[i]Type for token

Name: token Function: isPool
Num: 
Den: 
Address: -996
Norm: u
LF: token
Value: u
Fields: 
Finance Type: undef
XXXX
POOLS_13(address) := ϕ(['POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_35', 'POOLS_32', 'POOLS_9', 'POOLS_1', 'POOLS_26', 'POOLS_11', 'POOLS_21', 'POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_0', 'POOLS_29', 'POOLS_47'])
Phi
[i]Type for POOLS

Name: POOLS Function: isPool
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
token_1
token_1
token

Name: token Function: isPool
Num: 
Den: 
Address: -996
Norm: u
LF: token
Value: u
Fields: 
Finance Type: undef
POOLS_14
POOLS_14
POOLS

Name: POOLS Function: isPool
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
POOLS_13
POOLS_13
POOLS

Name: POOLS Function: isPool
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
End popogation
POOLS_14
POOLS

Name: POOLS Function: isPool
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
POOLS_15
POOLS

Name: POOLS Function: isPool
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_34 = CONVERT POOLS_13 to iPOOLS
Converting POOLS_13

Name: POOLS Function: isPool
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
POOLS
[i]Type for TMP_34

Name: TMP_34 Function: isPool
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_35(bool) = HIGH_LEVEL_CALL, dest:TMP_34(iPOOLS), function:isAnchor, arguments:['token_1']  
High Call: isAnchor
Running querryfc
[i]Type for TMP_35

Name: TMP_35 Function: isPool
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
POOLS_14(address) := ϕ(['POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_35', 'POOLS_32', 'POOLS_1', 'POOLS_9', 'POOLS_26', 'POOLS_11', 'POOLS_21', 'POOLS_8', 'POOLS_13', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_47'])
Phi
[i]Type for POOLS

Name: POOLS Function: isPool
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_36 = CONVERT POOLS_14 to iPOOLS
Converting POOLS_14

Name: POOLS Function: isPool
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
POOLS
[i]Type for TMP_36

Name: TMP_36 Function: isPool
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_37(bool) = HIGH_LEVEL_CALL, dest:TMP_36(iPOOLS), function:isAsset, arguments:['token_1']  
High Call: isAsset
Running querryfc
[i]Type for TMP_37

Name: TMP_37 Function: isPool
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
POOLS_15(address) := ϕ(['POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_35', 'POOLS_32', 'POOLS_1', 'POOLS_9', 'POOLS_26', 'POOLS_11', 'POOLS_21', 'POOLS_8', 'POOLS_14', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_47'])
Phi
[i]Type for POOLS

Name: POOLS Function: isPool
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_38(bool) = TMP_35 || TMP_37
[i]Type for TMP_38

Name: TMP_38 Function: isPool
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
pool_1
pool_1
pool
pool

Name: pool Function: isPool
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: True
Fields: 
Finance Type: undef
End popogation
pool_1(bool) := True(bool)
asgn
Finance type key: (-1, -1)
[i]Type for pool

Name: pool Function: isPool
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: True
Fields: 
Finance Type: undef
XXXX



calcValueInBase
Finding type for token(address ... )
prev address? u
Head Addr: -995
    Norm: 0
    Set: {-995}
    Fin: NULL
Finding type for amount(uint256 ... )
Param: 0
    num: []
    den: []
    norm: u
    link: token
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1


token_1(address) := ϕ(['debtAsset_1', 'token_1', 'token1_1'])
amount_1(uint256) := ϕ(['_interestPayment_1', 'one_1', 'amount_1'])
POOLS_16(address) := ϕ(['POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_35', 'POOLS_32', 'POOLS_9', 'POOLS_1', 'POOLS_26', 'POOLS_11', 'POOLS_21', 'POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_0', 'POOLS_29', 'POOLS_47'])
TMP_39 = CONVERT POOLS_16 to iPOOLS
TUPLE_0(uint256,uint256) = HIGH_LEVEL_CALL, dest:TMP_39(iPOOLS), function:getPoolAmounts, arguments:['token_1']  
POOLS_17(address) := ϕ(['POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_35', 'POOLS_32', 'POOLS_1', 'POOLS_9', 'POOLS_26', 'POOLS_11', 'POOLS_21', 'POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_47', 'POOLS_16'])
_baseAmt_1(uint256)= UNPACK TUPLE_0 index: 0 
_tokenAmt_1(uint256)= UNPACK TUPLE_0 index: 1 
TMP_40(bool) = _baseAmt_1 > 0
TMP_41(bool) = _tokenAmt_1 > 0
TMP_42(bool) = TMP_40 && TMP_41
CONDITION TMP_42
TMP_43(uint256) = amount_1 (c)* _baseAmt_1
TMP_44(uint256) = TMP_43 (c)/ _tokenAmt_1
RETURN TMP_44


Propogating parameters and globals to SSA variables...
End popogation
token_1
token

Name: token_1 Function: None
Num: 
Den: 
Address: -995
Norm: u
LF: token
Value: u
Fields: 
Finance Type: undef
amount_1
amount
amount

Name: amount_1 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
POOLS_16
POOLS
POOLS

Name: None Function: None
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['debtAsset_1', 'token_1', 'token1_1'])
Phi
[i]Type for token

Name: token Function: calcValueInBase
Num: 
Den: 
Address: -995
Norm: u
LF: token
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['_interestPayment_1', 'one_1', 'amount_1'])
Phi
[i]Type for amount

Name: amount Function: calcValueInBase
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
POOLS_16(address) := ϕ(['POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_35', 'POOLS_32', 'POOLS_9', 'POOLS_1', 'POOLS_26', 'POOLS_11', 'POOLS_21', 'POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_0', 'POOLS_29', 'POOLS_47'])
Phi
[i]Type for POOLS

Name: POOLS Function: calcValueInBase
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
POOLS_16
POOLS_16
POOLS

Name: POOLS Function: calcValueInBase
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
token_1
token_1
token

Name: token Function: calcValueInBase
Num: 
Den: 
Address: -995
Norm: u
LF: token
Value: u
Fields: 
Finance Type: undef
_baseAmt_1
_baseAmt_1
_baseAmt
_baseAmt

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_tokenAmt_1
_tokenAmt_1
_tokenAmt
_tokenAmt

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
POOLS_17
POOLS
POOLS

Name: None Function: None
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_39 = CONVERT POOLS_16 to iPOOLS
Converting POOLS_16

Name: POOLS Function: calcValueInBase
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
POOLS
[i]Type for TMP_39

Name: TMP_39 Function: calcValueInBase
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_0(uint256,uint256) = HIGH_LEVEL_CALL, dest:TMP_39(iPOOLS), function:getPoolAmounts, arguments:['token_1']  
High Call: getPoolAmounts
Running querryfc
Written func info: POOLS, getPoolAmounts
Retvar: ('c', ['global:VADER'], ['-1'], 0, 0, None)
{'global:FACTORY': 1, 'global:POOLS': 2, 'global:USDV': 3, 'global:VADER': 4, 'global:ROUTER': 5, 'assetChecks:collateralAsset': -999, 'assetChecks:debtAsset': -998, 'isBase:token': -997, 'isPool:token': -996, 'calcValueInBase:token': -995, 'calcValueInToken:token': -994, 'calcValueOfTokenInToken:token1': -993, 'calcValueOfTokenInToken:token2': -992, 'calcSwapValueInBase:token': -991, 'calcSwapValueInToken:token': -990, 'requirePriceBounds:token': -989, 'getRewardShare:token': -988, 'getProtection:member': -987, 'getProtection:token': -986, 'getCoverage:member': -985, 'getCoverage:token': -984, 'getCollateralValueInBase:member': -983, 'getCollateralValueInBase:collateralAsset': -982, 'getCollateralValueInBase:debtAsset': -981, 'getDebtValueInCollateral:member': -980, 'getDebtValueInCollateral:collateralAsset': -979, 'getDebtValueInCollateral:debtAsset': -978, 'getInterestOwed:collateralAsset': -977, 'getInterestOwed:debtAsset': -976, 'getInterestPayment:collateralAsset': -975, 'getInterestPayment:debtAsset': -974, 'getDebtLoading:collateralAsset': -973, 'getDebtLoading:debtAsset': -972, 'getDebtAsset:debtAsset': -971}
Retvar: ('c', ['global:USDV'], ['-1'], 0, 0, None)
{'global:FACTORY': 1, 'global:POOLS': 2, 'global:USDV': 3, 'global:VADER': 4, 'global:ROUTER': 5, 'assetChecks:collateralAsset': -999, 'assetChecks:debtAsset': -998, 'isBase:token': -997, 'isPool:token': -996, 'calcValueInBase:token': -995, 'calcValueInToken:token': -994, 'calcValueOfTokenInToken:token1': -993, 'calcValueOfTokenInToken:token2': -992, 'calcSwapValueInBase:token': -991, 'calcSwapValueInToken:token': -990, 'requirePriceBounds:token': -989, 'getRewardShare:token': -988, 'getProtection:member': -987, 'getProtection:token': -986, 'getCoverage:member': -985, 'getCoverage:token': -984, 'getCollateralValueInBase:member': -983, 'getCollateralValueInBase:collateralAsset': -982, 'getCollateralValueInBase:debtAsset': -981, 'getDebtValueInCollateral:member': -980, 'getDebtValueInCollateral:collateralAsset': -979, 'getDebtValueInCollateral:debtAsset': -978, 'getInterestOwed:collateralAsset': -977, 'getInterestOwed:debtAsset': -976, 'getInterestPayment:collateralAsset': -975, 'getInterestPayment:debtAsset': -974, 'getDebtLoading:collateralAsset': -973, 'getDebtLoading:debtAsset': -972, 'getDebtAsset:debtAsset': -971}
[i]Type for TUPLE_0

Name: TUPLE_0 Function: calcValueInBase
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
POOLS_17(address) := ϕ(['POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_35', 'POOLS_32', 'POOLS_1', 'POOLS_9', 'POOLS_26', 'POOLS_11', 'POOLS_21', 'POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_47', 'POOLS_16'])
Phi
[i]Type for POOLS

Name: POOLS Function: calcValueInBase
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
XXXX
_baseAmt_1(uint256)= UNPACK TUPLE_0 index: 0 
([4], [-1], 0, None, -1)
[i]Type for _baseAmt

Name: _baseAmt Function: calcValueInBase
Num: 4
Den: -1
Address: -1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_tokenAmt_1(uint256)= UNPACK TUPLE_0 index: 1 
([3], [-1], 0, None, -1)
[i]Type for _tokenAmt

Name: _tokenAmt Function: calcValueInBase
Num: 3
Den: -1
Address: -1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_baseAmt_1
_baseAmt_1
_baseAmt

Name: _baseAmt Function: calcValueInBase
Num: 4
Den: -1
Address: -1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
_tokenAmt_1
_tokenAmt_1
_tokenAmt

Name: _tokenAmt Function: calcValueInBase
Num: 3
Den: -1
Address: -1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_40(bool) = _baseAmt_1 > 0
[i]Type for TMP_40

Name: TMP_40 Function: calcValueInBase
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_41(bool) = _tokenAmt_1 > 0
[i]Type for TMP_41

Name: TMP_41 Function: calcValueInBase
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_42(bool) = TMP_40 && TMP_41
[i]Type for TMP_42

Name: TMP_42 Function: calcValueInBase
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_baseAmt_1
_baseAmt_1
_baseAmt

Name: _baseAmt Function: calcValueInBase
Num: 4
Den: -1
Address: -1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
_tokenAmt_1
_tokenAmt_1
_tokenAmt

Name: _tokenAmt Function: calcValueInBase
Num: 3
Den: -1
Address: -1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
amount_1
amount_1
amount
amount

Name: amount_1 Function: calcValueInBase
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_43(uint256) = amount_1 (c)* _baseAmt_1
[i]Type for TMP_43

Name: TMP_43 Function: calcValueInBase
Num: 4
Den: -1
Address: -1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_44(uint256) = TMP_43 (c)/ _tokenAmt_1
[i]Type for TMP_44

Name: TMP_44 Function: calcValueInBase
Num: 4
Den: 3
Address: -1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_44
Propogating parameters and globals to SSA variables...
End popogation


token_1(address) := ϕ(['debtAsset_1', 'token_1', 'token1_1'])
amount_1(uint256) := ϕ(['_interestPayment_1', 'one_1', 'amount_1'])
POOLS_16(address) := ϕ(['POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_35', 'POOLS_32', 'POOLS_9', 'POOLS_1', 'POOLS_26', 'POOLS_11', 'POOLS_21', 'POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_0', 'POOLS_29', 'POOLS_47'])
TMP_39 = CONVERT POOLS_16 to iPOOLS
TUPLE_0(uint256,uint256) = HIGH_LEVEL_CALL, dest:TMP_39(iPOOLS), function:getPoolAmounts, arguments:['token_1']  
POOLS_17(address) := ϕ(['POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_35', 'POOLS_32', 'POOLS_1', 'POOLS_9', 'POOLS_26', 'POOLS_11', 'POOLS_21', 'POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_47', 'POOLS_16'])
_baseAmt_1(uint256)= UNPACK TUPLE_0 index: 0 
_tokenAmt_1(uint256)= UNPACK TUPLE_0 index: 1 
TMP_40(bool) = _baseAmt_1 > 0
TMP_41(bool) = _tokenAmt_1 > 0
TMP_42(bool) = TMP_40 && TMP_41
CONDITION TMP_42
TMP_43(uint256) = amount_1 (c)* _baseAmt_1
TMP_44(uint256) = TMP_43 (c)/ _tokenAmt_1
RETURN TMP_44


Propogating parameters and globals to SSA variables...
End popogation
token_1
token

Name: token_1 Function: calcValueInBase
Num: 
Den: 
Address: -995
Norm: u
LF: token
Value: u
Fields: 
Finance Type: undef
amount_1
amount
amount

Name: amount_1 Function: calcValueInBase
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
POOLS_16
POOLS

Name: POOLS Function: calcValueInBase
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['debtAsset_1', 'token_1', 'token1_1'])
Phi
[i]Type for token

Name: token Function: calcValueInBase
Num: 
Den: 
Address: -995
Norm: u
LF: token
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['_interestPayment_1', 'one_1', 'amount_1'])
Phi
[i]Type for amount

Name: amount Function: calcValueInBase
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
POOLS_16(address) := ϕ(['POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_35', 'POOLS_32', 'POOLS_9', 'POOLS_1', 'POOLS_26', 'POOLS_11', 'POOLS_21', 'POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_0', 'POOLS_29', 'POOLS_47'])
Phi
[i]Type for POOLS

Name: POOLS Function: calcValueInBase
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
POOLS_16
POOLS_16
POOLS

Name: POOLS Function: calcValueInBase
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
token_1
token_1
token

Name: token Function: calcValueInBase
Num: 
Den: 
Address: -995
Norm: u
LF: token
Value: u
Fields: 
Finance Type: undef
_baseAmt_1
_baseAmt_1
_baseAmt
_baseAmt

Name: _baseAmt Function: calcValueInBase
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_tokenAmt_1
_tokenAmt_1
_tokenAmt
_tokenAmt

Name: _tokenAmt Function: calcValueInBase
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
POOLS_17
POOLS

Name: POOLS Function: calcValueInBase
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_39 = CONVERT POOLS_16 to iPOOLS
Converting POOLS_16

Name: POOLS Function: calcValueInBase
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
POOLS
[i]Type for TMP_39

Name: TMP_39 Function: calcValueInBase
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_0(uint256,uint256) = HIGH_LEVEL_CALL, dest:TMP_39(iPOOLS), function:getPoolAmounts, arguments:['token_1']  
High Call: getPoolAmounts
Running querryfc
Written func info: POOLS, getPoolAmounts
Retvar: ('c', ['global:VADER'], ['-1'], 0, 0, None)
{'global:FACTORY': 1, 'global:POOLS': 2, 'global:USDV': 3, 'global:VADER': 4, 'global:ROUTER': 5, 'assetChecks:collateralAsset': -999, 'assetChecks:debtAsset': -998, 'isBase:token': -997, 'isPool:token': -996, 'calcValueInBase:token': -995, 'calcValueInToken:token': -994, 'calcValueOfTokenInToken:token1': -993, 'calcValueOfTokenInToken:token2': -992, 'calcSwapValueInBase:token': -991, 'calcSwapValueInToken:token': -990, 'requirePriceBounds:token': -989, 'getRewardShare:token': -988, 'getProtection:member': -987, 'getProtection:token': -986, 'getCoverage:member': -985, 'getCoverage:token': -984, 'getCollateralValueInBase:member': -983, 'getCollateralValueInBase:collateralAsset': -982, 'getCollateralValueInBase:debtAsset': -981, 'getDebtValueInCollateral:member': -980, 'getDebtValueInCollateral:collateralAsset': -979, 'getDebtValueInCollateral:debtAsset': -978, 'getInterestOwed:collateralAsset': -977, 'getInterestOwed:debtAsset': -976, 'getInterestPayment:collateralAsset': -975, 'getInterestPayment:debtAsset': -974, 'getDebtLoading:collateralAsset': -973, 'getDebtLoading:debtAsset': -972, 'getDebtAsset:debtAsset': -971}
Retvar: ('c', ['global:USDV'], ['-1'], 0, 0, None)
{'global:FACTORY': 1, 'global:POOLS': 2, 'global:USDV': 3, 'global:VADER': 4, 'global:ROUTER': 5, 'assetChecks:collateralAsset': -999, 'assetChecks:debtAsset': -998, 'isBase:token': -997, 'isPool:token': -996, 'calcValueInBase:token': -995, 'calcValueInToken:token': -994, 'calcValueOfTokenInToken:token1': -993, 'calcValueOfTokenInToken:token2': -992, 'calcSwapValueInBase:token': -991, 'calcSwapValueInToken:token': -990, 'requirePriceBounds:token': -989, 'getRewardShare:token': -988, 'getProtection:member': -987, 'getProtection:token': -986, 'getCoverage:member': -985, 'getCoverage:token': -984, 'getCollateralValueInBase:member': -983, 'getCollateralValueInBase:collateralAsset': -982, 'getCollateralValueInBase:debtAsset': -981, 'getDebtValueInCollateral:member': -980, 'getDebtValueInCollateral:collateralAsset': -979, 'getDebtValueInCollateral:debtAsset': -978, 'getInterestOwed:collateralAsset': -977, 'getInterestOwed:debtAsset': -976, 'getInterestPayment:collateralAsset': -975, 'getInterestPayment:debtAsset': -974, 'getDebtLoading:collateralAsset': -973, 'getDebtLoading:debtAsset': -972, 'getDebtAsset:debtAsset': -971}
[i]Type for TUPLE_0

Name: TUPLE_0 Function: calcValueInBase
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
POOLS_17(address) := ϕ(['POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_35', 'POOLS_32', 'POOLS_1', 'POOLS_9', 'POOLS_26', 'POOLS_11', 'POOLS_21', 'POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_47', 'POOLS_16'])
Phi
[i]Type for POOLS

Name: POOLS Function: calcValueInBase
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
XXXX
_baseAmt_1(uint256)= UNPACK TUPLE_0 index: 0 
([4], [-1], 0, None, -1)
[i]Type for _baseAmt

Name: _baseAmt Function: calcValueInBase
Num: 4
Den: -1
Address: -1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_tokenAmt_1(uint256)= UNPACK TUPLE_0 index: 1 
([3], [-1], 0, None, -1)
[i]Type for _tokenAmt

Name: _tokenAmt Function: calcValueInBase
Num: 3
Den: -1
Address: -1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_baseAmt_1
_baseAmt_1
_baseAmt

Name: _baseAmt Function: calcValueInBase
Num: 4
Den: -1
Address: -1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
_tokenAmt_1
_tokenAmt_1
_tokenAmt

Name: _tokenAmt Function: calcValueInBase
Num: 3
Den: -1
Address: -1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_40(bool) = _baseAmt_1 > 0
[i]Type for TMP_40

Name: TMP_40 Function: calcValueInBase
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_41(bool) = _tokenAmt_1 > 0
[i]Type for TMP_41

Name: TMP_41 Function: calcValueInBase
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_42(bool) = TMP_40 && TMP_41
[i]Type for TMP_42

Name: TMP_42 Function: calcValueInBase
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_baseAmt_1
_baseAmt_1
_baseAmt

Name: _baseAmt Function: calcValueInBase
Num: 4
Den: -1
Address: -1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
_tokenAmt_1
_tokenAmt_1
_tokenAmt

Name: _tokenAmt Function: calcValueInBase
Num: 3
Den: -1
Address: -1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
amount_1
amount_1
amount
amount

Name: amount_1 Function: calcValueInBase
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_43(uint256) = amount_1 (c)* _baseAmt_1
[i]Type for TMP_43

Name: TMP_43 Function: calcValueInBase
Num: 4
Den: -1
Address: -1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_44(uint256) = TMP_43 (c)/ _tokenAmt_1
[i]Type for TMP_44

Name: TMP_44 Function: calcValueInBase
Num: 4
Den: 3
Address: -1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_44
Propogating parameters and globals to SSA variables...
End popogation



calcValueInToken
Finding type for token(address ... )
prev address? u
Head Addr: -994
    Norm: 0
    Set: {-994}
    Fin: NULL
Finding type for amount(uint256 ... )
Param: 0
    num: []
    den: []
    norm: u
    link: token
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1


token_1(address) := ϕ(['token2_1'])
amount_1(uint256) := ϕ(['TMP_51'])
POOLS_18(address) := ϕ(['POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_35', 'POOLS_32', 'POOLS_9', 'POOLS_1', 'POOLS_26', 'POOLS_11', 'POOLS_21', 'POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_0', 'POOLS_29', 'POOLS_47'])
TMP_45 = CONVERT POOLS_18 to iPOOLS
TUPLE_1(uint256,uint256) = HIGH_LEVEL_CALL, dest:TMP_45(iPOOLS), function:getPoolAmounts, arguments:['token_1']  
POOLS_19(address) := ϕ(['POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_35', 'POOLS_32', 'POOLS_1', 'POOLS_9', 'POOLS_26', 'POOLS_11', 'POOLS_21', 'POOLS_18', 'POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_47'])
_baseAmt_1(uint256)= UNPACK TUPLE_1 index: 0 
_tokenAmt_1(uint256)= UNPACK TUPLE_1 index: 1 
TMP_46(bool) = _baseAmt_1 > 0
TMP_47(bool) = _tokenAmt_1 > 0
TMP_48(bool) = TMP_46 && TMP_47
CONDITION TMP_48
TMP_49(uint256) = amount_1 (c)* _tokenAmt_1
TMP_50(uint256) = TMP_49 (c)/ _baseAmt_1
RETURN TMP_50


Propogating parameters and globals to SSA variables...
End popogation
token_1
token

Name: token_1 Function: None
Num: 
Den: 
Address: -994
Norm: u
LF: token
Value: u
Fields: 
Finance Type: undef
amount_1
amount
amount

Name: amount_1 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
POOLS_18
POOLS
POOLS

Name: None Function: None
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token2_1'])
Phi
[i]Type for token

Name: token Function: calcValueInToken
Num: 
Den: 
Address: -994
Norm: u
LF: token
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['TMP_51'])
Phi
[i]Type for amount

Name: amount Function: calcValueInToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
POOLS_18(address) := ϕ(['POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_35', 'POOLS_32', 'POOLS_9', 'POOLS_1', 'POOLS_26', 'POOLS_11', 'POOLS_21', 'POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_0', 'POOLS_29', 'POOLS_47'])
Phi
[i]Type for POOLS

Name: POOLS Function: calcValueInToken
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
token_1
token_1
token

Name: token Function: calcValueInToken
Num: 
Den: 
Address: -994
Norm: u
LF: token
Value: u
Fields: 
Finance Type: undef
POOLS_18
POOLS_18
POOLS

Name: POOLS Function: calcValueInToken
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
_baseAmt_1
_baseAmt_1
_baseAmt
_baseAmt

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_tokenAmt_1
_tokenAmt_1
_tokenAmt
_tokenAmt

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
POOLS_19
POOLS
POOLS

Name: None Function: None
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_45 = CONVERT POOLS_18 to iPOOLS
Converting POOLS_18

Name: POOLS Function: calcValueInToken
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
POOLS
[i]Type for TMP_45

Name: TMP_45 Function: calcValueInToken
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_1(uint256,uint256) = HIGH_LEVEL_CALL, dest:TMP_45(iPOOLS), function:getPoolAmounts, arguments:['token_1']  
High Call: getPoolAmounts
Running querryfc
Written func info: POOLS, getPoolAmounts
Retvar: ('c', ['global:VADER'], ['-1'], 0, 0, None)
{'global:FACTORY': 1, 'global:POOLS': 2, 'global:USDV': 3, 'global:VADER': 4, 'global:ROUTER': 5, 'assetChecks:collateralAsset': -999, 'assetChecks:debtAsset': -998, 'isBase:token': -997, 'isPool:token': -996, 'calcValueInBase:token': -995, 'calcValueInToken:token': -994, 'calcValueOfTokenInToken:token1': -993, 'calcValueOfTokenInToken:token2': -992, 'calcSwapValueInBase:token': -991, 'calcSwapValueInToken:token': -990, 'requirePriceBounds:token': -989, 'getRewardShare:token': -988, 'getProtection:member': -987, 'getProtection:token': -986, 'getCoverage:member': -985, 'getCoverage:token': -984, 'getCollateralValueInBase:member': -983, 'getCollateralValueInBase:collateralAsset': -982, 'getCollateralValueInBase:debtAsset': -981, 'getDebtValueInCollateral:member': -980, 'getDebtValueInCollateral:collateralAsset': -979, 'getDebtValueInCollateral:debtAsset': -978, 'getInterestOwed:collateralAsset': -977, 'getInterestOwed:debtAsset': -976, 'getInterestPayment:collateralAsset': -975, 'getInterestPayment:debtAsset': -974, 'getDebtLoading:collateralAsset': -973, 'getDebtLoading:debtAsset': -972, 'getDebtAsset:debtAsset': -971}
Retvar: ('c', ['global:USDV'], ['-1'], 0, 0, None)
{'global:FACTORY': 1, 'global:POOLS': 2, 'global:USDV': 3, 'global:VADER': 4, 'global:ROUTER': 5, 'assetChecks:collateralAsset': -999, 'assetChecks:debtAsset': -998, 'isBase:token': -997, 'isPool:token': -996, 'calcValueInBase:token': -995, 'calcValueInToken:token': -994, 'calcValueOfTokenInToken:token1': -993, 'calcValueOfTokenInToken:token2': -992, 'calcSwapValueInBase:token': -991, 'calcSwapValueInToken:token': -990, 'requirePriceBounds:token': -989, 'getRewardShare:token': -988, 'getProtection:member': -987, 'getProtection:token': -986, 'getCoverage:member': -985, 'getCoverage:token': -984, 'getCollateralValueInBase:member': -983, 'getCollateralValueInBase:collateralAsset': -982, 'getCollateralValueInBase:debtAsset': -981, 'getDebtValueInCollateral:member': -980, 'getDebtValueInCollateral:collateralAsset': -979, 'getDebtValueInCollateral:debtAsset': -978, 'getInterestOwed:collateralAsset': -977, 'getInterestOwed:debtAsset': -976, 'getInterestPayment:collateralAsset': -975, 'getInterestPayment:debtAsset': -974, 'getDebtLoading:collateralAsset': -973, 'getDebtLoading:debtAsset': -972, 'getDebtAsset:debtAsset': -971}
[i]Type for TUPLE_1

Name: TUPLE_1 Function: calcValueInToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
POOLS_19(address) := ϕ(['POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_35', 'POOLS_32', 'POOLS_1', 'POOLS_9', 'POOLS_26', 'POOLS_11', 'POOLS_21', 'POOLS_18', 'POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_47'])
Phi
[i]Type for POOLS

Name: POOLS Function: calcValueInToken
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
XXXX
_baseAmt_1(uint256)= UNPACK TUPLE_1 index: 0 
([4], [-1], 0, None, -1)
[i]Type for _baseAmt

Name: _baseAmt Function: calcValueInToken
Num: 4
Den: -1
Address: -1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_tokenAmt_1(uint256)= UNPACK TUPLE_1 index: 1 
([3], [-1], 0, None, -1)
[i]Type for _tokenAmt

Name: _tokenAmt Function: calcValueInToken
Num: 3
Den: -1
Address: -1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_baseAmt_1
_baseAmt_1
_baseAmt

Name: _baseAmt Function: calcValueInToken
Num: 4
Den: -1
Address: -1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
_tokenAmt_1
_tokenAmt_1
_tokenAmt

Name: _tokenAmt Function: calcValueInToken
Num: 3
Den: -1
Address: -1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_46(bool) = _baseAmt_1 > 0
[i]Type for TMP_46

Name: TMP_46 Function: calcValueInToken
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_47(bool) = _tokenAmt_1 > 0
[i]Type for TMP_47

Name: TMP_47 Function: calcValueInToken
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_48(bool) = TMP_46 && TMP_47
[i]Type for TMP_48

Name: TMP_48 Function: calcValueInToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
amount_1
amount_1
amount
amount

Name: amount_1 Function: calcValueInToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_baseAmt_1
_baseAmt_1
_baseAmt

Name: _baseAmt Function: calcValueInToken
Num: 4
Den: -1
Address: -1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
_tokenAmt_1
_tokenAmt_1
_tokenAmt

Name: _tokenAmt Function: calcValueInToken
Num: 3
Den: -1
Address: -1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_49(uint256) = amount_1 (c)* _tokenAmt_1
[i]Type for TMP_49

Name: TMP_49 Function: calcValueInToken
Num: 3
Den: -1
Address: -1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_50(uint256) = TMP_49 (c)/ _baseAmt_1
[i]Type for TMP_50

Name: TMP_50 Function: calcValueInToken
Num: 3
Den: 4
Address: -1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_50


token_1(address) := ϕ(['token2_1'])
amount_1(uint256) := ϕ(['TMP_51'])
POOLS_18(address) := ϕ(['POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_35', 'POOLS_32', 'POOLS_9', 'POOLS_1', 'POOLS_26', 'POOLS_11', 'POOLS_21', 'POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_0', 'POOLS_29', 'POOLS_47'])
TMP_45 = CONVERT POOLS_18 to iPOOLS
TUPLE_1(uint256,uint256) = HIGH_LEVEL_CALL, dest:TMP_45(iPOOLS), function:getPoolAmounts, arguments:['token_1']  
POOLS_19(address) := ϕ(['POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_35', 'POOLS_32', 'POOLS_1', 'POOLS_9', 'POOLS_26', 'POOLS_11', 'POOLS_21', 'POOLS_18', 'POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_47'])
_baseAmt_1(uint256)= UNPACK TUPLE_1 index: 0 
_tokenAmt_1(uint256)= UNPACK TUPLE_1 index: 1 
TMP_46(bool) = _baseAmt_1 > 0
TMP_47(bool) = _tokenAmt_1 > 0
TMP_48(bool) = TMP_46 && TMP_47
CONDITION TMP_48
TMP_49(uint256) = amount_1 (c)* _tokenAmt_1
TMP_50(uint256) = TMP_49 (c)/ _baseAmt_1
RETURN TMP_50


Propogating parameters and globals to SSA variables...
End popogation
token_1
token

Name: token_1 Function: calcValueInToken
Num: 
Den: 
Address: -994
Norm: u
LF: token
Value: u
Fields: 
Finance Type: undef
amount_1
amount
amount

Name: amount_1 Function: calcValueInToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
POOLS_18
POOLS

Name: POOLS Function: calcValueInToken
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token2_1'])
Phi
[i]Type for token

Name: token Function: calcValueInToken
Num: 
Den: 
Address: -994
Norm: u
LF: token
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['TMP_51'])
Phi
[i]Type for amount

Name: amount Function: calcValueInToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
POOLS_18(address) := ϕ(['POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_35', 'POOLS_32', 'POOLS_9', 'POOLS_1', 'POOLS_26', 'POOLS_11', 'POOLS_21', 'POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_0', 'POOLS_29', 'POOLS_47'])
Phi
[i]Type for POOLS

Name: POOLS Function: calcValueInToken
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
token_1
token_1
token

Name: token Function: calcValueInToken
Num: 
Den: 
Address: -994
Norm: u
LF: token
Value: u
Fields: 
Finance Type: undef
POOLS_18
POOLS_18
POOLS

Name: POOLS Function: calcValueInToken
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
_baseAmt_1
_baseAmt_1
_baseAmt
_baseAmt

Name: _baseAmt Function: calcValueInToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_tokenAmt_1
_tokenAmt_1
_tokenAmt
_tokenAmt

Name: _tokenAmt Function: calcValueInToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
POOLS_19
POOLS

Name: POOLS Function: calcValueInToken
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_45 = CONVERT POOLS_18 to iPOOLS
Converting POOLS_18

Name: POOLS Function: calcValueInToken
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
POOLS
[i]Type for TMP_45

Name: TMP_45 Function: calcValueInToken
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_1(uint256,uint256) = HIGH_LEVEL_CALL, dest:TMP_45(iPOOLS), function:getPoolAmounts, arguments:['token_1']  
High Call: getPoolAmounts
Running querryfc
Written func info: POOLS, getPoolAmounts
Retvar: ('c', ['global:VADER'], ['-1'], 0, 0, None)
{'global:FACTORY': 1, 'global:POOLS': 2, 'global:USDV': 3, 'global:VADER': 4, 'global:ROUTER': 5, 'assetChecks:collateralAsset': -999, 'assetChecks:debtAsset': -998, 'isBase:token': -997, 'isPool:token': -996, 'calcValueInBase:token': -995, 'calcValueInToken:token': -994, 'calcValueOfTokenInToken:token1': -993, 'calcValueOfTokenInToken:token2': -992, 'calcSwapValueInBase:token': -991, 'calcSwapValueInToken:token': -990, 'requirePriceBounds:token': -989, 'getRewardShare:token': -988, 'getProtection:member': -987, 'getProtection:token': -986, 'getCoverage:member': -985, 'getCoverage:token': -984, 'getCollateralValueInBase:member': -983, 'getCollateralValueInBase:collateralAsset': -982, 'getCollateralValueInBase:debtAsset': -981, 'getDebtValueInCollateral:member': -980, 'getDebtValueInCollateral:collateralAsset': -979, 'getDebtValueInCollateral:debtAsset': -978, 'getInterestOwed:collateralAsset': -977, 'getInterestOwed:debtAsset': -976, 'getInterestPayment:collateralAsset': -975, 'getInterestPayment:debtAsset': -974, 'getDebtLoading:collateralAsset': -973, 'getDebtLoading:debtAsset': -972, 'getDebtAsset:debtAsset': -971}
Retvar: ('c', ['global:USDV'], ['-1'], 0, 0, None)
{'global:FACTORY': 1, 'global:POOLS': 2, 'global:USDV': 3, 'global:VADER': 4, 'global:ROUTER': 5, 'assetChecks:collateralAsset': -999, 'assetChecks:debtAsset': -998, 'isBase:token': -997, 'isPool:token': -996, 'calcValueInBase:token': -995, 'calcValueInToken:token': -994, 'calcValueOfTokenInToken:token1': -993, 'calcValueOfTokenInToken:token2': -992, 'calcSwapValueInBase:token': -991, 'calcSwapValueInToken:token': -990, 'requirePriceBounds:token': -989, 'getRewardShare:token': -988, 'getProtection:member': -987, 'getProtection:token': -986, 'getCoverage:member': -985, 'getCoverage:token': -984, 'getCollateralValueInBase:member': -983, 'getCollateralValueInBase:collateralAsset': -982, 'getCollateralValueInBase:debtAsset': -981, 'getDebtValueInCollateral:member': -980, 'getDebtValueInCollateral:collateralAsset': -979, 'getDebtValueInCollateral:debtAsset': -978, 'getInterestOwed:collateralAsset': -977, 'getInterestOwed:debtAsset': -976, 'getInterestPayment:collateralAsset': -975, 'getInterestPayment:debtAsset': -974, 'getDebtLoading:collateralAsset': -973, 'getDebtLoading:debtAsset': -972, 'getDebtAsset:debtAsset': -971}
[i]Type for TUPLE_1

Name: TUPLE_1 Function: calcValueInToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
POOLS_19(address) := ϕ(['POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_35', 'POOLS_32', 'POOLS_1', 'POOLS_9', 'POOLS_26', 'POOLS_11', 'POOLS_21', 'POOLS_18', 'POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_47'])
Phi
[i]Type for POOLS

Name: POOLS Function: calcValueInToken
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
XXXX
_baseAmt_1(uint256)= UNPACK TUPLE_1 index: 0 
([4], [-1], 0, None, -1)
[i]Type for _baseAmt

Name: _baseAmt Function: calcValueInToken
Num: 4
Den: -1
Address: -1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_tokenAmt_1(uint256)= UNPACK TUPLE_1 index: 1 
([3], [-1], 0, None, -1)
[i]Type for _tokenAmt

Name: _tokenAmt Function: calcValueInToken
Num: 3
Den: -1
Address: -1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_baseAmt_1
_baseAmt_1
_baseAmt

Name: _baseAmt Function: calcValueInToken
Num: 4
Den: -1
Address: -1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
_tokenAmt_1
_tokenAmt_1
_tokenAmt

Name: _tokenAmt Function: calcValueInToken
Num: 3
Den: -1
Address: -1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_46(bool) = _baseAmt_1 > 0
[i]Type for TMP_46

Name: TMP_46 Function: calcValueInToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_47(bool) = _tokenAmt_1 > 0
[i]Type for TMP_47

Name: TMP_47 Function: calcValueInToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_48(bool) = TMP_46 && TMP_47
[i]Type for TMP_48

Name: TMP_48 Function: calcValueInToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
amount_1
amount_1
amount
amount

Name: amount_1 Function: calcValueInToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_baseAmt_1
_baseAmt_1
_baseAmt

Name: _baseAmt Function: calcValueInToken
Num: 4
Den: -1
Address: -1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
_tokenAmt_1
_tokenAmt_1
_tokenAmt

Name: _tokenAmt Function: calcValueInToken
Num: 3
Den: -1
Address: -1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_49(uint256) = amount_1 (c)* _tokenAmt_1
[i]Type for TMP_49

Name: TMP_49 Function: calcValueInToken
Num: 3
Den: -1
Address: -1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_50(uint256) = TMP_49 (c)/ _baseAmt_1
[i]Type for TMP_50

Name: TMP_50 Function: calcValueInToken
Num: 3
Den: 4
Address: -1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_50



calcValueOfTokenInToken
Finding type for token1(address ... )
prev address? u
Head Addr: -993
    Norm: 0
    Set: {-993}
    Fin: NULL
Finding type for amount(uint256 ... )
Finding type for token2(address ... )
prev address? u
Head Addr: -992
    Norm: 0
    Set: {-992}
    Fin: NULL
Param: 0
    num: []
    den: []
    norm: u
    link: token1
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: []
    den: []
    norm: u
    link: token2
    fields: []
    fintype: -1


token1_1(address) := ϕ(['debtAsset_1'])
amount_1(uint256) := ϕ(['_interestPayment_1'])
token2_1(address) := ϕ(['collateralAsset_1'])
TMP_51(uint256) = INTERNAL_CALL, Utils.calcValueInBase(address,uint256)(token1_1,amount_1)
TMP_52(uint256) = INTERNAL_CALL, Utils.calcValueInToken(address,uint256)(token2_1,TMP_51)
RETURN TMP_52


Propogating parameters and globals to SSA variables...
End popogation
token1_1
token1

Name: token1_1 Function: None
Num: 
Den: 
Address: -993
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
amount_1
amount
amount

Name: amount_1 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token2_1
token2

Name: token2_1 Function: None
Num: 
Den: 
Address: -992
Norm: u
LF: token2
Value: u
Fields: 
Finance Type: undef
token1_1(address) := ϕ(['debtAsset_1'])
Phi
[i]Type for token1

Name: token1 Function: calcValueOfTokenInToken
Num: 
Den: 
Address: -993
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['_interestPayment_1'])
Phi
[i]Type for amount

Name: amount Function: calcValueOfTokenInToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
token2_1(address) := ϕ(['collateralAsset_1'])
Phi
[i]Type for token2

Name: token2 Function: calcValueOfTokenInToken
Num: 
Den: 
Address: -992
Norm: u
LF: token2
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
token2_1
token2_1
token2

Name: token2 Function: calcValueOfTokenInToken
Num: 
Den: 
Address: -992
Norm: u
LF: token2
Value: u
Fields: 
Finance Type: undef
amount_1
amount_1
amount
amount

Name: amount_1 Function: calcValueOfTokenInToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token1_1
token1_1
token1

Name: token1 Function: calcValueOfTokenInToken
Num: 
Den: 
Address: -993
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_51(uint256) = INTERNAL_CALL, Utils.calcValueInBase(address,uint256)(token1_1,amount_1)
[i]Type for TMP_51

Name: TMP_51 Function: calcValueOfTokenInToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_52(uint256) = INTERNAL_CALL, Utils.calcValueInToken(address,uint256)(token2_1,TMP_51)
[i]Type for TMP_52

Name: TMP_52 Function: calcValueOfTokenInToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_52


token1_1(address) := ϕ(['debtAsset_1'])
amount_1(uint256) := ϕ(['_interestPayment_1'])
token2_1(address) := ϕ(['collateralAsset_1'])
TMP_51(uint256) = INTERNAL_CALL, Utils.calcValueInBase(address,uint256)(token1_1,amount_1)
TMP_52(uint256) = INTERNAL_CALL, Utils.calcValueInToken(address,uint256)(token2_1,TMP_51)
RETURN TMP_52


Propogating parameters and globals to SSA variables...
End popogation
token1_1
token1

Name: token1_1 Function: calcValueOfTokenInToken
Num: 
Den: 
Address: -993
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
amount_1
amount
amount

Name: amount_1 Function: calcValueOfTokenInToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token2_1
token2

Name: token2_1 Function: calcValueOfTokenInToken
Num: 
Den: 
Address: -992
Norm: u
LF: token2
Value: u
Fields: 
Finance Type: undef
token1_1(address) := ϕ(['debtAsset_1'])
Phi
[i]Type for token1

Name: token1 Function: calcValueOfTokenInToken
Num: 
Den: 
Address: -993
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['_interestPayment_1'])
Phi
[i]Type for amount

Name: amount Function: calcValueOfTokenInToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
token2_1(address) := ϕ(['collateralAsset_1'])
Phi
[i]Type for token2

Name: token2 Function: calcValueOfTokenInToken
Num: 
Den: 
Address: -992
Norm: u
LF: token2
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
token2_1
token2_1
token2

Name: token2 Function: calcValueOfTokenInToken
Num: 
Den: 
Address: -992
Norm: u
LF: token2
Value: u
Fields: 
Finance Type: undef
amount_1
amount_1
amount
amount

Name: amount_1 Function: calcValueOfTokenInToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token1_1
token1_1
token1

Name: token1 Function: calcValueOfTokenInToken
Num: 
Den: 
Address: -993
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_51(uint256) = INTERNAL_CALL, Utils.calcValueInBase(address,uint256)(token1_1,amount_1)
[i]Type for TMP_51

Name: TMP_51 Function: calcValueOfTokenInToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_52(uint256) = INTERNAL_CALL, Utils.calcValueInToken(address,uint256)(token2_1,TMP_51)
[i]Type for TMP_52

Name: TMP_52 Function: calcValueOfTokenInToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_52



calcSwapValueInBase
Finding type for token(address ... )
prev address? u
Head Addr: -991
    Norm: 0
    Set: {-991}
    Fin: NULL
Finding type for amount(uint256 ... )
Param: 0
    num: []
    den: []
    norm: u
    link: token
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1


token_1(address) := ϕ(['TMP_133'])
amount_1(uint256) := ϕ(['_collateralAdjusted_1'])
POOLS_20(address) := ϕ(['POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_35', 'POOLS_32', 'POOLS_9', 'POOLS_1', 'POOLS_26', 'POOLS_11', 'POOLS_21', 'POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_0', 'POOLS_29', 'POOLS_47'])
TMP_53 = CONVERT POOLS_20 to iPOOLS
TUPLE_2(uint256,uint256) = HIGH_LEVEL_CALL, dest:TMP_53(iPOOLS), function:getPoolAmounts, arguments:['token_1']  
POOLS_21(address) := ϕ(['POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_35', 'POOLS_20', 'POOLS_32', 'POOLS_1', 'POOLS_9', 'POOLS_26', 'POOLS_11', 'POOLS_21', 'POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_47'])
_baseAmt_1(uint256)= UNPACK TUPLE_2 index: 0 
_tokenAmt_1(uint256)= UNPACK TUPLE_2 index: 1 
TMP_54(uint256) = INTERNAL_CALL, Utils.calcSwapOutput(uint256,uint256,uint256)(amount_1,_tokenAmt_1,_baseAmt_1)
RETURN TMP_54


Propogating parameters and globals to SSA variables...
End popogation
token_1
token

Name: token_1 Function: None
Num: 
Den: 
Address: -991
Norm: u
LF: token
Value: u
Fields: 
Finance Type: undef
amount_1
amount
amount

Name: amount_1 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
POOLS_20
POOLS
POOLS

Name: None Function: None
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['TMP_133'])
Phi
[i]Type for token

Name: token Function: calcSwapValueInBase
Num: 
Den: 
Address: -991
Norm: u
LF: token
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['_collateralAdjusted_1'])
Phi
[i]Type for amount

Name: amount Function: calcSwapValueInBase
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
POOLS_20(address) := ϕ(['POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_35', 'POOLS_32', 'POOLS_9', 'POOLS_1', 'POOLS_26', 'POOLS_11', 'POOLS_21', 'POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_0', 'POOLS_29', 'POOLS_47'])
Phi
[i]Type for POOLS

Name: POOLS Function: calcSwapValueInBase
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
POOLS_20
POOLS_20
POOLS

Name: POOLS Function: calcSwapValueInBase
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
token_1
token_1
token

Name: token Function: calcSwapValueInBase
Num: 
Den: 
Address: -991
Norm: u
LF: token
Value: u
Fields: 
Finance Type: undef
_baseAmt_1
_baseAmt_1
_baseAmt
_baseAmt

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_tokenAmt_1
_tokenAmt_1
_tokenAmt
_tokenAmt

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
POOLS_21
POOLS
POOLS

Name: None Function: None
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_53 = CONVERT POOLS_20 to iPOOLS
Converting POOLS_20

Name: POOLS Function: calcSwapValueInBase
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
POOLS
[i]Type for TMP_53

Name: TMP_53 Function: calcSwapValueInBase
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_2(uint256,uint256) = HIGH_LEVEL_CALL, dest:TMP_53(iPOOLS), function:getPoolAmounts, arguments:['token_1']  
High Call: getPoolAmounts
Running querryfc
Written func info: POOLS, getPoolAmounts
Retvar: ('c', ['global:VADER'], ['-1'], 0, 0, None)
{'global:FACTORY': 1, 'global:POOLS': 2, 'global:USDV': 3, 'global:VADER': 4, 'global:ROUTER': 5, 'assetChecks:collateralAsset': -999, 'assetChecks:debtAsset': -998, 'isBase:token': -997, 'isPool:token': -996, 'calcValueInBase:token': -995, 'calcValueInToken:token': -994, 'calcValueOfTokenInToken:token1': -993, 'calcValueOfTokenInToken:token2': -992, 'calcSwapValueInBase:token': -991, 'calcSwapValueInToken:token': -990, 'requirePriceBounds:token': -989, 'getRewardShare:token': -988, 'getProtection:member': -987, 'getProtection:token': -986, 'getCoverage:member': -985, 'getCoverage:token': -984, 'getCollateralValueInBase:member': -983, 'getCollateralValueInBase:collateralAsset': -982, 'getCollateralValueInBase:debtAsset': -981, 'getDebtValueInCollateral:member': -980, 'getDebtValueInCollateral:collateralAsset': -979, 'getDebtValueInCollateral:debtAsset': -978, 'getInterestOwed:collateralAsset': -977, 'getInterestOwed:debtAsset': -976, 'getInterestPayment:collateralAsset': -975, 'getInterestPayment:debtAsset': -974, 'getDebtLoading:collateralAsset': -973, 'getDebtLoading:debtAsset': -972, 'getDebtAsset:debtAsset': -971}
Retvar: ('c', ['global:USDV'], ['-1'], 0, 0, None)
{'global:FACTORY': 1, 'global:POOLS': 2, 'global:USDV': 3, 'global:VADER': 4, 'global:ROUTER': 5, 'assetChecks:collateralAsset': -999, 'assetChecks:debtAsset': -998, 'isBase:token': -997, 'isPool:token': -996, 'calcValueInBase:token': -995, 'calcValueInToken:token': -994, 'calcValueOfTokenInToken:token1': -993, 'calcValueOfTokenInToken:token2': -992, 'calcSwapValueInBase:token': -991, 'calcSwapValueInToken:token': -990, 'requirePriceBounds:token': -989, 'getRewardShare:token': -988, 'getProtection:member': -987, 'getProtection:token': -986, 'getCoverage:member': -985, 'getCoverage:token': -984, 'getCollateralValueInBase:member': -983, 'getCollateralValueInBase:collateralAsset': -982, 'getCollateralValueInBase:debtAsset': -981, 'getDebtValueInCollateral:member': -980, 'getDebtValueInCollateral:collateralAsset': -979, 'getDebtValueInCollateral:debtAsset': -978, 'getInterestOwed:collateralAsset': -977, 'getInterestOwed:debtAsset': -976, 'getInterestPayment:collateralAsset': -975, 'getInterestPayment:debtAsset': -974, 'getDebtLoading:collateralAsset': -973, 'getDebtLoading:debtAsset': -972, 'getDebtAsset:debtAsset': -971}
[i]Type for TUPLE_2

Name: TUPLE_2 Function: calcSwapValueInBase
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
POOLS_21(address) := ϕ(['POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_35', 'POOLS_20', 'POOLS_32', 'POOLS_1', 'POOLS_9', 'POOLS_26', 'POOLS_11', 'POOLS_21', 'POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_47'])
Phi
[i]Type for POOLS

Name: POOLS Function: calcSwapValueInBase
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
XXXX
_baseAmt_1(uint256)= UNPACK TUPLE_2 index: 0 
([4], [-1], 0, None, -1)
[i]Type for _baseAmt

Name: _baseAmt Function: calcSwapValueInBase
Num: 4
Den: -1
Address: -1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_tokenAmt_1(uint256)= UNPACK TUPLE_2 index: 1 
([3], [-1], 0, None, -1)
[i]Type for _tokenAmt

Name: _tokenAmt Function: calcSwapValueInBase
Num: 3
Den: -1
Address: -1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_baseAmt_1
_baseAmt_1
_baseAmt

Name: _baseAmt Function: calcSwapValueInBase
Num: 4
Den: -1
Address: -1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
_tokenAmt_1
_tokenAmt_1
_tokenAmt

Name: _tokenAmt Function: calcSwapValueInBase
Num: 3
Den: -1
Address: -1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
amount_1
amount_1
amount
amount

Name: amount_1 Function: calcSwapValueInBase
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_54(uint256) = INTERNAL_CALL, Utils.calcSwapOutput(uint256,uint256,uint256)(amount_1,_tokenAmt_1,_baseAmt_1)
[i]Type for TMP_54

Name: TMP_54 Function: calcSwapValueInBase
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_54


token_1(address) := ϕ(['TMP_133'])
amount_1(uint256) := ϕ(['_collateralAdjusted_1'])
POOLS_20(address) := ϕ(['POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_35', 'POOLS_32', 'POOLS_9', 'POOLS_1', 'POOLS_26', 'POOLS_11', 'POOLS_21', 'POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_0', 'POOLS_29', 'POOLS_47'])
TMP_53 = CONVERT POOLS_20 to iPOOLS
TUPLE_2(uint256,uint256) = HIGH_LEVEL_CALL, dest:TMP_53(iPOOLS), function:getPoolAmounts, arguments:['token_1']  
POOLS_21(address) := ϕ(['POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_35', 'POOLS_20', 'POOLS_32', 'POOLS_1', 'POOLS_9', 'POOLS_26', 'POOLS_11', 'POOLS_21', 'POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_47'])
_baseAmt_1(uint256)= UNPACK TUPLE_2 index: 0 
_tokenAmt_1(uint256)= UNPACK TUPLE_2 index: 1 
TMP_54(uint256) = INTERNAL_CALL, Utils.calcSwapOutput(uint256,uint256,uint256)(amount_1,_tokenAmt_1,_baseAmt_1)
RETURN TMP_54


Propogating parameters and globals to SSA variables...
End popogation
token_1
token

Name: token_1 Function: calcSwapValueInBase
Num: 
Den: 
Address: -991
Norm: u
LF: token
Value: u
Fields: 
Finance Type: undef
amount_1
amount
amount

Name: amount_1 Function: calcSwapValueInBase
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
POOLS_20
POOLS

Name: POOLS Function: calcSwapValueInBase
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['TMP_133'])
Phi
[i]Type for token

Name: token Function: calcSwapValueInBase
Num: 
Den: 
Address: -991
Norm: u
LF: token
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['_collateralAdjusted_1'])
Phi
[i]Type for amount

Name: amount Function: calcSwapValueInBase
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
POOLS_20(address) := ϕ(['POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_35', 'POOLS_32', 'POOLS_9', 'POOLS_1', 'POOLS_26', 'POOLS_11', 'POOLS_21', 'POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_0', 'POOLS_29', 'POOLS_47'])
Phi
[i]Type for POOLS

Name: POOLS Function: calcSwapValueInBase
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
POOLS_20
POOLS_20
POOLS

Name: POOLS Function: calcSwapValueInBase
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
token_1
token_1
token

Name: token Function: calcSwapValueInBase
Num: 
Den: 
Address: -991
Norm: u
LF: token
Value: u
Fields: 
Finance Type: undef
_baseAmt_1
_baseAmt_1
_baseAmt
_baseAmt

Name: _baseAmt Function: calcSwapValueInBase
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_tokenAmt_1
_tokenAmt_1
_tokenAmt
_tokenAmt

Name: _tokenAmt Function: calcSwapValueInBase
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
POOLS_21
POOLS

Name: POOLS Function: calcSwapValueInBase
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_53 = CONVERT POOLS_20 to iPOOLS
Converting POOLS_20

Name: POOLS Function: calcSwapValueInBase
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
POOLS
[i]Type for TMP_53

Name: TMP_53 Function: calcSwapValueInBase
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_2(uint256,uint256) = HIGH_LEVEL_CALL, dest:TMP_53(iPOOLS), function:getPoolAmounts, arguments:['token_1']  
High Call: getPoolAmounts
Running querryfc
Written func info: POOLS, getPoolAmounts
Retvar: ('c', ['global:VADER'], ['-1'], 0, 0, None)
{'global:FACTORY': 1, 'global:POOLS': 2, 'global:USDV': 3, 'global:VADER': 4, 'global:ROUTER': 5, 'assetChecks:collateralAsset': -999, 'assetChecks:debtAsset': -998, 'isBase:token': -997, 'isPool:token': -996, 'calcValueInBase:token': -995, 'calcValueInToken:token': -994, 'calcValueOfTokenInToken:token1': -993, 'calcValueOfTokenInToken:token2': -992, 'calcSwapValueInBase:token': -991, 'calcSwapValueInToken:token': -990, 'requirePriceBounds:token': -989, 'getRewardShare:token': -988, 'getProtection:member': -987, 'getProtection:token': -986, 'getCoverage:member': -985, 'getCoverage:token': -984, 'getCollateralValueInBase:member': -983, 'getCollateralValueInBase:collateralAsset': -982, 'getCollateralValueInBase:debtAsset': -981, 'getDebtValueInCollateral:member': -980, 'getDebtValueInCollateral:collateralAsset': -979, 'getDebtValueInCollateral:debtAsset': -978, 'getInterestOwed:collateralAsset': -977, 'getInterestOwed:debtAsset': -976, 'getInterestPayment:collateralAsset': -975, 'getInterestPayment:debtAsset': -974, 'getDebtLoading:collateralAsset': -973, 'getDebtLoading:debtAsset': -972, 'getDebtAsset:debtAsset': -971}
Retvar: ('c', ['global:USDV'], ['-1'], 0, 0, None)
{'global:FACTORY': 1, 'global:POOLS': 2, 'global:USDV': 3, 'global:VADER': 4, 'global:ROUTER': 5, 'assetChecks:collateralAsset': -999, 'assetChecks:debtAsset': -998, 'isBase:token': -997, 'isPool:token': -996, 'calcValueInBase:token': -995, 'calcValueInToken:token': -994, 'calcValueOfTokenInToken:token1': -993, 'calcValueOfTokenInToken:token2': -992, 'calcSwapValueInBase:token': -991, 'calcSwapValueInToken:token': -990, 'requirePriceBounds:token': -989, 'getRewardShare:token': -988, 'getProtection:member': -987, 'getProtection:token': -986, 'getCoverage:member': -985, 'getCoverage:token': -984, 'getCollateralValueInBase:member': -983, 'getCollateralValueInBase:collateralAsset': -982, 'getCollateralValueInBase:debtAsset': -981, 'getDebtValueInCollateral:member': -980, 'getDebtValueInCollateral:collateralAsset': -979, 'getDebtValueInCollateral:debtAsset': -978, 'getInterestOwed:collateralAsset': -977, 'getInterestOwed:debtAsset': -976, 'getInterestPayment:collateralAsset': -975, 'getInterestPayment:debtAsset': -974, 'getDebtLoading:collateralAsset': -973, 'getDebtLoading:debtAsset': -972, 'getDebtAsset:debtAsset': -971}
[i]Type for TUPLE_2

Name: TUPLE_2 Function: calcSwapValueInBase
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
POOLS_21(address) := ϕ(['POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_35', 'POOLS_20', 'POOLS_32', 'POOLS_1', 'POOLS_9', 'POOLS_26', 'POOLS_11', 'POOLS_21', 'POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_47'])
Phi
[i]Type for POOLS

Name: POOLS Function: calcSwapValueInBase
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
XXXX
_baseAmt_1(uint256)= UNPACK TUPLE_2 index: 0 
([4], [-1], 0, None, -1)
[i]Type for _baseAmt

Name: _baseAmt Function: calcSwapValueInBase
Num: 4
Den: -1
Address: -1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_tokenAmt_1(uint256)= UNPACK TUPLE_2 index: 1 
([3], [-1], 0, None, -1)
[i]Type for _tokenAmt

Name: _tokenAmt Function: calcSwapValueInBase
Num: 3
Den: -1
Address: -1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_baseAmt_1
_baseAmt_1
_baseAmt

Name: _baseAmt Function: calcSwapValueInBase
Num: 4
Den: -1
Address: -1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
_tokenAmt_1
_tokenAmt_1
_tokenAmt

Name: _tokenAmt Function: calcSwapValueInBase
Num: 3
Den: -1
Address: -1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
amount_1
amount_1
amount
amount

Name: amount_1 Function: calcSwapValueInBase
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_54(uint256) = INTERNAL_CALL, Utils.calcSwapOutput(uint256,uint256,uint256)(amount_1,_tokenAmt_1,_baseAmt_1)
[i]Type for TMP_54

Name: TMP_54 Function: calcSwapValueInBase
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_54



calcSwapValueInToken
Finding type for token(address ... )
prev address? u
Head Addr: -990
    Norm: 0
    Set: {-990}
    Fin: NULL
Finding type for amount(uint256 ... )
Param: 0
    num: []
    den: []
    norm: u
    link: token
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1


token_1(address) := ϕ(['debtAsset_1'])
amount_1(uint256) := ϕ(['baseValue_6'])
POOLS_22(address) := ϕ(['POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_35', 'POOLS_32', 'POOLS_9', 'POOLS_1', 'POOLS_26', 'POOLS_11', 'POOLS_21', 'POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_0', 'POOLS_29', 'POOLS_47'])
TMP_55 = CONVERT POOLS_22 to iPOOLS
TUPLE_3(uint256,uint256) = HIGH_LEVEL_CALL, dest:TMP_55(iPOOLS), function:getPoolAmounts, arguments:['token_1']  
POOLS_23(address) := ϕ(['POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_22', 'POOLS_35', 'POOLS_32', 'POOLS_1', 'POOLS_9', 'POOLS_26', 'POOLS_11', 'POOLS_21', 'POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_47'])
_baseAmt_1(uint256)= UNPACK TUPLE_3 index: 0 
_tokenAmt_1(uint256)= UNPACK TUPLE_3 index: 1 
TMP_56(uint256) = INTERNAL_CALL, Utils.calcSwapOutput(uint256,uint256,uint256)(amount_1,_baseAmt_1,_tokenAmt_1)
RETURN TMP_56


Propogating parameters and globals to SSA variables...
End popogation
token_1
token

Name: token_1 Function: None
Num: 
Den: 
Address: -990
Norm: u
LF: token
Value: u
Fields: 
Finance Type: undef
amount_1
amount
amount

Name: amount_1 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
POOLS_22
POOLS
POOLS

Name: None Function: None
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['debtAsset_1'])
Phi
[i]Type for token

Name: token Function: calcSwapValueInToken
Num: 
Den: 
Address: -990
Norm: u
LF: token
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['baseValue_6'])
Phi
[i]Type for amount

Name: amount Function: calcSwapValueInToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
POOLS_22(address) := ϕ(['POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_35', 'POOLS_32', 'POOLS_9', 'POOLS_1', 'POOLS_26', 'POOLS_11', 'POOLS_21', 'POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_0', 'POOLS_29', 'POOLS_47'])
Phi
[i]Type for POOLS

Name: POOLS Function: calcSwapValueInToken
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
POOLS_22
POOLS_22
POOLS

Name: POOLS Function: calcSwapValueInToken
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
token_1
token_1
token

Name: token Function: calcSwapValueInToken
Num: 
Den: 
Address: -990
Norm: u
LF: token
Value: u
Fields: 
Finance Type: undef
_baseAmt_1
_baseAmt_1
_baseAmt
_baseAmt

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_tokenAmt_1
_tokenAmt_1
_tokenAmt
_tokenAmt

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
POOLS_23
POOLS
POOLS

Name: None Function: None
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_55 = CONVERT POOLS_22 to iPOOLS
Converting POOLS_22

Name: POOLS Function: calcSwapValueInToken
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
POOLS
[i]Type for TMP_55

Name: TMP_55 Function: calcSwapValueInToken
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_3(uint256,uint256) = HIGH_LEVEL_CALL, dest:TMP_55(iPOOLS), function:getPoolAmounts, arguments:['token_1']  
High Call: getPoolAmounts
Running querryfc
Written func info: POOLS, getPoolAmounts
Retvar: ('c', ['global:VADER'], ['-1'], 0, 0, None)
{'global:FACTORY': 1, 'global:POOLS': 2, 'global:USDV': 3, 'global:VADER': 4, 'global:ROUTER': 5, 'assetChecks:collateralAsset': -999, 'assetChecks:debtAsset': -998, 'isBase:token': -997, 'isPool:token': -996, 'calcValueInBase:token': -995, 'calcValueInToken:token': -994, 'calcValueOfTokenInToken:token1': -993, 'calcValueOfTokenInToken:token2': -992, 'calcSwapValueInBase:token': -991, 'calcSwapValueInToken:token': -990, 'requirePriceBounds:token': -989, 'getRewardShare:token': -988, 'getProtection:member': -987, 'getProtection:token': -986, 'getCoverage:member': -985, 'getCoverage:token': -984, 'getCollateralValueInBase:member': -983, 'getCollateralValueInBase:collateralAsset': -982, 'getCollateralValueInBase:debtAsset': -981, 'getDebtValueInCollateral:member': -980, 'getDebtValueInCollateral:collateralAsset': -979, 'getDebtValueInCollateral:debtAsset': -978, 'getInterestOwed:collateralAsset': -977, 'getInterestOwed:debtAsset': -976, 'getInterestPayment:collateralAsset': -975, 'getInterestPayment:debtAsset': -974, 'getDebtLoading:collateralAsset': -973, 'getDebtLoading:debtAsset': -972, 'getDebtAsset:debtAsset': -971}
Retvar: ('c', ['global:USDV'], ['-1'], 0, 0, None)
{'global:FACTORY': 1, 'global:POOLS': 2, 'global:USDV': 3, 'global:VADER': 4, 'global:ROUTER': 5, 'assetChecks:collateralAsset': -999, 'assetChecks:debtAsset': -998, 'isBase:token': -997, 'isPool:token': -996, 'calcValueInBase:token': -995, 'calcValueInToken:token': -994, 'calcValueOfTokenInToken:token1': -993, 'calcValueOfTokenInToken:token2': -992, 'calcSwapValueInBase:token': -991, 'calcSwapValueInToken:token': -990, 'requirePriceBounds:token': -989, 'getRewardShare:token': -988, 'getProtection:member': -987, 'getProtection:token': -986, 'getCoverage:member': -985, 'getCoverage:token': -984, 'getCollateralValueInBase:member': -983, 'getCollateralValueInBase:collateralAsset': -982, 'getCollateralValueInBase:debtAsset': -981, 'getDebtValueInCollateral:member': -980, 'getDebtValueInCollateral:collateralAsset': -979, 'getDebtValueInCollateral:debtAsset': -978, 'getInterestOwed:collateralAsset': -977, 'getInterestOwed:debtAsset': -976, 'getInterestPayment:collateralAsset': -975, 'getInterestPayment:debtAsset': -974, 'getDebtLoading:collateralAsset': -973, 'getDebtLoading:debtAsset': -972, 'getDebtAsset:debtAsset': -971}
[i]Type for TUPLE_3

Name: TUPLE_3 Function: calcSwapValueInToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
POOLS_23(address) := ϕ(['POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_22', 'POOLS_35', 'POOLS_32', 'POOLS_1', 'POOLS_9', 'POOLS_26', 'POOLS_11', 'POOLS_21', 'POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_47'])
Phi
[i]Type for POOLS

Name: POOLS Function: calcSwapValueInToken
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
XXXX
_baseAmt_1(uint256)= UNPACK TUPLE_3 index: 0 
([4], [-1], 0, None, -1)
[i]Type for _baseAmt

Name: _baseAmt Function: calcSwapValueInToken
Num: 4
Den: -1
Address: -1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_tokenAmt_1(uint256)= UNPACK TUPLE_3 index: 1 
([3], [-1], 0, None, -1)
[i]Type for _tokenAmt

Name: _tokenAmt Function: calcSwapValueInToken
Num: 3
Den: -1
Address: -1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_baseAmt_1
_baseAmt_1
_baseAmt

Name: _baseAmt Function: calcSwapValueInToken
Num: 4
Den: -1
Address: -1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
_tokenAmt_1
_tokenAmt_1
_tokenAmt

Name: _tokenAmt Function: calcSwapValueInToken
Num: 3
Den: -1
Address: -1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
amount_1
amount_1
amount
amount

Name: amount_1 Function: calcSwapValueInToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_56(uint256) = INTERNAL_CALL, Utils.calcSwapOutput(uint256,uint256,uint256)(amount_1,_baseAmt_1,_tokenAmt_1)
[i]Type for TMP_56

Name: TMP_56 Function: calcSwapValueInToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_56


token_1(address) := ϕ(['debtAsset_1'])
amount_1(uint256) := ϕ(['baseValue_6'])
POOLS_22(address) := ϕ(['POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_35', 'POOLS_32', 'POOLS_9', 'POOLS_1', 'POOLS_26', 'POOLS_11', 'POOLS_21', 'POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_0', 'POOLS_29', 'POOLS_47'])
TMP_55 = CONVERT POOLS_22 to iPOOLS
TUPLE_3(uint256,uint256) = HIGH_LEVEL_CALL, dest:TMP_55(iPOOLS), function:getPoolAmounts, arguments:['token_1']  
POOLS_23(address) := ϕ(['POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_22', 'POOLS_35', 'POOLS_32', 'POOLS_1', 'POOLS_9', 'POOLS_26', 'POOLS_11', 'POOLS_21', 'POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_47'])
_baseAmt_1(uint256)= UNPACK TUPLE_3 index: 0 
_tokenAmt_1(uint256)= UNPACK TUPLE_3 index: 1 
TMP_56(uint256) = INTERNAL_CALL, Utils.calcSwapOutput(uint256,uint256,uint256)(amount_1,_baseAmt_1,_tokenAmt_1)
RETURN TMP_56


Propogating parameters and globals to SSA variables...
End popogation
token_1
token

Name: token_1 Function: calcSwapValueInToken
Num: 
Den: 
Address: -990
Norm: u
LF: token
Value: u
Fields: 
Finance Type: undef
amount_1
amount
amount

Name: amount_1 Function: calcSwapValueInToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
POOLS_22
POOLS

Name: POOLS Function: calcSwapValueInToken
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['debtAsset_1'])
Phi
[i]Type for token

Name: token Function: calcSwapValueInToken
Num: 
Den: 
Address: -990
Norm: u
LF: token
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['baseValue_6'])
Phi
[i]Type for amount

Name: amount Function: calcSwapValueInToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
POOLS_22(address) := ϕ(['POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_35', 'POOLS_32', 'POOLS_9', 'POOLS_1', 'POOLS_26', 'POOLS_11', 'POOLS_21', 'POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_0', 'POOLS_29', 'POOLS_47'])
Phi
[i]Type for POOLS

Name: POOLS Function: calcSwapValueInToken
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
POOLS_22
POOLS_22
POOLS

Name: POOLS Function: calcSwapValueInToken
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
token_1
token_1
token

Name: token Function: calcSwapValueInToken
Num: 
Den: 
Address: -990
Norm: u
LF: token
Value: u
Fields: 
Finance Type: undef
_baseAmt_1
_baseAmt_1
_baseAmt
_baseAmt

Name: _baseAmt Function: calcSwapValueInToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_tokenAmt_1
_tokenAmt_1
_tokenAmt
_tokenAmt

Name: _tokenAmt Function: calcSwapValueInToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
POOLS_23
POOLS

Name: POOLS Function: calcSwapValueInToken
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_55 = CONVERT POOLS_22 to iPOOLS
Converting POOLS_22

Name: POOLS Function: calcSwapValueInToken
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
POOLS
[i]Type for TMP_55

Name: TMP_55 Function: calcSwapValueInToken
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_3(uint256,uint256) = HIGH_LEVEL_CALL, dest:TMP_55(iPOOLS), function:getPoolAmounts, arguments:['token_1']  
High Call: getPoolAmounts
Running querryfc
Written func info: POOLS, getPoolAmounts
Retvar: ('c', ['global:VADER'], ['-1'], 0, 0, None)
{'global:FACTORY': 1, 'global:POOLS': 2, 'global:USDV': 3, 'global:VADER': 4, 'global:ROUTER': 5, 'assetChecks:collateralAsset': -999, 'assetChecks:debtAsset': -998, 'isBase:token': -997, 'isPool:token': -996, 'calcValueInBase:token': -995, 'calcValueInToken:token': -994, 'calcValueOfTokenInToken:token1': -993, 'calcValueOfTokenInToken:token2': -992, 'calcSwapValueInBase:token': -991, 'calcSwapValueInToken:token': -990, 'requirePriceBounds:token': -989, 'getRewardShare:token': -988, 'getProtection:member': -987, 'getProtection:token': -986, 'getCoverage:member': -985, 'getCoverage:token': -984, 'getCollateralValueInBase:member': -983, 'getCollateralValueInBase:collateralAsset': -982, 'getCollateralValueInBase:debtAsset': -981, 'getDebtValueInCollateral:member': -980, 'getDebtValueInCollateral:collateralAsset': -979, 'getDebtValueInCollateral:debtAsset': -978, 'getInterestOwed:collateralAsset': -977, 'getInterestOwed:debtAsset': -976, 'getInterestPayment:collateralAsset': -975, 'getInterestPayment:debtAsset': -974, 'getDebtLoading:collateralAsset': -973, 'getDebtLoading:debtAsset': -972, 'getDebtAsset:debtAsset': -971}
Retvar: ('c', ['global:USDV'], ['-1'], 0, 0, None)
{'global:FACTORY': 1, 'global:POOLS': 2, 'global:USDV': 3, 'global:VADER': 4, 'global:ROUTER': 5, 'assetChecks:collateralAsset': -999, 'assetChecks:debtAsset': -998, 'isBase:token': -997, 'isPool:token': -996, 'calcValueInBase:token': -995, 'calcValueInToken:token': -994, 'calcValueOfTokenInToken:token1': -993, 'calcValueOfTokenInToken:token2': -992, 'calcSwapValueInBase:token': -991, 'calcSwapValueInToken:token': -990, 'requirePriceBounds:token': -989, 'getRewardShare:token': -988, 'getProtection:member': -987, 'getProtection:token': -986, 'getCoverage:member': -985, 'getCoverage:token': -984, 'getCollateralValueInBase:member': -983, 'getCollateralValueInBase:collateralAsset': -982, 'getCollateralValueInBase:debtAsset': -981, 'getDebtValueInCollateral:member': -980, 'getDebtValueInCollateral:collateralAsset': -979, 'getDebtValueInCollateral:debtAsset': -978, 'getInterestOwed:collateralAsset': -977, 'getInterestOwed:debtAsset': -976, 'getInterestPayment:collateralAsset': -975, 'getInterestPayment:debtAsset': -974, 'getDebtLoading:collateralAsset': -973, 'getDebtLoading:debtAsset': -972, 'getDebtAsset:debtAsset': -971}
[i]Type for TUPLE_3

Name: TUPLE_3 Function: calcSwapValueInToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
POOLS_23(address) := ϕ(['POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_22', 'POOLS_35', 'POOLS_32', 'POOLS_1', 'POOLS_9', 'POOLS_26', 'POOLS_11', 'POOLS_21', 'POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_47'])
Phi
[i]Type for POOLS

Name: POOLS Function: calcSwapValueInToken
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
XXXX
_baseAmt_1(uint256)= UNPACK TUPLE_3 index: 0 
([4], [-1], 0, None, -1)
[i]Type for _baseAmt

Name: _baseAmt Function: calcSwapValueInToken
Num: 4
Den: -1
Address: -1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_tokenAmt_1(uint256)= UNPACK TUPLE_3 index: 1 
([3], [-1], 0, None, -1)
[i]Type for _tokenAmt

Name: _tokenAmt Function: calcSwapValueInToken
Num: 3
Den: -1
Address: -1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_baseAmt_1
_baseAmt_1
_baseAmt

Name: _baseAmt Function: calcSwapValueInToken
Num: 4
Den: -1
Address: -1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
_tokenAmt_1
_tokenAmt_1
_tokenAmt

Name: _tokenAmt Function: calcSwapValueInToken
Num: 3
Den: -1
Address: -1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
amount_1
amount_1
amount
amount

Name: amount_1 Function: calcSwapValueInToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_56(uint256) = INTERNAL_CALL, Utils.calcSwapOutput(uint256,uint256,uint256)(amount_1,_baseAmt_1,_tokenAmt_1)
[i]Type for TMP_56

Name: TMP_56 Function: calcSwapValueInToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_56



requirePriceBounds
Finding type for token(address ... )
prev address? u
Head Addr: -989
    Norm: 0
    Set: {-989}
    Fin: NULL
Finding type for bound(uint256 ... )
Finding type for inside(bool ... )
Finding type for targetPrice(uint256 ... )
Param: 0
    num: []
    den: []
    norm: u
    link: token
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 3
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1


one_1(uint256) := ϕ(['one_4', 'one_2', 'one_0'])
_10k_1(uint256) := ϕ(['_10k_3', '_10k_0'])
TMP_57(uint256) = INTERNAL_CALL, Utils.calcValueInBase(address,uint256)(token_1,one_1)
_testingPrice_1(uint256) := TMP_57(uint256)
TMP_58(uint256) = _10k_2 (c)- bound_1
TMP_59(uint256) = INTERNAL_CALL, Utils.calcPart(uint256,uint256)(TMP_58,targetPrice_1)
_lower_1(uint256) := TMP_59(uint256)
TMP_60(uint256) = _10k_3 (c)+ bound_1
TMP_61(uint256) = targetPrice_1 (c)* TMP_60
TMP_62(uint256) = TMP_61 (c)/ _10k_3
_upper_1(uint256) := TMP_62(uint256)
CONDITION inside_1
TMP_63(bool) = _testingPrice_1 >= _lower_1
TMP_64(bool) = _testingPrice_1 <= _upper_1
TMP_65(bool) = TMP_63 && TMP_64
TMP_66(None) = SOLIDITY_CALL require(bool,string)(TMP_65,Not inside)
TMP_67(bool) = _testingPrice_1 <= _lower_1
TMP_68(bool) = _testingPrice_1 >= _upper_1
TMP_69(bool) = TMP_67 || TMP_68
TMP_70(None) = SOLIDITY_CALL require(bool,string)(TMP_69,Not outside)


Propogating parameters and globals to SSA variables...
End popogation
one_1
one
one

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_10k_1
_10k
_10k

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
one_1(uint256) := ϕ(['one_4', 'one_2', 'one_0'])
Phi
[i]Type for one

Name: one Function: requirePriceBounds
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_10k_1(uint256) := ϕ(['_10k_3', '_10k_0'])
Phi
[i]Type for _10k

Name: _10k Function: requirePriceBounds
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
one_1
one_1
one

Name: one Function: requirePriceBounds
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token_1
token_1
token

Name: token_1 Function: None
Num: 
Den: 
Address: -989
Norm: u
LF: token
Value: u
Fields: 
Finance Type: undef
_testingPrice_1
_testingPrice_1
_testingPrice
_testingPrice

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_57(uint256) = INTERNAL_CALL, Utils.calcValueInBase(address,uint256)(token_1,one_1)
[[], [], 'u', 'token', [], -1, -989, 'u']

Name: token Function: calcValueInBase
Num: 
Den: 
Address: -989
Norm: u
LF: token
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: amount Function: calcValueInBase
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: token Function: calcValueInBase
Num: 
Den: 
Address: -989
Norm: u
LF: token
Value: u
Fields: 
Finance Type: undef

Name: amount Function: calcValueInBase
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
token_1
token

Name: token_1 Function: calcValueInBase
Num: 
Den: 
Address: -989
Norm: u
LF: token
Value: u
Fields: 
Finance Type: undef
amount_1
amount

Name: amount_1 Function: calcValueInBase
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
POOLS_16
POOLS

Name: POOLS Function: calcValueInBase
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['debtAsset_1', 'token_1', 'token1_1'])
Phi
[i]Type for token

Name: token Function: calcValueInBase
Num: 
Den: 
Address: -989
Norm: u
LF: token
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['_interestPayment_1', 'one_1', 'amount_1'])
Phi
[i]Type for amount

Name: amount Function: calcValueInBase
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
POOLS_16(address) := ϕ(['POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_35', 'POOLS_32', 'POOLS_9', 'POOLS_1', 'POOLS_26', 'POOLS_11', 'POOLS_21', 'POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_0', 'POOLS_29', 'POOLS_47'])
Phi
[i]Type for POOLS

Name: POOLS Function: calcValueInBase
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
POOLS_16
POOLS_16
POOLS

Name: POOLS Function: calcValueInBase
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
token_1
token_1
token

Name: token Function: calcValueInBase
Num: 
Den: 
Address: -989
Norm: u
LF: token
Value: u
Fields: 
Finance Type: undef
_baseAmt_1
_baseAmt_1
_baseAmt
_baseAmt

Name: _baseAmt Function: calcValueInBase
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_tokenAmt_1
_tokenAmt_1
_tokenAmt
_tokenAmt

Name: _tokenAmt Function: calcValueInBase
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
POOLS_17
POOLS

Name: POOLS Function: calcValueInBase
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_39 = CONVERT POOLS_16 to iPOOLS
Converting POOLS_16

Name: POOLS Function: calcValueInBase
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
POOLS
[i]Type for TMP_39

Name: TMP_39 Function: calcValueInBase
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_0(uint256,uint256) = HIGH_LEVEL_CALL, dest:TMP_39(iPOOLS), function:getPoolAmounts, arguments:['token_1']  
High Call: getPoolAmounts
Running querryfc
Written func info: POOLS, getPoolAmounts
Retvar: ('c', ['global:VADER'], ['-1'], 0, 0, None)
{'global:FACTORY': 1, 'global:POOLS': 2, 'global:USDV': 3, 'global:VADER': 4, 'global:ROUTER': 5, 'assetChecks:collateralAsset': -999, 'assetChecks:debtAsset': -998, 'isBase:token': -997, 'isPool:token': -996, 'calcValueInBase:token': -995, 'calcValueInToken:token': -994, 'calcValueOfTokenInToken:token1': -993, 'calcValueOfTokenInToken:token2': -992, 'calcSwapValueInBase:token': -991, 'calcSwapValueInToken:token': -990, 'requirePriceBounds:token': -989, 'getRewardShare:token': -988, 'getProtection:member': -987, 'getProtection:token': -986, 'getCoverage:member': -985, 'getCoverage:token': -984, 'getCollateralValueInBase:member': -983, 'getCollateralValueInBase:collateralAsset': -982, 'getCollateralValueInBase:debtAsset': -981, 'getDebtValueInCollateral:member': -980, 'getDebtValueInCollateral:collateralAsset': -979, 'getDebtValueInCollateral:debtAsset': -978, 'getInterestOwed:collateralAsset': -977, 'getInterestOwed:debtAsset': -976, 'getInterestPayment:collateralAsset': -975, 'getInterestPayment:debtAsset': -974, 'getDebtLoading:collateralAsset': -973, 'getDebtLoading:debtAsset': -972, 'getDebtAsset:debtAsset': -971}
Retvar: ('c', ['global:USDV'], ['-1'], 0, 0, None)
{'global:FACTORY': 1, 'global:POOLS': 2, 'global:USDV': 3, 'global:VADER': 4, 'global:ROUTER': 5, 'assetChecks:collateralAsset': -999, 'assetChecks:debtAsset': -998, 'isBase:token': -997, 'isPool:token': -996, 'calcValueInBase:token': -995, 'calcValueInToken:token': -994, 'calcValueOfTokenInToken:token1': -993, 'calcValueOfTokenInToken:token2': -992, 'calcSwapValueInBase:token': -991, 'calcSwapValueInToken:token': -990, 'requirePriceBounds:token': -989, 'getRewardShare:token': -988, 'getProtection:member': -987, 'getProtection:token': -986, 'getCoverage:member': -985, 'getCoverage:token': -984, 'getCollateralValueInBase:member': -983, 'getCollateralValueInBase:collateralAsset': -982, 'getCollateralValueInBase:debtAsset': -981, 'getDebtValueInCollateral:member': -980, 'getDebtValueInCollateral:collateralAsset': -979, 'getDebtValueInCollateral:debtAsset': -978, 'getInterestOwed:collateralAsset': -977, 'getInterestOwed:debtAsset': -976, 'getInterestPayment:collateralAsset': -975, 'getInterestPayment:debtAsset': -974, 'getDebtLoading:collateralAsset': -973, 'getDebtLoading:debtAsset': -972, 'getDebtAsset:debtAsset': -971}
[i]Type for TUPLE_0

Name: TUPLE_0 Function: calcValueInBase
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
POOLS_17(address) := ϕ(['POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_35', 'POOLS_32', 'POOLS_1', 'POOLS_9', 'POOLS_26', 'POOLS_11', 'POOLS_21', 'POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_47', 'POOLS_16'])
Phi
[i]Type for POOLS

Name: POOLS Function: calcValueInBase
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
XXXX
_baseAmt_1(uint256)= UNPACK TUPLE_0 index: 0 
([4], [-1], 0, None, -1)
[i]Type for _baseAmt

Name: _baseAmt Function: calcValueInBase
Num: 4
Den: -1
Address: -1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_tokenAmt_1(uint256)= UNPACK TUPLE_0 index: 1 
([3], [-1], 0, None, -1)
[i]Type for _tokenAmt

Name: _tokenAmt Function: calcValueInBase
Num: 3
Den: -1
Address: -1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_baseAmt_1
_baseAmt_1
_baseAmt

Name: _baseAmt Function: calcValueInBase
Num: 4
Den: -1
Address: -1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
_tokenAmt_1
_tokenAmt_1
_tokenAmt

Name: _tokenAmt Function: calcValueInBase
Num: 3
Den: -1
Address: -1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_40(bool) = _baseAmt_1 > 0
[i]Type for TMP_40

Name: TMP_40 Function: calcValueInBase
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_41(bool) = _tokenAmt_1 > 0
[i]Type for TMP_41

Name: TMP_41 Function: calcValueInBase
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_42(bool) = TMP_40 && TMP_41
[i]Type for TMP_42

Name: TMP_42 Function: calcValueInBase
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
_baseAmt_1
_baseAmt_1
_baseAmt

Name: _baseAmt Function: calcValueInBase
Num: 4
Den: -1
Address: -1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
_tokenAmt_1
_tokenAmt_1
_tokenAmt

Name: _tokenAmt Function: calcValueInBase
Num: 3
Den: -1
Address: -1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
amount_1
amount_1
amount

Name: amount Function: calcValueInBase
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_43(uint256) = amount_1 (c)* _baseAmt_1
[i]Type for TMP_43

Name: TMP_43 Function: calcValueInBase
Num: 4
Den: -1
Address: -1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_44(uint256) = TMP_43 (c)/ _tokenAmt_1
[i]Type for TMP_44

Name: TMP_44 Function: calcValueInBase
Num: 4
Den: 3
Address: -1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_44

Name: token Function: calcValueInBase
Num: 
Den: 
Address: -989
Norm: u
LF: token
Value: u
Fields: 
Finance Type: undef

Name: amount Function: calcValueInBase
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
token_1
token

Name: token_1 Function: calcValueInBase
Num: 
Den: 
Address: -989
Norm: u
LF: token
Value: u
Fields: 
Finance Type: undef
amount_1
amount

Name: amount_1 Function: calcValueInBase
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
POOLS_16
POOLS

Name: POOLS Function: calcValueInBase
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['debtAsset_1', 'token_1', 'token1_1'])
Phi
[i]Type for token

Name: token Function: calcValueInBase
Num: 
Den: 
Address: -989
Norm: u
LF: token
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['_interestPayment_1', 'one_1', 'amount_1'])
Phi
[i]Type for amount

Name: amount Function: calcValueInBase
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
POOLS_16(address) := ϕ(['POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_35', 'POOLS_32', 'POOLS_9', 'POOLS_1', 'POOLS_26', 'POOLS_11', 'POOLS_21', 'POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_0', 'POOLS_29', 'POOLS_47'])
Phi
[i]Type for POOLS

Name: POOLS Function: calcValueInBase
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
POOLS_16
POOLS_16
POOLS

Name: POOLS Function: calcValueInBase
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
token_1
token_1
token

Name: token Function: calcValueInBase
Num: 
Den: 
Address: -989
Norm: u
LF: token
Value: u
Fields: 
Finance Type: undef
_baseAmt_1
_baseAmt_1
_baseAmt
_baseAmt

Name: _baseAmt Function: calcValueInBase
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_tokenAmt_1
_tokenAmt_1
_tokenAmt
_tokenAmt

Name: _tokenAmt Function: calcValueInBase
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
POOLS_17
POOLS

Name: POOLS Function: calcValueInBase
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_39 = CONVERT POOLS_16 to iPOOLS
Converting POOLS_16

Name: POOLS Function: calcValueInBase
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
POOLS
[i]Type for TMP_39

Name: TMP_39 Function: calcValueInBase
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_0(uint256,uint256) = HIGH_LEVEL_CALL, dest:TMP_39(iPOOLS), function:getPoolAmounts, arguments:['token_1']  
High Call: getPoolAmounts
Running querryfc
Written func info: POOLS, getPoolAmounts
Retvar: ('c', ['global:VADER'], ['-1'], 0, 0, None)
{'global:FACTORY': 1, 'global:POOLS': 2, 'global:USDV': 3, 'global:VADER': 4, 'global:ROUTER': 5, 'assetChecks:collateralAsset': -999, 'assetChecks:debtAsset': -998, 'isBase:token': -997, 'isPool:token': -996, 'calcValueInBase:token': -995, 'calcValueInToken:token': -994, 'calcValueOfTokenInToken:token1': -993, 'calcValueOfTokenInToken:token2': -992, 'calcSwapValueInBase:token': -991, 'calcSwapValueInToken:token': -990, 'requirePriceBounds:token': -989, 'getRewardShare:token': -988, 'getProtection:member': -987, 'getProtection:token': -986, 'getCoverage:member': -985, 'getCoverage:token': -984, 'getCollateralValueInBase:member': -983, 'getCollateralValueInBase:collateralAsset': -982, 'getCollateralValueInBase:debtAsset': -981, 'getDebtValueInCollateral:member': -980, 'getDebtValueInCollateral:collateralAsset': -979, 'getDebtValueInCollateral:debtAsset': -978, 'getInterestOwed:collateralAsset': -977, 'getInterestOwed:debtAsset': -976, 'getInterestPayment:collateralAsset': -975, 'getInterestPayment:debtAsset': -974, 'getDebtLoading:collateralAsset': -973, 'getDebtLoading:debtAsset': -972, 'getDebtAsset:debtAsset': -971}
Retvar: ('c', ['global:USDV'], ['-1'], 0, 0, None)
{'global:FACTORY': 1, 'global:POOLS': 2, 'global:USDV': 3, 'global:VADER': 4, 'global:ROUTER': 5, 'assetChecks:collateralAsset': -999, 'assetChecks:debtAsset': -998, 'isBase:token': -997, 'isPool:token': -996, 'calcValueInBase:token': -995, 'calcValueInToken:token': -994, 'calcValueOfTokenInToken:token1': -993, 'calcValueOfTokenInToken:token2': -992, 'calcSwapValueInBase:token': -991, 'calcSwapValueInToken:token': -990, 'requirePriceBounds:token': -989, 'getRewardShare:token': -988, 'getProtection:member': -987, 'getProtection:token': -986, 'getCoverage:member': -985, 'getCoverage:token': -984, 'getCollateralValueInBase:member': -983, 'getCollateralValueInBase:collateralAsset': -982, 'getCollateralValueInBase:debtAsset': -981, 'getDebtValueInCollateral:member': -980, 'getDebtValueInCollateral:collateralAsset': -979, 'getDebtValueInCollateral:debtAsset': -978, 'getInterestOwed:collateralAsset': -977, 'getInterestOwed:debtAsset': -976, 'getInterestPayment:collateralAsset': -975, 'getInterestPayment:debtAsset': -974, 'getDebtLoading:collateralAsset': -973, 'getDebtLoading:debtAsset': -972, 'getDebtAsset:debtAsset': -971}
[i]Type for TUPLE_0

Name: TUPLE_0 Function: calcValueInBase
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
POOLS_17(address) := ϕ(['POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_35', 'POOLS_32', 'POOLS_1', 'POOLS_9', 'POOLS_26', 'POOLS_11', 'POOLS_21', 'POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_47', 'POOLS_16'])
Phi
[i]Type for POOLS

Name: POOLS Function: calcValueInBase
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
XXXX
_baseAmt_1(uint256)= UNPACK TUPLE_0 index: 0 
([4], [-1], 0, None, -1)
[i]Type for _baseAmt

Name: _baseAmt Function: calcValueInBase
Num: 4
Den: -1
Address: -1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_tokenAmt_1(uint256)= UNPACK TUPLE_0 index: 1 
([3], [-1], 0, None, -1)
[i]Type for _tokenAmt

Name: _tokenAmt Function: calcValueInBase
Num: 3
Den: -1
Address: -1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_baseAmt_1
_baseAmt_1
_baseAmt

Name: _baseAmt Function: calcValueInBase
Num: 4
Den: -1
Address: -1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
_tokenAmt_1
_tokenAmt_1
_tokenAmt

Name: _tokenAmt Function: calcValueInBase
Num: 3
Den: -1
Address: -1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_40(bool) = _baseAmt_1 > 0
[i]Type for TMP_40

Name: TMP_40 Function: calcValueInBase
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_41(bool) = _tokenAmt_1 > 0
[i]Type for TMP_41

Name: TMP_41 Function: calcValueInBase
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_42(bool) = TMP_40 && TMP_41
[i]Type for TMP_42

Name: TMP_42 Function: calcValueInBase
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
_baseAmt_1
_baseAmt_1
_baseAmt

Name: _baseAmt Function: calcValueInBase
Num: 4
Den: -1
Address: -1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
_tokenAmt_1
_tokenAmt_1
_tokenAmt

Name: _tokenAmt Function: calcValueInBase
Num: 3
Den: -1
Address: -1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
amount_1
amount_1
amount

Name: amount Function: calcValueInBase
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_43(uint256) = amount_1 (c)* _baseAmt_1
[i]Type for TMP_43

Name: TMP_43 Function: calcValueInBase
Num: 4
Den: -1
Address: -1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_44(uint256) = TMP_43 (c)/ _tokenAmt_1
[i]Type for TMP_44

Name: TMP_44 Function: calcValueInBase
Num: 4
Den: 3
Address: -1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_44
[i]Type for TMP_57

Name: TMP_57 Function: requirePriceBounds
Num: 4
Den: 3
Address: -1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_testingPrice_1(uint256) := TMP_57(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for _testingPrice

Name: _testingPrice Function: requirePriceBounds
Num: 4
Den: 3
Address: -1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
targetPrice_1
targetPrice_1
targetPrice
targetPrice

Name: targetPrice_1 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_10k_2
_10k_2
_10k
_10k

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bound_1
bound_1
bound
bound

Name: bound_1 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_lower_1
_lower_1
_lower
_lower

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_58(uint256) = _10k_2 (c)- bound_1
[i]Type for TMP_58

Name: TMP_58 Function: requirePriceBounds
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_59(uint256) = INTERNAL_CALL, Utils.calcPart(uint256,uint256)(TMP_58,targetPrice_1)
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: bp Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[], [], 'u', None, [], -1, 'u', 'u']

Name: total Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: bp Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: total Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
bp_1
bp

Name: bp_1 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
total_1
total
total

Name: total_1 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bp_1(uint256) := ϕ(['TMP_58', 'basisPoints_1'])
Phi
[i]Type for bp

Name: bp Function: calcPart
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
total_1(uint256) := ϕ(['targetPrice_1', 'protection_3'])
Phi
[i]Type for total

Name: total Function: calcPart
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
bp_1
bp_1
bp

Name: bp Function: calcPart
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_164(bool) = bp_1 <= 10000
[i]Type for TMP_164

Name: TMP_164 Function: calcPart
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_165(bool) = bp_1 >= 0
[i]Type for TMP_165

Name: TMP_165 Function: calcPart
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_166(bool) = TMP_164 && TMP_165
[i]Type for TMP_166

Name: TMP_166 Function: calcPart
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_167(None) = SOLIDITY_CALL require(bool,string)(TMP_166,Must be correct BP)
[i]Type for TMP_167

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
bp_1
bp_1
bp

Name: bp Function: calcPart
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
total_1
total_1
total
total

Name: total_1 Function: calcPart
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_168(uint256) = INTERNAL_CALL, Utils.calcShare(uint256,uint256,uint256)(bp_1,10000,total_1)
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: part Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 4, None, [], -1, 'u', 'u']

Name: total Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[], [], 'u', None, [], -1, 'u', 'u']

Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: part Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: total Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
part_1
part

Name: part_1 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
total_1
total

Name: total_1 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
amount_1
amount
amount

Name: amount_1 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
part_1(uint256) := ϕ(['_units_1', '_baseAmount_1', 'bp_1', 'totalSupply_1', '_memberCollateral_1', 'debt_1', 'timeElapsed_1', '_duration_1'])
Phi
[i]Type for part

Name: part Function: calcShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
total_1(uint256) := ϕ(['_collateral_1', 'maxSupply_1', '_memberDebt_1', 'TMP_111', 'timeForFullProtection_1', 'rewardReductionFactor_1', 'TMP_81', 'TMP_89', 'TMP_116', '_year_2'])
Phi
[i]Type for total

Name: total Function: calcShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['TMP_146', 'TMP_113', 'TMP_118', '_interestPaid_1', '_coverage_1', '_memberCollateral_1', 'amount_1', 'total_1', 'TMP_83', 'TMP_91'])
Phi
[i]Type for amount

Name: amount Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
part_1
part_1
part

Name: part Function: calcShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
total_1
total_1
total

Name: total Function: calcShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_169(bool) = part_1 > total_1
[i]Type for TMP_169

Name: TMP_169 Function: calcShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
total_1
total_1
total

Name: total Function: calcShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
part_2
part_2
part
part

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
part_2(uint256) := total_1(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for part

Name: part Function: calcShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
part_3
part
part

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
part_3(uint256) := ϕ(['part_2', 'part_1'])
Phi
[i]Type for part

Name: part Function: calcShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
total_1
total_1
total

Name: total Function: calcShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_170(bool) = total_1 > 0
[i]Type for TMP_170

Name: TMP_170 Function: calcShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
amount_1
amount_1
amount
amount

Name: amount_1 Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
total_1
total_1
total

Name: total Function: calcShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
part_3
part_3
part

Name: part Function: calcShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
share_1
share_1
share
share

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_171(uint256) = amount_1 (c)* part_3
[i]Type for TMP_171

Name: TMP_171 Function: calcShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_172(uint256) = TMP_171 (c)/ total_1
[i]Type for TMP_172

Name: TMP_172 Function: calcShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
share_1(uint256) := TMP_172(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for share

Name: share Function: calcShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX

Name: part Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: total Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
part_1
part

Name: part_1 Function: calcShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
total_1
total

Name: total_1 Function: calcShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
amount_1
amount
amount

Name: amount_1 Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
part_1(uint256) := ϕ(['_units_1', '_baseAmount_1', 'bp_1', 'totalSupply_1', '_memberCollateral_1', 'debt_1', 'timeElapsed_1', '_duration_1'])
Phi
[i]Type for part

Name: part Function: calcShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
total_1(uint256) := ϕ(['_collateral_1', 'maxSupply_1', '_memberDebt_1', 'TMP_111', 'timeForFullProtection_1', 'rewardReductionFactor_1', 'TMP_81', 'TMP_89', 'TMP_116', '_year_2'])
Phi
[i]Type for total

Name: total Function: calcShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['TMP_146', 'TMP_113', 'TMP_118', '_interestPaid_1', '_coverage_1', '_memberCollateral_1', 'amount_1', 'total_1', 'TMP_83', 'TMP_91'])
Phi
[i]Type for amount

Name: amount Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
part_1
part_1
part

Name: part Function: calcShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
total_1
total_1
total

Name: total Function: calcShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_169(bool) = part_1 > total_1
[i]Type for TMP_169

Name: TMP_169 Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
total_1
total_1
total

Name: total Function: calcShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
part_2
part_2
part
part

Name: part Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
part_2(uint256) := total_1(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for part

Name: part Function: calcShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
part_3
part
part

Name: part Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
part_3(uint256) := ϕ(['part_2', 'part_1'])
Phi
[i]Type for part

Name: part Function: calcShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
total_1
total_1
total

Name: total Function: calcShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_170(bool) = total_1 > 0
[i]Type for TMP_170

Name: TMP_170 Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
amount_1
amount_1
amount
amount

Name: amount_1 Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
total_1
total_1
total

Name: total Function: calcShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
part_3
part_3
part

Name: part Function: calcShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
share_1
share_1
share
share

Name: share Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_171(uint256) = amount_1 (c)* part_3
[i]Type for TMP_171

Name: TMP_171 Function: calcShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_172(uint256) = TMP_171 (c)/ total_1
[i]Type for TMP_172

Name: TMP_172 Function: calcShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
share_1(uint256) := TMP_172(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for share

Name: share Function: calcShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i]Type for TMP_168

Name: TMP_168 Function: calcPart
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_168

Name: bp Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: total Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
bp_1
bp

Name: bp_1 Function: calcPart
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
total_1
total
total

Name: total_1 Function: calcPart
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bp_1(uint256) := ϕ(['TMP_58', 'basisPoints_1'])
Phi
[i]Type for bp

Name: bp Function: calcPart
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
total_1(uint256) := ϕ(['targetPrice_1', 'protection_3'])
Phi
[i]Type for total

Name: total Function: calcPart
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
bp_1
bp_1
bp

Name: bp Function: calcPart
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_164(bool) = bp_1 <= 10000
[i]Type for TMP_164

Name: TMP_164 Function: calcPart
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_165(bool) = bp_1 >= 0
[i]Type for TMP_165

Name: TMP_165 Function: calcPart
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_166(bool) = TMP_164 && TMP_165
[i]Type for TMP_166

Name: TMP_166 Function: calcPart
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_167(None) = SOLIDITY_CALL require(bool,string)(TMP_166,Must be correct BP)
[i]Type for TMP_167

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
bp_1
bp_1
bp

Name: bp Function: calcPart
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
total_1
total_1
total
total

Name: total_1 Function: calcPart
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_168(uint256) = INTERNAL_CALL, Utils.calcShare(uint256,uint256,uint256)(bp_1,10000,total_1)
[i]Type for TMP_168

Name: TMP_168 Function: calcPart
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_168
[i]Type for TMP_59

Name: TMP_59 Function: requirePriceBounds
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_lower_1(uint256) := TMP_59(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for _lower

Name: _lower Function: requirePriceBounds
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_10k_3
_10k_3
_10k
_10k

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
targetPrice_1
targetPrice_1
targetPrice
targetPrice

Name: targetPrice_1 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bound_1
bound_1
bound
bound

Name: bound_1 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_upper_1
_upper_1
_upper
_upper

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_60(uint256) = _10k_3 (c)+ bound_1

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: bound_1 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_60

Name: TMP_60 Function: requirePriceBounds
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_61(uint256) = targetPrice_1 (c)* TMP_60
[i]Type for TMP_61

Name: TMP_61 Function: requirePriceBounds
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_62(uint256) = TMP_61 (c)/ _10k_3
[i]Type for TMP_62

Name: TMP_62 Function: requirePriceBounds
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_upper_1(uint256) := TMP_62(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for _upper

Name: _upper Function: requirePriceBounds
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
inside_1
inside_1
inside
inside

Name: inside_1 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
Propogating parameters and globals to SSA variables...
_upper_1
_upper_1
_upper

Name: _upper Function: requirePriceBounds
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_testingPrice_1
_testingPrice_1
_testingPrice

Name: _testingPrice Function: requirePriceBounds
Num: 4
Den: 3
Address: -1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
_lower_1
_lower_1
_lower
_lower

Name: _lower Function: requirePriceBounds
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_63(bool) = _testingPrice_1 >= _lower_1
[i]Type for TMP_63

Name: TMP_63 Function: requirePriceBounds
Num: 4
Den: 3
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_64(bool) = _testingPrice_1 <= _upper_1
[i]Type for TMP_64

Name: TMP_64 Function: requirePriceBounds
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_65(bool) = TMP_63 && TMP_64
[i]Type for TMP_65

Name: TMP_65 Function: requirePriceBounds
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_66(None) = SOLIDITY_CALL require(bool,string)(TMP_65,Not inside)
[i]Type for TMP_66

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
_upper_1
_upper_1
_upper

Name: _upper Function: requirePriceBounds
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_testingPrice_1
_testingPrice_1
_testingPrice

Name: _testingPrice Function: requirePriceBounds
Num: 4
Den: 3
Address: -1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
_lower_1
_lower_1
_lower
_lower

Name: _lower Function: requirePriceBounds
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_67(bool) = _testingPrice_1 <= _lower_1
[i]Type for TMP_67

Name: TMP_67 Function: requirePriceBounds
Num: 4
Den: 3
Address: -1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_68(bool) = _testingPrice_1 >= _upper_1
[i]Type for TMP_68

Name: TMP_68 Function: requirePriceBounds
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_69(bool) = TMP_67 || TMP_68
[i]Type for TMP_69

Name: TMP_69 Function: requirePriceBounds
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_70(None) = SOLIDITY_CALL require(bool,string)(TMP_69,Not outside)
[i]Type for TMP_70

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX


one_1(uint256) := ϕ(['one_4', 'one_2', 'one_0'])
_10k_1(uint256) := ϕ(['_10k_3', '_10k_0'])
TMP_57(uint256) = INTERNAL_CALL, Utils.calcValueInBase(address,uint256)(token_1,one_1)
_testingPrice_1(uint256) := TMP_57(uint256)
TMP_58(uint256) = _10k_2 (c)- bound_1
TMP_59(uint256) = INTERNAL_CALL, Utils.calcPart(uint256,uint256)(TMP_58,targetPrice_1)
_lower_1(uint256) := TMP_59(uint256)
TMP_60(uint256) = _10k_3 (c)+ bound_1
TMP_61(uint256) = targetPrice_1 (c)* TMP_60
TMP_62(uint256) = TMP_61 (c)/ _10k_3
_upper_1(uint256) := TMP_62(uint256)
CONDITION inside_1
TMP_63(bool) = _testingPrice_1 >= _lower_1
TMP_64(bool) = _testingPrice_1 <= _upper_1
TMP_65(bool) = TMP_63 && TMP_64
TMP_66(None) = SOLIDITY_CALL require(bool,string)(TMP_65,Not inside)
TMP_67(bool) = _testingPrice_1 <= _lower_1
TMP_68(bool) = _testingPrice_1 >= _upper_1
TMP_69(bool) = TMP_67 || TMP_68
TMP_70(None) = SOLIDITY_CALL require(bool,string)(TMP_69,Not outside)


Propogating parameters and globals to SSA variables...
End popogation
one_1
one

Name: one Function: requirePriceBounds
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_10k_1
_10k

Name: _10k Function: requirePriceBounds
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
one_1(uint256) := ϕ(['one_4', 'one_2', 'one_0'])
Phi
[i]Type for one

Name: one Function: requirePriceBounds
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_10k_1(uint256) := ϕ(['_10k_3', '_10k_0'])
Phi
[i]Type for _10k

Name: _10k Function: requirePriceBounds
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
one_1
one_1
one

Name: one Function: requirePriceBounds
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token_1
token_1
token

Name: token Function: None
Num: 
Den: 
Address: -989
Norm: u
LF: token
Value: u
Fields: 
Finance Type: undef
_testingPrice_1
_testingPrice_1
_testingPrice
_testingPrice

Name: _testingPrice Function: requirePriceBounds
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_57(uint256) = INTERNAL_CALL, Utils.calcValueInBase(address,uint256)(token_1,one_1)
[[], [], 'u', 'token', [], -1, -989, 'u']

Name: token Function: calcValueInBase
Num: 
Den: 
Address: -989
Norm: u
LF: token
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: amount Function: calcValueInBase
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: token Function: calcValueInBase
Num: 
Den: 
Address: -989
Norm: u
LF: token
Value: u
Fields: 
Finance Type: undef

Name: amount Function: calcValueInBase
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
token_1
token

Name: token_1 Function: calcValueInBase
Num: 
Den: 
Address: -989
Norm: u
LF: token
Value: u
Fields: 
Finance Type: undef
amount_1
amount

Name: amount_1 Function: calcValueInBase
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
POOLS_16
POOLS

Name: POOLS Function: calcValueInBase
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['debtAsset_1', 'token_1', 'token1_1'])
Phi
[i]Type for token

Name: token Function: calcValueInBase
Num: 
Den: 
Address: -989
Norm: u
LF: token
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['_interestPayment_1', 'one_1', 'amount_1'])
Phi
[i]Type for amount

Name: amount Function: calcValueInBase
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
POOLS_16(address) := ϕ(['POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_35', 'POOLS_32', 'POOLS_9', 'POOLS_1', 'POOLS_26', 'POOLS_11', 'POOLS_21', 'POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_0', 'POOLS_29', 'POOLS_47'])
Phi
[i]Type for POOLS

Name: POOLS Function: calcValueInBase
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
POOLS_16
POOLS_16
POOLS

Name: POOLS Function: calcValueInBase
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
token_1
token_1
token

Name: token Function: calcValueInBase
Num: 
Den: 
Address: -989
Norm: u
LF: token
Value: u
Fields: 
Finance Type: undef
_baseAmt_1
_baseAmt_1
_baseAmt
_baseAmt

Name: _baseAmt Function: calcValueInBase
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_tokenAmt_1
_tokenAmt_1
_tokenAmt
_tokenAmt

Name: _tokenAmt Function: calcValueInBase
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
POOLS_17
POOLS

Name: POOLS Function: calcValueInBase
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_39 = CONVERT POOLS_16 to iPOOLS
Converting POOLS_16

Name: POOLS Function: calcValueInBase
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
POOLS
[i]Type for TMP_39

Name: TMP_39 Function: calcValueInBase
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_0(uint256,uint256) = HIGH_LEVEL_CALL, dest:TMP_39(iPOOLS), function:getPoolAmounts, arguments:['token_1']  
High Call: getPoolAmounts
Running querryfc
Written func info: POOLS, getPoolAmounts
Retvar: ('c', ['global:VADER'], ['-1'], 0, 0, None)
{'global:FACTORY': 1, 'global:POOLS': 2, 'global:USDV': 3, 'global:VADER': 4, 'global:ROUTER': 5, 'assetChecks:collateralAsset': -999, 'assetChecks:debtAsset': -998, 'isBase:token': -997, 'isPool:token': -996, 'calcValueInBase:token': -995, 'calcValueInToken:token': -994, 'calcValueOfTokenInToken:token1': -993, 'calcValueOfTokenInToken:token2': -992, 'calcSwapValueInBase:token': -991, 'calcSwapValueInToken:token': -990, 'requirePriceBounds:token': -989, 'getRewardShare:token': -988, 'getProtection:member': -987, 'getProtection:token': -986, 'getCoverage:member': -985, 'getCoverage:token': -984, 'getCollateralValueInBase:member': -983, 'getCollateralValueInBase:collateralAsset': -982, 'getCollateralValueInBase:debtAsset': -981, 'getDebtValueInCollateral:member': -980, 'getDebtValueInCollateral:collateralAsset': -979, 'getDebtValueInCollateral:debtAsset': -978, 'getInterestOwed:collateralAsset': -977, 'getInterestOwed:debtAsset': -976, 'getInterestPayment:collateralAsset': -975, 'getInterestPayment:debtAsset': -974, 'getDebtLoading:collateralAsset': -973, 'getDebtLoading:debtAsset': -972, 'getDebtAsset:debtAsset': -971}
Retvar: ('c', ['global:USDV'], ['-1'], 0, 0, None)
{'global:FACTORY': 1, 'global:POOLS': 2, 'global:USDV': 3, 'global:VADER': 4, 'global:ROUTER': 5, 'assetChecks:collateralAsset': -999, 'assetChecks:debtAsset': -998, 'isBase:token': -997, 'isPool:token': -996, 'calcValueInBase:token': -995, 'calcValueInToken:token': -994, 'calcValueOfTokenInToken:token1': -993, 'calcValueOfTokenInToken:token2': -992, 'calcSwapValueInBase:token': -991, 'calcSwapValueInToken:token': -990, 'requirePriceBounds:token': -989, 'getRewardShare:token': -988, 'getProtection:member': -987, 'getProtection:token': -986, 'getCoverage:member': -985, 'getCoverage:token': -984, 'getCollateralValueInBase:member': -983, 'getCollateralValueInBase:collateralAsset': -982, 'getCollateralValueInBase:debtAsset': -981, 'getDebtValueInCollateral:member': -980, 'getDebtValueInCollateral:collateralAsset': -979, 'getDebtValueInCollateral:debtAsset': -978, 'getInterestOwed:collateralAsset': -977, 'getInterestOwed:debtAsset': -976, 'getInterestPayment:collateralAsset': -975, 'getInterestPayment:debtAsset': -974, 'getDebtLoading:collateralAsset': -973, 'getDebtLoading:debtAsset': -972, 'getDebtAsset:debtAsset': -971}
[i]Type for TUPLE_0

Name: TUPLE_0 Function: calcValueInBase
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
POOLS_17(address) := ϕ(['POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_35', 'POOLS_32', 'POOLS_1', 'POOLS_9', 'POOLS_26', 'POOLS_11', 'POOLS_21', 'POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_47', 'POOLS_16'])
Phi
[i]Type for POOLS

Name: POOLS Function: calcValueInBase
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
XXXX
_baseAmt_1(uint256)= UNPACK TUPLE_0 index: 0 
([4], [-1], 0, None, -1)
[i]Type for _baseAmt

Name: _baseAmt Function: calcValueInBase
Num: 4
Den: -1
Address: -1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_tokenAmt_1(uint256)= UNPACK TUPLE_0 index: 1 
([3], [-1], 0, None, -1)
[i]Type for _tokenAmt

Name: _tokenAmt Function: calcValueInBase
Num: 3
Den: -1
Address: -1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_baseAmt_1
_baseAmt_1
_baseAmt

Name: _baseAmt Function: calcValueInBase
Num: 4
Den: -1
Address: -1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
_tokenAmt_1
_tokenAmt_1
_tokenAmt

Name: _tokenAmt Function: calcValueInBase
Num: 3
Den: -1
Address: -1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_40(bool) = _baseAmt_1 > 0
[i]Type for TMP_40

Name: TMP_40 Function: calcValueInBase
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_41(bool) = _tokenAmt_1 > 0
[i]Type for TMP_41

Name: TMP_41 Function: calcValueInBase
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_42(bool) = TMP_40 && TMP_41
[i]Type for TMP_42

Name: TMP_42 Function: calcValueInBase
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
_baseAmt_1
_baseAmt_1
_baseAmt

Name: _baseAmt Function: calcValueInBase
Num: 4
Den: -1
Address: -1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
_tokenAmt_1
_tokenAmt_1
_tokenAmt

Name: _tokenAmt Function: calcValueInBase
Num: 3
Den: -1
Address: -1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
amount_1
amount_1
amount

Name: amount Function: calcValueInBase
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_43(uint256) = amount_1 (c)* _baseAmt_1
[i]Type for TMP_43

Name: TMP_43 Function: calcValueInBase
Num: 4
Den: -1
Address: -1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_44(uint256) = TMP_43 (c)/ _tokenAmt_1
[i]Type for TMP_44

Name: TMP_44 Function: calcValueInBase
Num: 4
Den: 3
Address: -1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_44

Name: token Function: calcValueInBase
Num: 
Den: 
Address: -989
Norm: u
LF: token
Value: u
Fields: 
Finance Type: undef

Name: amount Function: calcValueInBase
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
token_1
token

Name: token_1 Function: calcValueInBase
Num: 
Den: 
Address: -989
Norm: u
LF: token
Value: u
Fields: 
Finance Type: undef
amount_1
amount

Name: amount_1 Function: calcValueInBase
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
POOLS_16
POOLS

Name: POOLS Function: calcValueInBase
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['debtAsset_1', 'token_1', 'token1_1'])
Phi
[i]Type for token

Name: token Function: calcValueInBase
Num: 
Den: 
Address: -989
Norm: u
LF: token
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['_interestPayment_1', 'one_1', 'amount_1'])
Phi
[i]Type for amount

Name: amount Function: calcValueInBase
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
POOLS_16(address) := ϕ(['POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_35', 'POOLS_32', 'POOLS_9', 'POOLS_1', 'POOLS_26', 'POOLS_11', 'POOLS_21', 'POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_0', 'POOLS_29', 'POOLS_47'])
Phi
[i]Type for POOLS

Name: POOLS Function: calcValueInBase
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
POOLS_16
POOLS_16
POOLS

Name: POOLS Function: calcValueInBase
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
token_1
token_1
token

Name: token Function: calcValueInBase
Num: 
Den: 
Address: -989
Norm: u
LF: token
Value: u
Fields: 
Finance Type: undef
_baseAmt_1
_baseAmt_1
_baseAmt
_baseAmt

Name: _baseAmt Function: calcValueInBase
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_tokenAmt_1
_tokenAmt_1
_tokenAmt
_tokenAmt

Name: _tokenAmt Function: calcValueInBase
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
POOLS_17
POOLS

Name: POOLS Function: calcValueInBase
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_39 = CONVERT POOLS_16 to iPOOLS
Converting POOLS_16

Name: POOLS Function: calcValueInBase
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
POOLS
[i]Type for TMP_39

Name: TMP_39 Function: calcValueInBase
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_0(uint256,uint256) = HIGH_LEVEL_CALL, dest:TMP_39(iPOOLS), function:getPoolAmounts, arguments:['token_1']  
High Call: getPoolAmounts
Running querryfc
Written func info: POOLS, getPoolAmounts
Retvar: ('c', ['global:VADER'], ['-1'], 0, 0, None)
{'global:FACTORY': 1, 'global:POOLS': 2, 'global:USDV': 3, 'global:VADER': 4, 'global:ROUTER': 5, 'assetChecks:collateralAsset': -999, 'assetChecks:debtAsset': -998, 'isBase:token': -997, 'isPool:token': -996, 'calcValueInBase:token': -995, 'calcValueInToken:token': -994, 'calcValueOfTokenInToken:token1': -993, 'calcValueOfTokenInToken:token2': -992, 'calcSwapValueInBase:token': -991, 'calcSwapValueInToken:token': -990, 'requirePriceBounds:token': -989, 'getRewardShare:token': -988, 'getProtection:member': -987, 'getProtection:token': -986, 'getCoverage:member': -985, 'getCoverage:token': -984, 'getCollateralValueInBase:member': -983, 'getCollateralValueInBase:collateralAsset': -982, 'getCollateralValueInBase:debtAsset': -981, 'getDebtValueInCollateral:member': -980, 'getDebtValueInCollateral:collateralAsset': -979, 'getDebtValueInCollateral:debtAsset': -978, 'getInterestOwed:collateralAsset': -977, 'getInterestOwed:debtAsset': -976, 'getInterestPayment:collateralAsset': -975, 'getInterestPayment:debtAsset': -974, 'getDebtLoading:collateralAsset': -973, 'getDebtLoading:debtAsset': -972, 'getDebtAsset:debtAsset': -971}
Retvar: ('c', ['global:USDV'], ['-1'], 0, 0, None)
{'global:FACTORY': 1, 'global:POOLS': 2, 'global:USDV': 3, 'global:VADER': 4, 'global:ROUTER': 5, 'assetChecks:collateralAsset': -999, 'assetChecks:debtAsset': -998, 'isBase:token': -997, 'isPool:token': -996, 'calcValueInBase:token': -995, 'calcValueInToken:token': -994, 'calcValueOfTokenInToken:token1': -993, 'calcValueOfTokenInToken:token2': -992, 'calcSwapValueInBase:token': -991, 'calcSwapValueInToken:token': -990, 'requirePriceBounds:token': -989, 'getRewardShare:token': -988, 'getProtection:member': -987, 'getProtection:token': -986, 'getCoverage:member': -985, 'getCoverage:token': -984, 'getCollateralValueInBase:member': -983, 'getCollateralValueInBase:collateralAsset': -982, 'getCollateralValueInBase:debtAsset': -981, 'getDebtValueInCollateral:member': -980, 'getDebtValueInCollateral:collateralAsset': -979, 'getDebtValueInCollateral:debtAsset': -978, 'getInterestOwed:collateralAsset': -977, 'getInterestOwed:debtAsset': -976, 'getInterestPayment:collateralAsset': -975, 'getInterestPayment:debtAsset': -974, 'getDebtLoading:collateralAsset': -973, 'getDebtLoading:debtAsset': -972, 'getDebtAsset:debtAsset': -971}
[i]Type for TUPLE_0

Name: TUPLE_0 Function: calcValueInBase
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
POOLS_17(address) := ϕ(['POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_35', 'POOLS_32', 'POOLS_1', 'POOLS_9', 'POOLS_26', 'POOLS_11', 'POOLS_21', 'POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_47', 'POOLS_16'])
Phi
[i]Type for POOLS

Name: POOLS Function: calcValueInBase
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
XXXX
_baseAmt_1(uint256)= UNPACK TUPLE_0 index: 0 
([4], [-1], 0, None, -1)
[i]Type for _baseAmt

Name: _baseAmt Function: calcValueInBase
Num: 4
Den: -1
Address: -1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_tokenAmt_1(uint256)= UNPACK TUPLE_0 index: 1 
([3], [-1], 0, None, -1)
[i]Type for _tokenAmt

Name: _tokenAmt Function: calcValueInBase
Num: 3
Den: -1
Address: -1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_baseAmt_1
_baseAmt_1
_baseAmt

Name: _baseAmt Function: calcValueInBase
Num: 4
Den: -1
Address: -1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
_tokenAmt_1
_tokenAmt_1
_tokenAmt

Name: _tokenAmt Function: calcValueInBase
Num: 3
Den: -1
Address: -1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_40(bool) = _baseAmt_1 > 0
[i]Type for TMP_40

Name: TMP_40 Function: calcValueInBase
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_41(bool) = _tokenAmt_1 > 0
[i]Type for TMP_41

Name: TMP_41 Function: calcValueInBase
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_42(bool) = TMP_40 && TMP_41
[i]Type for TMP_42

Name: TMP_42 Function: calcValueInBase
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
_baseAmt_1
_baseAmt_1
_baseAmt

Name: _baseAmt Function: calcValueInBase
Num: 4
Den: -1
Address: -1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
_tokenAmt_1
_tokenAmt_1
_tokenAmt

Name: _tokenAmt Function: calcValueInBase
Num: 3
Den: -1
Address: -1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
amount_1
amount_1
amount

Name: amount Function: calcValueInBase
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_43(uint256) = amount_1 (c)* _baseAmt_1
[i]Type for TMP_43

Name: TMP_43 Function: calcValueInBase
Num: 4
Den: -1
Address: -1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_44(uint256) = TMP_43 (c)/ _tokenAmt_1
[i]Type for TMP_44

Name: TMP_44 Function: calcValueInBase
Num: 4
Den: 3
Address: -1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_44
[i]Type for TMP_57

Name: TMP_57 Function: requirePriceBounds
Num: 4
Den: 3
Address: -1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_testingPrice_1(uint256) := TMP_57(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for _testingPrice

Name: _testingPrice Function: requirePriceBounds
Num: 4
Den: 3
Address: -1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
targetPrice_1
targetPrice_1
targetPrice
targetPrice

Name: targetPrice_1 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_10k_2
_10k_2
_10k

Name: _10k Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bound_1
bound_1
bound
bound

Name: bound_1 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_lower_1
_lower_1
_lower
_lower

Name: _lower Function: requirePriceBounds
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_58(uint256) = _10k_2 (c)- bound_1
[i]Type for TMP_58

Name: TMP_58 Function: requirePriceBounds
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_59(uint256) = INTERNAL_CALL, Utils.calcPart(uint256,uint256)(TMP_58,targetPrice_1)
[i]Type for TMP_59

Name: TMP_59 Function: requirePriceBounds
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_lower_1(uint256) := TMP_59(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for _lower

Name: _lower Function: requirePriceBounds
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_10k_3
_10k_3
_10k

Name: _10k Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
targetPrice_1
targetPrice_1
targetPrice
targetPrice

Name: targetPrice_1 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bound_1
bound_1
bound
bound

Name: bound_1 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_upper_1
_upper_1
_upper
_upper

Name: _upper Function: requirePriceBounds
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_60(uint256) = _10k_3 (c)+ bound_1

Name: _10k Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: bound_1 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_60

Name: TMP_60 Function: requirePriceBounds
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_61(uint256) = targetPrice_1 (c)* TMP_60
[i]Type for TMP_61

Name: TMP_61 Function: requirePriceBounds
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_62(uint256) = TMP_61 (c)/ _10k_3
[i]Type for TMP_62

Name: TMP_62 Function: requirePriceBounds
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_upper_1(uint256) := TMP_62(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for _upper

Name: _upper Function: requirePriceBounds
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
inside_1
inside_1
inside
inside

Name: inside_1 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
Propogating parameters and globals to SSA variables...
_upper_1
_upper_1
_upper

Name: _upper Function: requirePriceBounds
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_testingPrice_1
_testingPrice_1
_testingPrice

Name: _testingPrice Function: requirePriceBounds
Num: 4
Den: 3
Address: -1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
_lower_1
_lower_1
_lower
_lower

Name: _lower Function: requirePriceBounds
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_63(bool) = _testingPrice_1 >= _lower_1
[i]Type for TMP_63

Name: TMP_63 Function: requirePriceBounds
Num: 4
Den: 3
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_64(bool) = _testingPrice_1 <= _upper_1
[i]Type for TMP_64

Name: TMP_64 Function: requirePriceBounds
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_65(bool) = TMP_63 && TMP_64
[i]Type for TMP_65

Name: TMP_65 Function: requirePriceBounds
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_66(None) = SOLIDITY_CALL require(bool,string)(TMP_65,Not inside)
[i]Type for TMP_66

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
_upper_1
_upper_1
_upper

Name: _upper Function: requirePriceBounds
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_testingPrice_1
_testingPrice_1
_testingPrice

Name: _testingPrice Function: requirePriceBounds
Num: 4
Den: 3
Address: -1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
_lower_1
_lower_1
_lower
_lower

Name: _lower Function: requirePriceBounds
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_67(bool) = _testingPrice_1 <= _lower_1
[i]Type for TMP_67

Name: TMP_67 Function: requirePriceBounds
Num: 4
Den: 3
Address: -1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_68(bool) = _testingPrice_1 >= _upper_1
[i]Type for TMP_68

Name: TMP_68 Function: requirePriceBounds
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_69(bool) = TMP_67 || TMP_68
[i]Type for TMP_69

Name: TMP_69 Function: requirePriceBounds
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_70(None) = SOLIDITY_CALL require(bool,string)(TMP_69,Not outside)
[i]Type for TMP_70

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX



getRewardShare
Finding type for token(address ... )
prev address? u
Head Addr: -988
    Norm: 0
    Set: {-988}
    Fin: NULL
Finding type for rewardReductionFactor(uint256 ... )
Param: 0
    num: []
    den: []
    norm: u
    link: token
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1


VADER_4(address) := ϕ(['VADER_0', 'VADER_6', 'VADER_1'])
ROUTER_2(address) := ϕ(['ROUTER_28', 'ROUTER_13', 'ROUTER_30', 'ROUTER_10', 'ROUTER_1', 'ROUTER_16', 'ROUTER_4', 'ROUTER_7', 'ROUTER_20', 'ROUTER_0', 'ROUTER_25'])
POOLS_24(address) := ϕ(['POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_35', 'POOLS_32', 'POOLS_9', 'POOLS_1', 'POOLS_26', 'POOLS_11', 'POOLS_21', 'POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_0', 'POOLS_29', 'POOLS_47'])
TMP_71 = CONVERT VADER_4 to iVADER
TMP_72(bool) = HIGH_LEVEL_CALL, dest:TMP_71(iVADER), function:emitting, arguments:[]  
VADER_5(address) := ϕ(['VADER_6', 'VADER_4', 'VADER_1'])
ROUTER_3(address) := ϕ(['ROUTER_28', 'ROUTER_13', 'ROUTER_30', 'ROUTER_10', 'ROUTER_1', 'ROUTER_16', 'ROUTER_4', 'ROUTER_2', 'ROUTER_7', 'ROUTER_20', 'ROUTER_25'])
POOLS_25(address) := ϕ(['POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_24', 'POOLS_15', 'POOLS_35', 'POOLS_32', 'POOLS_1', 'POOLS_9', 'POOLS_26', 'POOLS_11', 'POOLS_21', 'POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_47'])
TMP_73 = CONVERT ROUTER_3 to iROUTER
TMP_74(bool) = HIGH_LEVEL_CALL, dest:TMP_73(iROUTER), function:isCurated, arguments:['token_1']  
VADER_6(address) := ϕ(['VADER_5', 'VADER_6', 'VADER_1'])
ROUTER_4(address) := ϕ(['ROUTER_28', 'ROUTER_13', 'ROUTER_30', 'ROUTER_10', 'ROUTER_1', 'ROUTER_16', 'ROUTER_4', 'ROUTER_3', 'ROUTER_7', 'ROUTER_20', 'ROUTER_25'])
POOLS_26(address) := ϕ(['POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_35', 'POOLS_32', 'POOLS_1', 'POOLS_9', 'POOLS_26', 'POOLS_11', 'POOLS_21', 'POOLS_8', 'POOLS_45', 'POOLS_25', 'POOLS_19', 'POOLS_29', 'POOLS_47'])
TMP_75(bool) = TMP_72 && TMP_74
CONDITION TMP_75
TMP_76 = CONVERT POOLS_26 to iPOOLS
TMP_77(uint256) = HIGH_LEVEL_CALL, dest:TMP_76(iPOOLS), function:getBaseAmount, arguments:['token_1']  
ROUTER_5(address) := ϕ(['ROUTER_28', 'ROUTER_13', 'ROUTER_30', 'ROUTER_10', 'ROUTER_1', 'ROUTER_16', 'ROUTER_4', 'ROUTER_7', 'ROUTER_20', 'ROUTER_25'])
POOLS_27(address) := ϕ(['POOLS_45', 'POOLS_26', 'POOLS_1', 'POOLS_54', 'POOLS_10', 'POOLS_19', 'POOLS_29', 'POOLS_11', 'POOLS_21', 'POOLS_47', 'POOLS_12', 'POOLS_8', 'POOLS_17', 'POOLS_23', 'POOLS_35', 'POOLS_15', 'POOLS_32', 'POOLS_9'])
_baseAmount_1(uint256) := TMP_77(uint256)
TMP_78 = CONVERT POOLS_27 to iPOOLS
TMP_79(bool) = HIGH_LEVEL_CALL, dest:TMP_78(iPOOLS), function:isAsset, arguments:['token_1']  
ROUTER_6(address) := ϕ(['ROUTER_28', 'ROUTER_5', 'ROUTER_13', 'ROUTER_30', 'ROUTER_10', 'ROUTER_1', 'ROUTER_16', 'ROUTER_4', 'ROUTER_7', 'ROUTER_20', 'ROUTER_25'])
POOLS_28(address) := ϕ(['POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_27', 'POOLS_35', 'POOLS_32', 'POOLS_1', 'POOLS_9', 'POOLS_26', 'POOLS_11', 'POOLS_21', 'POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_47'])
CONDITION TMP_79
TMP_86 = CONVERT POOLS_28 to iPOOLS
TMP_87(bool) = HIGH_LEVEL_CALL, dest:TMP_86(iPOOLS), function:isAnchor, arguments:['token_1']  
ROUTER_7(address) := ϕ(['ROUTER_28', 'ROUTER_6', 'ROUTER_13', 'ROUTER_30', 'ROUTER_10', 'ROUTER_1', 'ROUTER_16', 'ROUTER_4', 'ROUTER_7', 'ROUTER_20', 'ROUTER_25'])
POOLS_29(address) := ϕ(['POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_28', 'POOLS_15', 'POOLS_35', 'POOLS_32', 'POOLS_1', 'POOLS_9', 'POOLS_26', 'POOLS_11', 'POOLS_21', 'POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_47'])
CONDITION TMP_87
TMP_80 = CONVERT POOLS_28 to iPOOLS
TMP_81(uint256) = HIGH_LEVEL_CALL, dest:TMP_80(iPOOLS), function:pooledUSDV, arguments:[]  
ROUTER_11(address) := ϕ(['ROUTER_28', 'ROUTER_13', 'ROUTER_30', 'ROUTER_10', 'ROUTER_1', 'ROUTER_16', 'ROUTER_4', 'ROUTER_7', 'ROUTER_20', 'ROUTER_25'])
POOLS_33(address) := ϕ(['POOLS_45', 'POOLS_26', 'POOLS_1', 'POOLS_54', 'POOLS_10', 'POOLS_19', 'POOLS_29', 'POOLS_11', 'POOLS_21', 'POOLS_47', 'POOLS_12', 'POOLS_8', 'POOLS_17', 'POOLS_23', 'POOLS_35', 'POOLS_15', 'POOLS_32', 'POOLS_9'])
TMP_82 = CONVERT ROUTER_11 to iROUTER
TMP_83(uint256) = HIGH_LEVEL_CALL, dest:TMP_82(iROUTER), function:reserveUSDV, arguments:[]  
ROUTER_12(address) := ϕ(['ROUTER_28', 'ROUTER_11', 'ROUTER_13', 'ROUTER_30', 'ROUTER_10', 'ROUTER_1', 'ROUTER_16', 'ROUTER_4', 'ROUTER_7', 'ROUTER_20', 'ROUTER_25'])
POOLS_34(address) := ϕ(['POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_33', 'POOLS_35', 'POOLS_32', 'POOLS_1', 'POOLS_9', 'POOLS_26', 'POOLS_11', 'POOLS_21', 'POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_47'])
TMP_84(uint256) = INTERNAL_CALL, Utils.calcShare(uint256,uint256,uint256)(_baseAmount_1,TMP_81,TMP_83)
_share_1(uint256) := TMP_84(uint256)
TMP_88 = CONVERT POOLS_29 to iPOOLS
TMP_89(uint256) = HIGH_LEVEL_CALL, dest:TMP_88(iPOOLS), function:pooledVADER, arguments:[]  
ROUTER_8(address) := ϕ(['ROUTER_28', 'ROUTER_13', 'ROUTER_30', 'ROUTER_10', 'ROUTER_1', 'ROUTER_16', 'ROUTER_4', 'ROUTER_7', 'ROUTER_20', 'ROUTER_25'])
POOLS_30(address) := ϕ(['POOLS_45', 'POOLS_26', 'POOLS_1', 'POOLS_54', 'POOLS_10', 'POOLS_19', 'POOLS_29', 'POOLS_11', 'POOLS_21', 'POOLS_47', 'POOLS_12', 'POOLS_8', 'POOLS_17', 'POOLS_23', 'POOLS_35', 'POOLS_15', 'POOLS_32', 'POOLS_9'])
TMP_90 = CONVERT ROUTER_8 to iROUTER
TMP_91(uint256) = HIGH_LEVEL_CALL, dest:TMP_90(iROUTER), function:reserveVADER, arguments:[]  
ROUTER_9(address) := ϕ(['ROUTER_28', 'ROUTER_13', 'ROUTER_30', 'ROUTER_8', 'ROUTER_10', 'ROUTER_1', 'ROUTER_16', 'ROUTER_4', 'ROUTER_7', 'ROUTER_20', 'ROUTER_25'])
POOLS_31(address) := ϕ(['POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_35', 'POOLS_30', 'POOLS_32', 'POOLS_1', 'POOLS_9', 'POOLS_26', 'POOLS_11', 'POOLS_21', 'POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_47'])
TMP_92(uint256) = INTERNAL_CALL, Utils.calcShare(uint256,uint256,uint256)(_baseAmount_1,TMP_89,TMP_91)
_share_scope_0_1(uint256) := TMP_92(uint256)
TMP_85(uint256) = INTERNAL_CALL, Utils.getReducedShare(uint256,uint256)(_share_1,rewardReductionFactor_1)
rewardShare_2(uint256) := TMP_85(uint256)
TMP_93(uint256) = INTERNAL_CALL, Utils.getReducedShare(uint256,uint256)(_share_scope_0_1,rewardReductionFactor_1)
rewardShare_1(uint256) := TMP_93(uint256)


Propogating parameters and globals to SSA variables...
End popogation
VADER_4
VADER
VADER

Name: None Function: None
Num: -1
Den: -1
Address: 4
Norm: u
LF: VADER
Value: u
Fields: 
Finance Type: undef
ROUTER_2
ROUTER
ROUTER

Name: None Function: None
Num: -1
Den: -1
Address: 5
Norm: u
LF: ROUTER
Value: u
Fields: 
Finance Type: undef
POOLS_24
POOLS
POOLS

Name: None Function: None
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
VADER_4(address) := ϕ(['VADER_0', 'VADER_6', 'VADER_1'])
Phi
[i]Type for VADER

Name: VADER Function: getRewardShare
Num: -1
Den: -1
Address: 4
Norm: u
LF: VADER
Value: u
Fields: 
Finance Type: undef
XXXX
ROUTER_2(address) := ϕ(['ROUTER_28', 'ROUTER_13', 'ROUTER_30', 'ROUTER_10', 'ROUTER_1', 'ROUTER_16', 'ROUTER_4', 'ROUTER_7', 'ROUTER_20', 'ROUTER_0', 'ROUTER_25'])
Phi
[i]Type for ROUTER

Name: ROUTER Function: getRewardShare
Num: -1
Den: -1
Address: 5
Norm: u
LF: ROUTER
Value: u
Fields: 
Finance Type: undef
XXXX
POOLS_24(address) := ϕ(['POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_35', 'POOLS_32', 'POOLS_9', 'POOLS_1', 'POOLS_26', 'POOLS_11', 'POOLS_21', 'POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_0', 'POOLS_29', 'POOLS_47'])
Phi
[i]Type for POOLS

Name: POOLS Function: getRewardShare
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
token_1
token_1
token

Name: token_1 Function: None
Num: 
Den: 
Address: -988
Norm: u
LF: token
Value: u
Fields: 
Finance Type: undef
ROUTER_3
ROUTER_3
ROUTER
ROUTER

Name: None Function: None
Num: -1
Den: -1
Address: 5
Norm: u
LF: ROUTER
Value: u
Fields: 
Finance Type: undef
VADER_4
VADER_4
VADER

Name: VADER Function: getRewardShare
Num: -1
Den: -1
Address: 4
Norm: u
LF: VADER
Value: u
Fields: 
Finance Type: undef
End popogation
VADER_5
VADER
VADER

Name: None Function: None
Num: -1
Den: -1
Address: 4
Norm: u
LF: VADER
Value: u
Fields: 
Finance Type: undef
ROUTER_3
ROUTER

Name: None Function: None
Num: -1
Den: -1
Address: 5
Norm: u
LF: ROUTER
Value: u
Fields: 
Finance Type: undef
POOLS_25
POOLS
POOLS

Name: None Function: None
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
VADER_6
VADER
VADER

Name: None Function: None
Num: -1
Den: -1
Address: 4
Norm: u
LF: VADER
Value: u
Fields: 
Finance Type: undef
ROUTER_4
ROUTER
ROUTER

Name: None Function: None
Num: -1
Den: -1
Address: 5
Norm: u
LF: ROUTER
Value: u
Fields: 
Finance Type: undef
POOLS_26
POOLS
POOLS

Name: None Function: None
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_71 = CONVERT VADER_4 to iVADER
Converting VADER_4

Name: VADER Function: getRewardShare
Num: -1
Den: -1
Address: 4
Norm: u
LF: VADER
Value: u
Fields: 
Finance Type: undef
VADER
[i]Type for TMP_71

Name: TMP_71 Function: getRewardShare
Num: -1
Den: -1
Address: 4
Norm: u
LF: VADER
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_72(bool) = HIGH_LEVEL_CALL, dest:TMP_71(iVADER), function:emitting, arguments:[]  
High Call: emitting
Running querryfc
[i]Type for TMP_72

Name: TMP_72 Function: getRewardShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
VADER_5(address) := ϕ(['VADER_6', 'VADER_4', 'VADER_1'])
Phi
[i]Type for VADER

Name: VADER Function: getRewardShare
Num: -1
Den: -1
Address: 4
Norm: u
LF: VADER
Value: u
Fields: 
Finance Type: undef
XXXX
ROUTER_3(address) := ϕ(['ROUTER_28', 'ROUTER_13', 'ROUTER_30', 'ROUTER_10', 'ROUTER_1', 'ROUTER_16', 'ROUTER_4', 'ROUTER_2', 'ROUTER_7', 'ROUTER_20', 'ROUTER_25'])
Phi
[i]Type for ROUTER

Name: ROUTER Function: getRewardShare
Num: -1
Den: -1
Address: 5
Norm: u
LF: ROUTER
Value: u
Fields: 
Finance Type: undef
XXXX
POOLS_25(address) := ϕ(['POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_24', 'POOLS_15', 'POOLS_35', 'POOLS_32', 'POOLS_1', 'POOLS_9', 'POOLS_26', 'POOLS_11', 'POOLS_21', 'POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_47'])
Phi
[i]Type for POOLS

Name: POOLS Function: getRewardShare
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_73 = CONVERT ROUTER_3 to iROUTER
Converting ROUTER_3

Name: ROUTER Function: getRewardShare
Num: -1
Den: -1
Address: 5
Norm: u
LF: ROUTER
Value: u
Fields: 
Finance Type: undef
ROUTER
[i]Type for TMP_73

Name: TMP_73 Function: getRewardShare
Num: -1
Den: -1
Address: 5
Norm: u
LF: ROUTER
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_74(bool) = HIGH_LEVEL_CALL, dest:TMP_73(iROUTER), function:isCurated, arguments:['token_1']  
High Call: isCurated
Running querryfc
[i]Type for TMP_74

Name: TMP_74 Function: getRewardShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
VADER_6(address) := ϕ(['VADER_5', 'VADER_6', 'VADER_1'])
Phi
[i]Type for VADER

Name: VADER Function: getRewardShare
Num: -1
Den: -1
Address: 4
Norm: u
LF: VADER
Value: u
Fields: 
Finance Type: undef
XXXX
ROUTER_4(address) := ϕ(['ROUTER_28', 'ROUTER_13', 'ROUTER_30', 'ROUTER_10', 'ROUTER_1', 'ROUTER_16', 'ROUTER_4', 'ROUTER_3', 'ROUTER_7', 'ROUTER_20', 'ROUTER_25'])
Phi
[i]Type for ROUTER

Name: ROUTER Function: getRewardShare
Num: -1
Den: -1
Address: 5
Norm: u
LF: ROUTER
Value: u
Fields: 
Finance Type: undef
XXXX
POOLS_26(address) := ϕ(['POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_35', 'POOLS_32', 'POOLS_1', 'POOLS_9', 'POOLS_26', 'POOLS_11', 'POOLS_21', 'POOLS_8', 'POOLS_45', 'POOLS_25', 'POOLS_19', 'POOLS_29', 'POOLS_47'])
Phi
[i]Type for POOLS

Name: POOLS Function: getRewardShare
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_75(bool) = TMP_72 && TMP_74
[i]Type for TMP_75

Name: TMP_75 Function: getRewardShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
token_1
token_1
token

Name: token_1 Function: None
Num: 
Den: 
Address: -988
Norm: u
LF: token
Value: u
Fields: 
Finance Type: undef
POOLS_26
POOLS_26
POOLS

Name: POOLS Function: getRewardShare
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
_baseAmount_1
_baseAmount_1
_baseAmount
_baseAmount

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
ROUTER_5
ROUTER
ROUTER

Name: None Function: None
Num: -1
Den: -1
Address: 5
Norm: u
LF: ROUTER
Value: u
Fields: 
Finance Type: undef
POOLS_27
POOLS
POOLS

Name: None Function: None
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_76 = CONVERT POOLS_26 to iPOOLS
Converting POOLS_26

Name: POOLS Function: getRewardShare
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
POOLS
[i]Type for TMP_76

Name: TMP_76 Function: getRewardShare
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_77(uint256) = HIGH_LEVEL_CALL, dest:TMP_76(iPOOLS), function:getBaseAmount, arguments:['token_1']  
High Call: getBaseAmount
Running querryfc
Written func info: POOLS, getBaseAmount
Retvar: ('c', ['-1'], ['-1'], 0, 0, None)
([-1], [-1], 0, None, -1)
[i]Type for TMP_77

Name: TMP_77 Function: getRewardShare
Num: -1
Den: -1
Address: -1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
ROUTER_5(address) := ϕ(['ROUTER_28', 'ROUTER_13', 'ROUTER_30', 'ROUTER_10', 'ROUTER_1', 'ROUTER_16', 'ROUTER_4', 'ROUTER_7', 'ROUTER_20', 'ROUTER_25'])
Phi
[i]Type for ROUTER

Name: ROUTER Function: getRewardShare
Num: -1
Den: -1
Address: 5
Norm: u
LF: ROUTER
Value: u
Fields: 
Finance Type: undef
XXXX
POOLS_27(address) := ϕ(['POOLS_45', 'POOLS_26', 'POOLS_1', 'POOLS_54', 'POOLS_10', 'POOLS_19', 'POOLS_29', 'POOLS_11', 'POOLS_21', 'POOLS_47', 'POOLS_12', 'POOLS_8', 'POOLS_17', 'POOLS_23', 'POOLS_35', 'POOLS_15', 'POOLS_32', 'POOLS_9'])
Phi
[i]Type for POOLS

Name: POOLS Function: getRewardShare
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
XXXX
_baseAmount_1(uint256) := TMP_77(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for _baseAmount

Name: _baseAmount Function: getRewardShare
Num: -1
Den: -1
Address: -1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
token_1
token_1
token

Name: token_1 Function: None
Num: 
Den: 
Address: -988
Norm: u
LF: token
Value: u
Fields: 
Finance Type: undef
POOLS_27
POOLS_27
POOLS

Name: POOLS Function: getRewardShare
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
End popogation
ROUTER_6
ROUTER
ROUTER

Name: None Function: None
Num: -1
Den: -1
Address: 5
Norm: u
LF: ROUTER
Value: u
Fields: 
Finance Type: undef
POOLS_28
POOLS
POOLS

Name: None Function: None
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_78 = CONVERT POOLS_27 to iPOOLS
Converting POOLS_27

Name: POOLS Function: getRewardShare
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
POOLS
[i]Type for TMP_78

Name: TMP_78 Function: getRewardShare
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_79(bool) = HIGH_LEVEL_CALL, dest:TMP_78(iPOOLS), function:isAsset, arguments:['token_1']  
High Call: isAsset
Running querryfc
[i]Type for TMP_79

Name: TMP_79 Function: getRewardShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
ROUTER_6(address) := ϕ(['ROUTER_28', 'ROUTER_5', 'ROUTER_13', 'ROUTER_30', 'ROUTER_10', 'ROUTER_1', 'ROUTER_16', 'ROUTER_4', 'ROUTER_7', 'ROUTER_20', 'ROUTER_25'])
Phi
[i]Type for ROUTER

Name: ROUTER Function: getRewardShare
Num: -1
Den: -1
Address: 5
Norm: u
LF: ROUTER
Value: u
Fields: 
Finance Type: undef
XXXX
POOLS_28(address) := ϕ(['POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_27', 'POOLS_35', 'POOLS_32', 'POOLS_1', 'POOLS_9', 'POOLS_26', 'POOLS_11', 'POOLS_21', 'POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_47'])
Phi
[i]Type for POOLS

Name: POOLS Function: getRewardShare
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
token_1
token_1
token

Name: token_1 Function: None
Num: 
Den: 
Address: -988
Norm: u
LF: token
Value: u
Fields: 
Finance Type: undef
POOLS_28
POOLS_28
POOLS

Name: POOLS Function: getRewardShare
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
End popogation
ROUTER_7
ROUTER
ROUTER

Name: None Function: None
Num: -1
Den: -1
Address: 5
Norm: u
LF: ROUTER
Value: u
Fields: 
Finance Type: undef
POOLS_29
POOLS
POOLS

Name: None Function: None
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_86 = CONVERT POOLS_28 to iPOOLS
Converting POOLS_28

Name: POOLS Function: getRewardShare
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
POOLS
[i]Type for TMP_86

Name: TMP_86 Function: getRewardShare
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_87(bool) = HIGH_LEVEL_CALL, dest:TMP_86(iPOOLS), function:isAnchor, arguments:['token_1']  
High Call: isAnchor
Running querryfc
[i]Type for TMP_87

Name: TMP_87 Function: getRewardShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
ROUTER_7(address) := ϕ(['ROUTER_28', 'ROUTER_6', 'ROUTER_13', 'ROUTER_30', 'ROUTER_10', 'ROUTER_1', 'ROUTER_16', 'ROUTER_4', 'ROUTER_7', 'ROUTER_20', 'ROUTER_25'])
Phi
[i]Type for ROUTER

Name: ROUTER Function: getRewardShare
Num: -1
Den: -1
Address: 5
Norm: u
LF: ROUTER
Value: u
Fields: 
Finance Type: undef
XXXX
POOLS_29(address) := ϕ(['POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_28', 'POOLS_15', 'POOLS_35', 'POOLS_32', 'POOLS_1', 'POOLS_9', 'POOLS_26', 'POOLS_11', 'POOLS_21', 'POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_47'])
Phi
[i]Type for POOLS

Name: POOLS Function: getRewardShare
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
_baseAmount_1
_baseAmount_1
_baseAmount

Name: _baseAmount Function: getRewardShare
Num: -1
Den: -1
Address: -1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
ROUTER_11
ROUTER_11
ROUTER
ROUTER

Name: None Function: None
Num: -1
Den: -1
Address: 5
Norm: u
LF: ROUTER
Value: u
Fields: 
Finance Type: undef
POOLS_28
POOLS_28
POOLS

Name: POOLS Function: getRewardShare
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
_share_1
_share_1
_share
_share

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
ROUTER_11
ROUTER

Name: None Function: None
Num: -1
Den: -1
Address: 5
Norm: u
LF: ROUTER
Value: u
Fields: 
Finance Type: undef
POOLS_33
POOLS
POOLS

Name: None Function: None
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
ROUTER_12
ROUTER
ROUTER

Name: None Function: None
Num: -1
Den: -1
Address: 5
Norm: u
LF: ROUTER
Value: u
Fields: 
Finance Type: undef
POOLS_34
POOLS
POOLS

Name: None Function: None
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_80 = CONVERT POOLS_28 to iPOOLS
Converting POOLS_28

Name: POOLS Function: getRewardShare
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
POOLS
[i]Type for TMP_80

Name: TMP_80 Function: getRewardShare
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_81(uint256) = HIGH_LEVEL_CALL, dest:TMP_80(iPOOLS), function:pooledUSDV, arguments:[]  
High Call: pooledUSDV
Running querryfc
Written func info: POOLS, pooledUSDV
Retvar: ('c', ['global:USDV'], ['-1'], 0, 0, None)
{'global:FACTORY': 1, 'global:POOLS': 2, 'global:USDV': 3, 'global:VADER': 4, 'global:ROUTER': 5, 'assetChecks:collateralAsset': -999, 'assetChecks:debtAsset': -998, 'isBase:token': -997, 'isPool:token': -996, 'calcValueInBase:token': -995, 'calcValueInToken:token': -994, 'calcValueOfTokenInToken:token1': -993, 'calcValueOfTokenInToken:token2': -992, 'calcSwapValueInBase:token': -991, 'calcSwapValueInToken:token': -990, 'requirePriceBounds:token': -989, 'getRewardShare:token': -988, 'getProtection:member': -987, 'getProtection:token': -986, 'getCoverage:member': -985, 'getCoverage:token': -984, 'getCollateralValueInBase:member': -983, 'getCollateralValueInBase:collateralAsset': -982, 'getCollateralValueInBase:debtAsset': -981, 'getDebtValueInCollateral:member': -980, 'getDebtValueInCollateral:collateralAsset': -979, 'getDebtValueInCollateral:debtAsset': -978, 'getInterestOwed:collateralAsset': -977, 'getInterestOwed:debtAsset': -976, 'getInterestPayment:collateralAsset': -975, 'getInterestPayment:debtAsset': -974, 'getDebtLoading:collateralAsset': -973, 'getDebtLoading:debtAsset': -972, 'getDebtAsset:debtAsset': -971}
([3], [-1], 0, None, -1)
[i]Type for TMP_81

Name: TMP_81 Function: getRewardShare
Num: 3
Den: -1
Address: -1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
ROUTER_11(address) := ϕ(['ROUTER_28', 'ROUTER_13', 'ROUTER_30', 'ROUTER_10', 'ROUTER_1', 'ROUTER_16', 'ROUTER_4', 'ROUTER_7', 'ROUTER_20', 'ROUTER_25'])
Phi
[i]Type for ROUTER

Name: ROUTER Function: getRewardShare
Num: -1
Den: -1
Address: 5
Norm: u
LF: ROUTER
Value: u
Fields: 
Finance Type: undef
XXXX
POOLS_33(address) := ϕ(['POOLS_45', 'POOLS_26', 'POOLS_1', 'POOLS_54', 'POOLS_10', 'POOLS_19', 'POOLS_29', 'POOLS_11', 'POOLS_21', 'POOLS_47', 'POOLS_12', 'POOLS_8', 'POOLS_17', 'POOLS_23', 'POOLS_35', 'POOLS_15', 'POOLS_32', 'POOLS_9'])
Phi
[i]Type for POOLS

Name: POOLS Function: getRewardShare
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_82 = CONVERT ROUTER_11 to iROUTER
Converting ROUTER_11

Name: ROUTER Function: getRewardShare
Num: -1
Den: -1
Address: 5
Norm: u
LF: ROUTER
Value: u
Fields: 
Finance Type: undef
ROUTER
[i]Type for TMP_82

Name: TMP_82 Function: getRewardShare
Num: -1
Den: -1
Address: 5
Norm: u
LF: ROUTER
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_83(uint256) = HIGH_LEVEL_CALL, dest:TMP_82(iROUTER), function:reserveUSDV, arguments:[]  
High Call: reserveUSDV
Running querryfc
Written func info: ROUTER, reserveUSDV
Retvar: ('c', ['global:USDV'], ['-1'], 0, 0, None)
{'global:FACTORY': 1, 'global:POOLS': 2, 'global:USDV': 3, 'global:VADER': 4, 'global:ROUTER': 5, 'assetChecks:collateralAsset': -999, 'assetChecks:debtAsset': -998, 'isBase:token': -997, 'isPool:token': -996, 'calcValueInBase:token': -995, 'calcValueInToken:token': -994, 'calcValueOfTokenInToken:token1': -993, 'calcValueOfTokenInToken:token2': -992, 'calcSwapValueInBase:token': -991, 'calcSwapValueInToken:token': -990, 'requirePriceBounds:token': -989, 'getRewardShare:token': -988, 'getProtection:member': -987, 'getProtection:token': -986, 'getCoverage:member': -985, 'getCoverage:token': -984, 'getCollateralValueInBase:member': -983, 'getCollateralValueInBase:collateralAsset': -982, 'getCollateralValueInBase:debtAsset': -981, 'getDebtValueInCollateral:member': -980, 'getDebtValueInCollateral:collateralAsset': -979, 'getDebtValueInCollateral:debtAsset': -978, 'getInterestOwed:collateralAsset': -977, 'getInterestOwed:debtAsset': -976, 'getInterestPayment:collateralAsset': -975, 'getInterestPayment:debtAsset': -974, 'getDebtLoading:collateralAsset': -973, 'getDebtLoading:debtAsset': -972, 'getDebtAsset:debtAsset': -971}
([3], [-1], 0, None, -1)
[i]Type for TMP_83

Name: TMP_83 Function: getRewardShare
Num: 3
Den: -1
Address: -1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
ROUTER_12(address) := ϕ(['ROUTER_28', 'ROUTER_11', 'ROUTER_13', 'ROUTER_30', 'ROUTER_10', 'ROUTER_1', 'ROUTER_16', 'ROUTER_4', 'ROUTER_7', 'ROUTER_20', 'ROUTER_25'])
Phi
[i]Type for ROUTER

Name: ROUTER Function: getRewardShare
Num: -1
Den: -1
Address: 5
Norm: u
LF: ROUTER
Value: u
Fields: 
Finance Type: undef
XXXX
POOLS_34(address) := ϕ(['POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_33', 'POOLS_35', 'POOLS_32', 'POOLS_1', 'POOLS_9', 'POOLS_26', 'POOLS_11', 'POOLS_21', 'POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_47'])
Phi
[i]Type for POOLS

Name: POOLS Function: getRewardShare
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_84(uint256) = INTERNAL_CALL, Utils.calcShare(uint256,uint256,uint256)(_baseAmount_1,TMP_81,TMP_83)
[[-1], [-1], 0, None, [], -1, -1, 'u']

Name: part Function: None
Num: -1
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[3], [-1], 0, None, [], -1, -1, 'u']

Name: total Function: None
Num: 3
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[3], [-1], 0, None, [], -1, -1, 'u']

Name: amount Function: None
Num: 3
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: part Function: None
Num: -1
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: total Function: None
Num: 3
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount Function: None
Num: 3
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
part_1
part

Name: part_1 Function: calcShare
Num: -1
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
total_1
total

Name: total_1 Function: calcShare
Num: 3
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
amount_1
amount

Name: amount_1 Function: calcShare
Num: 3
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
part_1(uint256) := ϕ(['_units_1', '_baseAmount_1', 'bp_1', 'totalSupply_1', '_memberCollateral_1', 'debt_1', 'timeElapsed_1', '_duration_1'])
Phi
[i]Type for part

Name: part Function: calcShare
Num: -1
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
total_1(uint256) := ϕ(['_collateral_1', 'maxSupply_1', '_memberDebt_1', 'TMP_111', 'timeForFullProtection_1', 'rewardReductionFactor_1', 'TMP_81', 'TMP_89', 'TMP_116', '_year_2'])
Phi
[i]Type for total

Name: total Function: calcShare
Num: 3
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['TMP_146', 'TMP_113', 'TMP_118', '_interestPaid_1', '_coverage_1', '_memberCollateral_1', 'amount_1', 'total_1', 'TMP_83', 'TMP_91'])
Phi
[i]Type for amount

Name: amount Function: calcShare
Num: 3
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
part_1
part_1
part

Name: part Function: calcShare
Num: -1
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
total_1
total_1
total

Name: total Function: calcShare
Num: 3
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_169(bool) = part_1 > total_1
[i]Type for TMP_169

Name: TMP_169 Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
total_1
total_1
total

Name: total Function: calcShare
Num: 3
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
part_2
part_2
part
part

Name: part Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
part_2(uint256) := total_1(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for part

Name: part Function: calcShare
Num: 3
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
part_3
part
part

Name: part Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
part_3(uint256) := ϕ(['part_2', 'part_1'])
Phi
[i]Type for part

Name: part Function: calcShare
Num: 3
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
total_1
total_1
total

Name: total Function: calcShare
Num: 3
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_170(bool) = total_1 > 0
[i]Type for TMP_170

Name: TMP_170 Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
amount_1
amount_1
amount

Name: amount Function: calcShare
Num: 3
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
total_1
total_1
total

Name: total Function: calcShare
Num: 3
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
part_3
part_3
part

Name: part Function: calcShare
Num: 3
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
share_1
share_1
share
share

Name: share Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_171(uint256) = amount_1 (c)* part_3
[i]Type for TMP_171

Name: TMP_171 Function: calcShare
Num: 3, 3
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_172(uint256) = TMP_171 (c)/ total_1
[i]Type for TMP_172

Name: TMP_172 Function: calcShare
Num: 3
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
share_1(uint256) := TMP_172(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for share

Name: share Function: calcShare
Num: 3
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX

Name: part Function: None
Num: -1
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: total Function: None
Num: 3
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount Function: None
Num: 3
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
part_1
part

Name: part_1 Function: calcShare
Num: -1
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
total_1
total

Name: total_1 Function: calcShare
Num: 3
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
amount_1
amount

Name: amount_1 Function: calcShare
Num: 3
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
part_1(uint256) := ϕ(['_units_1', '_baseAmount_1', 'bp_1', 'totalSupply_1', '_memberCollateral_1', 'debt_1', 'timeElapsed_1', '_duration_1'])
Phi
[i]Type for part

Name: part Function: calcShare
Num: -1
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
total_1(uint256) := ϕ(['_collateral_1', 'maxSupply_1', '_memberDebt_1', 'TMP_111', 'timeForFullProtection_1', 'rewardReductionFactor_1', 'TMP_81', 'TMP_89', 'TMP_116', '_year_2'])
Phi
[i]Type for total

Name: total Function: calcShare
Num: 3
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['TMP_146', 'TMP_113', 'TMP_118', '_interestPaid_1', '_coverage_1', '_memberCollateral_1', 'amount_1', 'total_1', 'TMP_83', 'TMP_91'])
Phi
[i]Type for amount

Name: amount Function: calcShare
Num: 3
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
part_1
part_1
part

Name: part Function: calcShare
Num: -1
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
total_1
total_1
total

Name: total Function: calcShare
Num: 3
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_169(bool) = part_1 > total_1
[i]Type for TMP_169

Name: TMP_169 Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
total_1
total_1
total

Name: total Function: calcShare
Num: 3
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
part_2
part_2
part
part

Name: part Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
part_2(uint256) := total_1(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for part

Name: part Function: calcShare
Num: 3
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
part_3
part
part

Name: part Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
part_3(uint256) := ϕ(['part_2', 'part_1'])
Phi
[i]Type for part

Name: part Function: calcShare
Num: 3
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
total_1
total_1
total

Name: total Function: calcShare
Num: 3
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_170(bool) = total_1 > 0
[i]Type for TMP_170

Name: TMP_170 Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
amount_1
amount_1
amount

Name: amount Function: calcShare
Num: 3
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
total_1
total_1
total

Name: total Function: calcShare
Num: 3
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
part_3
part_3
part

Name: part Function: calcShare
Num: 3
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
share_1
share_1
share
share

Name: share Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_171(uint256) = amount_1 (c)* part_3
[i]Type for TMP_171

Name: TMP_171 Function: calcShare
Num: 3, 3
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_172(uint256) = TMP_171 (c)/ total_1
[i]Type for TMP_172

Name: TMP_172 Function: calcShare
Num: 3
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
share_1(uint256) := TMP_172(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for share

Name: share Function: calcShare
Num: 3
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i]Type for TMP_84

Name: TMP_84 Function: getRewardShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_share_1(uint256) := TMP_84(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for _share

Name: _share Function: getRewardShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_baseAmount_1
_baseAmount_1
_baseAmount

Name: _baseAmount Function: getRewardShare
Num: -1
Den: -1
Address: -1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
ROUTER_8
ROUTER_8
ROUTER
ROUTER

Name: None Function: None
Num: -1
Den: -1
Address: 5
Norm: u
LF: ROUTER
Value: u
Fields: 
Finance Type: undef
POOLS_29
POOLS_29
POOLS

Name: POOLS Function: getRewardShare
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
_share_scope_0_1
_share_scope_0_1
_share_scope_0
_share_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
ROUTER_8
ROUTER

Name: None Function: None
Num: -1
Den: -1
Address: 5
Norm: u
LF: ROUTER
Value: u
Fields: 
Finance Type: undef
POOLS_30
POOLS
POOLS

Name: None Function: None
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
ROUTER_9
ROUTER
ROUTER

Name: None Function: None
Num: -1
Den: -1
Address: 5
Norm: u
LF: ROUTER
Value: u
Fields: 
Finance Type: undef
POOLS_31
POOLS
POOLS

Name: None Function: None
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_88 = CONVERT POOLS_29 to iPOOLS
Converting POOLS_29

Name: POOLS Function: getRewardShare
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
POOLS
[i]Type for TMP_88

Name: TMP_88 Function: getRewardShare
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_89(uint256) = HIGH_LEVEL_CALL, dest:TMP_88(iPOOLS), function:pooledVADER, arguments:[]  
High Call: pooledVADER
Running querryfc
Written func info: POOLS, pooledVADER
Retvar: ('c', ['global:VADER'], ['-1'], 0, 0, None)
{'global:FACTORY': 1, 'global:POOLS': 2, 'global:USDV': 3, 'global:VADER': 4, 'global:ROUTER': 5, 'assetChecks:collateralAsset': -999, 'assetChecks:debtAsset': -998, 'isBase:token': -997, 'isPool:token': -996, 'calcValueInBase:token': -995, 'calcValueInToken:token': -994, 'calcValueOfTokenInToken:token1': -993, 'calcValueOfTokenInToken:token2': -992, 'calcSwapValueInBase:token': -991, 'calcSwapValueInToken:token': -990, 'requirePriceBounds:token': -989, 'getRewardShare:token': -988, 'getProtection:member': -987, 'getProtection:token': -986, 'getCoverage:member': -985, 'getCoverage:token': -984, 'getCollateralValueInBase:member': -983, 'getCollateralValueInBase:collateralAsset': -982, 'getCollateralValueInBase:debtAsset': -981, 'getDebtValueInCollateral:member': -980, 'getDebtValueInCollateral:collateralAsset': -979, 'getDebtValueInCollateral:debtAsset': -978, 'getInterestOwed:collateralAsset': -977, 'getInterestOwed:debtAsset': -976, 'getInterestPayment:collateralAsset': -975, 'getInterestPayment:debtAsset': -974, 'getDebtLoading:collateralAsset': -973, 'getDebtLoading:debtAsset': -972, 'getDebtAsset:debtAsset': -971}
([4], [-1], 0, None, -1)
[i]Type for TMP_89

Name: TMP_89 Function: getRewardShare
Num: 4
Den: -1
Address: -1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
ROUTER_8(address) := ϕ(['ROUTER_28', 'ROUTER_13', 'ROUTER_30', 'ROUTER_10', 'ROUTER_1', 'ROUTER_16', 'ROUTER_4', 'ROUTER_7', 'ROUTER_20', 'ROUTER_25'])
Phi
[i]Type for ROUTER

Name: ROUTER Function: getRewardShare
Num: -1
Den: -1
Address: 5
Norm: u
LF: ROUTER
Value: u
Fields: 
Finance Type: undef
XXXX
POOLS_30(address) := ϕ(['POOLS_45', 'POOLS_26', 'POOLS_1', 'POOLS_54', 'POOLS_10', 'POOLS_19', 'POOLS_29', 'POOLS_11', 'POOLS_21', 'POOLS_47', 'POOLS_12', 'POOLS_8', 'POOLS_17', 'POOLS_23', 'POOLS_35', 'POOLS_15', 'POOLS_32', 'POOLS_9'])
Phi
[i]Type for POOLS

Name: POOLS Function: getRewardShare
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_90 = CONVERT ROUTER_8 to iROUTER
Converting ROUTER_8

Name: ROUTER Function: getRewardShare
Num: -1
Den: -1
Address: 5
Norm: u
LF: ROUTER
Value: u
Fields: 
Finance Type: undef
ROUTER
[i]Type for TMP_90

Name: TMP_90 Function: getRewardShare
Num: -1
Den: -1
Address: 5
Norm: u
LF: ROUTER
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_91(uint256) = HIGH_LEVEL_CALL, dest:TMP_90(iROUTER), function:reserveVADER, arguments:[]  
High Call: reserveVADER
Running querryfc
Written func info: ROUTER, reserveVADER
Retvar: ('c', ['global:VADER'], ['-1'], 0, 0, None)
{'global:FACTORY': 1, 'global:POOLS': 2, 'global:USDV': 3, 'global:VADER': 4, 'global:ROUTER': 5, 'assetChecks:collateralAsset': -999, 'assetChecks:debtAsset': -998, 'isBase:token': -997, 'isPool:token': -996, 'calcValueInBase:token': -995, 'calcValueInToken:token': -994, 'calcValueOfTokenInToken:token1': -993, 'calcValueOfTokenInToken:token2': -992, 'calcSwapValueInBase:token': -991, 'calcSwapValueInToken:token': -990, 'requirePriceBounds:token': -989, 'getRewardShare:token': -988, 'getProtection:member': -987, 'getProtection:token': -986, 'getCoverage:member': -985, 'getCoverage:token': -984, 'getCollateralValueInBase:member': -983, 'getCollateralValueInBase:collateralAsset': -982, 'getCollateralValueInBase:debtAsset': -981, 'getDebtValueInCollateral:member': -980, 'getDebtValueInCollateral:collateralAsset': -979, 'getDebtValueInCollateral:debtAsset': -978, 'getInterestOwed:collateralAsset': -977, 'getInterestOwed:debtAsset': -976, 'getInterestPayment:collateralAsset': -975, 'getInterestPayment:debtAsset': -974, 'getDebtLoading:collateralAsset': -973, 'getDebtLoading:debtAsset': -972, 'getDebtAsset:debtAsset': -971}
([4], [-1], 0, None, -1)
[i]Type for TMP_91

Name: TMP_91 Function: getRewardShare
Num: 4
Den: -1
Address: -1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
ROUTER_9(address) := ϕ(['ROUTER_28', 'ROUTER_13', 'ROUTER_30', 'ROUTER_8', 'ROUTER_10', 'ROUTER_1', 'ROUTER_16', 'ROUTER_4', 'ROUTER_7', 'ROUTER_20', 'ROUTER_25'])
Phi
[i]Type for ROUTER

Name: ROUTER Function: getRewardShare
Num: -1
Den: -1
Address: 5
Norm: u
LF: ROUTER
Value: u
Fields: 
Finance Type: undef
XXXX
POOLS_31(address) := ϕ(['POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_35', 'POOLS_30', 'POOLS_32', 'POOLS_1', 'POOLS_9', 'POOLS_26', 'POOLS_11', 'POOLS_21', 'POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_47'])
Phi
[i]Type for POOLS

Name: POOLS Function: getRewardShare
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_92(uint256) = INTERNAL_CALL, Utils.calcShare(uint256,uint256,uint256)(_baseAmount_1,TMP_89,TMP_91)
[[-1], [-1], 0, None, [], -1, -1, 'u']

Name: part Function: None
Num: -1
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[4], [-1], 0, None, [], -1, -1, 'u']

Name: total Function: None
Num: 4
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[4], [-1], 0, None, [], -1, -1, 'u']

Name: amount Function: None
Num: 4
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: part Function: None
Num: -1
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: total Function: None
Num: 4
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount Function: None
Num: 4
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
part_1
part

Name: part_1 Function: calcShare
Num: -1
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
total_1
total

Name: total_1 Function: calcShare
Num: 4
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
amount_1
amount

Name: amount_1 Function: calcShare
Num: 4
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
part_1(uint256) := ϕ(['_units_1', '_baseAmount_1', 'bp_1', 'totalSupply_1', '_memberCollateral_1', 'debt_1', 'timeElapsed_1', '_duration_1'])
Phi
[i]Type for part

Name: part Function: calcShare
Num: -1
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
total_1(uint256) := ϕ(['_collateral_1', 'maxSupply_1', '_memberDebt_1', 'TMP_111', 'timeForFullProtection_1', 'rewardReductionFactor_1', 'TMP_81', 'TMP_89', 'TMP_116', '_year_2'])
Phi
[i]Type for total

Name: total Function: calcShare
Num: 4
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['TMP_146', 'TMP_113', 'TMP_118', '_interestPaid_1', '_coverage_1', '_memberCollateral_1', 'amount_1', 'total_1', 'TMP_83', 'TMP_91'])
Phi
[i]Type for amount

Name: amount Function: calcShare
Num: 4
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
part_1
part_1
part

Name: part Function: calcShare
Num: -1
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
total_1
total_1
total

Name: total Function: calcShare
Num: 4
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_169(bool) = part_1 > total_1
[i]Type for TMP_169

Name: TMP_169 Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
total_1
total_1
total

Name: total Function: calcShare
Num: 4
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
part_2
part_2
part
part

Name: part Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
part_2(uint256) := total_1(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for part

Name: part Function: calcShare
Num: 4
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
part_3
part
part

Name: part Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
part_3(uint256) := ϕ(['part_2', 'part_1'])
Phi
[i]Type for part

Name: part Function: calcShare
Num: 4
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
total_1
total_1
total

Name: total Function: calcShare
Num: 4
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_170(bool) = total_1 > 0
[i]Type for TMP_170

Name: TMP_170 Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
amount_1
amount_1
amount

Name: amount Function: calcShare
Num: 4
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
total_1
total_1
total

Name: total Function: calcShare
Num: 4
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
part_3
part_3
part

Name: part Function: calcShare
Num: 4
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
share_1
share_1
share
share

Name: share Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_171(uint256) = amount_1 (c)* part_3
[i]Type for TMP_171

Name: TMP_171 Function: calcShare
Num: 4, 4
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_172(uint256) = TMP_171 (c)/ total_1
[i]Type for TMP_172

Name: TMP_172 Function: calcShare
Num: 4
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
share_1(uint256) := TMP_172(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for share

Name: share Function: calcShare
Num: 4
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX

Name: part Function: None
Num: -1
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: total Function: None
Num: 4
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount Function: None
Num: 4
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
part_1
part

Name: part_1 Function: calcShare
Num: -1
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
total_1
total

Name: total_1 Function: calcShare
Num: 4
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
amount_1
amount

Name: amount_1 Function: calcShare
Num: 4
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
part_1(uint256) := ϕ(['_units_1', '_baseAmount_1', 'bp_1', 'totalSupply_1', '_memberCollateral_1', 'debt_1', 'timeElapsed_1', '_duration_1'])
Phi
[i]Type for part

Name: part Function: calcShare
Num: -1
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
total_1(uint256) := ϕ(['_collateral_1', 'maxSupply_1', '_memberDebt_1', 'TMP_111', 'timeForFullProtection_1', 'rewardReductionFactor_1', 'TMP_81', 'TMP_89', 'TMP_116', '_year_2'])
Phi
[i]Type for total

Name: total Function: calcShare
Num: 4
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['TMP_146', 'TMP_113', 'TMP_118', '_interestPaid_1', '_coverage_1', '_memberCollateral_1', 'amount_1', 'total_1', 'TMP_83', 'TMP_91'])
Phi
[i]Type for amount

Name: amount Function: calcShare
Num: 4
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
part_1
part_1
part

Name: part Function: calcShare
Num: -1
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
total_1
total_1
total

Name: total Function: calcShare
Num: 4
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_169(bool) = part_1 > total_1
[i]Type for TMP_169

Name: TMP_169 Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
total_1
total_1
total

Name: total Function: calcShare
Num: 4
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
part_2
part_2
part
part

Name: part Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
part_2(uint256) := total_1(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for part

Name: part Function: calcShare
Num: 4
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
part_3
part
part

Name: part Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
part_3(uint256) := ϕ(['part_2', 'part_1'])
Phi
[i]Type for part

Name: part Function: calcShare
Num: 4
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
total_1
total_1
total

Name: total Function: calcShare
Num: 4
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_170(bool) = total_1 > 0
[i]Type for TMP_170

Name: TMP_170 Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
amount_1
amount_1
amount

Name: amount Function: calcShare
Num: 4
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
total_1
total_1
total

Name: total Function: calcShare
Num: 4
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
part_3
part_3
part

Name: part Function: calcShare
Num: 4
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
share_1
share_1
share
share

Name: share Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_171(uint256) = amount_1 (c)* part_3
[i]Type for TMP_171

Name: TMP_171 Function: calcShare
Num: 4, 4
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_172(uint256) = TMP_171 (c)/ total_1
[i]Type for TMP_172

Name: TMP_172 Function: calcShare
Num: 4
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
share_1(uint256) := TMP_172(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for share

Name: share Function: calcShare
Num: 4
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i]Type for TMP_92

Name: TMP_92 Function: getRewardShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_share_scope_0_1(uint256) := TMP_92(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for _share_scope_0

Name: _share_scope_0 Function: getRewardShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
rewardReductionFactor_1
rewardReductionFactor_1
rewardReductionFactor
rewardReductionFactor

Name: rewardReductionFactor_1 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_share_1
_share_1
_share
_share

Name: _share Function: getRewardShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
rewardShare_2
rewardShare_2
rewardShare
rewardShare

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_85(uint256) = INTERNAL_CALL, Utils.getReducedShare(uint256,uint256)(_share_1,rewardReductionFactor_1)
[[], [], 'u', None, [], -1, 'u', 'u']

Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[], [], 'u', None, [], -1, 'u', 'u']

Name: rewardReductionFactor Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: rewardReductionFactor Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
amount_1
amount
amount

Name: amount_1 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
rewardReductionFactor_1
rewardReductionFactor
rewardReductionFactor

Name: rewardReductionFactor_1 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['_share_1', '_share_scope_0_1'])
Phi
[i]Type for amount

Name: amount Function: getReducedShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
rewardReductionFactor_1(uint256) := ϕ(['rewardReductionFactor_1'])
Phi
[i]Type for rewardReductionFactor

Name: rewardReductionFactor Function: getReducedShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
amount_1
amount_1
amount
amount

Name: amount_1 Function: getReducedShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
rewardReductionFactor_1
rewardReductionFactor_1
rewardReductionFactor
rewardReductionFactor

Name: rewardReductionFactor_1 Function: getReducedShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_94(uint256) = INTERNAL_CALL, Utils.calcShare(uint256,uint256,uint256)(1,rewardReductionFactor_1,amount_1)
[[-1], [-1], 0, None, [], -1, 'u', 'u']

Name: part Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[], [], 'u', None, [], -1, 'u', 'u']

Name: total Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[], [], 'u', None, [], -1, 'u', 'u']

Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: part Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: total Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
part_1
part

Name: part_1 Function: calcShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
total_1
total
total

Name: total_1 Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
amount_1
amount
amount

Name: amount_1 Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
part_1(uint256) := ϕ(['_units_1', '_baseAmount_1', 'bp_1', 'totalSupply_1', '_memberCollateral_1', 'debt_1', 'timeElapsed_1', '_duration_1'])
Phi
[i]Type for part

Name: part Function: calcShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
total_1(uint256) := ϕ(['_collateral_1', 'maxSupply_1', '_memberDebt_1', 'TMP_111', 'timeForFullProtection_1', 'rewardReductionFactor_1', 'TMP_81', 'TMP_89', 'TMP_116', '_year_2'])
Phi
[i]Type for total

Name: total Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['TMP_146', 'TMP_113', 'TMP_118', '_interestPaid_1', '_coverage_1', '_memberCollateral_1', 'amount_1', 'total_1', 'TMP_83', 'TMP_91'])
Phi
[i]Type for amount

Name: amount Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
part_1
part_1
part

Name: part Function: calcShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
total_1
total_1
total
total

Name: total_1 Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_169(bool) = part_1 > total_1
[i]Type for TMP_169

Name: TMP_169 Function: calcShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
total_1
total_1
total
total

Name: total_1 Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
part_2
part_2
part
part

Name: part Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
part_2(uint256) := total_1(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for part

Name: part Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
part_3
part
part

Name: part Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
part_3(uint256) := ϕ(['part_2', 'part_1'])
Phi
[i]Type for part

Name: part Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
total_1
total_1
total
total

Name: total_1 Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_170(bool) = total_1 > 0
[i]Type for TMP_170

Name: TMP_170 Function: calcShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
amount_1
amount_1
amount
amount

Name: amount_1 Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
total_1
total_1
total
total

Name: total_1 Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
part_3
part_3
part
part

Name: part Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
share_1
share_1
share
share

Name: share Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_171(uint256) = amount_1 (c)* part_3
[i]Type for TMP_171

Name: TMP_171 Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_172(uint256) = TMP_171 (c)/ total_1
[i]Type for TMP_172

Name: TMP_172 Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
share_1(uint256) := TMP_172(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for share

Name: share Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX

Name: part Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: total Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
part_1
part

Name: part_1 Function: calcShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
total_1
total
total

Name: total_1 Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
amount_1
amount
amount

Name: amount_1 Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
part_1(uint256) := ϕ(['_units_1', '_baseAmount_1', 'bp_1', 'totalSupply_1', '_memberCollateral_1', 'debt_1', 'timeElapsed_1', '_duration_1'])
Phi
[i]Type for part

Name: part Function: calcShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
total_1(uint256) := ϕ(['_collateral_1', 'maxSupply_1', '_memberDebt_1', 'TMP_111', 'timeForFullProtection_1', 'rewardReductionFactor_1', 'TMP_81', 'TMP_89', 'TMP_116', '_year_2'])
Phi
[i]Type for total

Name: total Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['TMP_146', 'TMP_113', 'TMP_118', '_interestPaid_1', '_coverage_1', '_memberCollateral_1', 'amount_1', 'total_1', 'TMP_83', 'TMP_91'])
Phi
[i]Type for amount

Name: amount Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
part_1
part_1
part

Name: part Function: calcShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
total_1
total_1
total
total

Name: total_1 Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_169(bool) = part_1 > total_1
[i]Type for TMP_169

Name: TMP_169 Function: calcShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
total_1
total_1
total
total

Name: total_1 Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
part_2
part_2
part
part

Name: part Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
part_2(uint256) := total_1(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for part

Name: part Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
part_3
part
part

Name: part Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
part_3(uint256) := ϕ(['part_2', 'part_1'])
Phi
[i]Type for part

Name: part Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
total_1
total_1
total
total

Name: total_1 Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_170(bool) = total_1 > 0
[i]Type for TMP_170

Name: TMP_170 Function: calcShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
amount_1
amount_1
amount
amount

Name: amount_1 Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
total_1
total_1
total
total

Name: total_1 Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
part_3
part_3
part
part

Name: part Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
share_1
share_1
share
share

Name: share Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_171(uint256) = amount_1 (c)* part_3
[i]Type for TMP_171

Name: TMP_171 Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_172(uint256) = TMP_171 (c)/ total_1
[i]Type for TMP_172

Name: TMP_172 Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
share_1(uint256) := TMP_172(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for share

Name: share Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i]Type for TMP_94

Name: TMP_94 Function: getReducedShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_94

Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: rewardReductionFactor Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
amount_1
amount
amount

Name: amount_1 Function: getReducedShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
rewardReductionFactor_1
rewardReductionFactor
rewardReductionFactor

Name: rewardReductionFactor_1 Function: getReducedShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['_share_1', '_share_scope_0_1'])
Phi
[i]Type for amount

Name: amount Function: getReducedShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
rewardReductionFactor_1(uint256) := ϕ(['rewardReductionFactor_1'])
Phi
[i]Type for rewardReductionFactor

Name: rewardReductionFactor Function: getReducedShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
amount_1
amount_1
amount
amount

Name: amount_1 Function: getReducedShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
rewardReductionFactor_1
rewardReductionFactor_1
rewardReductionFactor
rewardReductionFactor

Name: rewardReductionFactor_1 Function: getReducedShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_94(uint256) = INTERNAL_CALL, Utils.calcShare(uint256,uint256,uint256)(1,rewardReductionFactor_1,amount_1)
[[-1], [-1], 0, None, [], -1, 'u', 'u']

Name: part Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[], [], 'u', None, [], -1, 'u', 'u']

Name: total Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[], [], 'u', None, [], -1, 'u', 'u']

Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: part Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: total Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
part_1
part

Name: part_1 Function: calcShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
total_1
total
total

Name: total_1 Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
amount_1
amount
amount

Name: amount_1 Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
part_1(uint256) := ϕ(['_units_1', '_baseAmount_1', 'bp_1', 'totalSupply_1', '_memberCollateral_1', 'debt_1', 'timeElapsed_1', '_duration_1'])
Phi
[i]Type for part

Name: part Function: calcShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
total_1(uint256) := ϕ(['_collateral_1', 'maxSupply_1', '_memberDebt_1', 'TMP_111', 'timeForFullProtection_1', 'rewardReductionFactor_1', 'TMP_81', 'TMP_89', 'TMP_116', '_year_2'])
Phi
[i]Type for total

Name: total Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['TMP_146', 'TMP_113', 'TMP_118', '_interestPaid_1', '_coverage_1', '_memberCollateral_1', 'amount_1', 'total_1', 'TMP_83', 'TMP_91'])
Phi
[i]Type for amount

Name: amount Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
part_1
part_1
part

Name: part Function: calcShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
total_1
total_1
total
total

Name: total_1 Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_169(bool) = part_1 > total_1
[i]Type for TMP_169

Name: TMP_169 Function: calcShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
total_1
total_1
total
total

Name: total_1 Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
part_2
part_2
part
part

Name: part Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
part_2(uint256) := total_1(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for part

Name: part Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
part_3
part
part

Name: part Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
part_3(uint256) := ϕ(['part_2', 'part_1'])
Phi
[i]Type for part

Name: part Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
total_1
total_1
total
total

Name: total_1 Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_170(bool) = total_1 > 0
[i]Type for TMP_170

Name: TMP_170 Function: calcShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
amount_1
amount_1
amount
amount

Name: amount_1 Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
total_1
total_1
total
total

Name: total_1 Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
part_3
part_3
part
part

Name: part Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
share_1
share_1
share
share

Name: share Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_171(uint256) = amount_1 (c)* part_3
[i]Type for TMP_171

Name: TMP_171 Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_172(uint256) = TMP_171 (c)/ total_1
[i]Type for TMP_172

Name: TMP_172 Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
share_1(uint256) := TMP_172(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for share

Name: share Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX

Name: part Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: total Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
part_1
part

Name: part_1 Function: calcShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
total_1
total
total

Name: total_1 Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
amount_1
amount
amount

Name: amount_1 Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
part_1(uint256) := ϕ(['_units_1', '_baseAmount_1', 'bp_1', 'totalSupply_1', '_memberCollateral_1', 'debt_1', 'timeElapsed_1', '_duration_1'])
Phi
[i]Type for part

Name: part Function: calcShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
total_1(uint256) := ϕ(['_collateral_1', 'maxSupply_1', '_memberDebt_1', 'TMP_111', 'timeForFullProtection_1', 'rewardReductionFactor_1', 'TMP_81', 'TMP_89', 'TMP_116', '_year_2'])
Phi
[i]Type for total

Name: total Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['TMP_146', 'TMP_113', 'TMP_118', '_interestPaid_1', '_coverage_1', '_memberCollateral_1', 'amount_1', 'total_1', 'TMP_83', 'TMP_91'])
Phi
[i]Type for amount

Name: amount Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
part_1
part_1
part

Name: part Function: calcShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
total_1
total_1
total
total

Name: total_1 Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_169(bool) = part_1 > total_1
[i]Type for TMP_169

Name: TMP_169 Function: calcShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
total_1
total_1
total
total

Name: total_1 Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
part_2
part_2
part
part

Name: part Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
part_2(uint256) := total_1(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for part

Name: part Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
part_3
part
part

Name: part Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
part_3(uint256) := ϕ(['part_2', 'part_1'])
Phi
[i]Type for part

Name: part Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
total_1
total_1
total
total

Name: total_1 Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_170(bool) = total_1 > 0
[i]Type for TMP_170

Name: TMP_170 Function: calcShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
amount_1
amount_1
amount
amount

Name: amount_1 Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
total_1
total_1
total
total

Name: total_1 Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
part_3
part_3
part
part

Name: part Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
share_1
share_1
share
share

Name: share Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_171(uint256) = amount_1 (c)* part_3
[i]Type for TMP_171

Name: TMP_171 Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_172(uint256) = TMP_171 (c)/ total_1
[i]Type for TMP_172

Name: TMP_172 Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
share_1(uint256) := TMP_172(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for share

Name: share Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i]Type for TMP_94

Name: TMP_94 Function: getReducedShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_94
[i]Type for TMP_85

Name: TMP_85 Function: getRewardShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
rewardShare_2(uint256) := TMP_85(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for rewardShare

Name: rewardShare Function: getRewardShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
rewardReductionFactor_1
rewardReductionFactor_1
rewardReductionFactor
rewardReductionFactor

Name: rewardReductionFactor_1 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_share_scope_0_1
_share_scope_0_1
_share_scope_0
_share_scope_0

Name: _share_scope_0 Function: getRewardShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
rewardShare_1
rewardShare_1
rewardShare
rewardShare

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_93(uint256) = INTERNAL_CALL, Utils.getReducedShare(uint256,uint256)(_share_scope_0_1,rewardReductionFactor_1)
[i]Type for TMP_93

Name: TMP_93 Function: getRewardShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
rewardShare_1(uint256) := TMP_93(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for rewardShare

Name: rewardShare Function: getRewardShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX


VADER_4(address) := ϕ(['VADER_0', 'VADER_6', 'VADER_1'])
ROUTER_2(address) := ϕ(['ROUTER_28', 'ROUTER_13', 'ROUTER_30', 'ROUTER_10', 'ROUTER_1', 'ROUTER_16', 'ROUTER_4', 'ROUTER_7', 'ROUTER_20', 'ROUTER_0', 'ROUTER_25'])
POOLS_24(address) := ϕ(['POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_35', 'POOLS_32', 'POOLS_9', 'POOLS_1', 'POOLS_26', 'POOLS_11', 'POOLS_21', 'POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_0', 'POOLS_29', 'POOLS_47'])
TMP_71 = CONVERT VADER_4 to iVADER
TMP_72(bool) = HIGH_LEVEL_CALL, dest:TMP_71(iVADER), function:emitting, arguments:[]  
VADER_5(address) := ϕ(['VADER_6', 'VADER_4', 'VADER_1'])
ROUTER_3(address) := ϕ(['ROUTER_28', 'ROUTER_13', 'ROUTER_30', 'ROUTER_10', 'ROUTER_1', 'ROUTER_16', 'ROUTER_4', 'ROUTER_2', 'ROUTER_7', 'ROUTER_20', 'ROUTER_25'])
POOLS_25(address) := ϕ(['POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_24', 'POOLS_15', 'POOLS_35', 'POOLS_32', 'POOLS_1', 'POOLS_9', 'POOLS_26', 'POOLS_11', 'POOLS_21', 'POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_47'])
TMP_73 = CONVERT ROUTER_3 to iROUTER
TMP_74(bool) = HIGH_LEVEL_CALL, dest:TMP_73(iROUTER), function:isCurated, arguments:['token_1']  
VADER_6(address) := ϕ(['VADER_5', 'VADER_6', 'VADER_1'])
ROUTER_4(address) := ϕ(['ROUTER_28', 'ROUTER_13', 'ROUTER_30', 'ROUTER_10', 'ROUTER_1', 'ROUTER_16', 'ROUTER_4', 'ROUTER_3', 'ROUTER_7', 'ROUTER_20', 'ROUTER_25'])
POOLS_26(address) := ϕ(['POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_35', 'POOLS_32', 'POOLS_1', 'POOLS_9', 'POOLS_26', 'POOLS_11', 'POOLS_21', 'POOLS_8', 'POOLS_45', 'POOLS_25', 'POOLS_19', 'POOLS_29', 'POOLS_47'])
TMP_75(bool) = TMP_72 && TMP_74
CONDITION TMP_75
TMP_76 = CONVERT POOLS_26 to iPOOLS
TMP_77(uint256) = HIGH_LEVEL_CALL, dest:TMP_76(iPOOLS), function:getBaseAmount, arguments:['token_1']  
ROUTER_5(address) := ϕ(['ROUTER_28', 'ROUTER_13', 'ROUTER_30', 'ROUTER_10', 'ROUTER_1', 'ROUTER_16', 'ROUTER_4', 'ROUTER_7', 'ROUTER_20', 'ROUTER_25'])
POOLS_27(address) := ϕ(['POOLS_45', 'POOLS_26', 'POOLS_1', 'POOLS_54', 'POOLS_10', 'POOLS_19', 'POOLS_29', 'POOLS_11', 'POOLS_21', 'POOLS_47', 'POOLS_12', 'POOLS_8', 'POOLS_17', 'POOLS_23', 'POOLS_35', 'POOLS_15', 'POOLS_32', 'POOLS_9'])
_baseAmount_1(uint256) := TMP_77(uint256)
TMP_78 = CONVERT POOLS_27 to iPOOLS
TMP_79(bool) = HIGH_LEVEL_CALL, dest:TMP_78(iPOOLS), function:isAsset, arguments:['token_1']  
ROUTER_6(address) := ϕ(['ROUTER_28', 'ROUTER_5', 'ROUTER_13', 'ROUTER_30', 'ROUTER_10', 'ROUTER_1', 'ROUTER_16', 'ROUTER_4', 'ROUTER_7', 'ROUTER_20', 'ROUTER_25'])
POOLS_28(address) := ϕ(['POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_27', 'POOLS_35', 'POOLS_32', 'POOLS_1', 'POOLS_9', 'POOLS_26', 'POOLS_11', 'POOLS_21', 'POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_47'])
CONDITION TMP_79
TMP_86 = CONVERT POOLS_28 to iPOOLS
TMP_87(bool) = HIGH_LEVEL_CALL, dest:TMP_86(iPOOLS), function:isAnchor, arguments:['token_1']  
ROUTER_7(address) := ϕ(['ROUTER_28', 'ROUTER_6', 'ROUTER_13', 'ROUTER_30', 'ROUTER_10', 'ROUTER_1', 'ROUTER_16', 'ROUTER_4', 'ROUTER_7', 'ROUTER_20', 'ROUTER_25'])
POOLS_29(address) := ϕ(['POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_28', 'POOLS_15', 'POOLS_35', 'POOLS_32', 'POOLS_1', 'POOLS_9', 'POOLS_26', 'POOLS_11', 'POOLS_21', 'POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_47'])
CONDITION TMP_87
TMP_80 = CONVERT POOLS_28 to iPOOLS
TMP_81(uint256) = HIGH_LEVEL_CALL, dest:TMP_80(iPOOLS), function:pooledUSDV, arguments:[]  
ROUTER_11(address) := ϕ(['ROUTER_28', 'ROUTER_13', 'ROUTER_30', 'ROUTER_10', 'ROUTER_1', 'ROUTER_16', 'ROUTER_4', 'ROUTER_7', 'ROUTER_20', 'ROUTER_25'])
POOLS_33(address) := ϕ(['POOLS_45', 'POOLS_26', 'POOLS_1', 'POOLS_54', 'POOLS_10', 'POOLS_19', 'POOLS_29', 'POOLS_11', 'POOLS_21', 'POOLS_47', 'POOLS_12', 'POOLS_8', 'POOLS_17', 'POOLS_23', 'POOLS_35', 'POOLS_15', 'POOLS_32', 'POOLS_9'])
TMP_82 = CONVERT ROUTER_11 to iROUTER
TMP_83(uint256) = HIGH_LEVEL_CALL, dest:TMP_82(iROUTER), function:reserveUSDV, arguments:[]  
ROUTER_12(address) := ϕ(['ROUTER_28', 'ROUTER_11', 'ROUTER_13', 'ROUTER_30', 'ROUTER_10', 'ROUTER_1', 'ROUTER_16', 'ROUTER_4', 'ROUTER_7', 'ROUTER_20', 'ROUTER_25'])
POOLS_34(address) := ϕ(['POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_33', 'POOLS_35', 'POOLS_32', 'POOLS_1', 'POOLS_9', 'POOLS_26', 'POOLS_11', 'POOLS_21', 'POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_47'])
TMP_84(uint256) = INTERNAL_CALL, Utils.calcShare(uint256,uint256,uint256)(_baseAmount_1,TMP_81,TMP_83)
_share_1(uint256) := TMP_84(uint256)
TMP_88 = CONVERT POOLS_29 to iPOOLS
TMP_89(uint256) = HIGH_LEVEL_CALL, dest:TMP_88(iPOOLS), function:pooledVADER, arguments:[]  
ROUTER_8(address) := ϕ(['ROUTER_28', 'ROUTER_13', 'ROUTER_30', 'ROUTER_10', 'ROUTER_1', 'ROUTER_16', 'ROUTER_4', 'ROUTER_7', 'ROUTER_20', 'ROUTER_25'])
POOLS_30(address) := ϕ(['POOLS_45', 'POOLS_26', 'POOLS_1', 'POOLS_54', 'POOLS_10', 'POOLS_19', 'POOLS_29', 'POOLS_11', 'POOLS_21', 'POOLS_47', 'POOLS_12', 'POOLS_8', 'POOLS_17', 'POOLS_23', 'POOLS_35', 'POOLS_15', 'POOLS_32', 'POOLS_9'])
TMP_90 = CONVERT ROUTER_8 to iROUTER
TMP_91(uint256) = HIGH_LEVEL_CALL, dest:TMP_90(iROUTER), function:reserveVADER, arguments:[]  
ROUTER_9(address) := ϕ(['ROUTER_28', 'ROUTER_13', 'ROUTER_30', 'ROUTER_8', 'ROUTER_10', 'ROUTER_1', 'ROUTER_16', 'ROUTER_4', 'ROUTER_7', 'ROUTER_20', 'ROUTER_25'])
POOLS_31(address) := ϕ(['POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_35', 'POOLS_30', 'POOLS_32', 'POOLS_1', 'POOLS_9', 'POOLS_26', 'POOLS_11', 'POOLS_21', 'POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_47'])
TMP_92(uint256) = INTERNAL_CALL, Utils.calcShare(uint256,uint256,uint256)(_baseAmount_1,TMP_89,TMP_91)
_share_scope_0_1(uint256) := TMP_92(uint256)
TMP_85(uint256) = INTERNAL_CALL, Utils.getReducedShare(uint256,uint256)(_share_1,rewardReductionFactor_1)
rewardShare_2(uint256) := TMP_85(uint256)
TMP_93(uint256) = INTERNAL_CALL, Utils.getReducedShare(uint256,uint256)(_share_scope_0_1,rewardReductionFactor_1)
rewardShare_1(uint256) := TMP_93(uint256)


Propogating parameters and globals to SSA variables...
End popogation
VADER_4
VADER

Name: VADER Function: getRewardShare
Num: -1
Den: -1
Address: 4
Norm: u
LF: VADER
Value: u
Fields: 
Finance Type: undef
ROUTER_2
ROUTER

Name: ROUTER Function: getRewardShare
Num: -1
Den: -1
Address: 5
Norm: u
LF: ROUTER
Value: u
Fields: 
Finance Type: undef
POOLS_24
POOLS

Name: POOLS Function: getRewardShare
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
VADER_4(address) := ϕ(['VADER_0', 'VADER_6', 'VADER_1'])
Phi
[i]Type for VADER

Name: VADER Function: getRewardShare
Num: -1
Den: -1
Address: 4
Norm: u
LF: VADER
Value: u
Fields: 
Finance Type: undef
XXXX
ROUTER_2(address) := ϕ(['ROUTER_28', 'ROUTER_13', 'ROUTER_30', 'ROUTER_10', 'ROUTER_1', 'ROUTER_16', 'ROUTER_4', 'ROUTER_7', 'ROUTER_20', 'ROUTER_0', 'ROUTER_25'])
Phi
[i]Type for ROUTER

Name: ROUTER Function: getRewardShare
Num: -1
Den: -1
Address: 5
Norm: u
LF: ROUTER
Value: u
Fields: 
Finance Type: undef
XXXX
POOLS_24(address) := ϕ(['POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_35', 'POOLS_32', 'POOLS_9', 'POOLS_1', 'POOLS_26', 'POOLS_11', 'POOLS_21', 'POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_0', 'POOLS_29', 'POOLS_47'])
Phi
[i]Type for POOLS

Name: POOLS Function: getRewardShare
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
token_1
token_1
token

Name: token_1 Function: None
Num: 
Den: 
Address: -988
Norm: u
LF: token
Value: u
Fields: 
Finance Type: undef
ROUTER_3
ROUTER_3
ROUTER

Name: ROUTER Function: getRewardShare
Num: -1
Den: -1
Address: 5
Norm: u
LF: ROUTER
Value: u
Fields: 
Finance Type: undef
VADER_4
VADER_4
VADER

Name: VADER Function: getRewardShare
Num: -1
Den: -1
Address: 4
Norm: u
LF: VADER
Value: u
Fields: 
Finance Type: undef
End popogation
VADER_5
VADER

Name: VADER Function: getRewardShare
Num: -1
Den: -1
Address: 4
Norm: u
LF: VADER
Value: u
Fields: 
Finance Type: undef
ROUTER_3
ROUTER

Name: ROUTER Function: getRewardShare
Num: -1
Den: -1
Address: 5
Norm: u
LF: ROUTER
Value: u
Fields: 
Finance Type: undef
POOLS_25
POOLS

Name: POOLS Function: getRewardShare
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
VADER_6
VADER

Name: VADER Function: getRewardShare
Num: -1
Den: -1
Address: 4
Norm: u
LF: VADER
Value: u
Fields: 
Finance Type: undef
ROUTER_4
ROUTER

Name: ROUTER Function: getRewardShare
Num: -1
Den: -1
Address: 5
Norm: u
LF: ROUTER
Value: u
Fields: 
Finance Type: undef
POOLS_26
POOLS

Name: POOLS Function: getRewardShare
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_71 = CONVERT VADER_4 to iVADER
Converting VADER_4

Name: VADER Function: getRewardShare
Num: -1
Den: -1
Address: 4
Norm: u
LF: VADER
Value: u
Fields: 
Finance Type: undef
VADER
[i]Type for TMP_71

Name: TMP_71 Function: getRewardShare
Num: -1
Den: -1
Address: 4
Norm: u
LF: VADER
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_72(bool) = HIGH_LEVEL_CALL, dest:TMP_71(iVADER), function:emitting, arguments:[]  
High Call: emitting
Running querryfc
[i]Type for TMP_72

Name: TMP_72 Function: getRewardShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
VADER_5(address) := ϕ(['VADER_6', 'VADER_4', 'VADER_1'])
Phi
[i]Type for VADER

Name: VADER Function: getRewardShare
Num: -1
Den: -1
Address: 4
Norm: u
LF: VADER
Value: u
Fields: 
Finance Type: undef
XXXX
ROUTER_3(address) := ϕ(['ROUTER_28', 'ROUTER_13', 'ROUTER_30', 'ROUTER_10', 'ROUTER_1', 'ROUTER_16', 'ROUTER_4', 'ROUTER_2', 'ROUTER_7', 'ROUTER_20', 'ROUTER_25'])
Phi
[i]Type for ROUTER

Name: ROUTER Function: getRewardShare
Num: -1
Den: -1
Address: 5
Norm: u
LF: ROUTER
Value: u
Fields: 
Finance Type: undef
XXXX
POOLS_25(address) := ϕ(['POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_24', 'POOLS_15', 'POOLS_35', 'POOLS_32', 'POOLS_1', 'POOLS_9', 'POOLS_26', 'POOLS_11', 'POOLS_21', 'POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_47'])
Phi
[i]Type for POOLS

Name: POOLS Function: getRewardShare
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_73 = CONVERT ROUTER_3 to iROUTER
Converting ROUTER_3

Name: ROUTER Function: getRewardShare
Num: -1
Den: -1
Address: 5
Norm: u
LF: ROUTER
Value: u
Fields: 
Finance Type: undef
ROUTER
[i]Type for TMP_73

Name: TMP_73 Function: getRewardShare
Num: -1
Den: -1
Address: 5
Norm: u
LF: ROUTER
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_74(bool) = HIGH_LEVEL_CALL, dest:TMP_73(iROUTER), function:isCurated, arguments:['token_1']  
High Call: isCurated
Running querryfc
[i]Type for TMP_74

Name: TMP_74 Function: getRewardShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
VADER_6(address) := ϕ(['VADER_5', 'VADER_6', 'VADER_1'])
Phi
[i]Type for VADER

Name: VADER Function: getRewardShare
Num: -1
Den: -1
Address: 4
Norm: u
LF: VADER
Value: u
Fields: 
Finance Type: undef
XXXX
ROUTER_4(address) := ϕ(['ROUTER_28', 'ROUTER_13', 'ROUTER_30', 'ROUTER_10', 'ROUTER_1', 'ROUTER_16', 'ROUTER_4', 'ROUTER_3', 'ROUTER_7', 'ROUTER_20', 'ROUTER_25'])
Phi
[i]Type for ROUTER

Name: ROUTER Function: getRewardShare
Num: -1
Den: -1
Address: 5
Norm: u
LF: ROUTER
Value: u
Fields: 
Finance Type: undef
XXXX
POOLS_26(address) := ϕ(['POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_35', 'POOLS_32', 'POOLS_1', 'POOLS_9', 'POOLS_26', 'POOLS_11', 'POOLS_21', 'POOLS_8', 'POOLS_45', 'POOLS_25', 'POOLS_19', 'POOLS_29', 'POOLS_47'])
Phi
[i]Type for POOLS

Name: POOLS Function: getRewardShare
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_75(bool) = TMP_72 && TMP_74
[i]Type for TMP_75

Name: TMP_75 Function: getRewardShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
token_1
token_1
token

Name: token_1 Function: None
Num: 
Den: 
Address: -988
Norm: u
LF: token
Value: u
Fields: 
Finance Type: undef
POOLS_26
POOLS_26
POOLS

Name: POOLS Function: getRewardShare
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
_baseAmount_1
_baseAmount_1
_baseAmount
_baseAmount

Name: _baseAmount Function: getRewardShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
ROUTER_5
ROUTER

Name: ROUTER Function: getRewardShare
Num: -1
Den: -1
Address: 5
Norm: u
LF: ROUTER
Value: u
Fields: 
Finance Type: undef
POOLS_27
POOLS

Name: POOLS Function: getRewardShare
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_76 = CONVERT POOLS_26 to iPOOLS
Converting POOLS_26

Name: POOLS Function: getRewardShare
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
POOLS
[i]Type for TMP_76

Name: TMP_76 Function: getRewardShare
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_77(uint256) = HIGH_LEVEL_CALL, dest:TMP_76(iPOOLS), function:getBaseAmount, arguments:['token_1']  
High Call: getBaseAmount
Running querryfc
Written func info: POOLS, getBaseAmount
Retvar: ('c', ['-1'], ['-1'], 0, 0, None)
([-1], [-1], 0, None, -1)
[i]Type for TMP_77

Name: TMP_77 Function: getRewardShare
Num: -1
Den: -1
Address: -1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
ROUTER_5(address) := ϕ(['ROUTER_28', 'ROUTER_13', 'ROUTER_30', 'ROUTER_10', 'ROUTER_1', 'ROUTER_16', 'ROUTER_4', 'ROUTER_7', 'ROUTER_20', 'ROUTER_25'])
Phi
[i]Type for ROUTER

Name: ROUTER Function: getRewardShare
Num: -1
Den: -1
Address: 5
Norm: u
LF: ROUTER
Value: u
Fields: 
Finance Type: undef
XXXX
POOLS_27(address) := ϕ(['POOLS_45', 'POOLS_26', 'POOLS_1', 'POOLS_54', 'POOLS_10', 'POOLS_19', 'POOLS_29', 'POOLS_11', 'POOLS_21', 'POOLS_47', 'POOLS_12', 'POOLS_8', 'POOLS_17', 'POOLS_23', 'POOLS_35', 'POOLS_15', 'POOLS_32', 'POOLS_9'])
Phi
[i]Type for POOLS

Name: POOLS Function: getRewardShare
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
XXXX
_baseAmount_1(uint256) := TMP_77(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for _baseAmount

Name: _baseAmount Function: getRewardShare
Num: -1
Den: -1
Address: -1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
token_1
token_1
token

Name: token_1 Function: None
Num: 
Den: 
Address: -988
Norm: u
LF: token
Value: u
Fields: 
Finance Type: undef
POOLS_27
POOLS_27
POOLS

Name: POOLS Function: getRewardShare
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
End popogation
ROUTER_6
ROUTER

Name: ROUTER Function: getRewardShare
Num: -1
Den: -1
Address: 5
Norm: u
LF: ROUTER
Value: u
Fields: 
Finance Type: undef
POOLS_28
POOLS

Name: POOLS Function: getRewardShare
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_78 = CONVERT POOLS_27 to iPOOLS
Converting POOLS_27

Name: POOLS Function: getRewardShare
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
POOLS
[i]Type for TMP_78

Name: TMP_78 Function: getRewardShare
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_79(bool) = HIGH_LEVEL_CALL, dest:TMP_78(iPOOLS), function:isAsset, arguments:['token_1']  
High Call: isAsset
Running querryfc
[i]Type for TMP_79

Name: TMP_79 Function: getRewardShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
ROUTER_6(address) := ϕ(['ROUTER_28', 'ROUTER_5', 'ROUTER_13', 'ROUTER_30', 'ROUTER_10', 'ROUTER_1', 'ROUTER_16', 'ROUTER_4', 'ROUTER_7', 'ROUTER_20', 'ROUTER_25'])
Phi
[i]Type for ROUTER

Name: ROUTER Function: getRewardShare
Num: -1
Den: -1
Address: 5
Norm: u
LF: ROUTER
Value: u
Fields: 
Finance Type: undef
XXXX
POOLS_28(address) := ϕ(['POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_27', 'POOLS_35', 'POOLS_32', 'POOLS_1', 'POOLS_9', 'POOLS_26', 'POOLS_11', 'POOLS_21', 'POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_47'])
Phi
[i]Type for POOLS

Name: POOLS Function: getRewardShare
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
token_1
token_1
token

Name: token_1 Function: None
Num: 
Den: 
Address: -988
Norm: u
LF: token
Value: u
Fields: 
Finance Type: undef
POOLS_28
POOLS_28
POOLS

Name: POOLS Function: getRewardShare
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
End popogation
ROUTER_7
ROUTER

Name: ROUTER Function: getRewardShare
Num: -1
Den: -1
Address: 5
Norm: u
LF: ROUTER
Value: u
Fields: 
Finance Type: undef
POOLS_29
POOLS

Name: POOLS Function: getRewardShare
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_86 = CONVERT POOLS_28 to iPOOLS
Converting POOLS_28

Name: POOLS Function: getRewardShare
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
POOLS
[i]Type for TMP_86

Name: TMP_86 Function: getRewardShare
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_87(bool) = HIGH_LEVEL_CALL, dest:TMP_86(iPOOLS), function:isAnchor, arguments:['token_1']  
High Call: isAnchor
Running querryfc
[i]Type for TMP_87

Name: TMP_87 Function: getRewardShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
ROUTER_7(address) := ϕ(['ROUTER_28', 'ROUTER_6', 'ROUTER_13', 'ROUTER_30', 'ROUTER_10', 'ROUTER_1', 'ROUTER_16', 'ROUTER_4', 'ROUTER_7', 'ROUTER_20', 'ROUTER_25'])
Phi
[i]Type for ROUTER

Name: ROUTER Function: getRewardShare
Num: -1
Den: -1
Address: 5
Norm: u
LF: ROUTER
Value: u
Fields: 
Finance Type: undef
XXXX
POOLS_29(address) := ϕ(['POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_28', 'POOLS_15', 'POOLS_35', 'POOLS_32', 'POOLS_1', 'POOLS_9', 'POOLS_26', 'POOLS_11', 'POOLS_21', 'POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_47'])
Phi
[i]Type for POOLS

Name: POOLS Function: getRewardShare
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
_baseAmount_1
_baseAmount_1
_baseAmount

Name: _baseAmount Function: getRewardShare
Num: -1
Den: -1
Address: -1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
ROUTER_11
ROUTER_11
ROUTER

Name: ROUTER Function: getRewardShare
Num: -1
Den: -1
Address: 5
Norm: u
LF: ROUTER
Value: u
Fields: 
Finance Type: undef
POOLS_28
POOLS_28
POOLS

Name: POOLS Function: getRewardShare
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
_share_1
_share_1
_share
_share

Name: _share Function: getRewardShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
ROUTER_11
ROUTER

Name: ROUTER Function: getRewardShare
Num: -1
Den: -1
Address: 5
Norm: u
LF: ROUTER
Value: u
Fields: 
Finance Type: undef
POOLS_33
POOLS

Name: POOLS Function: getRewardShare
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
ROUTER_12
ROUTER

Name: ROUTER Function: getRewardShare
Num: -1
Den: -1
Address: 5
Norm: u
LF: ROUTER
Value: u
Fields: 
Finance Type: undef
POOLS_34
POOLS

Name: POOLS Function: getRewardShare
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_80 = CONVERT POOLS_28 to iPOOLS
Converting POOLS_28

Name: POOLS Function: getRewardShare
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
POOLS
[i]Type for TMP_80

Name: TMP_80 Function: getRewardShare
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_81(uint256) = HIGH_LEVEL_CALL, dest:TMP_80(iPOOLS), function:pooledUSDV, arguments:[]  
High Call: pooledUSDV
Running querryfc
Written func info: POOLS, pooledUSDV
Retvar: ('c', ['global:USDV'], ['-1'], 0, 0, None)
{'global:FACTORY': 1, 'global:POOLS': 2, 'global:USDV': 3, 'global:VADER': 4, 'global:ROUTER': 5, 'assetChecks:collateralAsset': -999, 'assetChecks:debtAsset': -998, 'isBase:token': -997, 'isPool:token': -996, 'calcValueInBase:token': -995, 'calcValueInToken:token': -994, 'calcValueOfTokenInToken:token1': -993, 'calcValueOfTokenInToken:token2': -992, 'calcSwapValueInBase:token': -991, 'calcSwapValueInToken:token': -990, 'requirePriceBounds:token': -989, 'getRewardShare:token': -988, 'getProtection:member': -987, 'getProtection:token': -986, 'getCoverage:member': -985, 'getCoverage:token': -984, 'getCollateralValueInBase:member': -983, 'getCollateralValueInBase:collateralAsset': -982, 'getCollateralValueInBase:debtAsset': -981, 'getDebtValueInCollateral:member': -980, 'getDebtValueInCollateral:collateralAsset': -979, 'getDebtValueInCollateral:debtAsset': -978, 'getInterestOwed:collateralAsset': -977, 'getInterestOwed:debtAsset': -976, 'getInterestPayment:collateralAsset': -975, 'getInterestPayment:debtAsset': -974, 'getDebtLoading:collateralAsset': -973, 'getDebtLoading:debtAsset': -972, 'getDebtAsset:debtAsset': -971}
([3], [-1], 0, None, -1)
[i]Type for TMP_81

Name: TMP_81 Function: getRewardShare
Num: 3
Den: -1
Address: -1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
ROUTER_11(address) := ϕ(['ROUTER_28', 'ROUTER_13', 'ROUTER_30', 'ROUTER_10', 'ROUTER_1', 'ROUTER_16', 'ROUTER_4', 'ROUTER_7', 'ROUTER_20', 'ROUTER_25'])
Phi
[i]Type for ROUTER

Name: ROUTER Function: getRewardShare
Num: -1
Den: -1
Address: 5
Norm: u
LF: ROUTER
Value: u
Fields: 
Finance Type: undef
XXXX
POOLS_33(address) := ϕ(['POOLS_45', 'POOLS_26', 'POOLS_1', 'POOLS_54', 'POOLS_10', 'POOLS_19', 'POOLS_29', 'POOLS_11', 'POOLS_21', 'POOLS_47', 'POOLS_12', 'POOLS_8', 'POOLS_17', 'POOLS_23', 'POOLS_35', 'POOLS_15', 'POOLS_32', 'POOLS_9'])
Phi
[i]Type for POOLS

Name: POOLS Function: getRewardShare
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_82 = CONVERT ROUTER_11 to iROUTER
Converting ROUTER_11

Name: ROUTER Function: getRewardShare
Num: -1
Den: -1
Address: 5
Norm: u
LF: ROUTER
Value: u
Fields: 
Finance Type: undef
ROUTER
[i]Type for TMP_82

Name: TMP_82 Function: getRewardShare
Num: -1
Den: -1
Address: 5
Norm: u
LF: ROUTER
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_83(uint256) = HIGH_LEVEL_CALL, dest:TMP_82(iROUTER), function:reserveUSDV, arguments:[]  
High Call: reserveUSDV
Running querryfc
Written func info: ROUTER, reserveUSDV
Retvar: ('c', ['global:USDV'], ['-1'], 0, 0, None)
{'global:FACTORY': 1, 'global:POOLS': 2, 'global:USDV': 3, 'global:VADER': 4, 'global:ROUTER': 5, 'assetChecks:collateralAsset': -999, 'assetChecks:debtAsset': -998, 'isBase:token': -997, 'isPool:token': -996, 'calcValueInBase:token': -995, 'calcValueInToken:token': -994, 'calcValueOfTokenInToken:token1': -993, 'calcValueOfTokenInToken:token2': -992, 'calcSwapValueInBase:token': -991, 'calcSwapValueInToken:token': -990, 'requirePriceBounds:token': -989, 'getRewardShare:token': -988, 'getProtection:member': -987, 'getProtection:token': -986, 'getCoverage:member': -985, 'getCoverage:token': -984, 'getCollateralValueInBase:member': -983, 'getCollateralValueInBase:collateralAsset': -982, 'getCollateralValueInBase:debtAsset': -981, 'getDebtValueInCollateral:member': -980, 'getDebtValueInCollateral:collateralAsset': -979, 'getDebtValueInCollateral:debtAsset': -978, 'getInterestOwed:collateralAsset': -977, 'getInterestOwed:debtAsset': -976, 'getInterestPayment:collateralAsset': -975, 'getInterestPayment:debtAsset': -974, 'getDebtLoading:collateralAsset': -973, 'getDebtLoading:debtAsset': -972, 'getDebtAsset:debtAsset': -971}
([3], [-1], 0, None, -1)
[i]Type for TMP_83

Name: TMP_83 Function: getRewardShare
Num: 3
Den: -1
Address: -1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
ROUTER_12(address) := ϕ(['ROUTER_28', 'ROUTER_11', 'ROUTER_13', 'ROUTER_30', 'ROUTER_10', 'ROUTER_1', 'ROUTER_16', 'ROUTER_4', 'ROUTER_7', 'ROUTER_20', 'ROUTER_25'])
Phi
[i]Type for ROUTER

Name: ROUTER Function: getRewardShare
Num: -1
Den: -1
Address: 5
Norm: u
LF: ROUTER
Value: u
Fields: 
Finance Type: undef
XXXX
POOLS_34(address) := ϕ(['POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_33', 'POOLS_35', 'POOLS_32', 'POOLS_1', 'POOLS_9', 'POOLS_26', 'POOLS_11', 'POOLS_21', 'POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_47'])
Phi
[i]Type for POOLS

Name: POOLS Function: getRewardShare
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_84(uint256) = INTERNAL_CALL, Utils.calcShare(uint256,uint256,uint256)(_baseAmount_1,TMP_81,TMP_83)
[[-1], [-1], 0, None, [], -1, -1, 'u']

Name: part Function: None
Num: -1
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[3], [-1], 0, None, [], -1, -1, 'u']

Name: total Function: None
Num: 3
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[3], [-1], 0, None, [], -1, -1, 'u']

Name: amount Function: None
Num: 3
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: part Function: None
Num: -1
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: total Function: None
Num: 3
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount Function: None
Num: 3
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
part_1
part

Name: part_1 Function: calcShare
Num: -1
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
total_1
total

Name: total_1 Function: calcShare
Num: 3
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
amount_1
amount

Name: amount_1 Function: calcShare
Num: 3
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
part_1(uint256) := ϕ(['_units_1', '_baseAmount_1', 'bp_1', 'totalSupply_1', '_memberCollateral_1', 'debt_1', 'timeElapsed_1', '_duration_1'])
Phi
[i]Type for part

Name: part Function: calcShare
Num: -1
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
total_1(uint256) := ϕ(['_collateral_1', 'maxSupply_1', '_memberDebt_1', 'TMP_111', 'timeForFullProtection_1', 'rewardReductionFactor_1', 'TMP_81', 'TMP_89', 'TMP_116', '_year_2'])
Phi
[i]Type for total

Name: total Function: calcShare
Num: 3
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['TMP_146', 'TMP_113', 'TMP_118', '_interestPaid_1', '_coverage_1', '_memberCollateral_1', 'amount_1', 'total_1', 'TMP_83', 'TMP_91'])
Phi
[i]Type for amount

Name: amount Function: calcShare
Num: 3
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
part_1
part_1
part

Name: part Function: calcShare
Num: -1
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
total_1
total_1
total

Name: total Function: calcShare
Num: 3
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_169(bool) = part_1 > total_1
[i]Type for TMP_169

Name: TMP_169 Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
total_1
total_1
total

Name: total Function: calcShare
Num: 3
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
part_2
part_2
part
part

Name: part Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
part_2(uint256) := total_1(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for part

Name: part Function: calcShare
Num: 3
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
part_3
part
part

Name: part Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
part_3(uint256) := ϕ(['part_2', 'part_1'])
Phi
[i]Type for part

Name: part Function: calcShare
Num: 3
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
total_1
total_1
total

Name: total Function: calcShare
Num: 3
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_170(bool) = total_1 > 0
[i]Type for TMP_170

Name: TMP_170 Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
amount_1
amount_1
amount

Name: amount Function: calcShare
Num: 3
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
total_1
total_1
total

Name: total Function: calcShare
Num: 3
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
part_3
part_3
part

Name: part Function: calcShare
Num: 3
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
share_1
share_1
share
share

Name: share Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_171(uint256) = amount_1 (c)* part_3
[i]Type for TMP_171

Name: TMP_171 Function: calcShare
Num: 3, 3
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_172(uint256) = TMP_171 (c)/ total_1
[i]Type for TMP_172

Name: TMP_172 Function: calcShare
Num: 3
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
share_1(uint256) := TMP_172(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for share

Name: share Function: calcShare
Num: 3
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX

Name: part Function: None
Num: -1
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: total Function: None
Num: 3
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount Function: None
Num: 3
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
part_1
part

Name: part_1 Function: calcShare
Num: -1
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
total_1
total

Name: total_1 Function: calcShare
Num: 3
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
amount_1
amount

Name: amount_1 Function: calcShare
Num: 3
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
part_1(uint256) := ϕ(['_units_1', '_baseAmount_1', 'bp_1', 'totalSupply_1', '_memberCollateral_1', 'debt_1', 'timeElapsed_1', '_duration_1'])
Phi
[i]Type for part

Name: part Function: calcShare
Num: -1
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
total_1(uint256) := ϕ(['_collateral_1', 'maxSupply_1', '_memberDebt_1', 'TMP_111', 'timeForFullProtection_1', 'rewardReductionFactor_1', 'TMP_81', 'TMP_89', 'TMP_116', '_year_2'])
Phi
[i]Type for total

Name: total Function: calcShare
Num: 3
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['TMP_146', 'TMP_113', 'TMP_118', '_interestPaid_1', '_coverage_1', '_memberCollateral_1', 'amount_1', 'total_1', 'TMP_83', 'TMP_91'])
Phi
[i]Type for amount

Name: amount Function: calcShare
Num: 3
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
part_1
part_1
part

Name: part Function: calcShare
Num: -1
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
total_1
total_1
total

Name: total Function: calcShare
Num: 3
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_169(bool) = part_1 > total_1
[i]Type for TMP_169

Name: TMP_169 Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
total_1
total_1
total

Name: total Function: calcShare
Num: 3
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
part_2
part_2
part
part

Name: part Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
part_2(uint256) := total_1(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for part

Name: part Function: calcShare
Num: 3
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
part_3
part
part

Name: part Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
part_3(uint256) := ϕ(['part_2', 'part_1'])
Phi
[i]Type for part

Name: part Function: calcShare
Num: 3
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
total_1
total_1
total

Name: total Function: calcShare
Num: 3
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_170(bool) = total_1 > 0
[i]Type for TMP_170

Name: TMP_170 Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
amount_1
amount_1
amount

Name: amount Function: calcShare
Num: 3
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
total_1
total_1
total

Name: total Function: calcShare
Num: 3
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
part_3
part_3
part

Name: part Function: calcShare
Num: 3
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
share_1
share_1
share
share

Name: share Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_171(uint256) = amount_1 (c)* part_3
[i]Type for TMP_171

Name: TMP_171 Function: calcShare
Num: 3, 3
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_172(uint256) = TMP_171 (c)/ total_1
[i]Type for TMP_172

Name: TMP_172 Function: calcShare
Num: 3
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
share_1(uint256) := TMP_172(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for share

Name: share Function: calcShare
Num: 3
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i]Type for TMP_84

Name: TMP_84 Function: getRewardShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_share_1(uint256) := TMP_84(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for _share

Name: _share Function: getRewardShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_baseAmount_1
_baseAmount_1
_baseAmount

Name: _baseAmount Function: getRewardShare
Num: -1
Den: -1
Address: -1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
ROUTER_8
ROUTER_8
ROUTER

Name: ROUTER Function: getRewardShare
Num: -1
Den: -1
Address: 5
Norm: u
LF: ROUTER
Value: u
Fields: 
Finance Type: undef
POOLS_29
POOLS_29
POOLS

Name: POOLS Function: getRewardShare
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
_share_scope_0_1
_share_scope_0_1
_share_scope_0
_share_scope_0

Name: _share_scope_0 Function: getRewardShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
ROUTER_8
ROUTER

Name: ROUTER Function: getRewardShare
Num: -1
Den: -1
Address: 5
Norm: u
LF: ROUTER
Value: u
Fields: 
Finance Type: undef
POOLS_30
POOLS

Name: POOLS Function: getRewardShare
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
ROUTER_9
ROUTER

Name: ROUTER Function: getRewardShare
Num: -1
Den: -1
Address: 5
Norm: u
LF: ROUTER
Value: u
Fields: 
Finance Type: undef
POOLS_31
POOLS

Name: POOLS Function: getRewardShare
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_88 = CONVERT POOLS_29 to iPOOLS
Converting POOLS_29

Name: POOLS Function: getRewardShare
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
POOLS
[i]Type for TMP_88

Name: TMP_88 Function: getRewardShare
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_89(uint256) = HIGH_LEVEL_CALL, dest:TMP_88(iPOOLS), function:pooledVADER, arguments:[]  
High Call: pooledVADER
Running querryfc
Written func info: POOLS, pooledVADER
Retvar: ('c', ['global:VADER'], ['-1'], 0, 0, None)
{'global:FACTORY': 1, 'global:POOLS': 2, 'global:USDV': 3, 'global:VADER': 4, 'global:ROUTER': 5, 'assetChecks:collateralAsset': -999, 'assetChecks:debtAsset': -998, 'isBase:token': -997, 'isPool:token': -996, 'calcValueInBase:token': -995, 'calcValueInToken:token': -994, 'calcValueOfTokenInToken:token1': -993, 'calcValueOfTokenInToken:token2': -992, 'calcSwapValueInBase:token': -991, 'calcSwapValueInToken:token': -990, 'requirePriceBounds:token': -989, 'getRewardShare:token': -988, 'getProtection:member': -987, 'getProtection:token': -986, 'getCoverage:member': -985, 'getCoverage:token': -984, 'getCollateralValueInBase:member': -983, 'getCollateralValueInBase:collateralAsset': -982, 'getCollateralValueInBase:debtAsset': -981, 'getDebtValueInCollateral:member': -980, 'getDebtValueInCollateral:collateralAsset': -979, 'getDebtValueInCollateral:debtAsset': -978, 'getInterestOwed:collateralAsset': -977, 'getInterestOwed:debtAsset': -976, 'getInterestPayment:collateralAsset': -975, 'getInterestPayment:debtAsset': -974, 'getDebtLoading:collateralAsset': -973, 'getDebtLoading:debtAsset': -972, 'getDebtAsset:debtAsset': -971}
([4], [-1], 0, None, -1)
[i]Type for TMP_89

Name: TMP_89 Function: getRewardShare
Num: 4
Den: -1
Address: -1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
ROUTER_8(address) := ϕ(['ROUTER_28', 'ROUTER_13', 'ROUTER_30', 'ROUTER_10', 'ROUTER_1', 'ROUTER_16', 'ROUTER_4', 'ROUTER_7', 'ROUTER_20', 'ROUTER_25'])
Phi
[i]Type for ROUTER

Name: ROUTER Function: getRewardShare
Num: -1
Den: -1
Address: 5
Norm: u
LF: ROUTER
Value: u
Fields: 
Finance Type: undef
XXXX
POOLS_30(address) := ϕ(['POOLS_45', 'POOLS_26', 'POOLS_1', 'POOLS_54', 'POOLS_10', 'POOLS_19', 'POOLS_29', 'POOLS_11', 'POOLS_21', 'POOLS_47', 'POOLS_12', 'POOLS_8', 'POOLS_17', 'POOLS_23', 'POOLS_35', 'POOLS_15', 'POOLS_32', 'POOLS_9'])
Phi
[i]Type for POOLS

Name: POOLS Function: getRewardShare
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_90 = CONVERT ROUTER_8 to iROUTER
Converting ROUTER_8

Name: ROUTER Function: getRewardShare
Num: -1
Den: -1
Address: 5
Norm: u
LF: ROUTER
Value: u
Fields: 
Finance Type: undef
ROUTER
[i]Type for TMP_90

Name: TMP_90 Function: getRewardShare
Num: -1
Den: -1
Address: 5
Norm: u
LF: ROUTER
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_91(uint256) = HIGH_LEVEL_CALL, dest:TMP_90(iROUTER), function:reserveVADER, arguments:[]  
High Call: reserveVADER
Running querryfc
Written func info: ROUTER, reserveVADER
Retvar: ('c', ['global:VADER'], ['-1'], 0, 0, None)
{'global:FACTORY': 1, 'global:POOLS': 2, 'global:USDV': 3, 'global:VADER': 4, 'global:ROUTER': 5, 'assetChecks:collateralAsset': -999, 'assetChecks:debtAsset': -998, 'isBase:token': -997, 'isPool:token': -996, 'calcValueInBase:token': -995, 'calcValueInToken:token': -994, 'calcValueOfTokenInToken:token1': -993, 'calcValueOfTokenInToken:token2': -992, 'calcSwapValueInBase:token': -991, 'calcSwapValueInToken:token': -990, 'requirePriceBounds:token': -989, 'getRewardShare:token': -988, 'getProtection:member': -987, 'getProtection:token': -986, 'getCoverage:member': -985, 'getCoverage:token': -984, 'getCollateralValueInBase:member': -983, 'getCollateralValueInBase:collateralAsset': -982, 'getCollateralValueInBase:debtAsset': -981, 'getDebtValueInCollateral:member': -980, 'getDebtValueInCollateral:collateralAsset': -979, 'getDebtValueInCollateral:debtAsset': -978, 'getInterestOwed:collateralAsset': -977, 'getInterestOwed:debtAsset': -976, 'getInterestPayment:collateralAsset': -975, 'getInterestPayment:debtAsset': -974, 'getDebtLoading:collateralAsset': -973, 'getDebtLoading:debtAsset': -972, 'getDebtAsset:debtAsset': -971}
([4], [-1], 0, None, -1)
[i]Type for TMP_91

Name: TMP_91 Function: getRewardShare
Num: 4
Den: -1
Address: -1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
ROUTER_9(address) := ϕ(['ROUTER_28', 'ROUTER_13', 'ROUTER_30', 'ROUTER_8', 'ROUTER_10', 'ROUTER_1', 'ROUTER_16', 'ROUTER_4', 'ROUTER_7', 'ROUTER_20', 'ROUTER_25'])
Phi
[i]Type for ROUTER

Name: ROUTER Function: getRewardShare
Num: -1
Den: -1
Address: 5
Norm: u
LF: ROUTER
Value: u
Fields: 
Finance Type: undef
XXXX
POOLS_31(address) := ϕ(['POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_35', 'POOLS_30', 'POOLS_32', 'POOLS_1', 'POOLS_9', 'POOLS_26', 'POOLS_11', 'POOLS_21', 'POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_47'])
Phi
[i]Type for POOLS

Name: POOLS Function: getRewardShare
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_92(uint256) = INTERNAL_CALL, Utils.calcShare(uint256,uint256,uint256)(_baseAmount_1,TMP_89,TMP_91)
[[-1], [-1], 0, None, [], -1, -1, 'u']

Name: part Function: None
Num: -1
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[4], [-1], 0, None, [], -1, -1, 'u']

Name: total Function: None
Num: 4
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[4], [-1], 0, None, [], -1, -1, 'u']

Name: amount Function: None
Num: 4
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: part Function: None
Num: -1
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: total Function: None
Num: 4
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount Function: None
Num: 4
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
part_1
part

Name: part_1 Function: calcShare
Num: -1
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
total_1
total

Name: total_1 Function: calcShare
Num: 4
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
amount_1
amount

Name: amount_1 Function: calcShare
Num: 4
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
part_1(uint256) := ϕ(['_units_1', '_baseAmount_1', 'bp_1', 'totalSupply_1', '_memberCollateral_1', 'debt_1', 'timeElapsed_1', '_duration_1'])
Phi
[i]Type for part

Name: part Function: calcShare
Num: -1
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
total_1(uint256) := ϕ(['_collateral_1', 'maxSupply_1', '_memberDebt_1', 'TMP_111', 'timeForFullProtection_1', 'rewardReductionFactor_1', 'TMP_81', 'TMP_89', 'TMP_116', '_year_2'])
Phi
[i]Type for total

Name: total Function: calcShare
Num: 4
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['TMP_146', 'TMP_113', 'TMP_118', '_interestPaid_1', '_coverage_1', '_memberCollateral_1', 'amount_1', 'total_1', 'TMP_83', 'TMP_91'])
Phi
[i]Type for amount

Name: amount Function: calcShare
Num: 4
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
part_1
part_1
part

Name: part Function: calcShare
Num: -1
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
total_1
total_1
total

Name: total Function: calcShare
Num: 4
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_169(bool) = part_1 > total_1
[i]Type for TMP_169

Name: TMP_169 Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
total_1
total_1
total

Name: total Function: calcShare
Num: 4
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
part_2
part_2
part
part

Name: part Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
part_2(uint256) := total_1(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for part

Name: part Function: calcShare
Num: 4
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
part_3
part
part

Name: part Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
part_3(uint256) := ϕ(['part_2', 'part_1'])
Phi
[i]Type for part

Name: part Function: calcShare
Num: 4
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
total_1
total_1
total

Name: total Function: calcShare
Num: 4
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_170(bool) = total_1 > 0
[i]Type for TMP_170

Name: TMP_170 Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
amount_1
amount_1
amount

Name: amount Function: calcShare
Num: 4
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
total_1
total_1
total

Name: total Function: calcShare
Num: 4
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
part_3
part_3
part

Name: part Function: calcShare
Num: 4
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
share_1
share_1
share
share

Name: share Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_171(uint256) = amount_1 (c)* part_3
[i]Type for TMP_171

Name: TMP_171 Function: calcShare
Num: 4, 4
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_172(uint256) = TMP_171 (c)/ total_1
[i]Type for TMP_172

Name: TMP_172 Function: calcShare
Num: 4
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
share_1(uint256) := TMP_172(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for share

Name: share Function: calcShare
Num: 4
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX

Name: part Function: None
Num: -1
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: total Function: None
Num: 4
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount Function: None
Num: 4
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
part_1
part

Name: part_1 Function: calcShare
Num: -1
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
total_1
total

Name: total_1 Function: calcShare
Num: 4
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
amount_1
amount

Name: amount_1 Function: calcShare
Num: 4
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
part_1(uint256) := ϕ(['_units_1', '_baseAmount_1', 'bp_1', 'totalSupply_1', '_memberCollateral_1', 'debt_1', 'timeElapsed_1', '_duration_1'])
Phi
[i]Type for part

Name: part Function: calcShare
Num: -1
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
total_1(uint256) := ϕ(['_collateral_1', 'maxSupply_1', '_memberDebt_1', 'TMP_111', 'timeForFullProtection_1', 'rewardReductionFactor_1', 'TMP_81', 'TMP_89', 'TMP_116', '_year_2'])
Phi
[i]Type for total

Name: total Function: calcShare
Num: 4
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['TMP_146', 'TMP_113', 'TMP_118', '_interestPaid_1', '_coverage_1', '_memberCollateral_1', 'amount_1', 'total_1', 'TMP_83', 'TMP_91'])
Phi
[i]Type for amount

Name: amount Function: calcShare
Num: 4
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
part_1
part_1
part

Name: part Function: calcShare
Num: -1
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
total_1
total_1
total

Name: total Function: calcShare
Num: 4
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_169(bool) = part_1 > total_1
[i]Type for TMP_169

Name: TMP_169 Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
total_1
total_1
total

Name: total Function: calcShare
Num: 4
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
part_2
part_2
part
part

Name: part Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
part_2(uint256) := total_1(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for part

Name: part Function: calcShare
Num: 4
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
part_3
part
part

Name: part Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
part_3(uint256) := ϕ(['part_2', 'part_1'])
Phi
[i]Type for part

Name: part Function: calcShare
Num: 4
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
total_1
total_1
total

Name: total Function: calcShare
Num: 4
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_170(bool) = total_1 > 0
[i]Type for TMP_170

Name: TMP_170 Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
amount_1
amount_1
amount

Name: amount Function: calcShare
Num: 4
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
total_1
total_1
total

Name: total Function: calcShare
Num: 4
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
part_3
part_3
part

Name: part Function: calcShare
Num: 4
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
share_1
share_1
share
share

Name: share Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_171(uint256) = amount_1 (c)* part_3
[i]Type for TMP_171

Name: TMP_171 Function: calcShare
Num: 4, 4
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_172(uint256) = TMP_171 (c)/ total_1
[i]Type for TMP_172

Name: TMP_172 Function: calcShare
Num: 4
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
share_1(uint256) := TMP_172(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for share

Name: share Function: calcShare
Num: 4
Den: -1
Address: -1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i]Type for TMP_92

Name: TMP_92 Function: getRewardShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_share_scope_0_1(uint256) := TMP_92(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for _share_scope_0

Name: _share_scope_0 Function: getRewardShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
rewardReductionFactor_1
rewardReductionFactor_1
rewardReductionFactor
rewardReductionFactor

Name: rewardReductionFactor_1 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_share_1
_share_1
_share
_share

Name: _share Function: getRewardShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
rewardShare_2
rewardShare_2
rewardShare
rewardShare

Name: rewardShare Function: getRewardShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_85(uint256) = INTERNAL_CALL, Utils.getReducedShare(uint256,uint256)(_share_1,rewardReductionFactor_1)
[i]Type for TMP_85

Name: TMP_85 Function: getRewardShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
rewardShare_2(uint256) := TMP_85(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for rewardShare

Name: rewardShare Function: getRewardShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
rewardReductionFactor_1
rewardReductionFactor_1
rewardReductionFactor
rewardReductionFactor

Name: rewardReductionFactor_1 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_share_scope_0_1
_share_scope_0_1
_share_scope_0
_share_scope_0

Name: _share_scope_0 Function: getRewardShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
rewardShare_1
rewardShare_1
rewardShare
rewardShare

Name: rewardShare Function: getRewardShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_93(uint256) = INTERNAL_CALL, Utils.getReducedShare(uint256,uint256)(_share_scope_0_1,rewardReductionFactor_1)
[i]Type for TMP_93

Name: TMP_93 Function: getRewardShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
rewardShare_1(uint256) := TMP_93(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for rewardShare

Name: rewardShare Function: getRewardShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX



getReducedShare
Finding type for amount(uint256 ... )
Finding type for rewardReductionFactor(uint256 ... )
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1


amount_1(uint256) := ϕ(['_share_1', '_share_scope_0_1'])
rewardReductionFactor_1(uint256) := ϕ(['rewardReductionFactor_1'])
TMP_94(uint256) = INTERNAL_CALL, Utils.calcShare(uint256,uint256,uint256)(1,rewardReductionFactor_1,amount_1)
RETURN TMP_94


Propogating parameters and globals to SSA variables...
End popogation
amount_1
amount
amount

Name: amount_1 Function: getReducedShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
rewardReductionFactor_1
rewardReductionFactor
rewardReductionFactor

Name: rewardReductionFactor_1 Function: getReducedShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['_share_1', '_share_scope_0_1'])
Phi
[i]Type for amount

Name: amount Function: getReducedShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
rewardReductionFactor_1(uint256) := ϕ(['rewardReductionFactor_1'])
Phi
[i]Type for rewardReductionFactor

Name: rewardReductionFactor Function: getReducedShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
amount_1
amount_1
amount
amount

Name: amount_1 Function: getReducedShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
rewardReductionFactor_1
rewardReductionFactor_1
rewardReductionFactor
rewardReductionFactor

Name: rewardReductionFactor_1 Function: getReducedShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_94(uint256) = INTERNAL_CALL, Utils.calcShare(uint256,uint256,uint256)(1,rewardReductionFactor_1,amount_1)
[i]Type for TMP_94

Name: TMP_94 Function: getReducedShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_94


amount_1(uint256) := ϕ(['_share_1', '_share_scope_0_1'])
rewardReductionFactor_1(uint256) := ϕ(['rewardReductionFactor_1'])
TMP_94(uint256) = INTERNAL_CALL, Utils.calcShare(uint256,uint256,uint256)(1,rewardReductionFactor_1,amount_1)
RETURN TMP_94


Propogating parameters and globals to SSA variables...
End popogation
amount_1
amount
amount

Name: amount_1 Function: getReducedShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
rewardReductionFactor_1
rewardReductionFactor
rewardReductionFactor

Name: rewardReductionFactor_1 Function: getReducedShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['_share_1', '_share_scope_0_1'])
Phi
[i]Type for amount

Name: amount Function: getReducedShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
rewardReductionFactor_1(uint256) := ϕ(['rewardReductionFactor_1'])
Phi
[i]Type for rewardReductionFactor

Name: rewardReductionFactor Function: getReducedShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
amount_1
amount_1
amount
amount

Name: amount_1 Function: getReducedShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
rewardReductionFactor_1
rewardReductionFactor_1
rewardReductionFactor
rewardReductionFactor

Name: rewardReductionFactor_1 Function: getReducedShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_94(uint256) = INTERNAL_CALL, Utils.calcShare(uint256,uint256,uint256)(1,rewardReductionFactor_1,amount_1)
[i]Type for TMP_94

Name: TMP_94 Function: getReducedShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_94



getProtection
Finding type for member(address ... )
prev address? u
Head Addr: -987
    Norm: 0
    Set: {-987}
    Fin: NULL
Finding type for token(address ... )
prev address? u
Head Addr: -986
    Norm: 0
    Set: {-986}
    Fin: NULL
Finding type for basisPoints(uint256 ... )
Finding type for timeForFullProtection(uint256 ... )
Param: 0
    num: []
    den: []
    norm: u
    link: member
    fields: []
    fintype: -1
Param: 1
    num: []
    den: []
    norm: u
    link: token
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 3
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1


ROUTER_14(address) := ϕ(['ROUTER_28', 'ROUTER_13', 'ROUTER_30', 'ROUTER_10', 'ROUTER_1', 'ROUTER_16', 'ROUTER_4', 'ROUTER_7', 'ROUTER_20', 'ROUTER_0', 'ROUTER_25'])
TMP_95(uint256) = INTERNAL_CALL, Utils.getCoverage(address,address)(member_1,token_1)
ROUTER_15(address) := ϕ(['ROUTER_20'])
_coverage_1(uint256) := TMP_95(uint256)
TMP_96 = CONVERT ROUTER_15 to iROUTER
TMP_97(bool) = HIGH_LEVEL_CALL, dest:TMP_96(iROUTER), function:isCurated, arguments:['token_1']  
ROUTER_16(address) := ϕ(['ROUTER_28', 'ROUTER_13', 'ROUTER_30', 'ROUTER_10', 'ROUTER_1', 'ROUTER_16', 'ROUTER_4', 'ROUTER_7', 'ROUTER_20', 'ROUTER_25', 'ROUTER_15'])
CONDITION TMP_97
TMP_98 = CONVERT ROUTER_16 to iROUTER
TMP_99(uint256) = HIGH_LEVEL_CALL, dest:TMP_98(iROUTER), function:getMemberLastDeposit, arguments:['member_1', 'token_1']  
ROUTER_17(address) := ϕ(['ROUTER_28', 'ROUTER_13', 'ROUTER_30', 'ROUTER_10', 'ROUTER_1', 'ROUTER_16', 'ROUTER_4', 'ROUTER_7', 'ROUTER_20', 'ROUTER_25'])
TMP_100(uint256) = block.timestamp (c)- TMP_99
_duration_1(uint256) := TMP_100(uint256)
TMP_101(bool) = _duration_1 <= timeForFullProtection_1
CONDITION TMP_101
protection_1(uint256) := _coverage_1(uint256)
TMP_103(uint256) = INTERNAL_CALL, Utils.calcPart(uint256,uint256)(basisPoints_1,protection_3)
RETURN TMP_103
TMP_102(uint256) = INTERNAL_CALL, Utils.calcShare(uint256,uint256,uint256)(_duration_1,timeForFullProtection_1,_coverage_1)
protection_2(uint256) := TMP_102(uint256)
protection_3(uint256) := ϕ(['protection_2', 'protection_1'])


Propogating parameters and globals to SSA variables...
End popogation
ROUTER_14
ROUTER
ROUTER

Name: None Function: None
Num: -1
Den: -1
Address: 5
Norm: u
LF: ROUTER
Value: u
Fields: 
Finance Type: undef
ROUTER_14(address) := ϕ(['ROUTER_28', 'ROUTER_13', 'ROUTER_30', 'ROUTER_10', 'ROUTER_1', 'ROUTER_16', 'ROUTER_4', 'ROUTER_7', 'ROUTER_20', 'ROUTER_0', 'ROUTER_25'])
Phi
[i]Type for ROUTER

Name: ROUTER Function: getProtection
Num: -1
Den: -1
Address: 5
Norm: u
LF: ROUTER
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
token_1
token_1
token

Name: token_1 Function: None
Num: 
Den: 
Address: -986
Norm: u
LF: token
Value: u
Fields: 
Finance Type: undef
member_1
member_1
member

Name: member_1 Function: None
Num: 
Den: 
Address: -987
Norm: u
LF: member
Value: u
Fields: 
Finance Type: undef
_coverage_1
_coverage_1
_coverage
_coverage

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
ROUTER_15
ROUTER
ROUTER

Name: None Function: None
Num: -1
Den: -1
Address: 5
Norm: u
LF: ROUTER
Value: u
Fields: 
Finance Type: undef
TMP_95(uint256) = INTERNAL_CALL, Utils.getCoverage(address,address)(member_1,token_1)
[[], [], 'u', 'member', [], -1, -987, 'u']

Name: member Function: None
Num: 
Den: 
Address: -987
Norm: u
LF: member
Value: u
Fields: 
Finance Type: undef
[[], [], 'u', 'token', [], -1, -986, 'u']

Name: token Function: None
Num: 
Den: 
Address: -986
Norm: u
LF: token
Value: u
Fields: 
Finance Type: undef

Name: member Function: None
Num: 
Den: 
Address: -987
Norm: u
LF: member
Value: u
Fields: 
Finance Type: undef

Name: token Function: None
Num: 
Den: 
Address: -986
Norm: u
LF: token
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
member_1
member

Name: member_1 Function: None
Num: 
Den: 
Address: -987
Norm: u
LF: member
Value: u
Fields: 
Finance Type: undef
token_1
token

Name: token_1 Function: None
Num: 
Den: 
Address: -986
Norm: u
LF: token
Value: u
Fields: 
Finance Type: undef
ROUTER_18
ROUTER
ROUTER

Name: None Function: None
Num: -1
Den: -1
Address: 5
Norm: u
LF: ROUTER
Value: u
Fields: 
Finance Type: undef
POOLS_36
POOLS
POOLS

Name: None Function: None
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
member_1(address) := ϕ(['member_1'])
Phi
[i]Type for member

Name: member Function: getCoverage
Num: 
Den: 
Address: -987
Norm: u
LF: member
Value: u
Fields: 
Finance Type: undef
XXXX
token_1(address) := ϕ(['token_1'])
Phi
[i]Type for token

Name: token Function: getCoverage
Num: 
Den: 
Address: -986
Norm: u
LF: token
Value: u
Fields: 
Finance Type: undef
XXXX
ROUTER_18(address) := ϕ(['ROUTER_28', 'ROUTER_13', 'ROUTER_30', 'ROUTER_10', 'ROUTER_1', 'ROUTER_16', 'ROUTER_4', 'ROUTER_7', 'ROUTER_20', 'ROUTER_0', 'ROUTER_25'])
Phi
[i]Type for ROUTER

Name: ROUTER Function: getCoverage
Num: -1
Den: -1
Address: 5
Norm: u
LF: ROUTER
Value: u
Fields: 
Finance Type: undef
XXXX
POOLS_36(address) := ϕ(['POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_35', 'POOLS_32', 'POOLS_9', 'POOLS_1', 'POOLS_26', 'POOLS_11', 'POOLS_21', 'POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_0', 'POOLS_29', 'POOLS_47'])
Phi
[i]Type for POOLS

Name: POOLS Function: getCoverage
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
member_1
member_1
member

Name: member Function: getCoverage
Num: 
Den: 
Address: -987
Norm: u
LF: member
Value: u
Fields: 
Finance Type: undef
token_1
token_1
token

Name: token Function: getCoverage
Num: 
Den: 
Address: -986
Norm: u
LF: token
Value: u
Fields: 
Finance Type: undef
ROUTER_18
ROUTER_18
ROUTER

Name: ROUTER Function: getCoverage
Num: -1
Den: -1
Address: 5
Norm: u
LF: ROUTER
Value: u
Fields: 
Finance Type: undef
_B0_1
_B0_1
_B0
_B0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
ROUTER_19
ROUTER
ROUTER

Name: None Function: None
Num: -1
Den: -1
Address: 5
Norm: u
LF: ROUTER
Value: u
Fields: 
Finance Type: undef
POOLS_37
POOLS
POOLS

Name: None Function: None
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_104 = CONVERT ROUTER_18 to iROUTER
Converting ROUTER_18

Name: ROUTER Function: getCoverage
Num: -1
Den: -1
Address: 5
Norm: u
LF: ROUTER
Value: u
Fields: 
Finance Type: undef
ROUTER
[i]Type for TMP_104

Name: TMP_104 Function: getCoverage
Num: -1
Den: -1
Address: 5
Norm: u
LF: ROUTER
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_105(uint256) = HIGH_LEVEL_CALL, dest:TMP_104(iROUTER), function:getMemberBaseDeposit, arguments:['member_1', 'token_1']  
High Call: getMemberBaseDeposit
Running querryfc
Written func info: ROUTER, getMemberBaseDeposit
Retvar: ('c', ['global:USDV'], ['-1'], 0, 0, None)
{'global:FACTORY': 1, 'global:POOLS': 2, 'global:USDV': 3, 'global:VADER': 4, 'global:ROUTER': 5, 'assetChecks:collateralAsset': -999, 'assetChecks:debtAsset': -998, 'isBase:token': -997, 'isPool:token': -996, 'calcValueInBase:token': -995, 'calcValueInToken:token': -994, 'calcValueOfTokenInToken:token1': -993, 'calcValueOfTokenInToken:token2': -992, 'calcSwapValueInBase:token': -991, 'calcSwapValueInToken:token': -990, 'requirePriceBounds:token': -989, 'getRewardShare:token': -988, 'getProtection:member': -987, 'getProtection:token': -986, 'getCoverage:member': -985, 'getCoverage:token': -984, 'getCollateralValueInBase:member': -983, 'getCollateralValueInBase:collateralAsset': -982, 'getCollateralValueInBase:debtAsset': -981, 'getDebtValueInCollateral:member': -980, 'getDebtValueInCollateral:collateralAsset': -979, 'getDebtValueInCollateral:debtAsset': -978, 'getInterestOwed:collateralAsset': -977, 'getInterestOwed:debtAsset': -976, 'getInterestPayment:collateralAsset': -975, 'getInterestPayment:debtAsset': -974, 'getDebtLoading:collateralAsset': -973, 'getDebtLoading:debtAsset': -972, 'getDebtAsset:debtAsset': -971}
([3], [-1], 0, None, -1)
[i]Type for TMP_105

Name: TMP_105 Function: getCoverage
Num: 3
Den: -1
Address: -1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
ROUTER_19(address) := ϕ(['ROUTER_28', 'ROUTER_13', 'ROUTER_30', 'ROUTER_10', 'ROUTER_1', 'ROUTER_16', 'ROUTER_4', 'ROUTER_7', 'ROUTER_20', 'ROUTER_25', 'ROUTER_18'])
Phi
[i]Type for ROUTER

Name: ROUTER Function: getCoverage
Num: -1
Den: -1
Address: 5
Norm: u
LF: ROUTER
Value: u
Fields: 
Finance Type: undef
XXXX
POOLS_37(address) := ϕ(['POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_36', 'POOLS_15', 'POOLS_35', 'POOLS_32', 'POOLS_1', 'POOLS_9', 'POOLS_26', 'POOLS_11', 'POOLS_21', 'POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_47'])
Phi
[i]Type for POOLS

Name: POOLS Function: getCoverage
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
XXXX
_B0_1(uint256) := TMP_105(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for _B0

Name: _B0 Function: getCoverage
Num: 3
Den: -1
Address: -1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
token_1
token_1
token

Name: token Function: getCoverage
Num: 
Den: 
Address: -986
Norm: u
LF: token
Value: u
Fields: 
Finance Type: undef
ROUTER_19
ROUTER_19
ROUTER

Name: ROUTER Function: getCoverage
Num: -1
Den: -1
Address: 5
Norm: u
LF: ROUTER
Value: u
Fields: 
Finance Type: undef
member_1
member_1
member

Name: member Function: getCoverage
Num: 
Den: 
Address: -987
Norm: u
LF: member
Value: u
Fields: 
Finance Type: undef
_T0_1
_T0_1
_T0
_T0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
ROUTER_20
ROUTER
ROUTER

Name: None Function: None
Num: -1
Den: -1
Address: 5
Norm: u
LF: ROUTER
Value: u
Fields: 
Finance Type: undef
POOLS_38
POOLS
POOLS

Name: None Function: None
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_106 = CONVERT ROUTER_19 to iROUTER
Converting ROUTER_19

Name: ROUTER Function: getCoverage
Num: -1
Den: -1
Address: 5
Norm: u
LF: ROUTER
Value: u
Fields: 
Finance Type: undef
ROUTER
[i]Type for TMP_106

Name: TMP_106 Function: getCoverage
Num: -1
Den: -1
Address: 5
Norm: u
LF: ROUTER
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_107(uint256) = HIGH_LEVEL_CALL, dest:TMP_106(iROUTER), function:getMemberTokenDeposit, arguments:['member_1', 'token_1']  
High Call: getMemberTokenDeposit
Running querryfc
Written func info: ROUTER, getMemberTokenDeposit
Retvar: ('c', ['global:VADER'], ['-1'], 0, 0, None)
{'global:FACTORY': 1, 'global:POOLS': 2, 'global:USDV': 3, 'global:VADER': 4, 'global:ROUTER': 5, 'assetChecks:collateralAsset': -999, 'assetChecks:debtAsset': -998, 'isBase:token': -997, 'isPool:token': -996, 'calcValueInBase:token': -995, 'calcValueInToken:token': -994, 'calcValueOfTokenInToken:token1': -993, 'calcValueOfTokenInToken:token2': -992, 'calcSwapValueInBase:token': -991, 'calcSwapValueInToken:token': -990, 'requirePriceBounds:token': -989, 'getRewardShare:token': -988, 'getProtection:member': -987, 'getProtection:token': -986, 'getCoverage:member': -985, 'getCoverage:token': -984, 'getCollateralValueInBase:member': -983, 'getCollateralValueInBase:collateralAsset': -982, 'getCollateralValueInBase:debtAsset': -981, 'getDebtValueInCollateral:member': -980, 'getDebtValueInCollateral:collateralAsset': -979, 'getDebtValueInCollateral:debtAsset': -978, 'getInterestOwed:collateralAsset': -977, 'getInterestOwed:debtAsset': -976, 'getInterestPayment:collateralAsset': -975, 'getInterestPayment:debtAsset': -974, 'getDebtLoading:collateralAsset': -973, 'getDebtLoading:debtAsset': -972, 'getDebtAsset:debtAsset': -971}
([4], [-1], 0, None, -1)
[i]Type for TMP_107

Name: TMP_107 Function: getCoverage
Num: 4
Den: -1
Address: -1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
ROUTER_20(address) := ϕ(['ROUTER_28', 'ROUTER_13', 'ROUTER_30', 'ROUTER_10', 'ROUTER_1', 'ROUTER_16', 'ROUTER_4', 'ROUTER_7', 'ROUTER_19', 'ROUTER_20', 'ROUTER_25'])
Phi
[i]Type for ROUTER

Name: ROUTER Function: getCoverage
Num: -1
Den: -1
Address: 5
Norm: u
LF: ROUTER
Value: u
Fields: 
Finance Type: undef
XXXX
POOLS_38(address) := ϕ(['POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_35', 'POOLS_32', 'POOLS_1', 'POOLS_9', 'POOLS_26', 'POOLS_11', 'POOLS_21', 'POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_37', 'POOLS_47'])
Phi
[i]Type for POOLS

Name: POOLS Function: getCoverage
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
XXXX
_T0_1(uint256) := TMP_107(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for _T0

Name: _T0 Function: getCoverage
Num: 4
Den: -1
Address: -1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
POOLS_38
POOLS_38
POOLS

Name: POOLS Function: getCoverage
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
token_1
token_1
token

Name: token Function: getCoverage
Num: 
Den: 
Address: -986
Norm: u
LF: token
Value: u
Fields: 
Finance Type: undef
member_1
member_1
member

Name: member Function: getCoverage
Num: 
Den: 
Address: -987
Norm: u
LF: member
Value: u
Fields: 
Finance Type: undef
_units_1
_units_1
_units
_units

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
POOLS_39
POOLS
POOLS

Name: None Function: None
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_108 = CONVERT POOLS_38 to iPOOLS
Converting POOLS_38

Name: POOLS Function: getCoverage
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
POOLS
[i]Type for TMP_108

Name: TMP_108 Function: getCoverage
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_109(uint256) = HIGH_LEVEL_CALL, dest:TMP_108(iPOOLS), function:getMemberUnits, arguments:['token_1', 'member_1']  
High Call: getMemberUnits
Running querryfc
Written func info: POOLS, getMemberUnits
Retvar: ('c', ['global:POOLS'], ['-1'], 0, 0, None)
{'global:FACTORY': 1, 'global:POOLS': 2, 'global:USDV': 3, 'global:VADER': 4, 'global:ROUTER': 5, 'assetChecks:collateralAsset': -999, 'assetChecks:debtAsset': -998, 'isBase:token': -997, 'isPool:token': -996, 'calcValueInBase:token': -995, 'calcValueInToken:token': -994, 'calcValueOfTokenInToken:token1': -993, 'calcValueOfTokenInToken:token2': -992, 'calcSwapValueInBase:token': -991, 'calcSwapValueInToken:token': -990, 'requirePriceBounds:token': -989, 'getRewardShare:token': -988, 'getProtection:member': -987, 'getProtection:token': -986, 'getCoverage:member': -985, 'getCoverage:token': -984, 'getCollateralValueInBase:member': -983, 'getCollateralValueInBase:collateralAsset': -982, 'getCollateralValueInBase:debtAsset': -981, 'getDebtValueInCollateral:member': -980, 'getDebtValueInCollateral:collateralAsset': -979, 'getDebtValueInCollateral:debtAsset': -978, 'getInterestOwed:collateralAsset': -977, 'getInterestOwed:debtAsset': -976, 'getInterestPayment:collateralAsset': -975, 'getInterestPayment:debtAsset': -974, 'getDebtLoading:collateralAsset': -973, 'getDebtLoading:debtAsset': -972, 'getDebtAsset:debtAsset': -971}
([2], [-1], 0, None, -1)
[i]Type for TMP_109

Name: TMP_109 Function: getCoverage
Num: 2
Den: -1
Address: -1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
POOLS_39(address) := ϕ(['POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_35', 'POOLS_32', 'POOLS_1', 'POOLS_9', 'POOLS_26', 'POOLS_38', 'POOLS_11', 'POOLS_21', 'POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_47'])
Phi
[i]Type for POOLS

Name: POOLS Function: getCoverage
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
XXXX
_units_1(uint256) := TMP_109(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for _units

Name: _units Function: getCoverage
Num: 2
Den: -1
Address: -1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_units_1
_units_1
_units

Name: _units Function: getCoverage
Num: 2
Den: -1
Address: -1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
POOLS_39
POOLS_39
POOLS

Name: POOLS Function: getCoverage
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
token_1
token_1
token

Name: token Function: getCoverage
Num: 
Den: 
Address: -986
Norm: u
LF: token
Value: u
Fields: 
Finance Type: undef
POOLS_40
POOLS_40
POOLS
POOLS

Name: None Function: None
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
_B1_1
_B1_1
_B1
_B1

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
POOLS_40
POOLS

Name: None Function: None
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
POOLS_41
POOLS
POOLS

Name: None Function: None
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_110 = CONVERT POOLS_39 to iPOOLS
Converting POOLS_39

Name: POOLS Function: getCoverage
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
POOLS
[i]Type for TMP_110

Name: TMP_110 Function: getCoverage
Num: -1
Den: -1
Address: 2
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_111(uint256) = HIGH_LEVEL_CALL, dest:TMP_110(iPOOLS), function:getUnits, arguments:['token_1']  
High Call: getUnits
Running querryfc
Written func info: POOLS, getUnits
Retvar: ('t', ['1'], ['-1'], 0, 0, None)
Executing Group 2
[*] Tested 3 warnings for Vader Protocol P1
Group 2 complete
Testing complete
