Switched global version to 0.8.4
Analyzed_contracts_count: 1
total compilations: 2, contracts: 1
contract name: IIdleToken
Finance file: IIdleToken_ftypes.txt
Add to address_to_label {'balanceOf:a': -999}
Add to address_to_label {'balanceOf:a': -999, 'tokenPriceWithFee:a': -998}
Add to address_to_label {'balanceOf:a': -999, 'tokenPriceWithFee:a': -998, 'mintIdleToken:a': -997}
Add to address_to_label {'balanceOf:a': -999, 'tokenPriceWithFee:a': -998, 'mintIdleToken:a': -997, 'global:tokA': 1}
Add to address_to_label {'balanceOf:a': -999, 'tokenPriceWithFee:a': -998, 'mintIdleToken:a': -997, 'global:tokA': 1, 'global:tokB': 2}
Reading f file...
['[*c]', 'IIdleToken']
['']
['[xf]', 'redeemIdleToken']
['[t]', 'global', 'balance', 'f: 0']
{'balanceOf:a': -999, 'tokenPriceWithFee:a': -998, 'mintIdleToken:a': -997, 'global:tokA': 1, 'global:tokB': 2}
Add to address_to_label {'balanceOf:a': -999, 'tokenPriceWithFee:a': -998, 'mintIdleToken:a': -997, 'global:tokA': 1, 'global:tokB': 2, 'global:f: 0': 3}
['[t]', 'global', 'tPWF', 'global:tokA', 'global:tokB', '12', 'f: 40']
{'balanceOf:a': -999, 'tokenPriceWithFee:a': -998, 'mintIdleToken:a': -997, 'global:tokA': 1, 'global:tokB': 2, 'global:f: 0': 3}
{'balanceOf:a': -999, 'tokenPriceWithFee:a': -998, 'mintIdleToken:a': -997, 'global:tokA': 1, 'global:tokB': 2, 'global:f: 0': 3}
{'balanceOf:a': -999, 'tokenPriceWithFee:a': -998, 'mintIdleToken:a': -997, 'global:tokA': 1, 'global:tokB': 2, 'global:f: 0': 3}
Add to address_to_label {'balanceOf:a': -999, 'tokenPriceWithFee:a': -998, 'mintIdleToken:a': -997, 'global:tokA': 1, 'global:tokB': 2, 'global:f: 0': 3, 'global:u': 4}
['[ta]', 'global', 'tokA', '6']
Head Addr: 1
    Norm: u
    Set: {1}
    Fin: undef
['[ta]', 'global', 'tokB', '18']
Head Addr: 2
    Norm: u
    Set: {2}
    Fin: undef
['[t]', 'global', 'tokenToShare', 'global:tokB', 'global:tokA', '-12', 'f:40']
{'balanceOf:a': -999, 'tokenPriceWithFee:a': -998, 'mintIdleToken:a': -997, 'global:tokA': 1, 'global:tokB': 2, 'global:f: 0': 3, 'global:u': 4}
{'balanceOf:a': -999, 'tokenPriceWithFee:a': -998, 'mintIdleToken:a': -997, 'global:tokA': 1, 'global:tokB': 2, 'global:f: 0': 3, 'global:u': 4}
{'balanceOf:a': -999, 'tokenPriceWithFee:a': -998, 'mintIdleToken:a': -997, 'global:tokA': 1, 'global:tokB': 2, 'global:f: 0': 3, 'global:u': 4}
Mark functions Adding: IIdleToken, balanceOf, True
[X]No Binary
Mark functions Adding: IIdleToken, tokenPriceWithFee, True
[X]No Binary
Mark functions Adding: IIdleToken, mintIdleToken, True
[X]No Binary
Mark functions Adding: IIdleToken, redeemIdleToken, True
[*]Marked
Mark functions Adding: IIdleToken, slitherConstructorVariables, True
[x] Not visible 
State_var: tokenToShare
Finding type for tokenToShare(uint256 ... )
(2, 1, -12, 'u', 4, 40)
[*]Type fetched successfully
querrying!!!
Source address: u
Saved name: tokenToShare

Name: PIC_1 Function: None
Num: 2
Den: 1
Address: u
Norm: -12
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
State_var: balance
Finding type for balance(uint256 ... )
(-1, -1, 'u', 'u', 3, 0)
[*]Type fetched successfully
querrying!!!
Source address: u
Saved name: balance

Name: PIC_2 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
State_var: tPWF
Finding type for tPWF(uint256 ... )
(1, 2, 12, 'u', 4, 40)
[*]Type fetched successfully
querrying!!!
Source address: u
Saved name: tPWF

Name: PIC_3 Function: None
Num: 1
Den: 2
Address: u
Norm: 12
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
Running check on IIdleToken
Reading Function: balanceOf
Function balanceOf not marked
Reading Function: tokenPriceWithFee
Function tokenPriceWithFee not marked
Reading Function: mintIdleToken
Function mintIdleToken not marked
Reading Function: redeemIdleToken
Checking funcion...



redeemIdleToken
Finding type for share(uint256 ... )
Value: u
New param cache [[[-1], [-1], 'u', None, [], -1, 'u', 'u']]
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
FIND RETURN
ENTRY_POINT
redeemIdleToken(uint256)
ENTRY_POINT
RETURN (share * tokenToShare)


tokenToShare_1(uint256) := Ï•(['tokenToShare_0'])
TMP_0(uint256) = share_1 (c)* tokenToShare_1
RETURN TMP_0


Propogating parameters and globals to SSA variables...
[]
[]
End popogation
Ssa_name: tokenToShare_1, name: tokenToShare

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: tokenToShare, Num: 1
Globalname: tokenToShare
Executing Group 3
[*] Tested 1 warning for PoolTogether
Group 3 complete
Testing complete
