Switched global version to 0.8.1



constructor
decimals_1(uint8) := ϕ(['decimals_0', 'decimals_6'])
[i]Type for decimals

Name: decimals Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MAX_FEE_1(uint256) := ϕ(['MAX_FEE_5', 'MAX_FEE_0', 'MAX_FEE_6', 'MAX_FEE_11'])
[i]Type for MAX_FEE

Name: MAX_FEE Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_0(address,address,uint256,uint256) = SOLIDITY_CALL abi.decode()(_deployData_1(address,address,uint256,uint256))
[i]Type for TUPLE_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_token0_1(address)= UNPACK TUPLE_0 index: 0 
[i]Type for _token0

Name: _token0 Function: constructor
Num: 
Den: 
Address: -999
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
_token1_1(address)= UNPACK TUPLE_0 index: 1 
[i]Type for _token1

Name: _token1 Function: constructor
Num: 
Den: 
Address: -998
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
_swapFee_1(uint256)= UNPACK TUPLE_0 index: 2 
[i]Type for _swapFee

Name: _swapFee Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
a_1(uint256)= UNPACK TUPLE_0 index: 3 
[i]Type for a

Name: a Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_32 = CONVERT 0 to address
[i]Type for TMP_32

Name: TMP_32 Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_33(bool) = _token0_1 != TMP_32
[i]Type for TMP_33

Name: TMP_33 Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_34(None) = SOLIDITY_CALL require(bool,string)(TMP_33,ZERO_ADDRESS)
[i]Type for TMP_34

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_35(bool) = _token0_1 != _token1_1
[i]Type for TMP_35

Name: TMP_35 Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_36(None) = SOLIDITY_CALL require(bool,string)(TMP_35,IDENTICAL_ADDRESSES)
[i]Type for TMP_36

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_37(bool) = _swapFee_1 <= MAX_FEE_1
[i]Type for TMP_37

Name: TMP_37 Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_38(None) = SOLIDITY_CALL require(bool,string)(TMP_37,INVALID_SWAP_FEE)
[i]Type for TMP_38

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_39(bool) = a_1 != 0
[i]Type for TMP_39

Name: TMP_39 Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_40(None) = SOLIDITY_CALL require(bool,string)(TMP_39,ZERO_A)
[i]Type for TMP_40

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_22 (->None) := 3242907650(uint256)
Finance type key: (-1, -1)
[i]Type for REF_22

Name: REF_22 Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3242907650
Fields: 
Finance Type: undef
TMP_41(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_22)
[i]Type for TMP_41

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_1(bool,bytes) = LOW_LEVEL_CALL, dest:_masterDeployer_1, function:staticcall, arguments:['TMP_41']  
[i]Type for TUPLE_1

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
decimals_2(uint8) := ϕ(['decimals_1', 'decimals_6'])
[i]Type for decimals

Name: decimals Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_barFee_1(bytes)= UNPACK TUPLE_1 index: 1 
[i]Type for _barFee

Name: _barFee Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_26 (->None) := 201985234(uint256)
Finance type key: (-1, -1)
[i]Type for REF_26

Name: REF_26 Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 201985234
Fields: 
Finance Type: undef
TMP_42(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_26)
[i]Type for TMP_42

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_2(bool,bytes) = LOW_LEVEL_CALL, dest:_masterDeployer_1, function:staticcall, arguments:['TMP_42']  
[i]Type for TUPLE_2

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
decimals_3(uint8) := ϕ(['decimals_6', 'decimals_2'])
[i]Type for decimals

Name: decimals Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_barFeeTo_1(bytes)= UNPACK TUPLE_2 index: 1 
[i]Type for _barFeeTo

Name: _barFeeTo Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_30 (->None) := 1302534183(uint256)
Finance type key: (-1, -1)
[i]Type for REF_30

Name: REF_30 Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1302534183
Fields: 
Finance Type: undef
TMP_43(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_30)
[i]Type for TMP_43

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_3(bool,bytes) = LOW_LEVEL_CALL, dest:_masterDeployer_1, function:staticcall, arguments:['TMP_43']  
[i]Type for TUPLE_3

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
decimals_4(uint8) := ϕ(['decimals_3', 'decimals_6'])
[i]Type for decimals

Name: decimals Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_bento_1(bytes)= UNPACK TUPLE_3 index: 1 
[i]Type for _bento

Name: _bento Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_44(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(826074471)
[i]Type for TMP_44

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_4(bool,bytes) = LOW_LEVEL_CALL, dest:_token0_1, function:staticcall, arguments:['TMP_44']  
[i]Type for TUPLE_4

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
decimals_5(uint8) := ϕ(['decimals_4', 'decimals_6'])
[i]Type for decimals

Name: decimals Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_decimals0_1(bytes)= UNPACK TUPLE_4 index: 1 
[i]Type for _decimals0

Name: _decimals0 Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_45(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(826074471)
[i]Type for TMP_45

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_5(bool,bytes) = LOW_LEVEL_CALL, dest:_token1_1, function:staticcall, arguments:['TMP_45']  
[i]Type for TUPLE_5

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
decimals_6(uint8) := ϕ(['decimals_6', 'decimals_5'])
[i]Type for decimals

Name: decimals Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_decimals1_1(bytes)= UNPACK TUPLE_5 index: 1 
[i]Type for _decimals1

Name: _decimals1 Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token0_1(address) := _token0_1(address)
Finance type key: (-1, -1)
[i]Type for token0

Name: token0 Function: constructor
Num: -1
Den: -1
Address: -999
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
token1_1(address) := _token1_1(address)
Finance type key: (-1, -1)
[i]Type for token1

Name: token1 Function: constructor
Num: -1
Den: -1
Address: -998
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
swapFee_1(uint256) := _swapFee_1(uint256)
Finance type key: (-1, -1)
[i]Type for swapFee

Name: swapFee Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_46(uint256) = SOLIDITY_CALL abi.decode()(_barFee_1,uint256)
[i]Type for TMP_46

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
barFee_1(uint256) := TMP_46(uint256)
Finance type key: (-1, -1)
[i]Type for barFee

Name: barFee Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_47(address) = SOLIDITY_CALL abi.decode()(_barFeeTo_1,address)
[i]Type for TMP_47

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
barFeeTo_1(address) := TMP_47(address)
Finance type key: (-1, -1)
[i]Type for barFeeTo

Name: barFeeTo Function: constructor
Num: -1
Den: -1
Address: 7
Norm: u
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
TMP_48(address) = SOLIDITY_CALL abi.decode()(_bento_1,address)
[i]Type for TMP_48

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_1(address) := TMP_48(address)
Finance type key: (-1, -1)
[i]Type for bento

Name: bento Function: constructor
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
masterDeployer_1(address) := _masterDeployer_1(address)
Finance type key: (-1, -1)
[i]Type for masterDeployer

Name: masterDeployer Function: constructor
Num: -1
Den: -1
Address: -994
Norm: u
LF: _masterDeployer
Value: u
Fields: 
Finance Type: undef
A_1(uint256) := a_1(uint256)
Finance type key: (-1, -1)
[i]Type for A

Name: A Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_49(uint256) = 2 (c)* a_1
[i]Type for TMP_49

Name: TMP_49 Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
N_A_1(uint256) := TMP_49(uint256)
Finance type key: (-1, -1)
[i]Type for N_A

Name: N_A Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_50(uint8) = SOLIDITY_CALL abi.decode()(_decimals0_1,uint8)
[i]Type for TMP_50

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_51(uint8) = decimals_6 (c)- TMP_50
[i]Type for TMP_51

Name: TMP_51 Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_52(uint256) = 10 (c)** TMP_51
[i]Type for TMP_52

Name: TMP_52 Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
token0PrecisionMultiplier_1(uint256) := TMP_52(uint256)
Finance type key: (-1, -1)
[i]Type for token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_53(uint8) = SOLIDITY_CALL abi.decode()(_decimals1_1,uint8)
[i]Type for TMP_53

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_54(uint8) = decimals_6 (c)- TMP_53
[i]Type for TMP_54

Name: TMP_54 Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_55(uint256) = 10 (c)** TMP_54
[i]Type for TMP_55

Name: TMP_55 Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
token1PrecisionMultiplier_1(uint256) := TMP_55(uint256)
Finance type key: (-1, -1)
[i]Type for token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
unlocked_1(uint256) := 1(uint256)
Finance type key: (-1, -1)
[i]Type for unlocked

Name: unlocked Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
decimals_1(uint8) := ϕ(['decimals_0', 'decimals_6'])
[i]Type for decimals

Name: decimals Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MAX_FEE_1(uint256) := ϕ(['MAX_FEE_5', 'MAX_FEE_0', 'MAX_FEE_6', 'MAX_FEE_11'])
[i]Type for MAX_FEE

Name: MAX_FEE Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_0(address,address,uint256,uint256) = SOLIDITY_CALL abi.decode()(_deployData_1(address,address,uint256,uint256))
[i]Type for TUPLE_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_token0_1(address)= UNPACK TUPLE_0 index: 0 
[i]Type for _token0

Name: _token0 Function: constructor
Num: 
Den: 
Address: -999
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
_token1_1(address)= UNPACK TUPLE_0 index: 1 
[i]Type for _token1

Name: _token1 Function: constructor
Num: 
Den: 
Address: -998
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
_swapFee_1(uint256)= UNPACK TUPLE_0 index: 2 
[i]Type for _swapFee

Name: _swapFee Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
a_1(uint256)= UNPACK TUPLE_0 index: 3 
[i]Type for a

Name: a Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_32 = CONVERT 0 to address
[i]Type for TMP_32

Name: TMP_32 Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_33(bool) = _token0_1 != TMP_32
[i]Type for TMP_33

Name: TMP_33 Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_34(None) = SOLIDITY_CALL require(bool,string)(TMP_33,ZERO_ADDRESS)
[i]Type for TMP_34

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_35(bool) = _token0_1 != _token1_1
[i]Type for TMP_35

Name: TMP_35 Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_36(None) = SOLIDITY_CALL require(bool,string)(TMP_35,IDENTICAL_ADDRESSES)
[i]Type for TMP_36

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_37(bool) = _swapFee_1 <= MAX_FEE_1
[i]Type for TMP_37

Name: TMP_37 Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_38(None) = SOLIDITY_CALL require(bool,string)(TMP_37,INVALID_SWAP_FEE)
[i]Type for TMP_38

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_39(bool) = a_1 != 0
[i]Type for TMP_39

Name: TMP_39 Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_40(None) = SOLIDITY_CALL require(bool,string)(TMP_39,ZERO_A)
[i]Type for TMP_40

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_22 (->None) := 3242907650(uint256)
Finance type key: (-1, -1)
[i]Type for REF_22

Name: REF_22 Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3242907650
Fields: 
Finance Type: undef
TMP_41(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_22)
[i]Type for TMP_41

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_1(bool,bytes) = LOW_LEVEL_CALL, dest:_masterDeployer_1, function:staticcall, arguments:['TMP_41']  
[i]Type for TUPLE_1

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
decimals_2(uint8) := ϕ(['decimals_1', 'decimals_6'])
[i]Type for decimals

Name: decimals Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_barFee_1(bytes)= UNPACK TUPLE_1 index: 1 
[i]Type for _barFee

Name: _barFee Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_26 (->None) := 201985234(uint256)
Finance type key: (-1, -1)
[i]Type for REF_26

Name: REF_26 Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 201985234
Fields: 
Finance Type: undef
TMP_42(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_26)
[i]Type for TMP_42

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_2(bool,bytes) = LOW_LEVEL_CALL, dest:_masterDeployer_1, function:staticcall, arguments:['TMP_42']  
[i]Type for TUPLE_2

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
decimals_3(uint8) := ϕ(['decimals_6', 'decimals_2'])
[i]Type for decimals

Name: decimals Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_barFeeTo_1(bytes)= UNPACK TUPLE_2 index: 1 
[i]Type for _barFeeTo

Name: _barFeeTo Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_30 (->None) := 1302534183(uint256)
Finance type key: (-1, -1)
[i]Type for REF_30

Name: REF_30 Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1302534183
Fields: 
Finance Type: undef
TMP_43(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_30)
[i]Type for TMP_43

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_3(bool,bytes) = LOW_LEVEL_CALL, dest:_masterDeployer_1, function:staticcall, arguments:['TMP_43']  
[i]Type for TUPLE_3

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
decimals_4(uint8) := ϕ(['decimals_3', 'decimals_6'])
[i]Type for decimals

Name: decimals Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_bento_1(bytes)= UNPACK TUPLE_3 index: 1 
[i]Type for _bento

Name: _bento Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_44(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(826074471)
[i]Type for TMP_44

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_4(bool,bytes) = LOW_LEVEL_CALL, dest:_token0_1, function:staticcall, arguments:['TMP_44']  
[i]Type for TUPLE_4

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
decimals_5(uint8) := ϕ(['decimals_4', 'decimals_6'])
[i]Type for decimals

Name: decimals Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_decimals0_1(bytes)= UNPACK TUPLE_4 index: 1 
[i]Type for _decimals0

Name: _decimals0 Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_45(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(826074471)
[i]Type for TMP_45

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_5(bool,bytes) = LOW_LEVEL_CALL, dest:_token1_1, function:staticcall, arguments:['TMP_45']  
[i]Type for TUPLE_5

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
decimals_6(uint8) := ϕ(['decimals_6', 'decimals_5'])
[i]Type for decimals

Name: decimals Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_decimals1_1(bytes)= UNPACK TUPLE_5 index: 1 
[i]Type for _decimals1

Name: _decimals1 Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token0_1(address) := _token0_1(address)
Finance type key: (-1, -1)
[i]Type for token0

Name: token0 Function: constructor
Num: -1
Den: -1
Address: -999
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
token1_1(address) := _token1_1(address)
Finance type key: (-1, -1)
[i]Type for token1

Name: token1 Function: constructor
Num: -1
Den: -1
Address: -998
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
swapFee_1(uint256) := _swapFee_1(uint256)
Finance type key: (-1, -1)
[i]Type for swapFee

Name: swapFee Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_46(uint256) = SOLIDITY_CALL abi.decode()(_barFee_1,uint256)
[i]Type for TMP_46

Name: TMP_46 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
barFee_1(uint256) := TMP_46(uint256)
Finance type key: (-1, -1)
[i]Type for barFee

Name: barFee Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_47(address) = SOLIDITY_CALL abi.decode()(_barFeeTo_1,address)
[i]Type for TMP_47

Name: TMP_47 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
barFeeTo_1(address) := TMP_47(address)
Finance type key: (-1, -1)
[i]Type for barFeeTo

Name: barFeeTo Function: constructor
Num: -1
Den: -1
Address: 7
Norm: u
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
TMP_48(address) = SOLIDITY_CALL abi.decode()(_bento_1,address)
[i]Type for TMP_48

Name: TMP_48 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_1(address) := TMP_48(address)
Finance type key: (-1, -1)
[i]Type for bento

Name: bento Function: constructor
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
masterDeployer_1(address) := _masterDeployer_1(address)
Finance type key: (-1, -1)
[i]Type for masterDeployer

Name: masterDeployer Function: constructor
Num: -1
Den: -1
Address: -994
Norm: u
LF: _masterDeployer
Value: u
Fields: 
Finance Type: undef
A_1(uint256) := a_1(uint256)
Finance type key: (-1, -1)
[i]Type for A

Name: A Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_49(uint256) = 2 (c)* a_1
[i]Type for TMP_49

Name: TMP_49 Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
N_A_1(uint256) := TMP_49(uint256)
Finance type key: (-1, -1)
[i]Type for N_A

Name: N_A Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_50(uint8) = SOLIDITY_CALL abi.decode()(_decimals0_1,uint8)
[i]Type for TMP_50

Name: TMP_50 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_51(uint8) = decimals_6 (c)- TMP_50
[i]Type for TMP_51

Name: TMP_51 Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_52(uint256) = 10 (c)** TMP_51
[i]Type for TMP_52

Name: TMP_52 Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
token0PrecisionMultiplier_1(uint256) := TMP_52(uint256)
Finance type key: (-1, -1)
[i]Type for token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_53(uint8) = SOLIDITY_CALL abi.decode()(_decimals1_1,uint8)
[i]Type for TMP_53

Name: TMP_53 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_54(uint8) = decimals_6 (c)- TMP_53
[i]Type for TMP_54

Name: TMP_54 Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_55(uint256) = 10 (c)** TMP_54
[i]Type for TMP_55

Name: TMP_55 Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
token1PrecisionMultiplier_1(uint256) := TMP_55(uint256)
Finance type key: (-1, -1)
[i]Type for token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
unlocked_1(uint256) := 1(uint256)
Finance type key: (-1, -1)
[i]Type for unlocked

Name: unlocked Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef



mint
totalSupply_5(uint256) := ϕ(['totalSupply_15', 'totalSupply_8', 'totalSupply_0', 'totalSupply_4', 'totalSupply_11', 'totalSupply_2'])
[i]Type for totalSupply

Name: totalSupply Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
MINIMUM_LIQUIDITY_1(uint256) := ϕ(['MINIMUM_LIQUIDITY_6', 'MINIMUM_LIQUIDITY_0', 'MINIMUM_LIQUIDITY_7'])
[i]Type for MINIMUM_LIQUIDITY

Name: MINIMUM_LIQUIDITY Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MODIFIER_CALL, HybridPool.lock()()
unlocked_2(uint256) := ϕ(['unlocked_1', 'unlocked_4', 'unlocked_0'])
[i]Type for unlocked

Name: unlocked Function: lock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
TMP_305(bool) = unlocked_2 == 1
[i]Type for TMP_305

Name: TMP_305 Function: lock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_306(None) = SOLIDITY_CALL require(bool,string)(TMP_305,LOCKED)
[i]Type for TMP_306

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
unlocked_3(uint256) := 2(uint256)
Finance type key: (-1, -1)
[i]Type for unlocked

Name: unlocked Function: lock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
unlocked_4(uint256) := 1(uint256)
Finance type key: (-1, -1)
[i]Type for unlocked

Name: unlocked Function: lock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
unlocked_2(uint256) := ϕ(['unlocked_1', 'unlocked_4', 'unlocked_0'])
[i]Type for unlocked

Name: unlocked Function: lock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
TMP_305(bool) = unlocked_2 == 1
[i]Type for TMP_305

Name: TMP_305 Function: lock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_306(None) = SOLIDITY_CALL require(bool,string)(TMP_305,LOCKED)
[i]Type for TMP_306

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
unlocked_3(uint256) := 2(uint256)
Finance type key: (-1, -1)
[i]Type for unlocked

Name: unlocked Function: lock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
unlocked_4(uint256) := 1(uint256)
Finance type key: (-1, -1)
[i]Type for unlocked

Name: unlocked Function: lock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
TMP_56(address) = SOLIDITY_CALL abi.decode()(data_1,address)
[i]Type for TMP_56

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
recipient_1(address) := TMP_56(address)
Finance type key: (-1, -1)
[i]Type for recipient

Name: recipient Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_6(uint256,uint256) = INTERNAL_CALL, HybridPool._getReserves()()
token0_38(address) := ϕ(['token0_10', 'token0_26', 'token0_0', 'token0_19', 'token0_42', 'token0_39', 'token0_32', 'token0_1', 'token0_46', 'token0_22', 'token0_37'])
[i]Type for token0

Name: token0 Function: _getReserves
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
token1_38(address) := ϕ(['token1_1', 'token1_22', 'token1_34', 'token1_37', 'token1_10', 'token1_40', 'token1_0', 'token1_26', 'token1_45', 'token1_18'])
[i]Type for token1

Name: token1 Function: _getReserves
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
reserve0_1(uint128) := ϕ(['reserve0_2', 'reserve0_0'])
[i]Type for reserve0

Name: reserve0 Function: _getReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
reserve1_1(uint128) := ϕ(['reserve1_0', 'reserve1_2'])
[i]Type for reserve1

Name: reserve1 Function: _getReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
_reserve0_1(uint256) := reserve0_1(uint128)
Finance type key: (0, -1)
[i]Type for _reserve0

Name: _reserve0 Function: _getReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
_reserve1_1(uint256) := reserve1_1(uint128)
Finance type key: (0, -1)
[i]Type for _reserve1

Name: _reserve1 Function: _getReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_171(uint256) = INTERNAL_CALL, HybridPool._toAmount(address,uint256)(token0_38,_reserve0_1)
token_1(address) := ϕ(['token0_36', 'token0_38', 'token1_29', 'token0_41', 'token1_44', 'token1_33', 'token1_39', 'tokenIn_1', 'token0_29'])
[i]Type for token

Name: token Function: _toAmount
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['TMP_143', '_reserve1_1', 'amountIn_1', 'amountIn_1', 'TMP_156', '_reserve0_1', 'TMP_184', 'TMP_186'])
[i]Type for input

Name: input Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_191 = CONVERT this to address
[i]Type for TMP_191

Name: TMP_191 Function: _toAmount
Num: -1
Den: -1
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_192 = CONVERT TMP_191 to IBentoBoxMinimal
[i]Type for TMP_192

Name: TMP_192 Function: _toAmount
Num: -1
Den: -1
Address: 8
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
TMP_193(uint256) = HIGH_LEVEL_CALL, dest:TMP_192(IBentoBoxMinimal), function:toAmount, arguments:['token_1', 'input_1', 'False']  
[i]Type for TMP_193

Name: TMP_193 Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
output_1(uint256) := TMP_193(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
RETURN output_1
token_1(address) := ϕ(['token0_36', 'token0_38', 'token1_29', 'token0_41', 'token1_44', 'token1_33', 'token1_39', 'tokenIn_1', 'token0_29'])
[i]Type for token

Name: token Function: _toAmount
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['TMP_143', '_reserve1_1', 'amountIn_1', 'amountIn_1', 'TMP_156', '_reserve0_1', 'TMP_184', 'TMP_186'])
[i]Type for input

Name: input Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_191 = CONVERT this to address
[i]Type for TMP_191

Name: TMP_191 Function: _toAmount
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_192 = CONVERT TMP_191 to IBentoBoxMinimal
[i]Type for TMP_192

Name: TMP_192 Function: _toAmount
Num: 
Den: 
Address: 8
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
TMP_193(uint256) = HIGH_LEVEL_CALL, dest:TMP_192(IBentoBoxMinimal), function:toAmount, arguments:['token_1', 'input_1', 'False']  
[i]Type for TMP_193

Name: TMP_193 Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
output_1(uint256) := TMP_193(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
RETURN output_1
[i]Type for TMP_171

Name: TMP_171 Function: _getReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
_reserve0_2(uint256) := TMP_171(uint256)
Finance type key: (-1, -1)
[i]Type for _reserve0

Name: _reserve0 Function: _getReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
TMP_172(uint256) = INTERNAL_CALL, HybridPool._toAmount(address,uint256)(token1_39,_reserve1_1)
token_1(address) := ϕ(['token0_36', 'token0_38', 'token1_29', 'token0_41', 'token1_44', 'token1_33', 'token1_39', 'tokenIn_1', 'token0_29'])
[i]Type for token

Name: token Function: _toAmount
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['TMP_143', '_reserve1_1', 'amountIn_1', 'amountIn_1', 'TMP_156', '_reserve0_1', 'TMP_184', 'TMP_186'])
[i]Type for input

Name: input Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_191 = CONVERT this to address
[i]Type for TMP_191

Name: TMP_191 Function: _toAmount
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_192 = CONVERT TMP_191 to IBentoBoxMinimal
[i]Type for TMP_192

Name: TMP_192 Function: _toAmount
Num: 
Den: 
Address: 8
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
TMP_193(uint256) = HIGH_LEVEL_CALL, dest:TMP_192(IBentoBoxMinimal), function:toAmount, arguments:['token_1', 'input_1', 'False']  
[i]Type for TMP_193

Name: TMP_193 Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
output_1(uint256) := TMP_193(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
RETURN output_1
token_1(address) := ϕ(['token0_36', 'token0_38', 'token1_29', 'token0_41', 'token1_44', 'token1_33', 'token1_39', 'tokenIn_1', 'token0_29'])
[i]Type for token

Name: token Function: _toAmount
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['TMP_143', '_reserve1_1', 'amountIn_1', 'amountIn_1', 'TMP_156', '_reserve0_1', 'TMP_184', 'TMP_186'])
[i]Type for input

Name: input Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_191 = CONVERT this to address
[i]Type for TMP_191

Name: TMP_191 Function: _toAmount
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_192 = CONVERT TMP_191 to IBentoBoxMinimal
[i]Type for TMP_192

Name: TMP_192 Function: _toAmount
Num: 
Den: 
Address: 8
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
TMP_193(uint256) = HIGH_LEVEL_CALL, dest:TMP_192(IBentoBoxMinimal), function:toAmount, arguments:['token_1', 'input_1', 'False']  
[i]Type for TMP_193

Name: TMP_193 Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
output_1(uint256) := TMP_193(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
RETURN output_1
[i]Type for TMP_172

Name: TMP_172 Function: _getReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
_reserve1_2(uint256) := TMP_172(uint256)
Finance type key: (-1, -1)
[i]Type for _reserve1

Name: _reserve1 Function: _getReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
RETURN _reserve0_2,_reserve1_2
token0_38(address) := ϕ(['token0_10', 'token0_26', 'token0_0', 'token0_19', 'token0_42', 'token0_39', 'token0_32', 'token0_1', 'token0_46', 'token0_22', 'token0_37'])
[i]Type for token0

Name: token0 Function: _getReserves
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
token1_38(address) := ϕ(['token1_1', 'token1_22', 'token1_34', 'token1_37', 'token1_10', 'token1_40', 'token1_0', 'token1_26', 'token1_45', 'token1_18'])
[i]Type for token1

Name: token1 Function: _getReserves
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
reserve0_1(uint128) := ϕ(['reserve0_2', 'reserve0_0'])
[i]Type for reserve0

Name: reserve0 Function: _getReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
reserve1_1(uint128) := ϕ(['reserve1_0', 'reserve1_2'])
[i]Type for reserve1

Name: reserve1 Function: _getReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
_reserve0_1(uint256) := reserve0_1(uint128)
Finance type key: (0, -1)
[i]Type for _reserve0

Name: _reserve0 Function: _getReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
_reserve1_1(uint256) := reserve1_1(uint128)
Finance type key: (0, -1)
[i]Type for _reserve1

Name: _reserve1 Function: _getReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_171(uint256) = INTERNAL_CALL, HybridPool._toAmount(address,uint256)(token0_38,_reserve0_1)
[i]Type for TMP_171

Name: TMP_171 Function: _getReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
_reserve0_2(uint256) := TMP_171(uint256)
Finance type key: (-1, -1)
[i]Type for _reserve0

Name: _reserve0 Function: _getReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
TMP_172(uint256) = INTERNAL_CALL, HybridPool._toAmount(address,uint256)(token1_39,_reserve1_1)
token_1(address) := ϕ(['token0_36', 'token0_38', 'token1_29', 'token0_41', 'token1_44', 'token1_33', 'token1_39', 'tokenIn_1', 'token0_29'])
[i]Type for token

Name: token Function: _toAmount
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['TMP_143', '_reserve1_1', 'amountIn_1', 'amountIn_1', 'TMP_156', '_reserve0_1', 'TMP_184', 'TMP_186'])
[i]Type for input

Name: input Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_191 = CONVERT this to address
[i]Type for TMP_191

Name: TMP_191 Function: _toAmount
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_192 = CONVERT TMP_191 to IBentoBoxMinimal
[i]Type for TMP_192

Name: TMP_192 Function: _toAmount
Num: 
Den: 
Address: 8
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
TMP_193(uint256) = HIGH_LEVEL_CALL, dest:TMP_192(IBentoBoxMinimal), function:toAmount, arguments:['token_1', 'input_1', 'False']  
[i]Type for TMP_193

Name: TMP_193 Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
output_1(uint256) := TMP_193(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
RETURN output_1
token_1(address) := ϕ(['token0_36', 'token0_38', 'token1_29', 'token0_41', 'token1_44', 'token1_33', 'token1_39', 'tokenIn_1', 'token0_29'])
[i]Type for token

Name: token Function: _toAmount
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['TMP_143', '_reserve1_1', 'amountIn_1', 'amountIn_1', 'TMP_156', '_reserve0_1', 'TMP_184', 'TMP_186'])
[i]Type for input

Name: input Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_191 = CONVERT this to address
[i]Type for TMP_191

Name: TMP_191 Function: _toAmount
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_192 = CONVERT TMP_191 to IBentoBoxMinimal
[i]Type for TMP_192

Name: TMP_192 Function: _toAmount
Num: 
Den: 
Address: 8
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
TMP_193(uint256) = HIGH_LEVEL_CALL, dest:TMP_192(IBentoBoxMinimal), function:toAmount, arguments:['token_1', 'input_1', 'False']  
[i]Type for TMP_193

Name: TMP_193 Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
output_1(uint256) := TMP_193(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
RETURN output_1
[i]Type for TMP_172

Name: TMP_172 Function: _getReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
_reserve1_2(uint256) := TMP_172(uint256)
Finance type key: (-1, -1)
[i]Type for _reserve1

Name: _reserve1 Function: _getReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
RETURN _reserve0_2,_reserve1_2
[i]Type for TUPLE_6

Name: TUPLE_6 Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_reserve0_1(uint256)= UNPACK TUPLE_6 index: 0 
[i]Type for _reserve0

Name: _reserve0 Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
_reserve1_1(uint256)= UNPACK TUPLE_6 index: 1 
[i]Type for _reserve1

Name: _reserve1 Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
TUPLE_7(uint256,uint256) = INTERNAL_CALL, HybridPool._balance()()
token0_40(address) := ϕ(['token0_10', 'token0_26', 'token0_0', 'token0_19', 'token0_42', 'token0_39', 'token0_32', 'token0_1', 'token0_46', 'token0_22', 'token0_37'])
[i]Type for token0

Name: token0 Function: _balance
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
token1_41(address) := ϕ(['token1_1', 'token1_22', 'token1_34', 'token1_37', 'token1_10', 'token1_40', 'token1_0', 'token1_26', 'token1_45', 'token1_18'])
[i]Type for token1

Name: token1 Function: _balance
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
TMP_184(uint256) = INTERNAL_CALL, HybridPool.__balance(address)(token0_40)
token_1(address) := ϕ(['token1_43', 'token0_40', 'token1_32', 'token0_35'])
[i]Type for token

Name: token Function: __balance
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
bento_2(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: __balance
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_59 (->None) := 4152920812(uint256)
Finance type key: (-1, -1)
[i]Type for REF_59

Name: REF_59 Function: __balance
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4152920812
Fields: 
Finance Type: undef
TMP_188 = CONVERT this to address
[i]Type for TMP_188

Name: TMP_188 Function: __balance
Num: -1
Den: -1
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_189(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_59,token_1,TMP_188)
[i]Type for TMP_189

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_21(bool,bytes) = LOW_LEVEL_CALL, dest:bento_2, function:staticcall, arguments:['TMP_189']  
[i]Type for TUPLE_21

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_3(address) := ϕ(['bento_5', 'bento_3', 'bento_1', 'bento_2', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: __balance
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
___balance_1(bytes)= UNPACK TUPLE_21 index: 1 
[i]Type for ___balance

Name: ___balance Function: __balance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_190(uint256) = SOLIDITY_CALL abi.decode()(___balance_1,uint256)
[i]Type for TMP_190

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
balance_1(uint256) := TMP_190(uint256)
Finance type key: (-1, -1)
[i]Type for balance

Name: balance Function: __balance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token1_43', 'token0_40', 'token1_32', 'token0_35'])
[i]Type for token

Name: token Function: __balance
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
bento_2(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: __balance
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_59 (->None) := 4152920812(uint256)
Finance type key: (-1, -1)
[i]Type for REF_59

Name: REF_59 Function: __balance
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4152920812
Fields: 
Finance Type: undef
TMP_188 = CONVERT this to address
[i]Type for TMP_188

Name: TMP_188 Function: __balance
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_189(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_59,token_1,TMP_188)
[i]Type for TMP_189

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_21(bool,bytes) = LOW_LEVEL_CALL, dest:bento_2, function:staticcall, arguments:['TMP_189']  
[i]Type for TUPLE_21

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_3(address) := ϕ(['bento_5', 'bento_3', 'bento_1', 'bento_2', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: __balance
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
___balance_1(bytes)= UNPACK TUPLE_21 index: 1 
[i]Type for ___balance

Name: ___balance Function: __balance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_190(uint256) = SOLIDITY_CALL abi.decode()(___balance_1,uint256)
[i]Type for TMP_190

Name: TMP_190 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
balance_1(uint256) := TMP_190(uint256)
Finance type key: (-1, -1)
[i]Type for balance

Name: balance Function: __balance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_184

Name: TMP_184 Function: _balance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_185(uint256) = INTERNAL_CALL, HybridPool._toAmount(address,uint256)(token0_41,TMP_184)
token_1(address) := ϕ(['token0_36', 'token0_38', 'token1_29', 'token0_41', 'token1_44', 'token1_33', 'token1_39', 'tokenIn_1', 'token0_29'])
[i]Type for token

Name: token Function: _toAmount
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['TMP_143', '_reserve1_1', 'amountIn_1', 'amountIn_1', 'TMP_156', '_reserve0_1', 'TMP_184', 'TMP_186'])
[i]Type for input

Name: input Function: _toAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_191 = CONVERT this to address
[i]Type for TMP_191

Name: TMP_191 Function: _toAmount
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_192 = CONVERT TMP_191 to IBentoBoxMinimal
[i]Type for TMP_192

Name: TMP_192 Function: _toAmount
Num: 
Den: 
Address: 8
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
TMP_193(uint256) = HIGH_LEVEL_CALL, dest:TMP_192(IBentoBoxMinimal), function:toAmount, arguments:['token_1', 'input_1', 'False']  
[i]Type for TMP_193

Name: TMP_193 Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
output_1(uint256) := TMP_193(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
RETURN output_1
token_1(address) := ϕ(['token0_36', 'token0_38', 'token1_29', 'token0_41', 'token1_44', 'token1_33', 'token1_39', 'tokenIn_1', 'token0_29'])
[i]Type for token

Name: token Function: _toAmount
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['TMP_143', '_reserve1_1', 'amountIn_1', 'amountIn_1', 'TMP_156', '_reserve0_1', 'TMP_184', 'TMP_186'])
[i]Type for input

Name: input Function: _toAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_191 = CONVERT this to address
[i]Type for TMP_191

Name: TMP_191 Function: _toAmount
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_192 = CONVERT TMP_191 to IBentoBoxMinimal
[i]Type for TMP_192

Name: TMP_192 Function: _toAmount
Num: 
Den: 
Address: 8
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
TMP_193(uint256) = HIGH_LEVEL_CALL, dest:TMP_192(IBentoBoxMinimal), function:toAmount, arguments:['token_1', 'input_1', 'False']  
[i]Type for TMP_193

Name: TMP_193 Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
output_1(uint256) := TMP_193(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
RETURN output_1
[i]Type for TMP_185

Name: TMP_185 Function: _balance
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
balance0_1(uint256) := TMP_185(uint256)
Finance type key: (-1, -1)
[i]Type for balance0

Name: balance0 Function: _balance
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
TMP_186(uint256) = INTERNAL_CALL, HybridPool.__balance(address)(token1_43)
token_1(address) := ϕ(['token1_43', 'token0_40', 'token1_32', 'token0_35'])
[i]Type for token

Name: token Function: __balance
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
bento_2(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: __balance
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_59 (->None) := 4152920812(uint256)
Finance type key: (-1, -1)
[i]Type for REF_59

Name: REF_59 Function: __balance
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4152920812
Fields: 
Finance Type: undef
TMP_188 = CONVERT this to address
[i]Type for TMP_188

Name: TMP_188 Function: __balance
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_189(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_59,token_1,TMP_188)
[i]Type for TMP_189

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_21(bool,bytes) = LOW_LEVEL_CALL, dest:bento_2, function:staticcall, arguments:['TMP_189']  
[i]Type for TUPLE_21

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_3(address) := ϕ(['bento_5', 'bento_3', 'bento_1', 'bento_2', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: __balance
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
___balance_1(bytes)= UNPACK TUPLE_21 index: 1 
[i]Type for ___balance

Name: ___balance Function: __balance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_190(uint256) = SOLIDITY_CALL abi.decode()(___balance_1,uint256)
[i]Type for TMP_190

Name: TMP_190 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
balance_1(uint256) := TMP_190(uint256)
Finance type key: (-1, -1)
[i]Type for balance

Name: balance Function: __balance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token1_43', 'token0_40', 'token1_32', 'token0_35'])
[i]Type for token

Name: token Function: __balance
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
bento_2(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: __balance
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_59 (->None) := 4152920812(uint256)
Finance type key: (-1, -1)
[i]Type for REF_59

Name: REF_59 Function: __balance
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4152920812
Fields: 
Finance Type: undef
TMP_188 = CONVERT this to address
[i]Type for TMP_188

Name: TMP_188 Function: __balance
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_189(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_59,token_1,TMP_188)
[i]Type for TMP_189

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_21(bool,bytes) = LOW_LEVEL_CALL, dest:bento_2, function:staticcall, arguments:['TMP_189']  
[i]Type for TUPLE_21

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_3(address) := ϕ(['bento_5', 'bento_3', 'bento_1', 'bento_2', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: __balance
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
___balance_1(bytes)= UNPACK TUPLE_21 index: 1 
[i]Type for ___balance

Name: ___balance Function: __balance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_190(uint256) = SOLIDITY_CALL abi.decode()(___balance_1,uint256)
[i]Type for TMP_190

Name: TMP_190 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
balance_1(uint256) := TMP_190(uint256)
Finance type key: (-1, -1)
[i]Type for balance

Name: balance Function: __balance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_186

Name: TMP_186 Function: _balance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_187(uint256) = INTERNAL_CALL, HybridPool._toAmount(address,uint256)(token1_44,TMP_186)
token_1(address) := ϕ(['token0_36', 'token0_38', 'token1_29', 'token0_41', 'token1_44', 'token1_33', 'token1_39', 'tokenIn_1', 'token0_29'])
[i]Type for token

Name: token Function: _toAmount
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['TMP_143', '_reserve1_1', 'amountIn_1', 'amountIn_1', 'TMP_156', '_reserve0_1', 'TMP_184', 'TMP_186'])
[i]Type for input

Name: input Function: _toAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_191 = CONVERT this to address
[i]Type for TMP_191

Name: TMP_191 Function: _toAmount
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_192 = CONVERT TMP_191 to IBentoBoxMinimal
[i]Type for TMP_192

Name: TMP_192 Function: _toAmount
Num: 
Den: 
Address: 8
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
TMP_193(uint256) = HIGH_LEVEL_CALL, dest:TMP_192(IBentoBoxMinimal), function:toAmount, arguments:['token_1', 'input_1', 'False']  
[i]Type for TMP_193

Name: TMP_193 Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
output_1(uint256) := TMP_193(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
RETURN output_1
token_1(address) := ϕ(['token0_36', 'token0_38', 'token1_29', 'token0_41', 'token1_44', 'token1_33', 'token1_39', 'tokenIn_1', 'token0_29'])
[i]Type for token

Name: token Function: _toAmount
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['TMP_143', '_reserve1_1', 'amountIn_1', 'amountIn_1', 'TMP_156', '_reserve0_1', 'TMP_184', 'TMP_186'])
[i]Type for input

Name: input Function: _toAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_191 = CONVERT this to address
[i]Type for TMP_191

Name: TMP_191 Function: _toAmount
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_192 = CONVERT TMP_191 to IBentoBoxMinimal
[i]Type for TMP_192

Name: TMP_192 Function: _toAmount
Num: 
Den: 
Address: 8
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
TMP_193(uint256) = HIGH_LEVEL_CALL, dest:TMP_192(IBentoBoxMinimal), function:toAmount, arguments:['token_1', 'input_1', 'False']  
[i]Type for TMP_193

Name: TMP_193 Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
output_1(uint256) := TMP_193(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
RETURN output_1
[i]Type for TMP_187

Name: TMP_187 Function: _balance
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
balance1_1(uint256) := TMP_187(uint256)
Finance type key: (-1, -1)
[i]Type for balance1

Name: balance1 Function: _balance
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
RETURN balance0_1,balance1_1
token0_40(address) := ϕ(['token0_10', 'token0_26', 'token0_0', 'token0_19', 'token0_42', 'token0_39', 'token0_32', 'token0_1', 'token0_46', 'token0_22', 'token0_37'])
[i]Type for token0

Name: token0 Function: _balance
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
token1_41(address) := ϕ(['token1_1', 'token1_22', 'token1_34', 'token1_37', 'token1_10', 'token1_40', 'token1_0', 'token1_26', 'token1_45', 'token1_18'])
[i]Type for token1

Name: token1 Function: _balance
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
TMP_184(uint256) = INTERNAL_CALL, HybridPool.__balance(address)(token0_40)
[i]Type for TMP_184

Name: TMP_184 Function: _balance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_185(uint256) = INTERNAL_CALL, HybridPool._toAmount(address,uint256)(token0_41,TMP_184)
token_1(address) := ϕ(['token0_36', 'token0_38', 'token1_29', 'token0_41', 'token1_44', 'token1_33', 'token1_39', 'tokenIn_1', 'token0_29'])
[i]Type for token

Name: token Function: _toAmount
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['TMP_143', '_reserve1_1', 'amountIn_1', 'amountIn_1', 'TMP_156', '_reserve0_1', 'TMP_184', 'TMP_186'])
[i]Type for input

Name: input Function: _toAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_191 = CONVERT this to address
[i]Type for TMP_191

Name: TMP_191 Function: _toAmount
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_192 = CONVERT TMP_191 to IBentoBoxMinimal
[i]Type for TMP_192

Name: TMP_192 Function: _toAmount
Num: 
Den: 
Address: 8
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
TMP_193(uint256) = HIGH_LEVEL_CALL, dest:TMP_192(IBentoBoxMinimal), function:toAmount, arguments:['token_1', 'input_1', 'False']  
[i]Type for TMP_193

Name: TMP_193 Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
output_1(uint256) := TMP_193(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
RETURN output_1
token_1(address) := ϕ(['token0_36', 'token0_38', 'token1_29', 'token0_41', 'token1_44', 'token1_33', 'token1_39', 'tokenIn_1', 'token0_29'])
[i]Type for token

Name: token Function: _toAmount
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['TMP_143', '_reserve1_1', 'amountIn_1', 'amountIn_1', 'TMP_156', '_reserve0_1', 'TMP_184', 'TMP_186'])
[i]Type for input

Name: input Function: _toAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_191 = CONVERT this to address
[i]Type for TMP_191

Name: TMP_191 Function: _toAmount
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_192 = CONVERT TMP_191 to IBentoBoxMinimal
[i]Type for TMP_192

Name: TMP_192 Function: _toAmount
Num: 
Den: 
Address: 8
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
TMP_193(uint256) = HIGH_LEVEL_CALL, dest:TMP_192(IBentoBoxMinimal), function:toAmount, arguments:['token_1', 'input_1', 'False']  
[i]Type for TMP_193

Name: TMP_193 Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
output_1(uint256) := TMP_193(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
RETURN output_1
[i]Type for TMP_185

Name: TMP_185 Function: _balance
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
balance0_1(uint256) := TMP_185(uint256)
Finance type key: (-1, -1)
[i]Type for balance0

Name: balance0 Function: _balance
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
TMP_186(uint256) = INTERNAL_CALL, HybridPool.__balance(address)(token1_43)
token_1(address) := ϕ(['token1_43', 'token0_40', 'token1_32', 'token0_35'])
[i]Type for token

Name: token Function: __balance
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
bento_2(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: __balance
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_59 (->None) := 4152920812(uint256)
Finance type key: (-1, -1)
[i]Type for REF_59

Name: REF_59 Function: __balance
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4152920812
Fields: 
Finance Type: undef
TMP_188 = CONVERT this to address
[i]Type for TMP_188

Name: TMP_188 Function: __balance
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_189(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_59,token_1,TMP_188)
[i]Type for TMP_189

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_21(bool,bytes) = LOW_LEVEL_CALL, dest:bento_2, function:staticcall, arguments:['TMP_189']  
[i]Type for TUPLE_21

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_3(address) := ϕ(['bento_5', 'bento_3', 'bento_1', 'bento_2', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: __balance
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
___balance_1(bytes)= UNPACK TUPLE_21 index: 1 
[i]Type for ___balance

Name: ___balance Function: __balance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_190(uint256) = SOLIDITY_CALL abi.decode()(___balance_1,uint256)
[i]Type for TMP_190

Name: TMP_190 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
balance_1(uint256) := TMP_190(uint256)
Finance type key: (-1, -1)
[i]Type for balance

Name: balance Function: __balance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token1_43', 'token0_40', 'token1_32', 'token0_35'])
[i]Type for token

Name: token Function: __balance
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
bento_2(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: __balance
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_59 (->None) := 4152920812(uint256)
Finance type key: (-1, -1)
[i]Type for REF_59

Name: REF_59 Function: __balance
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4152920812
Fields: 
Finance Type: undef
TMP_188 = CONVERT this to address
[i]Type for TMP_188

Name: TMP_188 Function: __balance
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_189(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_59,token_1,TMP_188)
[i]Type for TMP_189

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_21(bool,bytes) = LOW_LEVEL_CALL, dest:bento_2, function:staticcall, arguments:['TMP_189']  
[i]Type for TUPLE_21

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_3(address) := ϕ(['bento_5', 'bento_3', 'bento_1', 'bento_2', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: __balance
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
___balance_1(bytes)= UNPACK TUPLE_21 index: 1 
[i]Type for ___balance

Name: ___balance Function: __balance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_190(uint256) = SOLIDITY_CALL abi.decode()(___balance_1,uint256)
[i]Type for TMP_190

Name: TMP_190 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
balance_1(uint256) := TMP_190(uint256)
Finance type key: (-1, -1)
[i]Type for balance

Name: balance Function: __balance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_186

Name: TMP_186 Function: _balance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_187(uint256) = INTERNAL_CALL, HybridPool._toAmount(address,uint256)(token1_44,TMP_186)
token_1(address) := ϕ(['token0_36', 'token0_38', 'token1_29', 'token0_41', 'token1_44', 'token1_33', 'token1_39', 'tokenIn_1', 'token0_29'])
[i]Type for token

Name: token Function: _toAmount
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['TMP_143', '_reserve1_1', 'amountIn_1', 'amountIn_1', 'TMP_156', '_reserve0_1', 'TMP_184', 'TMP_186'])
[i]Type for input

Name: input Function: _toAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_191 = CONVERT this to address
[i]Type for TMP_191

Name: TMP_191 Function: _toAmount
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_192 = CONVERT TMP_191 to IBentoBoxMinimal
[i]Type for TMP_192

Name: TMP_192 Function: _toAmount
Num: 
Den: 
Address: 8
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
TMP_193(uint256) = HIGH_LEVEL_CALL, dest:TMP_192(IBentoBoxMinimal), function:toAmount, arguments:['token_1', 'input_1', 'False']  
[i]Type for TMP_193

Name: TMP_193 Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
output_1(uint256) := TMP_193(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
RETURN output_1
token_1(address) := ϕ(['token0_36', 'token0_38', 'token1_29', 'token0_41', 'token1_44', 'token1_33', 'token1_39', 'tokenIn_1', 'token0_29'])
[i]Type for token

Name: token Function: _toAmount
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['TMP_143', '_reserve1_1', 'amountIn_1', 'amountIn_1', 'TMP_156', '_reserve0_1', 'TMP_184', 'TMP_186'])
[i]Type for input

Name: input Function: _toAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_191 = CONVERT this to address
[i]Type for TMP_191

Name: TMP_191 Function: _toAmount
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_192 = CONVERT TMP_191 to IBentoBoxMinimal
[i]Type for TMP_192

Name: TMP_192 Function: _toAmount
Num: 
Den: 
Address: 8
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
TMP_193(uint256) = HIGH_LEVEL_CALL, dest:TMP_192(IBentoBoxMinimal), function:toAmount, arguments:['token_1', 'input_1', 'False']  
[i]Type for TMP_193

Name: TMP_193 Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
output_1(uint256) := TMP_193(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
RETURN output_1
[i]Type for TMP_187

Name: TMP_187 Function: _balance
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
balance1_1(uint256) := TMP_187(uint256)
Finance type key: (-1, -1)
[i]Type for balance1

Name: balance1 Function: _balance
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
RETURN balance0_1,balance1_1
[i]Type for TUPLE_7

Name: TUPLE_7 Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
balance0_1(uint256)= UNPACK TUPLE_7 index: 0 
[i]Type for balance0

Name: balance0 Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
balance1_1(uint256)= UNPACK TUPLE_7 index: 1 
[i]Type for balance1

Name: balance1 Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
_totalSupply_1(uint256) := totalSupply_8(uint256)
Finance type key: (30, -1)
[i]Type for _totalSupply

Name: _totalSupply Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
TMP_57(uint256) = balance0_1 (c)- _reserve0_1
[i]Type for TMP_57

Name: TMP_57 Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
amount0_1(uint256) := TMP_57(uint256)
Finance type key: (-1, -1)
[i]Type for amount0

Name: amount0 Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_58(uint256) = balance1_1 (c)- _reserve1_1
[i]Type for TMP_58

Name: TMP_58 Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
amount1_1(uint256) := TMP_58(uint256)
Finance type key: (-1, -1)
[i]Type for amount1

Name: amount1 Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_8(uint256,uint256) = INTERNAL_CALL, HybridPool._nonOptimalMintFee(uint256,uint256,uint256,uint256)(amount0_1,amount1_1,_reserve0_1,_reserve1_1)
_amount0_1(uint256) := ϕ(['amount0_1'])
[i]Type for _amount0

Name: _amount0 Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_amount1_1(uint256) := ϕ(['amount1_1'])
[i]Type for _amount1

Name: _amount1 Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_reserve0_1(uint256) := ϕ(['_reserve0_1'])
[i]Type for _reserve0

Name: _reserve0 Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
_reserve1_1(uint256) := ϕ(['_reserve1_1'])
[i]Type for _reserve1

Name: _reserve1 Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
MAX_FEE_8(uint256) := ϕ(['MAX_FEE_5', 'MAX_FEE_0', 'MAX_FEE_6', 'MAX_FEE_11'])
[i]Type for MAX_FEE

Name: MAX_FEE Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
swapFee_8(uint256) := ϕ(['swapFee_0', 'swapFee_5', 'swapFee_1', 'swapFee_11', 'swapFee_6'])
[i]Type for swapFee

Name: swapFee Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: simple fee ratio
TMP_279(bool) = _reserve0_1 == 0
[i]Type for TMP_279

Name: TMP_279 Function: _nonOptimalMintFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_280(bool) = _reserve1_1 == 0
[i]Type for TMP_280

Name: TMP_280 Function: _nonOptimalMintFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_281(bool) = TMP_279 || TMP_280
[i]Type for TMP_281

Name: TMP_281 Function: _nonOptimalMintFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_282(uint256) = _amount0_1 (c)* _reserve1_1
[i]Type for TMP_282

Name: TMP_282 Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_283(uint256) = TMP_282 (c)/ _reserve0_1
[i]Type for TMP_283

Name: TMP_283 Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
amount1Optimal_1(uint256) := TMP_283(uint256)
Finance type key: (-1, -1)
[i]Type for amount1Optimal

Name: amount1Optimal Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_284(bool) = amount1Optimal_1 <= _amount1_1
[i]Type for TMP_284

Name: TMP_284 Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_289(uint256) = _amount1_1 (c)* _reserve0_1
[i]Type for TMP_289

Name: TMP_289 Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_290(uint256) = TMP_289 (c)/ _reserve1_1
[i]Type for TMP_290

Name: TMP_290 Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
amount0Optimal_1(uint256) := TMP_290(uint256)
Finance type key: (-1, -1)
[i]Type for amount0Optimal

Name: amount0Optimal Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_291(uint256) = _amount0_1 (c)- amount0Optimal_1
[i]Type for TMP_291

Name: TMP_291 Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_292(uint256) = swapFee_8 (c)* TMP_291
[i]Type for TMP_292

Name: TMP_292 Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
TMP_293(uint256) = 2 (c)* MAX_FEE_8
[i]Type for TMP_293

Name: TMP_293 Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_294(uint256) = TMP_292 (c)/ TMP_293
[i]Type for TMP_294

Name: TMP_294 Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
token0Fee_1(uint256) := TMP_294(uint256)
Finance type key: (12, -1)
[i]Type for token0Fee

Name: token0Fee Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
TMP_285(uint256) = _amount1_1 (c)- amount1Optimal_1
[i]Type for TMP_285

Name: TMP_285 Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_286(uint256) = swapFee_8 (c)* TMP_285
[i]Type for TMP_286

Name: TMP_286 Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
TMP_287(uint256) = 2 (c)* MAX_FEE_8
[i]Type for TMP_287

Name: TMP_287 Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_288(uint256) = TMP_286 (c)/ TMP_287
[i]Type for TMP_288

Name: TMP_288 Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
token1Fee_1(uint256) := TMP_288(uint256)
Finance type key: (12, -1)
[i]Type for token1Fee

Name: token1Fee Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
token0Fee_2(uint256) := ϕ(['token0Fee_1', 'token0Fee_0'])
[i]Type for token0Fee

Name: token0Fee Function: _nonOptimalMintFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
token1Fee_2(uint256) := ϕ(['token1Fee_1', 'token1Fee_0'])
[i]Type for token1Fee

Name: token1Fee Function: _nonOptimalMintFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
RETURN token0Fee_2,token1Fee_2
RETURN 0,0
_amount0_1(uint256) := ϕ(['amount0_1'])
[i]Type for _amount0

Name: _amount0 Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_amount1_1(uint256) := ϕ(['amount1_1'])
[i]Type for _amount1

Name: _amount1 Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_reserve0_1(uint256) := ϕ(['_reserve0_1'])
[i]Type for _reserve0

Name: _reserve0 Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
_reserve1_1(uint256) := ϕ(['_reserve1_1'])
[i]Type for _reserve1

Name: _reserve1 Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
MAX_FEE_8(uint256) := ϕ(['MAX_FEE_5', 'MAX_FEE_0', 'MAX_FEE_6', 'MAX_FEE_11'])
[i]Type for MAX_FEE

Name: MAX_FEE Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
swapFee_8(uint256) := ϕ(['swapFee_0', 'swapFee_5', 'swapFee_1', 'swapFee_11', 'swapFee_6'])
[i]Type for swapFee

Name: swapFee Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: simple fee ratio
TMP_279(bool) = _reserve0_1 == 0
[i]Type for TMP_279

Name: TMP_279 Function: _nonOptimalMintFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_280(bool) = _reserve1_1 == 0
[i]Type for TMP_280

Name: TMP_280 Function: _nonOptimalMintFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_281(bool) = TMP_279 || TMP_280
[i]Type for TMP_281

Name: TMP_281 Function: _nonOptimalMintFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_282(uint256) = _amount0_1 (c)* _reserve1_1
[i]Type for TMP_282

Name: TMP_282 Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_283(uint256) = TMP_282 (c)/ _reserve0_1
[i]Type for TMP_283

Name: TMP_283 Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
amount1Optimal_1(uint256) := TMP_283(uint256)
Finance type key: (-1, -1)
[i]Type for amount1Optimal

Name: amount1Optimal Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_284(bool) = amount1Optimal_1 <= _amount1_1
[i]Type for TMP_284

Name: TMP_284 Function: _nonOptimalMintFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_289(uint256) = _amount1_1 (c)* _reserve0_1
[i]Type for TMP_289

Name: TMP_289 Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_290(uint256) = TMP_289 (c)/ _reserve1_1
[i]Type for TMP_290

Name: TMP_290 Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
amount0Optimal_1(uint256) := TMP_290(uint256)
Finance type key: (-1, -1)
[i]Type for amount0Optimal

Name: amount0Optimal Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_291(uint256) = _amount0_1 (c)- amount0Optimal_1
[i]Type for TMP_291

Name: TMP_291 Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_292(uint256) = swapFee_8 (c)* TMP_291
[i]Type for TMP_292

Name: TMP_292 Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
TMP_293(uint256) = 2 (c)* MAX_FEE_8
[i]Type for TMP_293

Name: TMP_293 Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_294(uint256) = TMP_292 (c)/ TMP_293
[i]Type for TMP_294

Name: TMP_294 Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
token0Fee_1(uint256) := TMP_294(uint256)
Finance type key: (12, -1)
[i]Type for token0Fee

Name: token0Fee Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
TMP_285(uint256) = _amount1_1 (c)- amount1Optimal_1
[i]Type for TMP_285

Name: TMP_285 Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_286(uint256) = swapFee_8 (c)* TMP_285
[i]Type for TMP_286

Name: TMP_286 Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
TMP_287(uint256) = 2 (c)* MAX_FEE_8
[i]Type for TMP_287

Name: TMP_287 Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_288(uint256) = TMP_286 (c)/ TMP_287
[i]Type for TMP_288

Name: TMP_288 Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
token1Fee_1(uint256) := TMP_288(uint256)
Finance type key: (12, -1)
[i]Type for token1Fee

Name: token1Fee Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
token0Fee_2(uint256) := ϕ(['token0Fee_1', 'token0Fee_0'])
[i]Type for token0Fee

Name: token0Fee Function: _nonOptimalMintFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
token1Fee_2(uint256) := ϕ(['token1Fee_1', 'token1Fee_0'])
[i]Type for token1Fee

Name: token1Fee Function: _nonOptimalMintFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
RETURN token0Fee_2,token1Fee_2
RETURN 0,0
[i]Type for TUPLE_8

Name: TUPLE_8 Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
fee0_1(uint256)= UNPACK TUPLE_8 index: 0 
[i]Type for fee0

Name: fee0 Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
fee1_1(uint256)= UNPACK TUPLE_8 index: 1 
[i]Type for fee1

Name: fee1 Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_59(uint256) = balance0_1 (c)- fee0_1
[i]Type for TMP_59

Name: TMP_59 Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_60(uint256) = balance1_1 (c)- fee1_1
[i]Type for TMP_60

Name: TMP_60 Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_61(uint256) = INTERNAL_CALL, HybridPool._computeLiquidity(uint256,uint256)(TMP_59,TMP_60)
_reserve0_1(uint256) := ϕ(['TMP_59', '_reserve0_1'])
[i]Type for _reserve0

Name: _reserve0 Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_reserve1_1(uint256) := ϕ(['TMP_60', '_reserve1_1'])
[i]Type for _reserve1

Name: _reserve1 Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token0PrecisionMultiplier_5(uint256) := ϕ(['token0PrecisionMultiplier_0', 'token0PrecisionMultiplier_1', 'token0PrecisionMultiplier_4'])
[i]Type for token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
token1PrecisionMultiplier_5(uint256) := ϕ(['token1PrecisionMultiplier_4', 'token1PrecisionMultiplier_1', 'token1PrecisionMultiplier_0'])
[i]Type for token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_212(uint256) = _reserve0_1 (c)* token0PrecisionMultiplier_5
[i]Type for TMP_212

Name: TMP_212 Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
xp0_1(uint256) := TMP_212(uint256)
Finance type key: (-1, -1)
[i]Type for xp0

Name: xp0 Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_213(uint256) = _reserve1_1 (c)* token1PrecisionMultiplier_5
[i]Type for TMP_213

Name: TMP_213 Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
xp1_1(uint256) := TMP_213(uint256)
Finance type key: (-1, -1)
[i]Type for xp1

Name: xp1 Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_214(uint256) = INTERNAL_CALL, HybridPool._computeLiquidityFromAdjustedBalances(uint256,uint256)(xp0_1,xp1_1)
xp0_1(uint256) := ϕ(['xpIn_3', 'xp0_1'])
[i]Type for xp0

Name: xp0 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
xp1_1(uint256) := ϕ(['xpOut_3', 'xp1_1'])
[i]Type for xp1

Name: xp1 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
MAX_LOOP_LIMIT_1(uint256) := ϕ(['MAX_LOOP_LIMIT_0'])
[i]Type for MAX_LOOP_LIMIT

Name: MAX_LOOP_LIMIT Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
N_A_2(uint256) := ϕ(['N_A_0', 'N_A_1'])
[i]Type for N_A

Name: N_A Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
A_PRECISION_1(uint256) := ϕ(['A_PRECISION_0'])
[i]Type for A_PRECISION

Name: A_PRECISION Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_215(uint256) = xp0_1 (c)+ xp1_1
[i]Type for TMP_215

Name: TMP_215 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
s_1(uint256) := TMP_215(uint256)
Finance type key: (-1, -1)
[i]Type for s

Name: s Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
TMP_216(bool) = s_1 == 0
[i]Type for TMP_216

Name: TMP_216 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
computed_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for computed

Name: computed Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
D_1(uint256) := s_1(uint256)
Finance type key: (-1, -1)
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
i_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
D_2(uint256) := ϕ(['D_3', 'D_1'])
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_2(uint256) := ϕ(['i_3', 'i_1'])
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_217(bool) = i_2 < MAX_LOOP_LIMIT_1
[i]Type for TMP_217

Name: TMP_217 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_218(uint256) = D_2 (c)* D_2
[i]Type for TMP_218

Name: TMP_218 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_219(uint256) = TMP_218 (c)/ xp0_1
[i]Type for TMP_219

Name: TMP_219 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_220(uint256) = TMP_219 (c)* D_2
[i]Type for TMP_220

Name: TMP_220 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_221(uint256) = TMP_220 (c)/ xp1_1
[i]Type for TMP_221

Name: TMP_221 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
TMP_222(uint256) = TMP_221 (c)/ 4
[i]Type for TMP_222

Name: TMP_222 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
dP_1(uint256) := TMP_222(uint256)
Finance type key: (-1, -1)
[i]Type for dP

Name: dP Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
prevD_1(uint256) := D_2(uint256)
Finance type key: (-1, -1)
[i]Type for prevD

Name: prevD Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
computed_2(uint256) := D_3(uint256)
Finance type key: (-1, -1)
[i]Type for computed

Name: computed Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_223(uint256) = N_A_2 (c)* s_1
[i]Type for TMP_223

Name: TMP_223 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 40
Fields: 
Finance Type: undef
TMP_224(uint256) = TMP_223 (c)/ A_PRECISION_1
[i]Type for TMP_224

Name: TMP_224 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 40
Fields: 
Finance Type: undef
TMP_225(uint256) = 2 (c)* dP_1
[i]Type for TMP_225

Name: TMP_225 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_226(uint256) = TMP_224 (c)+ TMP_225
[i]Type for TMP_226

Name: TMP_226 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 40
Fields: 
Finance Type: undef
TMP_227(uint256) = TMP_226 (c)* D_2
[i]Type for TMP_227

Name: TMP_227 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 40
Fields: 
Finance Type: undef
TMP_228(uint256) = N_A_2 (c)/ A_PRECISION_1
[i]Type for TMP_228

Name: TMP_228 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_229(uint256) = TMP_228 (c)- 1
[i]Type for TMP_229

Name: TMP_229 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
TMP_230(uint256) = TMP_229 (c)* D_2
[i]Type for TMP_230

Name: TMP_230 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
TMP_231(uint256) = 3 (c)* dP_1
[i]Type for TMP_231

Name: TMP_231 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_232(uint256) = TMP_230 (c)+ TMP_231
[i]Type for TMP_232

Name: TMP_232 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
TMP_233(uint256) = TMP_227 (c)/ TMP_232
[i]Type for TMP_233

Name: TMP_233 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 40
Fields: 
Finance Type: undef
D_3(uint256) := TMP_233(uint256)
Finance type key: (-1, -1)
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 40
Fields: 
Finance Type: undef
TMP_234(bool) = LIBRARY_CALL, dest:MathUtils, function:MathUtils.within1(uint256,uint256), arguments:['D_3', 'prevD_1'] 
[i]Type for TMP_234

Name: TMP_234 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_235(uint256) := i_2(uint256)
Finance type key: (-1, -1)
[i]Type for TMP_235

Name: TMP_235 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_3(uint256) = i_2 (c)+ 1
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
xp0_1(uint256) := ϕ(['xpIn_3', 'xp0_1'])
[i]Type for xp0

Name: xp0 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
xp1_1(uint256) := ϕ(['xpOut_3', 'xp1_1'])
[i]Type for xp1

Name: xp1 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
MAX_LOOP_LIMIT_1(uint256) := ϕ(['MAX_LOOP_LIMIT_0'])
[i]Type for MAX_LOOP_LIMIT

Name: MAX_LOOP_LIMIT Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
N_A_2(uint256) := ϕ(['N_A_0', 'N_A_1'])
[i]Type for N_A

Name: N_A Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
A_PRECISION_1(uint256) := ϕ(['A_PRECISION_0'])
[i]Type for A_PRECISION

Name: A_PRECISION Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_215(uint256) = xp0_1 (c)+ xp1_1
[i]Type for TMP_215

Name: TMP_215 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
s_1(uint256) := TMP_215(uint256)
Finance type key: (-1, -1)
[i]Type for s

Name: s Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
TMP_216(bool) = s_1 == 0
[i]Type for TMP_216

Name: TMP_216 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
computed_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for computed

Name: computed Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
D_1(uint256) := s_1(uint256)
Finance type key: (-1, -1)
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
i_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
D_2(uint256) := ϕ(['D_3', 'D_1'])
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_2(uint256) := ϕ(['i_3', 'i_1'])
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_217(bool) = i_2 < MAX_LOOP_LIMIT_1
[i]Type for TMP_217

Name: TMP_217 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_218(uint256) = D_2 (c)* D_2
[i]Type for TMP_218

Name: TMP_218 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_219(uint256) = TMP_218 (c)/ xp0_1
[i]Type for TMP_219

Name: TMP_219 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_220(uint256) = TMP_219 (c)* D_2
[i]Type for TMP_220

Name: TMP_220 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_221(uint256) = TMP_220 (c)/ xp1_1
[i]Type for TMP_221

Name: TMP_221 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
TMP_222(uint256) = TMP_221 (c)/ 4
[i]Type for TMP_222

Name: TMP_222 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
dP_1(uint256) := TMP_222(uint256)
Finance type key: (-1, -1)
[i]Type for dP

Name: dP Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
prevD_1(uint256) := D_2(uint256)
Finance type key: (-1, -1)
[i]Type for prevD

Name: prevD Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
computed_2(uint256) := D_3(uint256)
Finance type key: (-1, -1)
[i]Type for computed

Name: computed Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 40
Fields: 
Finance Type: undef
TMP_223(uint256) = N_A_2 (c)* s_1
[i]Type for TMP_223

Name: TMP_223 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 40
Fields: 
Finance Type: undef
TMP_224(uint256) = TMP_223 (c)/ A_PRECISION_1
[i]Type for TMP_224

Name: TMP_224 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 40
Fields: 
Finance Type: undef
TMP_225(uint256) = 2 (c)* dP_1
[i]Type for TMP_225

Name: TMP_225 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_226(uint256) = TMP_224 (c)+ TMP_225
[i]Type for TMP_226

Name: TMP_226 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 40
Fields: 
Finance Type: undef
TMP_227(uint256) = TMP_226 (c)* D_2
[i]Type for TMP_227

Name: TMP_227 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 40
Fields: 
Finance Type: undef
TMP_228(uint256) = N_A_2 (c)/ A_PRECISION_1
[i]Type for TMP_228

Name: TMP_228 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_229(uint256) = TMP_228 (c)- 1
[i]Type for TMP_229

Name: TMP_229 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
TMP_230(uint256) = TMP_229 (c)* D_2
[i]Type for TMP_230

Name: TMP_230 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
TMP_231(uint256) = 3 (c)* dP_1
[i]Type for TMP_231

Name: TMP_231 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_232(uint256) = TMP_230 (c)+ TMP_231
[i]Type for TMP_232

Name: TMP_232 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
TMP_233(uint256) = TMP_227 (c)/ TMP_232
[i]Type for TMP_233

Name: TMP_233 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 40
Fields: 
Finance Type: undef
D_3(uint256) := TMP_233(uint256)
Finance type key: (-1, -1)
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 40
Fields: 
Finance Type: undef
TMP_234(bool) = LIBRARY_CALL, dest:MathUtils, function:MathUtils.within1(uint256,uint256), arguments:['D_3', 'prevD_1'] 
[i]Type for TMP_234

Name: TMP_234 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_235(uint256) := i_2(uint256)
Finance type key: (-1, -1)
[i]Type for TMP_235

Name: TMP_235 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_3(uint256) = i_2 (c)+ 1
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
xp0_1(uint256) := ϕ(['xpIn_3', 'xp0_1'])
[i]Type for xp0

Name: xp0 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
xp1_1(uint256) := ϕ(['xpOut_3', 'xp1_1'])
[i]Type for xp1

Name: xp1 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
MAX_LOOP_LIMIT_1(uint256) := ϕ(['MAX_LOOP_LIMIT_0'])
[i]Type for MAX_LOOP_LIMIT

Name: MAX_LOOP_LIMIT Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
N_A_2(uint256) := ϕ(['N_A_0', 'N_A_1'])
[i]Type for N_A

Name: N_A Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
A_PRECISION_1(uint256) := ϕ(['A_PRECISION_0'])
[i]Type for A_PRECISION

Name: A_PRECISION Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_215(uint256) = xp0_1 (c)+ xp1_1
[i]Type for TMP_215

Name: TMP_215 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
s_1(uint256) := TMP_215(uint256)
Finance type key: (-1, -1)
[i]Type for s

Name: s Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
TMP_216(bool) = s_1 == 0
[i]Type for TMP_216

Name: TMP_216 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
computed_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for computed

Name: computed Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
D_1(uint256) := s_1(uint256)
Finance type key: (-1, -1)
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
i_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
D_2(uint256) := ϕ(['D_3', 'D_1'])
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_2(uint256) := ϕ(['i_3', 'i_1'])
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_217(bool) = i_2 < MAX_LOOP_LIMIT_1
[i]Type for TMP_217

Name: TMP_217 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_218(uint256) = D_2 (c)* D_2
[i]Type for TMP_218

Name: TMP_218 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_219(uint256) = TMP_218 (c)/ xp0_1
[i]Type for TMP_219

Name: TMP_219 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_220(uint256) = TMP_219 (c)* D_2
[i]Type for TMP_220

Name: TMP_220 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_221(uint256) = TMP_220 (c)/ xp1_1
[i]Type for TMP_221

Name: TMP_221 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
TMP_222(uint256) = TMP_221 (c)/ 4
[i]Type for TMP_222

Name: TMP_222 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
dP_1(uint256) := TMP_222(uint256)
Finance type key: (-1, -1)
[i]Type for dP

Name: dP Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
prevD_1(uint256) := D_2(uint256)
Finance type key: (-1, -1)
[i]Type for prevD

Name: prevD Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
computed_2(uint256) := D_3(uint256)
Finance type key: (-1, -1)
[i]Type for computed

Name: computed Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 40
Fields: 
Finance Type: undef
TMP_223(uint256) = N_A_2 (c)* s_1
[i]Type for TMP_223

Name: TMP_223 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 40
Fields: 
Finance Type: undef
TMP_224(uint256) = TMP_223 (c)/ A_PRECISION_1
[i]Type for TMP_224

Name: TMP_224 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 40
Fields: 
Finance Type: undef
TMP_225(uint256) = 2 (c)* dP_1
[i]Type for TMP_225

Name: TMP_225 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_226(uint256) = TMP_224 (c)+ TMP_225
[i]Type for TMP_226

Name: TMP_226 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 40
Fields: 
Finance Type: undef
TMP_227(uint256) = TMP_226 (c)* D_2
[i]Type for TMP_227

Name: TMP_227 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 40
Fields: 
Finance Type: undef
TMP_228(uint256) = N_A_2 (c)/ A_PRECISION_1
[i]Type for TMP_228

Name: TMP_228 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_229(uint256) = TMP_228 (c)- 1
[i]Type for TMP_229

Name: TMP_229 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
TMP_230(uint256) = TMP_229 (c)* D_2
[i]Type for TMP_230

Name: TMP_230 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
TMP_231(uint256) = 3 (c)* dP_1
[i]Type for TMP_231

Name: TMP_231 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_232(uint256) = TMP_230 (c)+ TMP_231
[i]Type for TMP_232

Name: TMP_232 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
TMP_233(uint256) = TMP_227 (c)/ TMP_232
[i]Type for TMP_233

Name: TMP_233 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 40
Fields: 
Finance Type: undef
D_3(uint256) := TMP_233(uint256)
Finance type key: (-1, -1)
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 40
Fields: 
Finance Type: undef
TMP_234(bool) = LIBRARY_CALL, dest:MathUtils, function:MathUtils.within1(uint256,uint256), arguments:['D_3', 'prevD_1'] 
[i]Type for TMP_234

Name: TMP_234 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_235(uint256) := i_2(uint256)
Finance type key: (-1, -1)
[i]Type for TMP_235

Name: TMP_235 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_3(uint256) = i_2 (c)+ 1
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
xp0_1(uint256) := ϕ(['xpIn_3', 'xp0_1'])
[i]Type for xp0

Name: xp0 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
xp1_1(uint256) := ϕ(['xpOut_3', 'xp1_1'])
[i]Type for xp1

Name: xp1 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
MAX_LOOP_LIMIT_1(uint256) := ϕ(['MAX_LOOP_LIMIT_0'])
[i]Type for MAX_LOOP_LIMIT

Name: MAX_LOOP_LIMIT Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
N_A_2(uint256) := ϕ(['N_A_0', 'N_A_1'])
[i]Type for N_A

Name: N_A Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
A_PRECISION_1(uint256) := ϕ(['A_PRECISION_0'])
[i]Type for A_PRECISION

Name: A_PRECISION Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_215(uint256) = xp0_1 (c)+ xp1_1
[i]Type for TMP_215

Name: TMP_215 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
s_1(uint256) := TMP_215(uint256)
Finance type key: (-1, -1)
[i]Type for s

Name: s Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
TMP_216(bool) = s_1 == 0
[i]Type for TMP_216

Name: TMP_216 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
computed_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for computed

Name: computed Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
D_1(uint256) := s_1(uint256)
Finance type key: (-1, -1)
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
i_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
D_2(uint256) := ϕ(['D_3', 'D_1'])
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_2(uint256) := ϕ(['i_3', 'i_1'])
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_217(bool) = i_2 < MAX_LOOP_LIMIT_1
[i]Type for TMP_217

Name: TMP_217 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_218(uint256) = D_2 (c)* D_2
[i]Type for TMP_218

Name: TMP_218 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_219(uint256) = TMP_218 (c)/ xp0_1
[i]Type for TMP_219

Name: TMP_219 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_220(uint256) = TMP_219 (c)* D_2
[i]Type for TMP_220

Name: TMP_220 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_221(uint256) = TMP_220 (c)/ xp1_1
[i]Type for TMP_221

Name: TMP_221 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
TMP_222(uint256) = TMP_221 (c)/ 4
[i]Type for TMP_222

Name: TMP_222 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
dP_1(uint256) := TMP_222(uint256)
Finance type key: (-1, -1)
[i]Type for dP

Name: dP Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
prevD_1(uint256) := D_2(uint256)
Finance type key: (-1, -1)
[i]Type for prevD

Name: prevD Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
computed_2(uint256) := D_3(uint256)
Finance type key: (-1, -1)
[i]Type for computed

Name: computed Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 40
Fields: 
Finance Type: undef
TMP_223(uint256) = N_A_2 (c)* s_1
[i]Type for TMP_223

Name: TMP_223 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 40
Fields: 
Finance Type: undef
TMP_224(uint256) = TMP_223 (c)/ A_PRECISION_1
[i]Type for TMP_224

Name: TMP_224 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 40
Fields: 
Finance Type: undef
TMP_225(uint256) = 2 (c)* dP_1
[i]Type for TMP_225

Name: TMP_225 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_226(uint256) = TMP_224 (c)+ TMP_225
[i]Type for TMP_226

Name: TMP_226 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 40
Fields: 
Finance Type: undef
TMP_227(uint256) = TMP_226 (c)* D_2
[i]Type for TMP_227

Name: TMP_227 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 40
Fields: 
Finance Type: undef
TMP_228(uint256) = N_A_2 (c)/ A_PRECISION_1
[i]Type for TMP_228

Name: TMP_228 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_229(uint256) = TMP_228 (c)- 1
[i]Type for TMP_229

Name: TMP_229 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
TMP_230(uint256) = TMP_229 (c)* D_2
[i]Type for TMP_230

Name: TMP_230 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
TMP_231(uint256) = 3 (c)* dP_1
[i]Type for TMP_231

Name: TMP_231 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_232(uint256) = TMP_230 (c)+ TMP_231
[i]Type for TMP_232

Name: TMP_232 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
TMP_233(uint256) = TMP_227 (c)/ TMP_232
[i]Type for TMP_233

Name: TMP_233 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 40
Fields: 
Finance Type: undef
D_3(uint256) := TMP_233(uint256)
Finance type key: (-1, -1)
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 40
Fields: 
Finance Type: undef
TMP_234(bool) = LIBRARY_CALL, dest:MathUtils, function:MathUtils.within1(uint256,uint256), arguments:['D_3', 'prevD_1'] 
[i]Type for TMP_234

Name: TMP_234 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_235(uint256) := i_2(uint256)
Finance type key: (-1, -1)
[i]Type for TMP_235

Name: TMP_235 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_3(uint256) = i_2 (c)+ 1
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
[i]Type for TMP_214

Name: TMP_214 Function: _computeLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
liquidity_1(uint256) := TMP_214(uint256)
Finance type key: (-1, -1)
[i]Type for liquidity

Name: liquidity Function: _computeLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_reserve0_1(uint256) := ϕ(['TMP_59', '_reserve0_1'])
[i]Type for _reserve0

Name: _reserve0 Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_reserve1_1(uint256) := ϕ(['TMP_60', '_reserve1_1'])
[i]Type for _reserve1

Name: _reserve1 Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token0PrecisionMultiplier_5(uint256) := ϕ(['token0PrecisionMultiplier_0', 'token0PrecisionMultiplier_1', 'token0PrecisionMultiplier_4'])
[i]Type for token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
token1PrecisionMultiplier_5(uint256) := ϕ(['token1PrecisionMultiplier_4', 'token1PrecisionMultiplier_1', 'token1PrecisionMultiplier_0'])
[i]Type for token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_212(uint256) = _reserve0_1 (c)* token0PrecisionMultiplier_5
[i]Type for TMP_212

Name: TMP_212 Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
xp0_1(uint256) := TMP_212(uint256)
Finance type key: (-1, -1)
[i]Type for xp0

Name: xp0 Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_213(uint256) = _reserve1_1 (c)* token1PrecisionMultiplier_5
[i]Type for TMP_213

Name: TMP_213 Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
xp1_1(uint256) := TMP_213(uint256)
Finance type key: (-1, -1)
[i]Type for xp1

Name: xp1 Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_214(uint256) = INTERNAL_CALL, HybridPool._computeLiquidityFromAdjustedBalances(uint256,uint256)(xp0_1,xp1_1)
[i]Type for TMP_214

Name: TMP_214 Function: _computeLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
liquidity_1(uint256) := TMP_214(uint256)
Finance type key: (-1, -1)
[i]Type for liquidity

Name: liquidity Function: _computeLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_61

Name: TMP_61 Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
newLiq_1(uint256) := TMP_61(uint256)
Finance type key: (-1, -1)
[i]Type for newLiq

Name: newLiq Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_62(bool) = _totalSupply_1 == 0
[i]Type for TMP_62

Name: TMP_62 Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_66(uint256) = INTERNAL_CALL, HybridPool._computeLiquidity(uint256,uint256)(_reserve0_1,_reserve1_1)
[i]Type for TMP_66

Name: TMP_66 Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
oldLiq_1(uint256) := TMP_66(uint256)
Finance type key: (-1, -1)
[i]Type for oldLiq

Name: oldLiq Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_63(uint256) = newLiq_1 (c)- MINIMUM_LIQUIDITY_6
[i]Type for TMP_63

Name: TMP_63 Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
liquidity_2(uint256) := TMP_63(uint256)
Finance type key: (-1, -1)
[i]Type for liquidity

Name: liquidity Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_67(uint256) = newLiq_1 (c)- oldLiq_1
[i]Type for TMP_67

Name: TMP_67 Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_68(uint256) = TMP_67 (c)* _totalSupply_1
[i]Type for TMP_68

Name: TMP_68 Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
TMP_69(uint256) = TMP_68 (c)/ oldLiq_1
[i]Type for TMP_69

Name: TMP_69 Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
liquidity_1(uint256) := TMP_69(uint256)
Finance type key: (30, -1)
[i]Type for liquidity

Name: liquidity Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
TMP_64 = CONVERT 0 to address
[i]Type for TMP_64

Name: TMP_64 Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
INTERNAL_CALL, TridentERC20._mint(address,uint256)(TMP_64,MINIMUM_LIQUIDITY_6)
recipient_1(address) := ϕ(['recipient_1', 'TMP_64'])
[i]Type for recipient

Name: recipient Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: recipient
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['MINIMUM_LIQUIDITY_6', 'liquidity_3'])
[i]Type for amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
totalSupply_1(uint256) := ϕ(['totalSupply_15', 'totalSupply_8', 'totalSupply_0', 'totalSupply_4', 'totalSupply_11', 'totalSupply_2'])
[i]Type for totalSupply

Name: totalSupply Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
balanceOf_7(mapping(address => uint256)) := ϕ(['balanceOf_0', 'balanceOf_10', 'balanceOf_6', 'balanceOf_13', 'balanceOf_17', 'balanceOf_3', 'balanceOf_8'])
[i]Type for balanceOf

Name: balanceOf Function: _mint
Num: 3
Den: -1
Address: 4
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
totalSupply_2(uint256) = totalSupply_1 (c)+ amount_1
[i]Type for totalSupply

Name: totalSupply Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
REF_16(uint256) -> balanceOf_7[recipient_1]
[i]Type for REF_16

Name: balanceOf Function: _mint
Num: 3
Den: -1
Address: 4
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
balanceOf_8(mapping(address => uint256)) := ϕ(['balanceOf_7'])
[i]Type for balanceOf

Name: balanceOf Function: _mint
Num: 3
Den: -1
Address: 4
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
REF_16(-> balanceOf_8) = REF_16 + amount_1
[i]Type for REF_16

Name: REF_16 Function: _mint
Num: 3
Den: -1
Address: 4
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_28 = CONVERT 0 to address
[i]Type for TMP_28

Name: TMP_28 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
recipient_1(address) := ϕ(['recipient_1', 'TMP_64'])
[i]Type for recipient

Name: recipient Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: recipient
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['MINIMUM_LIQUIDITY_6', 'liquidity_3'])
[i]Type for amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
totalSupply_1(uint256) := ϕ(['totalSupply_15', 'totalSupply_8', 'totalSupply_0', 'totalSupply_4', 'totalSupply_11', 'totalSupply_2'])
[i]Type for totalSupply

Name: totalSupply Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
balanceOf_7(mapping(address => uint256)) := ϕ(['balanceOf_0', 'balanceOf_10', 'balanceOf_6', 'balanceOf_13', 'balanceOf_17', 'balanceOf_3', 'balanceOf_8'])
[i]Type for balanceOf

Name: balanceOf Function: _mint
Num: 3
Den: -1
Address: 4
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
totalSupply_2(uint256) = totalSupply_1 (c)+ amount_1
[i]Type for totalSupply

Name: totalSupply Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
REF_16(uint256) -> balanceOf_7[recipient_1]
[i]Type for REF_16

Name: balanceOf Function: _mint
Num: 3
Den: -1
Address: 4
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
balanceOf_8(mapping(address => uint256)) := ϕ(['balanceOf_7'])
[i]Type for balanceOf

Name: balanceOf Function: _mint
Num: 3
Den: -1
Address: 4
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
REF_16(-> balanceOf_8) = REF_16 + amount_1
[i]Type for REF_16

Name: REF_16 Function: _mint
Num: 3
Den: -1
Address: 4
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_28 = CONVERT 0 to address
[i]Type for TMP_28

Name: TMP_28 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
liquidity_3(uint256) := ϕ(['liquidity_1', 'liquidity_2'])
[i]Type for liquidity

Name: liquidity Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
TMP_70(bool) = liquidity_3 != 0
[i]Type for TMP_70

Name: TMP_70 Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_71(None) = SOLIDITY_CALL require(bool,string)(TMP_70,INSUFFICIENT_LIQUIDITY_MINTED)
[i]Type for TMP_71

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
INTERNAL_CALL, TridentERC20._mint(address,uint256)(recipient_1,liquidity_3)
recipient_1(address) := ϕ(['recipient_1', 'TMP_64'])
[i]Type for recipient

Name: recipient Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: recipient
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['MINIMUM_LIQUIDITY_6', 'liquidity_3'])
[i]Type for amount

Name: amount Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
totalSupply_1(uint256) := ϕ(['totalSupply_15', 'totalSupply_8', 'totalSupply_0', 'totalSupply_4', 'totalSupply_11', 'totalSupply_2'])
[i]Type for totalSupply

Name: totalSupply Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
balanceOf_7(mapping(address => uint256)) := ϕ(['balanceOf_0', 'balanceOf_10', 'balanceOf_6', 'balanceOf_13', 'balanceOf_17', 'balanceOf_3', 'balanceOf_8'])
[i]Type for balanceOf

Name: balanceOf Function: _mint
Num: 3
Den: -1
Address: 4
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
totalSupply_2(uint256) = totalSupply_1 (c)+ amount_1
Finance type key: (30, 30)
[i]Type for totalSupply

Name: totalSupply Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
REF_16(uint256) -> balanceOf_7[recipient_1]
[i]Type for REF_16

Name: balanceOf Function: _mint
Num: 3
Den: -1
Address: 4
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
balanceOf_8(mapping(address => uint256)) := ϕ(['balanceOf_7'])
[i]Type for balanceOf

Name: balanceOf Function: _mint
Num: 3
Den: -1
Address: 4
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
REF_16(-> balanceOf_8) = REF_16 + amount_1
Finance type key: (0, 30)
[i]Type for REF_16

Name: REF_16 Function: _mint
Num: 3
Den: -1
Address: 4
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
TMP_28 = CONVERT 0 to address
[i]Type for TMP_28

Name: TMP_28 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
recipient_1(address) := ϕ(['recipient_1', 'TMP_64'])
[i]Type for recipient

Name: recipient Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: recipient
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['MINIMUM_LIQUIDITY_6', 'liquidity_3'])
[i]Type for amount

Name: amount Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
totalSupply_1(uint256) := ϕ(['totalSupply_15', 'totalSupply_8', 'totalSupply_0', 'totalSupply_4', 'totalSupply_11', 'totalSupply_2'])
[i]Type for totalSupply

Name: totalSupply Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
balanceOf_7(mapping(address => uint256)) := ϕ(['balanceOf_0', 'balanceOf_10', 'balanceOf_6', 'balanceOf_13', 'balanceOf_17', 'balanceOf_3', 'balanceOf_8'])
[i]Type for balanceOf

Name: balanceOf Function: _mint
Num: 3
Den: -1
Address: 4
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
totalSupply_2(uint256) = totalSupply_1 (c)+ amount_1
Finance type key: (30, 30)
[i]Type for totalSupply

Name: totalSupply Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
REF_16(uint256) -> balanceOf_7[recipient_1]
[i]Type for REF_16

Name: balanceOf Function: _mint
Num: 3
Den: -1
Address: 4
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
balanceOf_8(mapping(address => uint256)) := ϕ(['balanceOf_7'])
[i]Type for balanceOf

Name: balanceOf Function: _mint
Num: 3
Den: -1
Address: 4
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
REF_16(-> balanceOf_8) = REF_16 + amount_1
Finance type key: (0, 30)
[i]Type for REF_16

Name: REF_16 Function: _mint
Num: 3
Den: -1
Address: 4
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
TMP_28 = CONVERT 0 to address
[i]Type for TMP_28

Name: TMP_28 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
INTERNAL_CALL, HybridPool._updateReserves()()
TUPLE_20(uint256,uint256) = INTERNAL_CALL, HybridPool._balance()()
[i]Type for TUPLE_20

Name: TUPLE_20 Function: _updateReserves
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_reserve0_1(uint256)= UNPACK TUPLE_20 index: 0 
[i]Type for _reserve0

Name: _reserve0 Function: _updateReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
_reserve1_1(uint256)= UNPACK TUPLE_20 index: 1 
[i]Type for _reserve1

Name: _reserve1 Function: _updateReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
TMP_174(uint128) := 340282366920938463463374607431768211455(uint128)
Finance type key: (-1, -1)
[i]Type for TMP_174

Name: TMP_174 Function: _updateReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 340282366920938463463374607431768211455
Fields: 
Finance Type: undef
TMP_175(bool) = _reserve0_1 < TMP_174
[i]Type for TMP_175

Name: TMP_175 Function: _updateReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_177(uint128) := 340282366920938463463374607431768211455(uint128)
Finance type key: (-1, -1)
[i]Type for TMP_177

Name: TMP_177 Function: _updateReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 340282366920938463463374607431768211455
Fields: 
Finance Type: undef
TMP_178(bool) = _reserve1_1 < TMP_177
[i]Type for TMP_178

Name: TMP_178 Function: _updateReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_179(bool) = TMP_175 && TMP_178
[i]Type for TMP_179

Name: TMP_179 Function: _updateReserves
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_180(None) = SOLIDITY_CALL require(bool,string)(TMP_179,OVERFLOW)
[i]Type for TMP_180

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_181 = CONVERT _reserve0_1 to uint128
[i]Type for TMP_181

Name: TMP_181 Function: _updateReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
reserve0_2(uint128) := TMP_181(uint128)
Finance type key: (-1, -1)
[i]Type for reserve0

Name: reserve0 Function: _updateReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
TMP_182 = CONVERT _reserve1_1 to uint128
[i]Type for TMP_182

Name: TMP_182 Function: _updateReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
reserve1_2(uint128) := TMP_182(uint128)
Finance type key: (-1, -1)
[i]Type for reserve1

Name: reserve1 Function: _updateReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
TUPLE_20(uint256,uint256) = INTERNAL_CALL, HybridPool._balance()()
[i]Type for TUPLE_20

Name: TUPLE_20 Function: _updateReserves
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_reserve0_1(uint256)= UNPACK TUPLE_20 index: 0 
[i]Type for _reserve0

Name: _reserve0 Function: _updateReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
_reserve1_1(uint256)= UNPACK TUPLE_20 index: 1 
[i]Type for _reserve1

Name: _reserve1 Function: _updateReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
TMP_174(uint128) := 340282366920938463463374607431768211455(uint128)
Finance type key: (-1, -1)
[i]Type for TMP_174

Name: TMP_174 Function: _updateReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 340282366920938463463374607431768211455
Fields: 
Finance Type: undef
TMP_175(bool) = _reserve0_1 < TMP_174
[i]Type for TMP_175

Name: TMP_175 Function: _updateReserves
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_177(uint128) := 340282366920938463463374607431768211455(uint128)
Finance type key: (-1, -1)
[i]Type for TMP_177

Name: TMP_177 Function: _updateReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 340282366920938463463374607431768211455
Fields: 
Finance Type: undef
TMP_178(bool) = _reserve1_1 < TMP_177
[i]Type for TMP_178

Name: TMP_178 Function: _updateReserves
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_179(bool) = TMP_175 && TMP_178
[i]Type for TMP_179

Name: TMP_179 Function: _updateReserves
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_180(None) = SOLIDITY_CALL require(bool,string)(TMP_179,OVERFLOW)
[i]Type for TMP_180

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_181 = CONVERT _reserve0_1 to uint128
[i]Type for TMP_181

Name: TMP_181 Function: _updateReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
reserve0_2(uint128) := TMP_181(uint128)
Finance type key: (-1, -1)
[i]Type for reserve0

Name: reserve0 Function: _updateReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
TMP_182 = CONVERT _reserve1_1 to uint128
[i]Type for TMP_182

Name: TMP_182 Function: _updateReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
reserve1_2(uint128) := TMP_182(uint128)
Finance type key: (-1, -1)
[i]Type for reserve1

Name: reserve1 Function: _updateReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
totalSupply_5(uint256) := ϕ(['totalSupply_15', 'totalSupply_8', 'totalSupply_0', 'totalSupply_4', 'totalSupply_11', 'totalSupply_2'])
[i]Type for totalSupply

Name: totalSupply Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
MINIMUM_LIQUIDITY_1(uint256) := ϕ(['MINIMUM_LIQUIDITY_6', 'MINIMUM_LIQUIDITY_0', 'MINIMUM_LIQUIDITY_7'])
[i]Type for MINIMUM_LIQUIDITY

Name: MINIMUM_LIQUIDITY Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MODIFIER_CALL, HybridPool.lock()()
TMP_56(address) = SOLIDITY_CALL abi.decode()(data_1,address)
[i]Type for TMP_56

Name: TMP_56 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
recipient_1(address) := TMP_56(address)
Finance type key: (-1, -1)
[i]Type for recipient

Name: recipient Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_6(uint256,uint256) = INTERNAL_CALL, HybridPool._getReserves()()
[i]Type for TUPLE_6

Name: TUPLE_6 Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_reserve0_1(uint256)= UNPACK TUPLE_6 index: 0 
[i]Type for _reserve0

Name: _reserve0 Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
_reserve1_1(uint256)= UNPACK TUPLE_6 index: 1 
[i]Type for _reserve1

Name: _reserve1 Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
TUPLE_7(uint256,uint256) = INTERNAL_CALL, HybridPool._balance()()
[i]Type for TUPLE_7

Name: TUPLE_7 Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
balance0_1(uint256)= UNPACK TUPLE_7 index: 0 
[i]Type for balance0

Name: balance0 Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
balance1_1(uint256)= UNPACK TUPLE_7 index: 1 
[i]Type for balance1

Name: balance1 Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
_totalSupply_1(uint256) := totalSupply_8(uint256)
Finance type key: (30, -1)
[i]Type for _totalSupply

Name: _totalSupply Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
TMP_57(uint256) = balance0_1 (c)- _reserve0_1
[i]Type for TMP_57

Name: TMP_57 Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
amount0_1(uint256) := TMP_57(uint256)
Finance type key: (-1, -1)
[i]Type for amount0

Name: amount0 Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_58(uint256) = balance1_1 (c)- _reserve1_1
[i]Type for TMP_58

Name: TMP_58 Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
amount1_1(uint256) := TMP_58(uint256)
Finance type key: (-1, -1)
[i]Type for amount1

Name: amount1 Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_8(uint256,uint256) = INTERNAL_CALL, HybridPool._nonOptimalMintFee(uint256,uint256,uint256,uint256)(amount0_1,amount1_1,_reserve0_1,_reserve1_1)
[i]Type for TUPLE_8

Name: TUPLE_8 Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
fee0_1(uint256)= UNPACK TUPLE_8 index: 0 
[i]Type for fee0

Name: fee0 Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
fee1_1(uint256)= UNPACK TUPLE_8 index: 1 
[i]Type for fee1

Name: fee1 Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_59(uint256) = balance0_1 (c)- fee0_1
[i]Type for TMP_59

Name: TMP_59 Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_60(uint256) = balance1_1 (c)- fee1_1
[i]Type for TMP_60

Name: TMP_60 Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_61(uint256) = INTERNAL_CALL, HybridPool._computeLiquidity(uint256,uint256)(TMP_59,TMP_60)
[i]Type for TMP_61

Name: TMP_61 Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
newLiq_1(uint256) := TMP_61(uint256)
Finance type key: (-1, -1)
[i]Type for newLiq

Name: newLiq Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_62(bool) = _totalSupply_1 == 0
[i]Type for TMP_62

Name: TMP_62 Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_66(uint256) = INTERNAL_CALL, HybridPool._computeLiquidity(uint256,uint256)(_reserve0_1,_reserve1_1)
[i]Type for TMP_66

Name: TMP_66 Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
oldLiq_1(uint256) := TMP_66(uint256)
Finance type key: (-1, -1)
[i]Type for oldLiq

Name: oldLiq Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_63(uint256) = newLiq_1 (c)- MINIMUM_LIQUIDITY_6
[i]Type for TMP_63

Name: TMP_63 Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
liquidity_2(uint256) := TMP_63(uint256)
Finance type key: (-1, -1)
[i]Type for liquidity

Name: liquidity Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_67(uint256) = newLiq_1 (c)- oldLiq_1
[i]Type for TMP_67

Name: TMP_67 Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_68(uint256) = TMP_67 (c)* _totalSupply_1
[i]Type for TMP_68

Name: TMP_68 Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
TMP_69(uint256) = TMP_68 (c)/ oldLiq_1
[i]Type for TMP_69

Name: TMP_69 Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
liquidity_1(uint256) := TMP_69(uint256)
Finance type key: (30, -1)
[i]Type for liquidity

Name: liquidity Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
TMP_64 = CONVERT 0 to address
[i]Type for TMP_64

Name: TMP_64 Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
INTERNAL_CALL, TridentERC20._mint(address,uint256)(TMP_64,MINIMUM_LIQUIDITY_6)
liquidity_3(uint256) := ϕ(['liquidity_1', 'liquidity_2'])
[i]Type for liquidity

Name: liquidity Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
TMP_70(bool) = liquidity_3 != 0
[i]Type for TMP_70

Name: TMP_70 Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_71(None) = SOLIDITY_CALL require(bool,string)(TMP_70,INSUFFICIENT_LIQUIDITY_MINTED)
[i]Type for TMP_71

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
INTERNAL_CALL, TridentERC20._mint(address,uint256)(recipient_1,liquidity_3)
recipient_1(address) := ϕ(['recipient_1', 'TMP_64'])
[i]Type for recipient

Name: recipient Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: recipient
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['MINIMUM_LIQUIDITY_6', 'liquidity_3'])
[i]Type for amount

Name: amount Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
totalSupply_1(uint256) := ϕ(['totalSupply_15', 'totalSupply_8', 'totalSupply_0', 'totalSupply_4', 'totalSupply_11', 'totalSupply_2'])
[i]Type for totalSupply

Name: totalSupply Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
balanceOf_7(mapping(address => uint256)) := ϕ(['balanceOf_0', 'balanceOf_10', 'balanceOf_6', 'balanceOf_13', 'balanceOf_17', 'balanceOf_3', 'balanceOf_8'])
[i]Type for balanceOf

Name: balanceOf Function: _mint
Num: 3
Den: -1
Address: 4
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
totalSupply_2(uint256) = totalSupply_1 (c)+ amount_1
Finance type key: (30, 30)
[i]Type for totalSupply

Name: totalSupply Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
REF_16(uint256) -> balanceOf_7[recipient_1]
[i]Type for REF_16

Name: balanceOf Function: _mint
Num: 3
Den: -1
Address: 4
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
balanceOf_8(mapping(address => uint256)) := ϕ(['balanceOf_7'])
[i]Type for balanceOf

Name: balanceOf Function: _mint
Num: 3
Den: -1
Address: 4
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
REF_16(-> balanceOf_8) = REF_16 + amount_1
Finance type key: (0, 30)
[i]Type for REF_16

Name: REF_16 Function: _mint
Num: 3
Den: -1
Address: 4
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
TMP_28 = CONVERT 0 to address
[i]Type for TMP_28

Name: TMP_28 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
recipient_1(address) := ϕ(['recipient_1', 'TMP_64'])
[i]Type for recipient

Name: recipient Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: recipient
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['MINIMUM_LIQUIDITY_6', 'liquidity_3'])
[i]Type for amount

Name: amount Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
totalSupply_1(uint256) := ϕ(['totalSupply_15', 'totalSupply_8', 'totalSupply_0', 'totalSupply_4', 'totalSupply_11', 'totalSupply_2'])
[i]Type for totalSupply

Name: totalSupply Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
balanceOf_7(mapping(address => uint256)) := ϕ(['balanceOf_0', 'balanceOf_10', 'balanceOf_6', 'balanceOf_13', 'balanceOf_17', 'balanceOf_3', 'balanceOf_8'])
[i]Type for balanceOf

Name: balanceOf Function: _mint
Num: 3
Den: -1
Address: 4
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
totalSupply_2(uint256) = totalSupply_1 (c)+ amount_1
Finance type key: (30, 30)
[i]Type for totalSupply

Name: totalSupply Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
REF_16(uint256) -> balanceOf_7[recipient_1]
[i]Type for REF_16

Name: balanceOf Function: _mint
Num: 3
Den: -1
Address: 4
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
balanceOf_8(mapping(address => uint256)) := ϕ(['balanceOf_7'])
[i]Type for balanceOf

Name: balanceOf Function: _mint
Num: 3
Den: -1
Address: 4
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
REF_16(-> balanceOf_8) = REF_16 + amount_1
Finance type key: (0, 30)
[i]Type for REF_16

Name: REF_16 Function: _mint
Num: 3
Den: -1
Address: 4
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
TMP_28 = CONVERT 0 to address
[i]Type for TMP_28

Name: TMP_28 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
INTERNAL_CALL, HybridPool._updateReserves()()



burn
totalSupply_9(uint256) := ϕ(['totalSupply_15', 'totalSupply_8', 'totalSupply_0', 'totalSupply_4', 'totalSupply_11', 'totalSupply_2'])
[i]Type for totalSupply

Name: totalSupply Function: burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
balanceOf_11(mapping(address => uint256)) := ϕ(['balanceOf_0', 'balanceOf_10', 'balanceOf_6', 'balanceOf_13', 'balanceOf_17', 'balanceOf_3', 'balanceOf_8'])
[i]Type for balanceOf

Name: balanceOf Function: burn
Num: 3
Den: -1
Address: 4
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
token0_2(address) := ϕ(['token0_10', 'token0_26', 'token0_0', 'token0_19', 'token0_42', 'token0_39', 'token0_32', 'token0_1', 'token0_46', 'token0_22', 'token0_37'])
[i]Type for token0

Name: token0 Function: burn
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
token1_2(address) := ϕ(['token1_1', 'token1_22', 'token1_34', 'token1_37', 'token1_10', 'token1_40', 'token1_0', 'token1_26', 'token1_45', 'token1_18'])
[i]Type for token1

Name: token1 Function: burn
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
MODIFIER_CALL, HybridPool.lock()()
TUPLE_9(address,bool) = SOLIDITY_CALL abi.decode()(data_1(address,bool))
[i]Type for TUPLE_9

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
recipient_1(address)= UNPACK TUPLE_9 index: 0 
[i]Type for recipient

Name: recipient Function: burn
Num: 
Den: 
Address: -993
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
unwrapBento_1(bool)= UNPACK TUPLE_9 index: 1 
[i]Type for unwrapBento

Name: unwrapBento Function: burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_10(uint256,uint256) = INTERNAL_CALL, HybridPool._balance()()
[i]Type for TUPLE_10

Name: TUPLE_10 Function: burn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token0_4(address) := ϕ(['token0_42'])
[i]Type for token0

Name: token0 Function: burn
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
token1_4(address) := ϕ(['token1_45'])
[i]Type for token1

Name: token1 Function: burn
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
balance0_1(uint256)= UNPACK TUPLE_10 index: 0 
[i]Type for balance0

Name: balance0 Function: burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
balance1_1(uint256)= UNPACK TUPLE_10 index: 1 
[i]Type for balance1

Name: balance1 Function: burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
_totalSupply_1(uint256) := totalSupply_11(uint256)
Finance type key: (30, -1)
[i]Type for _totalSupply

Name: _totalSupply Function: burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
TMP_76 = CONVERT this to address
[i]Type for TMP_76

Name: TMP_76 Function: burn
Num: -1
Den: -1
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
REF_42(uint256) -> balanceOf_13[TMP_76]
[i]Type for REF_42

Name: None Function: None
Num: 3
Den: -1
Address: 4
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
liquidity_1(uint256) := REF_42(uint256)
Finance type key: (0, -1)
[i]Type for liquidity

Name: liquidity Function: burn
Num: 3
Den: -1
Address: 4
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_77(uint256) = liquidity_1 (c)* balance0_1
[i]Type for TMP_77

Name: TMP_77 Function: burn
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_78(uint256) = TMP_77 (c)/ _totalSupply_1
Finance type key: (0, 30)
Finance type key: (0, 30)
[i]Type for TMP_78

Name: TMP_78 Function: burn
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
amount0_1(uint256) := TMP_78(uint256)
Finance type key: (0, -1)
[i]Type for amount0

Name: amount0 Function: burn
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_79(uint256) = liquidity_1 (c)* balance1_1
[i]Type for TMP_79

Name: TMP_79 Function: burn
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_80(uint256) = TMP_79 (c)/ _totalSupply_1
Finance type key: (0, 30)
Finance type key: (0, 30)
[i]Type for TMP_80

Name: TMP_80 Function: burn
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
amount1_1(uint256) := TMP_80(uint256)
Finance type key: (0, -1)
[i]Type for amount1

Name: amount1 Function: burn
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_81 = CONVERT this to address
[i]Type for TMP_81

Name: TMP_81 Function: burn
Num: -1
Den: -1
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
INTERNAL_CALL, TridentERC20._burn(address,uint256)(TMP_81,liquidity_1)
sender_1(address) := ϕ(['TMP_99', 'TMP_81'])
[i]Type for sender

Name: sender Function: _burn
Num: -1
Den: -1
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['liquidity_1', 'liquidity_1'])
[i]Type for amount

Name: amount Function: _burn
Num: 3
Den: -1
Address: 4
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
totalSupply_3(uint256) := ϕ(['totalSupply_15', 'totalSupply_8', 'totalSupply_0', 'totalSupply_4', 'totalSupply_11', 'totalSupply_2'])
[i]Type for totalSupply

Name: totalSupply Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
balanceOf_9(mapping(address => uint256)) := ϕ(['balanceOf_0', 'balanceOf_10', 'balanceOf_6', 'balanceOf_13', 'balanceOf_17', 'balanceOf_3', 'balanceOf_8'])
[i]Type for balanceOf

Name: balanceOf Function: _burn
Num: 3
Den: -1
Address: 4
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
REF_17(uint256) -> balanceOf_9[sender_1]
[i]Type for REF_17

Name: balanceOf Function: _burn
Num: 3
Den: -1
Address: 4
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
balanceOf_10(mapping(address => uint256)) := ϕ(['balanceOf_9'])
[i]Type for balanceOf

Name: balanceOf Function: _burn
Num: 3
Den: -1
Address: 4
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
REF_17(-> balanceOf_10) = REF_17 (c)- amount_1
Finance type key: (0, 0)
[i]Type for REF_17

Name: REF_17 Function: _burn
Num: 3
Den: -1
Address: 4
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
totalSupply_4(uint256) = totalSupply_3 - amount_1
Finance type key: (30, 0)
[i]Type for totalSupply

Name: totalSupply Function: _burn
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
TMP_30 = CONVERT 0 to address
[i]Type for TMP_30

Name: TMP_30 Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
sender_1(address) := ϕ(['TMP_99', 'TMP_81'])
[i]Type for sender

Name: sender Function: _burn
Num: -1
Den: -1
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['liquidity_1', 'liquidity_1'])
[i]Type for amount

Name: amount Function: _burn
Num: 3
Den: -1
Address: 4
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
totalSupply_3(uint256) := ϕ(['totalSupply_15', 'totalSupply_8', 'totalSupply_0', 'totalSupply_4', 'totalSupply_11', 'totalSupply_2'])
[i]Type for totalSupply

Name: totalSupply Function: _burn
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
balanceOf_9(mapping(address => uint256)) := ϕ(['balanceOf_0', 'balanceOf_10', 'balanceOf_6', 'balanceOf_13', 'balanceOf_17', 'balanceOf_3', 'balanceOf_8'])
[i]Type for balanceOf

Name: balanceOf Function: _burn
Num: 3
Den: -1
Address: 4
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
REF_17(uint256) -> balanceOf_9[sender_1]
[i]Type for REF_17

Name: balanceOf Function: _burn
Num: 3
Den: -1
Address: 4
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
balanceOf_10(mapping(address => uint256)) := ϕ(['balanceOf_9'])
[i]Type for balanceOf

Name: balanceOf Function: _burn
Num: 3
Den: -1
Address: 4
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
REF_17(-> balanceOf_10) = REF_17 (c)- amount_1
Finance type key: (0, 0)
[i]Type for REF_17

Name: REF_17 Function: _burn
Num: 3
Den: -1
Address: 4
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
totalSupply_4(uint256) = totalSupply_3 - amount_1
Finance type key: (30, 0)
[i]Type for totalSupply

Name: totalSupply Function: _burn
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
TMP_30 = CONVERT 0 to address
[i]Type for TMP_30

Name: TMP_30 Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
INTERNAL_CALL, HybridPool._transfer(address,uint256,address,bool)(token0_5,amount0_1,recipient_1,unwrapBento_1)
token_1(address) := ϕ(['tokenOut_3', 'token1_17', 'token1_6', 'token0_5', 'tokenIn_1', 'token0_21', 'tokenIn_1', 'tokenOut_1'])
[i]Type for token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['_barFee_1', 'amount0_1', 'amountOut_3', 'fee_3', 'amountOut_1', 'amount1_2', 'amount0_3', 'amount1_1'])
[i]Type for amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
to_1(address) := ϕ(['recipient_1', 'recipient_1', 'barFeeTo_16', 'barFeeTo_14', 'to_1', 'recipient_1'])
[i]Type for to

Name: to Function: _transfer
Num: 
Den: 
Address: -993
Norm: u
LF: to
Value: u
Fields: 
Finance Type: undef
unwrapBento_1(bool) := ϕ(['unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1'])
[i]Type for unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_6(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_74 (->None) := 4052550604(uint256)
Finance type key: (-1, -1)
[i]Type for REF_74

Name: REF_74 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4052550604
Fields: 
Finance Type: undef
TMP_208 = CONVERT this to address
[i]Type for TMP_208

Name: TMP_208 Function: _transfer
Num: -1
Den: -1
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_209(uint256) = INTERNAL_CALL, HybridPool._toShare(address,uint256)(token_1,amount_1)
token_1(address) := ϕ(['token1_21', 'token1_8', 'token0_18', 'token0_7', 'token_1'])
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['amount1_1', 'amount0_1', 'amount0_1', 'amount_1', 'amount1_1'])
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
bento_4(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_5(address) := ϕ(['bento_4', 'bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
output_1(uint256) := TMP_195(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token1_21', 'token1_8', 'token0_18', 'token0_7', 'token_1'])
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['amount1_1', 'amount0_1', 'amount0_1', 'amount_1', 'amount1_1'])
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
bento_4(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_5(address) := ϕ(['bento_4', 'bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
output_1(uint256) := TMP_195(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_209

Name: TMP_209 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_7(address) := ϕ(['bento_5'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
TMP_210(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_74,token_1,TMP_208,to_1,TMP_209)
[i]Type for TMP_210

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_24(bool,bytes) = LOW_LEVEL_CALL, dest:bento_7, function:call, arguments:['TMP_210']  
[i]Type for TUPLE_24

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_8(address) := ϕ(['bento_5', 'bento_7', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
success_1(bool)= UNPACK TUPLE_24 index: 0 
[i]Type for success

Name: success Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_70 (->None) := 2547674416(uint256)
Finance type key: (-1, -1)
[i]Type for REF_70

Name: REF_70 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2547674416
Fields: 
Finance Type: undef
TMP_205 = CONVERT this to address
[i]Type for TMP_205

Name: TMP_205 Function: _transfer
Num: -1
Den: -1
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_206(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_70,token_1,TMP_205,to_1,amount_1,0)
[i]Type for TMP_206

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_23(bool,bytes) = LOW_LEVEL_CALL, dest:bento_6, function:call, arguments:['TMP_206']  
[i]Type for TUPLE_23

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_9(address) := ϕ(['bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
success_2(bool)= UNPACK TUPLE_23 index: 0 
[i]Type for success

Name: success Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_211(None) = SOLIDITY_CALL require(bool,string)(success_scope_0_0,TRANSFER_FAILED)
[i]Type for TMP_211

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_207(None) = SOLIDITY_CALL require(bool,string)(success_2,WITHDRAW_FAILED)
[i]Type for TMP_207

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['tokenOut_3', 'token1_17', 'token1_6', 'token0_5', 'tokenIn_1', 'token0_21', 'tokenIn_1', 'tokenOut_1'])
[i]Type for token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['_barFee_1', 'amount0_1', 'amountOut_3', 'fee_3', 'amountOut_1', 'amount1_2', 'amount0_3', 'amount1_1'])
[i]Type for amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
to_1(address) := ϕ(['recipient_1', 'recipient_1', 'barFeeTo_16', 'barFeeTo_14', 'to_1', 'recipient_1'])
[i]Type for to

Name: to Function: _transfer
Num: 
Den: 
Address: -993
Norm: u
LF: to
Value: u
Fields: 
Finance Type: undef
unwrapBento_1(bool) := ϕ(['unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1'])
[i]Type for unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_6(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_74 (->None) := 4052550604(uint256)
Finance type key: (-1, -1)
[i]Type for REF_74

Name: REF_74 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4052550604
Fields: 
Finance Type: undef
TMP_208 = CONVERT this to address
[i]Type for TMP_208

Name: TMP_208 Function: _transfer
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_209(uint256) = INTERNAL_CALL, HybridPool._toShare(address,uint256)(token_1,amount_1)
[i]Type for TMP_209

Name: TMP_209 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_7(address) := ϕ(['bento_5'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
TMP_210(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_74,token_1,TMP_208,to_1,TMP_209)
[i]Type for TMP_210

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_24(bool,bytes) = LOW_LEVEL_CALL, dest:bento_7, function:call, arguments:['TMP_210']  
[i]Type for TUPLE_24

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_8(address) := ϕ(['bento_5', 'bento_7', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
success_1(bool)= UNPACK TUPLE_24 index: 0 
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_70 (->None) := 2547674416(uint256)
Finance type key: (-1, -1)
[i]Type for REF_70

Name: REF_70 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2547674416
Fields: 
Finance Type: undef
TMP_205 = CONVERT this to address
[i]Type for TMP_205

Name: TMP_205 Function: _transfer
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_206(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_70,token_1,TMP_205,to_1,amount_1,0)
[i]Type for TMP_206

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_23(bool,bytes) = LOW_LEVEL_CALL, dest:bento_6, function:call, arguments:['TMP_206']  
[i]Type for TUPLE_23

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_9(address) := ϕ(['bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
success_2(bool)= UNPACK TUPLE_23 index: 0 
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_211(None) = SOLIDITY_CALL require(bool,string)(success_scope_0_0,TRANSFER_FAILED)
[i]Type for TMP_211

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_207(None) = SOLIDITY_CALL require(bool,string)(success_2,WITHDRAW_FAILED)
[i]Type for TMP_207

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
INTERNAL_CALL, HybridPool._transfer(address,uint256,address,bool)(token1_6,amount1_1,recipient_1,unwrapBento_1)
token_1(address) := ϕ(['tokenOut_3', 'token1_17', 'token1_6', 'token0_5', 'tokenIn_1', 'token0_21', 'tokenIn_1', 'tokenOut_1'])
[i]Type for token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['_barFee_1', 'amount0_1', 'amountOut_3', 'fee_3', 'amountOut_1', 'amount1_2', 'amount0_3', 'amount1_1'])
[i]Type for amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
to_1(address) := ϕ(['recipient_1', 'recipient_1', 'barFeeTo_16', 'barFeeTo_14', 'to_1', 'recipient_1'])
[i]Type for to

Name: to Function: _transfer
Num: 
Den: 
Address: -993
Norm: u
LF: to
Value: u
Fields: 
Finance Type: undef
unwrapBento_1(bool) := ϕ(['unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1'])
[i]Type for unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_6(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_74 (->None) := 4052550604(uint256)
Finance type key: (-1, -1)
[i]Type for REF_74

Name: REF_74 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4052550604
Fields: 
Finance Type: undef
TMP_208 = CONVERT this to address
[i]Type for TMP_208

Name: TMP_208 Function: _transfer
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_209(uint256) = INTERNAL_CALL, HybridPool._toShare(address,uint256)(token_1,amount_1)
token_1(address) := ϕ(['token1_21', 'token1_8', 'token0_18', 'token0_7', 'token_1'])
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['amount1_1', 'amount0_1', 'amount0_1', 'amount_1', 'amount1_1'])
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
bento_4(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_5(address) := ϕ(['bento_4', 'bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
output_1(uint256) := TMP_195(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token1_21', 'token1_8', 'token0_18', 'token0_7', 'token_1'])
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['amount1_1', 'amount0_1', 'amount0_1', 'amount_1', 'amount1_1'])
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
bento_4(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_5(address) := ϕ(['bento_4', 'bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
output_1(uint256) := TMP_195(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_209

Name: TMP_209 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_7(address) := ϕ(['bento_5'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
TMP_210(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_74,token_1,TMP_208,to_1,TMP_209)
[i]Type for TMP_210

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_24(bool,bytes) = LOW_LEVEL_CALL, dest:bento_7, function:call, arguments:['TMP_210']  
[i]Type for TUPLE_24

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_8(address) := ϕ(['bento_5', 'bento_7', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
success_1(bool)= UNPACK TUPLE_24 index: 0 
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_70 (->None) := 2547674416(uint256)
Finance type key: (-1, -1)
[i]Type for REF_70

Name: REF_70 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2547674416
Fields: 
Finance Type: undef
TMP_205 = CONVERT this to address
[i]Type for TMP_205

Name: TMP_205 Function: _transfer
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_206(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_70,token_1,TMP_205,to_1,amount_1,0)
[i]Type for TMP_206

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_23(bool,bytes) = LOW_LEVEL_CALL, dest:bento_6, function:call, arguments:['TMP_206']  
[i]Type for TUPLE_23

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_9(address) := ϕ(['bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
success_2(bool)= UNPACK TUPLE_23 index: 0 
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_211(None) = SOLIDITY_CALL require(bool,string)(success_scope_0_0,TRANSFER_FAILED)
[i]Type for TMP_211

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_207(None) = SOLIDITY_CALL require(bool,string)(success_2,WITHDRAW_FAILED)
[i]Type for TMP_207

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['tokenOut_3', 'token1_17', 'token1_6', 'token0_5', 'tokenIn_1', 'token0_21', 'tokenIn_1', 'tokenOut_1'])
[i]Type for token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['_barFee_1', 'amount0_1', 'amountOut_3', 'fee_3', 'amountOut_1', 'amount1_2', 'amount0_3', 'amount1_1'])
[i]Type for amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
to_1(address) := ϕ(['recipient_1', 'recipient_1', 'barFeeTo_16', 'barFeeTo_14', 'to_1', 'recipient_1'])
[i]Type for to

Name: to Function: _transfer
Num: 
Den: 
Address: -993
Norm: u
LF: to
Value: u
Fields: 
Finance Type: undef
unwrapBento_1(bool) := ϕ(['unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1'])
[i]Type for unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_6(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_74 (->None) := 4052550604(uint256)
Finance type key: (-1, -1)
[i]Type for REF_74

Name: REF_74 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4052550604
Fields: 
Finance Type: undef
TMP_208 = CONVERT this to address
[i]Type for TMP_208

Name: TMP_208 Function: _transfer
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_209(uint256) = INTERNAL_CALL, HybridPool._toShare(address,uint256)(token_1,amount_1)
token_1(address) := ϕ(['token1_21', 'token1_8', 'token0_18', 'token0_7', 'token_1'])
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['amount1_1', 'amount0_1', 'amount0_1', 'amount_1', 'amount1_1'])
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
bento_4(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_5(address) := ϕ(['bento_4', 'bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
output_1(uint256) := TMP_195(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token1_21', 'token1_8', 'token0_18', 'token0_7', 'token_1'])
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['amount1_1', 'amount0_1', 'amount0_1', 'amount_1', 'amount1_1'])
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
bento_4(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_5(address) := ϕ(['bento_4', 'bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
output_1(uint256) := TMP_195(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_209

Name: TMP_209 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_7(address) := ϕ(['bento_5'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
TMP_210(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_74,token_1,TMP_208,to_1,TMP_209)
[i]Type for TMP_210

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_24(bool,bytes) = LOW_LEVEL_CALL, dest:bento_7, function:call, arguments:['TMP_210']  
[i]Type for TUPLE_24

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_8(address) := ϕ(['bento_5', 'bento_7', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
success_1(bool)= UNPACK TUPLE_24 index: 0 
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_70 (->None) := 2547674416(uint256)
Finance type key: (-1, -1)
[i]Type for REF_70

Name: REF_70 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2547674416
Fields: 
Finance Type: undef
TMP_205 = CONVERT this to address
[i]Type for TMP_205

Name: TMP_205 Function: _transfer
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_206(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_70,token_1,TMP_205,to_1,amount_1,0)
[i]Type for TMP_206

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_23(bool,bytes) = LOW_LEVEL_CALL, dest:bento_6, function:call, arguments:['TMP_206']  
[i]Type for TUPLE_23

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_9(address) := ϕ(['bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
success_2(bool)= UNPACK TUPLE_23 index: 0 
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_211(None) = SOLIDITY_CALL require(bool,string)(success_scope_0_0,TRANSFER_FAILED)
[i]Type for TMP_211

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_207(None) = SOLIDITY_CALL require(bool,string)(success_2,WITHDRAW_FAILED)
[i]Type for TMP_207

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_85(uint256) = INTERNAL_CALL, HybridPool._toShare(address,uint256)(token0_7,amount0_1)
[i]Type for TMP_85

Name: TMP_85 Function: burn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
balance0_2(uint256) = balance0_1 (c)- TMP_85
[i]Type for balance0

Name: balance0 Function: burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_86(uint256) = INTERNAL_CALL, HybridPool._toShare(address,uint256)(token1_8,amount1_1)
token_1(address) := ϕ(['token1_21', 'token1_8', 'token0_18', 'token0_7', 'token_1'])
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['amount1_1', 'amount0_1', 'amount0_1', 'amount_1', 'amount1_1'])
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
bento_4(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_5(address) := ϕ(['bento_4', 'bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
output_1(uint256) := TMP_195(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token1_21', 'token1_8', 'token0_18', 'token0_7', 'token_1'])
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['amount1_1', 'amount0_1', 'amount0_1', 'amount_1', 'amount1_1'])
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
bento_4(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_5(address) := ϕ(['bento_4', 'bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
output_1(uint256) := TMP_195(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_86

Name: TMP_86 Function: burn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
balance1_2(uint256) = balance1_1 (c)- TMP_86
[i]Type for balance1

Name: balance1 Function: burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
INTERNAL_CALL, HybridPool._updateReserves()()
TMP_89 = new IPool.TokenAmount[](2)
[i]Type for TMP_89

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
withdrawnAmounts_1(IPool.TokenAmount[]) := TMP_89(IPool.TokenAmount)
Finance type key: (-1, -1)
[i]Type for withdrawnAmounts

Name: withdrawnAmounts Function: burn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_43(IPool.TokenAmount) -> withdrawnAmounts_1[0]
[i]Type for REF_43

Name: withdrawnAmounts Function: burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_90 = new TokenAmount(token0_10,amount0_1)
[i]Type for TMP_90

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
withdrawnAmounts_2(IPool.TokenAmount[]) := ϕ(['withdrawnAmounts_1'])
[i]Type for withdrawnAmounts

Name: withdrawnAmounts Function: burn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_43 (->withdrawnAmounts_2) := TMP_90(IPool.TokenAmount)
Finance type key: (-1, -1)
[i]Type for REF_43

Name: REF_43 Function: burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_44(IPool.TokenAmount) -> withdrawnAmounts_2[1]
[i]Type for REF_44

Name: withdrawnAmounts Function: burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_91 = new TokenAmount(token1_10,amount1_1)
[i]Type for TMP_91

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
withdrawnAmounts_3(IPool.TokenAmount[]) := ϕ(['withdrawnAmounts_2'])
[i]Type for withdrawnAmounts

Name: withdrawnAmounts Function: burn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_44 (->withdrawnAmounts_3) := TMP_91(IPool.TokenAmount)
Finance type key: (-1, -1)
[i]Type for REF_44

Name: REF_44 Function: burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
totalSupply_9(uint256) := ϕ(['totalSupply_15', 'totalSupply_8', 'totalSupply_0', 'totalSupply_4', 'totalSupply_11', 'totalSupply_2'])
[i]Type for totalSupply

Name: totalSupply Function: burn
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
balanceOf_11(mapping(address => uint256)) := ϕ(['balanceOf_0', 'balanceOf_10', 'balanceOf_6', 'balanceOf_13', 'balanceOf_17', 'balanceOf_3', 'balanceOf_8'])
[i]Type for balanceOf

Name: balanceOf Function: burn
Num: 3
Den: -1
Address: 4
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
token0_2(address) := ϕ(['token0_10', 'token0_26', 'token0_0', 'token0_19', 'token0_42', 'token0_39', 'token0_32', 'token0_1', 'token0_46', 'token0_22', 'token0_37'])
[i]Type for token0

Name: token0 Function: burn
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
token1_2(address) := ϕ(['token1_1', 'token1_22', 'token1_34', 'token1_37', 'token1_10', 'token1_40', 'token1_0', 'token1_26', 'token1_45', 'token1_18'])
[i]Type for token1

Name: token1 Function: burn
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
MODIFIER_CALL, HybridPool.lock()()
TUPLE_9(address,bool) = SOLIDITY_CALL abi.decode()(data_1(address,bool))
[i]Type for TUPLE_9

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
recipient_1(address)= UNPACK TUPLE_9 index: 0 
[i]Type for recipient

Name: recipient Function: burn
Num: 
Den: 
Address: -993
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
unwrapBento_1(bool)= UNPACK TUPLE_9 index: 1 
[i]Type for unwrapBento

Name: unwrapBento Function: burn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_10(uint256,uint256) = INTERNAL_CALL, HybridPool._balance()()
[i]Type for TUPLE_10

Name: TUPLE_10 Function: burn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token0_4(address) := ϕ(['token0_42'])
[i]Type for token0

Name: token0 Function: burn
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
token1_4(address) := ϕ(['token1_45'])
[i]Type for token1

Name: token1 Function: burn
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
balance0_1(uint256)= UNPACK TUPLE_10 index: 0 
[i]Type for balance0

Name: balance0 Function: burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
balance1_1(uint256)= UNPACK TUPLE_10 index: 1 
[i]Type for balance1

Name: balance1 Function: burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
_totalSupply_1(uint256) := totalSupply_11(uint256)
Finance type key: (30, -1)
[i]Type for _totalSupply

Name: _totalSupply Function: burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
TMP_76 = CONVERT this to address
[i]Type for TMP_76

Name: TMP_76 Function: burn
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
REF_42(uint256) -> balanceOf_13[TMP_76]
[i]Type for REF_42

Name: None Function: None
Num: 3
Den: -1
Address: 4
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
liquidity_1(uint256) := REF_42(uint256)
Finance type key: (0, -1)
[i]Type for liquidity

Name: liquidity Function: burn
Num: 3
Den: -1
Address: 4
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_77(uint256) = liquidity_1 (c)* balance0_1
[i]Type for TMP_77

Name: TMP_77 Function: burn
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_78(uint256) = TMP_77 (c)/ _totalSupply_1
Finance type key: (0, 30)
Finance type key: (0, 30)
[i]Type for TMP_78

Name: TMP_78 Function: burn
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
amount0_1(uint256) := TMP_78(uint256)
Finance type key: (0, -1)
[i]Type for amount0

Name: amount0 Function: burn
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_79(uint256) = liquidity_1 (c)* balance1_1
[i]Type for TMP_79

Name: TMP_79 Function: burn
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_80(uint256) = TMP_79 (c)/ _totalSupply_1
Finance type key: (0, 30)
Finance type key: (0, 30)
[i]Type for TMP_80

Name: TMP_80 Function: burn
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
amount1_1(uint256) := TMP_80(uint256)
Finance type key: (0, -1)
[i]Type for amount1

Name: amount1 Function: burn
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_81 = CONVERT this to address
[i]Type for TMP_81

Name: TMP_81 Function: burn
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
INTERNAL_CALL, TridentERC20._burn(address,uint256)(TMP_81,liquidity_1)
sender_1(address) := ϕ(['TMP_99', 'TMP_81'])
[i]Type for sender

Name: sender Function: _burn
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['liquidity_1', 'liquidity_1'])
[i]Type for amount

Name: amount Function: _burn
Num: 3
Den: -1
Address: 4
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
totalSupply_3(uint256) := ϕ(['totalSupply_15', 'totalSupply_8', 'totalSupply_0', 'totalSupply_4', 'totalSupply_11', 'totalSupply_2'])
[i]Type for totalSupply

Name: totalSupply Function: _burn
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
balanceOf_9(mapping(address => uint256)) := ϕ(['balanceOf_0', 'balanceOf_10', 'balanceOf_6', 'balanceOf_13', 'balanceOf_17', 'balanceOf_3', 'balanceOf_8'])
[i]Type for balanceOf

Name: balanceOf Function: _burn
Num: 3
Den: -1
Address: 4
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
REF_17(uint256) -> balanceOf_9[sender_1]
[i]Type for REF_17

Name: balanceOf Function: _burn
Num: 3
Den: -1
Address: 4
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
balanceOf_10(mapping(address => uint256)) := ϕ(['balanceOf_9'])
[i]Type for balanceOf

Name: balanceOf Function: _burn
Num: 3
Den: -1
Address: 4
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
REF_17(-> balanceOf_10) = REF_17 (c)- amount_1
Finance type key: (0, 0)
[i]Type for REF_17

Name: REF_17 Function: _burn
Num: 3
Den: -1
Address: 4
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
totalSupply_4(uint256) = totalSupply_3 - amount_1
Finance type key: (30, 0)
[i]Type for totalSupply

Name: totalSupply Function: _burn
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
TMP_30 = CONVERT 0 to address
[i]Type for TMP_30

Name: TMP_30 Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
sender_1(address) := ϕ(['TMP_99', 'TMP_81'])
[i]Type for sender

Name: sender Function: _burn
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['liquidity_1', 'liquidity_1'])
[i]Type for amount

Name: amount Function: _burn
Num: 3
Den: -1
Address: 4
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
totalSupply_3(uint256) := ϕ(['totalSupply_15', 'totalSupply_8', 'totalSupply_0', 'totalSupply_4', 'totalSupply_11', 'totalSupply_2'])
[i]Type for totalSupply

Name: totalSupply Function: _burn
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
balanceOf_9(mapping(address => uint256)) := ϕ(['balanceOf_0', 'balanceOf_10', 'balanceOf_6', 'balanceOf_13', 'balanceOf_17', 'balanceOf_3', 'balanceOf_8'])
[i]Type for balanceOf

Name: balanceOf Function: _burn
Num: 3
Den: -1
Address: 4
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
REF_17(uint256) -> balanceOf_9[sender_1]
[i]Type for REF_17

Name: balanceOf Function: _burn
Num: 3
Den: -1
Address: 4
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
balanceOf_10(mapping(address => uint256)) := ϕ(['balanceOf_9'])
[i]Type for balanceOf

Name: balanceOf Function: _burn
Num: 3
Den: -1
Address: 4
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
REF_17(-> balanceOf_10) = REF_17 (c)- amount_1
Finance type key: (0, 0)
[i]Type for REF_17

Name: REF_17 Function: _burn
Num: 3
Den: -1
Address: 4
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
totalSupply_4(uint256) = totalSupply_3 - amount_1
Finance type key: (30, 0)
[i]Type for totalSupply

Name: totalSupply Function: _burn
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
TMP_30 = CONVERT 0 to address
[i]Type for TMP_30

Name: TMP_30 Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
INTERNAL_CALL, HybridPool._transfer(address,uint256,address,bool)(token0_5,amount0_1,recipient_1,unwrapBento_1)
token_1(address) := ϕ(['tokenOut_3', 'token1_17', 'token1_6', 'token0_5', 'tokenIn_1', 'token0_21', 'tokenIn_1', 'tokenOut_1'])
[i]Type for token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['_barFee_1', 'amount0_1', 'amountOut_3', 'fee_3', 'amountOut_1', 'amount1_2', 'amount0_3', 'amount1_1'])
[i]Type for amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
to_1(address) := ϕ(['recipient_1', 'recipient_1', 'barFeeTo_16', 'barFeeTo_14', 'to_1', 'recipient_1'])
[i]Type for to

Name: to Function: _transfer
Num: 
Den: 
Address: -993
Norm: u
LF: to
Value: u
Fields: 
Finance Type: undef
unwrapBento_1(bool) := ϕ(['unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1'])
[i]Type for unwrapBento

Name: unwrapBento Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_6(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_74 (->None) := 4052550604(uint256)
Finance type key: (-1, -1)
[i]Type for REF_74

Name: REF_74 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4052550604
Fields: 
Finance Type: undef
TMP_208 = CONVERT this to address
[i]Type for TMP_208

Name: TMP_208 Function: _transfer
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_209(uint256) = INTERNAL_CALL, HybridPool._toShare(address,uint256)(token_1,amount_1)
[i]Type for TMP_209

Name: TMP_209 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_7(address) := ϕ(['bento_5'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
TMP_210(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_74,token_1,TMP_208,to_1,TMP_209)
[i]Type for TMP_210

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_24(bool,bytes) = LOW_LEVEL_CALL, dest:bento_7, function:call, arguments:['TMP_210']  
[i]Type for TUPLE_24

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_8(address) := ϕ(['bento_5', 'bento_7', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
success_1(bool)= UNPACK TUPLE_24 index: 0 
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_70 (->None) := 2547674416(uint256)
Finance type key: (-1, -1)
[i]Type for REF_70

Name: REF_70 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2547674416
Fields: 
Finance Type: undef
TMP_205 = CONVERT this to address
[i]Type for TMP_205

Name: TMP_205 Function: _transfer
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_206(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_70,token_1,TMP_205,to_1,amount_1,0)
[i]Type for TMP_206

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_23(bool,bytes) = LOW_LEVEL_CALL, dest:bento_6, function:call, arguments:['TMP_206']  
[i]Type for TUPLE_23

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_9(address) := ϕ(['bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
success_2(bool)= UNPACK TUPLE_23 index: 0 
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_211(None) = SOLIDITY_CALL require(bool,string)(success_scope_0_0,TRANSFER_FAILED)
[i]Type for TMP_211

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_207(None) = SOLIDITY_CALL require(bool,string)(success_2,WITHDRAW_FAILED)
[i]Type for TMP_207

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['tokenOut_3', 'token1_17', 'token1_6', 'token0_5', 'tokenIn_1', 'token0_21', 'tokenIn_1', 'tokenOut_1'])
[i]Type for token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['_barFee_1', 'amount0_1', 'amountOut_3', 'fee_3', 'amountOut_1', 'amount1_2', 'amount0_3', 'amount1_1'])
[i]Type for amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
to_1(address) := ϕ(['recipient_1', 'recipient_1', 'barFeeTo_16', 'barFeeTo_14', 'to_1', 'recipient_1'])
[i]Type for to

Name: to Function: _transfer
Num: 
Den: 
Address: -993
Norm: u
LF: to
Value: u
Fields: 
Finance Type: undef
unwrapBento_1(bool) := ϕ(['unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1'])
[i]Type for unwrapBento

Name: unwrapBento Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_6(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_74 (->None) := 4052550604(uint256)
Finance type key: (-1, -1)
[i]Type for REF_74

Name: REF_74 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4052550604
Fields: 
Finance Type: undef
TMP_208 = CONVERT this to address
[i]Type for TMP_208

Name: TMP_208 Function: _transfer
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_209(uint256) = INTERNAL_CALL, HybridPool._toShare(address,uint256)(token_1,amount_1)
[i]Type for TMP_209

Name: TMP_209 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_7(address) := ϕ(['bento_5'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
TMP_210(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_74,token_1,TMP_208,to_1,TMP_209)
[i]Type for TMP_210

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_24(bool,bytes) = LOW_LEVEL_CALL, dest:bento_7, function:call, arguments:['TMP_210']  
[i]Type for TUPLE_24

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_8(address) := ϕ(['bento_5', 'bento_7', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
success_1(bool)= UNPACK TUPLE_24 index: 0 
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_70 (->None) := 2547674416(uint256)
Finance type key: (-1, -1)
[i]Type for REF_70

Name: REF_70 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2547674416
Fields: 
Finance Type: undef
TMP_205 = CONVERT this to address
[i]Type for TMP_205

Name: TMP_205 Function: _transfer
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_206(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_70,token_1,TMP_205,to_1,amount_1,0)
[i]Type for TMP_206

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_23(bool,bytes) = LOW_LEVEL_CALL, dest:bento_6, function:call, arguments:['TMP_206']  
[i]Type for TUPLE_23

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_9(address) := ϕ(['bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
success_2(bool)= UNPACK TUPLE_23 index: 0 
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_211(None) = SOLIDITY_CALL require(bool,string)(success_scope_0_0,TRANSFER_FAILED)
[i]Type for TMP_211

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_207(None) = SOLIDITY_CALL require(bool,string)(success_2,WITHDRAW_FAILED)
[i]Type for TMP_207

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
INTERNAL_CALL, HybridPool._transfer(address,uint256,address,bool)(token1_6,amount1_1,recipient_1,unwrapBento_1)
token_1(address) := ϕ(['tokenOut_3', 'token1_17', 'token1_6', 'token0_5', 'tokenIn_1', 'token0_21', 'tokenIn_1', 'tokenOut_1'])
[i]Type for token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['_barFee_1', 'amount0_1', 'amountOut_3', 'fee_3', 'amountOut_1', 'amount1_2', 'amount0_3', 'amount1_1'])
[i]Type for amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
to_1(address) := ϕ(['recipient_1', 'recipient_1', 'barFeeTo_16', 'barFeeTo_14', 'to_1', 'recipient_1'])
[i]Type for to

Name: to Function: _transfer
Num: 
Den: 
Address: -993
Norm: u
LF: to
Value: u
Fields: 
Finance Type: undef
unwrapBento_1(bool) := ϕ(['unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1'])
[i]Type for unwrapBento

Name: unwrapBento Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_6(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_74 (->None) := 4052550604(uint256)
Finance type key: (-1, -1)
[i]Type for REF_74

Name: REF_74 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4052550604
Fields: 
Finance Type: undef
TMP_208 = CONVERT this to address
[i]Type for TMP_208

Name: TMP_208 Function: _transfer
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_209(uint256) = INTERNAL_CALL, HybridPool._toShare(address,uint256)(token_1,amount_1)
token_1(address) := ϕ(['token1_21', 'token1_8', 'token0_18', 'token0_7', 'token_1'])
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['amount1_1', 'amount0_1', 'amount0_1', 'amount_1', 'amount1_1'])
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
bento_4(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_5(address) := ϕ(['bento_4', 'bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
output_1(uint256) := TMP_195(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token1_21', 'token1_8', 'token0_18', 'token0_7', 'token_1'])
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['amount1_1', 'amount0_1', 'amount0_1', 'amount_1', 'amount1_1'])
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
bento_4(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_5(address) := ϕ(['bento_4', 'bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
output_1(uint256) := TMP_195(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_209

Name: TMP_209 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_7(address) := ϕ(['bento_5'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
TMP_210(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_74,token_1,TMP_208,to_1,TMP_209)
[i]Type for TMP_210

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_24(bool,bytes) = LOW_LEVEL_CALL, dest:bento_7, function:call, arguments:['TMP_210']  
[i]Type for TUPLE_24

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_8(address) := ϕ(['bento_5', 'bento_7', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
success_1(bool)= UNPACK TUPLE_24 index: 0 
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_70 (->None) := 2547674416(uint256)
Finance type key: (-1, -1)
[i]Type for REF_70

Name: REF_70 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2547674416
Fields: 
Finance Type: undef
TMP_205 = CONVERT this to address
[i]Type for TMP_205

Name: TMP_205 Function: _transfer
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_206(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_70,token_1,TMP_205,to_1,amount_1,0)
[i]Type for TMP_206

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_23(bool,bytes) = LOW_LEVEL_CALL, dest:bento_6, function:call, arguments:['TMP_206']  
[i]Type for TUPLE_23

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_9(address) := ϕ(['bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
success_2(bool)= UNPACK TUPLE_23 index: 0 
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_211(None) = SOLIDITY_CALL require(bool,string)(success_scope_0_0,TRANSFER_FAILED)
[i]Type for TMP_211

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_207(None) = SOLIDITY_CALL require(bool,string)(success_2,WITHDRAW_FAILED)
[i]Type for TMP_207

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['tokenOut_3', 'token1_17', 'token1_6', 'token0_5', 'tokenIn_1', 'token0_21', 'tokenIn_1', 'tokenOut_1'])
[i]Type for token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['_barFee_1', 'amount0_1', 'amountOut_3', 'fee_3', 'amountOut_1', 'amount1_2', 'amount0_3', 'amount1_1'])
[i]Type for amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
to_1(address) := ϕ(['recipient_1', 'recipient_1', 'barFeeTo_16', 'barFeeTo_14', 'to_1', 'recipient_1'])
[i]Type for to

Name: to Function: _transfer
Num: 
Den: 
Address: -993
Norm: u
LF: to
Value: u
Fields: 
Finance Type: undef
unwrapBento_1(bool) := ϕ(['unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1'])
[i]Type for unwrapBento

Name: unwrapBento Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_6(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_74 (->None) := 4052550604(uint256)
Finance type key: (-1, -1)
[i]Type for REF_74

Name: REF_74 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4052550604
Fields: 
Finance Type: undef
TMP_208 = CONVERT this to address
[i]Type for TMP_208

Name: TMP_208 Function: _transfer
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_209(uint256) = INTERNAL_CALL, HybridPool._toShare(address,uint256)(token_1,amount_1)
token_1(address) := ϕ(['token1_21', 'token1_8', 'token0_18', 'token0_7', 'token_1'])
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['amount1_1', 'amount0_1', 'amount0_1', 'amount_1', 'amount1_1'])
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
bento_4(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_5(address) := ϕ(['bento_4', 'bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
output_1(uint256) := TMP_195(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token1_21', 'token1_8', 'token0_18', 'token0_7', 'token_1'])
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['amount1_1', 'amount0_1', 'amount0_1', 'amount_1', 'amount1_1'])
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
bento_4(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_5(address) := ϕ(['bento_4', 'bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
output_1(uint256) := TMP_195(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_209

Name: TMP_209 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_7(address) := ϕ(['bento_5'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
TMP_210(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_74,token_1,TMP_208,to_1,TMP_209)
[i]Type for TMP_210

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_24(bool,bytes) = LOW_LEVEL_CALL, dest:bento_7, function:call, arguments:['TMP_210']  
[i]Type for TUPLE_24

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_8(address) := ϕ(['bento_5', 'bento_7', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
success_1(bool)= UNPACK TUPLE_24 index: 0 
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_70 (->None) := 2547674416(uint256)
Finance type key: (-1, -1)
[i]Type for REF_70

Name: REF_70 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2547674416
Fields: 
Finance Type: undef
TMP_205 = CONVERT this to address
[i]Type for TMP_205

Name: TMP_205 Function: _transfer
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_206(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_70,token_1,TMP_205,to_1,amount_1,0)
[i]Type for TMP_206

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_23(bool,bytes) = LOW_LEVEL_CALL, dest:bento_6, function:call, arguments:['TMP_206']  
[i]Type for TUPLE_23

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_9(address) := ϕ(['bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
success_2(bool)= UNPACK TUPLE_23 index: 0 
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_211(None) = SOLIDITY_CALL require(bool,string)(success_scope_0_0,TRANSFER_FAILED)
[i]Type for TMP_211

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_207(None) = SOLIDITY_CALL require(bool,string)(success_2,WITHDRAW_FAILED)
[i]Type for TMP_207

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_85(uint256) = INTERNAL_CALL, HybridPool._toShare(address,uint256)(token0_7,amount0_1)
[i]Type for TMP_85

Name: TMP_85 Function: burn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
balance0_2(uint256) = balance0_1 (c)- TMP_85
[i]Type for balance0

Name: balance0 Function: burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_86(uint256) = INTERNAL_CALL, HybridPool._toShare(address,uint256)(token1_8,amount1_1)
token_1(address) := ϕ(['token1_21', 'token1_8', 'token0_18', 'token0_7', 'token_1'])
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['amount1_1', 'amount0_1', 'amount0_1', 'amount_1', 'amount1_1'])
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
bento_4(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_5(address) := ϕ(['bento_4', 'bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
output_1(uint256) := TMP_195(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token1_21', 'token1_8', 'token0_18', 'token0_7', 'token_1'])
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['amount1_1', 'amount0_1', 'amount0_1', 'amount_1', 'amount1_1'])
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
bento_4(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_5(address) := ϕ(['bento_4', 'bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
output_1(uint256) := TMP_195(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_86

Name: TMP_86 Function: burn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
balance1_2(uint256) = balance1_1 (c)- TMP_86
[i]Type for balance1

Name: balance1 Function: burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
INTERNAL_CALL, HybridPool._updateReserves()()
TMP_89 = new IPool.TokenAmount[](2)
[i]Type for TMP_89

Name: TMP_89 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
withdrawnAmounts_1(IPool.TokenAmount[]) := TMP_89(IPool.TokenAmount)
Finance type key: (-1, -1)
[i]Type for withdrawnAmounts

Name: withdrawnAmounts Function: burn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_43(IPool.TokenAmount) -> withdrawnAmounts_1[0]
[i]Type for REF_43

Name: withdrawnAmounts Function: burn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_90 = new TokenAmount(token0_10,amount0_1)
[i]Type for TMP_90

Name: TMP_90 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
withdrawnAmounts_2(IPool.TokenAmount[]) := ϕ(['withdrawnAmounts_1'])
[i]Type for withdrawnAmounts

Name: withdrawnAmounts Function: burn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_43 (->withdrawnAmounts_2) := TMP_90(IPool.TokenAmount)
Finance type key: (-1, -1)
[i]Type for REF_43

Name: REF_43 Function: burn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_44(IPool.TokenAmount) -> withdrawnAmounts_2[1]
[i]Type for REF_44

Name: withdrawnAmounts Function: burn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_91 = new TokenAmount(token1_10,amount1_1)
[i]Type for TMP_91

Name: TMP_91 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
withdrawnAmounts_3(IPool.TokenAmount[]) := ϕ(['withdrawnAmounts_2'])
[i]Type for withdrawnAmounts

Name: withdrawnAmounts Function: burn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_44 (->withdrawnAmounts_3) := TMP_91(IPool.TokenAmount)
Finance type key: (-1, -1)
[i]Type for REF_44

Name: REF_44 Function: burn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef



burnSingle
totalSupply_12(uint256) := ϕ(['totalSupply_15', 'totalSupply_8', 'totalSupply_0', 'totalSupply_4', 'totalSupply_11', 'totalSupply_2'])
[i]Type for totalSupply

Name: totalSupply Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
balanceOf_14(mapping(address => uint256)) := ϕ(['balanceOf_0', 'balanceOf_10', 'balanceOf_6', 'balanceOf_13', 'balanceOf_17', 'balanceOf_3', 'balanceOf_8'])
[i]Type for balanceOf

Name: balanceOf Function: burnSingle
Num: 3
Den: -1
Address: 4
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
token0_11(address) := ϕ(['token0_10', 'token0_26', 'token0_0', 'token0_19', 'token0_42', 'token0_39', 'token0_32', 'token0_1', 'token0_46', 'token0_22', 'token0_37'])
[i]Type for token0

Name: token0 Function: burnSingle
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
token1_11(address) := ϕ(['token1_1', 'token1_22', 'token1_34', 'token1_37', 'token1_10', 'token1_40', 'token1_0', 'token1_26', 'token1_45', 'token1_18'])
[i]Type for token1

Name: token1 Function: burnSingle
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
MODIFIER_CALL, HybridPool.lock()()
TUPLE_11(address,address,bool) = SOLIDITY_CALL abi.decode()(data_1(address,address,bool))
[i]Type for TUPLE_11

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tokenOut_1(address)= UNPACK TUPLE_11 index: 0 
[i]Type for tokenOut

Name: tokenOut Function: burnSingle
Num: 
Den: 
Address: -997
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
recipient_1(address)= UNPACK TUPLE_11 index: 1 
[i]Type for recipient

Name: recipient Function: burnSingle
Num: 
Den: 
Address: -992
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
unwrapBento_1(bool)= UNPACK TUPLE_11 index: 2 
[i]Type for unwrapBento

Name: unwrapBento Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_12(uint256,uint256) = INTERNAL_CALL, HybridPool._getReserves()()
[i]Type for TUPLE_12

Name: TUPLE_12 Function: burnSingle
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token0_13(address) := ϕ(['token0_39'])
[i]Type for token0

Name: token0 Function: burnSingle
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
token1_13(address) := ϕ(['token1_40'])
[i]Type for token1

Name: token1 Function: burnSingle
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
_reserve0_1(uint256)= UNPACK TUPLE_12 index: 0 
[i]Type for _reserve0

Name: _reserve0 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
_reserve1_1(uint256)= UNPACK TUPLE_12 index: 1 
[i]Type for _reserve1

Name: _reserve1 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
TUPLE_13(uint256,uint256) = INTERNAL_CALL, HybridPool._balance()()
[i]Type for TUPLE_13

Name: TUPLE_13 Function: burnSingle
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token0_14(address) := ϕ(['token0_42'])
[i]Type for token0

Name: token0 Function: burnSingle
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
token1_14(address) := ϕ(['token1_45'])
[i]Type for token1

Name: token1 Function: burnSingle
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
balance0_1(uint256)= UNPACK TUPLE_13 index: 0 
[i]Type for balance0

Name: balance0 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
balance1_1(uint256)= UNPACK TUPLE_13 index: 1 
[i]Type for balance1

Name: balance1 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
_totalSupply_1(uint256) := totalSupply_15(uint256)
Finance type key: (30, -1)
[i]Type for _totalSupply

Name: _totalSupply Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
TMP_94 = CONVERT this to address
[i]Type for TMP_94

Name: TMP_94 Function: burnSingle
Num: -1
Den: -1
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
REF_46(uint256) -> balanceOf_17[TMP_94]
[i]Type for REF_46

Name: None Function: None
Num: 3
Den: -1
Address: 4
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
liquidity_1(uint256) := REF_46(uint256)
Finance type key: (0, -1)
[i]Type for liquidity

Name: liquidity Function: burnSingle
Num: 3
Den: -1
Address: 4
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_95(uint256) = liquidity_1 (c)* balance0_1
[i]Type for TMP_95

Name: TMP_95 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_96(uint256) = TMP_95 (c)/ _totalSupply_1
Finance type key: (0, 30)
Finance type key: (0, 30)
[i]Type for TMP_96

Name: TMP_96 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
amount0_1(uint256) := TMP_96(uint256)
Finance type key: (0, -1)
[i]Type for amount0

Name: amount0 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_97(uint256) = liquidity_1 (c)* balance1_1
[i]Type for TMP_97

Name: TMP_97 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_98(uint256) = TMP_97 (c)/ _totalSupply_1
Finance type key: (0, 30)
Finance type key: (0, 30)
[i]Type for TMP_98

Name: TMP_98 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
amount1_1(uint256) := TMP_98(uint256)
Finance type key: (0, -1)
[i]Type for amount1

Name: amount1 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_99 = CONVERT this to address
[i]Type for TMP_99

Name: TMP_99 Function: burnSingle
Num: -1
Den: -1
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
INTERNAL_CALL, TridentERC20._burn(address,uint256)(TMP_99,liquidity_1)
TMP_101(bool) = tokenOut_1 == token1_15
[i]Type for TMP_101

Name: TMP_101 Function: burnSingle
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_109(bool) = tokenOut_1 == token0_15
[i]Type for TMP_109

Name: TMP_109 Function: burnSingle
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_110(None) = SOLIDITY_CALL require(bool,string)(TMP_109,INVALID_OUTPUT_TOKEN)
[i]Type for TMP_110

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_111(uint256) = INTERNAL_CALL, HybridPool._handleFee(address,uint256)(token1_15,amount1_1)
tokenIn_1(address) := ϕ(['token0_15', 'token1_15', 'tokenIn_1'])
[i]Type for tokenIn

Name: tokenIn Function: _handleFee
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
amountIn_1(uint256) := ϕ(['amountIn_1', 'amount1_1', 'amount0_1', 'amountIn_2'])
[i]Type for amountIn

Name: amountIn Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
MAX_FEE_7(uint256) := ϕ(['MAX_FEE_5', 'MAX_FEE_0', 'MAX_FEE_6', 'MAX_FEE_11'])
[i]Type for MAX_FEE

Name: MAX_FEE Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
swapFee_7(uint256) := ϕ(['swapFee_0', 'swapFee_5', 'swapFee_1', 'swapFee_11', 'swapFee_6'])
[i]Type for swapFee

Name: swapFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: simple fee ratio
barFeeTo_16(address) := ϕ(['barFeeTo_0', 'barFeeTo_15', 'barFeeTo_1', 'barFeeTo_17'])
[i]Type for barFeeTo

Name: barFeeTo Function: _handleFee
Num: -1
Den: -1
Address: 7
Norm: u
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
barFee_3(uint256) := ϕ(['barFee_2', 'barFee_0', 'barFee_1'])
[i]Type for barFee

Name: barFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_274(uint256) = amountIn_1 (c)* swapFee_7
Finance type key: (0, 12)
[i]Type for TMP_274

Name: TMP_274 Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: net balance
TMP_275(uint256) = TMP_274 (c)/ MAX_FEE_7
[i]Type for TMP_275

Name: TMP_275 Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: net balance
fee_1(uint256) := TMP_275(uint256)
Finance type key: (1, -1)
[i]Type for fee

Name: fee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: net balance
TMP_276(uint256) = fee_1 (c)* barFee_3
[i]Type for TMP_276

Name: TMP_276 Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: net balance
TMP_277(uint256) = TMP_276 (c)/ MAX_FEE_7
[i]Type for TMP_277

Name: TMP_277 Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: net balance
_barFee_1(uint256) := TMP_277(uint256)
Finance type key: (1, -1)
[i]Type for _barFee

Name: _barFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: net balance
INTERNAL_CALL, HybridPool._transfer(address,uint256,address,bool)(tokenIn_1,_barFee_1,barFeeTo_16,False)
token_1(address) := ϕ(['tokenOut_3', 'token1_17', 'token1_6', 'token0_5', 'tokenIn_1', 'token0_21', 'tokenIn_1', 'tokenOut_1'])
[i]Type for token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['_barFee_1', 'amount0_1', 'amountOut_3', 'fee_3', 'amountOut_1', 'amount1_2', 'amount0_3', 'amount1_1'])
[i]Type for amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: net balance
to_1(address) := ϕ(['recipient_1', 'recipient_1', 'barFeeTo_16', 'barFeeTo_14', 'to_1', 'recipient_1'])
[i]Type for to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 7
Norm: u
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
unwrapBento_1(bool) := ϕ(['unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1'])
[i]Type for unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_6(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_74 (->None) := 4052550604(uint256)
Finance type key: (-1, -1)
[i]Type for REF_74

Name: REF_74 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4052550604
Fields: 
Finance Type: undef
TMP_208 = CONVERT this to address
[i]Type for TMP_208

Name: TMP_208 Function: _transfer
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_209(uint256) = INTERNAL_CALL, HybridPool._toShare(address,uint256)(token_1,amount_1)
token_1(address) := ϕ(['token1_21', 'token1_8', 'token0_18', 'token0_7', 'token_1'])
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['amount1_1', 'amount0_1', 'amount0_1', 'amount_1', 'amount1_1'])
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: net balance
bento_4(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_5(address) := ϕ(['bento_4', 'bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
output_1(uint256) := TMP_195(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token1_21', 'token1_8', 'token0_18', 'token0_7', 'token_1'])
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['amount1_1', 'amount0_1', 'amount0_1', 'amount_1', 'amount1_1'])
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: net balance
bento_4(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_5(address) := ϕ(['bento_4', 'bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
output_1(uint256) := TMP_195(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_209

Name: TMP_209 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_7(address) := ϕ(['bento_5'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
TMP_210(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_74,token_1,TMP_208,to_1,TMP_209)
[i]Type for TMP_210

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_24(bool,bytes) = LOW_LEVEL_CALL, dest:bento_7, function:call, arguments:['TMP_210']  
[i]Type for TUPLE_24

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_8(address) := ϕ(['bento_5', 'bento_7', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
success_1(bool)= UNPACK TUPLE_24 index: 0 
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_70 (->None) := 2547674416(uint256)
Finance type key: (-1, -1)
[i]Type for REF_70

Name: REF_70 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2547674416
Fields: 
Finance Type: undef
TMP_205 = CONVERT this to address
[i]Type for TMP_205

Name: TMP_205 Function: _transfer
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_206(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_70,token_1,TMP_205,to_1,amount_1,0)
[i]Type for TMP_206

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_23(bool,bytes) = LOW_LEVEL_CALL, dest:bento_6, function:call, arguments:['TMP_206']  
[i]Type for TUPLE_23

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_9(address) := ϕ(['bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
success_2(bool)= UNPACK TUPLE_23 index: 0 
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_211(None) = SOLIDITY_CALL require(bool,string)(success_scope_0_0,TRANSFER_FAILED)
[i]Type for TMP_211

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_207(None) = SOLIDITY_CALL require(bool,string)(success_2,WITHDRAW_FAILED)
[i]Type for TMP_207

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['tokenOut_3', 'token1_17', 'token1_6', 'token0_5', 'tokenIn_1', 'token0_21', 'tokenIn_1', 'tokenOut_1'])
[i]Type for token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['_barFee_1', 'amount0_1', 'amountOut_3', 'fee_3', 'amountOut_1', 'amount1_2', 'amount0_3', 'amount1_1'])
[i]Type for amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: net balance
to_1(address) := ϕ(['recipient_1', 'recipient_1', 'barFeeTo_16', 'barFeeTo_14', 'to_1', 'recipient_1'])
[i]Type for to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 7
Norm: u
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
unwrapBento_1(bool) := ϕ(['unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1'])
[i]Type for unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_6(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_74 (->None) := 4052550604(uint256)
Finance type key: (-1, -1)
[i]Type for REF_74

Name: REF_74 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4052550604
Fields: 
Finance Type: undef
TMP_208 = CONVERT this to address
[i]Type for TMP_208

Name: TMP_208 Function: _transfer
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_209(uint256) = INTERNAL_CALL, HybridPool._toShare(address,uint256)(token_1,amount_1)
token_1(address) := ϕ(['token1_21', 'token1_8', 'token0_18', 'token0_7', 'token_1'])
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['amount1_1', 'amount0_1', 'amount0_1', 'amount_1', 'amount1_1'])
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: net balance
bento_4(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_5(address) := ϕ(['bento_4', 'bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
output_1(uint256) := TMP_195(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token1_21', 'token1_8', 'token0_18', 'token0_7', 'token_1'])
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['amount1_1', 'amount0_1', 'amount0_1', 'amount_1', 'amount1_1'])
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: net balance
bento_4(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_5(address) := ϕ(['bento_4', 'bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
output_1(uint256) := TMP_195(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_209

Name: TMP_209 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_7(address) := ϕ(['bento_5'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
TMP_210(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_74,token_1,TMP_208,to_1,TMP_209)
[i]Type for TMP_210

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_24(bool,bytes) = LOW_LEVEL_CALL, dest:bento_7, function:call, arguments:['TMP_210']  
[i]Type for TUPLE_24

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_8(address) := ϕ(['bento_5', 'bento_7', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
success_1(bool)= UNPACK TUPLE_24 index: 0 
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_70 (->None) := 2547674416(uint256)
Finance type key: (-1, -1)
[i]Type for REF_70

Name: REF_70 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2547674416
Fields: 
Finance Type: undef
TMP_205 = CONVERT this to address
[i]Type for TMP_205

Name: TMP_205 Function: _transfer
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_206(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_70,token_1,TMP_205,to_1,amount_1,0)
[i]Type for TMP_206

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_23(bool,bytes) = LOW_LEVEL_CALL, dest:bento_6, function:call, arguments:['TMP_206']  
[i]Type for TUPLE_23

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_9(address) := ϕ(['bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
success_2(bool)= UNPACK TUPLE_23 index: 0 
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_211(None) = SOLIDITY_CALL require(bool,string)(success_scope_0_0,TRANSFER_FAILED)
[i]Type for TMP_211

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_207(None) = SOLIDITY_CALL require(bool,string)(success_2,WITHDRAW_FAILED)
[i]Type for TMP_207

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tokenIn_1(address) := ϕ(['token0_15', 'token1_15', 'tokenIn_1'])
[i]Type for tokenIn

Name: tokenIn Function: _handleFee
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
amountIn_1(uint256) := ϕ(['amountIn_1', 'amount1_1', 'amount0_1', 'amountIn_2'])
[i]Type for amountIn

Name: amountIn Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
MAX_FEE_7(uint256) := ϕ(['MAX_FEE_5', 'MAX_FEE_0', 'MAX_FEE_6', 'MAX_FEE_11'])
[i]Type for MAX_FEE

Name: MAX_FEE Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
swapFee_7(uint256) := ϕ(['swapFee_0', 'swapFee_5', 'swapFee_1', 'swapFee_11', 'swapFee_6'])
[i]Type for swapFee

Name: swapFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: simple fee ratio
barFeeTo_16(address) := ϕ(['barFeeTo_0', 'barFeeTo_15', 'barFeeTo_1', 'barFeeTo_17'])
[i]Type for barFeeTo

Name: barFeeTo Function: _handleFee
Num: -1
Den: -1
Address: 7
Norm: u
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
barFee_3(uint256) := ϕ(['barFee_2', 'barFee_0', 'barFee_1'])
[i]Type for barFee

Name: barFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_274(uint256) = amountIn_1 (c)* swapFee_7
Finance type key: (0, 12)
[i]Type for TMP_274

Name: TMP_274 Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: net balance
TMP_275(uint256) = TMP_274 (c)/ MAX_FEE_7
[i]Type for TMP_275

Name: TMP_275 Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: net balance
fee_1(uint256) := TMP_275(uint256)
Finance type key: (1, -1)
[i]Type for fee

Name: fee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: net balance
TMP_276(uint256) = fee_1 (c)* barFee_3
[i]Type for TMP_276

Name: TMP_276 Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: net balance
TMP_277(uint256) = TMP_276 (c)/ MAX_FEE_7
[i]Type for TMP_277

Name: TMP_277 Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: net balance
_barFee_1(uint256) := TMP_277(uint256)
Finance type key: (1, -1)
[i]Type for _barFee

Name: _barFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: net balance
INTERNAL_CALL, HybridPool._transfer(address,uint256,address,bool)(tokenIn_1,_barFee_1,barFeeTo_16,False)
token_1(address) := ϕ(['tokenOut_3', 'token1_17', 'token1_6', 'token0_5', 'tokenIn_1', 'token0_21', 'tokenIn_1', 'tokenOut_1'])
[i]Type for token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['_barFee_1', 'amount0_1', 'amountOut_3', 'fee_3', 'amountOut_1', 'amount1_2', 'amount0_3', 'amount1_1'])
[i]Type for amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: net balance
to_1(address) := ϕ(['recipient_1', 'recipient_1', 'barFeeTo_16', 'barFeeTo_14', 'to_1', 'recipient_1'])
[i]Type for to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 7
Norm: u
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
unwrapBento_1(bool) := ϕ(['unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1'])
[i]Type for unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_6(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_74 (->None) := 4052550604(uint256)
Finance type key: (-1, -1)
[i]Type for REF_74

Name: REF_74 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4052550604
Fields: 
Finance Type: undef
TMP_208 = CONVERT this to address
[i]Type for TMP_208

Name: TMP_208 Function: _transfer
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_209(uint256) = INTERNAL_CALL, HybridPool._toShare(address,uint256)(token_1,amount_1)
token_1(address) := ϕ(['token1_21', 'token1_8', 'token0_18', 'token0_7', 'token_1'])
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['amount1_1', 'amount0_1', 'amount0_1', 'amount_1', 'amount1_1'])
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: net balance
bento_4(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_5(address) := ϕ(['bento_4', 'bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
output_1(uint256) := TMP_195(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token1_21', 'token1_8', 'token0_18', 'token0_7', 'token_1'])
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['amount1_1', 'amount0_1', 'amount0_1', 'amount_1', 'amount1_1'])
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: net balance
bento_4(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_5(address) := ϕ(['bento_4', 'bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
output_1(uint256) := TMP_195(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_209

Name: TMP_209 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_7(address) := ϕ(['bento_5'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
TMP_210(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_74,token_1,TMP_208,to_1,TMP_209)
[i]Type for TMP_210

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_24(bool,bytes) = LOW_LEVEL_CALL, dest:bento_7, function:call, arguments:['TMP_210']  
[i]Type for TUPLE_24

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_8(address) := ϕ(['bento_5', 'bento_7', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
success_1(bool)= UNPACK TUPLE_24 index: 0 
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_70 (->None) := 2547674416(uint256)
Finance type key: (-1, -1)
[i]Type for REF_70

Name: REF_70 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2547674416
Fields: 
Finance Type: undef
TMP_205 = CONVERT this to address
[i]Type for TMP_205

Name: TMP_205 Function: _transfer
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_206(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_70,token_1,TMP_205,to_1,amount_1,0)
[i]Type for TMP_206

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_23(bool,bytes) = LOW_LEVEL_CALL, dest:bento_6, function:call, arguments:['TMP_206']  
[i]Type for TUPLE_23

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_9(address) := ϕ(['bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
success_2(bool)= UNPACK TUPLE_23 index: 0 
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_211(None) = SOLIDITY_CALL require(bool,string)(success_scope_0_0,TRANSFER_FAILED)
[i]Type for TMP_211

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_207(None) = SOLIDITY_CALL require(bool,string)(success_2,WITHDRAW_FAILED)
[i]Type for TMP_207

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['tokenOut_3', 'token1_17', 'token1_6', 'token0_5', 'tokenIn_1', 'token0_21', 'tokenIn_1', 'tokenOut_1'])
[i]Type for token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['_barFee_1', 'amount0_1', 'amountOut_3', 'fee_3', 'amountOut_1', 'amount1_2', 'amount0_3', 'amount1_1'])
[i]Type for amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: net balance
to_1(address) := ϕ(['recipient_1', 'recipient_1', 'barFeeTo_16', 'barFeeTo_14', 'to_1', 'recipient_1'])
[i]Type for to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 7
Norm: u
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
unwrapBento_1(bool) := ϕ(['unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1'])
[i]Type for unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_6(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_74 (->None) := 4052550604(uint256)
Finance type key: (-1, -1)
[i]Type for REF_74

Name: REF_74 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4052550604
Fields: 
Finance Type: undef
TMP_208 = CONVERT this to address
[i]Type for TMP_208

Name: TMP_208 Function: _transfer
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_209(uint256) = INTERNAL_CALL, HybridPool._toShare(address,uint256)(token_1,amount_1)
token_1(address) := ϕ(['token1_21', 'token1_8', 'token0_18', 'token0_7', 'token_1'])
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['amount1_1', 'amount0_1', 'amount0_1', 'amount_1', 'amount1_1'])
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: net balance
bento_4(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_5(address) := ϕ(['bento_4', 'bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
output_1(uint256) := TMP_195(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token1_21', 'token1_8', 'token0_18', 'token0_7', 'token_1'])
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['amount1_1', 'amount0_1', 'amount0_1', 'amount_1', 'amount1_1'])
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: net balance
bento_4(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_5(address) := ϕ(['bento_4', 'bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
output_1(uint256) := TMP_195(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_209

Name: TMP_209 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_7(address) := ϕ(['bento_5'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
TMP_210(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_74,token_1,TMP_208,to_1,TMP_209)
[i]Type for TMP_210

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_24(bool,bytes) = LOW_LEVEL_CALL, dest:bento_7, function:call, arguments:['TMP_210']  
[i]Type for TUPLE_24

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_8(address) := ϕ(['bento_5', 'bento_7', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
success_1(bool)= UNPACK TUPLE_24 index: 0 
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_70 (->None) := 2547674416(uint256)
Finance type key: (-1, -1)
[i]Type for REF_70

Name: REF_70 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2547674416
Fields: 
Finance Type: undef
TMP_205 = CONVERT this to address
[i]Type for TMP_205

Name: TMP_205 Function: _transfer
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_206(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_70,token_1,TMP_205,to_1,amount_1,0)
[i]Type for TMP_206

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_23(bool,bytes) = LOW_LEVEL_CALL, dest:bento_6, function:call, arguments:['TMP_206']  
[i]Type for TUPLE_23

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_9(address) := ϕ(['bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
success_2(bool)= UNPACK TUPLE_23 index: 0 
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_211(None) = SOLIDITY_CALL require(bool,string)(success_scope_0_0,TRANSFER_FAILED)
[i]Type for TMP_211

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_207(None) = SOLIDITY_CALL require(bool,string)(success_2,WITHDRAW_FAILED)
[i]Type for TMP_207

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_111

Name: TMP_111 Function: burnSingle
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
fee_scope_0_1(uint256) := TMP_111(uint256)
Finance type key: (-1, -1)
[i]Type for fee_scope_0

Name: fee_scope_0 Function: burnSingle
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_102(uint256) = INTERNAL_CALL, HybridPool._handleFee(address,uint256)(token0_15,amount0_1)
tokenIn_1(address) := ϕ(['token0_15', 'token1_15', 'tokenIn_1'])
[i]Type for tokenIn

Name: tokenIn Function: _handleFee
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
amountIn_1(uint256) := ϕ(['amountIn_1', 'amount1_1', 'amount0_1', 'amountIn_2'])
[i]Type for amountIn

Name: amountIn Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
MAX_FEE_7(uint256) := ϕ(['MAX_FEE_5', 'MAX_FEE_0', 'MAX_FEE_6', 'MAX_FEE_11'])
[i]Type for MAX_FEE

Name: MAX_FEE Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
swapFee_7(uint256) := ϕ(['swapFee_0', 'swapFee_5', 'swapFee_1', 'swapFee_11', 'swapFee_6'])
[i]Type for swapFee

Name: swapFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: simple fee ratio
barFeeTo_16(address) := ϕ(['barFeeTo_0', 'barFeeTo_15', 'barFeeTo_1', 'barFeeTo_17'])
[i]Type for barFeeTo

Name: barFeeTo Function: _handleFee
Num: -1
Den: -1
Address: 7
Norm: u
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
barFee_3(uint256) := ϕ(['barFee_2', 'barFee_0', 'barFee_1'])
[i]Type for barFee

Name: barFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_274(uint256) = amountIn_1 (c)* swapFee_7
Finance type key: (0, 12)
[i]Type for TMP_274

Name: TMP_274 Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: net balance
TMP_275(uint256) = TMP_274 (c)/ MAX_FEE_7
[i]Type for TMP_275

Name: TMP_275 Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: net balance
fee_1(uint256) := TMP_275(uint256)
Finance type key: (1, -1)
[i]Type for fee

Name: fee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: net balance
TMP_276(uint256) = fee_1 (c)* barFee_3
[i]Type for TMP_276

Name: TMP_276 Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: net balance
TMP_277(uint256) = TMP_276 (c)/ MAX_FEE_7
[i]Type for TMP_277

Name: TMP_277 Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: net balance
_barFee_1(uint256) := TMP_277(uint256)
Finance type key: (1, -1)
[i]Type for _barFee

Name: _barFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: net balance
INTERNAL_CALL, HybridPool._transfer(address,uint256,address,bool)(tokenIn_1,_barFee_1,barFeeTo_16,False)
token_1(address) := ϕ(['tokenOut_3', 'token1_17', 'token1_6', 'token0_5', 'tokenIn_1', 'token0_21', 'tokenIn_1', 'tokenOut_1'])
[i]Type for token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['_barFee_1', 'amount0_1', 'amountOut_3', 'fee_3', 'amountOut_1', 'amount1_2', 'amount0_3', 'amount1_1'])
[i]Type for amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: net balance
to_1(address) := ϕ(['recipient_1', 'recipient_1', 'barFeeTo_16', 'barFeeTo_14', 'to_1', 'recipient_1'])
[i]Type for to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 7
Norm: u
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
unwrapBento_1(bool) := ϕ(['unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1'])
[i]Type for unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_6(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_74 (->None) := 4052550604(uint256)
Finance type key: (-1, -1)
[i]Type for REF_74

Name: REF_74 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4052550604
Fields: 
Finance Type: undef
TMP_208 = CONVERT this to address
[i]Type for TMP_208

Name: TMP_208 Function: _transfer
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_209(uint256) = INTERNAL_CALL, HybridPool._toShare(address,uint256)(token_1,amount_1)
token_1(address) := ϕ(['token1_21', 'token1_8', 'token0_18', 'token0_7', 'token_1'])
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['amount1_1', 'amount0_1', 'amount0_1', 'amount_1', 'amount1_1'])
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: net balance
bento_4(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_5(address) := ϕ(['bento_4', 'bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
output_1(uint256) := TMP_195(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token1_21', 'token1_8', 'token0_18', 'token0_7', 'token_1'])
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['amount1_1', 'amount0_1', 'amount0_1', 'amount_1', 'amount1_1'])
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: net balance
bento_4(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_5(address) := ϕ(['bento_4', 'bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
output_1(uint256) := TMP_195(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_209

Name: TMP_209 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_7(address) := ϕ(['bento_5'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
TMP_210(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_74,token_1,TMP_208,to_1,TMP_209)
[i]Type for TMP_210

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_24(bool,bytes) = LOW_LEVEL_CALL, dest:bento_7, function:call, arguments:['TMP_210']  
[i]Type for TUPLE_24

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_8(address) := ϕ(['bento_5', 'bento_7', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
success_1(bool)= UNPACK TUPLE_24 index: 0 
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_70 (->None) := 2547674416(uint256)
Finance type key: (-1, -1)
[i]Type for REF_70

Name: REF_70 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2547674416
Fields: 
Finance Type: undef
TMP_205 = CONVERT this to address
[i]Type for TMP_205

Name: TMP_205 Function: _transfer
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_206(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_70,token_1,TMP_205,to_1,amount_1,0)
[i]Type for TMP_206

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_23(bool,bytes) = LOW_LEVEL_CALL, dest:bento_6, function:call, arguments:['TMP_206']  
[i]Type for TUPLE_23

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_9(address) := ϕ(['bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
success_2(bool)= UNPACK TUPLE_23 index: 0 
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_211(None) = SOLIDITY_CALL require(bool,string)(success_scope_0_0,TRANSFER_FAILED)
[i]Type for TMP_211

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_207(None) = SOLIDITY_CALL require(bool,string)(success_2,WITHDRAW_FAILED)
[i]Type for TMP_207

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['tokenOut_3', 'token1_17', 'token1_6', 'token0_5', 'tokenIn_1', 'token0_21', 'tokenIn_1', 'tokenOut_1'])
[i]Type for token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['_barFee_1', 'amount0_1', 'amountOut_3', 'fee_3', 'amountOut_1', 'amount1_2', 'amount0_3', 'amount1_1'])
[i]Type for amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: net balance
to_1(address) := ϕ(['recipient_1', 'recipient_1', 'barFeeTo_16', 'barFeeTo_14', 'to_1', 'recipient_1'])
[i]Type for to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 7
Norm: u
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
unwrapBento_1(bool) := ϕ(['unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1'])
[i]Type for unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_6(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_74 (->None) := 4052550604(uint256)
Finance type key: (-1, -1)
[i]Type for REF_74

Name: REF_74 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4052550604
Fields: 
Finance Type: undef
TMP_208 = CONVERT this to address
[i]Type for TMP_208

Name: TMP_208 Function: _transfer
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_209(uint256) = INTERNAL_CALL, HybridPool._toShare(address,uint256)(token_1,amount_1)
token_1(address) := ϕ(['token1_21', 'token1_8', 'token0_18', 'token0_7', 'token_1'])
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['amount1_1', 'amount0_1', 'amount0_1', 'amount_1', 'amount1_1'])
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: net balance
bento_4(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_5(address) := ϕ(['bento_4', 'bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
output_1(uint256) := TMP_195(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token1_21', 'token1_8', 'token0_18', 'token0_7', 'token_1'])
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['amount1_1', 'amount0_1', 'amount0_1', 'amount_1', 'amount1_1'])
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: net balance
bento_4(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_5(address) := ϕ(['bento_4', 'bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
output_1(uint256) := TMP_195(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_209

Name: TMP_209 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_7(address) := ϕ(['bento_5'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
TMP_210(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_74,token_1,TMP_208,to_1,TMP_209)
[i]Type for TMP_210

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_24(bool,bytes) = LOW_LEVEL_CALL, dest:bento_7, function:call, arguments:['TMP_210']  
[i]Type for TUPLE_24

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_8(address) := ϕ(['bento_5', 'bento_7', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
success_1(bool)= UNPACK TUPLE_24 index: 0 
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_70 (->None) := 2547674416(uint256)
Finance type key: (-1, -1)
[i]Type for REF_70

Name: REF_70 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2547674416
Fields: 
Finance Type: undef
TMP_205 = CONVERT this to address
[i]Type for TMP_205

Name: TMP_205 Function: _transfer
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_206(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_70,token_1,TMP_205,to_1,amount_1,0)
[i]Type for TMP_206

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_23(bool,bytes) = LOW_LEVEL_CALL, dest:bento_6, function:call, arguments:['TMP_206']  
[i]Type for TUPLE_23

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_9(address) := ϕ(['bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
success_2(bool)= UNPACK TUPLE_23 index: 0 
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_211(None) = SOLIDITY_CALL require(bool,string)(success_scope_0_0,TRANSFER_FAILED)
[i]Type for TMP_211

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_207(None) = SOLIDITY_CALL require(bool,string)(success_2,WITHDRAW_FAILED)
[i]Type for TMP_207

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tokenIn_1(address) := ϕ(['token0_15', 'token1_15', 'tokenIn_1'])
[i]Type for tokenIn

Name: tokenIn Function: _handleFee
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
amountIn_1(uint256) := ϕ(['amountIn_1', 'amount1_1', 'amount0_1', 'amountIn_2'])
[i]Type for amountIn

Name: amountIn Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
MAX_FEE_7(uint256) := ϕ(['MAX_FEE_5', 'MAX_FEE_0', 'MAX_FEE_6', 'MAX_FEE_11'])
[i]Type for MAX_FEE

Name: MAX_FEE Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
swapFee_7(uint256) := ϕ(['swapFee_0', 'swapFee_5', 'swapFee_1', 'swapFee_11', 'swapFee_6'])
[i]Type for swapFee

Name: swapFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: simple fee ratio
barFeeTo_16(address) := ϕ(['barFeeTo_0', 'barFeeTo_15', 'barFeeTo_1', 'barFeeTo_17'])
[i]Type for barFeeTo

Name: barFeeTo Function: _handleFee
Num: -1
Den: -1
Address: 7
Norm: u
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
barFee_3(uint256) := ϕ(['barFee_2', 'barFee_0', 'barFee_1'])
[i]Type for barFee

Name: barFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_274(uint256) = amountIn_1 (c)* swapFee_7
Finance type key: (0, 12)
[i]Type for TMP_274

Name: TMP_274 Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: net balance
TMP_275(uint256) = TMP_274 (c)/ MAX_FEE_7
[i]Type for TMP_275

Name: TMP_275 Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: net balance
fee_1(uint256) := TMP_275(uint256)
Finance type key: (1, -1)
[i]Type for fee

Name: fee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: net balance
TMP_276(uint256) = fee_1 (c)* barFee_3
[i]Type for TMP_276

Name: TMP_276 Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: net balance
TMP_277(uint256) = TMP_276 (c)/ MAX_FEE_7
[i]Type for TMP_277

Name: TMP_277 Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: net balance
_barFee_1(uint256) := TMP_277(uint256)
Finance type key: (1, -1)
[i]Type for _barFee

Name: _barFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: net balance
INTERNAL_CALL, HybridPool._transfer(address,uint256,address,bool)(tokenIn_1,_barFee_1,barFeeTo_16,False)
token_1(address) := ϕ(['tokenOut_3', 'token1_17', 'token1_6', 'token0_5', 'tokenIn_1', 'token0_21', 'tokenIn_1', 'tokenOut_1'])
[i]Type for token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['_barFee_1', 'amount0_1', 'amountOut_3', 'fee_3', 'amountOut_1', 'amount1_2', 'amount0_3', 'amount1_1'])
[i]Type for amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: net balance
to_1(address) := ϕ(['recipient_1', 'recipient_1', 'barFeeTo_16', 'barFeeTo_14', 'to_1', 'recipient_1'])
[i]Type for to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 7
Norm: u
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
unwrapBento_1(bool) := ϕ(['unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1'])
[i]Type for unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_6(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_74 (->None) := 4052550604(uint256)
Finance type key: (-1, -1)
[i]Type for REF_74

Name: REF_74 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4052550604
Fields: 
Finance Type: undef
TMP_208 = CONVERT this to address
[i]Type for TMP_208

Name: TMP_208 Function: _transfer
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_209(uint256) = INTERNAL_CALL, HybridPool._toShare(address,uint256)(token_1,amount_1)
token_1(address) := ϕ(['token1_21', 'token1_8', 'token0_18', 'token0_7', 'token_1'])
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['amount1_1', 'amount0_1', 'amount0_1', 'amount_1', 'amount1_1'])
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: net balance
bento_4(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_5(address) := ϕ(['bento_4', 'bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
output_1(uint256) := TMP_195(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token1_21', 'token1_8', 'token0_18', 'token0_7', 'token_1'])
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['amount1_1', 'amount0_1', 'amount0_1', 'amount_1', 'amount1_1'])
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: net balance
bento_4(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_5(address) := ϕ(['bento_4', 'bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
output_1(uint256) := TMP_195(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_209

Name: TMP_209 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_7(address) := ϕ(['bento_5'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
TMP_210(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_74,token_1,TMP_208,to_1,TMP_209)
[i]Type for TMP_210

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_24(bool,bytes) = LOW_LEVEL_CALL, dest:bento_7, function:call, arguments:['TMP_210']  
[i]Type for TUPLE_24

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_8(address) := ϕ(['bento_5', 'bento_7', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
success_1(bool)= UNPACK TUPLE_24 index: 0 
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_70 (->None) := 2547674416(uint256)
Finance type key: (-1, -1)
[i]Type for REF_70

Name: REF_70 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2547674416
Fields: 
Finance Type: undef
TMP_205 = CONVERT this to address
[i]Type for TMP_205

Name: TMP_205 Function: _transfer
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_206(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_70,token_1,TMP_205,to_1,amount_1,0)
[i]Type for TMP_206

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_23(bool,bytes) = LOW_LEVEL_CALL, dest:bento_6, function:call, arguments:['TMP_206']  
[i]Type for TUPLE_23

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_9(address) := ϕ(['bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
success_2(bool)= UNPACK TUPLE_23 index: 0 
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_211(None) = SOLIDITY_CALL require(bool,string)(success_scope_0_0,TRANSFER_FAILED)
[i]Type for TMP_211

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_207(None) = SOLIDITY_CALL require(bool,string)(success_2,WITHDRAW_FAILED)
[i]Type for TMP_207

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['tokenOut_3', 'token1_17', 'token1_6', 'token0_5', 'tokenIn_1', 'token0_21', 'tokenIn_1', 'tokenOut_1'])
[i]Type for token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['_barFee_1', 'amount0_1', 'amountOut_3', 'fee_3', 'amountOut_1', 'amount1_2', 'amount0_3', 'amount1_1'])
[i]Type for amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: net balance
to_1(address) := ϕ(['recipient_1', 'recipient_1', 'barFeeTo_16', 'barFeeTo_14', 'to_1', 'recipient_1'])
[i]Type for to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 7
Norm: u
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
unwrapBento_1(bool) := ϕ(['unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1'])
[i]Type for unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_6(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_74 (->None) := 4052550604(uint256)
Finance type key: (-1, -1)
[i]Type for REF_74

Name: REF_74 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4052550604
Fields: 
Finance Type: undef
TMP_208 = CONVERT this to address
[i]Type for TMP_208

Name: TMP_208 Function: _transfer
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_209(uint256) = INTERNAL_CALL, HybridPool._toShare(address,uint256)(token_1,amount_1)
token_1(address) := ϕ(['token1_21', 'token1_8', 'token0_18', 'token0_7', 'token_1'])
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['amount1_1', 'amount0_1', 'amount0_1', 'amount_1', 'amount1_1'])
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: net balance
bento_4(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_5(address) := ϕ(['bento_4', 'bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
output_1(uint256) := TMP_195(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token1_21', 'token1_8', 'token0_18', 'token0_7', 'token_1'])
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['amount1_1', 'amount0_1', 'amount0_1', 'amount_1', 'amount1_1'])
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: net balance
bento_4(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_5(address) := ϕ(['bento_4', 'bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
output_1(uint256) := TMP_195(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_209

Name: TMP_209 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_7(address) := ϕ(['bento_5'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
TMP_210(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_74,token_1,TMP_208,to_1,TMP_209)
[i]Type for TMP_210

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_24(bool,bytes) = LOW_LEVEL_CALL, dest:bento_7, function:call, arguments:['TMP_210']  
[i]Type for TUPLE_24

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_8(address) := ϕ(['bento_5', 'bento_7', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
success_1(bool)= UNPACK TUPLE_24 index: 0 
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_70 (->None) := 2547674416(uint256)
Finance type key: (-1, -1)
[i]Type for REF_70

Name: REF_70 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2547674416
Fields: 
Finance Type: undef
TMP_205 = CONVERT this to address
[i]Type for TMP_205

Name: TMP_205 Function: _transfer
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_206(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_70,token_1,TMP_205,to_1,amount_1,0)
[i]Type for TMP_206

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_23(bool,bytes) = LOW_LEVEL_CALL, dest:bento_6, function:call, arguments:['TMP_206']  
[i]Type for TUPLE_23

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_9(address) := ϕ(['bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
success_2(bool)= UNPACK TUPLE_23 index: 0 
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_211(None) = SOLIDITY_CALL require(bool,string)(success_scope_0_0,TRANSFER_FAILED)
[i]Type for TMP_211

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_207(None) = SOLIDITY_CALL require(bool,string)(success_2,WITHDRAW_FAILED)
[i]Type for TMP_207

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_102

Name: TMP_102 Function: burnSingle
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
fee_1(uint256) := TMP_102(uint256)
Finance type key: (-1, -1)
[i]Type for fee

Name: fee Function: burnSingle
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_112(uint256) = amount1_1 (c)- fee_scope_0_1
[i]Type for TMP_112

Name: TMP_112 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_113(uint256) = _reserve0_1 (c)- amount0_1
[i]Type for TMP_113

Name: TMP_113 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_114(uint256) = _reserve1_1 (c)- amount1_1
[i]Type for TMP_114

Name: TMP_114 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_115(uint256) = INTERNAL_CALL, HybridPool._getAmountOut(uint256,uint256,uint256,bool)(TMP_112,TMP_113,TMP_114,False)
amountIn_1(uint256) := ϕ(['TMP_153', 'TMP_124', 'TMP_103', 'TMP_112', 'TMP_130', 'TMP_140', 'amountIn_3'])
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
_reserve0_1(uint256) := ϕ(['_reserve0_1', '_reserve0_1', '_reserve0_1', 'TMP_104', 'TMP_113'])
[i]Type for _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
_reserve1_1(uint256) := ϕ(['_reserve1_1', 'TMP_105', 'TMP_114', '_reserve1_1', '_reserve1_1'])
[i]Type for _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
token0PrecisionMultiplier_2(uint256) := ϕ(['token0PrecisionMultiplier_0', 'token0PrecisionMultiplier_1', 'token0PrecisionMultiplier_4'])
[i]Type for token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
token1PrecisionMultiplier_2(uint256) := ϕ(['token1PrecisionMultiplier_4', 'token1PrecisionMultiplier_1', 'token1PrecisionMultiplier_0'])
[i]Type for token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_196(uint256) = _reserve0_1 (c)* token0PrecisionMultiplier_2
[i]Type for TMP_196

Name: TMP_196 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: raw balance
xpIn_1(uint256) := TMP_196(uint256)
Finance type key: (0, -1)
[i]Type for xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: raw balance
TMP_197(uint256) = _reserve1_1 (c)* token1PrecisionMultiplier_2
[i]Type for TMP_197

Name: TMP_197 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: raw balance
xpOut_1(uint256) := TMP_197(uint256)
Finance type key: (0, -1)
[i]Type for xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: raw balance
TMP_198(uint256) = _reserve1_1 (c)* token1PrecisionMultiplier_2
[i]Type for TMP_198

Name: TMP_198 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: raw balance
xpIn_2(uint256) := TMP_198(uint256)
Finance type key: (0, -1)
[i]Type for xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: raw balance
amountIn_2(uint256) = amountIn_1 (c)* token0PrecisionMultiplier_2
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: raw balance
TMP_199(uint256) = _reserve0_1 (c)* token0PrecisionMultiplier_2
[i]Type for TMP_199

Name: TMP_199 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: raw balance
xpOut_2(uint256) := TMP_199(uint256)
Finance type key: (0, -1)
[i]Type for xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: raw balance
amountIn_4(uint256) := ϕ(['amountIn_3', 'amountIn_2'])
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
xpIn_3(uint256) := ϕ(['xpIn_1', 'xpIn_2'])
[i]Type for xpIn

Name: xpIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
xpOut_3(uint256) := ϕ(['xpOut_1', 'xpOut_2'])
[i]Type for xpOut

Name: xpOut Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_200(uint256) = INTERNAL_CALL, HybridPool._computeLiquidityFromAdjustedBalances(uint256,uint256)(xpIn_3,xpOut_3)
xp0_1(uint256) := ϕ(['xpIn_3', 'xp0_1'])
[i]Type for xp0

Name: xp0 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
xp1_1(uint256) := ϕ(['xpOut_3', 'xp1_1'])
[i]Type for xp1

Name: xp1 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
MAX_LOOP_LIMIT_1(uint256) := ϕ(['MAX_LOOP_LIMIT_0'])
[i]Type for MAX_LOOP_LIMIT

Name: MAX_LOOP_LIMIT Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
N_A_2(uint256) := ϕ(['N_A_0', 'N_A_1'])
[i]Type for N_A

Name: N_A Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
A_PRECISION_1(uint256) := ϕ(['A_PRECISION_0'])
[i]Type for A_PRECISION

Name: A_PRECISION Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_215(uint256) = xp0_1 (c)+ xp1_1
Finance type key: (0, 0)
[i]Type for TMP_215

Name: TMP_215 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
s_1(uint256) := TMP_215(uint256)
Finance type key: (0, -1)
[i]Type for s

Name: s Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_216(bool) = s_1 == 0
[i]Type for TMP_216

Name: TMP_216 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
computed_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for computed

Name: computed Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
D_1(uint256) := s_1(uint256)
Finance type key: (0, -1)
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
i_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
D_2(uint256) := ϕ(['D_3', 'D_1'])
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
i_2(uint256) := ϕ(['i_3', 'i_1'])
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_217(bool) = i_2 < MAX_LOOP_LIMIT_1
[i]Type for TMP_217

Name: TMP_217 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_218(uint256) = D_2 (c)* D_2
Finance type key: (0, 0)
[i]Type for TMP_218

Name: TMP_218 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_219(uint256) = TMP_218 (c)/ xp0_1
Finance type key: (0, 0)
Finance type key: (0, 0)
[i]Type for TMP_219

Name: TMP_219 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
TMP_220(uint256) = TMP_219 (c)* D_2
Finance type key: (40, 0)
[i]Type for TMP_220

Name: TMP_220 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_221(uint256) = TMP_220 (c)/ xp1_1
Finance type key: (0, 0)
Finance type key: (0, 0)
[i]Type for TMP_221

Name: TMP_221 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
TMP_222(uint256) = TMP_221 (c)/ 4
[i]Type for TMP_222

Name: TMP_222 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: price/exchange rate
dP_1(uint256) := TMP_222(uint256)
Finance type key: (40, -1)
[i]Type for dP

Name: dP Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: price/exchange rate
prevD_1(uint256) := D_2(uint256)
Finance type key: (0, -1)
[i]Type for prevD

Name: prevD Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
computed_2(uint256) := D_3(uint256)
Finance type key: (-1, -1)
[i]Type for computed

Name: computed Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 40
Fields: 
Finance Type: undef
TMP_223(uint256) = N_A_2 (c)* s_1
[i]Type for TMP_223

Name: TMP_223 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: raw balance
TMP_224(uint256) = TMP_223 (c)/ A_PRECISION_1
[i]Type for TMP_224

Name: TMP_224 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: raw balance
TMP_225(uint256) = 2 (c)* dP_1
[i]Type for TMP_225

Name: TMP_225 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: price/exchange rate
TMP_226(uint256) = TMP_224 (c)+ TMP_225
Finance type key: (0, 40)
Error with TMP_226 in function _computeLiquidityFromAdjustedBalances
Error with: TMP_226 in function _computeLiquidityFromAdjustedBalances
[i]Type for TMP_226

Name: TMP_226 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_227(uint256) = TMP_226 (c)* D_2
[i]Type for TMP_227

Name: TMP_227 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: raw balance
TMP_228(uint256) = N_A_2 (c)/ A_PRECISION_1
[i]Type for TMP_228

Name: TMP_228 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_229(uint256) = TMP_228 (c)- 1
[i]Type for TMP_229

Name: TMP_229 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
TMP_230(uint256) = TMP_229 (c)* D_2
[i]Type for TMP_230

Name: TMP_230 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: raw balance
TMP_231(uint256) = 3 (c)* dP_1
[i]Type for TMP_231

Name: TMP_231 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 12
Fields: 
Finance Type: price/exchange rate
TMP_232(uint256) = TMP_230 (c)+ TMP_231
Finance type key: (0, 40)
Error with TMP_232 in function _computeLiquidityFromAdjustedBalances
Error with: TMP_232 in function _computeLiquidityFromAdjustedBalances
[i]Type for TMP_232

Name: TMP_232 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 13
Fields: 
Finance Type: undef
TMP_233(uint256) = TMP_227 (c)/ TMP_232
[i]Type for TMP_233

Name: TMP_233 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
D_3(uint256) := TMP_233(uint256)
Finance type key: (0, -1)
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
TMP_234(bool) = LIBRARY_CALL, dest:MathUtils, function:MathUtils.within1(uint256,uint256), arguments:['D_3', 'prevD_1'] 
[i]Type for TMP_234

Name: TMP_234 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_235(uint256) := i_2(uint256)
Finance type key: (-1, -1)
[i]Type for TMP_235

Name: TMP_235 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_3(uint256) = i_2 (c)+ 1
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
xp0_1(uint256) := ϕ(['xpIn_3', 'xp0_1'])
[i]Type for xp0

Name: xp0 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
xp1_1(uint256) := ϕ(['xpOut_3', 'xp1_1'])
[i]Type for xp1

Name: xp1 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
MAX_LOOP_LIMIT_1(uint256) := ϕ(['MAX_LOOP_LIMIT_0'])
[i]Type for MAX_LOOP_LIMIT

Name: MAX_LOOP_LIMIT Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
N_A_2(uint256) := ϕ(['N_A_0', 'N_A_1'])
[i]Type for N_A

Name: N_A Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
A_PRECISION_1(uint256) := ϕ(['A_PRECISION_0'])
[i]Type for A_PRECISION

Name: A_PRECISION Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_215(uint256) = xp0_1 (c)+ xp1_1
Finance type key: (0, 0)
[i]Type for TMP_215

Name: TMP_215 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
s_1(uint256) := TMP_215(uint256)
Finance type key: (0, -1)
[i]Type for s

Name: s Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_216(bool) = s_1 == 0
[i]Type for TMP_216

Name: TMP_216 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
computed_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for computed

Name: computed Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
D_1(uint256) := s_1(uint256)
Finance type key: (0, -1)
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
i_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
D_2(uint256) := ϕ(['D_3', 'D_1'])
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
i_2(uint256) := ϕ(['i_3', 'i_1'])
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_217(bool) = i_2 < MAX_LOOP_LIMIT_1
[i]Type for TMP_217

Name: TMP_217 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_218(uint256) = D_2 (c)* D_2
Finance type key: (0, 0)
[i]Type for TMP_218

Name: TMP_218 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_219(uint256) = TMP_218 (c)/ xp0_1
Finance type key: (0, 0)
Finance type key: (0, 0)
[i]Type for TMP_219

Name: TMP_219 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
TMP_220(uint256) = TMP_219 (c)* D_2
Finance type key: (40, 0)
[i]Type for TMP_220

Name: TMP_220 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_221(uint256) = TMP_220 (c)/ xp1_1
Finance type key: (0, 0)
Finance type key: (0, 0)
[i]Type for TMP_221

Name: TMP_221 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
TMP_222(uint256) = TMP_221 (c)/ 4
[i]Type for TMP_222

Name: TMP_222 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: price/exchange rate
dP_1(uint256) := TMP_222(uint256)
Finance type key: (40, -1)
[i]Type for dP

Name: dP Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: price/exchange rate
prevD_1(uint256) := D_2(uint256)
Finance type key: (0, -1)
[i]Type for prevD

Name: prevD Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
computed_2(uint256) := D_3(uint256)
Finance type key: (0, -1)
[i]Type for computed

Name: computed Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
TMP_223(uint256) = N_A_2 (c)* s_1
[i]Type for TMP_223

Name: TMP_223 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: raw balance
TMP_224(uint256) = TMP_223 (c)/ A_PRECISION_1
[i]Type for TMP_224

Name: TMP_224 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: raw balance
TMP_225(uint256) = 2 (c)* dP_1
[i]Type for TMP_225

Name: TMP_225 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: price/exchange rate
TMP_226(uint256) = TMP_224 (c)+ TMP_225
Finance type key: (0, 40)
[i]Type for TMP_226

Name: TMP_226 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_227(uint256) = TMP_226 (c)* D_2
[i]Type for TMP_227

Name: TMP_227 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: raw balance
TMP_228(uint256) = N_A_2 (c)/ A_PRECISION_1
[i]Type for TMP_228

Name: TMP_228 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_229(uint256) = TMP_228 (c)- 1
[i]Type for TMP_229

Name: TMP_229 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
TMP_230(uint256) = TMP_229 (c)* D_2
[i]Type for TMP_230

Name: TMP_230 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: raw balance
TMP_231(uint256) = 3 (c)* dP_1
[i]Type for TMP_231

Name: TMP_231 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 12
Fields: 
Finance Type: price/exchange rate
TMP_232(uint256) = TMP_230 (c)+ TMP_231
Finance type key: (0, 40)
[i]Type for TMP_232

Name: TMP_232 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 13
Fields: 
Finance Type: undef
TMP_233(uint256) = TMP_227 (c)/ TMP_232
[i]Type for TMP_233

Name: TMP_233 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
D_3(uint256) := TMP_233(uint256)
Finance type key: (0, -1)
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
TMP_234(bool) = LIBRARY_CALL, dest:MathUtils, function:MathUtils.within1(uint256,uint256), arguments:['D_3', 'prevD_1'] 
[i]Type for TMP_234

Name: TMP_234 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_235(uint256) := i_2(uint256)
Finance type key: (-1, -1)
[i]Type for TMP_235

Name: TMP_235 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_3(uint256) = i_2 (c)+ 1
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
[i]Type for TMP_200

Name: TMP_200 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
d_1(uint256) := TMP_200(uint256)
Finance type key: (-1, -1)
[i]Type for d

Name: d Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_201(uint256) = xpIn_3 (c)+ amountIn_4
Finance type key: (0, 0)
[i]Type for TMP_201

Name: TMP_201 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
x_1(uint256) := TMP_201(uint256)
Finance type key: (0, -1)
[i]Type for x

Name: x Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
amountIn_3(uint256) = amountIn_1 (c)* token1PrecisionMultiplier_2
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: raw balance
TMP_202(uint256) = INTERNAL_CALL, HybridPool._getY(uint256,uint256)(x_1,d_1)
x_1(uint256) := ϕ(['x_1'])
[i]Type for x

Name: x Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
D_1(uint256) := ϕ(['d_1'])
[i]Type for D

Name: D Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MAX_LOOP_LIMIT_2(uint256) := ϕ(['MAX_LOOP_LIMIT_0'])
[i]Type for MAX_LOOP_LIMIT

Name: MAX_LOOP_LIMIT Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
N_A_3(uint256) := ϕ(['N_A_0', 'N_A_1'])
[i]Type for N_A

Name: N_A Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
A_PRECISION_2(uint256) := ϕ(['A_PRECISION_0'])
[i]Type for A_PRECISION

Name: A_PRECISION Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_236(uint256) = D_1 (c)* D_1
[i]Type for TMP_236

Name: TMP_236 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_237(uint256) = x_1 (c)* 2
[i]Type for TMP_237

Name: TMP_237 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: raw balance
TMP_238(uint256) = TMP_236 (c)/ TMP_237
[i]Type for TMP_238

Name: TMP_238 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: raw balance
c_1(uint256) := TMP_238(uint256)
Finance type key: (0, -1)
[i]Type for c

Name: c Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: raw balance
TMP_239(uint256) = c_1 (c)* D_1
[i]Type for TMP_239

Name: TMP_239 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: raw balance
TMP_240(uint256) = N_A_3 (c)* 2
[i]Type for TMP_240

Name: TMP_240 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
TMP_241(uint256) = TMP_240 (c)/ A_PRECISION_2
[i]Type for TMP_241

Name: TMP_241 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
TMP_242(uint256) = TMP_239 (c)/ TMP_241
[i]Type for TMP_242

Name: TMP_242 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
c_2(uint256) := TMP_242(uint256)
Finance type key: (0, -1)
[i]Type for c

Name: c Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
TMP_243(uint256) = D_1 (c)* A_PRECISION_2
[i]Type for TMP_243

Name: TMP_243 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_244(uint256) = TMP_243 (c)/ N_A_3
[i]Type for TMP_244

Name: TMP_244 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_245(uint256) = x_1 (c)+ TMP_244
[i]Type for TMP_245

Name: TMP_245 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: raw balance
b_1(uint256) := TMP_245(uint256)
Finance type key: (0, -1)
[i]Type for b

Name: b Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: raw balance
y_1(uint256) := D_1(uint256)
Finance type key: (-1, -1)
[i]Type for y

Name: y Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for i

Name: i Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
y_2(uint256) := ϕ(['y_1', 'y_3'])
[i]Type for y

Name: y Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_2(uint256) := ϕ(['i_1', 'i_3'])
[i]Type for i

Name: i Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_246(bool) = i_2 < MAX_LOOP_LIMIT_2
[i]Type for TMP_246

Name: TMP_246 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
yPrev_1(uint256) := y_2(uint256)
Finance type key: (-1, -1)
[i]Type for yPrev

Name: yPrev Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_247(uint256) = y_2 (c)* y_2
[i]Type for TMP_247

Name: TMP_247 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_248(uint256) = TMP_247 (c)+ c_2
[i]Type for TMP_248

Name: TMP_248 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
TMP_249(uint256) = y_2 (c)* 2
[i]Type for TMP_249

Name: TMP_249 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_250(uint256) = TMP_249 (c)+ b_1
[i]Type for TMP_250

Name: TMP_250 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: raw balance
TMP_251(uint256) = TMP_250 (c)- D_1
[i]Type for TMP_251

Name: TMP_251 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: raw balance
TMP_252(uint256) = TMP_248 (c)/ TMP_251
Finance type key: (0, 0)
Finance type key: (0, 0)
[i]Type for TMP_252

Name: TMP_252 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
y_3(uint256) := TMP_252(uint256)
Finance type key: (40, -1)
[i]Type for y

Name: y Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
TMP_253(bool) = LIBRARY_CALL, dest:MathUtils, function:MathUtils.within1(uint256,uint256), arguments:['y_3', 'yPrev_1'] 
[i]Type for TMP_253

Name: TMP_253 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_254(uint256) := i_2(uint256)
Finance type key: (-1, -1)
[i]Type for TMP_254

Name: TMP_254 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_3(uint256) = i_2 (c)+ 1
[i]Type for i

Name: i Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
x_1(uint256) := ϕ(['x_1'])
[i]Type for x

Name: x Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
D_1(uint256) := ϕ(['d_1'])
[i]Type for D

Name: D Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MAX_LOOP_LIMIT_2(uint256) := ϕ(['MAX_LOOP_LIMIT_0'])
[i]Type for MAX_LOOP_LIMIT

Name: MAX_LOOP_LIMIT Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
N_A_3(uint256) := ϕ(['N_A_0', 'N_A_1'])
[i]Type for N_A

Name: N_A Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
A_PRECISION_2(uint256) := ϕ(['A_PRECISION_0'])
[i]Type for A_PRECISION

Name: A_PRECISION Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_236(uint256) = D_1 (c)* D_1
[i]Type for TMP_236

Name: TMP_236 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_237(uint256) = x_1 (c)* 2
[i]Type for TMP_237

Name: TMP_237 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: raw balance
TMP_238(uint256) = TMP_236 (c)/ TMP_237
[i]Type for TMP_238

Name: TMP_238 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: raw balance
c_1(uint256) := TMP_238(uint256)
Finance type key: (0, -1)
[i]Type for c

Name: c Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: raw balance
TMP_239(uint256) = c_1 (c)* D_1
[i]Type for TMP_239

Name: TMP_239 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: raw balance
TMP_240(uint256) = N_A_3 (c)* 2
[i]Type for TMP_240

Name: TMP_240 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
TMP_241(uint256) = TMP_240 (c)/ A_PRECISION_2
[i]Type for TMP_241

Name: TMP_241 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
TMP_242(uint256) = TMP_239 (c)/ TMP_241
[i]Type for TMP_242

Name: TMP_242 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
c_2(uint256) := TMP_242(uint256)
Finance type key: (0, -1)
[i]Type for c

Name: c Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
TMP_243(uint256) = D_1 (c)* A_PRECISION_2
[i]Type for TMP_243

Name: TMP_243 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_244(uint256) = TMP_243 (c)/ N_A_3
[i]Type for TMP_244

Name: TMP_244 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_245(uint256) = x_1 (c)+ TMP_244
[i]Type for TMP_245

Name: TMP_245 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: raw balance
b_1(uint256) := TMP_245(uint256)
Finance type key: (0, -1)
[i]Type for b

Name: b Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: raw balance
y_1(uint256) := D_1(uint256)
Finance type key: (-1, -1)
[i]Type for y

Name: y Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for i

Name: i Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
y_2(uint256) := ϕ(['y_1', 'y_3'])
[i]Type for y

Name: y Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
i_2(uint256) := ϕ(['i_1', 'i_3'])
[i]Type for i

Name: i Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_246(bool) = i_2 < MAX_LOOP_LIMIT_2
[i]Type for TMP_246

Name: TMP_246 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
yPrev_1(uint256) := y_2(uint256)
Finance type key: (40, -1)
[i]Type for yPrev

Name: yPrev Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
TMP_247(uint256) = y_2 (c)* y_2
Finance type key: (40, 40)
Error with TMP_247 in function _getY
Error with: TMP_247 in function _getY
[i]Type for TMP_247

Name: TMP_247 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_248(uint256) = TMP_247 (c)+ c_2
[i]Type for TMP_248

Name: TMP_248 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
TMP_249(uint256) = y_2 (c)* 2
[i]Type for TMP_249

Name: TMP_249 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: price/exchange rate
TMP_250(uint256) = TMP_249 (c)+ b_1
Finance type key: (40, 0)
Error with TMP_250 in function _getY
Error with: TMP_250 in function _getY
[i]Type for TMP_250

Name: TMP_250 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
TMP_251(uint256) = TMP_250 (c)- D_1
[i]Type for TMP_251

Name: TMP_251 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
TMP_252(uint256) = TMP_248 (c)/ TMP_251
[i]Type for TMP_252

Name: TMP_252 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
y_3(uint256) := TMP_252(uint256)
Finance type key: (0, -1)
[i]Type for y

Name: y Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
TMP_253(bool) = LIBRARY_CALL, dest:MathUtils, function:MathUtils.within1(uint256,uint256), arguments:['y_3', 'yPrev_1'] 
[i]Type for TMP_253

Name: TMP_253 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_254(uint256) := i_2(uint256)
Finance type key: (-1, -1)
[i]Type for TMP_254

Name: TMP_254 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_3(uint256) = i_2 (c)+ 1
[i]Type for i

Name: i Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
[i]Type for TMP_202

Name: TMP_202 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
y_1(uint256) := TMP_202(uint256)
Finance type key: (-1, -1)
[i]Type for y

Name: y Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_203(uint256) = xpOut_3 (c)- y_1
[i]Type for TMP_203

Name: TMP_203 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_204(uint256) = TMP_203 (c)- 1
[i]Type for TMP_204

Name: TMP_204 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: raw balance
dy_1(uint256) := TMP_204(uint256)
Finance type key: (0, -1)
[i]Type for dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: raw balance
dy_2(uint256) = dy_1 (c)/ token1PrecisionMultiplier_4
[i]Type for dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
dy_3(uint256) = dy_1 (c)/ token0PrecisionMultiplier_4
[i]Type for dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
amountIn_1(uint256) := ϕ(['TMP_153', 'TMP_124', 'TMP_103', 'TMP_112', 'TMP_130', 'TMP_140', 'amountIn_3'])
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
_reserve0_1(uint256) := ϕ(['_reserve0_1', '_reserve0_1', '_reserve0_1', 'TMP_104', 'TMP_113'])
[i]Type for _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
_reserve1_1(uint256) := ϕ(['_reserve1_1', 'TMP_105', 'TMP_114', '_reserve1_1', '_reserve1_1'])
[i]Type for _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
token0PrecisionMultiplier_2(uint256) := ϕ(['token0PrecisionMultiplier_0', 'token0PrecisionMultiplier_1', 'token0PrecisionMultiplier_4'])
[i]Type for token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
token1PrecisionMultiplier_2(uint256) := ϕ(['token1PrecisionMultiplier_4', 'token1PrecisionMultiplier_1', 'token1PrecisionMultiplier_0'])
[i]Type for token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_196(uint256) = _reserve0_1 (c)* token0PrecisionMultiplier_2
[i]Type for TMP_196

Name: TMP_196 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: raw balance
xpIn_1(uint256) := TMP_196(uint256)
Finance type key: (0, -1)
[i]Type for xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: raw balance
TMP_197(uint256) = _reserve1_1 (c)* token1PrecisionMultiplier_2
[i]Type for TMP_197

Name: TMP_197 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: raw balance
xpOut_1(uint256) := TMP_197(uint256)
Finance type key: (0, -1)
[i]Type for xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: raw balance
TMP_198(uint256) = _reserve1_1 (c)* token1PrecisionMultiplier_2
[i]Type for TMP_198

Name: TMP_198 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: raw balance
xpIn_2(uint256) := TMP_198(uint256)
Finance type key: (0, -1)
[i]Type for xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: raw balance
amountIn_2(uint256) = amountIn_1 (c)* token0PrecisionMultiplier_2
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: raw balance
TMP_199(uint256) = _reserve0_1 (c)* token0PrecisionMultiplier_2
[i]Type for TMP_199

Name: TMP_199 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: raw balance
xpOut_2(uint256) := TMP_199(uint256)
Finance type key: (0, -1)
[i]Type for xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: raw balance
amountIn_4(uint256) := ϕ(['amountIn_3', 'amountIn_2'])
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
xpIn_3(uint256) := ϕ(['xpIn_1', 'xpIn_2'])
[i]Type for xpIn

Name: xpIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
xpOut_3(uint256) := ϕ(['xpOut_1', 'xpOut_2'])
[i]Type for xpOut

Name: xpOut Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_200(uint256) = INTERNAL_CALL, HybridPool._computeLiquidityFromAdjustedBalances(uint256,uint256)(xpIn_3,xpOut_3)
xp0_1(uint256) := ϕ(['xpIn_3', 'xp0_1'])
[i]Type for xp0

Name: xp0 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
xp1_1(uint256) := ϕ(['xpOut_3', 'xp1_1'])
[i]Type for xp1

Name: xp1 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
MAX_LOOP_LIMIT_1(uint256) := ϕ(['MAX_LOOP_LIMIT_0'])
[i]Type for MAX_LOOP_LIMIT

Name: MAX_LOOP_LIMIT Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
N_A_2(uint256) := ϕ(['N_A_0', 'N_A_1'])
[i]Type for N_A

Name: N_A Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
A_PRECISION_1(uint256) := ϕ(['A_PRECISION_0'])
[i]Type for A_PRECISION

Name: A_PRECISION Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_215(uint256) = xp0_1 (c)+ xp1_1
Finance type key: (0, 0)
[i]Type for TMP_215

Name: TMP_215 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
s_1(uint256) := TMP_215(uint256)
Finance type key: (0, -1)
[i]Type for s

Name: s Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_216(bool) = s_1 == 0
[i]Type for TMP_216

Name: TMP_216 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
computed_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for computed

Name: computed Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
D_1(uint256) := s_1(uint256)
Finance type key: (0, -1)
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
i_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
D_2(uint256) := ϕ(['D_3', 'D_1'])
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
i_2(uint256) := ϕ(['i_3', 'i_1'])
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_217(bool) = i_2 < MAX_LOOP_LIMIT_1
[i]Type for TMP_217

Name: TMP_217 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_218(uint256) = D_2 (c)* D_2
Finance type key: (0, 0)
[i]Type for TMP_218

Name: TMP_218 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_219(uint256) = TMP_218 (c)/ xp0_1
Finance type key: (0, 0)
Finance type key: (0, 0)
[i]Type for TMP_219

Name: TMP_219 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
TMP_220(uint256) = TMP_219 (c)* D_2
Finance type key: (40, 0)
[i]Type for TMP_220

Name: TMP_220 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_221(uint256) = TMP_220 (c)/ xp1_1
Finance type key: (0, 0)
Finance type key: (0, 0)
[i]Type for TMP_221

Name: TMP_221 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
TMP_222(uint256) = TMP_221 (c)/ 4
[i]Type for TMP_222

Name: TMP_222 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: price/exchange rate
dP_1(uint256) := TMP_222(uint256)
Finance type key: (40, -1)
[i]Type for dP

Name: dP Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: price/exchange rate
prevD_1(uint256) := D_2(uint256)
Finance type key: (0, -1)
[i]Type for prevD

Name: prevD Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
computed_2(uint256) := D_3(uint256)
Finance type key: (0, -1)
[i]Type for computed

Name: computed Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
TMP_223(uint256) = N_A_2 (c)* s_1
[i]Type for TMP_223

Name: TMP_223 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: raw balance
TMP_224(uint256) = TMP_223 (c)/ A_PRECISION_1
[i]Type for TMP_224

Name: TMP_224 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: raw balance
TMP_225(uint256) = 2 (c)* dP_1
[i]Type for TMP_225

Name: TMP_225 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: price/exchange rate
TMP_226(uint256) = TMP_224 (c)+ TMP_225
Finance type key: (0, 40)
[i]Type for TMP_226

Name: TMP_226 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_227(uint256) = TMP_226 (c)* D_2
[i]Type for TMP_227

Name: TMP_227 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: raw balance
TMP_228(uint256) = N_A_2 (c)/ A_PRECISION_1
[i]Type for TMP_228

Name: TMP_228 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_229(uint256) = TMP_228 (c)- 1
[i]Type for TMP_229

Name: TMP_229 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
TMP_230(uint256) = TMP_229 (c)* D_2
[i]Type for TMP_230

Name: TMP_230 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: raw balance
TMP_231(uint256) = 3 (c)* dP_1
[i]Type for TMP_231

Name: TMP_231 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 12
Fields: 
Finance Type: price/exchange rate
TMP_232(uint256) = TMP_230 (c)+ TMP_231
Finance type key: (0, 40)
[i]Type for TMP_232

Name: TMP_232 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 13
Fields: 
Finance Type: undef
TMP_233(uint256) = TMP_227 (c)/ TMP_232
[i]Type for TMP_233

Name: TMP_233 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
D_3(uint256) := TMP_233(uint256)
Finance type key: (0, -1)
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
TMP_234(bool) = LIBRARY_CALL, dest:MathUtils, function:MathUtils.within1(uint256,uint256), arguments:['D_3', 'prevD_1'] 
[i]Type for TMP_234

Name: TMP_234 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_235(uint256) := i_2(uint256)
Finance type key: (-1, -1)
[i]Type for TMP_235

Name: TMP_235 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_3(uint256) = i_2 (c)+ 1
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
xp0_1(uint256) := ϕ(['xpIn_3', 'xp0_1'])
[i]Type for xp0

Name: xp0 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
xp1_1(uint256) := ϕ(['xpOut_3', 'xp1_1'])
[i]Type for xp1

Name: xp1 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
MAX_LOOP_LIMIT_1(uint256) := ϕ(['MAX_LOOP_LIMIT_0'])
[i]Type for MAX_LOOP_LIMIT

Name: MAX_LOOP_LIMIT Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
N_A_2(uint256) := ϕ(['N_A_0', 'N_A_1'])
[i]Type for N_A

Name: N_A Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
A_PRECISION_1(uint256) := ϕ(['A_PRECISION_0'])
[i]Type for A_PRECISION

Name: A_PRECISION Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_215(uint256) = xp0_1 (c)+ xp1_1
Finance type key: (0, 0)
[i]Type for TMP_215

Name: TMP_215 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
s_1(uint256) := TMP_215(uint256)
Finance type key: (0, -1)
[i]Type for s

Name: s Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_216(bool) = s_1 == 0
[i]Type for TMP_216

Name: TMP_216 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
computed_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for computed

Name: computed Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
D_1(uint256) := s_1(uint256)
Finance type key: (0, -1)
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
i_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
D_2(uint256) := ϕ(['D_3', 'D_1'])
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
i_2(uint256) := ϕ(['i_3', 'i_1'])
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_217(bool) = i_2 < MAX_LOOP_LIMIT_1
[i]Type for TMP_217

Name: TMP_217 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_218(uint256) = D_2 (c)* D_2
Finance type key: (0, 0)
[i]Type for TMP_218

Name: TMP_218 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_219(uint256) = TMP_218 (c)/ xp0_1
Finance type key: (0, 0)
Finance type key: (0, 0)
[i]Type for TMP_219

Name: TMP_219 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
TMP_220(uint256) = TMP_219 (c)* D_2
Finance type key: (40, 0)
[i]Type for TMP_220

Name: TMP_220 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_221(uint256) = TMP_220 (c)/ xp1_1
Finance type key: (0, 0)
Finance type key: (0, 0)
[i]Type for TMP_221

Name: TMP_221 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
TMP_222(uint256) = TMP_221 (c)/ 4
[i]Type for TMP_222

Name: TMP_222 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: price/exchange rate
dP_1(uint256) := TMP_222(uint256)
Finance type key: (40, -1)
[i]Type for dP

Name: dP Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: price/exchange rate
prevD_1(uint256) := D_2(uint256)
Finance type key: (0, -1)
[i]Type for prevD

Name: prevD Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
computed_2(uint256) := D_3(uint256)
Finance type key: (0, -1)
[i]Type for computed

Name: computed Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
TMP_223(uint256) = N_A_2 (c)* s_1
[i]Type for TMP_223

Name: TMP_223 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: raw balance
TMP_224(uint256) = TMP_223 (c)/ A_PRECISION_1
[i]Type for TMP_224

Name: TMP_224 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: raw balance
TMP_225(uint256) = 2 (c)* dP_1
[i]Type for TMP_225

Name: TMP_225 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: price/exchange rate
TMP_226(uint256) = TMP_224 (c)+ TMP_225
Finance type key: (0, 40)
[i]Type for TMP_226

Name: TMP_226 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_227(uint256) = TMP_226 (c)* D_2
[i]Type for TMP_227

Name: TMP_227 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: raw balance
TMP_228(uint256) = N_A_2 (c)/ A_PRECISION_1
[i]Type for TMP_228

Name: TMP_228 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_229(uint256) = TMP_228 (c)- 1
[i]Type for TMP_229

Name: TMP_229 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
TMP_230(uint256) = TMP_229 (c)* D_2
[i]Type for TMP_230

Name: TMP_230 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: raw balance
TMP_231(uint256) = 3 (c)* dP_1
[i]Type for TMP_231

Name: TMP_231 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 12
Fields: 
Finance Type: price/exchange rate
TMP_232(uint256) = TMP_230 (c)+ TMP_231
Finance type key: (0, 40)
[i]Type for TMP_232

Name: TMP_232 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 13
Fields: 
Finance Type: undef
TMP_233(uint256) = TMP_227 (c)/ TMP_232
[i]Type for TMP_233

Name: TMP_233 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
D_3(uint256) := TMP_233(uint256)
Finance type key: (0, -1)
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
TMP_234(bool) = LIBRARY_CALL, dest:MathUtils, function:MathUtils.within1(uint256,uint256), arguments:['D_3', 'prevD_1'] 
[i]Type for TMP_234

Name: TMP_234 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_235(uint256) := i_2(uint256)
Finance type key: (-1, -1)
[i]Type for TMP_235

Name: TMP_235 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_3(uint256) = i_2 (c)+ 1
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
[i]Type for TMP_200

Name: TMP_200 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
d_1(uint256) := TMP_200(uint256)
Finance type key: (-1, -1)
[i]Type for d

Name: d Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_201(uint256) = xpIn_3 (c)+ amountIn_4
Finance type key: (0, 0)
[i]Type for TMP_201

Name: TMP_201 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
x_1(uint256) := TMP_201(uint256)
Finance type key: (0, -1)
[i]Type for x

Name: x Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
amountIn_3(uint256) = amountIn_1 (c)* token1PrecisionMultiplier_2
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: raw balance
TMP_202(uint256) = INTERNAL_CALL, HybridPool._getY(uint256,uint256)(x_1,d_1)
[i]Type for TMP_202

Name: TMP_202 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
y_1(uint256) := TMP_202(uint256)
Finance type key: (-1, -1)
[i]Type for y

Name: y Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_203(uint256) = xpOut_3 (c)- y_1
[i]Type for TMP_203

Name: TMP_203 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_204(uint256) = TMP_203 (c)- 1
[i]Type for TMP_204

Name: TMP_204 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: raw balance
dy_1(uint256) := TMP_204(uint256)
Finance type key: (0, -1)
[i]Type for dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: raw balance
dy_2(uint256) = dy_1 (c)/ token1PrecisionMultiplier_4
[i]Type for dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
dy_3(uint256) = dy_1 (c)/ token0PrecisionMultiplier_4
[i]Type for dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
[i]Type for TMP_115

Name: TMP_115 Function: burnSingle
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
amount0_3(uint256) = amount0_1 (c)+ TMP_115
[i]Type for amount0

Name: amount0 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_103(uint256) = amount0_1 (c)- fee_1
[i]Type for TMP_103

Name: TMP_103 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_104(uint256) = _reserve0_1 (c)- amount0_1
[i]Type for TMP_104

Name: TMP_104 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_105(uint256) = _reserve1_1 (c)- amount1_1
[i]Type for TMP_105

Name: TMP_105 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_106(uint256) = INTERNAL_CALL, HybridPool._getAmountOut(uint256,uint256,uint256,bool)(TMP_103,TMP_104,TMP_105,True)
[i]Type for TMP_106

Name: TMP_106 Function: burnSingle
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
amount1_2(uint256) = amount1_1 (c)+ TMP_106
[i]Type for amount1

Name: amount1 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
INTERNAL_CALL, HybridPool._transfer(address,uint256,address,bool)(token0_21,amount0_3,recipient_1,unwrapBento_1)
token_1(address) := ϕ(['tokenOut_3', 'token1_17', 'token1_6', 'token0_5', 'tokenIn_1', 'token0_21', 'tokenIn_1', 'tokenOut_1'])
[i]Type for token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['_barFee_1', 'amount0_1', 'amountOut_3', 'fee_3', 'amountOut_1', 'amount1_2', 'amount0_3', 'amount1_1'])
[i]Type for amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
to_1(address) := ϕ(['recipient_1', 'recipient_1', 'barFeeTo_16', 'barFeeTo_14', 'to_1', 'recipient_1'])
[i]Type for to

Name: to Function: _transfer
Num: 
Den: 
Address: -992
Norm: u
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
unwrapBento_1(bool) := ϕ(['unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1'])
[i]Type for unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_6(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_74 (->None) := 4052550604(uint256)
Finance type key: (-1, -1)
[i]Type for REF_74

Name: REF_74 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4052550604
Fields: 
Finance Type: undef
TMP_208 = CONVERT this to address
[i]Type for TMP_208

Name: TMP_208 Function: _transfer
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_209(uint256) = INTERNAL_CALL, HybridPool._toShare(address,uint256)(token_1,amount_1)
token_1(address) := ϕ(['token1_21', 'token1_8', 'token0_18', 'token0_7', 'token_1'])
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['amount1_1', 'amount0_1', 'amount0_1', 'amount_1', 'amount1_1'])
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
bento_4(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_5(address) := ϕ(['bento_4', 'bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
output_1(uint256) := TMP_195(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token1_21', 'token1_8', 'token0_18', 'token0_7', 'token_1'])
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['amount1_1', 'amount0_1', 'amount0_1', 'amount_1', 'amount1_1'])
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
bento_4(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_5(address) := ϕ(['bento_4', 'bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
output_1(uint256) := TMP_195(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_209

Name: TMP_209 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_7(address) := ϕ(['bento_5'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
TMP_210(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_74,token_1,TMP_208,to_1,TMP_209)
[i]Type for TMP_210

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_24(bool,bytes) = LOW_LEVEL_CALL, dest:bento_7, function:call, arguments:['TMP_210']  
[i]Type for TUPLE_24

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_8(address) := ϕ(['bento_5', 'bento_7', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
success_1(bool)= UNPACK TUPLE_24 index: 0 
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_70 (->None) := 2547674416(uint256)
Finance type key: (-1, -1)
[i]Type for REF_70

Name: REF_70 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2547674416
Fields: 
Finance Type: undef
TMP_205 = CONVERT this to address
[i]Type for TMP_205

Name: TMP_205 Function: _transfer
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_206(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_70,token_1,TMP_205,to_1,amount_1,0)
[i]Type for TMP_206

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_23(bool,bytes) = LOW_LEVEL_CALL, dest:bento_6, function:call, arguments:['TMP_206']  
[i]Type for TUPLE_23

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_9(address) := ϕ(['bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
success_2(bool)= UNPACK TUPLE_23 index: 0 
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_211(None) = SOLIDITY_CALL require(bool,string)(success_scope_0_0,TRANSFER_FAILED)
[i]Type for TMP_211

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_207(None) = SOLIDITY_CALL require(bool,string)(success_2,WITHDRAW_FAILED)
[i]Type for TMP_207

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['tokenOut_3', 'token1_17', 'token1_6', 'token0_5', 'tokenIn_1', 'token0_21', 'tokenIn_1', 'tokenOut_1'])
[i]Type for token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['_barFee_1', 'amount0_1', 'amountOut_3', 'fee_3', 'amountOut_1', 'amount1_2', 'amount0_3', 'amount1_1'])
[i]Type for amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
to_1(address) := ϕ(['recipient_1', 'recipient_1', 'barFeeTo_16', 'barFeeTo_14', 'to_1', 'recipient_1'])
[i]Type for to

Name: to Function: _transfer
Num: 
Den: 
Address: -992
Norm: u
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
unwrapBento_1(bool) := ϕ(['unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1'])
[i]Type for unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_6(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_74 (->None) := 4052550604(uint256)
Finance type key: (-1, -1)
[i]Type for REF_74

Name: REF_74 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4052550604
Fields: 
Finance Type: undef
TMP_208 = CONVERT this to address
[i]Type for TMP_208

Name: TMP_208 Function: _transfer
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_209(uint256) = INTERNAL_CALL, HybridPool._toShare(address,uint256)(token_1,amount_1)
token_1(address) := ϕ(['token1_21', 'token1_8', 'token0_18', 'token0_7', 'token_1'])
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['amount1_1', 'amount0_1', 'amount0_1', 'amount_1', 'amount1_1'])
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
bento_4(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_5(address) := ϕ(['bento_4', 'bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
output_1(uint256) := TMP_195(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token1_21', 'token1_8', 'token0_18', 'token0_7', 'token_1'])
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['amount1_1', 'amount0_1', 'amount0_1', 'amount_1', 'amount1_1'])
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
bento_4(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_5(address) := ϕ(['bento_4', 'bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
output_1(uint256) := TMP_195(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_209

Name: TMP_209 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_7(address) := ϕ(['bento_5'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
TMP_210(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_74,token_1,TMP_208,to_1,TMP_209)
[i]Type for TMP_210

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_24(bool,bytes) = LOW_LEVEL_CALL, dest:bento_7, function:call, arguments:['TMP_210']  
[i]Type for TUPLE_24

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_8(address) := ϕ(['bento_5', 'bento_7', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
success_1(bool)= UNPACK TUPLE_24 index: 0 
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_70 (->None) := 2547674416(uint256)
Finance type key: (-1, -1)
[i]Type for REF_70

Name: REF_70 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2547674416
Fields: 
Finance Type: undef
TMP_205 = CONVERT this to address
[i]Type for TMP_205

Name: TMP_205 Function: _transfer
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_206(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_70,token_1,TMP_205,to_1,amount_1,0)
[i]Type for TMP_206

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_23(bool,bytes) = LOW_LEVEL_CALL, dest:bento_6, function:call, arguments:['TMP_206']  
[i]Type for TUPLE_23

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_9(address) := ϕ(['bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
success_2(bool)= UNPACK TUPLE_23 index: 0 
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_211(None) = SOLIDITY_CALL require(bool,string)(success_scope_0_0,TRANSFER_FAILED)
[i]Type for TMP_211

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_207(None) = SOLIDITY_CALL require(bool,string)(success_2,WITHDRAW_FAILED)
[i]Type for TMP_207

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
INTERNAL_CALL, HybridPool._transfer(address,uint256,address,bool)(token1_17,amount1_2,recipient_1,unwrapBento_1)
token_1(address) := ϕ(['tokenOut_3', 'token1_17', 'token1_6', 'token0_5', 'tokenIn_1', 'token0_21', 'tokenIn_1', 'tokenOut_1'])
[i]Type for token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['_barFee_1', 'amount0_1', 'amountOut_3', 'fee_3', 'amountOut_1', 'amount1_2', 'amount0_3', 'amount1_1'])
[i]Type for amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
to_1(address) := ϕ(['recipient_1', 'recipient_1', 'barFeeTo_16', 'barFeeTo_14', 'to_1', 'recipient_1'])
[i]Type for to

Name: to Function: _transfer
Num: 
Den: 
Address: -992
Norm: u
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
unwrapBento_1(bool) := ϕ(['unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1'])
[i]Type for unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_6(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_74 (->None) := 4052550604(uint256)
Finance type key: (-1, -1)
[i]Type for REF_74

Name: REF_74 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4052550604
Fields: 
Finance Type: undef
TMP_208 = CONVERT this to address
[i]Type for TMP_208

Name: TMP_208 Function: _transfer
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_209(uint256) = INTERNAL_CALL, HybridPool._toShare(address,uint256)(token_1,amount_1)
token_1(address) := ϕ(['token1_21', 'token1_8', 'token0_18', 'token0_7', 'token_1'])
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['amount1_1', 'amount0_1', 'amount0_1', 'amount_1', 'amount1_1'])
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
bento_4(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_5(address) := ϕ(['bento_4', 'bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
output_1(uint256) := TMP_195(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token1_21', 'token1_8', 'token0_18', 'token0_7', 'token_1'])
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['amount1_1', 'amount0_1', 'amount0_1', 'amount_1', 'amount1_1'])
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
bento_4(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_5(address) := ϕ(['bento_4', 'bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
output_1(uint256) := TMP_195(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_209

Name: TMP_209 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_7(address) := ϕ(['bento_5'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
TMP_210(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_74,token_1,TMP_208,to_1,TMP_209)
[i]Type for TMP_210

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_24(bool,bytes) = LOW_LEVEL_CALL, dest:bento_7, function:call, arguments:['TMP_210']  
[i]Type for TUPLE_24

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_8(address) := ϕ(['bento_5', 'bento_7', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
success_1(bool)= UNPACK TUPLE_24 index: 0 
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_70 (->None) := 2547674416(uint256)
Finance type key: (-1, -1)
[i]Type for REF_70

Name: REF_70 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2547674416
Fields: 
Finance Type: undef
TMP_205 = CONVERT this to address
[i]Type for TMP_205

Name: TMP_205 Function: _transfer
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_206(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_70,token_1,TMP_205,to_1,amount_1,0)
[i]Type for TMP_206

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_23(bool,bytes) = LOW_LEVEL_CALL, dest:bento_6, function:call, arguments:['TMP_206']  
[i]Type for TUPLE_23

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_9(address) := ϕ(['bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
success_2(bool)= UNPACK TUPLE_23 index: 0 
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_211(None) = SOLIDITY_CALL require(bool,string)(success_scope_0_0,TRANSFER_FAILED)
[i]Type for TMP_211

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_207(None) = SOLIDITY_CALL require(bool,string)(success_2,WITHDRAW_FAILED)
[i]Type for TMP_207

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['tokenOut_3', 'token1_17', 'token1_6', 'token0_5', 'tokenIn_1', 'token0_21', 'tokenIn_1', 'tokenOut_1'])
[i]Type for token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['_barFee_1', 'amount0_1', 'amountOut_3', 'fee_3', 'amountOut_1', 'amount1_2', 'amount0_3', 'amount1_1'])
[i]Type for amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
to_1(address) := ϕ(['recipient_1', 'recipient_1', 'barFeeTo_16', 'barFeeTo_14', 'to_1', 'recipient_1'])
[i]Type for to

Name: to Function: _transfer
Num: 
Den: 
Address: -992
Norm: u
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
unwrapBento_1(bool) := ϕ(['unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1'])
[i]Type for unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_6(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_74 (->None) := 4052550604(uint256)
Finance type key: (-1, -1)
[i]Type for REF_74

Name: REF_74 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4052550604
Fields: 
Finance Type: undef
TMP_208 = CONVERT this to address
[i]Type for TMP_208

Name: TMP_208 Function: _transfer
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_209(uint256) = INTERNAL_CALL, HybridPool._toShare(address,uint256)(token_1,amount_1)
token_1(address) := ϕ(['token1_21', 'token1_8', 'token0_18', 'token0_7', 'token_1'])
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['amount1_1', 'amount0_1', 'amount0_1', 'amount_1', 'amount1_1'])
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
bento_4(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_5(address) := ϕ(['bento_4', 'bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
output_1(uint256) := TMP_195(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token1_21', 'token1_8', 'token0_18', 'token0_7', 'token_1'])
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['amount1_1', 'amount0_1', 'amount0_1', 'amount_1', 'amount1_1'])
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
bento_4(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_5(address) := ϕ(['bento_4', 'bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
output_1(uint256) := TMP_195(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_209

Name: TMP_209 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_7(address) := ϕ(['bento_5'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
TMP_210(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_74,token_1,TMP_208,to_1,TMP_209)
[i]Type for TMP_210

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_24(bool,bytes) = LOW_LEVEL_CALL, dest:bento_7, function:call, arguments:['TMP_210']  
[i]Type for TUPLE_24

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_8(address) := ϕ(['bento_5', 'bento_7', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
success_1(bool)= UNPACK TUPLE_24 index: 0 
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_70 (->None) := 2547674416(uint256)
Finance type key: (-1, -1)
[i]Type for REF_70

Name: REF_70 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2547674416
Fields: 
Finance Type: undef
TMP_205 = CONVERT this to address
[i]Type for TMP_205

Name: TMP_205 Function: _transfer
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_206(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_70,token_1,TMP_205,to_1,amount_1,0)
[i]Type for TMP_206

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_23(bool,bytes) = LOW_LEVEL_CALL, dest:bento_6, function:call, arguments:['TMP_206']  
[i]Type for TUPLE_23

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_9(address) := ϕ(['bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
success_2(bool)= UNPACK TUPLE_23 index: 0 
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_211(None) = SOLIDITY_CALL require(bool,string)(success_scope_0_0,TRANSFER_FAILED)
[i]Type for TMP_211

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_207(None) = SOLIDITY_CALL require(bool,string)(success_2,WITHDRAW_FAILED)
[i]Type for TMP_207

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_117(uint256) = INTERNAL_CALL, HybridPool._toShare(address,uint256)(token1_21,amount1_1)
token_1(address) := ϕ(['token1_21', 'token1_8', 'token0_18', 'token0_7', 'token_1'])
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['amount1_1', 'amount0_1', 'amount0_1', 'amount_1', 'amount1_1'])
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
bento_4(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_5(address) := ϕ(['bento_4', 'bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
output_1(uint256) := TMP_195(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token1_21', 'token1_8', 'token0_18', 'token0_7', 'token_1'])
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['amount1_1', 'amount0_1', 'amount0_1', 'amount_1', 'amount1_1'])
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
bento_4(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_5(address) := ϕ(['bento_4', 'bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
output_1(uint256) := TMP_195(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_117

Name: TMP_117 Function: burnSingle
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
balance1_2(uint256) = balance1_1 (c)- TMP_117
[i]Type for balance1

Name: balance1 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_108(uint256) = INTERNAL_CALL, HybridPool._toShare(address,uint256)(token0_18,amount0_1)
token_1(address) := ϕ(['token1_21', 'token1_8', 'token0_18', 'token0_7', 'token_1'])
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['amount1_1', 'amount0_1', 'amount0_1', 'amount_1', 'amount1_1'])
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
bento_4(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_5(address) := ϕ(['bento_4', 'bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
output_1(uint256) := TMP_195(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token1_21', 'token1_8', 'token0_18', 'token0_7', 'token_1'])
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['amount1_1', 'amount0_1', 'amount0_1', 'amount_1', 'amount1_1'])
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
bento_4(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_5(address) := ϕ(['bento_4', 'bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
output_1(uint256) := TMP_195(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_108

Name: TMP_108 Function: burnSingle
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
balance0_2(uint256) = balance0_1 (c)- TMP_108
[i]Type for balance0

Name: balance0 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
amountOut_2(uint256) := amount0_3(uint256)
Finance type key: (0, -1)
[i]Type for amountOut

Name: amountOut Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
amountOut_1(uint256) := amount1_2(uint256)
Finance type key: (0, -1)
[i]Type for amountOut

Name: amountOut Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
amount1_3(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for amount1

Name: amount1 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
amount0_2(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for amount0

Name: amount0 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
amount0_4(uint256) := ϕ(['amount0_2', 'amount0_3'])
[i]Type for amount0

Name: amount0 Function: burnSingle
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
amount1_4(uint256) := ϕ(['amount1_2', 'amount1_3'])
[i]Type for amount1

Name: amount1 Function: burnSingle
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
INTERNAL_CALL, HybridPool._updateReserves()()
totalSupply_12(uint256) := ϕ(['totalSupply_15', 'totalSupply_8', 'totalSupply_0', 'totalSupply_4', 'totalSupply_11', 'totalSupply_2'])
[i]Type for totalSupply

Name: totalSupply Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
balanceOf_14(mapping(address => uint256)) := ϕ(['balanceOf_0', 'balanceOf_10', 'balanceOf_6', 'balanceOf_13', 'balanceOf_17', 'balanceOf_3', 'balanceOf_8'])
[i]Type for balanceOf

Name: balanceOf Function: burnSingle
Num: 3
Den: -1
Address: 4
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
token0_11(address) := ϕ(['token0_10', 'token0_26', 'token0_0', 'token0_19', 'token0_42', 'token0_39', 'token0_32', 'token0_1', 'token0_46', 'token0_22', 'token0_37'])
[i]Type for token0

Name: token0 Function: burnSingle
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
token1_11(address) := ϕ(['token1_1', 'token1_22', 'token1_34', 'token1_37', 'token1_10', 'token1_40', 'token1_0', 'token1_26', 'token1_45', 'token1_18'])
[i]Type for token1

Name: token1 Function: burnSingle
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
MODIFIER_CALL, HybridPool.lock()()
TUPLE_11(address,address,bool) = SOLIDITY_CALL abi.decode()(data_1(address,address,bool))
[i]Type for TUPLE_11

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tokenOut_1(address)= UNPACK TUPLE_11 index: 0 
[i]Type for tokenOut

Name: tokenOut Function: burnSingle
Num: 
Den: 
Address: -997
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
recipient_1(address)= UNPACK TUPLE_11 index: 1 
[i]Type for recipient

Name: recipient Function: burnSingle
Num: 
Den: 
Address: -992
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
unwrapBento_1(bool)= UNPACK TUPLE_11 index: 2 
[i]Type for unwrapBento

Name: unwrapBento Function: burnSingle
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_12(uint256,uint256) = INTERNAL_CALL, HybridPool._getReserves()()
[i]Type for TUPLE_12

Name: TUPLE_12 Function: burnSingle
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token0_13(address) := ϕ(['token0_39'])
[i]Type for token0

Name: token0 Function: burnSingle
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
token1_13(address) := ϕ(['token1_40'])
[i]Type for token1

Name: token1 Function: burnSingle
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
_reserve0_1(uint256)= UNPACK TUPLE_12 index: 0 
[i]Type for _reserve0

Name: _reserve0 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
_reserve1_1(uint256)= UNPACK TUPLE_12 index: 1 
[i]Type for _reserve1

Name: _reserve1 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
TUPLE_13(uint256,uint256) = INTERNAL_CALL, HybridPool._balance()()
[i]Type for TUPLE_13

Name: TUPLE_13 Function: burnSingle
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token0_14(address) := ϕ(['token0_42'])
[i]Type for token0

Name: token0 Function: burnSingle
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
token1_14(address) := ϕ(['token1_45'])
[i]Type for token1

Name: token1 Function: burnSingle
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
balance0_1(uint256)= UNPACK TUPLE_13 index: 0 
[i]Type for balance0

Name: balance0 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
balance1_1(uint256)= UNPACK TUPLE_13 index: 1 
[i]Type for balance1

Name: balance1 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
_totalSupply_1(uint256) := totalSupply_15(uint256)
Finance type key: (30, -1)
[i]Type for _totalSupply

Name: _totalSupply Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
TMP_94 = CONVERT this to address
[i]Type for TMP_94

Name: TMP_94 Function: burnSingle
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
REF_46(uint256) -> balanceOf_17[TMP_94]
[i]Type for REF_46

Name: None Function: None
Num: 3
Den: -1
Address: 4
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
liquidity_1(uint256) := REF_46(uint256)
Finance type key: (0, -1)
[i]Type for liquidity

Name: liquidity Function: burnSingle
Num: 3
Den: -1
Address: 4
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_95(uint256) = liquidity_1 (c)* balance0_1
[i]Type for TMP_95

Name: TMP_95 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_96(uint256) = TMP_95 (c)/ _totalSupply_1
Finance type key: (0, 30)
Finance type key: (0, 30)
[i]Type for TMP_96

Name: TMP_96 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
amount0_1(uint256) := TMP_96(uint256)
Finance type key: (0, -1)
[i]Type for amount0

Name: amount0 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_97(uint256) = liquidity_1 (c)* balance1_1
[i]Type for TMP_97

Name: TMP_97 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_98(uint256) = TMP_97 (c)/ _totalSupply_1
Finance type key: (0, 30)
Finance type key: (0, 30)
[i]Type for TMP_98

Name: TMP_98 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
amount1_1(uint256) := TMP_98(uint256)
Finance type key: (0, -1)
[i]Type for amount1

Name: amount1 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_99 = CONVERT this to address
[i]Type for TMP_99

Name: TMP_99 Function: burnSingle
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
INTERNAL_CALL, TridentERC20._burn(address,uint256)(TMP_99,liquidity_1)
sender_1(address) := ϕ(['TMP_99', 'TMP_81'])
[i]Type for sender

Name: sender Function: _burn
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['liquidity_1', 'liquidity_1'])
[i]Type for amount

Name: amount Function: _burn
Num: 3
Den: -1
Address: 4
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
totalSupply_3(uint256) := ϕ(['totalSupply_15', 'totalSupply_8', 'totalSupply_0', 'totalSupply_4', 'totalSupply_11', 'totalSupply_2'])
[i]Type for totalSupply

Name: totalSupply Function: _burn
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
balanceOf_9(mapping(address => uint256)) := ϕ(['balanceOf_0', 'balanceOf_10', 'balanceOf_6', 'balanceOf_13', 'balanceOf_17', 'balanceOf_3', 'balanceOf_8'])
[i]Type for balanceOf

Name: balanceOf Function: _burn
Num: 3
Den: -1
Address: 4
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
REF_17(uint256) -> balanceOf_9[sender_1]
[i]Type for REF_17

Name: balanceOf Function: _burn
Num: 3
Den: -1
Address: 4
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
balanceOf_10(mapping(address => uint256)) := ϕ(['balanceOf_9'])
[i]Type for balanceOf

Name: balanceOf Function: _burn
Num: 3
Den: -1
Address: 4
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
REF_17(-> balanceOf_10) = REF_17 (c)- amount_1
Finance type key: (0, 0)
[i]Type for REF_17

Name: REF_17 Function: _burn
Num: 3
Den: -1
Address: 4
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
totalSupply_4(uint256) = totalSupply_3 - amount_1
Finance type key: (30, 0)
[i]Type for totalSupply

Name: totalSupply Function: _burn
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
TMP_30 = CONVERT 0 to address
[i]Type for TMP_30

Name: TMP_30 Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
sender_1(address) := ϕ(['TMP_99', 'TMP_81'])
[i]Type for sender

Name: sender Function: _burn
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['liquidity_1', 'liquidity_1'])
[i]Type for amount

Name: amount Function: _burn
Num: 3
Den: -1
Address: 4
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
totalSupply_3(uint256) := ϕ(['totalSupply_15', 'totalSupply_8', 'totalSupply_0', 'totalSupply_4', 'totalSupply_11', 'totalSupply_2'])
[i]Type for totalSupply

Name: totalSupply Function: _burn
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
balanceOf_9(mapping(address => uint256)) := ϕ(['balanceOf_0', 'balanceOf_10', 'balanceOf_6', 'balanceOf_13', 'balanceOf_17', 'balanceOf_3', 'balanceOf_8'])
[i]Type for balanceOf

Name: balanceOf Function: _burn
Num: 3
Den: -1
Address: 4
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
REF_17(uint256) -> balanceOf_9[sender_1]
[i]Type for REF_17

Name: balanceOf Function: _burn
Num: 3
Den: -1
Address: 4
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
balanceOf_10(mapping(address => uint256)) := ϕ(['balanceOf_9'])
[i]Type for balanceOf

Name: balanceOf Function: _burn
Num: 3
Den: -1
Address: 4
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
REF_17(-> balanceOf_10) = REF_17 (c)- amount_1
Finance type key: (0, 0)
[i]Type for REF_17

Name: REF_17 Function: _burn
Num: 3
Den: -1
Address: 4
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
totalSupply_4(uint256) = totalSupply_3 - amount_1
Finance type key: (30, 0)
[i]Type for totalSupply

Name: totalSupply Function: _burn
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
TMP_30 = CONVERT 0 to address
[i]Type for TMP_30

Name: TMP_30 Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_101(bool) = tokenOut_1 == token1_15
[i]Type for TMP_101

Name: TMP_101 Function: burnSingle
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_109(bool) = tokenOut_1 == token0_15
[i]Type for TMP_109

Name: TMP_109 Function: burnSingle
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_110(None) = SOLIDITY_CALL require(bool,string)(TMP_109,INVALID_OUTPUT_TOKEN)
[i]Type for TMP_110

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_111(uint256) = INTERNAL_CALL, HybridPool._handleFee(address,uint256)(token1_15,amount1_1)
[i]Type for TMP_111

Name: TMP_111 Function: burnSingle
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
fee_scope_0_1(uint256) := TMP_111(uint256)
Finance type key: (-1, -1)
[i]Type for fee_scope_0

Name: fee_scope_0 Function: burnSingle
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_102(uint256) = INTERNAL_CALL, HybridPool._handleFee(address,uint256)(token0_15,amount0_1)
tokenIn_1(address) := ϕ(['token0_15', 'token1_15', 'tokenIn_1'])
[i]Type for tokenIn

Name: tokenIn Function: _handleFee
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
amountIn_1(uint256) := ϕ(['amountIn_1', 'amount1_1', 'amount0_1', 'amountIn_2'])
[i]Type for amountIn

Name: amountIn Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
MAX_FEE_7(uint256) := ϕ(['MAX_FEE_5', 'MAX_FEE_0', 'MAX_FEE_6', 'MAX_FEE_11'])
[i]Type for MAX_FEE

Name: MAX_FEE Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
swapFee_7(uint256) := ϕ(['swapFee_0', 'swapFee_5', 'swapFee_1', 'swapFee_11', 'swapFee_6'])
[i]Type for swapFee

Name: swapFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: simple fee ratio
barFeeTo_16(address) := ϕ(['barFeeTo_0', 'barFeeTo_15', 'barFeeTo_1', 'barFeeTo_17'])
[i]Type for barFeeTo

Name: barFeeTo Function: _handleFee
Num: -1
Den: -1
Address: 7
Norm: u
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
barFee_3(uint256) := ϕ(['barFee_2', 'barFee_0', 'barFee_1'])
[i]Type for barFee

Name: barFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_274(uint256) = amountIn_1 (c)* swapFee_7
Finance type key: (0, 12)
[i]Type for TMP_274

Name: TMP_274 Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: net balance
TMP_275(uint256) = TMP_274 (c)/ MAX_FEE_7
[i]Type for TMP_275

Name: TMP_275 Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: net balance
fee_1(uint256) := TMP_275(uint256)
Finance type key: (1, -1)
[i]Type for fee

Name: fee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: net balance
TMP_276(uint256) = fee_1 (c)* barFee_3
[i]Type for TMP_276

Name: TMP_276 Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: net balance
TMP_277(uint256) = TMP_276 (c)/ MAX_FEE_7
[i]Type for TMP_277

Name: TMP_277 Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: net balance
_barFee_1(uint256) := TMP_277(uint256)
Finance type key: (1, -1)
[i]Type for _barFee

Name: _barFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: net balance
INTERNAL_CALL, HybridPool._transfer(address,uint256,address,bool)(tokenIn_1,_barFee_1,barFeeTo_16,False)
token_1(address) := ϕ(['tokenOut_3', 'token1_17', 'token1_6', 'token0_5', 'tokenIn_1', 'token0_21', 'tokenIn_1', 'tokenOut_1'])
[i]Type for token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['_barFee_1', 'amount0_1', 'amountOut_3', 'fee_3', 'amountOut_1', 'amount1_2', 'amount0_3', 'amount1_1'])
[i]Type for amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: net balance
to_1(address) := ϕ(['recipient_1', 'recipient_1', 'barFeeTo_16', 'barFeeTo_14', 'to_1', 'recipient_1'])
[i]Type for to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 7
Norm: u
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
unwrapBento_1(bool) := ϕ(['unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1'])
[i]Type for unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_6(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_74 (->None) := 4052550604(uint256)
Finance type key: (-1, -1)
[i]Type for REF_74

Name: REF_74 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4052550604
Fields: 
Finance Type: undef
TMP_208 = CONVERT this to address
[i]Type for TMP_208

Name: TMP_208 Function: _transfer
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_209(uint256) = INTERNAL_CALL, HybridPool._toShare(address,uint256)(token_1,amount_1)
token_1(address) := ϕ(['token1_21', 'token1_8', 'token0_18', 'token0_7', 'token_1'])
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['amount1_1', 'amount0_1', 'amount0_1', 'amount_1', 'amount1_1'])
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: net balance
bento_4(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_5(address) := ϕ(['bento_4', 'bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
output_1(uint256) := TMP_195(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token1_21', 'token1_8', 'token0_18', 'token0_7', 'token_1'])
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['amount1_1', 'amount0_1', 'amount0_1', 'amount_1', 'amount1_1'])
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: net balance
bento_4(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_5(address) := ϕ(['bento_4', 'bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
output_1(uint256) := TMP_195(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_209

Name: TMP_209 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_7(address) := ϕ(['bento_5'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
TMP_210(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_74,token_1,TMP_208,to_1,TMP_209)
[i]Type for TMP_210

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_24(bool,bytes) = LOW_LEVEL_CALL, dest:bento_7, function:call, arguments:['TMP_210']  
[i]Type for TUPLE_24

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_8(address) := ϕ(['bento_5', 'bento_7', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
success_1(bool)= UNPACK TUPLE_24 index: 0 
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_70 (->None) := 2547674416(uint256)
Finance type key: (-1, -1)
[i]Type for REF_70

Name: REF_70 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2547674416
Fields: 
Finance Type: undef
TMP_205 = CONVERT this to address
[i]Type for TMP_205

Name: TMP_205 Function: _transfer
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_206(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_70,token_1,TMP_205,to_1,amount_1,0)
[i]Type for TMP_206

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_23(bool,bytes) = LOW_LEVEL_CALL, dest:bento_6, function:call, arguments:['TMP_206']  
[i]Type for TUPLE_23

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_9(address) := ϕ(['bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
success_2(bool)= UNPACK TUPLE_23 index: 0 
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_211(None) = SOLIDITY_CALL require(bool,string)(success_scope_0_0,TRANSFER_FAILED)
[i]Type for TMP_211

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_207(None) = SOLIDITY_CALL require(bool,string)(success_2,WITHDRAW_FAILED)
[i]Type for TMP_207

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['tokenOut_3', 'token1_17', 'token1_6', 'token0_5', 'tokenIn_1', 'token0_21', 'tokenIn_1', 'tokenOut_1'])
[i]Type for token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['_barFee_1', 'amount0_1', 'amountOut_3', 'fee_3', 'amountOut_1', 'amount1_2', 'amount0_3', 'amount1_1'])
[i]Type for amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: net balance
to_1(address) := ϕ(['recipient_1', 'recipient_1', 'barFeeTo_16', 'barFeeTo_14', 'to_1', 'recipient_1'])
[i]Type for to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 7
Norm: u
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
unwrapBento_1(bool) := ϕ(['unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1'])
[i]Type for unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_6(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_74 (->None) := 4052550604(uint256)
Finance type key: (-1, -1)
[i]Type for REF_74

Name: REF_74 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4052550604
Fields: 
Finance Type: undef
TMP_208 = CONVERT this to address
[i]Type for TMP_208

Name: TMP_208 Function: _transfer
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_209(uint256) = INTERNAL_CALL, HybridPool._toShare(address,uint256)(token_1,amount_1)
token_1(address) := ϕ(['token1_21', 'token1_8', 'token0_18', 'token0_7', 'token_1'])
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['amount1_1', 'amount0_1', 'amount0_1', 'amount_1', 'amount1_1'])
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: net balance
bento_4(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_5(address) := ϕ(['bento_4', 'bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
output_1(uint256) := TMP_195(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token1_21', 'token1_8', 'token0_18', 'token0_7', 'token_1'])
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['amount1_1', 'amount0_1', 'amount0_1', 'amount_1', 'amount1_1'])
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: net balance
bento_4(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_5(address) := ϕ(['bento_4', 'bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
output_1(uint256) := TMP_195(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_209

Name: TMP_209 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_7(address) := ϕ(['bento_5'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
TMP_210(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_74,token_1,TMP_208,to_1,TMP_209)
[i]Type for TMP_210

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_24(bool,bytes) = LOW_LEVEL_CALL, dest:bento_7, function:call, arguments:['TMP_210']  
[i]Type for TUPLE_24

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_8(address) := ϕ(['bento_5', 'bento_7', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
success_1(bool)= UNPACK TUPLE_24 index: 0 
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_70 (->None) := 2547674416(uint256)
Finance type key: (-1, -1)
[i]Type for REF_70

Name: REF_70 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2547674416
Fields: 
Finance Type: undef
TMP_205 = CONVERT this to address
[i]Type for TMP_205

Name: TMP_205 Function: _transfer
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_206(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_70,token_1,TMP_205,to_1,amount_1,0)
[i]Type for TMP_206

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_23(bool,bytes) = LOW_LEVEL_CALL, dest:bento_6, function:call, arguments:['TMP_206']  
[i]Type for TUPLE_23

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_9(address) := ϕ(['bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
success_2(bool)= UNPACK TUPLE_23 index: 0 
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_211(None) = SOLIDITY_CALL require(bool,string)(success_scope_0_0,TRANSFER_FAILED)
[i]Type for TMP_211

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_207(None) = SOLIDITY_CALL require(bool,string)(success_2,WITHDRAW_FAILED)
[i]Type for TMP_207

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tokenIn_1(address) := ϕ(['token0_15', 'token1_15', 'tokenIn_1'])
[i]Type for tokenIn

Name: tokenIn Function: _handleFee
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
amountIn_1(uint256) := ϕ(['amountIn_1', 'amount1_1', 'amount0_1', 'amountIn_2'])
[i]Type for amountIn

Name: amountIn Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
MAX_FEE_7(uint256) := ϕ(['MAX_FEE_5', 'MAX_FEE_0', 'MAX_FEE_6', 'MAX_FEE_11'])
[i]Type for MAX_FEE

Name: MAX_FEE Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
swapFee_7(uint256) := ϕ(['swapFee_0', 'swapFee_5', 'swapFee_1', 'swapFee_11', 'swapFee_6'])
[i]Type for swapFee

Name: swapFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: simple fee ratio
barFeeTo_16(address) := ϕ(['barFeeTo_0', 'barFeeTo_15', 'barFeeTo_1', 'barFeeTo_17'])
[i]Type for barFeeTo

Name: barFeeTo Function: _handleFee
Num: -1
Den: -1
Address: 7
Norm: u
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
barFee_3(uint256) := ϕ(['barFee_2', 'barFee_0', 'barFee_1'])
[i]Type for barFee

Name: barFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_274(uint256) = amountIn_1 (c)* swapFee_7
Finance type key: (0, 12)
[i]Type for TMP_274

Name: TMP_274 Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: net balance
TMP_275(uint256) = TMP_274 (c)/ MAX_FEE_7
[i]Type for TMP_275

Name: TMP_275 Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: net balance
fee_1(uint256) := TMP_275(uint256)
Finance type key: (1, -1)
[i]Type for fee

Name: fee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: net balance
TMP_276(uint256) = fee_1 (c)* barFee_3
[i]Type for TMP_276

Name: TMP_276 Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: net balance
TMP_277(uint256) = TMP_276 (c)/ MAX_FEE_7
[i]Type for TMP_277

Name: TMP_277 Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: net balance
_barFee_1(uint256) := TMP_277(uint256)
Finance type key: (1, -1)
[i]Type for _barFee

Name: _barFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: net balance
INTERNAL_CALL, HybridPool._transfer(address,uint256,address,bool)(tokenIn_1,_barFee_1,barFeeTo_16,False)
token_1(address) := ϕ(['tokenOut_3', 'token1_17', 'token1_6', 'token0_5', 'tokenIn_1', 'token0_21', 'tokenIn_1', 'tokenOut_1'])
[i]Type for token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['_barFee_1', 'amount0_1', 'amountOut_3', 'fee_3', 'amountOut_1', 'amount1_2', 'amount0_3', 'amount1_1'])
[i]Type for amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: net balance
to_1(address) := ϕ(['recipient_1', 'recipient_1', 'barFeeTo_16', 'barFeeTo_14', 'to_1', 'recipient_1'])
[i]Type for to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 7
Norm: u
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
unwrapBento_1(bool) := ϕ(['unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1'])
[i]Type for unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_6(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_74 (->None) := 4052550604(uint256)
Finance type key: (-1, -1)
[i]Type for REF_74

Name: REF_74 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4052550604
Fields: 
Finance Type: undef
TMP_208 = CONVERT this to address
[i]Type for TMP_208

Name: TMP_208 Function: _transfer
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_209(uint256) = INTERNAL_CALL, HybridPool._toShare(address,uint256)(token_1,amount_1)
token_1(address) := ϕ(['token1_21', 'token1_8', 'token0_18', 'token0_7', 'token_1'])
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['amount1_1', 'amount0_1', 'amount0_1', 'amount_1', 'amount1_1'])
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: net balance
bento_4(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_5(address) := ϕ(['bento_4', 'bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
output_1(uint256) := TMP_195(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token1_21', 'token1_8', 'token0_18', 'token0_7', 'token_1'])
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['amount1_1', 'amount0_1', 'amount0_1', 'amount_1', 'amount1_1'])
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: net balance
bento_4(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_5(address) := ϕ(['bento_4', 'bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
output_1(uint256) := TMP_195(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_209

Name: TMP_209 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_7(address) := ϕ(['bento_5'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
TMP_210(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_74,token_1,TMP_208,to_1,TMP_209)
[i]Type for TMP_210

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_24(bool,bytes) = LOW_LEVEL_CALL, dest:bento_7, function:call, arguments:['TMP_210']  
[i]Type for TUPLE_24

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_8(address) := ϕ(['bento_5', 'bento_7', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
success_1(bool)= UNPACK TUPLE_24 index: 0 
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_70 (->None) := 2547674416(uint256)
Finance type key: (-1, -1)
[i]Type for REF_70

Name: REF_70 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2547674416
Fields: 
Finance Type: undef
TMP_205 = CONVERT this to address
[i]Type for TMP_205

Name: TMP_205 Function: _transfer
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_206(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_70,token_1,TMP_205,to_1,amount_1,0)
[i]Type for TMP_206

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_23(bool,bytes) = LOW_LEVEL_CALL, dest:bento_6, function:call, arguments:['TMP_206']  
[i]Type for TUPLE_23

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_9(address) := ϕ(['bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
success_2(bool)= UNPACK TUPLE_23 index: 0 
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_211(None) = SOLIDITY_CALL require(bool,string)(success_scope_0_0,TRANSFER_FAILED)
[i]Type for TMP_211

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_207(None) = SOLIDITY_CALL require(bool,string)(success_2,WITHDRAW_FAILED)
[i]Type for TMP_207

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['tokenOut_3', 'token1_17', 'token1_6', 'token0_5', 'tokenIn_1', 'token0_21', 'tokenIn_1', 'tokenOut_1'])
[i]Type for token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['_barFee_1', 'amount0_1', 'amountOut_3', 'fee_3', 'amountOut_1', 'amount1_2', 'amount0_3', 'amount1_1'])
[i]Type for amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: net balance
to_1(address) := ϕ(['recipient_1', 'recipient_1', 'barFeeTo_16', 'barFeeTo_14', 'to_1', 'recipient_1'])
[i]Type for to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 7
Norm: u
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
unwrapBento_1(bool) := ϕ(['unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1'])
[i]Type for unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_6(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_74 (->None) := 4052550604(uint256)
Finance type key: (-1, -1)
[i]Type for REF_74

Name: REF_74 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4052550604
Fields: 
Finance Type: undef
TMP_208 = CONVERT this to address
[i]Type for TMP_208

Name: TMP_208 Function: _transfer
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_209(uint256) = INTERNAL_CALL, HybridPool._toShare(address,uint256)(token_1,amount_1)
token_1(address) := ϕ(['token1_21', 'token1_8', 'token0_18', 'token0_7', 'token_1'])
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['amount1_1', 'amount0_1', 'amount0_1', 'amount_1', 'amount1_1'])
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: net balance
bento_4(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_5(address) := ϕ(['bento_4', 'bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
output_1(uint256) := TMP_195(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token1_21', 'token1_8', 'token0_18', 'token0_7', 'token_1'])
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['amount1_1', 'amount0_1', 'amount0_1', 'amount_1', 'amount1_1'])
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: net balance
bento_4(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_5(address) := ϕ(['bento_4', 'bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
output_1(uint256) := TMP_195(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_209

Name: TMP_209 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_7(address) := ϕ(['bento_5'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
TMP_210(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_74,token_1,TMP_208,to_1,TMP_209)
[i]Type for TMP_210

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_24(bool,bytes) = LOW_LEVEL_CALL, dest:bento_7, function:call, arguments:['TMP_210']  
[i]Type for TUPLE_24

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_8(address) := ϕ(['bento_5', 'bento_7', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
success_1(bool)= UNPACK TUPLE_24 index: 0 
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_70 (->None) := 2547674416(uint256)
Finance type key: (-1, -1)
[i]Type for REF_70

Name: REF_70 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2547674416
Fields: 
Finance Type: undef
TMP_205 = CONVERT this to address
[i]Type for TMP_205

Name: TMP_205 Function: _transfer
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_206(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_70,token_1,TMP_205,to_1,amount_1,0)
[i]Type for TMP_206

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_23(bool,bytes) = LOW_LEVEL_CALL, dest:bento_6, function:call, arguments:['TMP_206']  
[i]Type for TUPLE_23

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_9(address) := ϕ(['bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
success_2(bool)= UNPACK TUPLE_23 index: 0 
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_211(None) = SOLIDITY_CALL require(bool,string)(success_scope_0_0,TRANSFER_FAILED)
[i]Type for TMP_211

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_207(None) = SOLIDITY_CALL require(bool,string)(success_2,WITHDRAW_FAILED)
[i]Type for TMP_207

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_102

Name: TMP_102 Function: burnSingle
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
fee_1(uint256) := TMP_102(uint256)
Finance type key: (-1, -1)
[i]Type for fee

Name: fee Function: burnSingle
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_112(uint256) = amount1_1 (c)- fee_scope_0_1
[i]Type for TMP_112

Name: TMP_112 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_113(uint256) = _reserve0_1 (c)- amount0_1
[i]Type for TMP_113

Name: TMP_113 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_114(uint256) = _reserve1_1 (c)- amount1_1
[i]Type for TMP_114

Name: TMP_114 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_115(uint256) = INTERNAL_CALL, HybridPool._getAmountOut(uint256,uint256,uint256,bool)(TMP_112,TMP_113,TMP_114,False)
[i]Type for TMP_115

Name: TMP_115 Function: burnSingle
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
amount0_3(uint256) = amount0_1 (c)+ TMP_115
[i]Type for amount0

Name: amount0 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_103(uint256) = amount0_1 (c)- fee_1
[i]Type for TMP_103

Name: TMP_103 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_104(uint256) = _reserve0_1 (c)- amount0_1
[i]Type for TMP_104

Name: TMP_104 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_105(uint256) = _reserve1_1 (c)- amount1_1
[i]Type for TMP_105

Name: TMP_105 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_106(uint256) = INTERNAL_CALL, HybridPool._getAmountOut(uint256,uint256,uint256,bool)(TMP_103,TMP_104,TMP_105,True)
[i]Type for TMP_106

Name: TMP_106 Function: burnSingle
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
amount1_2(uint256) = amount1_1 (c)+ TMP_106
[i]Type for amount1

Name: amount1 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
INTERNAL_CALL, HybridPool._transfer(address,uint256,address,bool)(token0_21,amount0_3,recipient_1,unwrapBento_1)
token_1(address) := ϕ(['tokenOut_3', 'token1_17', 'token1_6', 'token0_5', 'tokenIn_1', 'token0_21', 'tokenIn_1', 'tokenOut_1'])
[i]Type for token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['_barFee_1', 'amount0_1', 'amountOut_3', 'fee_3', 'amountOut_1', 'amount1_2', 'amount0_3', 'amount1_1'])
[i]Type for amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
to_1(address) := ϕ(['recipient_1', 'recipient_1', 'barFeeTo_16', 'barFeeTo_14', 'to_1', 'recipient_1'])
[i]Type for to

Name: to Function: _transfer
Num: 
Den: 
Address: -992
Norm: u
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
unwrapBento_1(bool) := ϕ(['unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1'])
[i]Type for unwrapBento

Name: unwrapBento Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_6(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_74 (->None) := 4052550604(uint256)
Finance type key: (-1, -1)
[i]Type for REF_74

Name: REF_74 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4052550604
Fields: 
Finance Type: undef
TMP_208 = CONVERT this to address
[i]Type for TMP_208

Name: TMP_208 Function: _transfer
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_209(uint256) = INTERNAL_CALL, HybridPool._toShare(address,uint256)(token_1,amount_1)
token_1(address) := ϕ(['token1_21', 'token1_8', 'token0_18', 'token0_7', 'token_1'])
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['amount1_1', 'amount0_1', 'amount0_1', 'amount_1', 'amount1_1'])
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
bento_4(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_5(address) := ϕ(['bento_4', 'bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
output_1(uint256) := TMP_195(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token1_21', 'token1_8', 'token0_18', 'token0_7', 'token_1'])
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['amount1_1', 'amount0_1', 'amount0_1', 'amount_1', 'amount1_1'])
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
bento_4(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_5(address) := ϕ(['bento_4', 'bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
output_1(uint256) := TMP_195(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_209

Name: TMP_209 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_7(address) := ϕ(['bento_5'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
TMP_210(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_74,token_1,TMP_208,to_1,TMP_209)
[i]Type for TMP_210

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_24(bool,bytes) = LOW_LEVEL_CALL, dest:bento_7, function:call, arguments:['TMP_210']  
[i]Type for TUPLE_24

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_8(address) := ϕ(['bento_5', 'bento_7', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
success_1(bool)= UNPACK TUPLE_24 index: 0 
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_70 (->None) := 2547674416(uint256)
Finance type key: (-1, -1)
[i]Type for REF_70

Name: REF_70 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2547674416
Fields: 
Finance Type: undef
TMP_205 = CONVERT this to address
[i]Type for TMP_205

Name: TMP_205 Function: _transfer
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_206(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_70,token_1,TMP_205,to_1,amount_1,0)
[i]Type for TMP_206

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_23(bool,bytes) = LOW_LEVEL_CALL, dest:bento_6, function:call, arguments:['TMP_206']  
[i]Type for TUPLE_23

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_9(address) := ϕ(['bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
success_2(bool)= UNPACK TUPLE_23 index: 0 
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_211(None) = SOLIDITY_CALL require(bool,string)(success_scope_0_0,TRANSFER_FAILED)
[i]Type for TMP_211

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_207(None) = SOLIDITY_CALL require(bool,string)(success_2,WITHDRAW_FAILED)
[i]Type for TMP_207

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['tokenOut_3', 'token1_17', 'token1_6', 'token0_5', 'tokenIn_1', 'token0_21', 'tokenIn_1', 'tokenOut_1'])
[i]Type for token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['_barFee_1', 'amount0_1', 'amountOut_3', 'fee_3', 'amountOut_1', 'amount1_2', 'amount0_3', 'amount1_1'])
[i]Type for amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
to_1(address) := ϕ(['recipient_1', 'recipient_1', 'barFeeTo_16', 'barFeeTo_14', 'to_1', 'recipient_1'])
[i]Type for to

Name: to Function: _transfer
Num: 
Den: 
Address: -992
Norm: u
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
unwrapBento_1(bool) := ϕ(['unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1'])
[i]Type for unwrapBento

Name: unwrapBento Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_6(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_74 (->None) := 4052550604(uint256)
Finance type key: (-1, -1)
[i]Type for REF_74

Name: REF_74 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4052550604
Fields: 
Finance Type: undef
TMP_208 = CONVERT this to address
[i]Type for TMP_208

Name: TMP_208 Function: _transfer
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_209(uint256) = INTERNAL_CALL, HybridPool._toShare(address,uint256)(token_1,amount_1)
token_1(address) := ϕ(['token1_21', 'token1_8', 'token0_18', 'token0_7', 'token_1'])
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['amount1_1', 'amount0_1', 'amount0_1', 'amount_1', 'amount1_1'])
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
bento_4(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_5(address) := ϕ(['bento_4', 'bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
output_1(uint256) := TMP_195(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token1_21', 'token1_8', 'token0_18', 'token0_7', 'token_1'])
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['amount1_1', 'amount0_1', 'amount0_1', 'amount_1', 'amount1_1'])
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
bento_4(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_5(address) := ϕ(['bento_4', 'bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
output_1(uint256) := TMP_195(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_209

Name: TMP_209 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_7(address) := ϕ(['bento_5'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
TMP_210(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_74,token_1,TMP_208,to_1,TMP_209)
[i]Type for TMP_210

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_24(bool,bytes) = LOW_LEVEL_CALL, dest:bento_7, function:call, arguments:['TMP_210']  
[i]Type for TUPLE_24

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_8(address) := ϕ(['bento_5', 'bento_7', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
success_1(bool)= UNPACK TUPLE_24 index: 0 
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_70 (->None) := 2547674416(uint256)
Finance type key: (-1, -1)
[i]Type for REF_70

Name: REF_70 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2547674416
Fields: 
Finance Type: undef
TMP_205 = CONVERT this to address
[i]Type for TMP_205

Name: TMP_205 Function: _transfer
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_206(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_70,token_1,TMP_205,to_1,amount_1,0)
[i]Type for TMP_206

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_23(bool,bytes) = LOW_LEVEL_CALL, dest:bento_6, function:call, arguments:['TMP_206']  
[i]Type for TUPLE_23

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_9(address) := ϕ(['bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
success_2(bool)= UNPACK TUPLE_23 index: 0 
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_211(None) = SOLIDITY_CALL require(bool,string)(success_scope_0_0,TRANSFER_FAILED)
[i]Type for TMP_211

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_207(None) = SOLIDITY_CALL require(bool,string)(success_2,WITHDRAW_FAILED)
[i]Type for TMP_207

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
INTERNAL_CALL, HybridPool._transfer(address,uint256,address,bool)(token1_17,amount1_2,recipient_1,unwrapBento_1)
token_1(address) := ϕ(['tokenOut_3', 'token1_17', 'token1_6', 'token0_5', 'tokenIn_1', 'token0_21', 'tokenIn_1', 'tokenOut_1'])
[i]Type for token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['_barFee_1', 'amount0_1', 'amountOut_3', 'fee_3', 'amountOut_1', 'amount1_2', 'amount0_3', 'amount1_1'])
[i]Type for amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
to_1(address) := ϕ(['recipient_1', 'recipient_1', 'barFeeTo_16', 'barFeeTo_14', 'to_1', 'recipient_1'])
[i]Type for to

Name: to Function: _transfer
Num: 
Den: 
Address: -992
Norm: u
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
unwrapBento_1(bool) := ϕ(['unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1'])
[i]Type for unwrapBento

Name: unwrapBento Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_6(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_74 (->None) := 4052550604(uint256)
Finance type key: (-1, -1)
[i]Type for REF_74

Name: REF_74 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4052550604
Fields: 
Finance Type: undef
TMP_208 = CONVERT this to address
[i]Type for TMP_208

Name: TMP_208 Function: _transfer
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_209(uint256) = INTERNAL_CALL, HybridPool._toShare(address,uint256)(token_1,amount_1)
token_1(address) := ϕ(['token1_21', 'token1_8', 'token0_18', 'token0_7', 'token_1'])
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['amount1_1', 'amount0_1', 'amount0_1', 'amount_1', 'amount1_1'])
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
bento_4(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_5(address) := ϕ(['bento_4', 'bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
output_1(uint256) := TMP_195(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token1_21', 'token1_8', 'token0_18', 'token0_7', 'token_1'])
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['amount1_1', 'amount0_1', 'amount0_1', 'amount_1', 'amount1_1'])
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
bento_4(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_5(address) := ϕ(['bento_4', 'bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
output_1(uint256) := TMP_195(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_209

Name: TMP_209 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_7(address) := ϕ(['bento_5'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
TMP_210(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_74,token_1,TMP_208,to_1,TMP_209)
[i]Type for TMP_210

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_24(bool,bytes) = LOW_LEVEL_CALL, dest:bento_7, function:call, arguments:['TMP_210']  
[i]Type for TUPLE_24

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_8(address) := ϕ(['bento_5', 'bento_7', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
success_1(bool)= UNPACK TUPLE_24 index: 0 
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_70 (->None) := 2547674416(uint256)
Finance type key: (-1, -1)
[i]Type for REF_70

Name: REF_70 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2547674416
Fields: 
Finance Type: undef
TMP_205 = CONVERT this to address
[i]Type for TMP_205

Name: TMP_205 Function: _transfer
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_206(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_70,token_1,TMP_205,to_1,amount_1,0)
[i]Type for TMP_206

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_23(bool,bytes) = LOW_LEVEL_CALL, dest:bento_6, function:call, arguments:['TMP_206']  
[i]Type for TUPLE_23

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_9(address) := ϕ(['bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
success_2(bool)= UNPACK TUPLE_23 index: 0 
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_211(None) = SOLIDITY_CALL require(bool,string)(success_scope_0_0,TRANSFER_FAILED)
[i]Type for TMP_211

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_207(None) = SOLIDITY_CALL require(bool,string)(success_2,WITHDRAW_FAILED)
[i]Type for TMP_207

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['tokenOut_3', 'token1_17', 'token1_6', 'token0_5', 'tokenIn_1', 'token0_21', 'tokenIn_1', 'tokenOut_1'])
[i]Type for token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['_barFee_1', 'amount0_1', 'amountOut_3', 'fee_3', 'amountOut_1', 'amount1_2', 'amount0_3', 'amount1_1'])
[i]Type for amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
to_1(address) := ϕ(['recipient_1', 'recipient_1', 'barFeeTo_16', 'barFeeTo_14', 'to_1', 'recipient_1'])
[i]Type for to

Name: to Function: _transfer
Num: 
Den: 
Address: -992
Norm: u
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
unwrapBento_1(bool) := ϕ(['unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1'])
[i]Type for unwrapBento

Name: unwrapBento Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_6(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_74 (->None) := 4052550604(uint256)
Finance type key: (-1, -1)
[i]Type for REF_74

Name: REF_74 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4052550604
Fields: 
Finance Type: undef
TMP_208 = CONVERT this to address
[i]Type for TMP_208

Name: TMP_208 Function: _transfer
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_209(uint256) = INTERNAL_CALL, HybridPool._toShare(address,uint256)(token_1,amount_1)
token_1(address) := ϕ(['token1_21', 'token1_8', 'token0_18', 'token0_7', 'token_1'])
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['amount1_1', 'amount0_1', 'amount0_1', 'amount_1', 'amount1_1'])
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
bento_4(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_5(address) := ϕ(['bento_4', 'bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
output_1(uint256) := TMP_195(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token1_21', 'token1_8', 'token0_18', 'token0_7', 'token_1'])
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['amount1_1', 'amount0_1', 'amount0_1', 'amount_1', 'amount1_1'])
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
bento_4(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_5(address) := ϕ(['bento_4', 'bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
output_1(uint256) := TMP_195(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_209

Name: TMP_209 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_7(address) := ϕ(['bento_5'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
TMP_210(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_74,token_1,TMP_208,to_1,TMP_209)
[i]Type for TMP_210

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_24(bool,bytes) = LOW_LEVEL_CALL, dest:bento_7, function:call, arguments:['TMP_210']  
[i]Type for TUPLE_24

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_8(address) := ϕ(['bento_5', 'bento_7', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
success_1(bool)= UNPACK TUPLE_24 index: 0 
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_70 (->None) := 2547674416(uint256)
Finance type key: (-1, -1)
[i]Type for REF_70

Name: REF_70 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2547674416
Fields: 
Finance Type: undef
TMP_205 = CONVERT this to address
[i]Type for TMP_205

Name: TMP_205 Function: _transfer
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_206(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_70,token_1,TMP_205,to_1,amount_1,0)
[i]Type for TMP_206

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_23(bool,bytes) = LOW_LEVEL_CALL, dest:bento_6, function:call, arguments:['TMP_206']  
[i]Type for TUPLE_23

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_9(address) := ϕ(['bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
success_2(bool)= UNPACK TUPLE_23 index: 0 
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_211(None) = SOLIDITY_CALL require(bool,string)(success_scope_0_0,TRANSFER_FAILED)
[i]Type for TMP_211

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_207(None) = SOLIDITY_CALL require(bool,string)(success_2,WITHDRAW_FAILED)
[i]Type for TMP_207

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_117(uint256) = INTERNAL_CALL, HybridPool._toShare(address,uint256)(token1_21,amount1_1)
token_1(address) := ϕ(['token1_21', 'token1_8', 'token0_18', 'token0_7', 'token_1'])
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['amount1_1', 'amount0_1', 'amount0_1', 'amount_1', 'amount1_1'])
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
bento_4(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_5(address) := ϕ(['bento_4', 'bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
output_1(uint256) := TMP_195(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token1_21', 'token1_8', 'token0_18', 'token0_7', 'token_1'])
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['amount1_1', 'amount0_1', 'amount0_1', 'amount_1', 'amount1_1'])
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
bento_4(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_5(address) := ϕ(['bento_4', 'bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
output_1(uint256) := TMP_195(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_117

Name: TMP_117 Function: burnSingle
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
balance1_2(uint256) = balance1_1 (c)- TMP_117
[i]Type for balance1

Name: balance1 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_108(uint256) = INTERNAL_CALL, HybridPool._toShare(address,uint256)(token0_18,amount0_1)
token_1(address) := ϕ(['token1_21', 'token1_8', 'token0_18', 'token0_7', 'token_1'])
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['amount1_1', 'amount0_1', 'amount0_1', 'amount_1', 'amount1_1'])
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
bento_4(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_5(address) := ϕ(['bento_4', 'bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
output_1(uint256) := TMP_195(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token1_21', 'token1_8', 'token0_18', 'token0_7', 'token_1'])
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['amount1_1', 'amount0_1', 'amount0_1', 'amount_1', 'amount1_1'])
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
bento_4(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_5(address) := ϕ(['bento_4', 'bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
output_1(uint256) := TMP_195(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_108

Name: TMP_108 Function: burnSingle
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
balance0_2(uint256) = balance0_1 (c)- TMP_108
[i]Type for balance0

Name: balance0 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
amountOut_2(uint256) := amount0_3(uint256)
Finance type key: (0, -1)
[i]Type for amountOut

Name: amountOut Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
amountOut_1(uint256) := amount1_2(uint256)
Finance type key: (0, -1)
[i]Type for amountOut

Name: amountOut Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
amount1_3(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for amount1

Name: amount1 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
amount0_2(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for amount0

Name: amount0 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
amount0_4(uint256) := ϕ(['amount0_2', 'amount0_3'])
[i]Type for amount0

Name: amount0 Function: burnSingle
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
amount1_4(uint256) := ϕ(['amount1_2', 'amount1_3'])
[i]Type for amount1

Name: amount1 Function: burnSingle
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
INTERNAL_CALL, HybridPool._updateReserves()()



swap
token0_23(address) := ϕ(['token0_10', 'token0_26', 'token0_0', 'token0_19', 'token0_42', 'token0_39', 'token0_32', 'token0_1', 'token0_46', 'token0_22', 'token0_37'])
[i]Type for token0

Name: token0 Function: swap
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
token1_23(address) := ϕ(['token1_1', 'token1_22', 'token1_34', 'token1_37', 'token1_10', 'token1_40', 'token1_0', 'token1_26', 'token1_45', 'token1_18'])
[i]Type for token1

Name: token1 Function: swap
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
MODIFIER_CALL, HybridPool.lock()()
TUPLE_14(address,address,bool) = SOLIDITY_CALL abi.decode()(data_1(address,address,bool))
[i]Type for TUPLE_14

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tokenIn_1(address)= UNPACK TUPLE_14 index: 0 
[i]Type for tokenIn

Name: tokenIn Function: swap
Num: 
Den: 
Address: -996
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
recipient_1(address)= UNPACK TUPLE_14 index: 1 
[i]Type for recipient

Name: recipient Function: swap
Num: 
Den: 
Address: -991
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
unwrapBento_1(bool)= UNPACK TUPLE_14 index: 2 
[i]Type for unwrapBento

Name: unwrapBento Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_15(uint256,uint256) = INTERNAL_CALL, HybridPool._getReserves()()
[i]Type for TUPLE_15

Name: TUPLE_15 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token0_25(address) := ϕ(['token0_39'])
[i]Type for token0

Name: token0 Function: swap
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
token1_25(address) := ϕ(['token1_40'])
[i]Type for token1

Name: token1 Function: swap
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
_reserve0_1(uint256)= UNPACK TUPLE_15 index: 0 
[i]Type for _reserve0

Name: _reserve0 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
_reserve1_1(uint256)= UNPACK TUPLE_15 index: 1 
[i]Type for _reserve1

Name: _reserve1 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
TUPLE_16(uint256,uint256) = INTERNAL_CALL, HybridPool._balance()()
[i]Type for TUPLE_16

Name: TUPLE_16 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token0_26(address) := ϕ(['token0_42'])
[i]Type for token0

Name: token0 Function: swap
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
token1_26(address) := ϕ(['token1_45'])
[i]Type for token1

Name: token1 Function: swap
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
balance0_1(uint256)= UNPACK TUPLE_16 index: 0 
[i]Type for balance0

Name: balance0 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
balance1_1(uint256)= UNPACK TUPLE_16 index: 1 
[i]Type for balance1

Name: balance1 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
TMP_121(bool) = tokenIn_1 == token0_26
[i]Type for TMP_121

Name: TMP_121 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tokenOut_1(address) := token1_26(address)
Finance type key: (-1, -1)
[i]Type for tokenOut

Name: tokenOut Function: swap
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
TMP_122(uint256) = balance0_1 (c)- _reserve0_1
[i]Type for TMP_122

Name: TMP_122 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
amountIn_1(uint256) := TMP_122(uint256)
Finance type key: (-1, -1)
[i]Type for amountIn

Name: amountIn Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_126(bool) = tokenIn_1 == token1_26
[i]Type for TMP_126

Name: TMP_126 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_127(None) = SOLIDITY_CALL require(bool,string)(TMP_126,INVALID_INPUT_TOKEN)
[i]Type for TMP_127

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tokenOut_2(address) := token0_26(address)
Finance type key: (-1, -1)
[i]Type for tokenOut

Name: tokenOut Function: swap
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
TMP_123(uint256) = INTERNAL_CALL, HybridPool._handleFee(address,uint256)(tokenIn_1,amountIn_1)
tokenIn_1(address) := ϕ(['token0_15', 'token1_15', 'tokenIn_1'])
[i]Type for tokenIn

Name: tokenIn Function: _handleFee
Num: 
Den: 
Address: -996
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
amountIn_1(uint256) := ϕ(['amountIn_1', 'amount1_1', 'amount0_1', 'amountIn_2'])
[i]Type for amountIn

Name: amountIn Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MAX_FEE_7(uint256) := ϕ(['MAX_FEE_5', 'MAX_FEE_0', 'MAX_FEE_6', 'MAX_FEE_11'])
[i]Type for MAX_FEE

Name: MAX_FEE Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
swapFee_7(uint256) := ϕ(['swapFee_0', 'swapFee_5', 'swapFee_1', 'swapFee_11', 'swapFee_6'])
[i]Type for swapFee

Name: swapFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: simple fee ratio
barFeeTo_16(address) := ϕ(['barFeeTo_0', 'barFeeTo_15', 'barFeeTo_1', 'barFeeTo_17'])
[i]Type for barFeeTo

Name: barFeeTo Function: _handleFee
Num: -1
Den: -1
Address: 7
Norm: u
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
barFee_3(uint256) := ϕ(['barFee_2', 'barFee_0', 'barFee_1'])
[i]Type for barFee

Name: barFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_274(uint256) = amountIn_1 (c)* swapFee_7
[i]Type for TMP_274

Name: TMP_274 Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
TMP_275(uint256) = TMP_274 (c)/ MAX_FEE_7
[i]Type for TMP_275

Name: TMP_275 Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
fee_1(uint256) := TMP_275(uint256)
Finance type key: (12, -1)
[i]Type for fee

Name: fee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
TMP_276(uint256) = fee_1 (c)* barFee_3
[i]Type for TMP_276

Name: TMP_276 Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
TMP_277(uint256) = TMP_276 (c)/ MAX_FEE_7
[i]Type for TMP_277

Name: TMP_277 Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
_barFee_1(uint256) := TMP_277(uint256)
Finance type key: (12, -1)
[i]Type for _barFee

Name: _barFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
INTERNAL_CALL, HybridPool._transfer(address,uint256,address,bool)(tokenIn_1,_barFee_1,barFeeTo_16,False)
token_1(address) := ϕ(['tokenOut_3', 'token1_17', 'token1_6', 'token0_5', 'tokenIn_1', 'token0_21', 'tokenIn_1', 'tokenOut_1'])
[i]Type for token

Name: token Function: _transfer
Num: 
Den: 
Address: -996
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['_barFee_1', 'amount0_1', 'amountOut_3', 'fee_3', 'amountOut_1', 'amount1_2', 'amount0_3', 'amount1_1'])
[i]Type for amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
to_1(address) := ϕ(['recipient_1', 'recipient_1', 'barFeeTo_16', 'barFeeTo_14', 'to_1', 'recipient_1'])
[i]Type for to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 7
Norm: u
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
unwrapBento_1(bool) := ϕ(['unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1'])
[i]Type for unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_6(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_74 (->None) := 4052550604(uint256)
Finance type key: (-1, -1)
[i]Type for REF_74

Name: REF_74 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4052550604
Fields: 
Finance Type: undef
TMP_208 = CONVERT this to address
[i]Type for TMP_208

Name: TMP_208 Function: _transfer
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_209(uint256) = INTERNAL_CALL, HybridPool._toShare(address,uint256)(token_1,amount_1)
token_1(address) := ϕ(['token1_21', 'token1_8', 'token0_18', 'token0_7', 'token_1'])
[i]Type for token

Name: token Function: _toShare
Num: 
Den: 
Address: -996
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['amount1_1', 'amount0_1', 'amount0_1', 'amount_1', 'amount1_1'])
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
bento_4(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_5(address) := ϕ(['bento_4', 'bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
output_1(uint256) := TMP_195(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token1_21', 'token1_8', 'token0_18', 'token0_7', 'token_1'])
[i]Type for token

Name: token Function: _toShare
Num: 
Den: 
Address: -996
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['amount1_1', 'amount0_1', 'amount0_1', 'amount_1', 'amount1_1'])
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
bento_4(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_5(address) := ϕ(['bento_4', 'bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
output_1(uint256) := TMP_195(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_209

Name: TMP_209 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_7(address) := ϕ(['bento_5'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
TMP_210(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_74,token_1,TMP_208,to_1,TMP_209)
[i]Type for TMP_210

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_24(bool,bytes) = LOW_LEVEL_CALL, dest:bento_7, function:call, arguments:['TMP_210']  
[i]Type for TUPLE_24

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_8(address) := ϕ(['bento_5', 'bento_7', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
success_1(bool)= UNPACK TUPLE_24 index: 0 
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_70 (->None) := 2547674416(uint256)
Finance type key: (-1, -1)
[i]Type for REF_70

Name: REF_70 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2547674416
Fields: 
Finance Type: undef
TMP_205 = CONVERT this to address
[i]Type for TMP_205

Name: TMP_205 Function: _transfer
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_206(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_70,token_1,TMP_205,to_1,amount_1,0)
[i]Type for TMP_206

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_23(bool,bytes) = LOW_LEVEL_CALL, dest:bento_6, function:call, arguments:['TMP_206']  
[i]Type for TUPLE_23

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_9(address) := ϕ(['bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
success_2(bool)= UNPACK TUPLE_23 index: 0 
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_211(None) = SOLIDITY_CALL require(bool,string)(success_scope_0_0,TRANSFER_FAILED)
[i]Type for TMP_211

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_207(None) = SOLIDITY_CALL require(bool,string)(success_2,WITHDRAW_FAILED)
[i]Type for TMP_207

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['tokenOut_3', 'token1_17', 'token1_6', 'token0_5', 'tokenIn_1', 'token0_21', 'tokenIn_1', 'tokenOut_1'])
[i]Type for token

Name: token Function: _transfer
Num: 
Den: 
Address: -996
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['_barFee_1', 'amount0_1', 'amountOut_3', 'fee_3', 'amountOut_1', 'amount1_2', 'amount0_3', 'amount1_1'])
[i]Type for amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
to_1(address) := ϕ(['recipient_1', 'recipient_1', 'barFeeTo_16', 'barFeeTo_14', 'to_1', 'recipient_1'])
[i]Type for to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 7
Norm: u
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
unwrapBento_1(bool) := ϕ(['unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1'])
[i]Type for unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_6(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_74 (->None) := 4052550604(uint256)
Finance type key: (-1, -1)
[i]Type for REF_74

Name: REF_74 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4052550604
Fields: 
Finance Type: undef
TMP_208 = CONVERT this to address
[i]Type for TMP_208

Name: TMP_208 Function: _transfer
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_209(uint256) = INTERNAL_CALL, HybridPool._toShare(address,uint256)(token_1,amount_1)
token_1(address) := ϕ(['token1_21', 'token1_8', 'token0_18', 'token0_7', 'token_1'])
[i]Type for token

Name: token Function: _toShare
Num: 
Den: 
Address: -996
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['amount1_1', 'amount0_1', 'amount0_1', 'amount_1', 'amount1_1'])
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
bento_4(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_5(address) := ϕ(['bento_4', 'bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
output_1(uint256) := TMP_195(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token1_21', 'token1_8', 'token0_18', 'token0_7', 'token_1'])
[i]Type for token

Name: token Function: _toShare
Num: 
Den: 
Address: -996
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['amount1_1', 'amount0_1', 'amount0_1', 'amount_1', 'amount1_1'])
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
bento_4(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_5(address) := ϕ(['bento_4', 'bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
output_1(uint256) := TMP_195(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_209

Name: TMP_209 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_7(address) := ϕ(['bento_5'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
TMP_210(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_74,token_1,TMP_208,to_1,TMP_209)
[i]Type for TMP_210

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_24(bool,bytes) = LOW_LEVEL_CALL, dest:bento_7, function:call, arguments:['TMP_210']  
[i]Type for TUPLE_24

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_8(address) := ϕ(['bento_5', 'bento_7', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
success_1(bool)= UNPACK TUPLE_24 index: 0 
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_70 (->None) := 2547674416(uint256)
Finance type key: (-1, -1)
[i]Type for REF_70

Name: REF_70 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2547674416
Fields: 
Finance Type: undef
TMP_205 = CONVERT this to address
[i]Type for TMP_205

Name: TMP_205 Function: _transfer
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_206(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_70,token_1,TMP_205,to_1,amount_1,0)
[i]Type for TMP_206

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_23(bool,bytes) = LOW_LEVEL_CALL, dest:bento_6, function:call, arguments:['TMP_206']  
[i]Type for TUPLE_23

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_9(address) := ϕ(['bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
success_2(bool)= UNPACK TUPLE_23 index: 0 
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_211(None) = SOLIDITY_CALL require(bool,string)(success_scope_0_0,TRANSFER_FAILED)
[i]Type for TMP_211

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_207(None) = SOLIDITY_CALL require(bool,string)(success_2,WITHDRAW_FAILED)
[i]Type for TMP_207

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tokenIn_1(address) := ϕ(['token0_15', 'token1_15', 'tokenIn_1'])
[i]Type for tokenIn

Name: tokenIn Function: _handleFee
Num: 
Den: 
Address: -996
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
amountIn_1(uint256) := ϕ(['amountIn_1', 'amount1_1', 'amount0_1', 'amountIn_2'])
[i]Type for amountIn

Name: amountIn Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MAX_FEE_7(uint256) := ϕ(['MAX_FEE_5', 'MAX_FEE_0', 'MAX_FEE_6', 'MAX_FEE_11'])
[i]Type for MAX_FEE

Name: MAX_FEE Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
swapFee_7(uint256) := ϕ(['swapFee_0', 'swapFee_5', 'swapFee_1', 'swapFee_11', 'swapFee_6'])
[i]Type for swapFee

Name: swapFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: simple fee ratio
barFeeTo_16(address) := ϕ(['barFeeTo_0', 'barFeeTo_15', 'barFeeTo_1', 'barFeeTo_17'])
[i]Type for barFeeTo

Name: barFeeTo Function: _handleFee
Num: -1
Den: -1
Address: 7
Norm: u
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
barFee_3(uint256) := ϕ(['barFee_2', 'barFee_0', 'barFee_1'])
[i]Type for barFee

Name: barFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_274(uint256) = amountIn_1 (c)* swapFee_7
[i]Type for TMP_274

Name: TMP_274 Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
TMP_275(uint256) = TMP_274 (c)/ MAX_FEE_7
[i]Type for TMP_275

Name: TMP_275 Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
fee_1(uint256) := TMP_275(uint256)
Finance type key: (12, -1)
[i]Type for fee

Name: fee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
TMP_276(uint256) = fee_1 (c)* barFee_3
[i]Type for TMP_276

Name: TMP_276 Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
TMP_277(uint256) = TMP_276 (c)/ MAX_FEE_7
[i]Type for TMP_277

Name: TMP_277 Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
_barFee_1(uint256) := TMP_277(uint256)
Finance type key: (12, -1)
[i]Type for _barFee

Name: _barFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
INTERNAL_CALL, HybridPool._transfer(address,uint256,address,bool)(tokenIn_1,_barFee_1,barFeeTo_16,False)
token_1(address) := ϕ(['tokenOut_3', 'token1_17', 'token1_6', 'token0_5', 'tokenIn_1', 'token0_21', 'tokenIn_1', 'tokenOut_1'])
[i]Type for token

Name: token Function: _transfer
Num: 
Den: 
Address: -996
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['_barFee_1', 'amount0_1', 'amountOut_3', 'fee_3', 'amountOut_1', 'amount1_2', 'amount0_3', 'amount1_1'])
[i]Type for amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
to_1(address) := ϕ(['recipient_1', 'recipient_1', 'barFeeTo_16', 'barFeeTo_14', 'to_1', 'recipient_1'])
[i]Type for to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 7
Norm: u
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
unwrapBento_1(bool) := ϕ(['unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1'])
[i]Type for unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_6(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_74 (->None) := 4052550604(uint256)
Finance type key: (-1, -1)
[i]Type for REF_74

Name: REF_74 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4052550604
Fields: 
Finance Type: undef
TMP_208 = CONVERT this to address
[i]Type for TMP_208

Name: TMP_208 Function: _transfer
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_209(uint256) = INTERNAL_CALL, HybridPool._toShare(address,uint256)(token_1,amount_1)
token_1(address) := ϕ(['token1_21', 'token1_8', 'token0_18', 'token0_7', 'token_1'])
[i]Type for token

Name: token Function: _toShare
Num: 
Den: 
Address: -996
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['amount1_1', 'amount0_1', 'amount0_1', 'amount_1', 'amount1_1'])
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
bento_4(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_5(address) := ϕ(['bento_4', 'bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
output_1(uint256) := TMP_195(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token1_21', 'token1_8', 'token0_18', 'token0_7', 'token_1'])
[i]Type for token

Name: token Function: _toShare
Num: 
Den: 
Address: -996
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['amount1_1', 'amount0_1', 'amount0_1', 'amount_1', 'amount1_1'])
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
bento_4(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_5(address) := ϕ(['bento_4', 'bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
output_1(uint256) := TMP_195(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_209

Name: TMP_209 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_7(address) := ϕ(['bento_5'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
TMP_210(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_74,token_1,TMP_208,to_1,TMP_209)
[i]Type for TMP_210

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_24(bool,bytes) = LOW_LEVEL_CALL, dest:bento_7, function:call, arguments:['TMP_210']  
[i]Type for TUPLE_24

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_8(address) := ϕ(['bento_5', 'bento_7', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
success_1(bool)= UNPACK TUPLE_24 index: 0 
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_70 (->None) := 2547674416(uint256)
Finance type key: (-1, -1)
[i]Type for REF_70

Name: REF_70 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2547674416
Fields: 
Finance Type: undef
TMP_205 = CONVERT this to address
[i]Type for TMP_205

Name: TMP_205 Function: _transfer
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_206(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_70,token_1,TMP_205,to_1,amount_1,0)
[i]Type for TMP_206

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_23(bool,bytes) = LOW_LEVEL_CALL, dest:bento_6, function:call, arguments:['TMP_206']  
[i]Type for TUPLE_23

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_9(address) := ϕ(['bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
success_2(bool)= UNPACK TUPLE_23 index: 0 
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_211(None) = SOLIDITY_CALL require(bool,string)(success_scope_0_0,TRANSFER_FAILED)
[i]Type for TMP_211

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_207(None) = SOLIDITY_CALL require(bool,string)(success_2,WITHDRAW_FAILED)
[i]Type for TMP_207

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['tokenOut_3', 'token1_17', 'token1_6', 'token0_5', 'tokenIn_1', 'token0_21', 'tokenIn_1', 'tokenOut_1'])
[i]Type for token

Name: token Function: _transfer
Num: 
Den: 
Address: -996
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['_barFee_1', 'amount0_1', 'amountOut_3', 'fee_3', 'amountOut_1', 'amount1_2', 'amount0_3', 'amount1_1'])
[i]Type for amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
to_1(address) := ϕ(['recipient_1', 'recipient_1', 'barFeeTo_16', 'barFeeTo_14', 'to_1', 'recipient_1'])
[i]Type for to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 7
Norm: u
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
unwrapBento_1(bool) := ϕ(['unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1'])
[i]Type for unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_6(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_74 (->None) := 4052550604(uint256)
Finance type key: (-1, -1)
[i]Type for REF_74

Name: REF_74 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4052550604
Fields: 
Finance Type: undef
TMP_208 = CONVERT this to address
[i]Type for TMP_208

Name: TMP_208 Function: _transfer
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_209(uint256) = INTERNAL_CALL, HybridPool._toShare(address,uint256)(token_1,amount_1)
token_1(address) := ϕ(['token1_21', 'token1_8', 'token0_18', 'token0_7', 'token_1'])
[i]Type for token

Name: token Function: _toShare
Num: 
Den: 
Address: -996
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['amount1_1', 'amount0_1', 'amount0_1', 'amount_1', 'amount1_1'])
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
bento_4(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_5(address) := ϕ(['bento_4', 'bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
output_1(uint256) := TMP_195(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token1_21', 'token1_8', 'token0_18', 'token0_7', 'token_1'])
[i]Type for token

Name: token Function: _toShare
Num: 
Den: 
Address: -996
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['amount1_1', 'amount0_1', 'amount0_1', 'amount_1', 'amount1_1'])
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
bento_4(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_5(address) := ϕ(['bento_4', 'bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
output_1(uint256) := TMP_195(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_209

Name: TMP_209 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_7(address) := ϕ(['bento_5'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
TMP_210(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_74,token_1,TMP_208,to_1,TMP_209)
[i]Type for TMP_210

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_24(bool,bytes) = LOW_LEVEL_CALL, dest:bento_7, function:call, arguments:['TMP_210']  
[i]Type for TUPLE_24

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_8(address) := ϕ(['bento_5', 'bento_7', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
success_1(bool)= UNPACK TUPLE_24 index: 0 
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_70 (->None) := 2547674416(uint256)
Finance type key: (-1, -1)
[i]Type for REF_70

Name: REF_70 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2547674416
Fields: 
Finance Type: undef
TMP_205 = CONVERT this to address
[i]Type for TMP_205

Name: TMP_205 Function: _transfer
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_206(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_70,token_1,TMP_205,to_1,amount_1,0)
[i]Type for TMP_206

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_23(bool,bytes) = LOW_LEVEL_CALL, dest:bento_6, function:call, arguments:['TMP_206']  
[i]Type for TUPLE_23

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_9(address) := ϕ(['bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
success_2(bool)= UNPACK TUPLE_23 index: 0 
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_211(None) = SOLIDITY_CALL require(bool,string)(success_scope_0_0,TRANSFER_FAILED)
[i]Type for TMP_211

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_207(None) = SOLIDITY_CALL require(bool,string)(success_2,WITHDRAW_FAILED)
[i]Type for TMP_207

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_123

Name: TMP_123 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
fee_1(uint256) := TMP_123(uint256)
Finance type key: (-1, -1)
[i]Type for fee

Name: fee Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_128(uint256) = balance1_1 (c)- _reserve1_1
[i]Type for TMP_128

Name: TMP_128 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
amountIn_2(uint256) := TMP_128(uint256)
Finance type key: (-1, -1)
[i]Type for amountIn

Name: amountIn Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_129(uint256) = INTERNAL_CALL, HybridPool._handleFee(address,uint256)(tokenIn_1,amountIn_2)
tokenIn_1(address) := ϕ(['token0_15', 'token1_15', 'tokenIn_1'])
[i]Type for tokenIn

Name: tokenIn Function: _handleFee
Num: 
Den: 
Address: -996
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
amountIn_1(uint256) := ϕ(['amountIn_1', 'amount1_1', 'amount0_1', 'amountIn_2'])
[i]Type for amountIn

Name: amountIn Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MAX_FEE_7(uint256) := ϕ(['MAX_FEE_5', 'MAX_FEE_0', 'MAX_FEE_6', 'MAX_FEE_11'])
[i]Type for MAX_FEE

Name: MAX_FEE Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
swapFee_7(uint256) := ϕ(['swapFee_0', 'swapFee_5', 'swapFee_1', 'swapFee_11', 'swapFee_6'])
[i]Type for swapFee

Name: swapFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: simple fee ratio
barFeeTo_16(address) := ϕ(['barFeeTo_0', 'barFeeTo_15', 'barFeeTo_1', 'barFeeTo_17'])
[i]Type for barFeeTo

Name: barFeeTo Function: _handleFee
Num: -1
Den: -1
Address: 7
Norm: u
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
barFee_3(uint256) := ϕ(['barFee_2', 'barFee_0', 'barFee_1'])
[i]Type for barFee

Name: barFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_274(uint256) = amountIn_1 (c)* swapFee_7
[i]Type for TMP_274

Name: TMP_274 Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
TMP_275(uint256) = TMP_274 (c)/ MAX_FEE_7
[i]Type for TMP_275

Name: TMP_275 Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
fee_1(uint256) := TMP_275(uint256)
Finance type key: (12, -1)
[i]Type for fee

Name: fee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
TMP_276(uint256) = fee_1 (c)* barFee_3
[i]Type for TMP_276

Name: TMP_276 Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
TMP_277(uint256) = TMP_276 (c)/ MAX_FEE_7
[i]Type for TMP_277

Name: TMP_277 Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
_barFee_1(uint256) := TMP_277(uint256)
Finance type key: (12, -1)
[i]Type for _barFee

Name: _barFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
INTERNAL_CALL, HybridPool._transfer(address,uint256,address,bool)(tokenIn_1,_barFee_1,barFeeTo_16,False)
token_1(address) := ϕ(['tokenOut_3', 'token1_17', 'token1_6', 'token0_5', 'tokenIn_1', 'token0_21', 'tokenIn_1', 'tokenOut_1'])
[i]Type for token

Name: token Function: _transfer
Num: 
Den: 
Address: -996
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['_barFee_1', 'amount0_1', 'amountOut_3', 'fee_3', 'amountOut_1', 'amount1_2', 'amount0_3', 'amount1_1'])
[i]Type for amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
to_1(address) := ϕ(['recipient_1', 'recipient_1', 'barFeeTo_16', 'barFeeTo_14', 'to_1', 'recipient_1'])
[i]Type for to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 7
Norm: u
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
unwrapBento_1(bool) := ϕ(['unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1'])
[i]Type for unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_6(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_74 (->None) := 4052550604(uint256)
Finance type key: (-1, -1)
[i]Type for REF_74

Name: REF_74 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4052550604
Fields: 
Finance Type: undef
TMP_208 = CONVERT this to address
[i]Type for TMP_208

Name: TMP_208 Function: _transfer
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_209(uint256) = INTERNAL_CALL, HybridPool._toShare(address,uint256)(token_1,amount_1)
token_1(address) := ϕ(['token1_21', 'token1_8', 'token0_18', 'token0_7', 'token_1'])
[i]Type for token

Name: token Function: _toShare
Num: 
Den: 
Address: -996
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['amount1_1', 'amount0_1', 'amount0_1', 'amount_1', 'amount1_1'])
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
bento_4(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_5(address) := ϕ(['bento_4', 'bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
output_1(uint256) := TMP_195(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token1_21', 'token1_8', 'token0_18', 'token0_7', 'token_1'])
[i]Type for token

Name: token Function: _toShare
Num: 
Den: 
Address: -996
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['amount1_1', 'amount0_1', 'amount0_1', 'amount_1', 'amount1_1'])
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
bento_4(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_5(address) := ϕ(['bento_4', 'bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
output_1(uint256) := TMP_195(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_209

Name: TMP_209 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_7(address) := ϕ(['bento_5'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
TMP_210(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_74,token_1,TMP_208,to_1,TMP_209)
[i]Type for TMP_210

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_24(bool,bytes) = LOW_LEVEL_CALL, dest:bento_7, function:call, arguments:['TMP_210']  
[i]Type for TUPLE_24

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_8(address) := ϕ(['bento_5', 'bento_7', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
success_1(bool)= UNPACK TUPLE_24 index: 0 
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_70 (->None) := 2547674416(uint256)
Finance type key: (-1, -1)
[i]Type for REF_70

Name: REF_70 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2547674416
Fields: 
Finance Type: undef
TMP_205 = CONVERT this to address
[i]Type for TMP_205

Name: TMP_205 Function: _transfer
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_206(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_70,token_1,TMP_205,to_1,amount_1,0)
[i]Type for TMP_206

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_23(bool,bytes) = LOW_LEVEL_CALL, dest:bento_6, function:call, arguments:['TMP_206']  
[i]Type for TUPLE_23

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_9(address) := ϕ(['bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
success_2(bool)= UNPACK TUPLE_23 index: 0 
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_211(None) = SOLIDITY_CALL require(bool,string)(success_scope_0_0,TRANSFER_FAILED)
[i]Type for TMP_211

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_207(None) = SOLIDITY_CALL require(bool,string)(success_2,WITHDRAW_FAILED)
[i]Type for TMP_207

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['tokenOut_3', 'token1_17', 'token1_6', 'token0_5', 'tokenIn_1', 'token0_21', 'tokenIn_1', 'tokenOut_1'])
[i]Type for token

Name: token Function: _transfer
Num: 
Den: 
Address: -996
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['_barFee_1', 'amount0_1', 'amountOut_3', 'fee_3', 'amountOut_1', 'amount1_2', 'amount0_3', 'amount1_1'])
[i]Type for amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
to_1(address) := ϕ(['recipient_1', 'recipient_1', 'barFeeTo_16', 'barFeeTo_14', 'to_1', 'recipient_1'])
[i]Type for to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 7
Norm: u
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
unwrapBento_1(bool) := ϕ(['unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1'])
[i]Type for unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_6(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_74 (->None) := 4052550604(uint256)
Finance type key: (-1, -1)
[i]Type for REF_74

Name: REF_74 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4052550604
Fields: 
Finance Type: undef
TMP_208 = CONVERT this to address
[i]Type for TMP_208

Name: TMP_208 Function: _transfer
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_209(uint256) = INTERNAL_CALL, HybridPool._toShare(address,uint256)(token_1,amount_1)
token_1(address) := ϕ(['token1_21', 'token1_8', 'token0_18', 'token0_7', 'token_1'])
[i]Type for token

Name: token Function: _toShare
Num: 
Den: 
Address: -996
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['amount1_1', 'amount0_1', 'amount0_1', 'amount_1', 'amount1_1'])
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
bento_4(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_5(address) := ϕ(['bento_4', 'bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
output_1(uint256) := TMP_195(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token1_21', 'token1_8', 'token0_18', 'token0_7', 'token_1'])
[i]Type for token

Name: token Function: _toShare
Num: 
Den: 
Address: -996
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['amount1_1', 'amount0_1', 'amount0_1', 'amount_1', 'amount1_1'])
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
bento_4(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_5(address) := ϕ(['bento_4', 'bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
output_1(uint256) := TMP_195(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_209

Name: TMP_209 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_7(address) := ϕ(['bento_5'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
TMP_210(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_74,token_1,TMP_208,to_1,TMP_209)
[i]Type for TMP_210

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_24(bool,bytes) = LOW_LEVEL_CALL, dest:bento_7, function:call, arguments:['TMP_210']  
[i]Type for TUPLE_24

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_8(address) := ϕ(['bento_5', 'bento_7', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
success_1(bool)= UNPACK TUPLE_24 index: 0 
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_70 (->None) := 2547674416(uint256)
Finance type key: (-1, -1)
[i]Type for REF_70

Name: REF_70 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2547674416
Fields: 
Finance Type: undef
TMP_205 = CONVERT this to address
[i]Type for TMP_205

Name: TMP_205 Function: _transfer
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_206(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_70,token_1,TMP_205,to_1,amount_1,0)
[i]Type for TMP_206

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_23(bool,bytes) = LOW_LEVEL_CALL, dest:bento_6, function:call, arguments:['TMP_206']  
[i]Type for TUPLE_23

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_9(address) := ϕ(['bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
success_2(bool)= UNPACK TUPLE_23 index: 0 
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_211(None) = SOLIDITY_CALL require(bool,string)(success_scope_0_0,TRANSFER_FAILED)
[i]Type for TMP_211

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_207(None) = SOLIDITY_CALL require(bool,string)(success_2,WITHDRAW_FAILED)
[i]Type for TMP_207

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tokenIn_1(address) := ϕ(['token0_15', 'token1_15', 'tokenIn_1'])
[i]Type for tokenIn

Name: tokenIn Function: _handleFee
Num: 
Den: 
Address: -996
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
amountIn_1(uint256) := ϕ(['amountIn_1', 'amount1_1', 'amount0_1', 'amountIn_2'])
[i]Type for amountIn

Name: amountIn Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MAX_FEE_7(uint256) := ϕ(['MAX_FEE_5', 'MAX_FEE_0', 'MAX_FEE_6', 'MAX_FEE_11'])
[i]Type for MAX_FEE

Name: MAX_FEE Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
swapFee_7(uint256) := ϕ(['swapFee_0', 'swapFee_5', 'swapFee_1', 'swapFee_11', 'swapFee_6'])
[i]Type for swapFee

Name: swapFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: simple fee ratio
barFeeTo_16(address) := ϕ(['barFeeTo_0', 'barFeeTo_15', 'barFeeTo_1', 'barFeeTo_17'])
[i]Type for barFeeTo

Name: barFeeTo Function: _handleFee
Num: -1
Den: -1
Address: 7
Norm: u
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
barFee_3(uint256) := ϕ(['barFee_2', 'barFee_0', 'barFee_1'])
[i]Type for barFee

Name: barFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_274(uint256) = amountIn_1 (c)* swapFee_7
[i]Type for TMP_274

Name: TMP_274 Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
TMP_275(uint256) = TMP_274 (c)/ MAX_FEE_7
[i]Type for TMP_275

Name: TMP_275 Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
fee_1(uint256) := TMP_275(uint256)
Finance type key: (12, -1)
[i]Type for fee

Name: fee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
TMP_276(uint256) = fee_1 (c)* barFee_3
[i]Type for TMP_276

Name: TMP_276 Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
TMP_277(uint256) = TMP_276 (c)/ MAX_FEE_7
[i]Type for TMP_277

Name: TMP_277 Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
_barFee_1(uint256) := TMP_277(uint256)
Finance type key: (12, -1)
[i]Type for _barFee

Name: _barFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
INTERNAL_CALL, HybridPool._transfer(address,uint256,address,bool)(tokenIn_1,_barFee_1,barFeeTo_16,False)
token_1(address) := ϕ(['tokenOut_3', 'token1_17', 'token1_6', 'token0_5', 'tokenIn_1', 'token0_21', 'tokenIn_1', 'tokenOut_1'])
[i]Type for token

Name: token Function: _transfer
Num: 
Den: 
Address: -996
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['_barFee_1', 'amount0_1', 'amountOut_3', 'fee_3', 'amountOut_1', 'amount1_2', 'amount0_3', 'amount1_1'])
[i]Type for amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
to_1(address) := ϕ(['recipient_1', 'recipient_1', 'barFeeTo_16', 'barFeeTo_14', 'to_1', 'recipient_1'])
[i]Type for to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 7
Norm: u
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
unwrapBento_1(bool) := ϕ(['unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1'])
[i]Type for unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_6(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_74 (->None) := 4052550604(uint256)
Finance type key: (-1, -1)
[i]Type for REF_74

Name: REF_74 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4052550604
Fields: 
Finance Type: undef
TMP_208 = CONVERT this to address
[i]Type for TMP_208

Name: TMP_208 Function: _transfer
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_209(uint256) = INTERNAL_CALL, HybridPool._toShare(address,uint256)(token_1,amount_1)
token_1(address) := ϕ(['token1_21', 'token1_8', 'token0_18', 'token0_7', 'token_1'])
[i]Type for token

Name: token Function: _toShare
Num: 
Den: 
Address: -996
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['amount1_1', 'amount0_1', 'amount0_1', 'amount_1', 'amount1_1'])
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
bento_4(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_5(address) := ϕ(['bento_4', 'bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
output_1(uint256) := TMP_195(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token1_21', 'token1_8', 'token0_18', 'token0_7', 'token_1'])
[i]Type for token

Name: token Function: _toShare
Num: 
Den: 
Address: -996
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['amount1_1', 'amount0_1', 'amount0_1', 'amount_1', 'amount1_1'])
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
bento_4(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_5(address) := ϕ(['bento_4', 'bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
output_1(uint256) := TMP_195(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_209

Name: TMP_209 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_7(address) := ϕ(['bento_5'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
TMP_210(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_74,token_1,TMP_208,to_1,TMP_209)
[i]Type for TMP_210

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_24(bool,bytes) = LOW_LEVEL_CALL, dest:bento_7, function:call, arguments:['TMP_210']  
[i]Type for TUPLE_24

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_8(address) := ϕ(['bento_5', 'bento_7', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
success_1(bool)= UNPACK TUPLE_24 index: 0 
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_70 (->None) := 2547674416(uint256)
Finance type key: (-1, -1)
[i]Type for REF_70

Name: REF_70 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2547674416
Fields: 
Finance Type: undef
TMP_205 = CONVERT this to address
[i]Type for TMP_205

Name: TMP_205 Function: _transfer
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_206(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_70,token_1,TMP_205,to_1,amount_1,0)
[i]Type for TMP_206

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_23(bool,bytes) = LOW_LEVEL_CALL, dest:bento_6, function:call, arguments:['TMP_206']  
[i]Type for TUPLE_23

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_9(address) := ϕ(['bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
success_2(bool)= UNPACK TUPLE_23 index: 0 
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_211(None) = SOLIDITY_CALL require(bool,string)(success_scope_0_0,TRANSFER_FAILED)
[i]Type for TMP_211

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_207(None) = SOLIDITY_CALL require(bool,string)(success_2,WITHDRAW_FAILED)
[i]Type for TMP_207

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['tokenOut_3', 'token1_17', 'token1_6', 'token0_5', 'tokenIn_1', 'token0_21', 'tokenIn_1', 'tokenOut_1'])
[i]Type for token

Name: token Function: _transfer
Num: 
Den: 
Address: -996
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['_barFee_1', 'amount0_1', 'amountOut_3', 'fee_3', 'amountOut_1', 'amount1_2', 'amount0_3', 'amount1_1'])
[i]Type for amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
to_1(address) := ϕ(['recipient_1', 'recipient_1', 'barFeeTo_16', 'barFeeTo_14', 'to_1', 'recipient_1'])
[i]Type for to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 7
Norm: u
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
unwrapBento_1(bool) := ϕ(['unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1'])
[i]Type for unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_6(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_74 (->None) := 4052550604(uint256)
Finance type key: (-1, -1)
[i]Type for REF_74

Name: REF_74 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4052550604
Fields: 
Finance Type: undef
TMP_208 = CONVERT this to address
[i]Type for TMP_208

Name: TMP_208 Function: _transfer
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_209(uint256) = INTERNAL_CALL, HybridPool._toShare(address,uint256)(token_1,amount_1)
token_1(address) := ϕ(['token1_21', 'token1_8', 'token0_18', 'token0_7', 'token_1'])
[i]Type for token

Name: token Function: _toShare
Num: 
Den: 
Address: -996
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['amount1_1', 'amount0_1', 'amount0_1', 'amount_1', 'amount1_1'])
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
bento_4(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_5(address) := ϕ(['bento_4', 'bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
output_1(uint256) := TMP_195(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token1_21', 'token1_8', 'token0_18', 'token0_7', 'token_1'])
[i]Type for token

Name: token Function: _toShare
Num: 
Den: 
Address: -996
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['amount1_1', 'amount0_1', 'amount0_1', 'amount_1', 'amount1_1'])
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
bento_4(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_5(address) := ϕ(['bento_4', 'bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
output_1(uint256) := TMP_195(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_209

Name: TMP_209 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_7(address) := ϕ(['bento_5'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
TMP_210(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_74,token_1,TMP_208,to_1,TMP_209)
[i]Type for TMP_210

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_24(bool,bytes) = LOW_LEVEL_CALL, dest:bento_7, function:call, arguments:['TMP_210']  
[i]Type for TUPLE_24

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_8(address) := ϕ(['bento_5', 'bento_7', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
success_1(bool)= UNPACK TUPLE_24 index: 0 
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_70 (->None) := 2547674416(uint256)
Finance type key: (-1, -1)
[i]Type for REF_70

Name: REF_70 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2547674416
Fields: 
Finance Type: undef
TMP_205 = CONVERT this to address
[i]Type for TMP_205

Name: TMP_205 Function: _transfer
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_206(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_70,token_1,TMP_205,to_1,amount_1,0)
[i]Type for TMP_206

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_23(bool,bytes) = LOW_LEVEL_CALL, dest:bento_6, function:call, arguments:['TMP_206']  
[i]Type for TUPLE_23

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_9(address) := ϕ(['bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
success_2(bool)= UNPACK TUPLE_23 index: 0 
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_211(None) = SOLIDITY_CALL require(bool,string)(success_scope_0_0,TRANSFER_FAILED)
[i]Type for TMP_211

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_207(None) = SOLIDITY_CALL require(bool,string)(success_2,WITHDRAW_FAILED)
[i]Type for TMP_207

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_129

Name: TMP_129 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
fee_scope_0_1(uint256) := TMP_129(uint256)
Finance type key: (-1, -1)
[i]Type for fee_scope_0

Name: fee_scope_0 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_124(uint256) = amountIn_1 (c)- fee_1
[i]Type for TMP_124

Name: TMP_124 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_125(uint256) = INTERNAL_CALL, HybridPool._getAmountOut(uint256,uint256,uint256,bool)(TMP_124,_reserve0_1,_reserve1_1,True)
amountIn_1(uint256) := ϕ(['TMP_153', 'TMP_124', 'TMP_103', 'TMP_112', 'TMP_130', 'TMP_140', 'amountIn_3'])
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_reserve0_1(uint256) := ϕ(['_reserve0_1', '_reserve0_1', '_reserve0_1', 'TMP_104', 'TMP_113'])
[i]Type for _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
_reserve1_1(uint256) := ϕ(['_reserve1_1', 'TMP_105', 'TMP_114', '_reserve1_1', '_reserve1_1'])
[i]Type for _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
token0PrecisionMultiplier_2(uint256) := ϕ(['token0PrecisionMultiplier_0', 'token0PrecisionMultiplier_1', 'token0PrecisionMultiplier_4'])
[i]Type for token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
token1PrecisionMultiplier_2(uint256) := ϕ(['token1PrecisionMultiplier_4', 'token1PrecisionMultiplier_1', 'token1PrecisionMultiplier_0'])
[i]Type for token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_196(uint256) = _reserve0_1 (c)* token0PrecisionMultiplier_2
[i]Type for TMP_196

Name: TMP_196 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
xpIn_1(uint256) := TMP_196(uint256)
Finance type key: (-1, -1)
[i]Type for xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_197(uint256) = _reserve1_1 (c)* token1PrecisionMultiplier_2
[i]Type for TMP_197

Name: TMP_197 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
xpOut_1(uint256) := TMP_197(uint256)
Finance type key: (-1, -1)
[i]Type for xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_198(uint256) = _reserve1_1 (c)* token1PrecisionMultiplier_2
[i]Type for TMP_198

Name: TMP_198 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
xpIn_2(uint256) := TMP_198(uint256)
Finance type key: (-1, -1)
[i]Type for xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
amountIn_2(uint256) = amountIn_1 (c)* token0PrecisionMultiplier_2
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_199(uint256) = _reserve0_1 (c)* token0PrecisionMultiplier_2
[i]Type for TMP_199

Name: TMP_199 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
xpOut_2(uint256) := TMP_199(uint256)
Finance type key: (-1, -1)
[i]Type for xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
amountIn_4(uint256) := ϕ(['amountIn_3', 'amountIn_2'])
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
xpIn_3(uint256) := ϕ(['xpIn_1', 'xpIn_2'])
[i]Type for xpIn

Name: xpIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
xpOut_3(uint256) := ϕ(['xpOut_1', 'xpOut_2'])
[i]Type for xpOut

Name: xpOut Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_200(uint256) = INTERNAL_CALL, HybridPool._computeLiquidityFromAdjustedBalances(uint256,uint256)(xpIn_3,xpOut_3)
xp0_1(uint256) := ϕ(['xpIn_3', 'xp0_1'])
[i]Type for xp0

Name: xp0 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
xp1_1(uint256) := ϕ(['xpOut_3', 'xp1_1'])
[i]Type for xp1

Name: xp1 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MAX_LOOP_LIMIT_1(uint256) := ϕ(['MAX_LOOP_LIMIT_0'])
[i]Type for MAX_LOOP_LIMIT

Name: MAX_LOOP_LIMIT Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
N_A_2(uint256) := ϕ(['N_A_0', 'N_A_1'])
[i]Type for N_A

Name: N_A Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
A_PRECISION_1(uint256) := ϕ(['A_PRECISION_0'])
[i]Type for A_PRECISION

Name: A_PRECISION Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_215(uint256) = xp0_1 (c)+ xp1_1
[i]Type for TMP_215

Name: TMP_215 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
s_1(uint256) := TMP_215(uint256)
Finance type key: (-1, -1)
[i]Type for s

Name: s Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_216(bool) = s_1 == 0
[i]Type for TMP_216

Name: TMP_216 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
computed_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for computed

Name: computed Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
D_1(uint256) := s_1(uint256)
Finance type key: (-1, -1)
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
D_2(uint256) := ϕ(['D_3', 'D_1'])
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
i_2(uint256) := ϕ(['i_3', 'i_1'])
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_217(bool) = i_2 < MAX_LOOP_LIMIT_1
[i]Type for TMP_217

Name: TMP_217 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_218(uint256) = D_2 (c)* D_2
Finance type key: (0, 0)
[i]Type for TMP_218

Name: TMP_218 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_219(uint256) = TMP_218 (c)/ xp0_1
[i]Type for TMP_219

Name: TMP_219 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_220(uint256) = TMP_219 (c)* D_2
Finance type key: (0, 0)
[i]Type for TMP_220

Name: TMP_220 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_221(uint256) = TMP_220 (c)/ xp1_1
[i]Type for TMP_221

Name: TMP_221 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_222(uint256) = TMP_221 (c)/ 4
[i]Type for TMP_222

Name: TMP_222 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: raw balance
dP_1(uint256) := TMP_222(uint256)
Finance type key: (0, -1)
[i]Type for dP

Name: dP Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: raw balance
prevD_1(uint256) := D_2(uint256)
Finance type key: (0, -1)
[i]Type for prevD

Name: prevD Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
computed_2(uint256) := D_3(uint256)
Finance type key: (0, -1)
[i]Type for computed

Name: computed Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
TMP_223(uint256) = N_A_2 (c)* s_1
[i]Type for TMP_223

Name: TMP_223 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_224(uint256) = TMP_223 (c)/ A_PRECISION_1
[i]Type for TMP_224

Name: TMP_224 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_225(uint256) = 2 (c)* dP_1
[i]Type for TMP_225

Name: TMP_225 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: raw balance
TMP_226(uint256) = TMP_224 (c)+ TMP_225
[i]Type for TMP_226

Name: TMP_226 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: raw balance
TMP_227(uint256) = TMP_226 (c)* D_2
Finance type key: (0, 0)
[i]Type for TMP_227

Name: TMP_227 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: raw balance
TMP_228(uint256) = N_A_2 (c)/ A_PRECISION_1
[i]Type for TMP_228

Name: TMP_228 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_229(uint256) = TMP_228 (c)- 1
[i]Type for TMP_229

Name: TMP_229 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
TMP_230(uint256) = TMP_229 (c)* D_2
[i]Type for TMP_230

Name: TMP_230 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: raw balance
TMP_231(uint256) = 3 (c)* dP_1
[i]Type for TMP_231

Name: TMP_231 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 12
Fields: 
Finance Type: raw balance
TMP_232(uint256) = TMP_230 (c)+ TMP_231
Finance type key: (0, 0)
[i]Type for TMP_232

Name: TMP_232 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 13
Fields: 
Finance Type: raw balance
TMP_233(uint256) = TMP_227 (c)/ TMP_232
Finance type key: (0, 0)
Finance type key: (0, 0)
[i]Type for TMP_233

Name: TMP_233 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
D_3(uint256) := TMP_233(uint256)
Finance type key: (40, -1)
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
TMP_234(bool) = LIBRARY_CALL, dest:MathUtils, function:MathUtils.within1(uint256,uint256), arguments:['D_3', 'prevD_1'] 
[i]Type for TMP_234

Name: TMP_234 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_235(uint256) := i_2(uint256)
Finance type key: (-1, -1)
[i]Type for TMP_235

Name: TMP_235 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_3(uint256) = i_2 (c)+ 1
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
xp0_1(uint256) := ϕ(['xpIn_3', 'xp0_1'])
[i]Type for xp0

Name: xp0 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
xp1_1(uint256) := ϕ(['xpOut_3', 'xp1_1'])
[i]Type for xp1

Name: xp1 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MAX_LOOP_LIMIT_1(uint256) := ϕ(['MAX_LOOP_LIMIT_0'])
[i]Type for MAX_LOOP_LIMIT

Name: MAX_LOOP_LIMIT Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
N_A_2(uint256) := ϕ(['N_A_0', 'N_A_1'])
[i]Type for N_A

Name: N_A Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
A_PRECISION_1(uint256) := ϕ(['A_PRECISION_0'])
[i]Type for A_PRECISION

Name: A_PRECISION Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_215(uint256) = xp0_1 (c)+ xp1_1
[i]Type for TMP_215

Name: TMP_215 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
s_1(uint256) := TMP_215(uint256)
Finance type key: (-1, -1)
[i]Type for s

Name: s Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_216(bool) = s_1 == 0
[i]Type for TMP_216

Name: TMP_216 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
computed_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for computed

Name: computed Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
D_1(uint256) := s_1(uint256)
Finance type key: (-1, -1)
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
D_2(uint256) := ϕ(['D_3', 'D_1'])
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
i_2(uint256) := ϕ(['i_3', 'i_1'])
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_217(bool) = i_2 < MAX_LOOP_LIMIT_1
[i]Type for TMP_217

Name: TMP_217 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_218(uint256) = D_2 (c)* D_2
Finance type key: (40, 40)
Error with TMP_218 in function _computeLiquidityFromAdjustedBalances
Error with: TMP_218 in function _computeLiquidityFromAdjustedBalances
[i]Type for TMP_218

Name: TMP_218 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_219(uint256) = TMP_218 (c)/ xp0_1
[i]Type for TMP_219

Name: TMP_219 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_220(uint256) = TMP_219 (c)* D_2
[i]Type for TMP_220

Name: TMP_220 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
TMP_221(uint256) = TMP_220 (c)/ xp1_1
[i]Type for TMP_221

Name: TMP_221 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
TMP_222(uint256) = TMP_221 (c)/ 4
[i]Type for TMP_222

Name: TMP_222 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: price/exchange rate
dP_1(uint256) := TMP_222(uint256)
Finance type key: (40, -1)
[i]Type for dP

Name: dP Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: price/exchange rate
prevD_1(uint256) := D_2(uint256)
Finance type key: (40, -1)
[i]Type for prevD

Name: prevD Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
computed_2(uint256) := D_3(uint256)
Finance type key: (40, -1)
[i]Type for computed

Name: computed Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
TMP_223(uint256) = N_A_2 (c)* s_1
[i]Type for TMP_223

Name: TMP_223 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_224(uint256) = TMP_223 (c)/ A_PRECISION_1
[i]Type for TMP_224

Name: TMP_224 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_225(uint256) = 2 (c)* dP_1
[i]Type for TMP_225

Name: TMP_225 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: price/exchange rate
TMP_226(uint256) = TMP_224 (c)+ TMP_225
[i]Type for TMP_226

Name: TMP_226 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: price/exchange rate
TMP_227(uint256) = TMP_226 (c)* D_2
Finance type key: (40, 40)
Error with TMP_227 in function _computeLiquidityFromAdjustedBalances
Error with: TMP_227 in function _computeLiquidityFromAdjustedBalances
[i]Type for TMP_227

Name: TMP_227 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_228(uint256) = N_A_2 (c)/ A_PRECISION_1
[i]Type for TMP_228

Name: TMP_228 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_229(uint256) = TMP_228 (c)- 1
[i]Type for TMP_229

Name: TMP_229 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
TMP_230(uint256) = TMP_229 (c)* D_2
[i]Type for TMP_230

Name: TMP_230 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: price/exchange rate
TMP_231(uint256) = 3 (c)* dP_1
[i]Type for TMP_231

Name: TMP_231 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 12
Fields: 
Finance Type: price/exchange rate
TMP_232(uint256) = TMP_230 (c)+ TMP_231
Finance type key: (40, 40)
[i]Type for TMP_232

Name: TMP_232 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 13
Fields: 
Finance Type: price/exchange rate
TMP_233(uint256) = TMP_227 (c)/ TMP_232
[i]Type for TMP_233

Name: TMP_233 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 13
Fields: 
Finance Type: price/exchange rate
D_3(uint256) := TMP_233(uint256)
Finance type key: (40, -1)
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 13
Fields: 
Finance Type: price/exchange rate
TMP_234(bool) = LIBRARY_CALL, dest:MathUtils, function:MathUtils.within1(uint256,uint256), arguments:['D_3', 'prevD_1'] 
[i]Type for TMP_234

Name: TMP_234 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_235(uint256) := i_2(uint256)
Finance type key: (-1, -1)
[i]Type for TMP_235

Name: TMP_235 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_3(uint256) = i_2 (c)+ 1
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
[i]Type for TMP_200

Name: TMP_200 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
d_1(uint256) := TMP_200(uint256)
Finance type key: (-1, -1)
[i]Type for d

Name: d Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_201(uint256) = xpIn_3 (c)+ amountIn_4
[i]Type for TMP_201

Name: TMP_201 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
x_1(uint256) := TMP_201(uint256)
Finance type key: (0, -1)
[i]Type for x

Name: x Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
amountIn_3(uint256) = amountIn_1 (c)* token1PrecisionMultiplier_2
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_202(uint256) = INTERNAL_CALL, HybridPool._getY(uint256,uint256)(x_1,d_1)
[i]Type for TMP_202

Name: TMP_202 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
y_1(uint256) := TMP_202(uint256)
Finance type key: (-1, -1)
[i]Type for y

Name: y Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_203(uint256) = xpOut_3 (c)- y_1
[i]Type for TMP_203

Name: TMP_203 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_204(uint256) = TMP_203 (c)- 1
[i]Type for TMP_204

Name: TMP_204 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
dy_1(uint256) := TMP_204(uint256)
Finance type key: (-1, -1)
[i]Type for dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
dy_2(uint256) = dy_1 (c)/ token1PrecisionMultiplier_4
[i]Type for dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
dy_3(uint256) = dy_1 (c)/ token0PrecisionMultiplier_4
[i]Type for dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
amountIn_1(uint256) := ϕ(['TMP_153', 'TMP_124', 'TMP_103', 'TMP_112', 'TMP_130', 'TMP_140', 'amountIn_3'])
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_reserve0_1(uint256) := ϕ(['_reserve0_1', '_reserve0_1', '_reserve0_1', 'TMP_104', 'TMP_113'])
[i]Type for _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
_reserve1_1(uint256) := ϕ(['_reserve1_1', 'TMP_105', 'TMP_114', '_reserve1_1', '_reserve1_1'])
[i]Type for _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
token0PrecisionMultiplier_2(uint256) := ϕ(['token0PrecisionMultiplier_0', 'token0PrecisionMultiplier_1', 'token0PrecisionMultiplier_4'])
[i]Type for token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
token1PrecisionMultiplier_2(uint256) := ϕ(['token1PrecisionMultiplier_4', 'token1PrecisionMultiplier_1', 'token1PrecisionMultiplier_0'])
[i]Type for token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_196(uint256) = _reserve0_1 (c)* token0PrecisionMultiplier_2
[i]Type for TMP_196

Name: TMP_196 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
xpIn_1(uint256) := TMP_196(uint256)
Finance type key: (-1, -1)
[i]Type for xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_197(uint256) = _reserve1_1 (c)* token1PrecisionMultiplier_2
[i]Type for TMP_197

Name: TMP_197 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
xpOut_1(uint256) := TMP_197(uint256)
Finance type key: (-1, -1)
[i]Type for xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_198(uint256) = _reserve1_1 (c)* token1PrecisionMultiplier_2
[i]Type for TMP_198

Name: TMP_198 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
xpIn_2(uint256) := TMP_198(uint256)
Finance type key: (-1, -1)
[i]Type for xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
amountIn_2(uint256) = amountIn_1 (c)* token0PrecisionMultiplier_2
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_199(uint256) = _reserve0_1 (c)* token0PrecisionMultiplier_2
[i]Type for TMP_199

Name: TMP_199 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
xpOut_2(uint256) := TMP_199(uint256)
Finance type key: (-1, -1)
[i]Type for xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
amountIn_4(uint256) := ϕ(['amountIn_3', 'amountIn_2'])
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
xpIn_3(uint256) := ϕ(['xpIn_1', 'xpIn_2'])
[i]Type for xpIn

Name: xpIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
xpOut_3(uint256) := ϕ(['xpOut_1', 'xpOut_2'])
[i]Type for xpOut

Name: xpOut Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_200(uint256) = INTERNAL_CALL, HybridPool._computeLiquidityFromAdjustedBalances(uint256,uint256)(xpIn_3,xpOut_3)
xp0_1(uint256) := ϕ(['xpIn_3', 'xp0_1'])
[i]Type for xp0

Name: xp0 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
xp1_1(uint256) := ϕ(['xpOut_3', 'xp1_1'])
[i]Type for xp1

Name: xp1 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MAX_LOOP_LIMIT_1(uint256) := ϕ(['MAX_LOOP_LIMIT_0'])
[i]Type for MAX_LOOP_LIMIT

Name: MAX_LOOP_LIMIT Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
N_A_2(uint256) := ϕ(['N_A_0', 'N_A_1'])
[i]Type for N_A

Name: N_A Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
A_PRECISION_1(uint256) := ϕ(['A_PRECISION_0'])
[i]Type for A_PRECISION

Name: A_PRECISION Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_215(uint256) = xp0_1 (c)+ xp1_1
[i]Type for TMP_215

Name: TMP_215 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
s_1(uint256) := TMP_215(uint256)
Finance type key: (-1, -1)
[i]Type for s

Name: s Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_216(bool) = s_1 == 0
[i]Type for TMP_216

Name: TMP_216 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
computed_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for computed

Name: computed Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
D_1(uint256) := s_1(uint256)
Finance type key: (-1, -1)
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
D_2(uint256) := ϕ(['D_3', 'D_1'])
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
i_2(uint256) := ϕ(['i_3', 'i_1'])
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_217(bool) = i_2 < MAX_LOOP_LIMIT_1
[i]Type for TMP_217

Name: TMP_217 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_218(uint256) = D_2 (c)* D_2
Finance type key: (40, 40)
[i]Type for TMP_218

Name: TMP_218 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_219(uint256) = TMP_218 (c)/ xp0_1
[i]Type for TMP_219

Name: TMP_219 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_220(uint256) = TMP_219 (c)* D_2
[i]Type for TMP_220

Name: TMP_220 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
TMP_221(uint256) = TMP_220 (c)/ xp1_1
[i]Type for TMP_221

Name: TMP_221 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
TMP_222(uint256) = TMP_221 (c)/ 4
[i]Type for TMP_222

Name: TMP_222 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: price/exchange rate
dP_1(uint256) := TMP_222(uint256)
Finance type key: (40, -1)
[i]Type for dP

Name: dP Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: price/exchange rate
prevD_1(uint256) := D_2(uint256)
Finance type key: (40, -1)
[i]Type for prevD

Name: prevD Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
computed_2(uint256) := D_3(uint256)
Finance type key: (40, -1)
[i]Type for computed

Name: computed Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 13
Fields: 
Finance Type: price/exchange rate
TMP_223(uint256) = N_A_2 (c)* s_1
[i]Type for TMP_223

Name: TMP_223 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_224(uint256) = TMP_223 (c)/ A_PRECISION_1
[i]Type for TMP_224

Name: TMP_224 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_225(uint256) = 2 (c)* dP_1
[i]Type for TMP_225

Name: TMP_225 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: price/exchange rate
TMP_226(uint256) = TMP_224 (c)+ TMP_225
[i]Type for TMP_226

Name: TMP_226 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: price/exchange rate
TMP_227(uint256) = TMP_226 (c)* D_2
Finance type key: (40, 40)
[i]Type for TMP_227

Name: TMP_227 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_228(uint256) = N_A_2 (c)/ A_PRECISION_1
[i]Type for TMP_228

Name: TMP_228 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_229(uint256) = TMP_228 (c)- 1
[i]Type for TMP_229

Name: TMP_229 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
TMP_230(uint256) = TMP_229 (c)* D_2
[i]Type for TMP_230

Name: TMP_230 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: price/exchange rate
TMP_231(uint256) = 3 (c)* dP_1
[i]Type for TMP_231

Name: TMP_231 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 12
Fields: 
Finance Type: price/exchange rate
TMP_232(uint256) = TMP_230 (c)+ TMP_231
Finance type key: (40, 40)
[i]Type for TMP_232

Name: TMP_232 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 13
Fields: 
Finance Type: price/exchange rate
TMP_233(uint256) = TMP_227 (c)/ TMP_232
[i]Type for TMP_233

Name: TMP_233 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
D_3(uint256) := TMP_233(uint256)
Finance type key: (40, -1)
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
TMP_234(bool) = LIBRARY_CALL, dest:MathUtils, function:MathUtils.within1(uint256,uint256), arguments:['D_3', 'prevD_1'] 
[i]Type for TMP_234

Name: TMP_234 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_235(uint256) := i_2(uint256)
Finance type key: (-1, -1)
[i]Type for TMP_235

Name: TMP_235 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_3(uint256) = i_2 (c)+ 1
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
xp0_1(uint256) := ϕ(['xpIn_3', 'xp0_1'])
[i]Type for xp0

Name: xp0 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
xp1_1(uint256) := ϕ(['xpOut_3', 'xp1_1'])
[i]Type for xp1

Name: xp1 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MAX_LOOP_LIMIT_1(uint256) := ϕ(['MAX_LOOP_LIMIT_0'])
[i]Type for MAX_LOOP_LIMIT

Name: MAX_LOOP_LIMIT Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
N_A_2(uint256) := ϕ(['N_A_0', 'N_A_1'])
[i]Type for N_A

Name: N_A Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
A_PRECISION_1(uint256) := ϕ(['A_PRECISION_0'])
[i]Type for A_PRECISION

Name: A_PRECISION Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_215(uint256) = xp0_1 (c)+ xp1_1
[i]Type for TMP_215

Name: TMP_215 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
s_1(uint256) := TMP_215(uint256)
Finance type key: (-1, -1)
[i]Type for s

Name: s Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_216(bool) = s_1 == 0
[i]Type for TMP_216

Name: TMP_216 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
computed_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for computed

Name: computed Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
D_1(uint256) := s_1(uint256)
Finance type key: (-1, -1)
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
D_2(uint256) := ϕ(['D_3', 'D_1'])
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
i_2(uint256) := ϕ(['i_3', 'i_1'])
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_217(bool) = i_2 < MAX_LOOP_LIMIT_1
[i]Type for TMP_217

Name: TMP_217 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_218(uint256) = D_2 (c)* D_2
Finance type key: (40, 40)
[i]Type for TMP_218

Name: TMP_218 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_219(uint256) = TMP_218 (c)/ xp0_1
[i]Type for TMP_219

Name: TMP_219 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_220(uint256) = TMP_219 (c)* D_2
[i]Type for TMP_220

Name: TMP_220 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
TMP_221(uint256) = TMP_220 (c)/ xp1_1
[i]Type for TMP_221

Name: TMP_221 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
TMP_222(uint256) = TMP_221 (c)/ 4
[i]Type for TMP_222

Name: TMP_222 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: price/exchange rate
dP_1(uint256) := TMP_222(uint256)
Finance type key: (40, -1)
[i]Type for dP

Name: dP Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: price/exchange rate
prevD_1(uint256) := D_2(uint256)
Finance type key: (40, -1)
[i]Type for prevD

Name: prevD Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
computed_2(uint256) := D_3(uint256)
Finance type key: (40, -1)
[i]Type for computed

Name: computed Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
TMP_223(uint256) = N_A_2 (c)* s_1
[i]Type for TMP_223

Name: TMP_223 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_224(uint256) = TMP_223 (c)/ A_PRECISION_1
[i]Type for TMP_224

Name: TMP_224 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_225(uint256) = 2 (c)* dP_1
[i]Type for TMP_225

Name: TMP_225 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: price/exchange rate
TMP_226(uint256) = TMP_224 (c)+ TMP_225
[i]Type for TMP_226

Name: TMP_226 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: price/exchange rate
TMP_227(uint256) = TMP_226 (c)* D_2
Finance type key: (40, 40)
[i]Type for TMP_227

Name: TMP_227 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_228(uint256) = N_A_2 (c)/ A_PRECISION_1
[i]Type for TMP_228

Name: TMP_228 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_229(uint256) = TMP_228 (c)- 1
[i]Type for TMP_229

Name: TMP_229 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
TMP_230(uint256) = TMP_229 (c)* D_2
[i]Type for TMP_230

Name: TMP_230 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: price/exchange rate
TMP_231(uint256) = 3 (c)* dP_1
[i]Type for TMP_231

Name: TMP_231 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 12
Fields: 
Finance Type: price/exchange rate
TMP_232(uint256) = TMP_230 (c)+ TMP_231
Finance type key: (40, 40)
[i]Type for TMP_232

Name: TMP_232 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 13
Fields: 
Finance Type: price/exchange rate
TMP_233(uint256) = TMP_227 (c)/ TMP_232
[i]Type for TMP_233

Name: TMP_233 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
D_3(uint256) := TMP_233(uint256)
Finance type key: (40, -1)
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
TMP_234(bool) = LIBRARY_CALL, dest:MathUtils, function:MathUtils.within1(uint256,uint256), arguments:['D_3', 'prevD_1'] 
[i]Type for TMP_234

Name: TMP_234 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_235(uint256) := i_2(uint256)
Finance type key: (-1, -1)
[i]Type for TMP_235

Name: TMP_235 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_3(uint256) = i_2 (c)+ 1
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
[i]Type for TMP_200

Name: TMP_200 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
d_1(uint256) := TMP_200(uint256)
Finance type key: (-1, -1)
[i]Type for d

Name: d Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_201(uint256) = xpIn_3 (c)+ amountIn_4
[i]Type for TMP_201

Name: TMP_201 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
x_1(uint256) := TMP_201(uint256)
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
amountIn_3(uint256) = amountIn_1 (c)* token1PrecisionMultiplier_2
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_202(uint256) = INTERNAL_CALL, HybridPool._getY(uint256,uint256)(x_1,d_1)
x_1(uint256) := ϕ(['x_1'])
[i]Type for x

Name: x Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
D_1(uint256) := ϕ(['d_1'])
[i]Type for D

Name: D Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MAX_LOOP_LIMIT_2(uint256) := ϕ(['MAX_LOOP_LIMIT_0'])
[i]Type for MAX_LOOP_LIMIT

Name: MAX_LOOP_LIMIT Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
N_A_3(uint256) := ϕ(['N_A_0', 'N_A_1'])
[i]Type for N_A

Name: N_A Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
A_PRECISION_2(uint256) := ϕ(['A_PRECISION_0'])
[i]Type for A_PRECISION

Name: A_PRECISION Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_236(uint256) = D_1 (c)* D_1
[i]Type for TMP_236

Name: TMP_236 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_237(uint256) = x_1 (c)* 2
[i]Type for TMP_237

Name: TMP_237 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_238(uint256) = TMP_236 (c)/ TMP_237
[i]Type for TMP_238

Name: TMP_238 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
c_1(uint256) := TMP_238(uint256)
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_239(uint256) = c_1 (c)* D_1
[i]Type for TMP_239

Name: TMP_239 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_240(uint256) = N_A_3 (c)* 2
[i]Type for TMP_240

Name: TMP_240 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
TMP_241(uint256) = TMP_240 (c)/ A_PRECISION_2
[i]Type for TMP_241

Name: TMP_241 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
TMP_242(uint256) = TMP_239 (c)/ TMP_241
[i]Type for TMP_242

Name: TMP_242 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
c_2(uint256) := TMP_242(uint256)
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_243(uint256) = D_1 (c)* A_PRECISION_2
[i]Type for TMP_243

Name: TMP_243 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_244(uint256) = TMP_243 (c)/ N_A_3
[i]Type for TMP_244

Name: TMP_244 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_245(uint256) = x_1 (c)+ TMP_244
[i]Type for TMP_245

Name: TMP_245 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
b_1(uint256) := TMP_245(uint256)
Finance type key: (-1, -1)
[i]Type for b

Name: b Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
y_1(uint256) := D_1(uint256)
Finance type key: (-1, -1)
[i]Type for y

Name: y Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for i

Name: i Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
y_2(uint256) := ϕ(['y_1', 'y_3'])
[i]Type for y

Name: y Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
i_2(uint256) := ϕ(['i_1', 'i_3'])
[i]Type for i

Name: i Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_246(bool) = i_2 < MAX_LOOP_LIMIT_2
[i]Type for TMP_246

Name: TMP_246 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
yPrev_1(uint256) := y_2(uint256)
Finance type key: (0, -1)
[i]Type for yPrev

Name: yPrev Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_247(uint256) = y_2 (c)* y_2
Finance type key: (0, 0)
[i]Type for TMP_247

Name: TMP_247 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_248(uint256) = TMP_247 (c)+ c_2
[i]Type for TMP_248

Name: TMP_248 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
TMP_249(uint256) = y_2 (c)* 2
[i]Type for TMP_249

Name: TMP_249 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: raw balance
TMP_250(uint256) = TMP_249 (c)+ b_1
[i]Type for TMP_250

Name: TMP_250 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: raw balance
TMP_251(uint256) = TMP_250 (c)- D_1
[i]Type for TMP_251

Name: TMP_251 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: raw balance
TMP_252(uint256) = TMP_248 (c)/ TMP_251
Finance type key: (0, 0)
Finance type key: (0, 0)
[i]Type for TMP_252

Name: TMP_252 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
y_3(uint256) := TMP_252(uint256)
Finance type key: (40, -1)
[i]Type for y

Name: y Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
TMP_253(bool) = LIBRARY_CALL, dest:MathUtils, function:MathUtils.within1(uint256,uint256), arguments:['y_3', 'yPrev_1'] 
[i]Type for TMP_253

Name: TMP_253 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_254(uint256) := i_2(uint256)
Finance type key: (-1, -1)
[i]Type for TMP_254

Name: TMP_254 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_3(uint256) = i_2 (c)+ 1
[i]Type for i

Name: i Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
x_1(uint256) := ϕ(['x_1'])
[i]Type for x

Name: x Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
D_1(uint256) := ϕ(['d_1'])
[i]Type for D

Name: D Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MAX_LOOP_LIMIT_2(uint256) := ϕ(['MAX_LOOP_LIMIT_0'])
[i]Type for MAX_LOOP_LIMIT

Name: MAX_LOOP_LIMIT Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
N_A_3(uint256) := ϕ(['N_A_0', 'N_A_1'])
[i]Type for N_A

Name: N_A Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
A_PRECISION_2(uint256) := ϕ(['A_PRECISION_0'])
[i]Type for A_PRECISION

Name: A_PRECISION Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_236(uint256) = D_1 (c)* D_1
[i]Type for TMP_236

Name: TMP_236 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_237(uint256) = x_1 (c)* 2
[i]Type for TMP_237

Name: TMP_237 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_238(uint256) = TMP_236 (c)/ TMP_237
[i]Type for TMP_238

Name: TMP_238 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
c_1(uint256) := TMP_238(uint256)
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_239(uint256) = c_1 (c)* D_1
[i]Type for TMP_239

Name: TMP_239 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_240(uint256) = N_A_3 (c)* 2
[i]Type for TMP_240

Name: TMP_240 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
TMP_241(uint256) = TMP_240 (c)/ A_PRECISION_2
[i]Type for TMP_241

Name: TMP_241 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
TMP_242(uint256) = TMP_239 (c)/ TMP_241
[i]Type for TMP_242

Name: TMP_242 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
c_2(uint256) := TMP_242(uint256)
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_243(uint256) = D_1 (c)* A_PRECISION_2
[i]Type for TMP_243

Name: TMP_243 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_244(uint256) = TMP_243 (c)/ N_A_3
[i]Type for TMP_244

Name: TMP_244 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_245(uint256) = x_1 (c)+ TMP_244
[i]Type for TMP_245

Name: TMP_245 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
b_1(uint256) := TMP_245(uint256)
Finance type key: (-1, -1)
[i]Type for b

Name: b Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
y_1(uint256) := D_1(uint256)
Finance type key: (-1, -1)
[i]Type for y

Name: y Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for i

Name: i Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
y_2(uint256) := ϕ(['y_1', 'y_3'])
[i]Type for y

Name: y Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
i_2(uint256) := ϕ(['i_1', 'i_3'])
[i]Type for i

Name: i Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_246(bool) = i_2 < MAX_LOOP_LIMIT_2
[i]Type for TMP_246

Name: TMP_246 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
yPrev_1(uint256) := y_2(uint256)
Finance type key: (40, -1)
[i]Type for yPrev

Name: yPrev Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
TMP_247(uint256) = y_2 (c)* y_2
Finance type key: (40, 40)
[i]Type for TMP_247

Name: TMP_247 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_248(uint256) = TMP_247 (c)+ c_2
[i]Type for TMP_248

Name: TMP_248 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_249(uint256) = y_2 (c)* 2
[i]Type for TMP_249

Name: TMP_249 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: price/exchange rate
TMP_250(uint256) = TMP_249 (c)+ b_1
[i]Type for TMP_250

Name: TMP_250 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: price/exchange rate
TMP_251(uint256) = TMP_250 (c)- D_1
[i]Type for TMP_251

Name: TMP_251 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: price/exchange rate
TMP_252(uint256) = TMP_248 (c)/ TMP_251
[i]Type for TMP_252

Name: TMP_252 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
y_3(uint256) := TMP_252(uint256)
Finance type key: (40, -1)
[i]Type for y

Name: y Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
TMP_253(bool) = LIBRARY_CALL, dest:MathUtils, function:MathUtils.within1(uint256,uint256), arguments:['y_3', 'yPrev_1'] 
[i]Type for TMP_253

Name: TMP_253 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_254(uint256) := i_2(uint256)
Finance type key: (-1, -1)
[i]Type for TMP_254

Name: TMP_254 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_3(uint256) = i_2 (c)+ 1
[i]Type for i

Name: i Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
[i]Type for TMP_202

Name: TMP_202 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
y_1(uint256) := TMP_202(uint256)
Finance type key: (-1, -1)
[i]Type for y

Name: y Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_203(uint256) = xpOut_3 (c)- y_1
[i]Type for TMP_203

Name: TMP_203 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_204(uint256) = TMP_203 (c)- 1
[i]Type for TMP_204

Name: TMP_204 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
dy_1(uint256) := TMP_204(uint256)
Finance type key: (-1, -1)
[i]Type for dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
dy_2(uint256) = dy_1 (c)/ token1PrecisionMultiplier_4
[i]Type for dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
dy_3(uint256) = dy_1 (c)/ token0PrecisionMultiplier_4
[i]Type for dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
[i]Type for TMP_125

Name: TMP_125 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
amountOut_1(uint256) := TMP_125(uint256)
Finance type key: (-1, -1)
[i]Type for amountOut

Name: amountOut Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_130(uint256) = amountIn_2 (c)- fee_scope_0_1
[i]Type for TMP_130

Name: TMP_130 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_131(uint256) = INTERNAL_CALL, HybridPool._getAmountOut(uint256,uint256,uint256,bool)(TMP_130,_reserve0_1,_reserve1_1,False)
amountIn_1(uint256) := ϕ(['TMP_153', 'TMP_124', 'TMP_103', 'TMP_112', 'TMP_130', 'TMP_140', 'amountIn_3'])
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_reserve0_1(uint256) := ϕ(['_reserve0_1', '_reserve0_1', '_reserve0_1', 'TMP_104', 'TMP_113'])
[i]Type for _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
_reserve1_1(uint256) := ϕ(['_reserve1_1', 'TMP_105', 'TMP_114', '_reserve1_1', '_reserve1_1'])
[i]Type for _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
token0PrecisionMultiplier_2(uint256) := ϕ(['token0PrecisionMultiplier_0', 'token0PrecisionMultiplier_1', 'token0PrecisionMultiplier_4'])
[i]Type for token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
token1PrecisionMultiplier_2(uint256) := ϕ(['token1PrecisionMultiplier_4', 'token1PrecisionMultiplier_1', 'token1PrecisionMultiplier_0'])
[i]Type for token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_196(uint256) = _reserve0_1 (c)* token0PrecisionMultiplier_2
[i]Type for TMP_196

Name: TMP_196 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
xpIn_1(uint256) := TMP_196(uint256)
Finance type key: (-1, -1)
[i]Type for xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_197(uint256) = _reserve1_1 (c)* token1PrecisionMultiplier_2
[i]Type for TMP_197

Name: TMP_197 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
xpOut_1(uint256) := TMP_197(uint256)
Finance type key: (-1, -1)
[i]Type for xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_198(uint256) = _reserve1_1 (c)* token1PrecisionMultiplier_2
[i]Type for TMP_198

Name: TMP_198 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
xpIn_2(uint256) := TMP_198(uint256)
Finance type key: (-1, -1)
[i]Type for xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
amountIn_2(uint256) = amountIn_1 (c)* token0PrecisionMultiplier_2
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_199(uint256) = _reserve0_1 (c)* token0PrecisionMultiplier_2
[i]Type for TMP_199

Name: TMP_199 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
xpOut_2(uint256) := TMP_199(uint256)
Finance type key: (-1, -1)
[i]Type for xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
amountIn_4(uint256) := ϕ(['amountIn_3', 'amountIn_2'])
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
xpIn_3(uint256) := ϕ(['xpIn_1', 'xpIn_2'])
[i]Type for xpIn

Name: xpIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
xpOut_3(uint256) := ϕ(['xpOut_1', 'xpOut_2'])
[i]Type for xpOut

Name: xpOut Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_200(uint256) = INTERNAL_CALL, HybridPool._computeLiquidityFromAdjustedBalances(uint256,uint256)(xpIn_3,xpOut_3)
xp0_1(uint256) := ϕ(['xpIn_3', 'xp0_1'])
[i]Type for xp0

Name: xp0 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
xp1_1(uint256) := ϕ(['xpOut_3', 'xp1_1'])
[i]Type for xp1

Name: xp1 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MAX_LOOP_LIMIT_1(uint256) := ϕ(['MAX_LOOP_LIMIT_0'])
[i]Type for MAX_LOOP_LIMIT

Name: MAX_LOOP_LIMIT Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
N_A_2(uint256) := ϕ(['N_A_0', 'N_A_1'])
[i]Type for N_A

Name: N_A Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
A_PRECISION_1(uint256) := ϕ(['A_PRECISION_0'])
[i]Type for A_PRECISION

Name: A_PRECISION Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_215(uint256) = xp0_1 (c)+ xp1_1
[i]Type for TMP_215

Name: TMP_215 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
s_1(uint256) := TMP_215(uint256)
Finance type key: (-1, -1)
[i]Type for s

Name: s Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_216(bool) = s_1 == 0
[i]Type for TMP_216

Name: TMP_216 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
computed_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for computed

Name: computed Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
D_1(uint256) := s_1(uint256)
Finance type key: (-1, -1)
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
D_2(uint256) := ϕ(['D_3', 'D_1'])
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
i_2(uint256) := ϕ(['i_3', 'i_1'])
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_217(bool) = i_2 < MAX_LOOP_LIMIT_1
[i]Type for TMP_217

Name: TMP_217 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_218(uint256) = D_2 (c)* D_2
Finance type key: (40, 40)
[i]Type for TMP_218

Name: TMP_218 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_219(uint256) = TMP_218 (c)/ xp0_1
[i]Type for TMP_219

Name: TMP_219 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_220(uint256) = TMP_219 (c)* D_2
[i]Type for TMP_220

Name: TMP_220 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
TMP_221(uint256) = TMP_220 (c)/ xp1_1
[i]Type for TMP_221

Name: TMP_221 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
TMP_222(uint256) = TMP_221 (c)/ 4
[i]Type for TMP_222

Name: TMP_222 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: price/exchange rate
dP_1(uint256) := TMP_222(uint256)
Finance type key: (40, -1)
[i]Type for dP

Name: dP Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: price/exchange rate
prevD_1(uint256) := D_2(uint256)
Finance type key: (40, -1)
[i]Type for prevD

Name: prevD Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
computed_2(uint256) := D_3(uint256)
Finance type key: (40, -1)
[i]Type for computed

Name: computed Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
TMP_223(uint256) = N_A_2 (c)* s_1
[i]Type for TMP_223

Name: TMP_223 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_224(uint256) = TMP_223 (c)/ A_PRECISION_1
[i]Type for TMP_224

Name: TMP_224 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_225(uint256) = 2 (c)* dP_1
[i]Type for TMP_225

Name: TMP_225 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: price/exchange rate
TMP_226(uint256) = TMP_224 (c)+ TMP_225
[i]Type for TMP_226

Name: TMP_226 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: price/exchange rate
TMP_227(uint256) = TMP_226 (c)* D_2
Finance type key: (40, 40)
[i]Type for TMP_227

Name: TMP_227 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_228(uint256) = N_A_2 (c)/ A_PRECISION_1
[i]Type for TMP_228

Name: TMP_228 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_229(uint256) = TMP_228 (c)- 1
[i]Type for TMP_229

Name: TMP_229 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
TMP_230(uint256) = TMP_229 (c)* D_2
[i]Type for TMP_230

Name: TMP_230 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: price/exchange rate
TMP_231(uint256) = 3 (c)* dP_1
[i]Type for TMP_231

Name: TMP_231 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 12
Fields: 
Finance Type: price/exchange rate
TMP_232(uint256) = TMP_230 (c)+ TMP_231
Finance type key: (40, 40)
[i]Type for TMP_232

Name: TMP_232 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 13
Fields: 
Finance Type: price/exchange rate
TMP_233(uint256) = TMP_227 (c)/ TMP_232
[i]Type for TMP_233

Name: TMP_233 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
D_3(uint256) := TMP_233(uint256)
Finance type key: (40, -1)
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
TMP_234(bool) = LIBRARY_CALL, dest:MathUtils, function:MathUtils.within1(uint256,uint256), arguments:['D_3', 'prevD_1'] 
[i]Type for TMP_234

Name: TMP_234 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_235(uint256) := i_2(uint256)
Finance type key: (-1, -1)
[i]Type for TMP_235

Name: TMP_235 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_3(uint256) = i_2 (c)+ 1
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
xp0_1(uint256) := ϕ(['xpIn_3', 'xp0_1'])
[i]Type for xp0

Name: xp0 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
xp1_1(uint256) := ϕ(['xpOut_3', 'xp1_1'])
[i]Type for xp1

Name: xp1 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MAX_LOOP_LIMIT_1(uint256) := ϕ(['MAX_LOOP_LIMIT_0'])
[i]Type for MAX_LOOP_LIMIT

Name: MAX_LOOP_LIMIT Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
N_A_2(uint256) := ϕ(['N_A_0', 'N_A_1'])
[i]Type for N_A

Name: N_A Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
A_PRECISION_1(uint256) := ϕ(['A_PRECISION_0'])
[i]Type for A_PRECISION

Name: A_PRECISION Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_215(uint256) = xp0_1 (c)+ xp1_1
[i]Type for TMP_215

Name: TMP_215 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
s_1(uint256) := TMP_215(uint256)
Finance type key: (-1, -1)
[i]Type for s

Name: s Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_216(bool) = s_1 == 0
[i]Type for TMP_216

Name: TMP_216 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
computed_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for computed

Name: computed Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
D_1(uint256) := s_1(uint256)
Finance type key: (-1, -1)
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
D_2(uint256) := ϕ(['D_3', 'D_1'])
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
i_2(uint256) := ϕ(['i_3', 'i_1'])
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_217(bool) = i_2 < MAX_LOOP_LIMIT_1
[i]Type for TMP_217

Name: TMP_217 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_218(uint256) = D_2 (c)* D_2
Finance type key: (40, 40)
[i]Type for TMP_218

Name: TMP_218 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_219(uint256) = TMP_218 (c)/ xp0_1
[i]Type for TMP_219

Name: TMP_219 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_220(uint256) = TMP_219 (c)* D_2
[i]Type for TMP_220

Name: TMP_220 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
TMP_221(uint256) = TMP_220 (c)/ xp1_1
[i]Type for TMP_221

Name: TMP_221 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
TMP_222(uint256) = TMP_221 (c)/ 4
[i]Type for TMP_222

Name: TMP_222 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: price/exchange rate
dP_1(uint256) := TMP_222(uint256)
Finance type key: (40, -1)
[i]Type for dP

Name: dP Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: price/exchange rate
prevD_1(uint256) := D_2(uint256)
Finance type key: (40, -1)
[i]Type for prevD

Name: prevD Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
computed_2(uint256) := D_3(uint256)
Finance type key: (40, -1)
[i]Type for computed

Name: computed Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
TMP_223(uint256) = N_A_2 (c)* s_1
[i]Type for TMP_223

Name: TMP_223 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_224(uint256) = TMP_223 (c)/ A_PRECISION_1
[i]Type for TMP_224

Name: TMP_224 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_225(uint256) = 2 (c)* dP_1
[i]Type for TMP_225

Name: TMP_225 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: price/exchange rate
TMP_226(uint256) = TMP_224 (c)+ TMP_225
[i]Type for TMP_226

Name: TMP_226 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: price/exchange rate
TMP_227(uint256) = TMP_226 (c)* D_2
Finance type key: (40, 40)
[i]Type for TMP_227

Name: TMP_227 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_228(uint256) = N_A_2 (c)/ A_PRECISION_1
[i]Type for TMP_228

Name: TMP_228 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_229(uint256) = TMP_228 (c)- 1
[i]Type for TMP_229

Name: TMP_229 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
TMP_230(uint256) = TMP_229 (c)* D_2
[i]Type for TMP_230

Name: TMP_230 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: price/exchange rate
TMP_231(uint256) = 3 (c)* dP_1
[i]Type for TMP_231

Name: TMP_231 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 12
Fields: 
Finance Type: price/exchange rate
TMP_232(uint256) = TMP_230 (c)+ TMP_231
Finance type key: (40, 40)
[i]Type for TMP_232

Name: TMP_232 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 13
Fields: 
Finance Type: price/exchange rate
TMP_233(uint256) = TMP_227 (c)/ TMP_232
[i]Type for TMP_233

Name: TMP_233 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
D_3(uint256) := TMP_233(uint256)
Finance type key: (40, -1)
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
TMP_234(bool) = LIBRARY_CALL, dest:MathUtils, function:MathUtils.within1(uint256,uint256), arguments:['D_3', 'prevD_1'] 
[i]Type for TMP_234

Name: TMP_234 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_235(uint256) := i_2(uint256)
Finance type key: (-1, -1)
[i]Type for TMP_235

Name: TMP_235 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_3(uint256) = i_2 (c)+ 1
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
[i]Type for TMP_200

Name: TMP_200 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
d_1(uint256) := TMP_200(uint256)
Finance type key: (-1, -1)
[i]Type for d

Name: d Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_201(uint256) = xpIn_3 (c)+ amountIn_4
[i]Type for TMP_201

Name: TMP_201 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
x_1(uint256) := TMP_201(uint256)
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
amountIn_3(uint256) = amountIn_1 (c)* token1PrecisionMultiplier_2
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_202(uint256) = INTERNAL_CALL, HybridPool._getY(uint256,uint256)(x_1,d_1)
x_1(uint256) := ϕ(['x_1'])
[i]Type for x

Name: x Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
D_1(uint256) := ϕ(['d_1'])
[i]Type for D

Name: D Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MAX_LOOP_LIMIT_2(uint256) := ϕ(['MAX_LOOP_LIMIT_0'])
[i]Type for MAX_LOOP_LIMIT

Name: MAX_LOOP_LIMIT Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
N_A_3(uint256) := ϕ(['N_A_0', 'N_A_1'])
[i]Type for N_A

Name: N_A Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
A_PRECISION_2(uint256) := ϕ(['A_PRECISION_0'])
[i]Type for A_PRECISION

Name: A_PRECISION Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_236(uint256) = D_1 (c)* D_1
[i]Type for TMP_236

Name: TMP_236 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_237(uint256) = x_1 (c)* 2
[i]Type for TMP_237

Name: TMP_237 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_238(uint256) = TMP_236 (c)/ TMP_237
[i]Type for TMP_238

Name: TMP_238 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
c_1(uint256) := TMP_238(uint256)
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_239(uint256) = c_1 (c)* D_1
[i]Type for TMP_239

Name: TMP_239 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_240(uint256) = N_A_3 (c)* 2
[i]Type for TMP_240

Name: TMP_240 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
TMP_241(uint256) = TMP_240 (c)/ A_PRECISION_2
[i]Type for TMP_241

Name: TMP_241 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
TMP_242(uint256) = TMP_239 (c)/ TMP_241
[i]Type for TMP_242

Name: TMP_242 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
c_2(uint256) := TMP_242(uint256)
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_243(uint256) = D_1 (c)* A_PRECISION_2
[i]Type for TMP_243

Name: TMP_243 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_244(uint256) = TMP_243 (c)/ N_A_3
[i]Type for TMP_244

Name: TMP_244 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_245(uint256) = x_1 (c)+ TMP_244
[i]Type for TMP_245

Name: TMP_245 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
b_1(uint256) := TMP_245(uint256)
Finance type key: (-1, -1)
[i]Type for b

Name: b Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
y_1(uint256) := D_1(uint256)
Finance type key: (-1, -1)
[i]Type for y

Name: y Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for i

Name: i Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
y_2(uint256) := ϕ(['y_1', 'y_3'])
[i]Type for y

Name: y Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
i_2(uint256) := ϕ(['i_1', 'i_3'])
[i]Type for i

Name: i Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_246(bool) = i_2 < MAX_LOOP_LIMIT_2
[i]Type for TMP_246

Name: TMP_246 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
yPrev_1(uint256) := y_2(uint256)
Finance type key: (40, -1)
[i]Type for yPrev

Name: yPrev Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
TMP_247(uint256) = y_2 (c)* y_2
Finance type key: (40, 40)
[i]Type for TMP_247

Name: TMP_247 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_248(uint256) = TMP_247 (c)+ c_2
[i]Type for TMP_248

Name: TMP_248 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_249(uint256) = y_2 (c)* 2
[i]Type for TMP_249

Name: TMP_249 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: price/exchange rate
TMP_250(uint256) = TMP_249 (c)+ b_1
[i]Type for TMP_250

Name: TMP_250 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: price/exchange rate
TMP_251(uint256) = TMP_250 (c)- D_1
[i]Type for TMP_251

Name: TMP_251 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: price/exchange rate
TMP_252(uint256) = TMP_248 (c)/ TMP_251
[i]Type for TMP_252

Name: TMP_252 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
y_3(uint256) := TMP_252(uint256)
Finance type key: (40, -1)
[i]Type for y

Name: y Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
TMP_253(bool) = LIBRARY_CALL, dest:MathUtils, function:MathUtils.within1(uint256,uint256), arguments:['y_3', 'yPrev_1'] 
[i]Type for TMP_253

Name: TMP_253 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_254(uint256) := i_2(uint256)
Finance type key: (-1, -1)
[i]Type for TMP_254

Name: TMP_254 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_3(uint256) = i_2 (c)+ 1
[i]Type for i

Name: i Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
x_1(uint256) := ϕ(['x_1'])
[i]Type for x

Name: x Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
D_1(uint256) := ϕ(['d_1'])
[i]Type for D

Name: D Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MAX_LOOP_LIMIT_2(uint256) := ϕ(['MAX_LOOP_LIMIT_0'])
[i]Type for MAX_LOOP_LIMIT

Name: MAX_LOOP_LIMIT Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
N_A_3(uint256) := ϕ(['N_A_0', 'N_A_1'])
[i]Type for N_A

Name: N_A Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
A_PRECISION_2(uint256) := ϕ(['A_PRECISION_0'])
[i]Type for A_PRECISION

Name: A_PRECISION Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_236(uint256) = D_1 (c)* D_1
[i]Type for TMP_236

Name: TMP_236 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_237(uint256) = x_1 (c)* 2
[i]Type for TMP_237

Name: TMP_237 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_238(uint256) = TMP_236 (c)/ TMP_237
[i]Type for TMP_238

Name: TMP_238 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
c_1(uint256) := TMP_238(uint256)
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_239(uint256) = c_1 (c)* D_1
[i]Type for TMP_239

Name: TMP_239 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_240(uint256) = N_A_3 (c)* 2
[i]Type for TMP_240

Name: TMP_240 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
TMP_241(uint256) = TMP_240 (c)/ A_PRECISION_2
[i]Type for TMP_241

Name: TMP_241 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
TMP_242(uint256) = TMP_239 (c)/ TMP_241
[i]Type for TMP_242

Name: TMP_242 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
c_2(uint256) := TMP_242(uint256)
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_243(uint256) = D_1 (c)* A_PRECISION_2
[i]Type for TMP_243

Name: TMP_243 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_244(uint256) = TMP_243 (c)/ N_A_3
[i]Type for TMP_244

Name: TMP_244 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_245(uint256) = x_1 (c)+ TMP_244
[i]Type for TMP_245

Name: TMP_245 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
b_1(uint256) := TMP_245(uint256)
Finance type key: (-1, -1)
[i]Type for b

Name: b Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
y_1(uint256) := D_1(uint256)
Finance type key: (-1, -1)
[i]Type for y

Name: y Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for i

Name: i Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
y_2(uint256) := ϕ(['y_1', 'y_3'])
[i]Type for y

Name: y Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
i_2(uint256) := ϕ(['i_1', 'i_3'])
[i]Type for i

Name: i Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_246(bool) = i_2 < MAX_LOOP_LIMIT_2
[i]Type for TMP_246

Name: TMP_246 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
yPrev_1(uint256) := y_2(uint256)
Finance type key: (40, -1)
[i]Type for yPrev

Name: yPrev Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
TMP_247(uint256) = y_2 (c)* y_2
Finance type key: (40, 40)
[i]Type for TMP_247

Name: TMP_247 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_248(uint256) = TMP_247 (c)+ c_2
[i]Type for TMP_248

Name: TMP_248 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_249(uint256) = y_2 (c)* 2
[i]Type for TMP_249

Name: TMP_249 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: price/exchange rate
TMP_250(uint256) = TMP_249 (c)+ b_1
[i]Type for TMP_250

Name: TMP_250 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: price/exchange rate
TMP_251(uint256) = TMP_250 (c)- D_1
[i]Type for TMP_251

Name: TMP_251 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: price/exchange rate
TMP_252(uint256) = TMP_248 (c)/ TMP_251
[i]Type for TMP_252

Name: TMP_252 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
y_3(uint256) := TMP_252(uint256)
Finance type key: (40, -1)
[i]Type for y

Name: y Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
TMP_253(bool) = LIBRARY_CALL, dest:MathUtils, function:MathUtils.within1(uint256,uint256), arguments:['y_3', 'yPrev_1'] 
[i]Type for TMP_253

Name: TMP_253 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_254(uint256) := i_2(uint256)
Finance type key: (-1, -1)
[i]Type for TMP_254

Name: TMP_254 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_3(uint256) = i_2 (c)+ 1
[i]Type for i

Name: i Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
[i]Type for TMP_202

Name: TMP_202 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
y_1(uint256) := TMP_202(uint256)
Finance type key: (-1, -1)
[i]Type for y

Name: y Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_203(uint256) = xpOut_3 (c)- y_1
[i]Type for TMP_203

Name: TMP_203 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_204(uint256) = TMP_203 (c)- 1
[i]Type for TMP_204

Name: TMP_204 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
dy_1(uint256) := TMP_204(uint256)
Finance type key: (-1, -1)
[i]Type for dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
dy_2(uint256) = dy_1 (c)/ token1PrecisionMultiplier_4
[i]Type for dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
dy_3(uint256) = dy_1 (c)/ token0PrecisionMultiplier_4
[i]Type for dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
amountIn_1(uint256) := ϕ(['TMP_153', 'TMP_124', 'TMP_103', 'TMP_112', 'TMP_130', 'TMP_140', 'amountIn_3'])
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_reserve0_1(uint256) := ϕ(['_reserve0_1', '_reserve0_1', '_reserve0_1', 'TMP_104', 'TMP_113'])
[i]Type for _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
_reserve1_1(uint256) := ϕ(['_reserve1_1', 'TMP_105', 'TMP_114', '_reserve1_1', '_reserve1_1'])
[i]Type for _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
token0PrecisionMultiplier_2(uint256) := ϕ(['token0PrecisionMultiplier_0', 'token0PrecisionMultiplier_1', 'token0PrecisionMultiplier_4'])
[i]Type for token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
token1PrecisionMultiplier_2(uint256) := ϕ(['token1PrecisionMultiplier_4', 'token1PrecisionMultiplier_1', 'token1PrecisionMultiplier_0'])
[i]Type for token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_196(uint256) = _reserve0_1 (c)* token0PrecisionMultiplier_2
[i]Type for TMP_196

Name: TMP_196 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
xpIn_1(uint256) := TMP_196(uint256)
Finance type key: (-1, -1)
[i]Type for xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_197(uint256) = _reserve1_1 (c)* token1PrecisionMultiplier_2
[i]Type for TMP_197

Name: TMP_197 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
xpOut_1(uint256) := TMP_197(uint256)
Finance type key: (-1, -1)
[i]Type for xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_198(uint256) = _reserve1_1 (c)* token1PrecisionMultiplier_2
[i]Type for TMP_198

Name: TMP_198 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
xpIn_2(uint256) := TMP_198(uint256)
Finance type key: (-1, -1)
[i]Type for xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
amountIn_2(uint256) = amountIn_1 (c)* token0PrecisionMultiplier_2
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_199(uint256) = _reserve0_1 (c)* token0PrecisionMultiplier_2
[i]Type for TMP_199

Name: TMP_199 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
xpOut_2(uint256) := TMP_199(uint256)
Finance type key: (-1, -1)
[i]Type for xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
amountIn_4(uint256) := ϕ(['amountIn_3', 'amountIn_2'])
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
xpIn_3(uint256) := ϕ(['xpIn_1', 'xpIn_2'])
[i]Type for xpIn

Name: xpIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
xpOut_3(uint256) := ϕ(['xpOut_1', 'xpOut_2'])
[i]Type for xpOut

Name: xpOut Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_200(uint256) = INTERNAL_CALL, HybridPool._computeLiquidityFromAdjustedBalances(uint256,uint256)(xpIn_3,xpOut_3)
xp0_1(uint256) := ϕ(['xpIn_3', 'xp0_1'])
[i]Type for xp0

Name: xp0 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
xp1_1(uint256) := ϕ(['xpOut_3', 'xp1_1'])
[i]Type for xp1

Name: xp1 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MAX_LOOP_LIMIT_1(uint256) := ϕ(['MAX_LOOP_LIMIT_0'])
[i]Type for MAX_LOOP_LIMIT

Name: MAX_LOOP_LIMIT Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
N_A_2(uint256) := ϕ(['N_A_0', 'N_A_1'])
[i]Type for N_A

Name: N_A Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
A_PRECISION_1(uint256) := ϕ(['A_PRECISION_0'])
[i]Type for A_PRECISION

Name: A_PRECISION Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_215(uint256) = xp0_1 (c)+ xp1_1
[i]Type for TMP_215

Name: TMP_215 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
s_1(uint256) := TMP_215(uint256)
Finance type key: (-1, -1)
[i]Type for s

Name: s Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_216(bool) = s_1 == 0
[i]Type for TMP_216

Name: TMP_216 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
computed_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for computed

Name: computed Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
D_1(uint256) := s_1(uint256)
Finance type key: (-1, -1)
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
D_2(uint256) := ϕ(['D_3', 'D_1'])
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
i_2(uint256) := ϕ(['i_3', 'i_1'])
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_217(bool) = i_2 < MAX_LOOP_LIMIT_1
[i]Type for TMP_217

Name: TMP_217 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_218(uint256) = D_2 (c)* D_2
Finance type key: (40, 40)
[i]Type for TMP_218

Name: TMP_218 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_219(uint256) = TMP_218 (c)/ xp0_1
[i]Type for TMP_219

Name: TMP_219 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_220(uint256) = TMP_219 (c)* D_2
[i]Type for TMP_220

Name: TMP_220 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
TMP_221(uint256) = TMP_220 (c)/ xp1_1
[i]Type for TMP_221

Name: TMP_221 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
TMP_222(uint256) = TMP_221 (c)/ 4
[i]Type for TMP_222

Name: TMP_222 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: price/exchange rate
dP_1(uint256) := TMP_222(uint256)
Finance type key: (40, -1)
[i]Type for dP

Name: dP Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: price/exchange rate
prevD_1(uint256) := D_2(uint256)
Finance type key: (40, -1)
[i]Type for prevD

Name: prevD Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
computed_2(uint256) := D_3(uint256)
Finance type key: (40, -1)
[i]Type for computed

Name: computed Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
TMP_223(uint256) = N_A_2 (c)* s_1
[i]Type for TMP_223

Name: TMP_223 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_224(uint256) = TMP_223 (c)/ A_PRECISION_1
[i]Type for TMP_224

Name: TMP_224 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_225(uint256) = 2 (c)* dP_1
[i]Type for TMP_225

Name: TMP_225 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: price/exchange rate
TMP_226(uint256) = TMP_224 (c)+ TMP_225
[i]Type for TMP_226

Name: TMP_226 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: price/exchange rate
TMP_227(uint256) = TMP_226 (c)* D_2
Finance type key: (40, 40)
[i]Type for TMP_227

Name: TMP_227 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_228(uint256) = N_A_2 (c)/ A_PRECISION_1
[i]Type for TMP_228

Name: TMP_228 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_229(uint256) = TMP_228 (c)- 1
[i]Type for TMP_229

Name: TMP_229 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
TMP_230(uint256) = TMP_229 (c)* D_2
[i]Type for TMP_230

Name: TMP_230 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: price/exchange rate
TMP_231(uint256) = 3 (c)* dP_1
[i]Type for TMP_231

Name: TMP_231 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 12
Fields: 
Finance Type: price/exchange rate
TMP_232(uint256) = TMP_230 (c)+ TMP_231
Finance type key: (40, 40)
[i]Type for TMP_232

Name: TMP_232 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 13
Fields: 
Finance Type: price/exchange rate
TMP_233(uint256) = TMP_227 (c)/ TMP_232
[i]Type for TMP_233

Name: TMP_233 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
D_3(uint256) := TMP_233(uint256)
Finance type key: (40, -1)
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
TMP_234(bool) = LIBRARY_CALL, dest:MathUtils, function:MathUtils.within1(uint256,uint256), arguments:['D_3', 'prevD_1'] 
[i]Type for TMP_234

Name: TMP_234 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_235(uint256) := i_2(uint256)
Finance type key: (-1, -1)
[i]Type for TMP_235

Name: TMP_235 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_3(uint256) = i_2 (c)+ 1
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
xp0_1(uint256) := ϕ(['xpIn_3', 'xp0_1'])
[i]Type for xp0

Name: xp0 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
xp1_1(uint256) := ϕ(['xpOut_3', 'xp1_1'])
[i]Type for xp1

Name: xp1 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MAX_LOOP_LIMIT_1(uint256) := ϕ(['MAX_LOOP_LIMIT_0'])
[i]Type for MAX_LOOP_LIMIT

Name: MAX_LOOP_LIMIT Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
N_A_2(uint256) := ϕ(['N_A_0', 'N_A_1'])
[i]Type for N_A

Name: N_A Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
A_PRECISION_1(uint256) := ϕ(['A_PRECISION_0'])
[i]Type for A_PRECISION

Name: A_PRECISION Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_215(uint256) = xp0_1 (c)+ xp1_1
[i]Type for TMP_215

Name: TMP_215 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
s_1(uint256) := TMP_215(uint256)
Finance type key: (-1, -1)
[i]Type for s

Name: s Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_216(bool) = s_1 == 0
[i]Type for TMP_216

Name: TMP_216 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
computed_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for computed

Name: computed Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
D_1(uint256) := s_1(uint256)
Finance type key: (-1, -1)
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
D_2(uint256) := ϕ(['D_3', 'D_1'])
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
i_2(uint256) := ϕ(['i_3', 'i_1'])
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_217(bool) = i_2 < MAX_LOOP_LIMIT_1
[i]Type for TMP_217

Name: TMP_217 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_218(uint256) = D_2 (c)* D_2
Finance type key: (40, 40)
[i]Type for TMP_218

Name: TMP_218 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_219(uint256) = TMP_218 (c)/ xp0_1
[i]Type for TMP_219

Name: TMP_219 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_220(uint256) = TMP_219 (c)* D_2
[i]Type for TMP_220

Name: TMP_220 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
TMP_221(uint256) = TMP_220 (c)/ xp1_1
[i]Type for TMP_221

Name: TMP_221 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
TMP_222(uint256) = TMP_221 (c)/ 4
[i]Type for TMP_222

Name: TMP_222 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: price/exchange rate
dP_1(uint256) := TMP_222(uint256)
Finance type key: (40, -1)
[i]Type for dP

Name: dP Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: price/exchange rate
prevD_1(uint256) := D_2(uint256)
Finance type key: (40, -1)
[i]Type for prevD

Name: prevD Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
computed_2(uint256) := D_3(uint256)
Finance type key: (40, -1)
[i]Type for computed

Name: computed Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
TMP_223(uint256) = N_A_2 (c)* s_1
[i]Type for TMP_223

Name: TMP_223 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_224(uint256) = TMP_223 (c)/ A_PRECISION_1
[i]Type for TMP_224

Name: TMP_224 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_225(uint256) = 2 (c)* dP_1
[i]Type for TMP_225

Name: TMP_225 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: price/exchange rate
TMP_226(uint256) = TMP_224 (c)+ TMP_225
[i]Type for TMP_226

Name: TMP_226 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: price/exchange rate
TMP_227(uint256) = TMP_226 (c)* D_2
Finance type key: (40, 40)
[i]Type for TMP_227

Name: TMP_227 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_228(uint256) = N_A_2 (c)/ A_PRECISION_1
[i]Type for TMP_228

Name: TMP_228 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_229(uint256) = TMP_228 (c)- 1
[i]Type for TMP_229

Name: TMP_229 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
TMP_230(uint256) = TMP_229 (c)* D_2
[i]Type for TMP_230

Name: TMP_230 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: price/exchange rate
TMP_231(uint256) = 3 (c)* dP_1
[i]Type for TMP_231

Name: TMP_231 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 12
Fields: 
Finance Type: price/exchange rate
TMP_232(uint256) = TMP_230 (c)+ TMP_231
Finance type key: (40, 40)
[i]Type for TMP_232

Name: TMP_232 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 13
Fields: 
Finance Type: price/exchange rate
TMP_233(uint256) = TMP_227 (c)/ TMP_232
[i]Type for TMP_233

Name: TMP_233 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
D_3(uint256) := TMP_233(uint256)
Finance type key: (40, -1)
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
TMP_234(bool) = LIBRARY_CALL, dest:MathUtils, function:MathUtils.within1(uint256,uint256), arguments:['D_3', 'prevD_1'] 
[i]Type for TMP_234

Name: TMP_234 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_235(uint256) := i_2(uint256)
Finance type key: (-1, -1)
[i]Type for TMP_235

Name: TMP_235 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_3(uint256) = i_2 (c)+ 1
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
[i]Type for TMP_200

Name: TMP_200 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
d_1(uint256) := TMP_200(uint256)
Finance type key: (-1, -1)
[i]Type for d

Name: d Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_201(uint256) = xpIn_3 (c)+ amountIn_4
[i]Type for TMP_201

Name: TMP_201 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
x_1(uint256) := TMP_201(uint256)
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
amountIn_3(uint256) = amountIn_1 (c)* token1PrecisionMultiplier_2
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_202(uint256) = INTERNAL_CALL, HybridPool._getY(uint256,uint256)(x_1,d_1)
x_1(uint256) := ϕ(['x_1'])
[i]Type for x

Name: x Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
D_1(uint256) := ϕ(['d_1'])
[i]Type for D

Name: D Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MAX_LOOP_LIMIT_2(uint256) := ϕ(['MAX_LOOP_LIMIT_0'])
[i]Type for MAX_LOOP_LIMIT

Name: MAX_LOOP_LIMIT Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
N_A_3(uint256) := ϕ(['N_A_0', 'N_A_1'])
[i]Type for N_A

Name: N_A Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
A_PRECISION_2(uint256) := ϕ(['A_PRECISION_0'])
[i]Type for A_PRECISION

Name: A_PRECISION Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_236(uint256) = D_1 (c)* D_1
[i]Type for TMP_236

Name: TMP_236 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_237(uint256) = x_1 (c)* 2
[i]Type for TMP_237

Name: TMP_237 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_238(uint256) = TMP_236 (c)/ TMP_237
[i]Type for TMP_238

Name: TMP_238 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
c_1(uint256) := TMP_238(uint256)
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_239(uint256) = c_1 (c)* D_1
[i]Type for TMP_239

Name: TMP_239 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_240(uint256) = N_A_3 (c)* 2
[i]Type for TMP_240

Name: TMP_240 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
TMP_241(uint256) = TMP_240 (c)/ A_PRECISION_2
[i]Type for TMP_241

Name: TMP_241 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
TMP_242(uint256) = TMP_239 (c)/ TMP_241
[i]Type for TMP_242

Name: TMP_242 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
c_2(uint256) := TMP_242(uint256)
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_243(uint256) = D_1 (c)* A_PRECISION_2
[i]Type for TMP_243

Name: TMP_243 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_244(uint256) = TMP_243 (c)/ N_A_3
[i]Type for TMP_244

Name: TMP_244 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_245(uint256) = x_1 (c)+ TMP_244
[i]Type for TMP_245

Name: TMP_245 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
b_1(uint256) := TMP_245(uint256)
Finance type key: (-1, -1)
[i]Type for b

Name: b Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
y_1(uint256) := D_1(uint256)
Finance type key: (-1, -1)
[i]Type for y

Name: y Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for i

Name: i Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
y_2(uint256) := ϕ(['y_1', 'y_3'])
[i]Type for y

Name: y Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
i_2(uint256) := ϕ(['i_1', 'i_3'])
[i]Type for i

Name: i Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_246(bool) = i_2 < MAX_LOOP_LIMIT_2
[i]Type for TMP_246

Name: TMP_246 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
yPrev_1(uint256) := y_2(uint256)
Finance type key: (40, -1)
[i]Type for yPrev

Name: yPrev Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
TMP_247(uint256) = y_2 (c)* y_2
Finance type key: (40, 40)
[i]Type for TMP_247

Name: TMP_247 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_248(uint256) = TMP_247 (c)+ c_2
[i]Type for TMP_248

Name: TMP_248 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_249(uint256) = y_2 (c)* 2
[i]Type for TMP_249

Name: TMP_249 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: price/exchange rate
TMP_250(uint256) = TMP_249 (c)+ b_1
[i]Type for TMP_250

Name: TMP_250 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: price/exchange rate
TMP_251(uint256) = TMP_250 (c)- D_1
[i]Type for TMP_251

Name: TMP_251 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: price/exchange rate
TMP_252(uint256) = TMP_248 (c)/ TMP_251
[i]Type for TMP_252

Name: TMP_252 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
y_3(uint256) := TMP_252(uint256)
Finance type key: (40, -1)
[i]Type for y

Name: y Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
TMP_253(bool) = LIBRARY_CALL, dest:MathUtils, function:MathUtils.within1(uint256,uint256), arguments:['y_3', 'yPrev_1'] 
[i]Type for TMP_253

Name: TMP_253 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_254(uint256) := i_2(uint256)
Finance type key: (-1, -1)
[i]Type for TMP_254

Name: TMP_254 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_3(uint256) = i_2 (c)+ 1
[i]Type for i

Name: i Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
x_1(uint256) := ϕ(['x_1'])
[i]Type for x

Name: x Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
D_1(uint256) := ϕ(['d_1'])
[i]Type for D

Name: D Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MAX_LOOP_LIMIT_2(uint256) := ϕ(['MAX_LOOP_LIMIT_0'])
[i]Type for MAX_LOOP_LIMIT

Name: MAX_LOOP_LIMIT Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
N_A_3(uint256) := ϕ(['N_A_0', 'N_A_1'])
[i]Type for N_A

Name: N_A Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
A_PRECISION_2(uint256) := ϕ(['A_PRECISION_0'])
[i]Type for A_PRECISION

Name: A_PRECISION Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_236(uint256) = D_1 (c)* D_1
[i]Type for TMP_236

Name: TMP_236 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_237(uint256) = x_1 (c)* 2
[i]Type for TMP_237

Name: TMP_237 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_238(uint256) = TMP_236 (c)/ TMP_237
[i]Type for TMP_238

Name: TMP_238 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
c_1(uint256) := TMP_238(uint256)
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_239(uint256) = c_1 (c)* D_1
[i]Type for TMP_239

Name: TMP_239 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_240(uint256) = N_A_3 (c)* 2
[i]Type for TMP_240

Name: TMP_240 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
TMP_241(uint256) = TMP_240 (c)/ A_PRECISION_2
[i]Type for TMP_241

Name: TMP_241 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
TMP_242(uint256) = TMP_239 (c)/ TMP_241
[i]Type for TMP_242

Name: TMP_242 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
c_2(uint256) := TMP_242(uint256)
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_243(uint256) = D_1 (c)* A_PRECISION_2
[i]Type for TMP_243

Name: TMP_243 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_244(uint256) = TMP_243 (c)/ N_A_3
[i]Type for TMP_244

Name: TMP_244 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_245(uint256) = x_1 (c)+ TMP_244
[i]Type for TMP_245

Name: TMP_245 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
b_1(uint256) := TMP_245(uint256)
Finance type key: (-1, -1)
[i]Type for b

Name: b Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
y_1(uint256) := D_1(uint256)
Finance type key: (-1, -1)
[i]Type for y

Name: y Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for i

Name: i Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
y_2(uint256) := ϕ(['y_1', 'y_3'])
[i]Type for y

Name: y Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
i_2(uint256) := ϕ(['i_1', 'i_3'])
[i]Type for i

Name: i Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_246(bool) = i_2 < MAX_LOOP_LIMIT_2
[i]Type for TMP_246

Name: TMP_246 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
yPrev_1(uint256) := y_2(uint256)
Finance type key: (40, -1)
[i]Type for yPrev

Name: yPrev Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
TMP_247(uint256) = y_2 (c)* y_2
Finance type key: (40, 40)
[i]Type for TMP_247

Name: TMP_247 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_248(uint256) = TMP_247 (c)+ c_2
[i]Type for TMP_248

Name: TMP_248 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_249(uint256) = y_2 (c)* 2
[i]Type for TMP_249

Name: TMP_249 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: price/exchange rate
TMP_250(uint256) = TMP_249 (c)+ b_1
[i]Type for TMP_250

Name: TMP_250 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: price/exchange rate
TMP_251(uint256) = TMP_250 (c)- D_1
[i]Type for TMP_251

Name: TMP_251 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: price/exchange rate
TMP_252(uint256) = TMP_248 (c)/ TMP_251
[i]Type for TMP_252

Name: TMP_252 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
y_3(uint256) := TMP_252(uint256)
Finance type key: (40, -1)
[i]Type for y

Name: y Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
TMP_253(bool) = LIBRARY_CALL, dest:MathUtils, function:MathUtils.within1(uint256,uint256), arguments:['y_3', 'yPrev_1'] 
[i]Type for TMP_253

Name: TMP_253 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_254(uint256) := i_2(uint256)
Finance type key: (-1, -1)
[i]Type for TMP_254

Name: TMP_254 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_3(uint256) = i_2 (c)+ 1
[i]Type for i

Name: i Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
[i]Type for TMP_202

Name: TMP_202 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
y_1(uint256) := TMP_202(uint256)
Finance type key: (-1, -1)
[i]Type for y

Name: y Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_203(uint256) = xpOut_3 (c)- y_1
[i]Type for TMP_203

Name: TMP_203 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_204(uint256) = TMP_203 (c)- 1
[i]Type for TMP_204

Name: TMP_204 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
dy_1(uint256) := TMP_204(uint256)
Finance type key: (-1, -1)
[i]Type for dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
dy_2(uint256) = dy_1 (c)/ token1PrecisionMultiplier_4
[i]Type for dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
dy_3(uint256) = dy_1 (c)/ token0PrecisionMultiplier_4
[i]Type for dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
[i]Type for TMP_131

Name: TMP_131 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
amountOut_2(uint256) := TMP_131(uint256)
Finance type key: (-1, -1)
[i]Type for amountOut

Name: amountOut Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
amountOut_3(uint256) := ϕ(['amountOut_2', 'amountOut_1'])
[i]Type for amountOut

Name: amountOut Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
amountIn_3(uint256) := ϕ(['amountIn_1', 'amountIn_2'])
[i]Type for amountIn

Name: amountIn Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tokenOut_3(address) := ϕ(['tokenOut_1', 'tokenOut_2'])
[i]Type for tokenOut

Name: tokenOut Function: swap
Num: 
Den: 
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
INTERNAL_CALL, HybridPool._transfer(address,uint256,address,bool)(tokenOut_3,amountOut_3,recipient_1,unwrapBento_1)
token_1(address) := ϕ(['tokenOut_3', 'token1_17', 'token1_6', 'token0_5', 'tokenIn_1', 'token0_21', 'tokenIn_1', 'tokenOut_1'])
[i]Type for token

Name: token Function: _transfer
Num: 
Den: 
Address: -996
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['_barFee_1', 'amount0_1', 'amountOut_3', 'fee_3', 'amountOut_1', 'amount1_2', 'amount0_3', 'amount1_1'])
[i]Type for amount

Name: amount Function: _transfer
Num: 
Den: 
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
to_1(address) := ϕ(['recipient_1', 'recipient_1', 'barFeeTo_16', 'barFeeTo_14', 'to_1', 'recipient_1'])
[i]Type for to

Name: to Function: _transfer
Num: 
Den: 
Address: -991
Norm: u
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
unwrapBento_1(bool) := ϕ(['unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1'])
[i]Type for unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_6(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_74 (->None) := 4052550604(uint256)
Finance type key: (-1, -1)
[i]Type for REF_74

Name: REF_74 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4052550604
Fields: 
Finance Type: undef
TMP_208 = CONVERT this to address
[i]Type for TMP_208

Name: TMP_208 Function: _transfer
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_209(uint256) = INTERNAL_CALL, HybridPool._toShare(address,uint256)(token_1,amount_1)
token_1(address) := ϕ(['token1_21', 'token1_8', 'token0_18', 'token0_7', 'token_1'])
[i]Type for token

Name: token Function: _toShare
Num: 
Den: 
Address: -996
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['amount1_1', 'amount0_1', 'amount0_1', 'amount_1', 'amount1_1'])
[i]Type for input

Name: input Function: _toShare
Num: 
Den: 
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
bento_4(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_5(address) := ϕ(['bento_4', 'bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
output_1(uint256) := TMP_195(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token1_21', 'token1_8', 'token0_18', 'token0_7', 'token_1'])
[i]Type for token

Name: token Function: _toShare
Num: 
Den: 
Address: -996
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['amount1_1', 'amount0_1', 'amount0_1', 'amount_1', 'amount1_1'])
[i]Type for input

Name: input Function: _toShare
Num: 
Den: 
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
bento_4(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_5(address) := ϕ(['bento_4', 'bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
output_1(uint256) := TMP_195(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_209

Name: TMP_209 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_7(address) := ϕ(['bento_5'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
TMP_210(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_74,token_1,TMP_208,to_1,TMP_209)
[i]Type for TMP_210

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_24(bool,bytes) = LOW_LEVEL_CALL, dest:bento_7, function:call, arguments:['TMP_210']  
[i]Type for TUPLE_24

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_8(address) := ϕ(['bento_5', 'bento_7', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
success_1(bool)= UNPACK TUPLE_24 index: 0 
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_70 (->None) := 2547674416(uint256)
Finance type key: (-1, -1)
[i]Type for REF_70

Name: REF_70 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2547674416
Fields: 
Finance Type: undef
TMP_205 = CONVERT this to address
[i]Type for TMP_205

Name: TMP_205 Function: _transfer
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_206(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_70,token_1,TMP_205,to_1,amount_1,0)
[i]Type for TMP_206

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_23(bool,bytes) = LOW_LEVEL_CALL, dest:bento_6, function:call, arguments:['TMP_206']  
[i]Type for TUPLE_23

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_9(address) := ϕ(['bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
success_2(bool)= UNPACK TUPLE_23 index: 0 
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_211(None) = SOLIDITY_CALL require(bool,string)(success_scope_0_0,TRANSFER_FAILED)
[i]Type for TMP_211

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_207(None) = SOLIDITY_CALL require(bool,string)(success_2,WITHDRAW_FAILED)
[i]Type for TMP_207

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['tokenOut_3', 'token1_17', 'token1_6', 'token0_5', 'tokenIn_1', 'token0_21', 'tokenIn_1', 'tokenOut_1'])
[i]Type for token

Name: token Function: _transfer
Num: 
Den: 
Address: -996
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['_barFee_1', 'amount0_1', 'amountOut_3', 'fee_3', 'amountOut_1', 'amount1_2', 'amount0_3', 'amount1_1'])
[i]Type for amount

Name: amount Function: _transfer
Num: 
Den: 
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
to_1(address) := ϕ(['recipient_1', 'recipient_1', 'barFeeTo_16', 'barFeeTo_14', 'to_1', 'recipient_1'])
[i]Type for to

Name: to Function: _transfer
Num: 
Den: 
Address: -991
Norm: u
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
unwrapBento_1(bool) := ϕ(['unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1'])
[i]Type for unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_6(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_74 (->None) := 4052550604(uint256)
Finance type key: (-1, -1)
[i]Type for REF_74

Name: REF_74 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4052550604
Fields: 
Finance Type: undef
TMP_208 = CONVERT this to address
[i]Type for TMP_208

Name: TMP_208 Function: _transfer
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_209(uint256) = INTERNAL_CALL, HybridPool._toShare(address,uint256)(token_1,amount_1)
token_1(address) := ϕ(['token1_21', 'token1_8', 'token0_18', 'token0_7', 'token_1'])
[i]Type for token

Name: token Function: _toShare
Num: 
Den: 
Address: -996
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['amount1_1', 'amount0_1', 'amount0_1', 'amount_1', 'amount1_1'])
[i]Type for input

Name: input Function: _toShare
Num: 
Den: 
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
bento_4(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_5(address) := ϕ(['bento_4', 'bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
output_1(uint256) := TMP_195(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token1_21', 'token1_8', 'token0_18', 'token0_7', 'token_1'])
[i]Type for token

Name: token Function: _toShare
Num: 
Den: 
Address: -996
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['amount1_1', 'amount0_1', 'amount0_1', 'amount_1', 'amount1_1'])
[i]Type for input

Name: input Function: _toShare
Num: 
Den: 
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
bento_4(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_5(address) := ϕ(['bento_4', 'bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
output_1(uint256) := TMP_195(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_209

Name: TMP_209 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_7(address) := ϕ(['bento_5'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
TMP_210(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_74,token_1,TMP_208,to_1,TMP_209)
[i]Type for TMP_210

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_24(bool,bytes) = LOW_LEVEL_CALL, dest:bento_7, function:call, arguments:['TMP_210']  
[i]Type for TUPLE_24

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_8(address) := ϕ(['bento_5', 'bento_7', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
success_1(bool)= UNPACK TUPLE_24 index: 0 
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_70 (->None) := 2547674416(uint256)
Finance type key: (-1, -1)
[i]Type for REF_70

Name: REF_70 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2547674416
Fields: 
Finance Type: undef
TMP_205 = CONVERT this to address
[i]Type for TMP_205

Name: TMP_205 Function: _transfer
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_206(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_70,token_1,TMP_205,to_1,amount_1,0)
[i]Type for TMP_206

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_23(bool,bytes) = LOW_LEVEL_CALL, dest:bento_6, function:call, arguments:['TMP_206']  
[i]Type for TUPLE_23

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_9(address) := ϕ(['bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
success_2(bool)= UNPACK TUPLE_23 index: 0 
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_211(None) = SOLIDITY_CALL require(bool,string)(success_scope_0_0,TRANSFER_FAILED)
[i]Type for TMP_211

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_207(None) = SOLIDITY_CALL require(bool,string)(success_2,WITHDRAW_FAILED)
[i]Type for TMP_207

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
INTERNAL_CALL, HybridPool._updateReserves()()
token0_23(address) := ϕ(['token0_10', 'token0_26', 'token0_0', 'token0_19', 'token0_42', 'token0_39', 'token0_32', 'token0_1', 'token0_46', 'token0_22', 'token0_37'])
[i]Type for token0

Name: token0 Function: swap
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
token1_23(address) := ϕ(['token1_1', 'token1_22', 'token1_34', 'token1_37', 'token1_10', 'token1_40', 'token1_0', 'token1_26', 'token1_45', 'token1_18'])
[i]Type for token1

Name: token1 Function: swap
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
MODIFIER_CALL, HybridPool.lock()()
TUPLE_14(address,address,bool) = SOLIDITY_CALL abi.decode()(data_1(address,address,bool))
[i]Type for TUPLE_14

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tokenIn_1(address)= UNPACK TUPLE_14 index: 0 
[i]Type for tokenIn

Name: tokenIn Function: swap
Num: 
Den: 
Address: -996
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
recipient_1(address)= UNPACK TUPLE_14 index: 1 
[i]Type for recipient

Name: recipient Function: swap
Num: 
Den: 
Address: -991
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
unwrapBento_1(bool)= UNPACK TUPLE_14 index: 2 
[i]Type for unwrapBento

Name: unwrapBento Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_15(uint256,uint256) = INTERNAL_CALL, HybridPool._getReserves()()
[i]Type for TUPLE_15

Name: TUPLE_15 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token0_25(address) := ϕ(['token0_39'])
[i]Type for token0

Name: token0 Function: swap
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
token1_25(address) := ϕ(['token1_40'])
[i]Type for token1

Name: token1 Function: swap
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
_reserve0_1(uint256)= UNPACK TUPLE_15 index: 0 
[i]Type for _reserve0

Name: _reserve0 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
_reserve1_1(uint256)= UNPACK TUPLE_15 index: 1 
[i]Type for _reserve1

Name: _reserve1 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
TUPLE_16(uint256,uint256) = INTERNAL_CALL, HybridPool._balance()()
[i]Type for TUPLE_16

Name: TUPLE_16 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token0_26(address) := ϕ(['token0_42'])
[i]Type for token0

Name: token0 Function: swap
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
token1_26(address) := ϕ(['token1_45'])
[i]Type for token1

Name: token1 Function: swap
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
balance0_1(uint256)= UNPACK TUPLE_16 index: 0 
[i]Type for balance0

Name: balance0 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
balance1_1(uint256)= UNPACK TUPLE_16 index: 1 
[i]Type for balance1

Name: balance1 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
TMP_121(bool) = tokenIn_1 == token0_26
[i]Type for TMP_121

Name: TMP_121 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tokenOut_1(address) := token1_26(address)
Finance type key: (-1, -1)
[i]Type for tokenOut

Name: tokenOut Function: swap
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
TMP_122(uint256) = balance0_1 (c)- _reserve0_1
[i]Type for TMP_122

Name: TMP_122 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
amountIn_1(uint256) := TMP_122(uint256)
Finance type key: (-1, -1)
[i]Type for amountIn

Name: amountIn Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_126(bool) = tokenIn_1 == token1_26
[i]Type for TMP_126

Name: TMP_126 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_127(None) = SOLIDITY_CALL require(bool,string)(TMP_126,INVALID_INPUT_TOKEN)
[i]Type for TMP_127

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tokenOut_2(address) := token0_26(address)
Finance type key: (-1, -1)
[i]Type for tokenOut

Name: tokenOut Function: swap
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
TMP_123(uint256) = INTERNAL_CALL, HybridPool._handleFee(address,uint256)(tokenIn_1,amountIn_1)
tokenIn_1(address) := ϕ(['token0_15', 'token1_15', 'tokenIn_1'])
[i]Type for tokenIn

Name: tokenIn Function: _handleFee
Num: 
Den: 
Address: -996
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
amountIn_1(uint256) := ϕ(['amountIn_1', 'amount1_1', 'amount0_1', 'amountIn_2'])
[i]Type for amountIn

Name: amountIn Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MAX_FEE_7(uint256) := ϕ(['MAX_FEE_5', 'MAX_FEE_0', 'MAX_FEE_6', 'MAX_FEE_11'])
[i]Type for MAX_FEE

Name: MAX_FEE Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
swapFee_7(uint256) := ϕ(['swapFee_0', 'swapFee_5', 'swapFee_1', 'swapFee_11', 'swapFee_6'])
[i]Type for swapFee

Name: swapFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: simple fee ratio
barFeeTo_16(address) := ϕ(['barFeeTo_0', 'barFeeTo_15', 'barFeeTo_1', 'barFeeTo_17'])
[i]Type for barFeeTo

Name: barFeeTo Function: _handleFee
Num: -1
Den: -1
Address: 7
Norm: u
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
barFee_3(uint256) := ϕ(['barFee_2', 'barFee_0', 'barFee_1'])
[i]Type for barFee

Name: barFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_274(uint256) = amountIn_1 (c)* swapFee_7
[i]Type for TMP_274

Name: TMP_274 Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
TMP_275(uint256) = TMP_274 (c)/ MAX_FEE_7
[i]Type for TMP_275

Name: TMP_275 Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
fee_1(uint256) := TMP_275(uint256)
Finance type key: (12, -1)
[i]Type for fee

Name: fee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
TMP_276(uint256) = fee_1 (c)* barFee_3
[i]Type for TMP_276

Name: TMP_276 Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
TMP_277(uint256) = TMP_276 (c)/ MAX_FEE_7
[i]Type for TMP_277

Name: TMP_277 Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
_barFee_1(uint256) := TMP_277(uint256)
Finance type key: (12, -1)
[i]Type for _barFee

Name: _barFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
INTERNAL_CALL, HybridPool._transfer(address,uint256,address,bool)(tokenIn_1,_barFee_1,barFeeTo_16,False)
token_1(address) := ϕ(['tokenOut_3', 'token1_17', 'token1_6', 'token0_5', 'tokenIn_1', 'token0_21', 'tokenIn_1', 'tokenOut_1'])
[i]Type for token

Name: token Function: _transfer
Num: 
Den: 
Address: -996
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['_barFee_1', 'amount0_1', 'amountOut_3', 'fee_3', 'amountOut_1', 'amount1_2', 'amount0_3', 'amount1_1'])
[i]Type for amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
to_1(address) := ϕ(['recipient_1', 'recipient_1', 'barFeeTo_16', 'barFeeTo_14', 'to_1', 'recipient_1'])
[i]Type for to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 7
Norm: u
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
unwrapBento_1(bool) := ϕ(['unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1'])
[i]Type for unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_6(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_74 (->None) := 4052550604(uint256)
Finance type key: (-1, -1)
[i]Type for REF_74

Name: REF_74 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4052550604
Fields: 
Finance Type: undef
TMP_208 = CONVERT this to address
[i]Type for TMP_208

Name: TMP_208 Function: _transfer
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_209(uint256) = INTERNAL_CALL, HybridPool._toShare(address,uint256)(token_1,amount_1)
token_1(address) := ϕ(['token1_21', 'token1_8', 'token0_18', 'token0_7', 'token_1'])
[i]Type for token

Name: token Function: _toShare
Num: 
Den: 
Address: -996
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['amount1_1', 'amount0_1', 'amount0_1', 'amount_1', 'amount1_1'])
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
bento_4(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_5(address) := ϕ(['bento_4', 'bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
output_1(uint256) := TMP_195(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token1_21', 'token1_8', 'token0_18', 'token0_7', 'token_1'])
[i]Type for token

Name: token Function: _toShare
Num: 
Den: 
Address: -996
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['amount1_1', 'amount0_1', 'amount0_1', 'amount_1', 'amount1_1'])
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
bento_4(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_5(address) := ϕ(['bento_4', 'bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
output_1(uint256) := TMP_195(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_209

Name: TMP_209 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_7(address) := ϕ(['bento_5'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
TMP_210(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_74,token_1,TMP_208,to_1,TMP_209)
[i]Type for TMP_210

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_24(bool,bytes) = LOW_LEVEL_CALL, dest:bento_7, function:call, arguments:['TMP_210']  
[i]Type for TUPLE_24

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_8(address) := ϕ(['bento_5', 'bento_7', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
success_1(bool)= UNPACK TUPLE_24 index: 0 
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_70 (->None) := 2547674416(uint256)
Finance type key: (-1, -1)
[i]Type for REF_70

Name: REF_70 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2547674416
Fields: 
Finance Type: undef
TMP_205 = CONVERT this to address
[i]Type for TMP_205

Name: TMP_205 Function: _transfer
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_206(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_70,token_1,TMP_205,to_1,amount_1,0)
[i]Type for TMP_206

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_23(bool,bytes) = LOW_LEVEL_CALL, dest:bento_6, function:call, arguments:['TMP_206']  
[i]Type for TUPLE_23

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_9(address) := ϕ(['bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
success_2(bool)= UNPACK TUPLE_23 index: 0 
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_211(None) = SOLIDITY_CALL require(bool,string)(success_scope_0_0,TRANSFER_FAILED)
[i]Type for TMP_211

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_207(None) = SOLIDITY_CALL require(bool,string)(success_2,WITHDRAW_FAILED)
[i]Type for TMP_207

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['tokenOut_3', 'token1_17', 'token1_6', 'token0_5', 'tokenIn_1', 'token0_21', 'tokenIn_1', 'tokenOut_1'])
[i]Type for token

Name: token Function: _transfer
Num: 
Den: 
Address: -996
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['_barFee_1', 'amount0_1', 'amountOut_3', 'fee_3', 'amountOut_1', 'amount1_2', 'amount0_3', 'amount1_1'])
[i]Type for amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
to_1(address) := ϕ(['recipient_1', 'recipient_1', 'barFeeTo_16', 'barFeeTo_14', 'to_1', 'recipient_1'])
[i]Type for to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 7
Norm: u
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
unwrapBento_1(bool) := ϕ(['unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1'])
[i]Type for unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_6(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_74 (->None) := 4052550604(uint256)
Finance type key: (-1, -1)
[i]Type for REF_74

Name: REF_74 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4052550604
Fields: 
Finance Type: undef
TMP_208 = CONVERT this to address
[i]Type for TMP_208

Name: TMP_208 Function: _transfer
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_209(uint256) = INTERNAL_CALL, HybridPool._toShare(address,uint256)(token_1,amount_1)
token_1(address) := ϕ(['token1_21', 'token1_8', 'token0_18', 'token0_7', 'token_1'])
[i]Type for token

Name: token Function: _toShare
Num: 
Den: 
Address: -996
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['amount1_1', 'amount0_1', 'amount0_1', 'amount_1', 'amount1_1'])
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
bento_4(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_5(address) := ϕ(['bento_4', 'bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
output_1(uint256) := TMP_195(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token1_21', 'token1_8', 'token0_18', 'token0_7', 'token_1'])
[i]Type for token

Name: token Function: _toShare
Num: 
Den: 
Address: -996
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['amount1_1', 'amount0_1', 'amount0_1', 'amount_1', 'amount1_1'])
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
bento_4(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_5(address) := ϕ(['bento_4', 'bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
output_1(uint256) := TMP_195(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_209

Name: TMP_209 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_7(address) := ϕ(['bento_5'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
TMP_210(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_74,token_1,TMP_208,to_1,TMP_209)
[i]Type for TMP_210

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_24(bool,bytes) = LOW_LEVEL_CALL, dest:bento_7, function:call, arguments:['TMP_210']  
[i]Type for TUPLE_24

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_8(address) := ϕ(['bento_5', 'bento_7', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
success_1(bool)= UNPACK TUPLE_24 index: 0 
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_70 (->None) := 2547674416(uint256)
Finance type key: (-1, -1)
[i]Type for REF_70

Name: REF_70 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2547674416
Fields: 
Finance Type: undef
TMP_205 = CONVERT this to address
[i]Type for TMP_205

Name: TMP_205 Function: _transfer
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_206(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_70,token_1,TMP_205,to_1,amount_1,0)
[i]Type for TMP_206

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_23(bool,bytes) = LOW_LEVEL_CALL, dest:bento_6, function:call, arguments:['TMP_206']  
[i]Type for TUPLE_23

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_9(address) := ϕ(['bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
success_2(bool)= UNPACK TUPLE_23 index: 0 
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_211(None) = SOLIDITY_CALL require(bool,string)(success_scope_0_0,TRANSFER_FAILED)
[i]Type for TMP_211

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_207(None) = SOLIDITY_CALL require(bool,string)(success_2,WITHDRAW_FAILED)
[i]Type for TMP_207

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tokenIn_1(address) := ϕ(['token0_15', 'token1_15', 'tokenIn_1'])
[i]Type for tokenIn

Name: tokenIn Function: _handleFee
Num: 
Den: 
Address: -996
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
amountIn_1(uint256) := ϕ(['amountIn_1', 'amount1_1', 'amount0_1', 'amountIn_2'])
[i]Type for amountIn

Name: amountIn Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MAX_FEE_7(uint256) := ϕ(['MAX_FEE_5', 'MAX_FEE_0', 'MAX_FEE_6', 'MAX_FEE_11'])
[i]Type for MAX_FEE

Name: MAX_FEE Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
swapFee_7(uint256) := ϕ(['swapFee_0', 'swapFee_5', 'swapFee_1', 'swapFee_11', 'swapFee_6'])
[i]Type for swapFee

Name: swapFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: simple fee ratio
barFeeTo_16(address) := ϕ(['barFeeTo_0', 'barFeeTo_15', 'barFeeTo_1', 'barFeeTo_17'])
[i]Type for barFeeTo

Name: barFeeTo Function: _handleFee
Num: -1
Den: -1
Address: 7
Norm: u
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
barFee_3(uint256) := ϕ(['barFee_2', 'barFee_0', 'barFee_1'])
[i]Type for barFee

Name: barFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_274(uint256) = amountIn_1 (c)* swapFee_7
[i]Type for TMP_274

Name: TMP_274 Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
TMP_275(uint256) = TMP_274 (c)/ MAX_FEE_7
[i]Type for TMP_275

Name: TMP_275 Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
fee_1(uint256) := TMP_275(uint256)
Finance type key: (12, -1)
[i]Type for fee

Name: fee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
TMP_276(uint256) = fee_1 (c)* barFee_3
[i]Type for TMP_276

Name: TMP_276 Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
TMP_277(uint256) = TMP_276 (c)/ MAX_FEE_7
[i]Type for TMP_277

Name: TMP_277 Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
_barFee_1(uint256) := TMP_277(uint256)
Finance type key: (12, -1)
[i]Type for _barFee

Name: _barFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
INTERNAL_CALL, HybridPool._transfer(address,uint256,address,bool)(tokenIn_1,_barFee_1,barFeeTo_16,False)
token_1(address) := ϕ(['tokenOut_3', 'token1_17', 'token1_6', 'token0_5', 'tokenIn_1', 'token0_21', 'tokenIn_1', 'tokenOut_1'])
[i]Type for token

Name: token Function: _transfer
Num: 
Den: 
Address: -996
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['_barFee_1', 'amount0_1', 'amountOut_3', 'fee_3', 'amountOut_1', 'amount1_2', 'amount0_3', 'amount1_1'])
[i]Type for amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
to_1(address) := ϕ(['recipient_1', 'recipient_1', 'barFeeTo_16', 'barFeeTo_14', 'to_1', 'recipient_1'])
[i]Type for to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 7
Norm: u
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
unwrapBento_1(bool) := ϕ(['unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1'])
[i]Type for unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_6(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_74 (->None) := 4052550604(uint256)
Finance type key: (-1, -1)
[i]Type for REF_74

Name: REF_74 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4052550604
Fields: 
Finance Type: undef
TMP_208 = CONVERT this to address
[i]Type for TMP_208

Name: TMP_208 Function: _transfer
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_209(uint256) = INTERNAL_CALL, HybridPool._toShare(address,uint256)(token_1,amount_1)
token_1(address) := ϕ(['token1_21', 'token1_8', 'token0_18', 'token0_7', 'token_1'])
[i]Type for token

Name: token Function: _toShare
Num: 
Den: 
Address: -996
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['amount1_1', 'amount0_1', 'amount0_1', 'amount_1', 'amount1_1'])
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
bento_4(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_5(address) := ϕ(['bento_4', 'bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
output_1(uint256) := TMP_195(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token1_21', 'token1_8', 'token0_18', 'token0_7', 'token_1'])
[i]Type for token

Name: token Function: _toShare
Num: 
Den: 
Address: -996
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['amount1_1', 'amount0_1', 'amount0_1', 'amount_1', 'amount1_1'])
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
bento_4(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_5(address) := ϕ(['bento_4', 'bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
output_1(uint256) := TMP_195(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_209

Name: TMP_209 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_7(address) := ϕ(['bento_5'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
TMP_210(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_74,token_1,TMP_208,to_1,TMP_209)
[i]Type for TMP_210

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_24(bool,bytes) = LOW_LEVEL_CALL, dest:bento_7, function:call, arguments:['TMP_210']  
[i]Type for TUPLE_24

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_8(address) := ϕ(['bento_5', 'bento_7', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
success_1(bool)= UNPACK TUPLE_24 index: 0 
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_70 (->None) := 2547674416(uint256)
Finance type key: (-1, -1)
[i]Type for REF_70

Name: REF_70 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2547674416
Fields: 
Finance Type: undef
TMP_205 = CONVERT this to address
[i]Type for TMP_205

Name: TMP_205 Function: _transfer
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_206(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_70,token_1,TMP_205,to_1,amount_1,0)
[i]Type for TMP_206

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_23(bool,bytes) = LOW_LEVEL_CALL, dest:bento_6, function:call, arguments:['TMP_206']  
[i]Type for TUPLE_23

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_9(address) := ϕ(['bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
success_2(bool)= UNPACK TUPLE_23 index: 0 
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_211(None) = SOLIDITY_CALL require(bool,string)(success_scope_0_0,TRANSFER_FAILED)
[i]Type for TMP_211

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_207(None) = SOLIDITY_CALL require(bool,string)(success_2,WITHDRAW_FAILED)
[i]Type for TMP_207

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['tokenOut_3', 'token1_17', 'token1_6', 'token0_5', 'tokenIn_1', 'token0_21', 'tokenIn_1', 'tokenOut_1'])
[i]Type for token

Name: token Function: _transfer
Num: 
Den: 
Address: -996
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['_barFee_1', 'amount0_1', 'amountOut_3', 'fee_3', 'amountOut_1', 'amount1_2', 'amount0_3', 'amount1_1'])
[i]Type for amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
to_1(address) := ϕ(['recipient_1', 'recipient_1', 'barFeeTo_16', 'barFeeTo_14', 'to_1', 'recipient_1'])
[i]Type for to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 7
Norm: u
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
unwrapBento_1(bool) := ϕ(['unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1'])
[i]Type for unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_6(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_74 (->None) := 4052550604(uint256)
Finance type key: (-1, -1)
[i]Type for REF_74

Name: REF_74 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4052550604
Fields: 
Finance Type: undef
TMP_208 = CONVERT this to address
[i]Type for TMP_208

Name: TMP_208 Function: _transfer
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_209(uint256) = INTERNAL_CALL, HybridPool._toShare(address,uint256)(token_1,amount_1)
token_1(address) := ϕ(['token1_21', 'token1_8', 'token0_18', 'token0_7', 'token_1'])
[i]Type for token

Name: token Function: _toShare
Num: 
Den: 
Address: -996
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['amount1_1', 'amount0_1', 'amount0_1', 'amount_1', 'amount1_1'])
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
bento_4(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_5(address) := ϕ(['bento_4', 'bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
output_1(uint256) := TMP_195(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token1_21', 'token1_8', 'token0_18', 'token0_7', 'token_1'])
[i]Type for token

Name: token Function: _toShare
Num: 
Den: 
Address: -996
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['amount1_1', 'amount0_1', 'amount0_1', 'amount_1', 'amount1_1'])
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
bento_4(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_5(address) := ϕ(['bento_4', 'bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
output_1(uint256) := TMP_195(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_209

Name: TMP_209 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_7(address) := ϕ(['bento_5'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
TMP_210(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_74,token_1,TMP_208,to_1,TMP_209)
[i]Type for TMP_210

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_24(bool,bytes) = LOW_LEVEL_CALL, dest:bento_7, function:call, arguments:['TMP_210']  
[i]Type for TUPLE_24

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_8(address) := ϕ(['bento_5', 'bento_7', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
success_1(bool)= UNPACK TUPLE_24 index: 0 
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_70 (->None) := 2547674416(uint256)
Finance type key: (-1, -1)
[i]Type for REF_70

Name: REF_70 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2547674416
Fields: 
Finance Type: undef
TMP_205 = CONVERT this to address
[i]Type for TMP_205

Name: TMP_205 Function: _transfer
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_206(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_70,token_1,TMP_205,to_1,amount_1,0)
[i]Type for TMP_206

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_23(bool,bytes) = LOW_LEVEL_CALL, dest:bento_6, function:call, arguments:['TMP_206']  
[i]Type for TUPLE_23

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_9(address) := ϕ(['bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
success_2(bool)= UNPACK TUPLE_23 index: 0 
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_211(None) = SOLIDITY_CALL require(bool,string)(success_scope_0_0,TRANSFER_FAILED)
[i]Type for TMP_211

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_207(None) = SOLIDITY_CALL require(bool,string)(success_2,WITHDRAW_FAILED)
[i]Type for TMP_207

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_123

Name: TMP_123 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
fee_1(uint256) := TMP_123(uint256)
Finance type key: (-1, -1)
[i]Type for fee

Name: fee Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_128(uint256) = balance1_1 (c)- _reserve1_1
[i]Type for TMP_128

Name: TMP_128 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
amountIn_2(uint256) := TMP_128(uint256)
Finance type key: (-1, -1)
[i]Type for amountIn

Name: amountIn Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_129(uint256) = INTERNAL_CALL, HybridPool._handleFee(address,uint256)(tokenIn_1,amountIn_2)
tokenIn_1(address) := ϕ(['token0_15', 'token1_15', 'tokenIn_1'])
[i]Type for tokenIn

Name: tokenIn Function: _handleFee
Num: 
Den: 
Address: -996
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
amountIn_1(uint256) := ϕ(['amountIn_1', 'amount1_1', 'amount0_1', 'amountIn_2'])
[i]Type for amountIn

Name: amountIn Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MAX_FEE_7(uint256) := ϕ(['MAX_FEE_5', 'MAX_FEE_0', 'MAX_FEE_6', 'MAX_FEE_11'])
[i]Type for MAX_FEE

Name: MAX_FEE Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
swapFee_7(uint256) := ϕ(['swapFee_0', 'swapFee_5', 'swapFee_1', 'swapFee_11', 'swapFee_6'])
[i]Type for swapFee

Name: swapFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: simple fee ratio
barFeeTo_16(address) := ϕ(['barFeeTo_0', 'barFeeTo_15', 'barFeeTo_1', 'barFeeTo_17'])
[i]Type for barFeeTo

Name: barFeeTo Function: _handleFee
Num: -1
Den: -1
Address: 7
Norm: u
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
barFee_3(uint256) := ϕ(['barFee_2', 'barFee_0', 'barFee_1'])
[i]Type for barFee

Name: barFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_274(uint256) = amountIn_1 (c)* swapFee_7
[i]Type for TMP_274

Name: TMP_274 Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
TMP_275(uint256) = TMP_274 (c)/ MAX_FEE_7
[i]Type for TMP_275

Name: TMP_275 Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
fee_1(uint256) := TMP_275(uint256)
Finance type key: (12, -1)
[i]Type for fee

Name: fee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
TMP_276(uint256) = fee_1 (c)* barFee_3
[i]Type for TMP_276

Name: TMP_276 Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
TMP_277(uint256) = TMP_276 (c)/ MAX_FEE_7
[i]Type for TMP_277

Name: TMP_277 Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
_barFee_1(uint256) := TMP_277(uint256)
Finance type key: (12, -1)
[i]Type for _barFee

Name: _barFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
INTERNAL_CALL, HybridPool._transfer(address,uint256,address,bool)(tokenIn_1,_barFee_1,barFeeTo_16,False)
token_1(address) := ϕ(['tokenOut_3', 'token1_17', 'token1_6', 'token0_5', 'tokenIn_1', 'token0_21', 'tokenIn_1', 'tokenOut_1'])
[i]Type for token

Name: token Function: _transfer
Num: 
Den: 
Address: -996
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['_barFee_1', 'amount0_1', 'amountOut_3', 'fee_3', 'amountOut_1', 'amount1_2', 'amount0_3', 'amount1_1'])
[i]Type for amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
to_1(address) := ϕ(['recipient_1', 'recipient_1', 'barFeeTo_16', 'barFeeTo_14', 'to_1', 'recipient_1'])
[i]Type for to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 7
Norm: u
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
unwrapBento_1(bool) := ϕ(['unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1'])
[i]Type for unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_6(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_74 (->None) := 4052550604(uint256)
Finance type key: (-1, -1)
[i]Type for REF_74

Name: REF_74 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4052550604
Fields: 
Finance Type: undef
TMP_208 = CONVERT this to address
[i]Type for TMP_208

Name: TMP_208 Function: _transfer
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_209(uint256) = INTERNAL_CALL, HybridPool._toShare(address,uint256)(token_1,amount_1)
token_1(address) := ϕ(['token1_21', 'token1_8', 'token0_18', 'token0_7', 'token_1'])
[i]Type for token

Name: token Function: _toShare
Num: 
Den: 
Address: -996
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['amount1_1', 'amount0_1', 'amount0_1', 'amount_1', 'amount1_1'])
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
bento_4(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_5(address) := ϕ(['bento_4', 'bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
output_1(uint256) := TMP_195(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token1_21', 'token1_8', 'token0_18', 'token0_7', 'token_1'])
[i]Type for token

Name: token Function: _toShare
Num: 
Den: 
Address: -996
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['amount1_1', 'amount0_1', 'amount0_1', 'amount_1', 'amount1_1'])
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
bento_4(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_5(address) := ϕ(['bento_4', 'bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
output_1(uint256) := TMP_195(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_209

Name: TMP_209 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_7(address) := ϕ(['bento_5'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
TMP_210(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_74,token_1,TMP_208,to_1,TMP_209)
[i]Type for TMP_210

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_24(bool,bytes) = LOW_LEVEL_CALL, dest:bento_7, function:call, arguments:['TMP_210']  
[i]Type for TUPLE_24

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_8(address) := ϕ(['bento_5', 'bento_7', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
success_1(bool)= UNPACK TUPLE_24 index: 0 
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_70 (->None) := 2547674416(uint256)
Finance type key: (-1, -1)
[i]Type for REF_70

Name: REF_70 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2547674416
Fields: 
Finance Type: undef
TMP_205 = CONVERT this to address
[i]Type for TMP_205

Name: TMP_205 Function: _transfer
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_206(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_70,token_1,TMP_205,to_1,amount_1,0)
[i]Type for TMP_206

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_23(bool,bytes) = LOW_LEVEL_CALL, dest:bento_6, function:call, arguments:['TMP_206']  
[i]Type for TUPLE_23

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_9(address) := ϕ(['bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
success_2(bool)= UNPACK TUPLE_23 index: 0 
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_211(None) = SOLIDITY_CALL require(bool,string)(success_scope_0_0,TRANSFER_FAILED)
[i]Type for TMP_211

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_207(None) = SOLIDITY_CALL require(bool,string)(success_2,WITHDRAW_FAILED)
[i]Type for TMP_207

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['tokenOut_3', 'token1_17', 'token1_6', 'token0_5', 'tokenIn_1', 'token0_21', 'tokenIn_1', 'tokenOut_1'])
[i]Type for token

Name: token Function: _transfer
Num: 
Den: 
Address: -996
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['_barFee_1', 'amount0_1', 'amountOut_3', 'fee_3', 'amountOut_1', 'amount1_2', 'amount0_3', 'amount1_1'])
[i]Type for amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
to_1(address) := ϕ(['recipient_1', 'recipient_1', 'barFeeTo_16', 'barFeeTo_14', 'to_1', 'recipient_1'])
[i]Type for to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 7
Norm: u
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
unwrapBento_1(bool) := ϕ(['unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1'])
[i]Type for unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_6(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_74 (->None) := 4052550604(uint256)
Finance type key: (-1, -1)
[i]Type for REF_74

Name: REF_74 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4052550604
Fields: 
Finance Type: undef
TMP_208 = CONVERT this to address
[i]Type for TMP_208

Name: TMP_208 Function: _transfer
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_209(uint256) = INTERNAL_CALL, HybridPool._toShare(address,uint256)(token_1,amount_1)
token_1(address) := ϕ(['token1_21', 'token1_8', 'token0_18', 'token0_7', 'token_1'])
[i]Type for token

Name: token Function: _toShare
Num: 
Den: 
Address: -996
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['amount1_1', 'amount0_1', 'amount0_1', 'amount_1', 'amount1_1'])
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
bento_4(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_5(address) := ϕ(['bento_4', 'bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
output_1(uint256) := TMP_195(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token1_21', 'token1_8', 'token0_18', 'token0_7', 'token_1'])
[i]Type for token

Name: token Function: _toShare
Num: 
Den: 
Address: -996
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['amount1_1', 'amount0_1', 'amount0_1', 'amount_1', 'amount1_1'])
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
bento_4(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_5(address) := ϕ(['bento_4', 'bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
output_1(uint256) := TMP_195(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_209

Name: TMP_209 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_7(address) := ϕ(['bento_5'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
TMP_210(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_74,token_1,TMP_208,to_1,TMP_209)
[i]Type for TMP_210

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_24(bool,bytes) = LOW_LEVEL_CALL, dest:bento_7, function:call, arguments:['TMP_210']  
[i]Type for TUPLE_24

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_8(address) := ϕ(['bento_5', 'bento_7', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
success_1(bool)= UNPACK TUPLE_24 index: 0 
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_70 (->None) := 2547674416(uint256)
Finance type key: (-1, -1)
[i]Type for REF_70

Name: REF_70 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2547674416
Fields: 
Finance Type: undef
TMP_205 = CONVERT this to address
[i]Type for TMP_205

Name: TMP_205 Function: _transfer
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_206(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_70,token_1,TMP_205,to_1,amount_1,0)
[i]Type for TMP_206

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_23(bool,bytes) = LOW_LEVEL_CALL, dest:bento_6, function:call, arguments:['TMP_206']  
[i]Type for TUPLE_23

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_9(address) := ϕ(['bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
success_2(bool)= UNPACK TUPLE_23 index: 0 
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_211(None) = SOLIDITY_CALL require(bool,string)(success_scope_0_0,TRANSFER_FAILED)
[i]Type for TMP_211

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_207(None) = SOLIDITY_CALL require(bool,string)(success_2,WITHDRAW_FAILED)
[i]Type for TMP_207

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tokenIn_1(address) := ϕ(['token0_15', 'token1_15', 'tokenIn_1'])
[i]Type for tokenIn

Name: tokenIn Function: _handleFee
Num: 
Den: 
Address: -996
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
amountIn_1(uint256) := ϕ(['amountIn_1', 'amount1_1', 'amount0_1', 'amountIn_2'])
[i]Type for amountIn

Name: amountIn Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MAX_FEE_7(uint256) := ϕ(['MAX_FEE_5', 'MAX_FEE_0', 'MAX_FEE_6', 'MAX_FEE_11'])
[i]Type for MAX_FEE

Name: MAX_FEE Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
swapFee_7(uint256) := ϕ(['swapFee_0', 'swapFee_5', 'swapFee_1', 'swapFee_11', 'swapFee_6'])
[i]Type for swapFee

Name: swapFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: simple fee ratio
barFeeTo_16(address) := ϕ(['barFeeTo_0', 'barFeeTo_15', 'barFeeTo_1', 'barFeeTo_17'])
[i]Type for barFeeTo

Name: barFeeTo Function: _handleFee
Num: -1
Den: -1
Address: 7
Norm: u
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
barFee_3(uint256) := ϕ(['barFee_2', 'barFee_0', 'barFee_1'])
[i]Type for barFee

Name: barFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_274(uint256) = amountIn_1 (c)* swapFee_7
[i]Type for TMP_274

Name: TMP_274 Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
TMP_275(uint256) = TMP_274 (c)/ MAX_FEE_7
[i]Type for TMP_275

Name: TMP_275 Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
fee_1(uint256) := TMP_275(uint256)
Finance type key: (12, -1)
[i]Type for fee

Name: fee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
TMP_276(uint256) = fee_1 (c)* barFee_3
[i]Type for TMP_276

Name: TMP_276 Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
TMP_277(uint256) = TMP_276 (c)/ MAX_FEE_7
[i]Type for TMP_277

Name: TMP_277 Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
_barFee_1(uint256) := TMP_277(uint256)
Finance type key: (12, -1)
[i]Type for _barFee

Name: _barFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
INTERNAL_CALL, HybridPool._transfer(address,uint256,address,bool)(tokenIn_1,_barFee_1,barFeeTo_16,False)
token_1(address) := ϕ(['tokenOut_3', 'token1_17', 'token1_6', 'token0_5', 'tokenIn_1', 'token0_21', 'tokenIn_1', 'tokenOut_1'])
[i]Type for token

Name: token Function: _transfer
Num: 
Den: 
Address: -996
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['_barFee_1', 'amount0_1', 'amountOut_3', 'fee_3', 'amountOut_1', 'amount1_2', 'amount0_3', 'amount1_1'])
[i]Type for amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
to_1(address) := ϕ(['recipient_1', 'recipient_1', 'barFeeTo_16', 'barFeeTo_14', 'to_1', 'recipient_1'])
[i]Type for to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 7
Norm: u
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
unwrapBento_1(bool) := ϕ(['unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1'])
[i]Type for unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_6(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_74 (->None) := 4052550604(uint256)
Finance type key: (-1, -1)
[i]Type for REF_74

Name: REF_74 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4052550604
Fields: 
Finance Type: undef
TMP_208 = CONVERT this to address
[i]Type for TMP_208

Name: TMP_208 Function: _transfer
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_209(uint256) = INTERNAL_CALL, HybridPool._toShare(address,uint256)(token_1,amount_1)
token_1(address) := ϕ(['token1_21', 'token1_8', 'token0_18', 'token0_7', 'token_1'])
[i]Type for token

Name: token Function: _toShare
Num: 
Den: 
Address: -996
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['amount1_1', 'amount0_1', 'amount0_1', 'amount_1', 'amount1_1'])
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
bento_4(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_5(address) := ϕ(['bento_4', 'bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
output_1(uint256) := TMP_195(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token1_21', 'token1_8', 'token0_18', 'token0_7', 'token_1'])
[i]Type for token

Name: token Function: _toShare
Num: 
Den: 
Address: -996
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['amount1_1', 'amount0_1', 'amount0_1', 'amount_1', 'amount1_1'])
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
bento_4(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_5(address) := ϕ(['bento_4', 'bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
output_1(uint256) := TMP_195(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_209

Name: TMP_209 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_7(address) := ϕ(['bento_5'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
TMP_210(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_74,token_1,TMP_208,to_1,TMP_209)
[i]Type for TMP_210

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_24(bool,bytes) = LOW_LEVEL_CALL, dest:bento_7, function:call, arguments:['TMP_210']  
[i]Type for TUPLE_24

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_8(address) := ϕ(['bento_5', 'bento_7', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
success_1(bool)= UNPACK TUPLE_24 index: 0 
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_70 (->None) := 2547674416(uint256)
Finance type key: (-1, -1)
[i]Type for REF_70

Name: REF_70 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2547674416
Fields: 
Finance Type: undef
TMP_205 = CONVERT this to address
[i]Type for TMP_205

Name: TMP_205 Function: _transfer
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_206(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_70,token_1,TMP_205,to_1,amount_1,0)
[i]Type for TMP_206

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_23(bool,bytes) = LOW_LEVEL_CALL, dest:bento_6, function:call, arguments:['TMP_206']  
[i]Type for TUPLE_23

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_9(address) := ϕ(['bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
success_2(bool)= UNPACK TUPLE_23 index: 0 
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_211(None) = SOLIDITY_CALL require(bool,string)(success_scope_0_0,TRANSFER_FAILED)
[i]Type for TMP_211

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_207(None) = SOLIDITY_CALL require(bool,string)(success_2,WITHDRAW_FAILED)
[i]Type for TMP_207

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['tokenOut_3', 'token1_17', 'token1_6', 'token0_5', 'tokenIn_1', 'token0_21', 'tokenIn_1', 'tokenOut_1'])
[i]Type for token

Name: token Function: _transfer
Num: 
Den: 
Address: -996
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['_barFee_1', 'amount0_1', 'amountOut_3', 'fee_3', 'amountOut_1', 'amount1_2', 'amount0_3', 'amount1_1'])
[i]Type for amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
to_1(address) := ϕ(['recipient_1', 'recipient_1', 'barFeeTo_16', 'barFeeTo_14', 'to_1', 'recipient_1'])
[i]Type for to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 7
Norm: u
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
unwrapBento_1(bool) := ϕ(['unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1'])
[i]Type for unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_6(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_74 (->None) := 4052550604(uint256)
Finance type key: (-1, -1)
[i]Type for REF_74

Name: REF_74 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4052550604
Fields: 
Finance Type: undef
TMP_208 = CONVERT this to address
[i]Type for TMP_208

Name: TMP_208 Function: _transfer
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_209(uint256) = INTERNAL_CALL, HybridPool._toShare(address,uint256)(token_1,amount_1)
token_1(address) := ϕ(['token1_21', 'token1_8', 'token0_18', 'token0_7', 'token_1'])
[i]Type for token

Name: token Function: _toShare
Num: 
Den: 
Address: -996
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['amount1_1', 'amount0_1', 'amount0_1', 'amount_1', 'amount1_1'])
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
bento_4(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_5(address) := ϕ(['bento_4', 'bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
output_1(uint256) := TMP_195(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token1_21', 'token1_8', 'token0_18', 'token0_7', 'token_1'])
[i]Type for token

Name: token Function: _toShare
Num: 
Den: 
Address: -996
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['amount1_1', 'amount0_1', 'amount0_1', 'amount_1', 'amount1_1'])
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
bento_4(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_5(address) := ϕ(['bento_4', 'bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
output_1(uint256) := TMP_195(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_209

Name: TMP_209 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_7(address) := ϕ(['bento_5'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
TMP_210(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_74,token_1,TMP_208,to_1,TMP_209)
[i]Type for TMP_210

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_24(bool,bytes) = LOW_LEVEL_CALL, dest:bento_7, function:call, arguments:['TMP_210']  
[i]Type for TUPLE_24

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_8(address) := ϕ(['bento_5', 'bento_7', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
success_1(bool)= UNPACK TUPLE_24 index: 0 
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_70 (->None) := 2547674416(uint256)
Finance type key: (-1, -1)
[i]Type for REF_70

Name: REF_70 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2547674416
Fields: 
Finance Type: undef
TMP_205 = CONVERT this to address
[i]Type for TMP_205

Name: TMP_205 Function: _transfer
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_206(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_70,token_1,TMP_205,to_1,amount_1,0)
[i]Type for TMP_206

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_23(bool,bytes) = LOW_LEVEL_CALL, dest:bento_6, function:call, arguments:['TMP_206']  
[i]Type for TUPLE_23

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_9(address) := ϕ(['bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
success_2(bool)= UNPACK TUPLE_23 index: 0 
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_211(None) = SOLIDITY_CALL require(bool,string)(success_scope_0_0,TRANSFER_FAILED)
[i]Type for TMP_211

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_207(None) = SOLIDITY_CALL require(bool,string)(success_2,WITHDRAW_FAILED)
[i]Type for TMP_207

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_129

Name: TMP_129 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
fee_scope_0_1(uint256) := TMP_129(uint256)
Finance type key: (-1, -1)
[i]Type for fee_scope_0

Name: fee_scope_0 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_124(uint256) = amountIn_1 (c)- fee_1
[i]Type for TMP_124

Name: TMP_124 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_125(uint256) = INTERNAL_CALL, HybridPool._getAmountOut(uint256,uint256,uint256,bool)(TMP_124,_reserve0_1,_reserve1_1,True)
amountIn_1(uint256) := ϕ(['TMP_153', 'TMP_124', 'TMP_103', 'TMP_112', 'TMP_130', 'TMP_140', 'amountIn_3'])
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_reserve0_1(uint256) := ϕ(['_reserve0_1', '_reserve0_1', '_reserve0_1', 'TMP_104', 'TMP_113'])
[i]Type for _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
_reserve1_1(uint256) := ϕ(['_reserve1_1', 'TMP_105', 'TMP_114', '_reserve1_1', '_reserve1_1'])
[i]Type for _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
token0PrecisionMultiplier_2(uint256) := ϕ(['token0PrecisionMultiplier_0', 'token0PrecisionMultiplier_1', 'token0PrecisionMultiplier_4'])
[i]Type for token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
token1PrecisionMultiplier_2(uint256) := ϕ(['token1PrecisionMultiplier_4', 'token1PrecisionMultiplier_1', 'token1PrecisionMultiplier_0'])
[i]Type for token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_196(uint256) = _reserve0_1 (c)* token0PrecisionMultiplier_2
[i]Type for TMP_196

Name: TMP_196 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
xpIn_1(uint256) := TMP_196(uint256)
Finance type key: (-1, -1)
[i]Type for xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_197(uint256) = _reserve1_1 (c)* token1PrecisionMultiplier_2
[i]Type for TMP_197

Name: TMP_197 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
xpOut_1(uint256) := TMP_197(uint256)
Finance type key: (-1, -1)
[i]Type for xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_198(uint256) = _reserve1_1 (c)* token1PrecisionMultiplier_2
[i]Type for TMP_198

Name: TMP_198 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
xpIn_2(uint256) := TMP_198(uint256)
Finance type key: (-1, -1)
[i]Type for xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
amountIn_2(uint256) = amountIn_1 (c)* token0PrecisionMultiplier_2
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_199(uint256) = _reserve0_1 (c)* token0PrecisionMultiplier_2
[i]Type for TMP_199

Name: TMP_199 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
xpOut_2(uint256) := TMP_199(uint256)
Finance type key: (-1, -1)
[i]Type for xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
amountIn_4(uint256) := ϕ(['amountIn_3', 'amountIn_2'])
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
xpIn_3(uint256) := ϕ(['xpIn_1', 'xpIn_2'])
[i]Type for xpIn

Name: xpIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
xpOut_3(uint256) := ϕ(['xpOut_1', 'xpOut_2'])
[i]Type for xpOut

Name: xpOut Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_200(uint256) = INTERNAL_CALL, HybridPool._computeLiquidityFromAdjustedBalances(uint256,uint256)(xpIn_3,xpOut_3)
xp0_1(uint256) := ϕ(['xpIn_3', 'xp0_1'])
[i]Type for xp0

Name: xp0 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
xp1_1(uint256) := ϕ(['xpOut_3', 'xp1_1'])
[i]Type for xp1

Name: xp1 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MAX_LOOP_LIMIT_1(uint256) := ϕ(['MAX_LOOP_LIMIT_0'])
[i]Type for MAX_LOOP_LIMIT

Name: MAX_LOOP_LIMIT Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
N_A_2(uint256) := ϕ(['N_A_0', 'N_A_1'])
[i]Type for N_A

Name: N_A Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
A_PRECISION_1(uint256) := ϕ(['A_PRECISION_0'])
[i]Type for A_PRECISION

Name: A_PRECISION Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_215(uint256) = xp0_1 (c)+ xp1_1
[i]Type for TMP_215

Name: TMP_215 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
s_1(uint256) := TMP_215(uint256)
Finance type key: (-1, -1)
[i]Type for s

Name: s Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_216(bool) = s_1 == 0
[i]Type for TMP_216

Name: TMP_216 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
computed_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for computed

Name: computed Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
D_1(uint256) := s_1(uint256)
Finance type key: (-1, -1)
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
D_2(uint256) := ϕ(['D_3', 'D_1'])
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
i_2(uint256) := ϕ(['i_3', 'i_1'])
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_217(bool) = i_2 < MAX_LOOP_LIMIT_1
[i]Type for TMP_217

Name: TMP_217 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_218(uint256) = D_2 (c)* D_2
Finance type key: (40, 40)
[i]Type for TMP_218

Name: TMP_218 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_219(uint256) = TMP_218 (c)/ xp0_1
[i]Type for TMP_219

Name: TMP_219 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_220(uint256) = TMP_219 (c)* D_2
[i]Type for TMP_220

Name: TMP_220 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
TMP_221(uint256) = TMP_220 (c)/ xp1_1
[i]Type for TMP_221

Name: TMP_221 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
TMP_222(uint256) = TMP_221 (c)/ 4
[i]Type for TMP_222

Name: TMP_222 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: price/exchange rate
dP_1(uint256) := TMP_222(uint256)
Finance type key: (40, -1)
[i]Type for dP

Name: dP Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: price/exchange rate
prevD_1(uint256) := D_2(uint256)
Finance type key: (40, -1)
[i]Type for prevD

Name: prevD Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
computed_2(uint256) := D_3(uint256)
Finance type key: (40, -1)
[i]Type for computed

Name: computed Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
TMP_223(uint256) = N_A_2 (c)* s_1
[i]Type for TMP_223

Name: TMP_223 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_224(uint256) = TMP_223 (c)/ A_PRECISION_1
[i]Type for TMP_224

Name: TMP_224 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_225(uint256) = 2 (c)* dP_1
[i]Type for TMP_225

Name: TMP_225 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: price/exchange rate
TMP_226(uint256) = TMP_224 (c)+ TMP_225
[i]Type for TMP_226

Name: TMP_226 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: price/exchange rate
TMP_227(uint256) = TMP_226 (c)* D_2
Finance type key: (40, 40)
[i]Type for TMP_227

Name: TMP_227 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_228(uint256) = N_A_2 (c)/ A_PRECISION_1
[i]Type for TMP_228

Name: TMP_228 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_229(uint256) = TMP_228 (c)- 1
[i]Type for TMP_229

Name: TMP_229 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
TMP_230(uint256) = TMP_229 (c)* D_2
[i]Type for TMP_230

Name: TMP_230 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: price/exchange rate
TMP_231(uint256) = 3 (c)* dP_1
[i]Type for TMP_231

Name: TMP_231 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 12
Fields: 
Finance Type: price/exchange rate
TMP_232(uint256) = TMP_230 (c)+ TMP_231
Finance type key: (40, 40)
[i]Type for TMP_232

Name: TMP_232 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 13
Fields: 
Finance Type: price/exchange rate
TMP_233(uint256) = TMP_227 (c)/ TMP_232
[i]Type for TMP_233

Name: TMP_233 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
D_3(uint256) := TMP_233(uint256)
Finance type key: (40, -1)
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
TMP_234(bool) = LIBRARY_CALL, dest:MathUtils, function:MathUtils.within1(uint256,uint256), arguments:['D_3', 'prevD_1'] 
[i]Type for TMP_234

Name: TMP_234 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_235(uint256) := i_2(uint256)
Finance type key: (-1, -1)
[i]Type for TMP_235

Name: TMP_235 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_3(uint256) = i_2 (c)+ 1
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
xp0_1(uint256) := ϕ(['xpIn_3', 'xp0_1'])
[i]Type for xp0

Name: xp0 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
xp1_1(uint256) := ϕ(['xpOut_3', 'xp1_1'])
[i]Type for xp1

Name: xp1 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MAX_LOOP_LIMIT_1(uint256) := ϕ(['MAX_LOOP_LIMIT_0'])
[i]Type for MAX_LOOP_LIMIT

Name: MAX_LOOP_LIMIT Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
N_A_2(uint256) := ϕ(['N_A_0', 'N_A_1'])
[i]Type for N_A

Name: N_A Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
A_PRECISION_1(uint256) := ϕ(['A_PRECISION_0'])
[i]Type for A_PRECISION

Name: A_PRECISION Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_215(uint256) = xp0_1 (c)+ xp1_1
[i]Type for TMP_215

Name: TMP_215 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
s_1(uint256) := TMP_215(uint256)
Finance type key: (-1, -1)
[i]Type for s

Name: s Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_216(bool) = s_1 == 0
[i]Type for TMP_216

Name: TMP_216 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
computed_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for computed

Name: computed Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
D_1(uint256) := s_1(uint256)
Finance type key: (-1, -1)
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
D_2(uint256) := ϕ(['D_3', 'D_1'])
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
i_2(uint256) := ϕ(['i_3', 'i_1'])
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_217(bool) = i_2 < MAX_LOOP_LIMIT_1
[i]Type for TMP_217

Name: TMP_217 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_218(uint256) = D_2 (c)* D_2
Finance type key: (40, 40)
[i]Type for TMP_218

Name: TMP_218 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_219(uint256) = TMP_218 (c)/ xp0_1
[i]Type for TMP_219

Name: TMP_219 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_220(uint256) = TMP_219 (c)* D_2
[i]Type for TMP_220

Name: TMP_220 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
TMP_221(uint256) = TMP_220 (c)/ xp1_1
[i]Type for TMP_221

Name: TMP_221 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
TMP_222(uint256) = TMP_221 (c)/ 4
[i]Type for TMP_222

Name: TMP_222 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: price/exchange rate
dP_1(uint256) := TMP_222(uint256)
Finance type key: (40, -1)
[i]Type for dP

Name: dP Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: price/exchange rate
prevD_1(uint256) := D_2(uint256)
Finance type key: (40, -1)
[i]Type for prevD

Name: prevD Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
computed_2(uint256) := D_3(uint256)
Finance type key: (40, -1)
[i]Type for computed

Name: computed Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
TMP_223(uint256) = N_A_2 (c)* s_1
[i]Type for TMP_223

Name: TMP_223 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_224(uint256) = TMP_223 (c)/ A_PRECISION_1
[i]Type for TMP_224

Name: TMP_224 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_225(uint256) = 2 (c)* dP_1
[i]Type for TMP_225

Name: TMP_225 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: price/exchange rate
TMP_226(uint256) = TMP_224 (c)+ TMP_225
[i]Type for TMP_226

Name: TMP_226 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: price/exchange rate
TMP_227(uint256) = TMP_226 (c)* D_2
Finance type key: (40, 40)
[i]Type for TMP_227

Name: TMP_227 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_228(uint256) = N_A_2 (c)/ A_PRECISION_1
[i]Type for TMP_228

Name: TMP_228 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_229(uint256) = TMP_228 (c)- 1
[i]Type for TMP_229

Name: TMP_229 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
TMP_230(uint256) = TMP_229 (c)* D_2
[i]Type for TMP_230

Name: TMP_230 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: price/exchange rate
TMP_231(uint256) = 3 (c)* dP_1
[i]Type for TMP_231

Name: TMP_231 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 12
Fields: 
Finance Type: price/exchange rate
TMP_232(uint256) = TMP_230 (c)+ TMP_231
Finance type key: (40, 40)
[i]Type for TMP_232

Name: TMP_232 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 13
Fields: 
Finance Type: price/exchange rate
TMP_233(uint256) = TMP_227 (c)/ TMP_232
[i]Type for TMP_233

Name: TMP_233 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
D_3(uint256) := TMP_233(uint256)
Finance type key: (40, -1)
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
TMP_234(bool) = LIBRARY_CALL, dest:MathUtils, function:MathUtils.within1(uint256,uint256), arguments:['D_3', 'prevD_1'] 
[i]Type for TMP_234

Name: TMP_234 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_235(uint256) := i_2(uint256)
Finance type key: (-1, -1)
[i]Type for TMP_235

Name: TMP_235 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_3(uint256) = i_2 (c)+ 1
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
[i]Type for TMP_200

Name: TMP_200 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
d_1(uint256) := TMP_200(uint256)
Finance type key: (-1, -1)
[i]Type for d

Name: d Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_201(uint256) = xpIn_3 (c)+ amountIn_4
[i]Type for TMP_201

Name: TMP_201 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
x_1(uint256) := TMP_201(uint256)
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
amountIn_3(uint256) = amountIn_1 (c)* token1PrecisionMultiplier_2
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_202(uint256) = INTERNAL_CALL, HybridPool._getY(uint256,uint256)(x_1,d_1)
x_1(uint256) := ϕ(['x_1'])
[i]Type for x

Name: x Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
D_1(uint256) := ϕ(['d_1'])
[i]Type for D

Name: D Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MAX_LOOP_LIMIT_2(uint256) := ϕ(['MAX_LOOP_LIMIT_0'])
[i]Type for MAX_LOOP_LIMIT

Name: MAX_LOOP_LIMIT Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
N_A_3(uint256) := ϕ(['N_A_0', 'N_A_1'])
[i]Type for N_A

Name: N_A Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
A_PRECISION_2(uint256) := ϕ(['A_PRECISION_0'])
[i]Type for A_PRECISION

Name: A_PRECISION Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_236(uint256) = D_1 (c)* D_1
[i]Type for TMP_236

Name: TMP_236 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_237(uint256) = x_1 (c)* 2
[i]Type for TMP_237

Name: TMP_237 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_238(uint256) = TMP_236 (c)/ TMP_237
[i]Type for TMP_238

Name: TMP_238 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
c_1(uint256) := TMP_238(uint256)
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_239(uint256) = c_1 (c)* D_1
[i]Type for TMP_239

Name: TMP_239 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_240(uint256) = N_A_3 (c)* 2
[i]Type for TMP_240

Name: TMP_240 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
TMP_241(uint256) = TMP_240 (c)/ A_PRECISION_2
[i]Type for TMP_241

Name: TMP_241 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
TMP_242(uint256) = TMP_239 (c)/ TMP_241
[i]Type for TMP_242

Name: TMP_242 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
c_2(uint256) := TMP_242(uint256)
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_243(uint256) = D_1 (c)* A_PRECISION_2
[i]Type for TMP_243

Name: TMP_243 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_244(uint256) = TMP_243 (c)/ N_A_3
[i]Type for TMP_244

Name: TMP_244 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_245(uint256) = x_1 (c)+ TMP_244
[i]Type for TMP_245

Name: TMP_245 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
b_1(uint256) := TMP_245(uint256)
Finance type key: (-1, -1)
[i]Type for b

Name: b Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
y_1(uint256) := D_1(uint256)
Finance type key: (-1, -1)
[i]Type for y

Name: y Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for i

Name: i Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
y_2(uint256) := ϕ(['y_1', 'y_3'])
[i]Type for y

Name: y Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
i_2(uint256) := ϕ(['i_1', 'i_3'])
[i]Type for i

Name: i Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_246(bool) = i_2 < MAX_LOOP_LIMIT_2
[i]Type for TMP_246

Name: TMP_246 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
yPrev_1(uint256) := y_2(uint256)
Finance type key: (40, -1)
[i]Type for yPrev

Name: yPrev Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
TMP_247(uint256) = y_2 (c)* y_2
Finance type key: (40, 40)
[i]Type for TMP_247

Name: TMP_247 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_248(uint256) = TMP_247 (c)+ c_2
[i]Type for TMP_248

Name: TMP_248 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_249(uint256) = y_2 (c)* 2
[i]Type for TMP_249

Name: TMP_249 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: price/exchange rate
TMP_250(uint256) = TMP_249 (c)+ b_1
[i]Type for TMP_250

Name: TMP_250 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: price/exchange rate
TMP_251(uint256) = TMP_250 (c)- D_1
[i]Type for TMP_251

Name: TMP_251 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: price/exchange rate
TMP_252(uint256) = TMP_248 (c)/ TMP_251
[i]Type for TMP_252

Name: TMP_252 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
y_3(uint256) := TMP_252(uint256)
Finance type key: (40, -1)
[i]Type for y

Name: y Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
TMP_253(bool) = LIBRARY_CALL, dest:MathUtils, function:MathUtils.within1(uint256,uint256), arguments:['y_3', 'yPrev_1'] 
[i]Type for TMP_253

Name: TMP_253 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_254(uint256) := i_2(uint256)
Finance type key: (-1, -1)
[i]Type for TMP_254

Name: TMP_254 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_3(uint256) = i_2 (c)+ 1
[i]Type for i

Name: i Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
x_1(uint256) := ϕ(['x_1'])
[i]Type for x

Name: x Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
D_1(uint256) := ϕ(['d_1'])
[i]Type for D

Name: D Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MAX_LOOP_LIMIT_2(uint256) := ϕ(['MAX_LOOP_LIMIT_0'])
[i]Type for MAX_LOOP_LIMIT

Name: MAX_LOOP_LIMIT Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
N_A_3(uint256) := ϕ(['N_A_0', 'N_A_1'])
[i]Type for N_A

Name: N_A Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
A_PRECISION_2(uint256) := ϕ(['A_PRECISION_0'])
[i]Type for A_PRECISION

Name: A_PRECISION Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_236(uint256) = D_1 (c)* D_1
[i]Type for TMP_236

Name: TMP_236 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_237(uint256) = x_1 (c)* 2
[i]Type for TMP_237

Name: TMP_237 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_238(uint256) = TMP_236 (c)/ TMP_237
[i]Type for TMP_238

Name: TMP_238 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
c_1(uint256) := TMP_238(uint256)
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_239(uint256) = c_1 (c)* D_1
[i]Type for TMP_239

Name: TMP_239 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_240(uint256) = N_A_3 (c)* 2
[i]Type for TMP_240

Name: TMP_240 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
TMP_241(uint256) = TMP_240 (c)/ A_PRECISION_2
[i]Type for TMP_241

Name: TMP_241 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
TMP_242(uint256) = TMP_239 (c)/ TMP_241
[i]Type for TMP_242

Name: TMP_242 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
c_2(uint256) := TMP_242(uint256)
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_243(uint256) = D_1 (c)* A_PRECISION_2
[i]Type for TMP_243

Name: TMP_243 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_244(uint256) = TMP_243 (c)/ N_A_3
[i]Type for TMP_244

Name: TMP_244 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_245(uint256) = x_1 (c)+ TMP_244
[i]Type for TMP_245

Name: TMP_245 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
b_1(uint256) := TMP_245(uint256)
Finance type key: (-1, -1)
[i]Type for b

Name: b Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
y_1(uint256) := D_1(uint256)
Finance type key: (-1, -1)
[i]Type for y

Name: y Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for i

Name: i Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
y_2(uint256) := ϕ(['y_1', 'y_3'])
[i]Type for y

Name: y Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
i_2(uint256) := ϕ(['i_1', 'i_3'])
[i]Type for i

Name: i Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_246(bool) = i_2 < MAX_LOOP_LIMIT_2
[i]Type for TMP_246

Name: TMP_246 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
yPrev_1(uint256) := y_2(uint256)
Finance type key: (40, -1)
[i]Type for yPrev

Name: yPrev Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
TMP_247(uint256) = y_2 (c)* y_2
Finance type key: (40, 40)
[i]Type for TMP_247

Name: TMP_247 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_248(uint256) = TMP_247 (c)+ c_2
[i]Type for TMP_248

Name: TMP_248 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_249(uint256) = y_2 (c)* 2
[i]Type for TMP_249

Name: TMP_249 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: price/exchange rate
TMP_250(uint256) = TMP_249 (c)+ b_1
[i]Type for TMP_250

Name: TMP_250 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: price/exchange rate
TMP_251(uint256) = TMP_250 (c)- D_1
[i]Type for TMP_251

Name: TMP_251 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: price/exchange rate
TMP_252(uint256) = TMP_248 (c)/ TMP_251
[i]Type for TMP_252

Name: TMP_252 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
y_3(uint256) := TMP_252(uint256)
Finance type key: (40, -1)
[i]Type for y

Name: y Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
TMP_253(bool) = LIBRARY_CALL, dest:MathUtils, function:MathUtils.within1(uint256,uint256), arguments:['y_3', 'yPrev_1'] 
[i]Type for TMP_253

Name: TMP_253 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_254(uint256) := i_2(uint256)
Finance type key: (-1, -1)
[i]Type for TMP_254

Name: TMP_254 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_3(uint256) = i_2 (c)+ 1
[i]Type for i

Name: i Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
[i]Type for TMP_202

Name: TMP_202 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
y_1(uint256) := TMP_202(uint256)
Finance type key: (-1, -1)
[i]Type for y

Name: y Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_203(uint256) = xpOut_3 (c)- y_1
[i]Type for TMP_203

Name: TMP_203 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_204(uint256) = TMP_203 (c)- 1
[i]Type for TMP_204

Name: TMP_204 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
dy_1(uint256) := TMP_204(uint256)
Finance type key: (-1, -1)
[i]Type for dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
dy_2(uint256) = dy_1 (c)/ token1PrecisionMultiplier_4
[i]Type for dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
dy_3(uint256) = dy_1 (c)/ token0PrecisionMultiplier_4
[i]Type for dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
amountIn_1(uint256) := ϕ(['TMP_153', 'TMP_124', 'TMP_103', 'TMP_112', 'TMP_130', 'TMP_140', 'amountIn_3'])
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_reserve0_1(uint256) := ϕ(['_reserve0_1', '_reserve0_1', '_reserve0_1', 'TMP_104', 'TMP_113'])
[i]Type for _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
_reserve1_1(uint256) := ϕ(['_reserve1_1', 'TMP_105', 'TMP_114', '_reserve1_1', '_reserve1_1'])
[i]Type for _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
token0PrecisionMultiplier_2(uint256) := ϕ(['token0PrecisionMultiplier_0', 'token0PrecisionMultiplier_1', 'token0PrecisionMultiplier_4'])
[i]Type for token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
token1PrecisionMultiplier_2(uint256) := ϕ(['token1PrecisionMultiplier_4', 'token1PrecisionMultiplier_1', 'token1PrecisionMultiplier_0'])
[i]Type for token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_196(uint256) = _reserve0_1 (c)* token0PrecisionMultiplier_2
[i]Type for TMP_196

Name: TMP_196 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
xpIn_1(uint256) := TMP_196(uint256)
Finance type key: (-1, -1)
[i]Type for xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_197(uint256) = _reserve1_1 (c)* token1PrecisionMultiplier_2
[i]Type for TMP_197

Name: TMP_197 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
xpOut_1(uint256) := TMP_197(uint256)
Finance type key: (-1, -1)
[i]Type for xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_198(uint256) = _reserve1_1 (c)* token1PrecisionMultiplier_2
[i]Type for TMP_198

Name: TMP_198 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
xpIn_2(uint256) := TMP_198(uint256)
Finance type key: (-1, -1)
[i]Type for xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
amountIn_2(uint256) = amountIn_1 (c)* token0PrecisionMultiplier_2
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_199(uint256) = _reserve0_1 (c)* token0PrecisionMultiplier_2
[i]Type for TMP_199

Name: TMP_199 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
xpOut_2(uint256) := TMP_199(uint256)
Finance type key: (-1, -1)
[i]Type for xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
amountIn_4(uint256) := ϕ(['amountIn_3', 'amountIn_2'])
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
xpIn_3(uint256) := ϕ(['xpIn_1', 'xpIn_2'])
[i]Type for xpIn

Name: xpIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
xpOut_3(uint256) := ϕ(['xpOut_1', 'xpOut_2'])
[i]Type for xpOut

Name: xpOut Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_200(uint256) = INTERNAL_CALL, HybridPool._computeLiquidityFromAdjustedBalances(uint256,uint256)(xpIn_3,xpOut_3)
xp0_1(uint256) := ϕ(['xpIn_3', 'xp0_1'])
[i]Type for xp0

Name: xp0 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
xp1_1(uint256) := ϕ(['xpOut_3', 'xp1_1'])
[i]Type for xp1

Name: xp1 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MAX_LOOP_LIMIT_1(uint256) := ϕ(['MAX_LOOP_LIMIT_0'])
[i]Type for MAX_LOOP_LIMIT

Name: MAX_LOOP_LIMIT Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
N_A_2(uint256) := ϕ(['N_A_0', 'N_A_1'])
[i]Type for N_A

Name: N_A Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
A_PRECISION_1(uint256) := ϕ(['A_PRECISION_0'])
[i]Type for A_PRECISION

Name: A_PRECISION Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_215(uint256) = xp0_1 (c)+ xp1_1
[i]Type for TMP_215

Name: TMP_215 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
s_1(uint256) := TMP_215(uint256)
Finance type key: (-1, -1)
[i]Type for s

Name: s Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_216(bool) = s_1 == 0
[i]Type for TMP_216

Name: TMP_216 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
computed_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for computed

Name: computed Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
D_1(uint256) := s_1(uint256)
Finance type key: (-1, -1)
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
D_2(uint256) := ϕ(['D_3', 'D_1'])
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
i_2(uint256) := ϕ(['i_3', 'i_1'])
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_217(bool) = i_2 < MAX_LOOP_LIMIT_1
[i]Type for TMP_217

Name: TMP_217 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_218(uint256) = D_2 (c)* D_2
Finance type key: (40, 40)
[i]Type for TMP_218

Name: TMP_218 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_219(uint256) = TMP_218 (c)/ xp0_1
[i]Type for TMP_219

Name: TMP_219 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_220(uint256) = TMP_219 (c)* D_2
[i]Type for TMP_220

Name: TMP_220 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
TMP_221(uint256) = TMP_220 (c)/ xp1_1
[i]Type for TMP_221

Name: TMP_221 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
TMP_222(uint256) = TMP_221 (c)/ 4
[i]Type for TMP_222

Name: TMP_222 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: price/exchange rate
dP_1(uint256) := TMP_222(uint256)
Finance type key: (40, -1)
[i]Type for dP

Name: dP Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: price/exchange rate
prevD_1(uint256) := D_2(uint256)
Finance type key: (40, -1)
[i]Type for prevD

Name: prevD Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
computed_2(uint256) := D_3(uint256)
Finance type key: (40, -1)
[i]Type for computed

Name: computed Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
TMP_223(uint256) = N_A_2 (c)* s_1
[i]Type for TMP_223

Name: TMP_223 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_224(uint256) = TMP_223 (c)/ A_PRECISION_1
[i]Type for TMP_224

Name: TMP_224 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_225(uint256) = 2 (c)* dP_1
[i]Type for TMP_225

Name: TMP_225 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: price/exchange rate
TMP_226(uint256) = TMP_224 (c)+ TMP_225
[i]Type for TMP_226

Name: TMP_226 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: price/exchange rate
TMP_227(uint256) = TMP_226 (c)* D_2
Finance type key: (40, 40)
[i]Type for TMP_227

Name: TMP_227 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_228(uint256) = N_A_2 (c)/ A_PRECISION_1
[i]Type for TMP_228

Name: TMP_228 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_229(uint256) = TMP_228 (c)- 1
[i]Type for TMP_229

Name: TMP_229 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
TMP_230(uint256) = TMP_229 (c)* D_2
[i]Type for TMP_230

Name: TMP_230 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: price/exchange rate
TMP_231(uint256) = 3 (c)* dP_1
[i]Type for TMP_231

Name: TMP_231 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 12
Fields: 
Finance Type: price/exchange rate
TMP_232(uint256) = TMP_230 (c)+ TMP_231
Finance type key: (40, 40)
[i]Type for TMP_232

Name: TMP_232 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 13
Fields: 
Finance Type: price/exchange rate
TMP_233(uint256) = TMP_227 (c)/ TMP_232
[i]Type for TMP_233

Name: TMP_233 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
D_3(uint256) := TMP_233(uint256)
Finance type key: (40, -1)
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
TMP_234(bool) = LIBRARY_CALL, dest:MathUtils, function:MathUtils.within1(uint256,uint256), arguments:['D_3', 'prevD_1'] 
[i]Type for TMP_234

Name: TMP_234 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_235(uint256) := i_2(uint256)
Finance type key: (-1, -1)
[i]Type for TMP_235

Name: TMP_235 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_3(uint256) = i_2 (c)+ 1
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
xp0_1(uint256) := ϕ(['xpIn_3', 'xp0_1'])
[i]Type for xp0

Name: xp0 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
xp1_1(uint256) := ϕ(['xpOut_3', 'xp1_1'])
[i]Type for xp1

Name: xp1 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MAX_LOOP_LIMIT_1(uint256) := ϕ(['MAX_LOOP_LIMIT_0'])
[i]Type for MAX_LOOP_LIMIT

Name: MAX_LOOP_LIMIT Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
N_A_2(uint256) := ϕ(['N_A_0', 'N_A_1'])
[i]Type for N_A

Name: N_A Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
A_PRECISION_1(uint256) := ϕ(['A_PRECISION_0'])
[i]Type for A_PRECISION

Name: A_PRECISION Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_215(uint256) = xp0_1 (c)+ xp1_1
[i]Type for TMP_215

Name: TMP_215 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
s_1(uint256) := TMP_215(uint256)
Finance type key: (-1, -1)
[i]Type for s

Name: s Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_216(bool) = s_1 == 0
[i]Type for TMP_216

Name: TMP_216 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
computed_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for computed

Name: computed Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
D_1(uint256) := s_1(uint256)
Finance type key: (-1, -1)
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
D_2(uint256) := ϕ(['D_3', 'D_1'])
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
i_2(uint256) := ϕ(['i_3', 'i_1'])
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_217(bool) = i_2 < MAX_LOOP_LIMIT_1
[i]Type for TMP_217

Name: TMP_217 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_218(uint256) = D_2 (c)* D_2
Finance type key: (40, 40)
[i]Type for TMP_218

Name: TMP_218 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_219(uint256) = TMP_218 (c)/ xp0_1
[i]Type for TMP_219

Name: TMP_219 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_220(uint256) = TMP_219 (c)* D_2
[i]Type for TMP_220

Name: TMP_220 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
TMP_221(uint256) = TMP_220 (c)/ xp1_1
[i]Type for TMP_221

Name: TMP_221 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
TMP_222(uint256) = TMP_221 (c)/ 4
[i]Type for TMP_222

Name: TMP_222 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: price/exchange rate
dP_1(uint256) := TMP_222(uint256)
Finance type key: (40, -1)
[i]Type for dP

Name: dP Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: price/exchange rate
prevD_1(uint256) := D_2(uint256)
Finance type key: (40, -1)
[i]Type for prevD

Name: prevD Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
computed_2(uint256) := D_3(uint256)
Finance type key: (40, -1)
[i]Type for computed

Name: computed Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
TMP_223(uint256) = N_A_2 (c)* s_1
[i]Type for TMP_223

Name: TMP_223 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_224(uint256) = TMP_223 (c)/ A_PRECISION_1
[i]Type for TMP_224

Name: TMP_224 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_225(uint256) = 2 (c)* dP_1
[i]Type for TMP_225

Name: TMP_225 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: price/exchange rate
TMP_226(uint256) = TMP_224 (c)+ TMP_225
[i]Type for TMP_226

Name: TMP_226 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: price/exchange rate
TMP_227(uint256) = TMP_226 (c)* D_2
Finance type key: (40, 40)
[i]Type for TMP_227

Name: TMP_227 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_228(uint256) = N_A_2 (c)/ A_PRECISION_1
[i]Type for TMP_228

Name: TMP_228 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_229(uint256) = TMP_228 (c)- 1
[i]Type for TMP_229

Name: TMP_229 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
TMP_230(uint256) = TMP_229 (c)* D_2
[i]Type for TMP_230

Name: TMP_230 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: price/exchange rate
TMP_231(uint256) = 3 (c)* dP_1
[i]Type for TMP_231

Name: TMP_231 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 12
Fields: 
Finance Type: price/exchange rate
TMP_232(uint256) = TMP_230 (c)+ TMP_231
Finance type key: (40, 40)
[i]Type for TMP_232

Name: TMP_232 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 13
Fields: 
Finance Type: price/exchange rate
TMP_233(uint256) = TMP_227 (c)/ TMP_232
[i]Type for TMP_233

Name: TMP_233 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
D_3(uint256) := TMP_233(uint256)
Finance type key: (40, -1)
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
TMP_234(bool) = LIBRARY_CALL, dest:MathUtils, function:MathUtils.within1(uint256,uint256), arguments:['D_3', 'prevD_1'] 
[i]Type for TMP_234

Name: TMP_234 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_235(uint256) := i_2(uint256)
Finance type key: (-1, -1)
[i]Type for TMP_235

Name: TMP_235 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_3(uint256) = i_2 (c)+ 1
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
[i]Type for TMP_200

Name: TMP_200 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
d_1(uint256) := TMP_200(uint256)
Finance type key: (-1, -1)
[i]Type for d

Name: d Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_201(uint256) = xpIn_3 (c)+ amountIn_4
[i]Type for TMP_201

Name: TMP_201 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
x_1(uint256) := TMP_201(uint256)
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
amountIn_3(uint256) = amountIn_1 (c)* token1PrecisionMultiplier_2
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_202(uint256) = INTERNAL_CALL, HybridPool._getY(uint256,uint256)(x_1,d_1)
x_1(uint256) := ϕ(['x_1'])
[i]Type for x

Name: x Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
D_1(uint256) := ϕ(['d_1'])
[i]Type for D

Name: D Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MAX_LOOP_LIMIT_2(uint256) := ϕ(['MAX_LOOP_LIMIT_0'])
[i]Type for MAX_LOOP_LIMIT

Name: MAX_LOOP_LIMIT Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
N_A_3(uint256) := ϕ(['N_A_0', 'N_A_1'])
[i]Type for N_A

Name: N_A Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
A_PRECISION_2(uint256) := ϕ(['A_PRECISION_0'])
[i]Type for A_PRECISION

Name: A_PRECISION Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_236(uint256) = D_1 (c)* D_1
[i]Type for TMP_236

Name: TMP_236 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_237(uint256) = x_1 (c)* 2
[i]Type for TMP_237

Name: TMP_237 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_238(uint256) = TMP_236 (c)/ TMP_237
[i]Type for TMP_238

Name: TMP_238 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
c_1(uint256) := TMP_238(uint256)
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_239(uint256) = c_1 (c)* D_1
[i]Type for TMP_239

Name: TMP_239 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_240(uint256) = N_A_3 (c)* 2
[i]Type for TMP_240

Name: TMP_240 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
TMP_241(uint256) = TMP_240 (c)/ A_PRECISION_2
[i]Type for TMP_241

Name: TMP_241 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
TMP_242(uint256) = TMP_239 (c)/ TMP_241
[i]Type for TMP_242

Name: TMP_242 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
c_2(uint256) := TMP_242(uint256)
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_243(uint256) = D_1 (c)* A_PRECISION_2
[i]Type for TMP_243

Name: TMP_243 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_244(uint256) = TMP_243 (c)/ N_A_3
[i]Type for TMP_244

Name: TMP_244 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_245(uint256) = x_1 (c)+ TMP_244
[i]Type for TMP_245

Name: TMP_245 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
b_1(uint256) := TMP_245(uint256)
Finance type key: (-1, -1)
[i]Type for b

Name: b Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
y_1(uint256) := D_1(uint256)
Finance type key: (-1, -1)
[i]Type for y

Name: y Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for i

Name: i Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
y_2(uint256) := ϕ(['y_1', 'y_3'])
[i]Type for y

Name: y Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
i_2(uint256) := ϕ(['i_1', 'i_3'])
[i]Type for i

Name: i Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_246(bool) = i_2 < MAX_LOOP_LIMIT_2
[i]Type for TMP_246

Name: TMP_246 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
yPrev_1(uint256) := y_2(uint256)
Finance type key: (40, -1)
[i]Type for yPrev

Name: yPrev Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
TMP_247(uint256) = y_2 (c)* y_2
Finance type key: (40, 40)
[i]Type for TMP_247

Name: TMP_247 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_248(uint256) = TMP_247 (c)+ c_2
[i]Type for TMP_248

Name: TMP_248 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_249(uint256) = y_2 (c)* 2
[i]Type for TMP_249

Name: TMP_249 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: price/exchange rate
TMP_250(uint256) = TMP_249 (c)+ b_1
[i]Type for TMP_250

Name: TMP_250 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: price/exchange rate
TMP_251(uint256) = TMP_250 (c)- D_1
[i]Type for TMP_251

Name: TMP_251 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: price/exchange rate
TMP_252(uint256) = TMP_248 (c)/ TMP_251
[i]Type for TMP_252

Name: TMP_252 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
y_3(uint256) := TMP_252(uint256)
Finance type key: (40, -1)
[i]Type for y

Name: y Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
TMP_253(bool) = LIBRARY_CALL, dest:MathUtils, function:MathUtils.within1(uint256,uint256), arguments:['y_3', 'yPrev_1'] 
[i]Type for TMP_253

Name: TMP_253 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_254(uint256) := i_2(uint256)
Finance type key: (-1, -1)
[i]Type for TMP_254

Name: TMP_254 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_3(uint256) = i_2 (c)+ 1
[i]Type for i

Name: i Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
x_1(uint256) := ϕ(['x_1'])
[i]Type for x

Name: x Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
D_1(uint256) := ϕ(['d_1'])
[i]Type for D

Name: D Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MAX_LOOP_LIMIT_2(uint256) := ϕ(['MAX_LOOP_LIMIT_0'])
[i]Type for MAX_LOOP_LIMIT

Name: MAX_LOOP_LIMIT Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
N_A_3(uint256) := ϕ(['N_A_0', 'N_A_1'])
[i]Type for N_A

Name: N_A Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
A_PRECISION_2(uint256) := ϕ(['A_PRECISION_0'])
[i]Type for A_PRECISION

Name: A_PRECISION Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_236(uint256) = D_1 (c)* D_1
[i]Type for TMP_236

Name: TMP_236 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_237(uint256) = x_1 (c)* 2
[i]Type for TMP_237

Name: TMP_237 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_238(uint256) = TMP_236 (c)/ TMP_237
[i]Type for TMP_238

Name: TMP_238 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
c_1(uint256) := TMP_238(uint256)
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_239(uint256) = c_1 (c)* D_1
[i]Type for TMP_239

Name: TMP_239 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_240(uint256) = N_A_3 (c)* 2
[i]Type for TMP_240

Name: TMP_240 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
TMP_241(uint256) = TMP_240 (c)/ A_PRECISION_2
[i]Type for TMP_241

Name: TMP_241 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
TMP_242(uint256) = TMP_239 (c)/ TMP_241
[i]Type for TMP_242

Name: TMP_242 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
c_2(uint256) := TMP_242(uint256)
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_243(uint256) = D_1 (c)* A_PRECISION_2
[i]Type for TMP_243

Name: TMP_243 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_244(uint256) = TMP_243 (c)/ N_A_3
[i]Type for TMP_244

Name: TMP_244 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_245(uint256) = x_1 (c)+ TMP_244
[i]Type for TMP_245

Name: TMP_245 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
b_1(uint256) := TMP_245(uint256)
Finance type key: (-1, -1)
[i]Type for b

Name: b Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
y_1(uint256) := D_1(uint256)
Finance type key: (-1, -1)
[i]Type for y

Name: y Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for i

Name: i Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
y_2(uint256) := ϕ(['y_1', 'y_3'])
[i]Type for y

Name: y Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
i_2(uint256) := ϕ(['i_1', 'i_3'])
[i]Type for i

Name: i Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_246(bool) = i_2 < MAX_LOOP_LIMIT_2
[i]Type for TMP_246

Name: TMP_246 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
yPrev_1(uint256) := y_2(uint256)
Finance type key: (40, -1)
[i]Type for yPrev

Name: yPrev Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
TMP_247(uint256) = y_2 (c)* y_2
Finance type key: (40, 40)
[i]Type for TMP_247

Name: TMP_247 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_248(uint256) = TMP_247 (c)+ c_2
[i]Type for TMP_248

Name: TMP_248 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_249(uint256) = y_2 (c)* 2
[i]Type for TMP_249

Name: TMP_249 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: price/exchange rate
TMP_250(uint256) = TMP_249 (c)+ b_1
[i]Type for TMP_250

Name: TMP_250 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: price/exchange rate
TMP_251(uint256) = TMP_250 (c)- D_1
[i]Type for TMP_251

Name: TMP_251 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: price/exchange rate
TMP_252(uint256) = TMP_248 (c)/ TMP_251
[i]Type for TMP_252

Name: TMP_252 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
y_3(uint256) := TMP_252(uint256)
Finance type key: (40, -1)
[i]Type for y

Name: y Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
TMP_253(bool) = LIBRARY_CALL, dest:MathUtils, function:MathUtils.within1(uint256,uint256), arguments:['y_3', 'yPrev_1'] 
[i]Type for TMP_253

Name: TMP_253 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_254(uint256) := i_2(uint256)
Finance type key: (-1, -1)
[i]Type for TMP_254

Name: TMP_254 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_3(uint256) = i_2 (c)+ 1
[i]Type for i

Name: i Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
[i]Type for TMP_202

Name: TMP_202 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
y_1(uint256) := TMP_202(uint256)
Finance type key: (-1, -1)
[i]Type for y

Name: y Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_203(uint256) = xpOut_3 (c)- y_1
[i]Type for TMP_203

Name: TMP_203 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_204(uint256) = TMP_203 (c)- 1
[i]Type for TMP_204

Name: TMP_204 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
dy_1(uint256) := TMP_204(uint256)
Finance type key: (-1, -1)
[i]Type for dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
dy_2(uint256) = dy_1 (c)/ token1PrecisionMultiplier_4
[i]Type for dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
dy_3(uint256) = dy_1 (c)/ token0PrecisionMultiplier_4
[i]Type for dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
[i]Type for TMP_125

Name: TMP_125 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
amountOut_1(uint256) := TMP_125(uint256)
Finance type key: (-1, -1)
[i]Type for amountOut

Name: amountOut Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_130(uint256) = amountIn_2 (c)- fee_scope_0_1
[i]Type for TMP_130

Name: TMP_130 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_131(uint256) = INTERNAL_CALL, HybridPool._getAmountOut(uint256,uint256,uint256,bool)(TMP_130,_reserve0_1,_reserve1_1,False)
amountIn_1(uint256) := ϕ(['TMP_153', 'TMP_124', 'TMP_103', 'TMP_112', 'TMP_130', 'TMP_140', 'amountIn_3'])
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_reserve0_1(uint256) := ϕ(['_reserve0_1', '_reserve0_1', '_reserve0_1', 'TMP_104', 'TMP_113'])
[i]Type for _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
_reserve1_1(uint256) := ϕ(['_reserve1_1', 'TMP_105', 'TMP_114', '_reserve1_1', '_reserve1_1'])
[i]Type for _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
token0PrecisionMultiplier_2(uint256) := ϕ(['token0PrecisionMultiplier_0', 'token0PrecisionMultiplier_1', 'token0PrecisionMultiplier_4'])
[i]Type for token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
token1PrecisionMultiplier_2(uint256) := ϕ(['token1PrecisionMultiplier_4', 'token1PrecisionMultiplier_1', 'token1PrecisionMultiplier_0'])
[i]Type for token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_196(uint256) = _reserve0_1 (c)* token0PrecisionMultiplier_2
[i]Type for TMP_196

Name: TMP_196 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
xpIn_1(uint256) := TMP_196(uint256)
Finance type key: (-1, -1)
[i]Type for xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_197(uint256) = _reserve1_1 (c)* token1PrecisionMultiplier_2
[i]Type for TMP_197

Name: TMP_197 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
xpOut_1(uint256) := TMP_197(uint256)
Finance type key: (-1, -1)
[i]Type for xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_198(uint256) = _reserve1_1 (c)* token1PrecisionMultiplier_2
[i]Type for TMP_198

Name: TMP_198 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
xpIn_2(uint256) := TMP_198(uint256)
Finance type key: (-1, -1)
[i]Type for xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
amountIn_2(uint256) = amountIn_1 (c)* token0PrecisionMultiplier_2
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_199(uint256) = _reserve0_1 (c)* token0PrecisionMultiplier_2
[i]Type for TMP_199

Name: TMP_199 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
xpOut_2(uint256) := TMP_199(uint256)
Finance type key: (-1, -1)
[i]Type for xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
amountIn_4(uint256) := ϕ(['amountIn_3', 'amountIn_2'])
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
xpIn_3(uint256) := ϕ(['xpIn_1', 'xpIn_2'])
[i]Type for xpIn

Name: xpIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
xpOut_3(uint256) := ϕ(['xpOut_1', 'xpOut_2'])
[i]Type for xpOut

Name: xpOut Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_200(uint256) = INTERNAL_CALL, HybridPool._computeLiquidityFromAdjustedBalances(uint256,uint256)(xpIn_3,xpOut_3)
xp0_1(uint256) := ϕ(['xpIn_3', 'xp0_1'])
[i]Type for xp0

Name: xp0 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
xp1_1(uint256) := ϕ(['xpOut_3', 'xp1_1'])
[i]Type for xp1

Name: xp1 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MAX_LOOP_LIMIT_1(uint256) := ϕ(['MAX_LOOP_LIMIT_0'])
[i]Type for MAX_LOOP_LIMIT

Name: MAX_LOOP_LIMIT Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
N_A_2(uint256) := ϕ(['N_A_0', 'N_A_1'])
[i]Type for N_A

Name: N_A Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
A_PRECISION_1(uint256) := ϕ(['A_PRECISION_0'])
[i]Type for A_PRECISION

Name: A_PRECISION Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_215(uint256) = xp0_1 (c)+ xp1_1
[i]Type for TMP_215

Name: TMP_215 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
s_1(uint256) := TMP_215(uint256)
Finance type key: (-1, -1)
[i]Type for s

Name: s Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_216(bool) = s_1 == 0
[i]Type for TMP_216

Name: TMP_216 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
computed_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for computed

Name: computed Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
D_1(uint256) := s_1(uint256)
Finance type key: (-1, -1)
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
D_2(uint256) := ϕ(['D_3', 'D_1'])
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
i_2(uint256) := ϕ(['i_3', 'i_1'])
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_217(bool) = i_2 < MAX_LOOP_LIMIT_1
[i]Type for TMP_217

Name: TMP_217 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_218(uint256) = D_2 (c)* D_2
Finance type key: (40, 40)
[i]Type for TMP_218

Name: TMP_218 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_219(uint256) = TMP_218 (c)/ xp0_1
[i]Type for TMP_219

Name: TMP_219 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_220(uint256) = TMP_219 (c)* D_2
[i]Type for TMP_220

Name: TMP_220 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
TMP_221(uint256) = TMP_220 (c)/ xp1_1
[i]Type for TMP_221

Name: TMP_221 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
TMP_222(uint256) = TMP_221 (c)/ 4
[i]Type for TMP_222

Name: TMP_222 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: price/exchange rate
dP_1(uint256) := TMP_222(uint256)
Finance type key: (40, -1)
[i]Type for dP

Name: dP Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: price/exchange rate
prevD_1(uint256) := D_2(uint256)
Finance type key: (40, -1)
[i]Type for prevD

Name: prevD Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
computed_2(uint256) := D_3(uint256)
Finance type key: (40, -1)
[i]Type for computed

Name: computed Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
TMP_223(uint256) = N_A_2 (c)* s_1
[i]Type for TMP_223

Name: TMP_223 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_224(uint256) = TMP_223 (c)/ A_PRECISION_1
[i]Type for TMP_224

Name: TMP_224 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_225(uint256) = 2 (c)* dP_1
[i]Type for TMP_225

Name: TMP_225 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: price/exchange rate
TMP_226(uint256) = TMP_224 (c)+ TMP_225
[i]Type for TMP_226

Name: TMP_226 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: price/exchange rate
TMP_227(uint256) = TMP_226 (c)* D_2
Finance type key: (40, 40)
[i]Type for TMP_227

Name: TMP_227 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_228(uint256) = N_A_2 (c)/ A_PRECISION_1
[i]Type for TMP_228

Name: TMP_228 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_229(uint256) = TMP_228 (c)- 1
[i]Type for TMP_229

Name: TMP_229 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
TMP_230(uint256) = TMP_229 (c)* D_2
[i]Type for TMP_230

Name: TMP_230 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: price/exchange rate
TMP_231(uint256) = 3 (c)* dP_1
[i]Type for TMP_231

Name: TMP_231 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 12
Fields: 
Finance Type: price/exchange rate
TMP_232(uint256) = TMP_230 (c)+ TMP_231
Finance type key: (40, 40)
[i]Type for TMP_232

Name: TMP_232 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 13
Fields: 
Finance Type: price/exchange rate
TMP_233(uint256) = TMP_227 (c)/ TMP_232
[i]Type for TMP_233

Name: TMP_233 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
D_3(uint256) := TMP_233(uint256)
Finance type key: (40, -1)
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
TMP_234(bool) = LIBRARY_CALL, dest:MathUtils, function:MathUtils.within1(uint256,uint256), arguments:['D_3', 'prevD_1'] 
[i]Type for TMP_234

Name: TMP_234 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_235(uint256) := i_2(uint256)
Finance type key: (-1, -1)
[i]Type for TMP_235

Name: TMP_235 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_3(uint256) = i_2 (c)+ 1
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
xp0_1(uint256) := ϕ(['xpIn_3', 'xp0_1'])
[i]Type for xp0

Name: xp0 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
xp1_1(uint256) := ϕ(['xpOut_3', 'xp1_1'])
[i]Type for xp1

Name: xp1 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MAX_LOOP_LIMIT_1(uint256) := ϕ(['MAX_LOOP_LIMIT_0'])
[i]Type for MAX_LOOP_LIMIT

Name: MAX_LOOP_LIMIT Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
N_A_2(uint256) := ϕ(['N_A_0', 'N_A_1'])
[i]Type for N_A

Name: N_A Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
A_PRECISION_1(uint256) := ϕ(['A_PRECISION_0'])
[i]Type for A_PRECISION

Name: A_PRECISION Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_215(uint256) = xp0_1 (c)+ xp1_1
[i]Type for TMP_215

Name: TMP_215 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
s_1(uint256) := TMP_215(uint256)
Finance type key: (-1, -1)
[i]Type for s

Name: s Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_216(bool) = s_1 == 0
[i]Type for TMP_216

Name: TMP_216 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
computed_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for computed

Name: computed Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
D_1(uint256) := s_1(uint256)
Finance type key: (-1, -1)
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
D_2(uint256) := ϕ(['D_3', 'D_1'])
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
i_2(uint256) := ϕ(['i_3', 'i_1'])
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_217(bool) = i_2 < MAX_LOOP_LIMIT_1
[i]Type for TMP_217

Name: TMP_217 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_218(uint256) = D_2 (c)* D_2
Finance type key: (40, 40)
[i]Type for TMP_218

Name: TMP_218 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_219(uint256) = TMP_218 (c)/ xp0_1
[i]Type for TMP_219

Name: TMP_219 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_220(uint256) = TMP_219 (c)* D_2
[i]Type for TMP_220

Name: TMP_220 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
TMP_221(uint256) = TMP_220 (c)/ xp1_1
[i]Type for TMP_221

Name: TMP_221 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
TMP_222(uint256) = TMP_221 (c)/ 4
[i]Type for TMP_222

Name: TMP_222 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: price/exchange rate
dP_1(uint256) := TMP_222(uint256)
Finance type key: (40, -1)
[i]Type for dP

Name: dP Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: price/exchange rate
prevD_1(uint256) := D_2(uint256)
Finance type key: (40, -1)
[i]Type for prevD

Name: prevD Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
computed_2(uint256) := D_3(uint256)
Finance type key: (40, -1)
[i]Type for computed

Name: computed Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
TMP_223(uint256) = N_A_2 (c)* s_1
[i]Type for TMP_223

Name: TMP_223 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_224(uint256) = TMP_223 (c)/ A_PRECISION_1
[i]Type for TMP_224

Name: TMP_224 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_225(uint256) = 2 (c)* dP_1
[i]Type for TMP_225

Name: TMP_225 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: price/exchange rate
TMP_226(uint256) = TMP_224 (c)+ TMP_225
[i]Type for TMP_226

Name: TMP_226 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: price/exchange rate
TMP_227(uint256) = TMP_226 (c)* D_2
Finance type key: (40, 40)
[i]Type for TMP_227

Name: TMP_227 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_228(uint256) = N_A_2 (c)/ A_PRECISION_1
[i]Type for TMP_228

Name: TMP_228 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_229(uint256) = TMP_228 (c)- 1
[i]Type for TMP_229

Name: TMP_229 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
TMP_230(uint256) = TMP_229 (c)* D_2
[i]Type for TMP_230

Name: TMP_230 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: price/exchange rate
TMP_231(uint256) = 3 (c)* dP_1
[i]Type for TMP_231

Name: TMP_231 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 12
Fields: 
Finance Type: price/exchange rate
TMP_232(uint256) = TMP_230 (c)+ TMP_231
Finance type key: (40, 40)
[i]Type for TMP_232

Name: TMP_232 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 13
Fields: 
Finance Type: price/exchange rate
TMP_233(uint256) = TMP_227 (c)/ TMP_232
[i]Type for TMP_233

Name: TMP_233 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
D_3(uint256) := TMP_233(uint256)
Finance type key: (40, -1)
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
TMP_234(bool) = LIBRARY_CALL, dest:MathUtils, function:MathUtils.within1(uint256,uint256), arguments:['D_3', 'prevD_1'] 
[i]Type for TMP_234

Name: TMP_234 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_235(uint256) := i_2(uint256)
Finance type key: (-1, -1)
[i]Type for TMP_235

Name: TMP_235 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_3(uint256) = i_2 (c)+ 1
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
[i]Type for TMP_200

Name: TMP_200 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
d_1(uint256) := TMP_200(uint256)
Finance type key: (-1, -1)
[i]Type for d

Name: d Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_201(uint256) = xpIn_3 (c)+ amountIn_4
[i]Type for TMP_201

Name: TMP_201 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
x_1(uint256) := TMP_201(uint256)
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
amountIn_3(uint256) = amountIn_1 (c)* token1PrecisionMultiplier_2
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_202(uint256) = INTERNAL_CALL, HybridPool._getY(uint256,uint256)(x_1,d_1)
x_1(uint256) := ϕ(['x_1'])
[i]Type for x

Name: x Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
D_1(uint256) := ϕ(['d_1'])
[i]Type for D

Name: D Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MAX_LOOP_LIMIT_2(uint256) := ϕ(['MAX_LOOP_LIMIT_0'])
[i]Type for MAX_LOOP_LIMIT

Name: MAX_LOOP_LIMIT Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
N_A_3(uint256) := ϕ(['N_A_0', 'N_A_1'])
[i]Type for N_A

Name: N_A Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
A_PRECISION_2(uint256) := ϕ(['A_PRECISION_0'])
[i]Type for A_PRECISION

Name: A_PRECISION Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_236(uint256) = D_1 (c)* D_1
[i]Type for TMP_236

Name: TMP_236 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_237(uint256) = x_1 (c)* 2
[i]Type for TMP_237

Name: TMP_237 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_238(uint256) = TMP_236 (c)/ TMP_237
[i]Type for TMP_238

Name: TMP_238 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
c_1(uint256) := TMP_238(uint256)
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_239(uint256) = c_1 (c)* D_1
[i]Type for TMP_239

Name: TMP_239 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_240(uint256) = N_A_3 (c)* 2
[i]Type for TMP_240

Name: TMP_240 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
TMP_241(uint256) = TMP_240 (c)/ A_PRECISION_2
[i]Type for TMP_241

Name: TMP_241 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
TMP_242(uint256) = TMP_239 (c)/ TMP_241
[i]Type for TMP_242

Name: TMP_242 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
c_2(uint256) := TMP_242(uint256)
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_243(uint256) = D_1 (c)* A_PRECISION_2
[i]Type for TMP_243

Name: TMP_243 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_244(uint256) = TMP_243 (c)/ N_A_3
[i]Type for TMP_244

Name: TMP_244 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_245(uint256) = x_1 (c)+ TMP_244
[i]Type for TMP_245

Name: TMP_245 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
b_1(uint256) := TMP_245(uint256)
Finance type key: (-1, -1)
[i]Type for b

Name: b Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
y_1(uint256) := D_1(uint256)
Finance type key: (-1, -1)
[i]Type for y

Name: y Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for i

Name: i Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
y_2(uint256) := ϕ(['y_1', 'y_3'])
[i]Type for y

Name: y Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
i_2(uint256) := ϕ(['i_1', 'i_3'])
[i]Type for i

Name: i Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_246(bool) = i_2 < MAX_LOOP_LIMIT_2
[i]Type for TMP_246

Name: TMP_246 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
yPrev_1(uint256) := y_2(uint256)
Finance type key: (40, -1)
[i]Type for yPrev

Name: yPrev Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
TMP_247(uint256) = y_2 (c)* y_2
Finance type key: (40, 40)
[i]Type for TMP_247

Name: TMP_247 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_248(uint256) = TMP_247 (c)+ c_2
[i]Type for TMP_248

Name: TMP_248 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_249(uint256) = y_2 (c)* 2
[i]Type for TMP_249

Name: TMP_249 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: price/exchange rate
TMP_250(uint256) = TMP_249 (c)+ b_1
[i]Type for TMP_250

Name: TMP_250 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: price/exchange rate
TMP_251(uint256) = TMP_250 (c)- D_1
[i]Type for TMP_251

Name: TMP_251 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: price/exchange rate
TMP_252(uint256) = TMP_248 (c)/ TMP_251
[i]Type for TMP_252

Name: TMP_252 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
y_3(uint256) := TMP_252(uint256)
Finance type key: (40, -1)
[i]Type for y

Name: y Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
TMP_253(bool) = LIBRARY_CALL, dest:MathUtils, function:MathUtils.within1(uint256,uint256), arguments:['y_3', 'yPrev_1'] 
[i]Type for TMP_253

Name: TMP_253 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_254(uint256) := i_2(uint256)
Finance type key: (-1, -1)
[i]Type for TMP_254

Name: TMP_254 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_3(uint256) = i_2 (c)+ 1
[i]Type for i

Name: i Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
x_1(uint256) := ϕ(['x_1'])
[i]Type for x

Name: x Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
D_1(uint256) := ϕ(['d_1'])
[i]Type for D

Name: D Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MAX_LOOP_LIMIT_2(uint256) := ϕ(['MAX_LOOP_LIMIT_0'])
[i]Type for MAX_LOOP_LIMIT

Name: MAX_LOOP_LIMIT Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
N_A_3(uint256) := ϕ(['N_A_0', 'N_A_1'])
[i]Type for N_A

Name: N_A Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
A_PRECISION_2(uint256) := ϕ(['A_PRECISION_0'])
[i]Type for A_PRECISION

Name: A_PRECISION Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_236(uint256) = D_1 (c)* D_1
[i]Type for TMP_236

Name: TMP_236 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_237(uint256) = x_1 (c)* 2
[i]Type for TMP_237

Name: TMP_237 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_238(uint256) = TMP_236 (c)/ TMP_237
[i]Type for TMP_238

Name: TMP_238 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
c_1(uint256) := TMP_238(uint256)
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_239(uint256) = c_1 (c)* D_1
[i]Type for TMP_239

Name: TMP_239 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_240(uint256) = N_A_3 (c)* 2
[i]Type for TMP_240

Name: TMP_240 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
TMP_241(uint256) = TMP_240 (c)/ A_PRECISION_2
[i]Type for TMP_241

Name: TMP_241 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
TMP_242(uint256) = TMP_239 (c)/ TMP_241
[i]Type for TMP_242

Name: TMP_242 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
c_2(uint256) := TMP_242(uint256)
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_243(uint256) = D_1 (c)* A_PRECISION_2
[i]Type for TMP_243

Name: TMP_243 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_244(uint256) = TMP_243 (c)/ N_A_3
[i]Type for TMP_244

Name: TMP_244 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_245(uint256) = x_1 (c)+ TMP_244
[i]Type for TMP_245

Name: TMP_245 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
b_1(uint256) := TMP_245(uint256)
Finance type key: (-1, -1)
[i]Type for b

Name: b Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
y_1(uint256) := D_1(uint256)
Finance type key: (-1, -1)
[i]Type for y

Name: y Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for i

Name: i Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
y_2(uint256) := ϕ(['y_1', 'y_3'])
[i]Type for y

Name: y Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
i_2(uint256) := ϕ(['i_1', 'i_3'])
[i]Type for i

Name: i Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_246(bool) = i_2 < MAX_LOOP_LIMIT_2
[i]Type for TMP_246

Name: TMP_246 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
yPrev_1(uint256) := y_2(uint256)
Finance type key: (40, -1)
[i]Type for yPrev

Name: yPrev Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
TMP_247(uint256) = y_2 (c)* y_2
Finance type key: (40, 40)
[i]Type for TMP_247

Name: TMP_247 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_248(uint256) = TMP_247 (c)+ c_2
[i]Type for TMP_248

Name: TMP_248 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_249(uint256) = y_2 (c)* 2
[i]Type for TMP_249

Name: TMP_249 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: price/exchange rate
TMP_250(uint256) = TMP_249 (c)+ b_1
[i]Type for TMP_250

Name: TMP_250 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: price/exchange rate
TMP_251(uint256) = TMP_250 (c)- D_1
[i]Type for TMP_251

Name: TMP_251 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: price/exchange rate
TMP_252(uint256) = TMP_248 (c)/ TMP_251
[i]Type for TMP_252

Name: TMP_252 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
y_3(uint256) := TMP_252(uint256)
Finance type key: (40, -1)
[i]Type for y

Name: y Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
TMP_253(bool) = LIBRARY_CALL, dest:MathUtils, function:MathUtils.within1(uint256,uint256), arguments:['y_3', 'yPrev_1'] 
[i]Type for TMP_253

Name: TMP_253 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_254(uint256) := i_2(uint256)
Finance type key: (-1, -1)
[i]Type for TMP_254

Name: TMP_254 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_3(uint256) = i_2 (c)+ 1
[i]Type for i

Name: i Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
[i]Type for TMP_202

Name: TMP_202 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
y_1(uint256) := TMP_202(uint256)
Finance type key: (-1, -1)
[i]Type for y

Name: y Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_203(uint256) = xpOut_3 (c)- y_1
[i]Type for TMP_203

Name: TMP_203 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_204(uint256) = TMP_203 (c)- 1
[i]Type for TMP_204

Name: TMP_204 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
dy_1(uint256) := TMP_204(uint256)
Finance type key: (-1, -1)
[i]Type for dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
dy_2(uint256) = dy_1 (c)/ token1PrecisionMultiplier_4
[i]Type for dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
dy_3(uint256) = dy_1 (c)/ token0PrecisionMultiplier_4
[i]Type for dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
amountIn_1(uint256) := ϕ(['TMP_153', 'TMP_124', 'TMP_103', 'TMP_112', 'TMP_130', 'TMP_140', 'amountIn_3'])
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_reserve0_1(uint256) := ϕ(['_reserve0_1', '_reserve0_1', '_reserve0_1', 'TMP_104', 'TMP_113'])
[i]Type for _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
_reserve1_1(uint256) := ϕ(['_reserve1_1', 'TMP_105', 'TMP_114', '_reserve1_1', '_reserve1_1'])
[i]Type for _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
token0PrecisionMultiplier_2(uint256) := ϕ(['token0PrecisionMultiplier_0', 'token0PrecisionMultiplier_1', 'token0PrecisionMultiplier_4'])
[i]Type for token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
token1PrecisionMultiplier_2(uint256) := ϕ(['token1PrecisionMultiplier_4', 'token1PrecisionMultiplier_1', 'token1PrecisionMultiplier_0'])
[i]Type for token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_196(uint256) = _reserve0_1 (c)* token0PrecisionMultiplier_2
[i]Type for TMP_196

Name: TMP_196 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
xpIn_1(uint256) := TMP_196(uint256)
Finance type key: (-1, -1)
[i]Type for xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_197(uint256) = _reserve1_1 (c)* token1PrecisionMultiplier_2
[i]Type for TMP_197

Name: TMP_197 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
xpOut_1(uint256) := TMP_197(uint256)
Finance type key: (-1, -1)
[i]Type for xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_198(uint256) = _reserve1_1 (c)* token1PrecisionMultiplier_2
[i]Type for TMP_198

Name: TMP_198 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
xpIn_2(uint256) := TMP_198(uint256)
Finance type key: (-1, -1)
[i]Type for xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
amountIn_2(uint256) = amountIn_1 (c)* token0PrecisionMultiplier_2
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_199(uint256) = _reserve0_1 (c)* token0PrecisionMultiplier_2
[i]Type for TMP_199

Name: TMP_199 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
xpOut_2(uint256) := TMP_199(uint256)
Finance type key: (-1, -1)
[i]Type for xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
amountIn_4(uint256) := ϕ(['amountIn_3', 'amountIn_2'])
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
xpIn_3(uint256) := ϕ(['xpIn_1', 'xpIn_2'])
[i]Type for xpIn

Name: xpIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
xpOut_3(uint256) := ϕ(['xpOut_1', 'xpOut_2'])
[i]Type for xpOut

Name: xpOut Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_200(uint256) = INTERNAL_CALL, HybridPool._computeLiquidityFromAdjustedBalances(uint256,uint256)(xpIn_3,xpOut_3)
xp0_1(uint256) := ϕ(['xpIn_3', 'xp0_1'])
[i]Type for xp0

Name: xp0 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
xp1_1(uint256) := ϕ(['xpOut_3', 'xp1_1'])
[i]Type for xp1

Name: xp1 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MAX_LOOP_LIMIT_1(uint256) := ϕ(['MAX_LOOP_LIMIT_0'])
[i]Type for MAX_LOOP_LIMIT

Name: MAX_LOOP_LIMIT Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
N_A_2(uint256) := ϕ(['N_A_0', 'N_A_1'])
[i]Type for N_A

Name: N_A Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
A_PRECISION_1(uint256) := ϕ(['A_PRECISION_0'])
[i]Type for A_PRECISION

Name: A_PRECISION Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_215(uint256) = xp0_1 (c)+ xp1_1
[i]Type for TMP_215

Name: TMP_215 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
s_1(uint256) := TMP_215(uint256)
Finance type key: (-1, -1)
[i]Type for s

Name: s Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_216(bool) = s_1 == 0
[i]Type for TMP_216

Name: TMP_216 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
computed_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for computed

Name: computed Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
D_1(uint256) := s_1(uint256)
Finance type key: (-1, -1)
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
D_2(uint256) := ϕ(['D_3', 'D_1'])
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
i_2(uint256) := ϕ(['i_3', 'i_1'])
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_217(bool) = i_2 < MAX_LOOP_LIMIT_1
[i]Type for TMP_217

Name: TMP_217 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_218(uint256) = D_2 (c)* D_2
Finance type key: (40, 40)
[i]Type for TMP_218

Name: TMP_218 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_219(uint256) = TMP_218 (c)/ xp0_1
[i]Type for TMP_219

Name: TMP_219 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_220(uint256) = TMP_219 (c)* D_2
[i]Type for TMP_220

Name: TMP_220 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
TMP_221(uint256) = TMP_220 (c)/ xp1_1
[i]Type for TMP_221

Name: TMP_221 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
TMP_222(uint256) = TMP_221 (c)/ 4
[i]Type for TMP_222

Name: TMP_222 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: price/exchange rate
dP_1(uint256) := TMP_222(uint256)
Finance type key: (40, -1)
[i]Type for dP

Name: dP Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: price/exchange rate
prevD_1(uint256) := D_2(uint256)
Finance type key: (40, -1)
[i]Type for prevD

Name: prevD Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
computed_2(uint256) := D_3(uint256)
Finance type key: (40, -1)
[i]Type for computed

Name: computed Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
TMP_223(uint256) = N_A_2 (c)* s_1
[i]Type for TMP_223

Name: TMP_223 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_224(uint256) = TMP_223 (c)/ A_PRECISION_1
[i]Type for TMP_224

Name: TMP_224 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_225(uint256) = 2 (c)* dP_1
[i]Type for TMP_225

Name: TMP_225 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: price/exchange rate
TMP_226(uint256) = TMP_224 (c)+ TMP_225
[i]Type for TMP_226

Name: TMP_226 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: price/exchange rate
TMP_227(uint256) = TMP_226 (c)* D_2
Finance type key: (40, 40)
[i]Type for TMP_227

Name: TMP_227 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_228(uint256) = N_A_2 (c)/ A_PRECISION_1
[i]Type for TMP_228

Name: TMP_228 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_229(uint256) = TMP_228 (c)- 1
[i]Type for TMP_229

Name: TMP_229 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
TMP_230(uint256) = TMP_229 (c)* D_2
[i]Type for TMP_230

Name: TMP_230 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: price/exchange rate
TMP_231(uint256) = 3 (c)* dP_1
[i]Type for TMP_231

Name: TMP_231 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 12
Fields: 
Finance Type: price/exchange rate
TMP_232(uint256) = TMP_230 (c)+ TMP_231
Finance type key: (40, 40)
[i]Type for TMP_232

Name: TMP_232 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 13
Fields: 
Finance Type: price/exchange rate
TMP_233(uint256) = TMP_227 (c)/ TMP_232
[i]Type for TMP_233

Name: TMP_233 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
D_3(uint256) := TMP_233(uint256)
Finance type key: (40, -1)
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
TMP_234(bool) = LIBRARY_CALL, dest:MathUtils, function:MathUtils.within1(uint256,uint256), arguments:['D_3', 'prevD_1'] 
[i]Type for TMP_234

Name: TMP_234 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_235(uint256) := i_2(uint256)
Finance type key: (-1, -1)
[i]Type for TMP_235

Name: TMP_235 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_3(uint256) = i_2 (c)+ 1
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
xp0_1(uint256) := ϕ(['xpIn_3', 'xp0_1'])
[i]Type for xp0

Name: xp0 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
xp1_1(uint256) := ϕ(['xpOut_3', 'xp1_1'])
[i]Type for xp1

Name: xp1 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MAX_LOOP_LIMIT_1(uint256) := ϕ(['MAX_LOOP_LIMIT_0'])
[i]Type for MAX_LOOP_LIMIT

Name: MAX_LOOP_LIMIT Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
N_A_2(uint256) := ϕ(['N_A_0', 'N_A_1'])
[i]Type for N_A

Name: N_A Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
A_PRECISION_1(uint256) := ϕ(['A_PRECISION_0'])
[i]Type for A_PRECISION

Name: A_PRECISION Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_215(uint256) = xp0_1 (c)+ xp1_1
[i]Type for TMP_215

Name: TMP_215 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
s_1(uint256) := TMP_215(uint256)
Finance type key: (-1, -1)
[i]Type for s

Name: s Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_216(bool) = s_1 == 0
[i]Type for TMP_216

Name: TMP_216 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
computed_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for computed

Name: computed Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
D_1(uint256) := s_1(uint256)
Finance type key: (-1, -1)
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
D_2(uint256) := ϕ(['D_3', 'D_1'])
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
i_2(uint256) := ϕ(['i_3', 'i_1'])
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_217(bool) = i_2 < MAX_LOOP_LIMIT_1
[i]Type for TMP_217

Name: TMP_217 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_218(uint256) = D_2 (c)* D_2
Finance type key: (40, 40)
[i]Type for TMP_218

Name: TMP_218 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_219(uint256) = TMP_218 (c)/ xp0_1
[i]Type for TMP_219

Name: TMP_219 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_220(uint256) = TMP_219 (c)* D_2
[i]Type for TMP_220

Name: TMP_220 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
TMP_221(uint256) = TMP_220 (c)/ xp1_1
[i]Type for TMP_221

Name: TMP_221 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
TMP_222(uint256) = TMP_221 (c)/ 4
[i]Type for TMP_222

Name: TMP_222 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: price/exchange rate
dP_1(uint256) := TMP_222(uint256)
Finance type key: (40, -1)
[i]Type for dP

Name: dP Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: price/exchange rate
prevD_1(uint256) := D_2(uint256)
Finance type key: (40, -1)
[i]Type for prevD

Name: prevD Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
computed_2(uint256) := D_3(uint256)
Finance type key: (40, -1)
[i]Type for computed

Name: computed Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
TMP_223(uint256) = N_A_2 (c)* s_1
[i]Type for TMP_223

Name: TMP_223 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_224(uint256) = TMP_223 (c)/ A_PRECISION_1
[i]Type for TMP_224

Name: TMP_224 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_225(uint256) = 2 (c)* dP_1
[i]Type for TMP_225

Name: TMP_225 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: price/exchange rate
TMP_226(uint256) = TMP_224 (c)+ TMP_225
[i]Type for TMP_226

Name: TMP_226 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: price/exchange rate
TMP_227(uint256) = TMP_226 (c)* D_2
Finance type key: (40, 40)
[i]Type for TMP_227

Name: TMP_227 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_228(uint256) = N_A_2 (c)/ A_PRECISION_1
[i]Type for TMP_228

Name: TMP_228 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_229(uint256) = TMP_228 (c)- 1
[i]Type for TMP_229

Name: TMP_229 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
TMP_230(uint256) = TMP_229 (c)* D_2
[i]Type for TMP_230

Name: TMP_230 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: price/exchange rate
TMP_231(uint256) = 3 (c)* dP_1
[i]Type for TMP_231

Name: TMP_231 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 12
Fields: 
Finance Type: price/exchange rate
TMP_232(uint256) = TMP_230 (c)+ TMP_231
Finance type key: (40, 40)
[i]Type for TMP_232

Name: TMP_232 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 13
Fields: 
Finance Type: price/exchange rate
TMP_233(uint256) = TMP_227 (c)/ TMP_232
[i]Type for TMP_233

Name: TMP_233 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
D_3(uint256) := TMP_233(uint256)
Finance type key: (40, -1)
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
TMP_234(bool) = LIBRARY_CALL, dest:MathUtils, function:MathUtils.within1(uint256,uint256), arguments:['D_3', 'prevD_1'] 
[i]Type for TMP_234

Name: TMP_234 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_235(uint256) := i_2(uint256)
Finance type key: (-1, -1)
[i]Type for TMP_235

Name: TMP_235 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_3(uint256) = i_2 (c)+ 1
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
[i]Type for TMP_200

Name: TMP_200 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
d_1(uint256) := TMP_200(uint256)
Finance type key: (-1, -1)
[i]Type for d

Name: d Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_201(uint256) = xpIn_3 (c)+ amountIn_4
[i]Type for TMP_201

Name: TMP_201 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
x_1(uint256) := TMP_201(uint256)
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
amountIn_3(uint256) = amountIn_1 (c)* token1PrecisionMultiplier_2
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_202(uint256) = INTERNAL_CALL, HybridPool._getY(uint256,uint256)(x_1,d_1)
x_1(uint256) := ϕ(['x_1'])
[i]Type for x

Name: x Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
D_1(uint256) := ϕ(['d_1'])
[i]Type for D

Name: D Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MAX_LOOP_LIMIT_2(uint256) := ϕ(['MAX_LOOP_LIMIT_0'])
[i]Type for MAX_LOOP_LIMIT

Name: MAX_LOOP_LIMIT Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
N_A_3(uint256) := ϕ(['N_A_0', 'N_A_1'])
[i]Type for N_A

Name: N_A Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
A_PRECISION_2(uint256) := ϕ(['A_PRECISION_0'])
[i]Type for A_PRECISION

Name: A_PRECISION Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_236(uint256) = D_1 (c)* D_1
[i]Type for TMP_236

Name: TMP_236 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_237(uint256) = x_1 (c)* 2
[i]Type for TMP_237

Name: TMP_237 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_238(uint256) = TMP_236 (c)/ TMP_237
[i]Type for TMP_238

Name: TMP_238 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
c_1(uint256) := TMP_238(uint256)
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_239(uint256) = c_1 (c)* D_1
[i]Type for TMP_239

Name: TMP_239 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_240(uint256) = N_A_3 (c)* 2
[i]Type for TMP_240

Name: TMP_240 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
TMP_241(uint256) = TMP_240 (c)/ A_PRECISION_2
[i]Type for TMP_241

Name: TMP_241 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
TMP_242(uint256) = TMP_239 (c)/ TMP_241
[i]Type for TMP_242

Name: TMP_242 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
c_2(uint256) := TMP_242(uint256)
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_243(uint256) = D_1 (c)* A_PRECISION_2
[i]Type for TMP_243

Name: TMP_243 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_244(uint256) = TMP_243 (c)/ N_A_3
[i]Type for TMP_244

Name: TMP_244 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_245(uint256) = x_1 (c)+ TMP_244
[i]Type for TMP_245

Name: TMP_245 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
b_1(uint256) := TMP_245(uint256)
Finance type key: (-1, -1)
[i]Type for b

Name: b Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
y_1(uint256) := D_1(uint256)
Finance type key: (-1, -1)
[i]Type for y

Name: y Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for i

Name: i Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
y_2(uint256) := ϕ(['y_1', 'y_3'])
[i]Type for y

Name: y Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
i_2(uint256) := ϕ(['i_1', 'i_3'])
[i]Type for i

Name: i Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_246(bool) = i_2 < MAX_LOOP_LIMIT_2
[i]Type for TMP_246

Name: TMP_246 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
yPrev_1(uint256) := y_2(uint256)
Finance type key: (40, -1)
[i]Type for yPrev

Name: yPrev Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
TMP_247(uint256) = y_2 (c)* y_2
Finance type key: (40, 40)
[i]Type for TMP_247

Name: TMP_247 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_248(uint256) = TMP_247 (c)+ c_2
[i]Type for TMP_248

Name: TMP_248 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_249(uint256) = y_2 (c)* 2
[i]Type for TMP_249

Name: TMP_249 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: price/exchange rate
TMP_250(uint256) = TMP_249 (c)+ b_1
[i]Type for TMP_250

Name: TMP_250 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: price/exchange rate
TMP_251(uint256) = TMP_250 (c)- D_1
[i]Type for TMP_251

Name: TMP_251 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: price/exchange rate
TMP_252(uint256) = TMP_248 (c)/ TMP_251
[i]Type for TMP_252

Name: TMP_252 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
y_3(uint256) := TMP_252(uint256)
Finance type key: (40, -1)
[i]Type for y

Name: y Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
TMP_253(bool) = LIBRARY_CALL, dest:MathUtils, function:MathUtils.within1(uint256,uint256), arguments:['y_3', 'yPrev_1'] 
[i]Type for TMP_253

Name: TMP_253 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_254(uint256) := i_2(uint256)
Finance type key: (-1, -1)
[i]Type for TMP_254

Name: TMP_254 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_3(uint256) = i_2 (c)+ 1
[i]Type for i

Name: i Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
x_1(uint256) := ϕ(['x_1'])
[i]Type for x

Name: x Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
D_1(uint256) := ϕ(['d_1'])
[i]Type for D

Name: D Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MAX_LOOP_LIMIT_2(uint256) := ϕ(['MAX_LOOP_LIMIT_0'])
[i]Type for MAX_LOOP_LIMIT

Name: MAX_LOOP_LIMIT Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
N_A_3(uint256) := ϕ(['N_A_0', 'N_A_1'])
[i]Type for N_A

Name: N_A Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
A_PRECISION_2(uint256) := ϕ(['A_PRECISION_0'])
[i]Type for A_PRECISION

Name: A_PRECISION Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_236(uint256) = D_1 (c)* D_1
[i]Type for TMP_236

Name: TMP_236 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_237(uint256) = x_1 (c)* 2
[i]Type for TMP_237

Name: TMP_237 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_238(uint256) = TMP_236 (c)/ TMP_237
[i]Type for TMP_238

Name: TMP_238 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
c_1(uint256) := TMP_238(uint256)
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_239(uint256) = c_1 (c)* D_1
[i]Type for TMP_239

Name: TMP_239 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_240(uint256) = N_A_3 (c)* 2
[i]Type for TMP_240

Name: TMP_240 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
TMP_241(uint256) = TMP_240 (c)/ A_PRECISION_2
[i]Type for TMP_241

Name: TMP_241 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
TMP_242(uint256) = TMP_239 (c)/ TMP_241
[i]Type for TMP_242

Name: TMP_242 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
c_2(uint256) := TMP_242(uint256)
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_243(uint256) = D_1 (c)* A_PRECISION_2
[i]Type for TMP_243

Name: TMP_243 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_244(uint256) = TMP_243 (c)/ N_A_3
[i]Type for TMP_244

Name: TMP_244 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_245(uint256) = x_1 (c)+ TMP_244
[i]Type for TMP_245

Name: TMP_245 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
b_1(uint256) := TMP_245(uint256)
Finance type key: (-1, -1)
[i]Type for b

Name: b Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
y_1(uint256) := D_1(uint256)
Finance type key: (-1, -1)
[i]Type for y

Name: y Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for i

Name: i Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
y_2(uint256) := ϕ(['y_1', 'y_3'])
[i]Type for y

Name: y Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
i_2(uint256) := ϕ(['i_1', 'i_3'])
[i]Type for i

Name: i Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_246(bool) = i_2 < MAX_LOOP_LIMIT_2
[i]Type for TMP_246

Name: TMP_246 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
yPrev_1(uint256) := y_2(uint256)
Finance type key: (40, -1)
[i]Type for yPrev

Name: yPrev Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
TMP_247(uint256) = y_2 (c)* y_2
Finance type key: (40, 40)
[i]Type for TMP_247

Name: TMP_247 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_248(uint256) = TMP_247 (c)+ c_2
[i]Type for TMP_248

Name: TMP_248 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_249(uint256) = y_2 (c)* 2
[i]Type for TMP_249

Name: TMP_249 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: price/exchange rate
TMP_250(uint256) = TMP_249 (c)+ b_1
[i]Type for TMP_250

Name: TMP_250 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: price/exchange rate
TMP_251(uint256) = TMP_250 (c)- D_1
[i]Type for TMP_251

Name: TMP_251 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: price/exchange rate
TMP_252(uint256) = TMP_248 (c)/ TMP_251
[i]Type for TMP_252

Name: TMP_252 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
y_3(uint256) := TMP_252(uint256)
Finance type key: (40, -1)
[i]Type for y

Name: y Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
TMP_253(bool) = LIBRARY_CALL, dest:MathUtils, function:MathUtils.within1(uint256,uint256), arguments:['y_3', 'yPrev_1'] 
[i]Type for TMP_253

Name: TMP_253 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_254(uint256) := i_2(uint256)
Finance type key: (-1, -1)
[i]Type for TMP_254

Name: TMP_254 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_3(uint256) = i_2 (c)+ 1
[i]Type for i

Name: i Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
[i]Type for TMP_202

Name: TMP_202 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
y_1(uint256) := TMP_202(uint256)
Finance type key: (-1, -1)
[i]Type for y

Name: y Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_203(uint256) = xpOut_3 (c)- y_1
[i]Type for TMP_203

Name: TMP_203 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_204(uint256) = TMP_203 (c)- 1
[i]Type for TMP_204

Name: TMP_204 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
dy_1(uint256) := TMP_204(uint256)
Finance type key: (-1, -1)
[i]Type for dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
dy_2(uint256) = dy_1 (c)/ token1PrecisionMultiplier_4
[i]Type for dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
dy_3(uint256) = dy_1 (c)/ token0PrecisionMultiplier_4
[i]Type for dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
[i]Type for TMP_131

Name: TMP_131 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
amountOut_2(uint256) := TMP_131(uint256)
Finance type key: (-1, -1)
[i]Type for amountOut

Name: amountOut Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
amountOut_3(uint256) := ϕ(['amountOut_2', 'amountOut_1'])
[i]Type for amountOut

Name: amountOut Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
amountIn_3(uint256) := ϕ(['amountIn_1', 'amountIn_2'])
[i]Type for amountIn

Name: amountIn Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tokenOut_3(address) := ϕ(['tokenOut_1', 'tokenOut_2'])
[i]Type for tokenOut

Name: tokenOut Function: swap
Num: 
Den: 
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
INTERNAL_CALL, HybridPool._transfer(address,uint256,address,bool)(tokenOut_3,amountOut_3,recipient_1,unwrapBento_1)
token_1(address) := ϕ(['tokenOut_3', 'token1_17', 'token1_6', 'token0_5', 'tokenIn_1', 'token0_21', 'tokenIn_1', 'tokenOut_1'])
[i]Type for token

Name: token Function: _transfer
Num: 
Den: 
Address: -996
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['_barFee_1', 'amount0_1', 'amountOut_3', 'fee_3', 'amountOut_1', 'amount1_2', 'amount0_3', 'amount1_1'])
[i]Type for amount

Name: amount Function: _transfer
Num: 
Den: 
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
to_1(address) := ϕ(['recipient_1', 'recipient_1', 'barFeeTo_16', 'barFeeTo_14', 'to_1', 'recipient_1'])
[i]Type for to

Name: to Function: _transfer
Num: 
Den: 
Address: -991
Norm: u
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
unwrapBento_1(bool) := ϕ(['unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1'])
[i]Type for unwrapBento

Name: unwrapBento Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_6(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_74 (->None) := 4052550604(uint256)
Finance type key: (-1, -1)
[i]Type for REF_74

Name: REF_74 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4052550604
Fields: 
Finance Type: undef
TMP_208 = CONVERT this to address
[i]Type for TMP_208

Name: TMP_208 Function: _transfer
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_209(uint256) = INTERNAL_CALL, HybridPool._toShare(address,uint256)(token_1,amount_1)
token_1(address) := ϕ(['token1_21', 'token1_8', 'token0_18', 'token0_7', 'token_1'])
[i]Type for token

Name: token Function: _toShare
Num: 
Den: 
Address: -996
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['amount1_1', 'amount0_1', 'amount0_1', 'amount_1', 'amount1_1'])
[i]Type for input

Name: input Function: _toShare
Num: 
Den: 
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
bento_4(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_5(address) := ϕ(['bento_4', 'bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
output_1(uint256) := TMP_195(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token1_21', 'token1_8', 'token0_18', 'token0_7', 'token_1'])
[i]Type for token

Name: token Function: _toShare
Num: 
Den: 
Address: -996
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['amount1_1', 'amount0_1', 'amount0_1', 'amount_1', 'amount1_1'])
[i]Type for input

Name: input Function: _toShare
Num: 
Den: 
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
bento_4(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_5(address) := ϕ(['bento_4', 'bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
output_1(uint256) := TMP_195(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_209

Name: TMP_209 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_7(address) := ϕ(['bento_5'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
TMP_210(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_74,token_1,TMP_208,to_1,TMP_209)
[i]Type for TMP_210

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_24(bool,bytes) = LOW_LEVEL_CALL, dest:bento_7, function:call, arguments:['TMP_210']  
[i]Type for TUPLE_24

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_8(address) := ϕ(['bento_5', 'bento_7', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
success_1(bool)= UNPACK TUPLE_24 index: 0 
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_70 (->None) := 2547674416(uint256)
Finance type key: (-1, -1)
[i]Type for REF_70

Name: REF_70 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2547674416
Fields: 
Finance Type: undef
TMP_205 = CONVERT this to address
[i]Type for TMP_205

Name: TMP_205 Function: _transfer
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_206(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_70,token_1,TMP_205,to_1,amount_1,0)
[i]Type for TMP_206

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_23(bool,bytes) = LOW_LEVEL_CALL, dest:bento_6, function:call, arguments:['TMP_206']  
[i]Type for TUPLE_23

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_9(address) := ϕ(['bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
success_2(bool)= UNPACK TUPLE_23 index: 0 
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_211(None) = SOLIDITY_CALL require(bool,string)(success_scope_0_0,TRANSFER_FAILED)
[i]Type for TMP_211

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_207(None) = SOLIDITY_CALL require(bool,string)(success_2,WITHDRAW_FAILED)
[i]Type for TMP_207

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['tokenOut_3', 'token1_17', 'token1_6', 'token0_5', 'tokenIn_1', 'token0_21', 'tokenIn_1', 'tokenOut_1'])
[i]Type for token

Name: token Function: _transfer
Num: 
Den: 
Address: -996
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['_barFee_1', 'amount0_1', 'amountOut_3', 'fee_3', 'amountOut_1', 'amount1_2', 'amount0_3', 'amount1_1'])
[i]Type for amount

Name: amount Function: _transfer
Num: 
Den: 
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
to_1(address) := ϕ(['recipient_1', 'recipient_1', 'barFeeTo_16', 'barFeeTo_14', 'to_1', 'recipient_1'])
[i]Type for to

Name: to Function: _transfer
Num: 
Den: 
Address: -991
Norm: u
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
unwrapBento_1(bool) := ϕ(['unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1'])
[i]Type for unwrapBento

Name: unwrapBento Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_6(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_74 (->None) := 4052550604(uint256)
Finance type key: (-1, -1)
[i]Type for REF_74

Name: REF_74 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4052550604
Fields: 
Finance Type: undef
TMP_208 = CONVERT this to address
[i]Type for TMP_208

Name: TMP_208 Function: _transfer
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_209(uint256) = INTERNAL_CALL, HybridPool._toShare(address,uint256)(token_1,amount_1)
token_1(address) := ϕ(['token1_21', 'token1_8', 'token0_18', 'token0_7', 'token_1'])
[i]Type for token

Name: token Function: _toShare
Num: 
Den: 
Address: -996
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['amount1_1', 'amount0_1', 'amount0_1', 'amount_1', 'amount1_1'])
[i]Type for input

Name: input Function: _toShare
Num: 
Den: 
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
bento_4(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_5(address) := ϕ(['bento_4', 'bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
output_1(uint256) := TMP_195(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token1_21', 'token1_8', 'token0_18', 'token0_7', 'token_1'])
[i]Type for token

Name: token Function: _toShare
Num: 
Den: 
Address: -996
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['amount1_1', 'amount0_1', 'amount0_1', 'amount_1', 'amount1_1'])
[i]Type for input

Name: input Function: _toShare
Num: 
Den: 
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
bento_4(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_5(address) := ϕ(['bento_4', 'bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
output_1(uint256) := TMP_195(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_209

Name: TMP_209 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_7(address) := ϕ(['bento_5'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
TMP_210(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_74,token_1,TMP_208,to_1,TMP_209)
[i]Type for TMP_210

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_24(bool,bytes) = LOW_LEVEL_CALL, dest:bento_7, function:call, arguments:['TMP_210']  
[i]Type for TUPLE_24

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_8(address) := ϕ(['bento_5', 'bento_7', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
success_1(bool)= UNPACK TUPLE_24 index: 0 
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_70 (->None) := 2547674416(uint256)
Finance type key: (-1, -1)
[i]Type for REF_70

Name: REF_70 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2547674416
Fields: 
Finance Type: undef
TMP_205 = CONVERT this to address
[i]Type for TMP_205

Name: TMP_205 Function: _transfer
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_206(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_70,token_1,TMP_205,to_1,amount_1,0)
[i]Type for TMP_206

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_23(bool,bytes) = LOW_LEVEL_CALL, dest:bento_6, function:call, arguments:['TMP_206']  
[i]Type for TUPLE_23

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_9(address) := ϕ(['bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
success_2(bool)= UNPACK TUPLE_23 index: 0 
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_211(None) = SOLIDITY_CALL require(bool,string)(success_scope_0_0,TRANSFER_FAILED)
[i]Type for TMP_211

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_207(None) = SOLIDITY_CALL require(bool,string)(success_2,WITHDRAW_FAILED)
[i]Type for TMP_207

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
INTERNAL_CALL, HybridPool._updateReserves()()



flashSwap
MAX_FEE_2(uint256) := ϕ(['MAX_FEE_5', 'MAX_FEE_0', 'MAX_FEE_6', 'MAX_FEE_11'])
[i]Type for MAX_FEE

Name: MAX_FEE Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
swapFee_2(uint256) := ϕ(['swapFee_0', 'swapFee_5', 'swapFee_1', 'swapFee_11', 'swapFee_6'])
[i]Type for swapFee

Name: swapFee Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: simple fee ratio
barFeeTo_2(address) := ϕ(['barFeeTo_0', 'barFeeTo_15', 'barFeeTo_1', 'barFeeTo_17'])
[i]Type for barFeeTo

Name: barFeeTo Function: flashSwap
Num: -1
Den: -1
Address: 7
Norm: u
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
token0_27(address) := ϕ(['token0_10', 'token0_26', 'token0_0', 'token0_19', 'token0_42', 'token0_39', 'token0_32', 'token0_1', 'token0_46', 'token0_22', 'token0_37'])
[i]Type for token0

Name: token0 Function: flashSwap
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
token1_27(address) := ϕ(['token1_1', 'token1_22', 'token1_34', 'token1_37', 'token1_10', 'token1_40', 'token1_0', 'token1_26', 'token1_45', 'token1_18'])
[i]Type for token1

Name: token1 Function: flashSwap
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
MODIFIER_CALL, HybridPool.lock()()
TUPLE_17(address,address,bool,uint256,bytes) = SOLIDITY_CALL abi.decode()(data_1(address,address,bool,uint256,bytes))
[i]Type for TUPLE_17

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tokenIn_1(address)= UNPACK TUPLE_17 index: 0 
[i]Type for tokenIn

Name: tokenIn Function: flashSwap
Num: 
Den: 
Address: -995
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
recipient_1(address)= UNPACK TUPLE_17 index: 1 
[i]Type for recipient

Name: recipient Function: flashSwap
Num: 
Den: 
Address: -990
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
unwrapBento_1(bool)= UNPACK TUPLE_17 index: 2 
[i]Type for unwrapBento

Name: unwrapBento Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
amountIn_1(uint256)= UNPACK TUPLE_17 index: 3 
[i]Type for amountIn

Name: amountIn Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
context_1(bytes)= UNPACK TUPLE_17 index: 4 
[i]Type for context

Name: context Function: flashSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_18(uint256,uint256) = INTERNAL_CALL, HybridPool._getReserves()()
[i]Type for TUPLE_18

Name: TUPLE_18 Function: flashSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token0_29(address) := ϕ(['token0_39'])
[i]Type for token0

Name: token0 Function: flashSwap
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
token1_29(address) := ϕ(['token1_40'])
[i]Type for token1

Name: token1 Function: flashSwap
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
_reserve0_1(uint256)= UNPACK TUPLE_18 index: 0 
[i]Type for _reserve0

Name: _reserve0 Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
_reserve1_1(uint256)= UNPACK TUPLE_18 index: 1 
[i]Type for _reserve1

Name: _reserve1 Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
TMP_136(bool) = tokenIn_1 == token0_29
[i]Type for TMP_136

Name: TMP_136 Function: flashSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_148(bool) = tokenIn_1 == token1_29
[i]Type for TMP_148

Name: TMP_148 Function: flashSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_149(None) = SOLIDITY_CALL require(bool,string)(TMP_148,INVALID_INPUT_TOKEN)
[i]Type for TMP_149

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tokenOut_1(address) := token0_29(address)
Finance type key: (-1, -1)
[i]Type for tokenOut

Name: tokenOut Function: flashSwap
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
tokenOut_2(address) := token1_29(address)
Finance type key: (-1, -1)
[i]Type for tokenOut

Name: tokenOut Function: flashSwap
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
TMP_150(uint256) = INTERNAL_CALL, HybridPool._toAmount(address,uint256)(token1_29,amountIn_1)
token_1(address) := ϕ(['token0_36', 'token0_38', 'token1_29', 'token0_41', 'token1_44', 'token1_33', 'token1_39', 'tokenIn_1', 'token0_29'])
[i]Type for token

Name: token Function: _toAmount
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['TMP_143', '_reserve1_1', 'amountIn_1', 'amountIn_1', 'TMP_156', '_reserve0_1', 'TMP_184', 'TMP_186'])
[i]Type for input

Name: input Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_191 = CONVERT this to address
[i]Type for TMP_191

Name: TMP_191 Function: _toAmount
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_192 = CONVERT TMP_191 to IBentoBoxMinimal
[i]Type for TMP_192

Name: TMP_192 Function: _toAmount
Num: 
Den: 
Address: 8
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
TMP_193(uint256) = HIGH_LEVEL_CALL, dest:TMP_192(IBentoBoxMinimal), function:toAmount, arguments:['token_1', 'input_1', 'False']  
[i]Type for TMP_193

Name: TMP_193 Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
output_1(uint256) := TMP_193(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
RETURN output_1
token_1(address) := ϕ(['token0_36', 'token0_38', 'token1_29', 'token0_41', 'token1_44', 'token1_33', 'token1_39', 'tokenIn_1', 'token0_29'])
[i]Type for token

Name: token Function: _toAmount
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['TMP_143', '_reserve1_1', 'amountIn_1', 'amountIn_1', 'TMP_156', '_reserve0_1', 'TMP_184', 'TMP_186'])
[i]Type for input

Name: input Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_191 = CONVERT this to address
[i]Type for TMP_191

Name: TMP_191 Function: _toAmount
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_192 = CONVERT TMP_191 to IBentoBoxMinimal
[i]Type for TMP_192

Name: TMP_192 Function: _toAmount
Num: 
Den: 
Address: 8
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
TMP_193(uint256) = HIGH_LEVEL_CALL, dest:TMP_192(IBentoBoxMinimal), function:toAmount, arguments:['token_1', 'input_1', 'False']  
[i]Type for TMP_193

Name: TMP_193 Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
output_1(uint256) := TMP_193(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
RETURN output_1
[i]Type for TMP_150

Name: TMP_150 Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
amountIn_2(uint256) := TMP_150(uint256)
Finance type key: (-1, -1)
[i]Type for amountIn

Name: amountIn Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
TMP_137(uint256) = INTERNAL_CALL, HybridPool._toAmount(address,uint256)(token0_29,amountIn_1)
[i]Type for TMP_137

Name: TMP_137 Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
amountIn_3(uint256) := TMP_137(uint256)
Finance type key: (-1, -1)
[i]Type for amountIn

Name: amountIn Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
TMP_151(uint256) = amountIn_2 (c)* swapFee_5
[i]Type for TMP_151

Name: TMP_151 Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
TMP_152(uint256) = TMP_151 (c)/ MAX_FEE_5
[i]Type for TMP_152

Name: TMP_152 Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
fee_1(uint256) := TMP_152(uint256)
Finance type key: (12, -1)
[i]Type for fee

Name: fee Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
TMP_153(uint256) = amountIn_2 (c)- fee_1
[i]Type for TMP_153

Name: TMP_153 Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
TMP_154(uint256) = INTERNAL_CALL, HybridPool._getAmountOut(uint256,uint256,uint256,bool)(TMP_153,_reserve0_1,_reserve1_1,False)
amountIn_1(uint256) := ϕ(['TMP_153', 'TMP_124', 'TMP_103', 'TMP_112', 'TMP_130', 'TMP_140', 'amountIn_3'])
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
_reserve0_1(uint256) := ϕ(['_reserve0_1', '_reserve0_1', '_reserve0_1', 'TMP_104', 'TMP_113'])
[i]Type for _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
_reserve1_1(uint256) := ϕ(['_reserve1_1', 'TMP_105', 'TMP_114', '_reserve1_1', '_reserve1_1'])
[i]Type for _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
token0PrecisionMultiplier_2(uint256) := ϕ(['token0PrecisionMultiplier_0', 'token0PrecisionMultiplier_1', 'token0PrecisionMultiplier_4'])
[i]Type for token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
token1PrecisionMultiplier_2(uint256) := ϕ(['token1PrecisionMultiplier_4', 'token1PrecisionMultiplier_1', 'token1PrecisionMultiplier_0'])
[i]Type for token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_196(uint256) = _reserve0_1 (c)* token0PrecisionMultiplier_2
[i]Type for TMP_196

Name: TMP_196 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
xpIn_1(uint256) := TMP_196(uint256)
Finance type key: (-1, -1)
[i]Type for xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_197(uint256) = _reserve1_1 (c)* token1PrecisionMultiplier_2
[i]Type for TMP_197

Name: TMP_197 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
xpOut_1(uint256) := TMP_197(uint256)
Finance type key: (-1, -1)
[i]Type for xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_198(uint256) = _reserve1_1 (c)* token1PrecisionMultiplier_2
[i]Type for TMP_198

Name: TMP_198 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
xpIn_2(uint256) := TMP_198(uint256)
Finance type key: (-1, -1)
[i]Type for xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
amountIn_2(uint256) = amountIn_1 (c)* token0PrecisionMultiplier_2
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: updated simple fee ratio
TMP_199(uint256) = _reserve0_1 (c)* token0PrecisionMultiplier_2
[i]Type for TMP_199

Name: TMP_199 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
xpOut_2(uint256) := TMP_199(uint256)
Finance type key: (-1, -1)
[i]Type for xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
amountIn_4(uint256) := ϕ(['amountIn_3', 'amountIn_2'])
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
xpIn_3(uint256) := ϕ(['xpIn_1', 'xpIn_2'])
[i]Type for xpIn

Name: xpIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
xpOut_3(uint256) := ϕ(['xpOut_1', 'xpOut_2'])
[i]Type for xpOut

Name: xpOut Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_200(uint256) = INTERNAL_CALL, HybridPool._computeLiquidityFromAdjustedBalances(uint256,uint256)(xpIn_3,xpOut_3)
xp0_1(uint256) := ϕ(['xpIn_3', 'xp0_1'])
[i]Type for xp0

Name: xp0 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
xp1_1(uint256) := ϕ(['xpOut_3', 'xp1_1'])
[i]Type for xp1

Name: xp1 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MAX_LOOP_LIMIT_1(uint256) := ϕ(['MAX_LOOP_LIMIT_0'])
[i]Type for MAX_LOOP_LIMIT

Name: MAX_LOOP_LIMIT Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
N_A_2(uint256) := ϕ(['N_A_0', 'N_A_1'])
[i]Type for N_A

Name: N_A Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
A_PRECISION_1(uint256) := ϕ(['A_PRECISION_0'])
[i]Type for A_PRECISION

Name: A_PRECISION Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_215(uint256) = xp0_1 (c)+ xp1_1
[i]Type for TMP_215

Name: TMP_215 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
s_1(uint256) := TMP_215(uint256)
Finance type key: (-1, -1)
[i]Type for s

Name: s Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_216(bool) = s_1 == 0
[i]Type for TMP_216

Name: TMP_216 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
computed_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for computed

Name: computed Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
D_1(uint256) := s_1(uint256)
Finance type key: (-1, -1)
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
D_2(uint256) := ϕ(['D_3', 'D_1'])
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
i_2(uint256) := ϕ(['i_3', 'i_1'])
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_217(bool) = i_2 < MAX_LOOP_LIMIT_1
[i]Type for TMP_217

Name: TMP_217 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_218(uint256) = D_2 (c)* D_2
Finance type key: (40, 40)
[i]Type for TMP_218

Name: TMP_218 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_219(uint256) = TMP_218 (c)/ xp0_1
[i]Type for TMP_219

Name: TMP_219 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_220(uint256) = TMP_219 (c)* D_2
[i]Type for TMP_220

Name: TMP_220 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
TMP_221(uint256) = TMP_220 (c)/ xp1_1
[i]Type for TMP_221

Name: TMP_221 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
TMP_222(uint256) = TMP_221 (c)/ 4
[i]Type for TMP_222

Name: TMP_222 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: price/exchange rate
dP_1(uint256) := TMP_222(uint256)
Finance type key: (40, -1)
[i]Type for dP

Name: dP Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: price/exchange rate
prevD_1(uint256) := D_2(uint256)
Finance type key: (40, -1)
[i]Type for prevD

Name: prevD Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
computed_2(uint256) := D_3(uint256)
Finance type key: (40, -1)
[i]Type for computed

Name: computed Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
TMP_223(uint256) = N_A_2 (c)* s_1
[i]Type for TMP_223

Name: TMP_223 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_224(uint256) = TMP_223 (c)/ A_PRECISION_1
[i]Type for TMP_224

Name: TMP_224 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_225(uint256) = 2 (c)* dP_1
[i]Type for TMP_225

Name: TMP_225 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: price/exchange rate
TMP_226(uint256) = TMP_224 (c)+ TMP_225
[i]Type for TMP_226

Name: TMP_226 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: price/exchange rate
TMP_227(uint256) = TMP_226 (c)* D_2
Finance type key: (40, 40)
[i]Type for TMP_227

Name: TMP_227 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_228(uint256) = N_A_2 (c)/ A_PRECISION_1
[i]Type for TMP_228

Name: TMP_228 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_229(uint256) = TMP_228 (c)- 1
[i]Type for TMP_229

Name: TMP_229 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
TMP_230(uint256) = TMP_229 (c)* D_2
[i]Type for TMP_230

Name: TMP_230 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: price/exchange rate
TMP_231(uint256) = 3 (c)* dP_1
[i]Type for TMP_231

Name: TMP_231 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 12
Fields: 
Finance Type: price/exchange rate
TMP_232(uint256) = TMP_230 (c)+ TMP_231
Finance type key: (40, 40)
[i]Type for TMP_232

Name: TMP_232 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 13
Fields: 
Finance Type: price/exchange rate
TMP_233(uint256) = TMP_227 (c)/ TMP_232
[i]Type for TMP_233

Name: TMP_233 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
D_3(uint256) := TMP_233(uint256)
Finance type key: (40, -1)
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
TMP_234(bool) = LIBRARY_CALL, dest:MathUtils, function:MathUtils.within1(uint256,uint256), arguments:['D_3', 'prevD_1'] 
[i]Type for TMP_234

Name: TMP_234 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_235(uint256) := i_2(uint256)
Finance type key: (-1, -1)
[i]Type for TMP_235

Name: TMP_235 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_3(uint256) = i_2 (c)+ 1
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
xp0_1(uint256) := ϕ(['xpIn_3', 'xp0_1'])
[i]Type for xp0

Name: xp0 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
xp1_1(uint256) := ϕ(['xpOut_3', 'xp1_1'])
[i]Type for xp1

Name: xp1 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MAX_LOOP_LIMIT_1(uint256) := ϕ(['MAX_LOOP_LIMIT_0'])
[i]Type for MAX_LOOP_LIMIT

Name: MAX_LOOP_LIMIT Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
N_A_2(uint256) := ϕ(['N_A_0', 'N_A_1'])
[i]Type for N_A

Name: N_A Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
A_PRECISION_1(uint256) := ϕ(['A_PRECISION_0'])
[i]Type for A_PRECISION

Name: A_PRECISION Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_215(uint256) = xp0_1 (c)+ xp1_1
[i]Type for TMP_215

Name: TMP_215 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
s_1(uint256) := TMP_215(uint256)
Finance type key: (-1, -1)
[i]Type for s

Name: s Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_216(bool) = s_1 == 0
[i]Type for TMP_216

Name: TMP_216 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
computed_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for computed

Name: computed Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
D_1(uint256) := s_1(uint256)
Finance type key: (-1, -1)
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
D_2(uint256) := ϕ(['D_3', 'D_1'])
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
i_2(uint256) := ϕ(['i_3', 'i_1'])
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_217(bool) = i_2 < MAX_LOOP_LIMIT_1
[i]Type for TMP_217

Name: TMP_217 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_218(uint256) = D_2 (c)* D_2
Finance type key: (40, 40)
[i]Type for TMP_218

Name: TMP_218 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_219(uint256) = TMP_218 (c)/ xp0_1
[i]Type for TMP_219

Name: TMP_219 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_220(uint256) = TMP_219 (c)* D_2
[i]Type for TMP_220

Name: TMP_220 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
TMP_221(uint256) = TMP_220 (c)/ xp1_1
[i]Type for TMP_221

Name: TMP_221 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
TMP_222(uint256) = TMP_221 (c)/ 4
[i]Type for TMP_222

Name: TMP_222 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: price/exchange rate
dP_1(uint256) := TMP_222(uint256)
Finance type key: (40, -1)
[i]Type for dP

Name: dP Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: price/exchange rate
prevD_1(uint256) := D_2(uint256)
Finance type key: (40, -1)
[i]Type for prevD

Name: prevD Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
computed_2(uint256) := D_3(uint256)
Finance type key: (40, -1)
[i]Type for computed

Name: computed Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
TMP_223(uint256) = N_A_2 (c)* s_1
[i]Type for TMP_223

Name: TMP_223 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_224(uint256) = TMP_223 (c)/ A_PRECISION_1
[i]Type for TMP_224

Name: TMP_224 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_225(uint256) = 2 (c)* dP_1
[i]Type for TMP_225

Name: TMP_225 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: price/exchange rate
TMP_226(uint256) = TMP_224 (c)+ TMP_225
[i]Type for TMP_226

Name: TMP_226 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: price/exchange rate
TMP_227(uint256) = TMP_226 (c)* D_2
Finance type key: (40, 40)
[i]Type for TMP_227

Name: TMP_227 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_228(uint256) = N_A_2 (c)/ A_PRECISION_1
[i]Type for TMP_228

Name: TMP_228 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_229(uint256) = TMP_228 (c)- 1
[i]Type for TMP_229

Name: TMP_229 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
TMP_230(uint256) = TMP_229 (c)* D_2
[i]Type for TMP_230

Name: TMP_230 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: price/exchange rate
TMP_231(uint256) = 3 (c)* dP_1
[i]Type for TMP_231

Name: TMP_231 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 12
Fields: 
Finance Type: price/exchange rate
TMP_232(uint256) = TMP_230 (c)+ TMP_231
Finance type key: (40, 40)
[i]Type for TMP_232

Name: TMP_232 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 13
Fields: 
Finance Type: price/exchange rate
TMP_233(uint256) = TMP_227 (c)/ TMP_232
[i]Type for TMP_233

Name: TMP_233 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
D_3(uint256) := TMP_233(uint256)
Finance type key: (40, -1)
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
TMP_234(bool) = LIBRARY_CALL, dest:MathUtils, function:MathUtils.within1(uint256,uint256), arguments:['D_3', 'prevD_1'] 
[i]Type for TMP_234

Name: TMP_234 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_235(uint256) := i_2(uint256)
Finance type key: (-1, -1)
[i]Type for TMP_235

Name: TMP_235 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_3(uint256) = i_2 (c)+ 1
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
[i]Type for TMP_200

Name: TMP_200 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
d_1(uint256) := TMP_200(uint256)
Finance type key: (-1, -1)
[i]Type for d

Name: d Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_201(uint256) = xpIn_3 (c)+ amountIn_4
[i]Type for TMP_201

Name: TMP_201 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
x_1(uint256) := TMP_201(uint256)
Finance type key: (12, -1)
[i]Type for x

Name: x Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
amountIn_3(uint256) = amountIn_1 (c)* token1PrecisionMultiplier_2
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: updated simple fee ratio
TMP_202(uint256) = INTERNAL_CALL, HybridPool._getY(uint256,uint256)(x_1,d_1)
x_1(uint256) := ϕ(['x_1'])
[i]Type for x

Name: x Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
D_1(uint256) := ϕ(['d_1'])
[i]Type for D

Name: D Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MAX_LOOP_LIMIT_2(uint256) := ϕ(['MAX_LOOP_LIMIT_0'])
[i]Type for MAX_LOOP_LIMIT

Name: MAX_LOOP_LIMIT Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
N_A_3(uint256) := ϕ(['N_A_0', 'N_A_1'])
[i]Type for N_A

Name: N_A Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
A_PRECISION_2(uint256) := ϕ(['A_PRECISION_0'])
[i]Type for A_PRECISION

Name: A_PRECISION Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_236(uint256) = D_1 (c)* D_1
[i]Type for TMP_236

Name: TMP_236 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_237(uint256) = x_1 (c)* 2
[i]Type for TMP_237

Name: TMP_237 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
TMP_238(uint256) = TMP_236 (c)/ TMP_237
[i]Type for TMP_238

Name: TMP_238 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
c_1(uint256) := TMP_238(uint256)
Finance type key: (12, -1)
[i]Type for c

Name: c Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
TMP_239(uint256) = c_1 (c)* D_1
[i]Type for TMP_239

Name: TMP_239 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
TMP_240(uint256) = N_A_3 (c)* 2
[i]Type for TMP_240

Name: TMP_240 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
TMP_241(uint256) = TMP_240 (c)/ A_PRECISION_2
[i]Type for TMP_241

Name: TMP_241 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
TMP_242(uint256) = TMP_239 (c)/ TMP_241
[i]Type for TMP_242

Name: TMP_242 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: updated simple fee ratio
c_2(uint256) := TMP_242(uint256)
Finance type key: (12, -1)
[i]Type for c

Name: c Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: updated simple fee ratio
TMP_243(uint256) = D_1 (c)* A_PRECISION_2
[i]Type for TMP_243

Name: TMP_243 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_244(uint256) = TMP_243 (c)/ N_A_3
[i]Type for TMP_244

Name: TMP_244 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_245(uint256) = x_1 (c)+ TMP_244
[i]Type for TMP_245

Name: TMP_245 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
b_1(uint256) := TMP_245(uint256)
Finance type key: (12, -1)
[i]Type for b

Name: b Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
y_1(uint256) := D_1(uint256)
Finance type key: (-1, -1)
[i]Type for y

Name: y Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for i

Name: i Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
y_2(uint256) := ϕ(['y_1', 'y_3'])
[i]Type for y

Name: y Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
i_2(uint256) := ϕ(['i_1', 'i_3'])
[i]Type for i

Name: i Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_246(bool) = i_2 < MAX_LOOP_LIMIT_2
[i]Type for TMP_246

Name: TMP_246 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
yPrev_1(uint256) := y_2(uint256)
Finance type key: (40, -1)
[i]Type for yPrev

Name: yPrev Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
TMP_247(uint256) = y_2 (c)* y_2
Finance type key: (40, 40)
[i]Type for TMP_247

Name: TMP_247 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_248(uint256) = TMP_247 (c)+ c_2
[i]Type for TMP_248

Name: TMP_248 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: updated simple fee ratio
TMP_249(uint256) = y_2 (c)* 2
[i]Type for TMP_249

Name: TMP_249 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: price/exchange rate
TMP_250(uint256) = TMP_249 (c)+ b_1
Finance type key: (40, 12)
[i]Type for TMP_250

Name: TMP_250 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
TMP_251(uint256) = TMP_250 (c)- D_1
[i]Type for TMP_251

Name: TMP_251 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
TMP_252(uint256) = TMP_248 (c)/ TMP_251
[i]Type for TMP_252

Name: TMP_252 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: updated simple fee ratio
y_3(uint256) := TMP_252(uint256)
Finance type key: (12, -1)
[i]Type for y

Name: y Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: updated simple fee ratio
TMP_253(bool) = LIBRARY_CALL, dest:MathUtils, function:MathUtils.within1(uint256,uint256), arguments:['y_3', 'yPrev_1'] 
[i]Type for TMP_253

Name: TMP_253 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_254(uint256) := i_2(uint256)
Finance type key: (-1, -1)
[i]Type for TMP_254

Name: TMP_254 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_3(uint256) = i_2 (c)+ 1
[i]Type for i

Name: i Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
x_1(uint256) := ϕ(['x_1'])
[i]Type for x

Name: x Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
D_1(uint256) := ϕ(['d_1'])
[i]Type for D

Name: D Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MAX_LOOP_LIMIT_2(uint256) := ϕ(['MAX_LOOP_LIMIT_0'])
[i]Type for MAX_LOOP_LIMIT

Name: MAX_LOOP_LIMIT Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
N_A_3(uint256) := ϕ(['N_A_0', 'N_A_1'])
[i]Type for N_A

Name: N_A Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
A_PRECISION_2(uint256) := ϕ(['A_PRECISION_0'])
[i]Type for A_PRECISION

Name: A_PRECISION Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_236(uint256) = D_1 (c)* D_1
[i]Type for TMP_236

Name: TMP_236 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_237(uint256) = x_1 (c)* 2
[i]Type for TMP_237

Name: TMP_237 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
TMP_238(uint256) = TMP_236 (c)/ TMP_237
[i]Type for TMP_238

Name: TMP_238 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
c_1(uint256) := TMP_238(uint256)
Finance type key: (12, -1)
[i]Type for c

Name: c Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
TMP_239(uint256) = c_1 (c)* D_1
[i]Type for TMP_239

Name: TMP_239 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
TMP_240(uint256) = N_A_3 (c)* 2
[i]Type for TMP_240

Name: TMP_240 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
TMP_241(uint256) = TMP_240 (c)/ A_PRECISION_2
[i]Type for TMP_241

Name: TMP_241 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
TMP_242(uint256) = TMP_239 (c)/ TMP_241
[i]Type for TMP_242

Name: TMP_242 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: updated simple fee ratio
c_2(uint256) := TMP_242(uint256)
Finance type key: (12, -1)
[i]Type for c

Name: c Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: updated simple fee ratio
TMP_243(uint256) = D_1 (c)* A_PRECISION_2
[i]Type for TMP_243

Name: TMP_243 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_244(uint256) = TMP_243 (c)/ N_A_3
[i]Type for TMP_244

Name: TMP_244 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_245(uint256) = x_1 (c)+ TMP_244
[i]Type for TMP_245

Name: TMP_245 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
b_1(uint256) := TMP_245(uint256)
Finance type key: (12, -1)
[i]Type for b

Name: b Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
y_1(uint256) := D_1(uint256)
Finance type key: (-1, -1)
[i]Type for y

Name: y Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for i

Name: i Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
y_2(uint256) := ϕ(['y_1', 'y_3'])
[i]Type for y

Name: y Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
i_2(uint256) := ϕ(['i_1', 'i_3'])
[i]Type for i

Name: i Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_246(bool) = i_2 < MAX_LOOP_LIMIT_2
[i]Type for TMP_246

Name: TMP_246 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
yPrev_1(uint256) := y_2(uint256)
Finance type key: (12, -1)
[i]Type for yPrev

Name: yPrev Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
TMP_247(uint256) = y_2 (c)* y_2
Finance type key: (12, 12)
[i]Type for TMP_247

Name: TMP_247 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_248(uint256) = TMP_247 (c)+ c_2
[i]Type for TMP_248

Name: TMP_248 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: updated simple fee ratio
TMP_249(uint256) = y_2 (c)* 2
[i]Type for TMP_249

Name: TMP_249 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
TMP_250(uint256) = TMP_249 (c)+ b_1
Finance type key: (12, 12)
[i]Type for TMP_250

Name: TMP_250 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: updated simple fee ratio
TMP_251(uint256) = TMP_250 (c)- D_1
[i]Type for TMP_251

Name: TMP_251 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: updated simple fee ratio
TMP_252(uint256) = TMP_248 (c)/ TMP_251
Finance type key: (12, 12)
Error with TMP_252 in function _getY
Error with: TMP_252 in function _getY
Finance type key: (12, 12)
[i]Type for TMP_252

Name: TMP_252 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
y_3(uint256) := TMP_252(uint256)
Finance type key: (-1, -1)
[i]Type for y

Name: y Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_253(bool) = LIBRARY_CALL, dest:MathUtils, function:MathUtils.within1(uint256,uint256), arguments:['y_3', 'yPrev_1'] 
[i]Type for TMP_253

Name: TMP_253 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_254(uint256) := i_2(uint256)
Finance type key: (-1, -1)
[i]Type for TMP_254

Name: TMP_254 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_3(uint256) = i_2 (c)+ 1
[i]Type for i

Name: i Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
[i]Type for TMP_202

Name: TMP_202 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
y_1(uint256) := TMP_202(uint256)
Finance type key: (-1, -1)
[i]Type for y

Name: y Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_203(uint256) = xpOut_3 (c)- y_1
[i]Type for TMP_203

Name: TMP_203 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_204(uint256) = TMP_203 (c)- 1
[i]Type for TMP_204

Name: TMP_204 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
dy_1(uint256) := TMP_204(uint256)
Finance type key: (-1, -1)
[i]Type for dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
dy_2(uint256) = dy_1 (c)/ token1PrecisionMultiplier_4
[i]Type for dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
dy_3(uint256) = dy_1 (c)/ token0PrecisionMultiplier_4
[i]Type for dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
amountIn_1(uint256) := ϕ(['TMP_153', 'TMP_124', 'TMP_103', 'TMP_112', 'TMP_130', 'TMP_140', 'amountIn_3'])
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
_reserve0_1(uint256) := ϕ(['_reserve0_1', '_reserve0_1', '_reserve0_1', 'TMP_104', 'TMP_113'])
[i]Type for _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
_reserve1_1(uint256) := ϕ(['_reserve1_1', 'TMP_105', 'TMP_114', '_reserve1_1', '_reserve1_1'])
[i]Type for _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
token0PrecisionMultiplier_2(uint256) := ϕ(['token0PrecisionMultiplier_0', 'token0PrecisionMultiplier_1', 'token0PrecisionMultiplier_4'])
[i]Type for token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
token1PrecisionMultiplier_2(uint256) := ϕ(['token1PrecisionMultiplier_4', 'token1PrecisionMultiplier_1', 'token1PrecisionMultiplier_0'])
[i]Type for token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_196(uint256) = _reserve0_1 (c)* token0PrecisionMultiplier_2
[i]Type for TMP_196

Name: TMP_196 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
xpIn_1(uint256) := TMP_196(uint256)
Finance type key: (-1, -1)
[i]Type for xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_197(uint256) = _reserve1_1 (c)* token1PrecisionMultiplier_2
[i]Type for TMP_197

Name: TMP_197 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
xpOut_1(uint256) := TMP_197(uint256)
Finance type key: (-1, -1)
[i]Type for xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_198(uint256) = _reserve1_1 (c)* token1PrecisionMultiplier_2
[i]Type for TMP_198

Name: TMP_198 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
xpIn_2(uint256) := TMP_198(uint256)
Finance type key: (-1, -1)
[i]Type for xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
amountIn_2(uint256) = amountIn_1 (c)* token0PrecisionMultiplier_2
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: updated simple fee ratio
TMP_199(uint256) = _reserve0_1 (c)* token0PrecisionMultiplier_2
[i]Type for TMP_199

Name: TMP_199 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
xpOut_2(uint256) := TMP_199(uint256)
Finance type key: (-1, -1)
[i]Type for xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
amountIn_4(uint256) := ϕ(['amountIn_3', 'amountIn_2'])
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
xpIn_3(uint256) := ϕ(['xpIn_1', 'xpIn_2'])
[i]Type for xpIn

Name: xpIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
xpOut_3(uint256) := ϕ(['xpOut_1', 'xpOut_2'])
[i]Type for xpOut

Name: xpOut Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_200(uint256) = INTERNAL_CALL, HybridPool._computeLiquidityFromAdjustedBalances(uint256,uint256)(xpIn_3,xpOut_3)
xp0_1(uint256) := ϕ(['xpIn_3', 'xp0_1'])
[i]Type for xp0

Name: xp0 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
xp1_1(uint256) := ϕ(['xpOut_3', 'xp1_1'])
[i]Type for xp1

Name: xp1 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MAX_LOOP_LIMIT_1(uint256) := ϕ(['MAX_LOOP_LIMIT_0'])
[i]Type for MAX_LOOP_LIMIT

Name: MAX_LOOP_LIMIT Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
N_A_2(uint256) := ϕ(['N_A_0', 'N_A_1'])
[i]Type for N_A

Name: N_A Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
A_PRECISION_1(uint256) := ϕ(['A_PRECISION_0'])
[i]Type for A_PRECISION

Name: A_PRECISION Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_215(uint256) = xp0_1 (c)+ xp1_1
[i]Type for TMP_215

Name: TMP_215 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
s_1(uint256) := TMP_215(uint256)
Finance type key: (-1, -1)
[i]Type for s

Name: s Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_216(bool) = s_1 == 0
[i]Type for TMP_216

Name: TMP_216 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
computed_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for computed

Name: computed Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
D_1(uint256) := s_1(uint256)
Finance type key: (-1, -1)
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
D_2(uint256) := ϕ(['D_3', 'D_1'])
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
i_2(uint256) := ϕ(['i_3', 'i_1'])
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_217(bool) = i_2 < MAX_LOOP_LIMIT_1
[i]Type for TMP_217

Name: TMP_217 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_218(uint256) = D_2 (c)* D_2
Finance type key: (40, 40)
[i]Type for TMP_218

Name: TMP_218 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_219(uint256) = TMP_218 (c)/ xp0_1
[i]Type for TMP_219

Name: TMP_219 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_220(uint256) = TMP_219 (c)* D_2
[i]Type for TMP_220

Name: TMP_220 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
TMP_221(uint256) = TMP_220 (c)/ xp1_1
[i]Type for TMP_221

Name: TMP_221 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
TMP_222(uint256) = TMP_221 (c)/ 4
[i]Type for TMP_222

Name: TMP_222 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: price/exchange rate
dP_1(uint256) := TMP_222(uint256)
Finance type key: (40, -1)
[i]Type for dP

Name: dP Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: price/exchange rate
prevD_1(uint256) := D_2(uint256)
Finance type key: (40, -1)
[i]Type for prevD

Name: prevD Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
computed_2(uint256) := D_3(uint256)
Finance type key: (40, -1)
[i]Type for computed

Name: computed Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
TMP_223(uint256) = N_A_2 (c)* s_1
[i]Type for TMP_223

Name: TMP_223 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_224(uint256) = TMP_223 (c)/ A_PRECISION_1
[i]Type for TMP_224

Name: TMP_224 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_225(uint256) = 2 (c)* dP_1
[i]Type for TMP_225

Name: TMP_225 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: price/exchange rate
TMP_226(uint256) = TMP_224 (c)+ TMP_225
[i]Type for TMP_226

Name: TMP_226 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: price/exchange rate
TMP_227(uint256) = TMP_226 (c)* D_2
Finance type key: (40, 40)
[i]Type for TMP_227

Name: TMP_227 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_228(uint256) = N_A_2 (c)/ A_PRECISION_1
[i]Type for TMP_228

Name: TMP_228 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_229(uint256) = TMP_228 (c)- 1
[i]Type for TMP_229

Name: TMP_229 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
TMP_230(uint256) = TMP_229 (c)* D_2
[i]Type for TMP_230

Name: TMP_230 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: price/exchange rate
TMP_231(uint256) = 3 (c)* dP_1
[i]Type for TMP_231

Name: TMP_231 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 12
Fields: 
Finance Type: price/exchange rate
TMP_232(uint256) = TMP_230 (c)+ TMP_231
Finance type key: (40, 40)
[i]Type for TMP_232

Name: TMP_232 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 13
Fields: 
Finance Type: price/exchange rate
TMP_233(uint256) = TMP_227 (c)/ TMP_232
[i]Type for TMP_233

Name: TMP_233 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
D_3(uint256) := TMP_233(uint256)
Finance type key: (40, -1)
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
TMP_234(bool) = LIBRARY_CALL, dest:MathUtils, function:MathUtils.within1(uint256,uint256), arguments:['D_3', 'prevD_1'] 
[i]Type for TMP_234

Name: TMP_234 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_235(uint256) := i_2(uint256)
Finance type key: (-1, -1)
[i]Type for TMP_235

Name: TMP_235 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_3(uint256) = i_2 (c)+ 1
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
xp0_1(uint256) := ϕ(['xpIn_3', 'xp0_1'])
[i]Type for xp0

Name: xp0 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
xp1_1(uint256) := ϕ(['xpOut_3', 'xp1_1'])
[i]Type for xp1

Name: xp1 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MAX_LOOP_LIMIT_1(uint256) := ϕ(['MAX_LOOP_LIMIT_0'])
[i]Type for MAX_LOOP_LIMIT

Name: MAX_LOOP_LIMIT Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
N_A_2(uint256) := ϕ(['N_A_0', 'N_A_1'])
[i]Type for N_A

Name: N_A Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
A_PRECISION_1(uint256) := ϕ(['A_PRECISION_0'])
[i]Type for A_PRECISION

Name: A_PRECISION Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_215(uint256) = xp0_1 (c)+ xp1_1
[i]Type for TMP_215

Name: TMP_215 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
s_1(uint256) := TMP_215(uint256)
Finance type key: (-1, -1)
[i]Type for s

Name: s Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_216(bool) = s_1 == 0
[i]Type for TMP_216

Name: TMP_216 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
computed_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for computed

Name: computed Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
D_1(uint256) := s_1(uint256)
Finance type key: (-1, -1)
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
D_2(uint256) := ϕ(['D_3', 'D_1'])
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
i_2(uint256) := ϕ(['i_3', 'i_1'])
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_217(bool) = i_2 < MAX_LOOP_LIMIT_1
[i]Type for TMP_217

Name: TMP_217 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_218(uint256) = D_2 (c)* D_2
Finance type key: (40, 40)
[i]Type for TMP_218

Name: TMP_218 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_219(uint256) = TMP_218 (c)/ xp0_1
[i]Type for TMP_219

Name: TMP_219 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_220(uint256) = TMP_219 (c)* D_2
[i]Type for TMP_220

Name: TMP_220 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
TMP_221(uint256) = TMP_220 (c)/ xp1_1
[i]Type for TMP_221

Name: TMP_221 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
TMP_222(uint256) = TMP_221 (c)/ 4
[i]Type for TMP_222

Name: TMP_222 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: price/exchange rate
dP_1(uint256) := TMP_222(uint256)
Finance type key: (40, -1)
[i]Type for dP

Name: dP Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: price/exchange rate
prevD_1(uint256) := D_2(uint256)
Finance type key: (40, -1)
[i]Type for prevD

Name: prevD Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
computed_2(uint256) := D_3(uint256)
Finance type key: (40, -1)
[i]Type for computed

Name: computed Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
TMP_223(uint256) = N_A_2 (c)* s_1
[i]Type for TMP_223

Name: TMP_223 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_224(uint256) = TMP_223 (c)/ A_PRECISION_1
[i]Type for TMP_224

Name: TMP_224 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_225(uint256) = 2 (c)* dP_1
[i]Type for TMP_225

Name: TMP_225 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: price/exchange rate
TMP_226(uint256) = TMP_224 (c)+ TMP_225
[i]Type for TMP_226

Name: TMP_226 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: price/exchange rate
TMP_227(uint256) = TMP_226 (c)* D_2
Finance type key: (40, 40)
[i]Type for TMP_227

Name: TMP_227 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_228(uint256) = N_A_2 (c)/ A_PRECISION_1
[i]Type for TMP_228

Name: TMP_228 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_229(uint256) = TMP_228 (c)- 1
[i]Type for TMP_229

Name: TMP_229 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
TMP_230(uint256) = TMP_229 (c)* D_2
[i]Type for TMP_230

Name: TMP_230 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: price/exchange rate
TMP_231(uint256) = 3 (c)* dP_1
[i]Type for TMP_231

Name: TMP_231 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 12
Fields: 
Finance Type: price/exchange rate
TMP_232(uint256) = TMP_230 (c)+ TMP_231
Finance type key: (40, 40)
[i]Type for TMP_232

Name: TMP_232 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 13
Fields: 
Finance Type: price/exchange rate
TMP_233(uint256) = TMP_227 (c)/ TMP_232
[i]Type for TMP_233

Name: TMP_233 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
D_3(uint256) := TMP_233(uint256)
Finance type key: (40, -1)
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
TMP_234(bool) = LIBRARY_CALL, dest:MathUtils, function:MathUtils.within1(uint256,uint256), arguments:['D_3', 'prevD_1'] 
[i]Type for TMP_234

Name: TMP_234 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_235(uint256) := i_2(uint256)
Finance type key: (-1, -1)
[i]Type for TMP_235

Name: TMP_235 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_3(uint256) = i_2 (c)+ 1
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
[i]Type for TMP_200

Name: TMP_200 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
d_1(uint256) := TMP_200(uint256)
Finance type key: (-1, -1)
[i]Type for d

Name: d Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_201(uint256) = xpIn_3 (c)+ amountIn_4
[i]Type for TMP_201

Name: TMP_201 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
x_1(uint256) := TMP_201(uint256)
Finance type key: (12, -1)
[i]Type for x

Name: x Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
amountIn_3(uint256) = amountIn_1 (c)* token1PrecisionMultiplier_2
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: updated simple fee ratio
TMP_202(uint256) = INTERNAL_CALL, HybridPool._getY(uint256,uint256)(x_1,d_1)
x_1(uint256) := ϕ(['x_1'])
[i]Type for x

Name: x Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
D_1(uint256) := ϕ(['d_1'])
[i]Type for D

Name: D Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MAX_LOOP_LIMIT_2(uint256) := ϕ(['MAX_LOOP_LIMIT_0'])
[i]Type for MAX_LOOP_LIMIT

Name: MAX_LOOP_LIMIT Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
N_A_3(uint256) := ϕ(['N_A_0', 'N_A_1'])
[i]Type for N_A

Name: N_A Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
A_PRECISION_2(uint256) := ϕ(['A_PRECISION_0'])
[i]Type for A_PRECISION

Name: A_PRECISION Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_236(uint256) = D_1 (c)* D_1
[i]Type for TMP_236

Name: TMP_236 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_237(uint256) = x_1 (c)* 2
[i]Type for TMP_237

Name: TMP_237 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
TMP_238(uint256) = TMP_236 (c)/ TMP_237
[i]Type for TMP_238

Name: TMP_238 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
c_1(uint256) := TMP_238(uint256)
Finance type key: (12, -1)
[i]Type for c

Name: c Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
TMP_239(uint256) = c_1 (c)* D_1
[i]Type for TMP_239

Name: TMP_239 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
TMP_240(uint256) = N_A_3 (c)* 2
[i]Type for TMP_240

Name: TMP_240 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
TMP_241(uint256) = TMP_240 (c)/ A_PRECISION_2
[i]Type for TMP_241

Name: TMP_241 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
TMP_242(uint256) = TMP_239 (c)/ TMP_241
[i]Type for TMP_242

Name: TMP_242 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: updated simple fee ratio
c_2(uint256) := TMP_242(uint256)
Finance type key: (12, -1)
[i]Type for c

Name: c Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: updated simple fee ratio
TMP_243(uint256) = D_1 (c)* A_PRECISION_2
[i]Type for TMP_243

Name: TMP_243 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_244(uint256) = TMP_243 (c)/ N_A_3
[i]Type for TMP_244

Name: TMP_244 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_245(uint256) = x_1 (c)+ TMP_244
[i]Type for TMP_245

Name: TMP_245 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
b_1(uint256) := TMP_245(uint256)
Finance type key: (12, -1)
[i]Type for b

Name: b Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
y_1(uint256) := D_1(uint256)
Finance type key: (-1, -1)
[i]Type for y

Name: y Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for i

Name: i Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
y_2(uint256) := ϕ(['y_1', 'y_3'])
[i]Type for y

Name: y Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_2(uint256) := ϕ(['i_1', 'i_3'])
[i]Type for i

Name: i Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_246(bool) = i_2 < MAX_LOOP_LIMIT_2
[i]Type for TMP_246

Name: TMP_246 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
yPrev_1(uint256) := y_2(uint256)
Finance type key: (-1, -1)
[i]Type for yPrev

Name: yPrev Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_247(uint256) = y_2 (c)* y_2
[i]Type for TMP_247

Name: TMP_247 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_248(uint256) = TMP_247 (c)+ c_2
[i]Type for TMP_248

Name: TMP_248 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: updated simple fee ratio
TMP_249(uint256) = y_2 (c)* 2
[i]Type for TMP_249

Name: TMP_249 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_250(uint256) = TMP_249 (c)+ b_1
[i]Type for TMP_250

Name: TMP_250 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: updated simple fee ratio
TMP_251(uint256) = TMP_250 (c)- D_1
[i]Type for TMP_251

Name: TMP_251 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: updated simple fee ratio
TMP_252(uint256) = TMP_248 (c)/ TMP_251
Finance type key: (12, 12)
Finance type key: (12, 12)
[i]Type for TMP_252

Name: TMP_252 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
y_3(uint256) := TMP_252(uint256)
Finance type key: (-1, -1)
[i]Type for y

Name: y Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_253(bool) = LIBRARY_CALL, dest:MathUtils, function:MathUtils.within1(uint256,uint256), arguments:['y_3', 'yPrev_1'] 
[i]Type for TMP_253

Name: TMP_253 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_254(uint256) := i_2(uint256)
Finance type key: (-1, -1)
[i]Type for TMP_254

Name: TMP_254 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_3(uint256) = i_2 (c)+ 1
[i]Type for i

Name: i Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
x_1(uint256) := ϕ(['x_1'])
[i]Type for x

Name: x Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
D_1(uint256) := ϕ(['d_1'])
[i]Type for D

Name: D Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MAX_LOOP_LIMIT_2(uint256) := ϕ(['MAX_LOOP_LIMIT_0'])
[i]Type for MAX_LOOP_LIMIT

Name: MAX_LOOP_LIMIT Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
N_A_3(uint256) := ϕ(['N_A_0', 'N_A_1'])
[i]Type for N_A

Name: N_A Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
A_PRECISION_2(uint256) := ϕ(['A_PRECISION_0'])
[i]Type for A_PRECISION

Name: A_PRECISION Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_236(uint256) = D_1 (c)* D_1
[i]Type for TMP_236

Name: TMP_236 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_237(uint256) = x_1 (c)* 2
[i]Type for TMP_237

Name: TMP_237 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
TMP_238(uint256) = TMP_236 (c)/ TMP_237
[i]Type for TMP_238

Name: TMP_238 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
c_1(uint256) := TMP_238(uint256)
Finance type key: (12, -1)
[i]Type for c

Name: c Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
TMP_239(uint256) = c_1 (c)* D_1
[i]Type for TMP_239

Name: TMP_239 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
TMP_240(uint256) = N_A_3 (c)* 2
[i]Type for TMP_240

Name: TMP_240 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
TMP_241(uint256) = TMP_240 (c)/ A_PRECISION_2
[i]Type for TMP_241

Name: TMP_241 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
TMP_242(uint256) = TMP_239 (c)/ TMP_241
[i]Type for TMP_242

Name: TMP_242 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: updated simple fee ratio
c_2(uint256) := TMP_242(uint256)
Finance type key: (12, -1)
[i]Type for c

Name: c Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: updated simple fee ratio
TMP_243(uint256) = D_1 (c)* A_PRECISION_2
[i]Type for TMP_243

Name: TMP_243 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_244(uint256) = TMP_243 (c)/ N_A_3
[i]Type for TMP_244

Name: TMP_244 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_245(uint256) = x_1 (c)+ TMP_244
[i]Type for TMP_245

Name: TMP_245 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
b_1(uint256) := TMP_245(uint256)
Finance type key: (12, -1)
[i]Type for b

Name: b Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
y_1(uint256) := D_1(uint256)
Finance type key: (-1, -1)
[i]Type for y

Name: y Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for i

Name: i Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
y_2(uint256) := ϕ(['y_1', 'y_3'])
[i]Type for y

Name: y Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_2(uint256) := ϕ(['i_1', 'i_3'])
[i]Type for i

Name: i Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_246(bool) = i_2 < MAX_LOOP_LIMIT_2
[i]Type for TMP_246

Name: TMP_246 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
yPrev_1(uint256) := y_2(uint256)
Finance type key: (-1, -1)
[i]Type for yPrev

Name: yPrev Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_247(uint256) = y_2 (c)* y_2
[i]Type for TMP_247

Name: TMP_247 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_248(uint256) = TMP_247 (c)+ c_2
[i]Type for TMP_248

Name: TMP_248 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: updated simple fee ratio
TMP_249(uint256) = y_2 (c)* 2
[i]Type for TMP_249

Name: TMP_249 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_250(uint256) = TMP_249 (c)+ b_1
[i]Type for TMP_250

Name: TMP_250 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: updated simple fee ratio
TMP_251(uint256) = TMP_250 (c)- D_1
[i]Type for TMP_251

Name: TMP_251 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: updated simple fee ratio
TMP_252(uint256) = TMP_248 (c)/ TMP_251
Finance type key: (12, 12)
Finance type key: (12, 12)
[i]Type for TMP_252

Name: TMP_252 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
y_3(uint256) := TMP_252(uint256)
Finance type key: (-1, -1)
[i]Type for y

Name: y Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_253(bool) = LIBRARY_CALL, dest:MathUtils, function:MathUtils.within1(uint256,uint256), arguments:['y_3', 'yPrev_1'] 
[i]Type for TMP_253

Name: TMP_253 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_254(uint256) := i_2(uint256)
Finance type key: (-1, -1)
[i]Type for TMP_254

Name: TMP_254 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_3(uint256) = i_2 (c)+ 1
[i]Type for i

Name: i Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
[i]Type for TMP_202

Name: TMP_202 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
y_1(uint256) := TMP_202(uint256)
Finance type key: (-1, -1)
[i]Type for y

Name: y Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_203(uint256) = xpOut_3 (c)- y_1
[i]Type for TMP_203

Name: TMP_203 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_204(uint256) = TMP_203 (c)- 1
[i]Type for TMP_204

Name: TMP_204 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
dy_1(uint256) := TMP_204(uint256)
Finance type key: (-1, -1)
[i]Type for dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
dy_2(uint256) = dy_1 (c)/ token1PrecisionMultiplier_4
[i]Type for dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
dy_3(uint256) = dy_1 (c)/ token0PrecisionMultiplier_4
[i]Type for dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
[i]Type for TMP_154

Name: TMP_154 Function: flashSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
amountOut_1(uint256) := TMP_154(uint256)
Finance type key: (-1, -1)
[i]Type for amountOut

Name: amountOut Function: flashSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_138(uint256) = amountIn_3 (c)* swapFee_6
[i]Type for TMP_138

Name: TMP_138 Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
TMP_139(uint256) = TMP_138 (c)/ MAX_FEE_6
[i]Type for TMP_139

Name: TMP_139 Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
fee_2(uint256) := TMP_139(uint256)
Finance type key: (12, -1)
[i]Type for fee

Name: fee Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
INTERNAL_CALL, HybridPool._processSwap(address,address,uint256,bytes,bool)(token0_31,recipient_1,amountOut_1,context_1,unwrapBento_1)
tokenOut_1(address) := ϕ(['token1_36', 'token0_31'])
[i]Type for tokenOut

Name: tokenOut Function: _processSwap
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
to_1(address) := ϕ(['recipient_1'])
[i]Type for to

Name: to Function: _processSwap
Num: 
Den: 
Address: -990
Norm: u
LF: to
Value: u
Fields: 
Finance Type: undef
amountOut_1(uint256) := ϕ(['amountOut_1', 'amountOut_2'])
[i]Type for amountOut

Name: amountOut Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
data_1(bytes) := ϕ(['context_1'])
[i]Type for data

Name: data Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
unwrapBento_1(bool) := ϕ(['unwrapBento_1'])
[i]Type for unwrapBento

Name: unwrapBento Function: _processSwap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
INTERNAL_CALL, HybridPool._transfer(address,uint256,address,bool)(tokenOut_1,amountOut_1,to_1,unwrapBento_1)
token_1(address) := ϕ(['tokenOut_3', 'token1_17', 'token1_6', 'token0_5', 'tokenIn_1', 'token0_21', 'tokenIn_1', 'tokenOut_1'])
[i]Type for token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['_barFee_1', 'amount0_1', 'amountOut_3', 'fee_3', 'amountOut_1', 'amount1_2', 'amount0_3', 'amount1_1'])
[i]Type for amount

Name: amount Function: _transfer
Num: 
Den: 
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
to_1(address) := ϕ(['recipient_1', 'recipient_1', 'barFeeTo_16', 'barFeeTo_14', 'to_1', 'recipient_1'])
[i]Type for to

Name: to Function: _transfer
Num: 
Den: 
Address: -990
Norm: u
LF: to
Value: u
Fields: 
Finance Type: undef
unwrapBento_1(bool) := ϕ(['unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1'])
[i]Type for unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_6(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_74 (->None) := 4052550604(uint256)
Finance type key: (-1, -1)
[i]Type for REF_74

Name: REF_74 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4052550604
Fields: 
Finance Type: undef
TMP_208 = CONVERT this to address
[i]Type for TMP_208

Name: TMP_208 Function: _transfer
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_209(uint256) = INTERNAL_CALL, HybridPool._toShare(address,uint256)(token_1,amount_1)
token_1(address) := ϕ(['token1_21', 'token1_8', 'token0_18', 'token0_7', 'token_1'])
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['amount1_1', 'amount0_1', 'amount0_1', 'amount_1', 'amount1_1'])
[i]Type for input

Name: input Function: _toShare
Num: 
Den: 
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
bento_4(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_5(address) := ϕ(['bento_4', 'bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
output_1(uint256) := TMP_195(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token1_21', 'token1_8', 'token0_18', 'token0_7', 'token_1'])
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['amount1_1', 'amount0_1', 'amount0_1', 'amount_1', 'amount1_1'])
[i]Type for input

Name: input Function: _toShare
Num: 
Den: 
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
bento_4(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_5(address) := ϕ(['bento_4', 'bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
output_1(uint256) := TMP_195(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_209

Name: TMP_209 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_7(address) := ϕ(['bento_5'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
TMP_210(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_74,token_1,TMP_208,to_1,TMP_209)
[i]Type for TMP_210

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_24(bool,bytes) = LOW_LEVEL_CALL, dest:bento_7, function:call, arguments:['TMP_210']  
[i]Type for TUPLE_24

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_8(address) := ϕ(['bento_5', 'bento_7', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
success_1(bool)= UNPACK TUPLE_24 index: 0 
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_70 (->None) := 2547674416(uint256)
Finance type key: (-1, -1)
[i]Type for REF_70

Name: REF_70 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2547674416
Fields: 
Finance Type: undef
TMP_205 = CONVERT this to address
[i]Type for TMP_205

Name: TMP_205 Function: _transfer
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_206(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_70,token_1,TMP_205,to_1,amount_1,0)
[i]Type for TMP_206

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_23(bool,bytes) = LOW_LEVEL_CALL, dest:bento_6, function:call, arguments:['TMP_206']  
[i]Type for TUPLE_23

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_9(address) := ϕ(['bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
success_2(bool)= UNPACK TUPLE_23 index: 0 
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_211(None) = SOLIDITY_CALL require(bool,string)(success_scope_0_0,TRANSFER_FAILED)
[i]Type for TMP_211

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_207(None) = SOLIDITY_CALL require(bool,string)(success_2,WITHDRAW_FAILED)
[i]Type for TMP_207

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['tokenOut_3', 'token1_17', 'token1_6', 'token0_5', 'tokenIn_1', 'token0_21', 'tokenIn_1', 'tokenOut_1'])
[i]Type for token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['_barFee_1', 'amount0_1', 'amountOut_3', 'fee_3', 'amountOut_1', 'amount1_2', 'amount0_3', 'amount1_1'])
[i]Type for amount

Name: amount Function: _transfer
Num: 
Den: 
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
to_1(address) := ϕ(['recipient_1', 'recipient_1', 'barFeeTo_16', 'barFeeTo_14', 'to_1', 'recipient_1'])
[i]Type for to

Name: to Function: _transfer
Num: 
Den: 
Address: -990
Norm: u
LF: to
Value: u
Fields: 
Finance Type: undef
unwrapBento_1(bool) := ϕ(['unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1'])
[i]Type for unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_6(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_74 (->None) := 4052550604(uint256)
Finance type key: (-1, -1)
[i]Type for REF_74

Name: REF_74 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4052550604
Fields: 
Finance Type: undef
TMP_208 = CONVERT this to address
[i]Type for TMP_208

Name: TMP_208 Function: _transfer
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_209(uint256) = INTERNAL_CALL, HybridPool._toShare(address,uint256)(token_1,amount_1)
token_1(address) := ϕ(['token1_21', 'token1_8', 'token0_18', 'token0_7', 'token_1'])
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['amount1_1', 'amount0_1', 'amount0_1', 'amount_1', 'amount1_1'])
[i]Type for input

Name: input Function: _toShare
Num: 
Den: 
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
bento_4(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_5(address) := ϕ(['bento_4', 'bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
output_1(uint256) := TMP_195(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token1_21', 'token1_8', 'token0_18', 'token0_7', 'token_1'])
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['amount1_1', 'amount0_1', 'amount0_1', 'amount_1', 'amount1_1'])
[i]Type for input

Name: input Function: _toShare
Num: 
Den: 
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
bento_4(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_5(address) := ϕ(['bento_4', 'bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
output_1(uint256) := TMP_195(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_209

Name: TMP_209 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_7(address) := ϕ(['bento_5'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
TMP_210(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_74,token_1,TMP_208,to_1,TMP_209)
[i]Type for TMP_210

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_24(bool,bytes) = LOW_LEVEL_CALL, dest:bento_7, function:call, arguments:['TMP_210']  
[i]Type for TUPLE_24

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_8(address) := ϕ(['bento_5', 'bento_7', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
success_1(bool)= UNPACK TUPLE_24 index: 0 
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_70 (->None) := 2547674416(uint256)
Finance type key: (-1, -1)
[i]Type for REF_70

Name: REF_70 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2547674416
Fields: 
Finance Type: undef
TMP_205 = CONVERT this to address
[i]Type for TMP_205

Name: TMP_205 Function: _transfer
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_206(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_70,token_1,TMP_205,to_1,amount_1,0)
[i]Type for TMP_206

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_23(bool,bytes) = LOW_LEVEL_CALL, dest:bento_6, function:call, arguments:['TMP_206']  
[i]Type for TUPLE_23

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_9(address) := ϕ(['bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
success_2(bool)= UNPACK TUPLE_23 index: 0 
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_211(None) = SOLIDITY_CALL require(bool,string)(success_scope_0_0,TRANSFER_FAILED)
[i]Type for TMP_211

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_207(None) = SOLIDITY_CALL require(bool,string)(success_2,WITHDRAW_FAILED)
[i]Type for TMP_207

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_54 -> LENGTH data_1
[i]Type for REF_54

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_168(bool) = REF_54 != 0
[i]Type for TMP_168

Name: TMP_168 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_169 = CONVERT msg.sender to ITridentCallee
[i]Type for TMP_169

Name: TMP_169 Function: _processSwap
Num: -1
Den: -1
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:TMP_169(ITridentCallee), function:tridentSwapCallback, arguments:['data_1']  
tokenOut_1(address) := ϕ(['token1_36', 'token0_31'])
[i]Type for tokenOut

Name: tokenOut Function: _processSwap
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
to_1(address) := ϕ(['recipient_1'])
[i]Type for to

Name: to Function: _processSwap
Num: 
Den: 
Address: -990
Norm: u
LF: to
Value: u
Fields: 
Finance Type: undef
amountOut_1(uint256) := ϕ(['amountOut_1', 'amountOut_2'])
[i]Type for amountOut

Name: amountOut Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
data_1(bytes) := ϕ(['context_1'])
[i]Type for data

Name: data Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
unwrapBento_1(bool) := ϕ(['unwrapBento_1'])
[i]Type for unwrapBento

Name: unwrapBento Function: _processSwap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
INTERNAL_CALL, HybridPool._transfer(address,uint256,address,bool)(tokenOut_1,amountOut_1,to_1,unwrapBento_1)
token_1(address) := ϕ(['tokenOut_3', 'token1_17', 'token1_6', 'token0_5', 'tokenIn_1', 'token0_21', 'tokenIn_1', 'tokenOut_1'])
[i]Type for token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['_barFee_1', 'amount0_1', 'amountOut_3', 'fee_3', 'amountOut_1', 'amount1_2', 'amount0_3', 'amount1_1'])
[i]Type for amount

Name: amount Function: _transfer
Num: 
Den: 
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
to_1(address) := ϕ(['recipient_1', 'recipient_1', 'barFeeTo_16', 'barFeeTo_14', 'to_1', 'recipient_1'])
[i]Type for to

Name: to Function: _transfer
Num: 
Den: 
Address: -990
Norm: u
LF: to
Value: u
Fields: 
Finance Type: undef
unwrapBento_1(bool) := ϕ(['unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1'])
[i]Type for unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_6(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_74 (->None) := 4052550604(uint256)
Finance type key: (-1, -1)
[i]Type for REF_74

Name: REF_74 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4052550604
Fields: 
Finance Type: undef
TMP_208 = CONVERT this to address
[i]Type for TMP_208

Name: TMP_208 Function: _transfer
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_209(uint256) = INTERNAL_CALL, HybridPool._toShare(address,uint256)(token_1,amount_1)
token_1(address) := ϕ(['token1_21', 'token1_8', 'token0_18', 'token0_7', 'token_1'])
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['amount1_1', 'amount0_1', 'amount0_1', 'amount_1', 'amount1_1'])
[i]Type for input

Name: input Function: _toShare
Num: 
Den: 
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
bento_4(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_5(address) := ϕ(['bento_4', 'bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
output_1(uint256) := TMP_195(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token1_21', 'token1_8', 'token0_18', 'token0_7', 'token_1'])
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['amount1_1', 'amount0_1', 'amount0_1', 'amount_1', 'amount1_1'])
[i]Type for input

Name: input Function: _toShare
Num: 
Den: 
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
bento_4(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_5(address) := ϕ(['bento_4', 'bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
output_1(uint256) := TMP_195(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_209

Name: TMP_209 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_7(address) := ϕ(['bento_5'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
TMP_210(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_74,token_1,TMP_208,to_1,TMP_209)
[i]Type for TMP_210

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_24(bool,bytes) = LOW_LEVEL_CALL, dest:bento_7, function:call, arguments:['TMP_210']  
[i]Type for TUPLE_24

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_8(address) := ϕ(['bento_5', 'bento_7', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
success_1(bool)= UNPACK TUPLE_24 index: 0 
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_70 (->None) := 2547674416(uint256)
Finance type key: (-1, -1)
[i]Type for REF_70

Name: REF_70 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2547674416
Fields: 
Finance Type: undef
TMP_205 = CONVERT this to address
[i]Type for TMP_205

Name: TMP_205 Function: _transfer
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_206(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_70,token_1,TMP_205,to_1,amount_1,0)
[i]Type for TMP_206

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_23(bool,bytes) = LOW_LEVEL_CALL, dest:bento_6, function:call, arguments:['TMP_206']  
[i]Type for TUPLE_23

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_9(address) := ϕ(['bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
success_2(bool)= UNPACK TUPLE_23 index: 0 
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_211(None) = SOLIDITY_CALL require(bool,string)(success_scope_0_0,TRANSFER_FAILED)
[i]Type for TMP_211

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_207(None) = SOLIDITY_CALL require(bool,string)(success_2,WITHDRAW_FAILED)
[i]Type for TMP_207

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['tokenOut_3', 'token1_17', 'token1_6', 'token0_5', 'tokenIn_1', 'token0_21', 'tokenIn_1', 'tokenOut_1'])
[i]Type for token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['_barFee_1', 'amount0_1', 'amountOut_3', 'fee_3', 'amountOut_1', 'amount1_2', 'amount0_3', 'amount1_1'])
[i]Type for amount

Name: amount Function: _transfer
Num: 
Den: 
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
to_1(address) := ϕ(['recipient_1', 'recipient_1', 'barFeeTo_16', 'barFeeTo_14', 'to_1', 'recipient_1'])
[i]Type for to

Name: to Function: _transfer
Num: 
Den: 
Address: -990
Norm: u
LF: to
Value: u
Fields: 
Finance Type: undef
unwrapBento_1(bool) := ϕ(['unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1'])
[i]Type for unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_6(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_74 (->None) := 4052550604(uint256)
Finance type key: (-1, -1)
[i]Type for REF_74

Name: REF_74 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4052550604
Fields: 
Finance Type: undef
TMP_208 = CONVERT this to address
[i]Type for TMP_208

Name: TMP_208 Function: _transfer
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_209(uint256) = INTERNAL_CALL, HybridPool._toShare(address,uint256)(token_1,amount_1)
token_1(address) := ϕ(['token1_21', 'token1_8', 'token0_18', 'token0_7', 'token_1'])
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['amount1_1', 'amount0_1', 'amount0_1', 'amount_1', 'amount1_1'])
[i]Type for input

Name: input Function: _toShare
Num: 
Den: 
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
bento_4(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_5(address) := ϕ(['bento_4', 'bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
output_1(uint256) := TMP_195(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token1_21', 'token1_8', 'token0_18', 'token0_7', 'token_1'])
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['amount1_1', 'amount0_1', 'amount0_1', 'amount_1', 'amount1_1'])
[i]Type for input

Name: input Function: _toShare
Num: 
Den: 
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
bento_4(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_5(address) := ϕ(['bento_4', 'bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
output_1(uint256) := TMP_195(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_209

Name: TMP_209 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_7(address) := ϕ(['bento_5'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
TMP_210(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_74,token_1,TMP_208,to_1,TMP_209)
[i]Type for TMP_210

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_24(bool,bytes) = LOW_LEVEL_CALL, dest:bento_7, function:call, arguments:['TMP_210']  
[i]Type for TUPLE_24

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_8(address) := ϕ(['bento_5', 'bento_7', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
success_1(bool)= UNPACK TUPLE_24 index: 0 
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_70 (->None) := 2547674416(uint256)
Finance type key: (-1, -1)
[i]Type for REF_70

Name: REF_70 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2547674416
Fields: 
Finance Type: undef
TMP_205 = CONVERT this to address
[i]Type for TMP_205

Name: TMP_205 Function: _transfer
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_206(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_70,token_1,TMP_205,to_1,amount_1,0)
[i]Type for TMP_206

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_23(bool,bytes) = LOW_LEVEL_CALL, dest:bento_6, function:call, arguments:['TMP_206']  
[i]Type for TUPLE_23

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_9(address) := ϕ(['bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
success_2(bool)= UNPACK TUPLE_23 index: 0 
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_211(None) = SOLIDITY_CALL require(bool,string)(success_scope_0_0,TRANSFER_FAILED)
[i]Type for TMP_211

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_207(None) = SOLIDITY_CALL require(bool,string)(success_2,WITHDRAW_FAILED)
[i]Type for TMP_207

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_54 -> LENGTH data_1
[i]Type for REF_54

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_168(bool) = REF_54 != 0
[i]Type for TMP_168

Name: TMP_168 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_169 = CONVERT msg.sender to ITridentCallee
[i]Type for TMP_169

Name: TMP_169 Function: _processSwap
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:TMP_169(ITridentCallee), function:tridentSwapCallback, arguments:['data_1']  
TMP_156(uint256) = INTERNAL_CALL, HybridPool.__balance(address)(token1_32)
token_1(address) := ϕ(['token1_43', 'token0_40', 'token1_32', 'token0_35'])
[i]Type for token

Name: token Function: __balance
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
bento_2(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: __balance
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_59 (->None) := 4152920812(uint256)
Finance type key: (-1, -1)
[i]Type for REF_59

Name: REF_59 Function: __balance
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4152920812
Fields: 
Finance Type: undef
TMP_188 = CONVERT this to address
[i]Type for TMP_188

Name: TMP_188 Function: __balance
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_189(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_59,token_1,TMP_188)
[i]Type for TMP_189

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_21(bool,bytes) = LOW_LEVEL_CALL, dest:bento_2, function:staticcall, arguments:['TMP_189']  
[i]Type for TUPLE_21

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_3(address) := ϕ(['bento_5', 'bento_3', 'bento_1', 'bento_2', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: __balance
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
___balance_1(bytes)= UNPACK TUPLE_21 index: 1 
[i]Type for ___balance

Name: ___balance Function: __balance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_190(uint256) = SOLIDITY_CALL abi.decode()(___balance_1,uint256)
[i]Type for TMP_190

Name: TMP_190 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
balance_1(uint256) := TMP_190(uint256)
Finance type key: (-1, -1)
[i]Type for balance

Name: balance Function: __balance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token1_43', 'token0_40', 'token1_32', 'token0_35'])
[i]Type for token

Name: token Function: __balance
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
bento_2(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: __balance
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_59 (->None) := 4152920812(uint256)
Finance type key: (-1, -1)
[i]Type for REF_59

Name: REF_59 Function: __balance
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4152920812
Fields: 
Finance Type: undef
TMP_188 = CONVERT this to address
[i]Type for TMP_188

Name: TMP_188 Function: __balance
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_189(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_59,token_1,TMP_188)
[i]Type for TMP_189

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_21(bool,bytes) = LOW_LEVEL_CALL, dest:bento_2, function:staticcall, arguments:['TMP_189']  
[i]Type for TUPLE_21

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_3(address) := ϕ(['bento_5', 'bento_3', 'bento_1', 'bento_2', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: __balance
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
___balance_1(bytes)= UNPACK TUPLE_21 index: 1 
[i]Type for ___balance

Name: ___balance Function: __balance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_190(uint256) = SOLIDITY_CALL abi.decode()(___balance_1,uint256)
[i]Type for TMP_190

Name: TMP_190 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
balance_1(uint256) := TMP_190(uint256)
Finance type key: (-1, -1)
[i]Type for balance

Name: balance Function: __balance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_156

Name: TMP_156 Function: flashSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_157(uint256) = INTERNAL_CALL, HybridPool._toAmount(address,uint256)(token1_33,TMP_156)
token_1(address) := ϕ(['token0_36', 'token0_38', 'token1_29', 'token0_41', 'token1_44', 'token1_33', 'token1_39', 'tokenIn_1', 'token0_29'])
[i]Type for token

Name: token Function: _toAmount
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['TMP_143', '_reserve1_1', 'amountIn_1', 'amountIn_1', 'TMP_156', '_reserve0_1', 'TMP_184', 'TMP_186'])
[i]Type for input

Name: input Function: _toAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_191 = CONVERT this to address
[i]Type for TMP_191

Name: TMP_191 Function: _toAmount
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_192 = CONVERT TMP_191 to IBentoBoxMinimal
[i]Type for TMP_192

Name: TMP_192 Function: _toAmount
Num: 
Den: 
Address: 8
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
TMP_193(uint256) = HIGH_LEVEL_CALL, dest:TMP_192(IBentoBoxMinimal), function:toAmount, arguments:['token_1', 'input_1', 'False']  
[i]Type for TMP_193

Name: TMP_193 Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
output_1(uint256) := TMP_193(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
RETURN output_1
token_1(address) := ϕ(['token0_36', 'token0_38', 'token1_29', 'token0_41', 'token1_44', 'token1_33', 'token1_39', 'tokenIn_1', 'token0_29'])
[i]Type for token

Name: token Function: _toAmount
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['TMP_143', '_reserve1_1', 'amountIn_1', 'amountIn_1', 'TMP_156', '_reserve0_1', 'TMP_184', 'TMP_186'])
[i]Type for input

Name: input Function: _toAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_191 = CONVERT this to address
[i]Type for TMP_191

Name: TMP_191 Function: _toAmount
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_192 = CONVERT TMP_191 to IBentoBoxMinimal
[i]Type for TMP_192

Name: TMP_192 Function: _toAmount
Num: 
Den: 
Address: 8
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
TMP_193(uint256) = HIGH_LEVEL_CALL, dest:TMP_192(IBentoBoxMinimal), function:toAmount, arguments:['token_1', 'input_1', 'False']  
[i]Type for TMP_193

Name: TMP_193 Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
output_1(uint256) := TMP_193(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
RETURN output_1
[i]Type for TMP_157

Name: TMP_157 Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
balance1_1(uint256) := TMP_157(uint256)
Finance type key: (-1, -1)
[i]Type for balance1

Name: balance1 Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
TMP_140(uint256) = amountIn_3 (c)- fee_2
[i]Type for TMP_140

Name: TMP_140 Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
TMP_141(uint256) = INTERNAL_CALL, HybridPool._getAmountOut(uint256,uint256,uint256,bool)(TMP_140,_reserve0_1,_reserve1_1,True)
amountIn_1(uint256) := ϕ(['TMP_153', 'TMP_124', 'TMP_103', 'TMP_112', 'TMP_130', 'TMP_140', 'amountIn_3'])
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
_reserve0_1(uint256) := ϕ(['_reserve0_1', '_reserve0_1', '_reserve0_1', 'TMP_104', 'TMP_113'])
[i]Type for _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
_reserve1_1(uint256) := ϕ(['_reserve1_1', 'TMP_105', 'TMP_114', '_reserve1_1', '_reserve1_1'])
[i]Type for _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
token0PrecisionMultiplier_2(uint256) := ϕ(['token0PrecisionMultiplier_0', 'token0PrecisionMultiplier_1', 'token0PrecisionMultiplier_4'])
[i]Type for token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
token1PrecisionMultiplier_2(uint256) := ϕ(['token1PrecisionMultiplier_4', 'token1PrecisionMultiplier_1', 'token1PrecisionMultiplier_0'])
[i]Type for token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_196(uint256) = _reserve0_1 (c)* token0PrecisionMultiplier_2
[i]Type for TMP_196

Name: TMP_196 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
xpIn_1(uint256) := TMP_196(uint256)
Finance type key: (-1, -1)
[i]Type for xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_197(uint256) = _reserve1_1 (c)* token1PrecisionMultiplier_2
[i]Type for TMP_197

Name: TMP_197 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
xpOut_1(uint256) := TMP_197(uint256)
Finance type key: (-1, -1)
[i]Type for xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_198(uint256) = _reserve1_1 (c)* token1PrecisionMultiplier_2
[i]Type for TMP_198

Name: TMP_198 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
xpIn_2(uint256) := TMP_198(uint256)
Finance type key: (-1, -1)
[i]Type for xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
amountIn_2(uint256) = amountIn_1 (c)* token0PrecisionMultiplier_2
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: updated simple fee ratio
TMP_199(uint256) = _reserve0_1 (c)* token0PrecisionMultiplier_2
[i]Type for TMP_199

Name: TMP_199 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
xpOut_2(uint256) := TMP_199(uint256)
Finance type key: (-1, -1)
[i]Type for xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
amountIn_4(uint256) := ϕ(['amountIn_3', 'amountIn_2'])
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
xpIn_3(uint256) := ϕ(['xpIn_1', 'xpIn_2'])
[i]Type for xpIn

Name: xpIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
xpOut_3(uint256) := ϕ(['xpOut_1', 'xpOut_2'])
[i]Type for xpOut

Name: xpOut Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_200(uint256) = INTERNAL_CALL, HybridPool._computeLiquidityFromAdjustedBalances(uint256,uint256)(xpIn_3,xpOut_3)
xp0_1(uint256) := ϕ(['xpIn_3', 'xp0_1'])
[i]Type for xp0

Name: xp0 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
xp1_1(uint256) := ϕ(['xpOut_3', 'xp1_1'])
[i]Type for xp1

Name: xp1 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MAX_LOOP_LIMIT_1(uint256) := ϕ(['MAX_LOOP_LIMIT_0'])
[i]Type for MAX_LOOP_LIMIT

Name: MAX_LOOP_LIMIT Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
N_A_2(uint256) := ϕ(['N_A_0', 'N_A_1'])
[i]Type for N_A

Name: N_A Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
A_PRECISION_1(uint256) := ϕ(['A_PRECISION_0'])
[i]Type for A_PRECISION

Name: A_PRECISION Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_215(uint256) = xp0_1 (c)+ xp1_1
[i]Type for TMP_215

Name: TMP_215 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
s_1(uint256) := TMP_215(uint256)
Finance type key: (-1, -1)
[i]Type for s

Name: s Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_216(bool) = s_1 == 0
[i]Type for TMP_216

Name: TMP_216 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
computed_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for computed

Name: computed Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
D_1(uint256) := s_1(uint256)
Finance type key: (-1, -1)
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
D_2(uint256) := ϕ(['D_3', 'D_1'])
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
i_2(uint256) := ϕ(['i_3', 'i_1'])
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_217(bool) = i_2 < MAX_LOOP_LIMIT_1
[i]Type for TMP_217

Name: TMP_217 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_218(uint256) = D_2 (c)* D_2
Finance type key: (40, 40)
[i]Type for TMP_218

Name: TMP_218 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_219(uint256) = TMP_218 (c)/ xp0_1
[i]Type for TMP_219

Name: TMP_219 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_220(uint256) = TMP_219 (c)* D_2
[i]Type for TMP_220

Name: TMP_220 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
TMP_221(uint256) = TMP_220 (c)/ xp1_1
[i]Type for TMP_221

Name: TMP_221 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
TMP_222(uint256) = TMP_221 (c)/ 4
[i]Type for TMP_222

Name: TMP_222 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: price/exchange rate
dP_1(uint256) := TMP_222(uint256)
Finance type key: (40, -1)
[i]Type for dP

Name: dP Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: price/exchange rate
prevD_1(uint256) := D_2(uint256)
Finance type key: (40, -1)
[i]Type for prevD

Name: prevD Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
computed_2(uint256) := D_3(uint256)
Finance type key: (40, -1)
[i]Type for computed

Name: computed Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
TMP_223(uint256) = N_A_2 (c)* s_1
[i]Type for TMP_223

Name: TMP_223 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_224(uint256) = TMP_223 (c)/ A_PRECISION_1
[i]Type for TMP_224

Name: TMP_224 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_225(uint256) = 2 (c)* dP_1
[i]Type for TMP_225

Name: TMP_225 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: price/exchange rate
TMP_226(uint256) = TMP_224 (c)+ TMP_225
[i]Type for TMP_226

Name: TMP_226 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: price/exchange rate
TMP_227(uint256) = TMP_226 (c)* D_2
Finance type key: (40, 40)
[i]Type for TMP_227

Name: TMP_227 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_228(uint256) = N_A_2 (c)/ A_PRECISION_1
[i]Type for TMP_228

Name: TMP_228 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_229(uint256) = TMP_228 (c)- 1
[i]Type for TMP_229

Name: TMP_229 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
TMP_230(uint256) = TMP_229 (c)* D_2
[i]Type for TMP_230

Name: TMP_230 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: price/exchange rate
TMP_231(uint256) = 3 (c)* dP_1
[i]Type for TMP_231

Name: TMP_231 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 12
Fields: 
Finance Type: price/exchange rate
TMP_232(uint256) = TMP_230 (c)+ TMP_231
Finance type key: (40, 40)
[i]Type for TMP_232

Name: TMP_232 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 13
Fields: 
Finance Type: price/exchange rate
TMP_233(uint256) = TMP_227 (c)/ TMP_232
[i]Type for TMP_233

Name: TMP_233 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
D_3(uint256) := TMP_233(uint256)
Finance type key: (40, -1)
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
TMP_234(bool) = LIBRARY_CALL, dest:MathUtils, function:MathUtils.within1(uint256,uint256), arguments:['D_3', 'prevD_1'] 
[i]Type for TMP_234

Name: TMP_234 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_235(uint256) := i_2(uint256)
Finance type key: (-1, -1)
[i]Type for TMP_235

Name: TMP_235 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_3(uint256) = i_2 (c)+ 1
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
xp0_1(uint256) := ϕ(['xpIn_3', 'xp0_1'])
[i]Type for xp0

Name: xp0 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
xp1_1(uint256) := ϕ(['xpOut_3', 'xp1_1'])
[i]Type for xp1

Name: xp1 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MAX_LOOP_LIMIT_1(uint256) := ϕ(['MAX_LOOP_LIMIT_0'])
[i]Type for MAX_LOOP_LIMIT

Name: MAX_LOOP_LIMIT Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
N_A_2(uint256) := ϕ(['N_A_0', 'N_A_1'])
[i]Type for N_A

Name: N_A Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
A_PRECISION_1(uint256) := ϕ(['A_PRECISION_0'])
[i]Type for A_PRECISION

Name: A_PRECISION Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_215(uint256) = xp0_1 (c)+ xp1_1
[i]Type for TMP_215

Name: TMP_215 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
s_1(uint256) := TMP_215(uint256)
Finance type key: (-1, -1)
[i]Type for s

Name: s Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_216(bool) = s_1 == 0
[i]Type for TMP_216

Name: TMP_216 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
computed_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for computed

Name: computed Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
D_1(uint256) := s_1(uint256)
Finance type key: (-1, -1)
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
D_2(uint256) := ϕ(['D_3', 'D_1'])
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
i_2(uint256) := ϕ(['i_3', 'i_1'])
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_217(bool) = i_2 < MAX_LOOP_LIMIT_1
[i]Type for TMP_217

Name: TMP_217 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_218(uint256) = D_2 (c)* D_2
Finance type key: (40, 40)
[i]Type for TMP_218

Name: TMP_218 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_219(uint256) = TMP_218 (c)/ xp0_1
[i]Type for TMP_219

Name: TMP_219 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_220(uint256) = TMP_219 (c)* D_2
[i]Type for TMP_220

Name: TMP_220 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
TMP_221(uint256) = TMP_220 (c)/ xp1_1
[i]Type for TMP_221

Name: TMP_221 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
TMP_222(uint256) = TMP_221 (c)/ 4
[i]Type for TMP_222

Name: TMP_222 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: price/exchange rate
dP_1(uint256) := TMP_222(uint256)
Finance type key: (40, -1)
[i]Type for dP

Name: dP Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: price/exchange rate
prevD_1(uint256) := D_2(uint256)
Finance type key: (40, -1)
[i]Type for prevD

Name: prevD Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
computed_2(uint256) := D_3(uint256)
Finance type key: (40, -1)
[i]Type for computed

Name: computed Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
TMP_223(uint256) = N_A_2 (c)* s_1
[i]Type for TMP_223

Name: TMP_223 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_224(uint256) = TMP_223 (c)/ A_PRECISION_1
[i]Type for TMP_224

Name: TMP_224 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_225(uint256) = 2 (c)* dP_1
[i]Type for TMP_225

Name: TMP_225 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: price/exchange rate
TMP_226(uint256) = TMP_224 (c)+ TMP_225
[i]Type for TMP_226

Name: TMP_226 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: price/exchange rate
TMP_227(uint256) = TMP_226 (c)* D_2
Finance type key: (40, 40)
[i]Type for TMP_227

Name: TMP_227 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_228(uint256) = N_A_2 (c)/ A_PRECISION_1
[i]Type for TMP_228

Name: TMP_228 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_229(uint256) = TMP_228 (c)- 1
[i]Type for TMP_229

Name: TMP_229 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
TMP_230(uint256) = TMP_229 (c)* D_2
[i]Type for TMP_230

Name: TMP_230 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: price/exchange rate
TMP_231(uint256) = 3 (c)* dP_1
[i]Type for TMP_231

Name: TMP_231 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 12
Fields: 
Finance Type: price/exchange rate
TMP_232(uint256) = TMP_230 (c)+ TMP_231
Finance type key: (40, 40)
[i]Type for TMP_232

Name: TMP_232 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 13
Fields: 
Finance Type: price/exchange rate
TMP_233(uint256) = TMP_227 (c)/ TMP_232
[i]Type for TMP_233

Name: TMP_233 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
D_3(uint256) := TMP_233(uint256)
Finance type key: (40, -1)
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
TMP_234(bool) = LIBRARY_CALL, dest:MathUtils, function:MathUtils.within1(uint256,uint256), arguments:['D_3', 'prevD_1'] 
[i]Type for TMP_234

Name: TMP_234 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_235(uint256) := i_2(uint256)
Finance type key: (-1, -1)
[i]Type for TMP_235

Name: TMP_235 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_3(uint256) = i_2 (c)+ 1
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
[i]Type for TMP_200

Name: TMP_200 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
d_1(uint256) := TMP_200(uint256)
Finance type key: (-1, -1)
[i]Type for d

Name: d Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_201(uint256) = xpIn_3 (c)+ amountIn_4
[i]Type for TMP_201

Name: TMP_201 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
x_1(uint256) := TMP_201(uint256)
Finance type key: (12, -1)
[i]Type for x

Name: x Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
amountIn_3(uint256) = amountIn_1 (c)* token1PrecisionMultiplier_2
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: updated simple fee ratio
TMP_202(uint256) = INTERNAL_CALL, HybridPool._getY(uint256,uint256)(x_1,d_1)
x_1(uint256) := ϕ(['x_1'])
[i]Type for x

Name: x Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
D_1(uint256) := ϕ(['d_1'])
[i]Type for D

Name: D Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MAX_LOOP_LIMIT_2(uint256) := ϕ(['MAX_LOOP_LIMIT_0'])
[i]Type for MAX_LOOP_LIMIT

Name: MAX_LOOP_LIMIT Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
N_A_3(uint256) := ϕ(['N_A_0', 'N_A_1'])
[i]Type for N_A

Name: N_A Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
A_PRECISION_2(uint256) := ϕ(['A_PRECISION_0'])
[i]Type for A_PRECISION

Name: A_PRECISION Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_236(uint256) = D_1 (c)* D_1
[i]Type for TMP_236

Name: TMP_236 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_237(uint256) = x_1 (c)* 2
[i]Type for TMP_237

Name: TMP_237 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
TMP_238(uint256) = TMP_236 (c)/ TMP_237
[i]Type for TMP_238

Name: TMP_238 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
c_1(uint256) := TMP_238(uint256)
Finance type key: (12, -1)
[i]Type for c

Name: c Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
TMP_239(uint256) = c_1 (c)* D_1
[i]Type for TMP_239

Name: TMP_239 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
TMP_240(uint256) = N_A_3 (c)* 2
[i]Type for TMP_240

Name: TMP_240 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
TMP_241(uint256) = TMP_240 (c)/ A_PRECISION_2
[i]Type for TMP_241

Name: TMP_241 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
TMP_242(uint256) = TMP_239 (c)/ TMP_241
[i]Type for TMP_242

Name: TMP_242 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: updated simple fee ratio
c_2(uint256) := TMP_242(uint256)
Finance type key: (12, -1)
[i]Type for c

Name: c Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: updated simple fee ratio
TMP_243(uint256) = D_1 (c)* A_PRECISION_2
[i]Type for TMP_243

Name: TMP_243 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_244(uint256) = TMP_243 (c)/ N_A_3
[i]Type for TMP_244

Name: TMP_244 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_245(uint256) = x_1 (c)+ TMP_244
[i]Type for TMP_245

Name: TMP_245 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
b_1(uint256) := TMP_245(uint256)
Finance type key: (12, -1)
[i]Type for b

Name: b Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
y_1(uint256) := D_1(uint256)
Finance type key: (-1, -1)
[i]Type for y

Name: y Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for i

Name: i Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
y_2(uint256) := ϕ(['y_1', 'y_3'])
[i]Type for y

Name: y Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_2(uint256) := ϕ(['i_1', 'i_3'])
[i]Type for i

Name: i Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_246(bool) = i_2 < MAX_LOOP_LIMIT_2
[i]Type for TMP_246

Name: TMP_246 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
yPrev_1(uint256) := y_2(uint256)
Finance type key: (-1, -1)
[i]Type for yPrev

Name: yPrev Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_247(uint256) = y_2 (c)* y_2
[i]Type for TMP_247

Name: TMP_247 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_248(uint256) = TMP_247 (c)+ c_2
[i]Type for TMP_248

Name: TMP_248 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: updated simple fee ratio
TMP_249(uint256) = y_2 (c)* 2
[i]Type for TMP_249

Name: TMP_249 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_250(uint256) = TMP_249 (c)+ b_1
[i]Type for TMP_250

Name: TMP_250 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: updated simple fee ratio
TMP_251(uint256) = TMP_250 (c)- D_1
[i]Type for TMP_251

Name: TMP_251 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: updated simple fee ratio
TMP_252(uint256) = TMP_248 (c)/ TMP_251
Finance type key: (12, 12)
Finance type key: (12, 12)
[i]Type for TMP_252

Name: TMP_252 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
y_3(uint256) := TMP_252(uint256)
Finance type key: (-1, -1)
[i]Type for y

Name: y Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_253(bool) = LIBRARY_CALL, dest:MathUtils, function:MathUtils.within1(uint256,uint256), arguments:['y_3', 'yPrev_1'] 
[i]Type for TMP_253

Name: TMP_253 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_254(uint256) := i_2(uint256)
Finance type key: (-1, -1)
[i]Type for TMP_254

Name: TMP_254 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_3(uint256) = i_2 (c)+ 1
[i]Type for i

Name: i Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
x_1(uint256) := ϕ(['x_1'])
[i]Type for x

Name: x Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
D_1(uint256) := ϕ(['d_1'])
[i]Type for D

Name: D Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MAX_LOOP_LIMIT_2(uint256) := ϕ(['MAX_LOOP_LIMIT_0'])
[i]Type for MAX_LOOP_LIMIT

Name: MAX_LOOP_LIMIT Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
N_A_3(uint256) := ϕ(['N_A_0', 'N_A_1'])
[i]Type for N_A

Name: N_A Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
A_PRECISION_2(uint256) := ϕ(['A_PRECISION_0'])
[i]Type for A_PRECISION

Name: A_PRECISION Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_236(uint256) = D_1 (c)* D_1
[i]Type for TMP_236

Name: TMP_236 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_237(uint256) = x_1 (c)* 2
[i]Type for TMP_237

Name: TMP_237 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
TMP_238(uint256) = TMP_236 (c)/ TMP_237
[i]Type for TMP_238

Name: TMP_238 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
c_1(uint256) := TMP_238(uint256)
Finance type key: (12, -1)
[i]Type for c

Name: c Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
TMP_239(uint256) = c_1 (c)* D_1
[i]Type for TMP_239

Name: TMP_239 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
TMP_240(uint256) = N_A_3 (c)* 2
[i]Type for TMP_240

Name: TMP_240 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
TMP_241(uint256) = TMP_240 (c)/ A_PRECISION_2
[i]Type for TMP_241

Name: TMP_241 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
TMP_242(uint256) = TMP_239 (c)/ TMP_241
[i]Type for TMP_242

Name: TMP_242 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: updated simple fee ratio
c_2(uint256) := TMP_242(uint256)
Finance type key: (12, -1)
[i]Type for c

Name: c Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: updated simple fee ratio
TMP_243(uint256) = D_1 (c)* A_PRECISION_2
[i]Type for TMP_243

Name: TMP_243 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_244(uint256) = TMP_243 (c)/ N_A_3
[i]Type for TMP_244

Name: TMP_244 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_245(uint256) = x_1 (c)+ TMP_244
[i]Type for TMP_245

Name: TMP_245 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
b_1(uint256) := TMP_245(uint256)
Finance type key: (12, -1)
[i]Type for b

Name: b Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
y_1(uint256) := D_1(uint256)
Finance type key: (-1, -1)
[i]Type for y

Name: y Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for i

Name: i Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
y_2(uint256) := ϕ(['y_1', 'y_3'])
[i]Type for y

Name: y Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_2(uint256) := ϕ(['i_1', 'i_3'])
[i]Type for i

Name: i Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_246(bool) = i_2 < MAX_LOOP_LIMIT_2
[i]Type for TMP_246

Name: TMP_246 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
yPrev_1(uint256) := y_2(uint256)
Finance type key: (-1, -1)
[i]Type for yPrev

Name: yPrev Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_247(uint256) = y_2 (c)* y_2
[i]Type for TMP_247

Name: TMP_247 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_248(uint256) = TMP_247 (c)+ c_2
[i]Type for TMP_248

Name: TMP_248 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: updated simple fee ratio
TMP_249(uint256) = y_2 (c)* 2
[i]Type for TMP_249

Name: TMP_249 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_250(uint256) = TMP_249 (c)+ b_1
[i]Type for TMP_250

Name: TMP_250 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: updated simple fee ratio
TMP_251(uint256) = TMP_250 (c)- D_1
[i]Type for TMP_251

Name: TMP_251 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: updated simple fee ratio
TMP_252(uint256) = TMP_248 (c)/ TMP_251
Finance type key: (12, 12)
Finance type key: (12, 12)
[i]Type for TMP_252

Name: TMP_252 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
y_3(uint256) := TMP_252(uint256)
Finance type key: (-1, -1)
[i]Type for y

Name: y Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_253(bool) = LIBRARY_CALL, dest:MathUtils, function:MathUtils.within1(uint256,uint256), arguments:['y_3', 'yPrev_1'] 
[i]Type for TMP_253

Name: TMP_253 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_254(uint256) := i_2(uint256)
Finance type key: (-1, -1)
[i]Type for TMP_254

Name: TMP_254 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_3(uint256) = i_2 (c)+ 1
[i]Type for i

Name: i Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
[i]Type for TMP_202

Name: TMP_202 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
y_1(uint256) := TMP_202(uint256)
Finance type key: (-1, -1)
[i]Type for y

Name: y Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_203(uint256) = xpOut_3 (c)- y_1
[i]Type for TMP_203

Name: TMP_203 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_204(uint256) = TMP_203 (c)- 1
[i]Type for TMP_204

Name: TMP_204 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
dy_1(uint256) := TMP_204(uint256)
Finance type key: (-1, -1)
[i]Type for dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
dy_2(uint256) = dy_1 (c)/ token1PrecisionMultiplier_4
[i]Type for dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
dy_3(uint256) = dy_1 (c)/ token0PrecisionMultiplier_4
[i]Type for dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
amountIn_1(uint256) := ϕ(['TMP_153', 'TMP_124', 'TMP_103', 'TMP_112', 'TMP_130', 'TMP_140', 'amountIn_3'])
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
_reserve0_1(uint256) := ϕ(['_reserve0_1', '_reserve0_1', '_reserve0_1', 'TMP_104', 'TMP_113'])
[i]Type for _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
_reserve1_1(uint256) := ϕ(['_reserve1_1', 'TMP_105', 'TMP_114', '_reserve1_1', '_reserve1_1'])
[i]Type for _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
token0PrecisionMultiplier_2(uint256) := ϕ(['token0PrecisionMultiplier_0', 'token0PrecisionMultiplier_1', 'token0PrecisionMultiplier_4'])
[i]Type for token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
token1PrecisionMultiplier_2(uint256) := ϕ(['token1PrecisionMultiplier_4', 'token1PrecisionMultiplier_1', 'token1PrecisionMultiplier_0'])
[i]Type for token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_196(uint256) = _reserve0_1 (c)* token0PrecisionMultiplier_2
[i]Type for TMP_196

Name: TMP_196 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
xpIn_1(uint256) := TMP_196(uint256)
Finance type key: (-1, -1)
[i]Type for xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_197(uint256) = _reserve1_1 (c)* token1PrecisionMultiplier_2
[i]Type for TMP_197

Name: TMP_197 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
xpOut_1(uint256) := TMP_197(uint256)
Finance type key: (-1, -1)
[i]Type for xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_198(uint256) = _reserve1_1 (c)* token1PrecisionMultiplier_2
[i]Type for TMP_198

Name: TMP_198 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
xpIn_2(uint256) := TMP_198(uint256)
Finance type key: (-1, -1)
[i]Type for xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
amountIn_2(uint256) = amountIn_1 (c)* token0PrecisionMultiplier_2
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: updated simple fee ratio
TMP_199(uint256) = _reserve0_1 (c)* token0PrecisionMultiplier_2
[i]Type for TMP_199

Name: TMP_199 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
xpOut_2(uint256) := TMP_199(uint256)
Finance type key: (-1, -1)
[i]Type for xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
amountIn_4(uint256) := ϕ(['amountIn_3', 'amountIn_2'])
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
xpIn_3(uint256) := ϕ(['xpIn_1', 'xpIn_2'])
[i]Type for xpIn

Name: xpIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
xpOut_3(uint256) := ϕ(['xpOut_1', 'xpOut_2'])
[i]Type for xpOut

Name: xpOut Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_200(uint256) = INTERNAL_CALL, HybridPool._computeLiquidityFromAdjustedBalances(uint256,uint256)(xpIn_3,xpOut_3)
xp0_1(uint256) := ϕ(['xpIn_3', 'xp0_1'])
[i]Type for xp0

Name: xp0 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
xp1_1(uint256) := ϕ(['xpOut_3', 'xp1_1'])
[i]Type for xp1

Name: xp1 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MAX_LOOP_LIMIT_1(uint256) := ϕ(['MAX_LOOP_LIMIT_0'])
[i]Type for MAX_LOOP_LIMIT

Name: MAX_LOOP_LIMIT Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
N_A_2(uint256) := ϕ(['N_A_0', 'N_A_1'])
[i]Type for N_A

Name: N_A Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
A_PRECISION_1(uint256) := ϕ(['A_PRECISION_0'])
[i]Type for A_PRECISION

Name: A_PRECISION Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_215(uint256) = xp0_1 (c)+ xp1_1
[i]Type for TMP_215

Name: TMP_215 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
s_1(uint256) := TMP_215(uint256)
Finance type key: (-1, -1)
[i]Type for s

Name: s Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_216(bool) = s_1 == 0
[i]Type for TMP_216

Name: TMP_216 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
computed_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for computed

Name: computed Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
D_1(uint256) := s_1(uint256)
Finance type key: (-1, -1)
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
D_2(uint256) := ϕ(['D_3', 'D_1'])
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
i_2(uint256) := ϕ(['i_3', 'i_1'])
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_217(bool) = i_2 < MAX_LOOP_LIMIT_1
[i]Type for TMP_217

Name: TMP_217 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_218(uint256) = D_2 (c)* D_2
Finance type key: (40, 40)
[i]Type for TMP_218

Name: TMP_218 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_219(uint256) = TMP_218 (c)/ xp0_1
[i]Type for TMP_219

Name: TMP_219 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_220(uint256) = TMP_219 (c)* D_2
[i]Type for TMP_220

Name: TMP_220 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
TMP_221(uint256) = TMP_220 (c)/ xp1_1
[i]Type for TMP_221

Name: TMP_221 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
TMP_222(uint256) = TMP_221 (c)/ 4
[i]Type for TMP_222

Name: TMP_222 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: price/exchange rate
dP_1(uint256) := TMP_222(uint256)
Finance type key: (40, -1)
[i]Type for dP

Name: dP Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: price/exchange rate
prevD_1(uint256) := D_2(uint256)
Finance type key: (40, -1)
[i]Type for prevD

Name: prevD Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
computed_2(uint256) := D_3(uint256)
Finance type key: (40, -1)
[i]Type for computed

Name: computed Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
TMP_223(uint256) = N_A_2 (c)* s_1
[i]Type for TMP_223

Name: TMP_223 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_224(uint256) = TMP_223 (c)/ A_PRECISION_1
[i]Type for TMP_224

Name: TMP_224 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_225(uint256) = 2 (c)* dP_1
[i]Type for TMP_225

Name: TMP_225 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: price/exchange rate
TMP_226(uint256) = TMP_224 (c)+ TMP_225
[i]Type for TMP_226

Name: TMP_226 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: price/exchange rate
TMP_227(uint256) = TMP_226 (c)* D_2
Finance type key: (40, 40)
[i]Type for TMP_227

Name: TMP_227 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_228(uint256) = N_A_2 (c)/ A_PRECISION_1
[i]Type for TMP_228

Name: TMP_228 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_229(uint256) = TMP_228 (c)- 1
[i]Type for TMP_229

Name: TMP_229 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
TMP_230(uint256) = TMP_229 (c)* D_2
[i]Type for TMP_230

Name: TMP_230 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: price/exchange rate
TMP_231(uint256) = 3 (c)* dP_1
[i]Type for TMP_231

Name: TMP_231 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 12
Fields: 
Finance Type: price/exchange rate
TMP_232(uint256) = TMP_230 (c)+ TMP_231
Finance type key: (40, 40)
[i]Type for TMP_232

Name: TMP_232 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 13
Fields: 
Finance Type: price/exchange rate
TMP_233(uint256) = TMP_227 (c)/ TMP_232
[i]Type for TMP_233

Name: TMP_233 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
D_3(uint256) := TMP_233(uint256)
Finance type key: (40, -1)
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
TMP_234(bool) = LIBRARY_CALL, dest:MathUtils, function:MathUtils.within1(uint256,uint256), arguments:['D_3', 'prevD_1'] 
[i]Type for TMP_234

Name: TMP_234 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_235(uint256) := i_2(uint256)
Finance type key: (-1, -1)
[i]Type for TMP_235

Name: TMP_235 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_3(uint256) = i_2 (c)+ 1
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
xp0_1(uint256) := ϕ(['xpIn_3', 'xp0_1'])
[i]Type for xp0

Name: xp0 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
xp1_1(uint256) := ϕ(['xpOut_3', 'xp1_1'])
[i]Type for xp1

Name: xp1 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MAX_LOOP_LIMIT_1(uint256) := ϕ(['MAX_LOOP_LIMIT_0'])
[i]Type for MAX_LOOP_LIMIT

Name: MAX_LOOP_LIMIT Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
N_A_2(uint256) := ϕ(['N_A_0', 'N_A_1'])
[i]Type for N_A

Name: N_A Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
A_PRECISION_1(uint256) := ϕ(['A_PRECISION_0'])
[i]Type for A_PRECISION

Name: A_PRECISION Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_215(uint256) = xp0_1 (c)+ xp1_1
[i]Type for TMP_215

Name: TMP_215 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
s_1(uint256) := TMP_215(uint256)
Finance type key: (-1, -1)
[i]Type for s

Name: s Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_216(bool) = s_1 == 0
[i]Type for TMP_216

Name: TMP_216 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
computed_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for computed

Name: computed Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
D_1(uint256) := s_1(uint256)
Finance type key: (-1, -1)
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
D_2(uint256) := ϕ(['D_3', 'D_1'])
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
i_2(uint256) := ϕ(['i_3', 'i_1'])
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_217(bool) = i_2 < MAX_LOOP_LIMIT_1
[i]Type for TMP_217

Name: TMP_217 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_218(uint256) = D_2 (c)* D_2
Finance type key: (40, 40)
[i]Type for TMP_218

Name: TMP_218 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_219(uint256) = TMP_218 (c)/ xp0_1
[i]Type for TMP_219

Name: TMP_219 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_220(uint256) = TMP_219 (c)* D_2
[i]Type for TMP_220

Name: TMP_220 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
TMP_221(uint256) = TMP_220 (c)/ xp1_1
[i]Type for TMP_221

Name: TMP_221 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
TMP_222(uint256) = TMP_221 (c)/ 4
[i]Type for TMP_222

Name: TMP_222 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: price/exchange rate
dP_1(uint256) := TMP_222(uint256)
Finance type key: (40, -1)
[i]Type for dP

Name: dP Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: price/exchange rate
prevD_1(uint256) := D_2(uint256)
Finance type key: (40, -1)
[i]Type for prevD

Name: prevD Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
computed_2(uint256) := D_3(uint256)
Finance type key: (40, -1)
[i]Type for computed

Name: computed Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
TMP_223(uint256) = N_A_2 (c)* s_1
[i]Type for TMP_223

Name: TMP_223 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_224(uint256) = TMP_223 (c)/ A_PRECISION_1
[i]Type for TMP_224

Name: TMP_224 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_225(uint256) = 2 (c)* dP_1
[i]Type for TMP_225

Name: TMP_225 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: price/exchange rate
TMP_226(uint256) = TMP_224 (c)+ TMP_225
[i]Type for TMP_226

Name: TMP_226 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: price/exchange rate
TMP_227(uint256) = TMP_226 (c)* D_2
Finance type key: (40, 40)
[i]Type for TMP_227

Name: TMP_227 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_228(uint256) = N_A_2 (c)/ A_PRECISION_1
[i]Type for TMP_228

Name: TMP_228 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_229(uint256) = TMP_228 (c)- 1
[i]Type for TMP_229

Name: TMP_229 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
TMP_230(uint256) = TMP_229 (c)* D_2
[i]Type for TMP_230

Name: TMP_230 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: price/exchange rate
TMP_231(uint256) = 3 (c)* dP_1
[i]Type for TMP_231

Name: TMP_231 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 12
Fields: 
Finance Type: price/exchange rate
TMP_232(uint256) = TMP_230 (c)+ TMP_231
Finance type key: (40, 40)
[i]Type for TMP_232

Name: TMP_232 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 13
Fields: 
Finance Type: price/exchange rate
TMP_233(uint256) = TMP_227 (c)/ TMP_232
[i]Type for TMP_233

Name: TMP_233 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
D_3(uint256) := TMP_233(uint256)
Finance type key: (40, -1)
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
TMP_234(bool) = LIBRARY_CALL, dest:MathUtils, function:MathUtils.within1(uint256,uint256), arguments:['D_3', 'prevD_1'] 
[i]Type for TMP_234

Name: TMP_234 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_235(uint256) := i_2(uint256)
Finance type key: (-1, -1)
[i]Type for TMP_235

Name: TMP_235 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_3(uint256) = i_2 (c)+ 1
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
[i]Type for TMP_200

Name: TMP_200 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
d_1(uint256) := TMP_200(uint256)
Finance type key: (-1, -1)
[i]Type for d

Name: d Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_201(uint256) = xpIn_3 (c)+ amountIn_4
[i]Type for TMP_201

Name: TMP_201 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
x_1(uint256) := TMP_201(uint256)
Finance type key: (12, -1)
[i]Type for x

Name: x Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
amountIn_3(uint256) = amountIn_1 (c)* token1PrecisionMultiplier_2
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: updated simple fee ratio
TMP_202(uint256) = INTERNAL_CALL, HybridPool._getY(uint256,uint256)(x_1,d_1)
x_1(uint256) := ϕ(['x_1'])
[i]Type for x

Name: x Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
D_1(uint256) := ϕ(['d_1'])
[i]Type for D

Name: D Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MAX_LOOP_LIMIT_2(uint256) := ϕ(['MAX_LOOP_LIMIT_0'])
[i]Type for MAX_LOOP_LIMIT

Name: MAX_LOOP_LIMIT Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
N_A_3(uint256) := ϕ(['N_A_0', 'N_A_1'])
[i]Type for N_A

Name: N_A Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
A_PRECISION_2(uint256) := ϕ(['A_PRECISION_0'])
[i]Type for A_PRECISION

Name: A_PRECISION Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_236(uint256) = D_1 (c)* D_1
[i]Type for TMP_236

Name: TMP_236 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_237(uint256) = x_1 (c)* 2
[i]Type for TMP_237

Name: TMP_237 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
TMP_238(uint256) = TMP_236 (c)/ TMP_237
[i]Type for TMP_238

Name: TMP_238 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
c_1(uint256) := TMP_238(uint256)
Finance type key: (12, -1)
[i]Type for c

Name: c Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
TMP_239(uint256) = c_1 (c)* D_1
[i]Type for TMP_239

Name: TMP_239 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
TMP_240(uint256) = N_A_3 (c)* 2
[i]Type for TMP_240

Name: TMP_240 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
TMP_241(uint256) = TMP_240 (c)/ A_PRECISION_2
[i]Type for TMP_241

Name: TMP_241 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
TMP_242(uint256) = TMP_239 (c)/ TMP_241
[i]Type for TMP_242

Name: TMP_242 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: updated simple fee ratio
c_2(uint256) := TMP_242(uint256)
Finance type key: (12, -1)
[i]Type for c

Name: c Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: updated simple fee ratio
TMP_243(uint256) = D_1 (c)* A_PRECISION_2
[i]Type for TMP_243

Name: TMP_243 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_244(uint256) = TMP_243 (c)/ N_A_3
[i]Type for TMP_244

Name: TMP_244 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_245(uint256) = x_1 (c)+ TMP_244
[i]Type for TMP_245

Name: TMP_245 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
b_1(uint256) := TMP_245(uint256)
Finance type key: (12, -1)
[i]Type for b

Name: b Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
y_1(uint256) := D_1(uint256)
Finance type key: (-1, -1)
[i]Type for y

Name: y Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for i

Name: i Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
y_2(uint256) := ϕ(['y_1', 'y_3'])
[i]Type for y

Name: y Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_2(uint256) := ϕ(['i_1', 'i_3'])
[i]Type for i

Name: i Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_246(bool) = i_2 < MAX_LOOP_LIMIT_2
[i]Type for TMP_246

Name: TMP_246 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
yPrev_1(uint256) := y_2(uint256)
Finance type key: (-1, -1)
[i]Type for yPrev

Name: yPrev Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_247(uint256) = y_2 (c)* y_2
[i]Type for TMP_247

Name: TMP_247 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_248(uint256) = TMP_247 (c)+ c_2
[i]Type for TMP_248

Name: TMP_248 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: updated simple fee ratio
TMP_249(uint256) = y_2 (c)* 2
[i]Type for TMP_249

Name: TMP_249 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_250(uint256) = TMP_249 (c)+ b_1
[i]Type for TMP_250

Name: TMP_250 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: updated simple fee ratio
TMP_251(uint256) = TMP_250 (c)- D_1
[i]Type for TMP_251

Name: TMP_251 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: updated simple fee ratio
TMP_252(uint256) = TMP_248 (c)/ TMP_251
Finance type key: (12, 12)
Finance type key: (12, 12)
[i]Type for TMP_252

Name: TMP_252 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
y_3(uint256) := TMP_252(uint256)
Finance type key: (-1, -1)
[i]Type for y

Name: y Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_253(bool) = LIBRARY_CALL, dest:MathUtils, function:MathUtils.within1(uint256,uint256), arguments:['y_3', 'yPrev_1'] 
[i]Type for TMP_253

Name: TMP_253 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_254(uint256) := i_2(uint256)
Finance type key: (-1, -1)
[i]Type for TMP_254

Name: TMP_254 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_3(uint256) = i_2 (c)+ 1
[i]Type for i

Name: i Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
x_1(uint256) := ϕ(['x_1'])
[i]Type for x

Name: x Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
D_1(uint256) := ϕ(['d_1'])
[i]Type for D

Name: D Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MAX_LOOP_LIMIT_2(uint256) := ϕ(['MAX_LOOP_LIMIT_0'])
[i]Type for MAX_LOOP_LIMIT

Name: MAX_LOOP_LIMIT Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
N_A_3(uint256) := ϕ(['N_A_0', 'N_A_1'])
[i]Type for N_A

Name: N_A Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
A_PRECISION_2(uint256) := ϕ(['A_PRECISION_0'])
[i]Type for A_PRECISION

Name: A_PRECISION Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_236(uint256) = D_1 (c)* D_1
[i]Type for TMP_236

Name: TMP_236 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_237(uint256) = x_1 (c)* 2
[i]Type for TMP_237

Name: TMP_237 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
TMP_238(uint256) = TMP_236 (c)/ TMP_237
[i]Type for TMP_238

Name: TMP_238 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
c_1(uint256) := TMP_238(uint256)
Finance type key: (12, -1)
[i]Type for c

Name: c Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
TMP_239(uint256) = c_1 (c)* D_1
[i]Type for TMP_239

Name: TMP_239 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
TMP_240(uint256) = N_A_3 (c)* 2
[i]Type for TMP_240

Name: TMP_240 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
TMP_241(uint256) = TMP_240 (c)/ A_PRECISION_2
[i]Type for TMP_241

Name: TMP_241 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
TMP_242(uint256) = TMP_239 (c)/ TMP_241
[i]Type for TMP_242

Name: TMP_242 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: updated simple fee ratio
c_2(uint256) := TMP_242(uint256)
Finance type key: (12, -1)
[i]Type for c

Name: c Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: updated simple fee ratio
TMP_243(uint256) = D_1 (c)* A_PRECISION_2
[i]Type for TMP_243

Name: TMP_243 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_244(uint256) = TMP_243 (c)/ N_A_3
[i]Type for TMP_244

Name: TMP_244 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_245(uint256) = x_1 (c)+ TMP_244
[i]Type for TMP_245

Name: TMP_245 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
b_1(uint256) := TMP_245(uint256)
Finance type key: (12, -1)
[i]Type for b

Name: b Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
y_1(uint256) := D_1(uint256)
Finance type key: (-1, -1)
[i]Type for y

Name: y Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for i

Name: i Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
y_2(uint256) := ϕ(['y_1', 'y_3'])
[i]Type for y

Name: y Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_2(uint256) := ϕ(['i_1', 'i_3'])
[i]Type for i

Name: i Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_246(bool) = i_2 < MAX_LOOP_LIMIT_2
[i]Type for TMP_246

Name: TMP_246 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
yPrev_1(uint256) := y_2(uint256)
Finance type key: (-1, -1)
[i]Type for yPrev

Name: yPrev Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_247(uint256) = y_2 (c)* y_2
[i]Type for TMP_247

Name: TMP_247 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_248(uint256) = TMP_247 (c)+ c_2
[i]Type for TMP_248

Name: TMP_248 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: updated simple fee ratio
TMP_249(uint256) = y_2 (c)* 2
[i]Type for TMP_249

Name: TMP_249 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_250(uint256) = TMP_249 (c)+ b_1
[i]Type for TMP_250

Name: TMP_250 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: updated simple fee ratio
TMP_251(uint256) = TMP_250 (c)- D_1
[i]Type for TMP_251

Name: TMP_251 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: updated simple fee ratio
TMP_252(uint256) = TMP_248 (c)/ TMP_251
Finance type key: (12, 12)
Finance type key: (12, 12)
[i]Type for TMP_252

Name: TMP_252 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
y_3(uint256) := TMP_252(uint256)
Finance type key: (-1, -1)
[i]Type for y

Name: y Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_253(bool) = LIBRARY_CALL, dest:MathUtils, function:MathUtils.within1(uint256,uint256), arguments:['y_3', 'yPrev_1'] 
[i]Type for TMP_253

Name: TMP_253 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_254(uint256) := i_2(uint256)
Finance type key: (-1, -1)
[i]Type for TMP_254

Name: TMP_254 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_3(uint256) = i_2 (c)+ 1
[i]Type for i

Name: i Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
[i]Type for TMP_202

Name: TMP_202 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
y_1(uint256) := TMP_202(uint256)
Finance type key: (-1, -1)
[i]Type for y

Name: y Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_203(uint256) = xpOut_3 (c)- y_1
[i]Type for TMP_203

Name: TMP_203 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_204(uint256) = TMP_203 (c)- 1
[i]Type for TMP_204

Name: TMP_204 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
dy_1(uint256) := TMP_204(uint256)
Finance type key: (-1, -1)
[i]Type for dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
dy_2(uint256) = dy_1 (c)/ token1PrecisionMultiplier_4
[i]Type for dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
dy_3(uint256) = dy_1 (c)/ token0PrecisionMultiplier_4
[i]Type for dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
[i]Type for TMP_141

Name: TMP_141 Function: flashSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
amountOut_2(uint256) := TMP_141(uint256)
Finance type key: (-1, -1)
[i]Type for amountOut

Name: amountOut Function: flashSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_158(uint256) = balance1_1 (c)- _reserve1_1
[i]Type for TMP_158

Name: TMP_158 Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_159(bool) = TMP_158 >= amountIn_2
[i]Type for TMP_159

Name: TMP_159 Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_160(None) = SOLIDITY_CALL require(bool,string)(TMP_159,INSUFFICIENT_AMOUNT_IN)
[i]Type for TMP_160

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
INTERNAL_CALL, HybridPool._processSwap(address,address,uint256,bytes,bool)(token1_36,recipient_1,amountOut_2,context_1,unwrapBento_1)
tokenOut_1(address) := ϕ(['token1_36', 'token0_31'])
[i]Type for tokenOut

Name: tokenOut Function: _processSwap
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
to_1(address) := ϕ(['recipient_1'])
[i]Type for to

Name: to Function: _processSwap
Num: 
Den: 
Address: -990
Norm: u
LF: to
Value: u
Fields: 
Finance Type: undef
amountOut_1(uint256) := ϕ(['amountOut_1', 'amountOut_2'])
[i]Type for amountOut

Name: amountOut Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
data_1(bytes) := ϕ(['context_1'])
[i]Type for data

Name: data Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
unwrapBento_1(bool) := ϕ(['unwrapBento_1'])
[i]Type for unwrapBento

Name: unwrapBento Function: _processSwap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
INTERNAL_CALL, HybridPool._transfer(address,uint256,address,bool)(tokenOut_1,amountOut_1,to_1,unwrapBento_1)
token_1(address) := ϕ(['tokenOut_3', 'token1_17', 'token1_6', 'token0_5', 'tokenIn_1', 'token0_21', 'tokenIn_1', 'tokenOut_1'])
[i]Type for token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['_barFee_1', 'amount0_1', 'amountOut_3', 'fee_3', 'amountOut_1', 'amount1_2', 'amount0_3', 'amount1_1'])
[i]Type for amount

Name: amount Function: _transfer
Num: 
Den: 
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
to_1(address) := ϕ(['recipient_1', 'recipient_1', 'barFeeTo_16', 'barFeeTo_14', 'to_1', 'recipient_1'])
[i]Type for to

Name: to Function: _transfer
Num: 
Den: 
Address: -990
Norm: u
LF: to
Value: u
Fields: 
Finance Type: undef
unwrapBento_1(bool) := ϕ(['unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1'])
[i]Type for unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_6(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_74 (->None) := 4052550604(uint256)
Finance type key: (-1, -1)
[i]Type for REF_74

Name: REF_74 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4052550604
Fields: 
Finance Type: undef
TMP_208 = CONVERT this to address
[i]Type for TMP_208

Name: TMP_208 Function: _transfer
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_209(uint256) = INTERNAL_CALL, HybridPool._toShare(address,uint256)(token_1,amount_1)
token_1(address) := ϕ(['token1_21', 'token1_8', 'token0_18', 'token0_7', 'token_1'])
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['amount1_1', 'amount0_1', 'amount0_1', 'amount_1', 'amount1_1'])
[i]Type for input

Name: input Function: _toShare
Num: 
Den: 
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
bento_4(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_5(address) := ϕ(['bento_4', 'bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
output_1(uint256) := TMP_195(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token1_21', 'token1_8', 'token0_18', 'token0_7', 'token_1'])
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['amount1_1', 'amount0_1', 'amount0_1', 'amount_1', 'amount1_1'])
[i]Type for input

Name: input Function: _toShare
Num: 
Den: 
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
bento_4(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_5(address) := ϕ(['bento_4', 'bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
output_1(uint256) := TMP_195(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_209

Name: TMP_209 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_7(address) := ϕ(['bento_5'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
TMP_210(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_74,token_1,TMP_208,to_1,TMP_209)
[i]Type for TMP_210

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_24(bool,bytes) = LOW_LEVEL_CALL, dest:bento_7, function:call, arguments:['TMP_210']  
[i]Type for TUPLE_24

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_8(address) := ϕ(['bento_5', 'bento_7', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
success_1(bool)= UNPACK TUPLE_24 index: 0 
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_70 (->None) := 2547674416(uint256)
Finance type key: (-1, -1)
[i]Type for REF_70

Name: REF_70 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2547674416
Fields: 
Finance Type: undef
TMP_205 = CONVERT this to address
[i]Type for TMP_205

Name: TMP_205 Function: _transfer
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_206(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_70,token_1,TMP_205,to_1,amount_1,0)
[i]Type for TMP_206

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_23(bool,bytes) = LOW_LEVEL_CALL, dest:bento_6, function:call, arguments:['TMP_206']  
[i]Type for TUPLE_23

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_9(address) := ϕ(['bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
success_2(bool)= UNPACK TUPLE_23 index: 0 
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_211(None) = SOLIDITY_CALL require(bool,string)(success_scope_0_0,TRANSFER_FAILED)
[i]Type for TMP_211

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_207(None) = SOLIDITY_CALL require(bool,string)(success_2,WITHDRAW_FAILED)
[i]Type for TMP_207

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['tokenOut_3', 'token1_17', 'token1_6', 'token0_5', 'tokenIn_1', 'token0_21', 'tokenIn_1', 'tokenOut_1'])
[i]Type for token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['_barFee_1', 'amount0_1', 'amountOut_3', 'fee_3', 'amountOut_1', 'amount1_2', 'amount0_3', 'amount1_1'])
[i]Type for amount

Name: amount Function: _transfer
Num: 
Den: 
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
to_1(address) := ϕ(['recipient_1', 'recipient_1', 'barFeeTo_16', 'barFeeTo_14', 'to_1', 'recipient_1'])
[i]Type for to

Name: to Function: _transfer
Num: 
Den: 
Address: -990
Norm: u
LF: to
Value: u
Fields: 
Finance Type: undef
unwrapBento_1(bool) := ϕ(['unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1'])
[i]Type for unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_6(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_74 (->None) := 4052550604(uint256)
Finance type key: (-1, -1)
[i]Type for REF_74

Name: REF_74 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4052550604
Fields: 
Finance Type: undef
TMP_208 = CONVERT this to address
[i]Type for TMP_208

Name: TMP_208 Function: _transfer
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_209(uint256) = INTERNAL_CALL, HybridPool._toShare(address,uint256)(token_1,amount_1)
token_1(address) := ϕ(['token1_21', 'token1_8', 'token0_18', 'token0_7', 'token_1'])
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['amount1_1', 'amount0_1', 'amount0_1', 'amount_1', 'amount1_1'])
[i]Type for input

Name: input Function: _toShare
Num: 
Den: 
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
bento_4(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_5(address) := ϕ(['bento_4', 'bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
output_1(uint256) := TMP_195(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token1_21', 'token1_8', 'token0_18', 'token0_7', 'token_1'])
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['amount1_1', 'amount0_1', 'amount0_1', 'amount_1', 'amount1_1'])
[i]Type for input

Name: input Function: _toShare
Num: 
Den: 
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
bento_4(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_5(address) := ϕ(['bento_4', 'bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
output_1(uint256) := TMP_195(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_209

Name: TMP_209 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_7(address) := ϕ(['bento_5'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
TMP_210(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_74,token_1,TMP_208,to_1,TMP_209)
[i]Type for TMP_210

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_24(bool,bytes) = LOW_LEVEL_CALL, dest:bento_7, function:call, arguments:['TMP_210']  
[i]Type for TUPLE_24

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_8(address) := ϕ(['bento_5', 'bento_7', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
success_1(bool)= UNPACK TUPLE_24 index: 0 
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_70 (->None) := 2547674416(uint256)
Finance type key: (-1, -1)
[i]Type for REF_70

Name: REF_70 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2547674416
Fields: 
Finance Type: undef
TMP_205 = CONVERT this to address
[i]Type for TMP_205

Name: TMP_205 Function: _transfer
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_206(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_70,token_1,TMP_205,to_1,amount_1,0)
[i]Type for TMP_206

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_23(bool,bytes) = LOW_LEVEL_CALL, dest:bento_6, function:call, arguments:['TMP_206']  
[i]Type for TUPLE_23

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_9(address) := ϕ(['bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
success_2(bool)= UNPACK TUPLE_23 index: 0 
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_211(None) = SOLIDITY_CALL require(bool,string)(success_scope_0_0,TRANSFER_FAILED)
[i]Type for TMP_211

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_207(None) = SOLIDITY_CALL require(bool,string)(success_2,WITHDRAW_FAILED)
[i]Type for TMP_207

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_54 -> LENGTH data_1
[i]Type for REF_54

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_168(bool) = REF_54 != 0
[i]Type for TMP_168

Name: TMP_168 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_169 = CONVERT msg.sender to ITridentCallee
[i]Type for TMP_169

Name: TMP_169 Function: _processSwap
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:TMP_169(ITridentCallee), function:tridentSwapCallback, arguments:['data_1']  
tokenOut_1(address) := ϕ(['token1_36', 'token0_31'])
[i]Type for tokenOut

Name: tokenOut Function: _processSwap
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
to_1(address) := ϕ(['recipient_1'])
[i]Type for to

Name: to Function: _processSwap
Num: 
Den: 
Address: -990
Norm: u
LF: to
Value: u
Fields: 
Finance Type: undef
amountOut_1(uint256) := ϕ(['amountOut_1', 'amountOut_2'])
[i]Type for amountOut

Name: amountOut Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
data_1(bytes) := ϕ(['context_1'])
[i]Type for data

Name: data Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
unwrapBento_1(bool) := ϕ(['unwrapBento_1'])
[i]Type for unwrapBento

Name: unwrapBento Function: _processSwap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
INTERNAL_CALL, HybridPool._transfer(address,uint256,address,bool)(tokenOut_1,amountOut_1,to_1,unwrapBento_1)
token_1(address) := ϕ(['tokenOut_3', 'token1_17', 'token1_6', 'token0_5', 'tokenIn_1', 'token0_21', 'tokenIn_1', 'tokenOut_1'])
[i]Type for token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['_barFee_1', 'amount0_1', 'amountOut_3', 'fee_3', 'amountOut_1', 'amount1_2', 'amount0_3', 'amount1_1'])
[i]Type for amount

Name: amount Function: _transfer
Num: 
Den: 
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
to_1(address) := ϕ(['recipient_1', 'recipient_1', 'barFeeTo_16', 'barFeeTo_14', 'to_1', 'recipient_1'])
[i]Type for to

Name: to Function: _transfer
Num: 
Den: 
Address: -990
Norm: u
LF: to
Value: u
Fields: 
Finance Type: undef
unwrapBento_1(bool) := ϕ(['unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1'])
[i]Type for unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_6(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_74 (->None) := 4052550604(uint256)
Finance type key: (-1, -1)
[i]Type for REF_74

Name: REF_74 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4052550604
Fields: 
Finance Type: undef
TMP_208 = CONVERT this to address
[i]Type for TMP_208

Name: TMP_208 Function: _transfer
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_209(uint256) = INTERNAL_CALL, HybridPool._toShare(address,uint256)(token_1,amount_1)
token_1(address) := ϕ(['token1_21', 'token1_8', 'token0_18', 'token0_7', 'token_1'])
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['amount1_1', 'amount0_1', 'amount0_1', 'amount_1', 'amount1_1'])
[i]Type for input

Name: input Function: _toShare
Num: 
Den: 
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
bento_4(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_5(address) := ϕ(['bento_4', 'bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
output_1(uint256) := TMP_195(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token1_21', 'token1_8', 'token0_18', 'token0_7', 'token_1'])
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['amount1_1', 'amount0_1', 'amount0_1', 'amount_1', 'amount1_1'])
[i]Type for input

Name: input Function: _toShare
Num: 
Den: 
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
bento_4(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_5(address) := ϕ(['bento_4', 'bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
output_1(uint256) := TMP_195(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_209

Name: TMP_209 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_7(address) := ϕ(['bento_5'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
TMP_210(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_74,token_1,TMP_208,to_1,TMP_209)
[i]Type for TMP_210

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_24(bool,bytes) = LOW_LEVEL_CALL, dest:bento_7, function:call, arguments:['TMP_210']  
[i]Type for TUPLE_24

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_8(address) := ϕ(['bento_5', 'bento_7', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
success_1(bool)= UNPACK TUPLE_24 index: 0 
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_70 (->None) := 2547674416(uint256)
Finance type key: (-1, -1)
[i]Type for REF_70

Name: REF_70 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2547674416
Fields: 
Finance Type: undef
TMP_205 = CONVERT this to address
[i]Type for TMP_205

Name: TMP_205 Function: _transfer
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_206(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_70,token_1,TMP_205,to_1,amount_1,0)
[i]Type for TMP_206

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_23(bool,bytes) = LOW_LEVEL_CALL, dest:bento_6, function:call, arguments:['TMP_206']  
[i]Type for TUPLE_23

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_9(address) := ϕ(['bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
success_2(bool)= UNPACK TUPLE_23 index: 0 
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_211(None) = SOLIDITY_CALL require(bool,string)(success_scope_0_0,TRANSFER_FAILED)
[i]Type for TMP_211

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_207(None) = SOLIDITY_CALL require(bool,string)(success_2,WITHDRAW_FAILED)
[i]Type for TMP_207

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['tokenOut_3', 'token1_17', 'token1_6', 'token0_5', 'tokenIn_1', 'token0_21', 'tokenIn_1', 'tokenOut_1'])
[i]Type for token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['_barFee_1', 'amount0_1', 'amountOut_3', 'fee_3', 'amountOut_1', 'amount1_2', 'amount0_3', 'amount1_1'])
[i]Type for amount

Name: amount Function: _transfer
Num: 
Den: 
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
to_1(address) := ϕ(['recipient_1', 'recipient_1', 'barFeeTo_16', 'barFeeTo_14', 'to_1', 'recipient_1'])
[i]Type for to

Name: to Function: _transfer
Num: 
Den: 
Address: -990
Norm: u
LF: to
Value: u
Fields: 
Finance Type: undef
unwrapBento_1(bool) := ϕ(['unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1'])
[i]Type for unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_6(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_74 (->None) := 4052550604(uint256)
Finance type key: (-1, -1)
[i]Type for REF_74

Name: REF_74 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4052550604
Fields: 
Finance Type: undef
TMP_208 = CONVERT this to address
[i]Type for TMP_208

Name: TMP_208 Function: _transfer
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_209(uint256) = INTERNAL_CALL, HybridPool._toShare(address,uint256)(token_1,amount_1)
token_1(address) := ϕ(['token1_21', 'token1_8', 'token0_18', 'token0_7', 'token_1'])
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['amount1_1', 'amount0_1', 'amount0_1', 'amount_1', 'amount1_1'])
[i]Type for input

Name: input Function: _toShare
Num: 
Den: 
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
bento_4(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_5(address) := ϕ(['bento_4', 'bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
output_1(uint256) := TMP_195(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token1_21', 'token1_8', 'token0_18', 'token0_7', 'token_1'])
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['amount1_1', 'amount0_1', 'amount0_1', 'amount_1', 'amount1_1'])
[i]Type for input

Name: input Function: _toShare
Num: 
Den: 
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
bento_4(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_5(address) := ϕ(['bento_4', 'bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
output_1(uint256) := TMP_195(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_209

Name: TMP_209 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_7(address) := ϕ(['bento_5'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
TMP_210(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_74,token_1,TMP_208,to_1,TMP_209)
[i]Type for TMP_210

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_24(bool,bytes) = LOW_LEVEL_CALL, dest:bento_7, function:call, arguments:['TMP_210']  
[i]Type for TUPLE_24

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_8(address) := ϕ(['bento_5', 'bento_7', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
success_1(bool)= UNPACK TUPLE_24 index: 0 
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_70 (->None) := 2547674416(uint256)
Finance type key: (-1, -1)
[i]Type for REF_70

Name: REF_70 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2547674416
Fields: 
Finance Type: undef
TMP_205 = CONVERT this to address
[i]Type for TMP_205

Name: TMP_205 Function: _transfer
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_206(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_70,token_1,TMP_205,to_1,amount_1,0)
[i]Type for TMP_206

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_23(bool,bytes) = LOW_LEVEL_CALL, dest:bento_6, function:call, arguments:['TMP_206']  
[i]Type for TUPLE_23

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_9(address) := ϕ(['bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
success_2(bool)= UNPACK TUPLE_23 index: 0 
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_211(None) = SOLIDITY_CALL require(bool,string)(success_scope_0_0,TRANSFER_FAILED)
[i]Type for TMP_211

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_207(None) = SOLIDITY_CALL require(bool,string)(success_2,WITHDRAW_FAILED)
[i]Type for TMP_207

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_54 -> LENGTH data_1
[i]Type for REF_54

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_168(bool) = REF_54 != 0
[i]Type for TMP_168

Name: TMP_168 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_169 = CONVERT msg.sender to ITridentCallee
[i]Type for TMP_169

Name: TMP_169 Function: _processSwap
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:TMP_169(ITridentCallee), function:tridentSwapCallback, arguments:['data_1']  
TMP_143(uint256) = INTERNAL_CALL, HybridPool.__balance(address)(token0_35)
[i]Type for TMP_143

Name: TMP_143 Function: flashSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_144(uint256) = INTERNAL_CALL, HybridPool._toAmount(address,uint256)(token0_36,TMP_143)
token_1(address) := ϕ(['token0_36', 'token0_38', 'token1_29', 'token0_41', 'token1_44', 'token1_33', 'token1_39', 'tokenIn_1', 'token0_29'])
[i]Type for token

Name: token Function: _toAmount
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['TMP_143', '_reserve1_1', 'amountIn_1', 'amountIn_1', 'TMP_156', '_reserve0_1', 'TMP_184', 'TMP_186'])
[i]Type for input

Name: input Function: _toAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_191 = CONVERT this to address
[i]Type for TMP_191

Name: TMP_191 Function: _toAmount
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_192 = CONVERT TMP_191 to IBentoBoxMinimal
[i]Type for TMP_192

Name: TMP_192 Function: _toAmount
Num: 
Den: 
Address: 8
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
TMP_193(uint256) = HIGH_LEVEL_CALL, dest:TMP_192(IBentoBoxMinimal), function:toAmount, arguments:['token_1', 'input_1', 'False']  
[i]Type for TMP_193

Name: TMP_193 Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
output_1(uint256) := TMP_193(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
RETURN output_1
token_1(address) := ϕ(['token0_36', 'token0_38', 'token1_29', 'token0_41', 'token1_44', 'token1_33', 'token1_39', 'tokenIn_1', 'token0_29'])
[i]Type for token

Name: token Function: _toAmount
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['TMP_143', '_reserve1_1', 'amountIn_1', 'amountIn_1', 'TMP_156', '_reserve0_1', 'TMP_184', 'TMP_186'])
[i]Type for input

Name: input Function: _toAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_191 = CONVERT this to address
[i]Type for TMP_191

Name: TMP_191 Function: _toAmount
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_192 = CONVERT TMP_191 to IBentoBoxMinimal
[i]Type for TMP_192

Name: TMP_192 Function: _toAmount
Num: 
Den: 
Address: 8
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
TMP_193(uint256) = HIGH_LEVEL_CALL, dest:TMP_192(IBentoBoxMinimal), function:toAmount, arguments:['token_1', 'input_1', 'False']  
[i]Type for TMP_193

Name: TMP_193 Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
output_1(uint256) := TMP_193(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
RETURN output_1
[i]Type for TMP_144

Name: TMP_144 Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
balance0_1(uint256) := TMP_144(uint256)
Finance type key: (-1, -1)
[i]Type for balance0

Name: balance0 Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
amountOut_3(uint256) := ϕ(['amountOut_1', 'amountOut_2'])
[i]Type for amountOut

Name: amountOut Function: flashSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
amountIn_4(uint256) := ϕ(['amountIn_2', 'amountIn_3'])
[i]Type for amountIn

Name: amountIn Function: flashSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tokenOut_3(address) := ϕ(['tokenOut_1', 'tokenOut_2'])
[i]Type for tokenOut

Name: tokenOut Function: flashSwap
Num: 
Den: 
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
fee_3(uint256) := ϕ(['fee_2', 'fee_1'])
[i]Type for fee

Name: fee Function: flashSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
TMP_145(uint256) = balance0_1 (c)- _reserve0_1
[i]Type for TMP_145

Name: TMP_145 Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_146(bool) = TMP_145 >= amountIn_3
[i]Type for TMP_146

Name: TMP_146 Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_147(None) = SOLIDITY_CALL require(bool,string)(TMP_146,INSUFFICIENT_AMOUNT_IN)
[i]Type for TMP_147

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
INTERNAL_CALL, HybridPool._transfer(address,uint256,address,bool)(tokenIn_1,fee_3,barFeeTo_14,False)
token_1(address) := ϕ(['tokenOut_3', 'token1_17', 'token1_6', 'token0_5', 'tokenIn_1', 'token0_21', 'tokenIn_1', 'tokenOut_1'])
[i]Type for token

Name: token Function: _transfer
Num: 
Den: 
Address: -995
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['_barFee_1', 'amount0_1', 'amountOut_3', 'fee_3', 'amountOut_1', 'amount1_2', 'amount0_3', 'amount1_1'])
[i]Type for amount

Name: amount Function: _transfer
Num: 
Den: 
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
to_1(address) := ϕ(['recipient_1', 'recipient_1', 'barFeeTo_16', 'barFeeTo_14', 'to_1', 'recipient_1'])
[i]Type for to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 7
Norm: u
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
unwrapBento_1(bool) := ϕ(['unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1'])
[i]Type for unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_6(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_74 (->None) := 4052550604(uint256)
Finance type key: (-1, -1)
[i]Type for REF_74

Name: REF_74 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4052550604
Fields: 
Finance Type: undef
TMP_208 = CONVERT this to address
[i]Type for TMP_208

Name: TMP_208 Function: _transfer
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_209(uint256) = INTERNAL_CALL, HybridPool._toShare(address,uint256)(token_1,amount_1)
token_1(address) := ϕ(['token1_21', 'token1_8', 'token0_18', 'token0_7', 'token_1'])
[i]Type for token

Name: token Function: _toShare
Num: 
Den: 
Address: -995
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['amount1_1', 'amount0_1', 'amount0_1', 'amount_1', 'amount1_1'])
[i]Type for input

Name: input Function: _toShare
Num: 
Den: 
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
bento_4(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_5(address) := ϕ(['bento_4', 'bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
output_1(uint256) := TMP_195(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token1_21', 'token1_8', 'token0_18', 'token0_7', 'token_1'])
[i]Type for token

Name: token Function: _toShare
Num: 
Den: 
Address: -995
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['amount1_1', 'amount0_1', 'amount0_1', 'amount_1', 'amount1_1'])
[i]Type for input

Name: input Function: _toShare
Num: 
Den: 
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
bento_4(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_5(address) := ϕ(['bento_4', 'bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
output_1(uint256) := TMP_195(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_209

Name: TMP_209 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_7(address) := ϕ(['bento_5'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
TMP_210(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_74,token_1,TMP_208,to_1,TMP_209)
[i]Type for TMP_210

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_24(bool,bytes) = LOW_LEVEL_CALL, dest:bento_7, function:call, arguments:['TMP_210']  
[i]Type for TUPLE_24

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_8(address) := ϕ(['bento_5', 'bento_7', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
success_1(bool)= UNPACK TUPLE_24 index: 0 
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_70 (->None) := 2547674416(uint256)
Finance type key: (-1, -1)
[i]Type for REF_70

Name: REF_70 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2547674416
Fields: 
Finance Type: undef
TMP_205 = CONVERT this to address
[i]Type for TMP_205

Name: TMP_205 Function: _transfer
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_206(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_70,token_1,TMP_205,to_1,amount_1,0)
[i]Type for TMP_206

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_23(bool,bytes) = LOW_LEVEL_CALL, dest:bento_6, function:call, arguments:['TMP_206']  
[i]Type for TUPLE_23

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_9(address) := ϕ(['bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
success_2(bool)= UNPACK TUPLE_23 index: 0 
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_211(None) = SOLIDITY_CALL require(bool,string)(success_scope_0_0,TRANSFER_FAILED)
[i]Type for TMP_211

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_207(None) = SOLIDITY_CALL require(bool,string)(success_2,WITHDRAW_FAILED)
[i]Type for TMP_207

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['tokenOut_3', 'token1_17', 'token1_6', 'token0_5', 'tokenIn_1', 'token0_21', 'tokenIn_1', 'tokenOut_1'])
[i]Type for token

Name: token Function: _transfer
Num: 
Den: 
Address: -995
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['_barFee_1', 'amount0_1', 'amountOut_3', 'fee_3', 'amountOut_1', 'amount1_2', 'amount0_3', 'amount1_1'])
[i]Type for amount

Name: amount Function: _transfer
Num: 
Den: 
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
to_1(address) := ϕ(['recipient_1', 'recipient_1', 'barFeeTo_16', 'barFeeTo_14', 'to_1', 'recipient_1'])
[i]Type for to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 7
Norm: u
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
unwrapBento_1(bool) := ϕ(['unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1'])
[i]Type for unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_6(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_74 (->None) := 4052550604(uint256)
Finance type key: (-1, -1)
[i]Type for REF_74

Name: REF_74 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4052550604
Fields: 
Finance Type: undef
TMP_208 = CONVERT this to address
[i]Type for TMP_208

Name: TMP_208 Function: _transfer
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_209(uint256) = INTERNAL_CALL, HybridPool._toShare(address,uint256)(token_1,amount_1)
token_1(address) := ϕ(['token1_21', 'token1_8', 'token0_18', 'token0_7', 'token_1'])
[i]Type for token

Name: token Function: _toShare
Num: 
Den: 
Address: -995
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['amount1_1', 'amount0_1', 'amount0_1', 'amount_1', 'amount1_1'])
[i]Type for input

Name: input Function: _toShare
Num: 
Den: 
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
bento_4(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_5(address) := ϕ(['bento_4', 'bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
output_1(uint256) := TMP_195(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token1_21', 'token1_8', 'token0_18', 'token0_7', 'token_1'])
[i]Type for token

Name: token Function: _toShare
Num: 
Den: 
Address: -995
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['amount1_1', 'amount0_1', 'amount0_1', 'amount_1', 'amount1_1'])
[i]Type for input

Name: input Function: _toShare
Num: 
Den: 
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
bento_4(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_5(address) := ϕ(['bento_4', 'bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
output_1(uint256) := TMP_195(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_209

Name: TMP_209 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_7(address) := ϕ(['bento_5'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
TMP_210(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_74,token_1,TMP_208,to_1,TMP_209)
[i]Type for TMP_210

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_24(bool,bytes) = LOW_LEVEL_CALL, dest:bento_7, function:call, arguments:['TMP_210']  
[i]Type for TUPLE_24

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_8(address) := ϕ(['bento_5', 'bento_7', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
success_1(bool)= UNPACK TUPLE_24 index: 0 
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_70 (->None) := 2547674416(uint256)
Finance type key: (-1, -1)
[i]Type for REF_70

Name: REF_70 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2547674416
Fields: 
Finance Type: undef
TMP_205 = CONVERT this to address
[i]Type for TMP_205

Name: TMP_205 Function: _transfer
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_206(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_70,token_1,TMP_205,to_1,amount_1,0)
[i]Type for TMP_206

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_23(bool,bytes) = LOW_LEVEL_CALL, dest:bento_6, function:call, arguments:['TMP_206']  
[i]Type for TUPLE_23

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_9(address) := ϕ(['bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
success_2(bool)= UNPACK TUPLE_23 index: 0 
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_211(None) = SOLIDITY_CALL require(bool,string)(success_scope_0_0,TRANSFER_FAILED)
[i]Type for TMP_211

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_207(None) = SOLIDITY_CALL require(bool,string)(success_2,WITHDRAW_FAILED)
[i]Type for TMP_207

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
INTERNAL_CALL, HybridPool._updateReserves()()
MAX_FEE_2(uint256) := ϕ(['MAX_FEE_5', 'MAX_FEE_0', 'MAX_FEE_6', 'MAX_FEE_11'])
[i]Type for MAX_FEE

Name: MAX_FEE Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
swapFee_2(uint256) := ϕ(['swapFee_0', 'swapFee_5', 'swapFee_1', 'swapFee_11', 'swapFee_6'])
[i]Type for swapFee

Name: swapFee Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: simple fee ratio
barFeeTo_2(address) := ϕ(['barFeeTo_0', 'barFeeTo_15', 'barFeeTo_1', 'barFeeTo_17'])
[i]Type for barFeeTo

Name: barFeeTo Function: flashSwap
Num: -1
Den: -1
Address: 7
Norm: u
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
token0_27(address) := ϕ(['token0_10', 'token0_26', 'token0_0', 'token0_19', 'token0_42', 'token0_39', 'token0_32', 'token0_1', 'token0_46', 'token0_22', 'token0_37'])
[i]Type for token0

Name: token0 Function: flashSwap
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
token1_27(address) := ϕ(['token1_1', 'token1_22', 'token1_34', 'token1_37', 'token1_10', 'token1_40', 'token1_0', 'token1_26', 'token1_45', 'token1_18'])
[i]Type for token1

Name: token1 Function: flashSwap
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
MODIFIER_CALL, HybridPool.lock()()
TUPLE_17(address,address,bool,uint256,bytes) = SOLIDITY_CALL abi.decode()(data_1(address,address,bool,uint256,bytes))
[i]Type for TUPLE_17

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tokenIn_1(address)= UNPACK TUPLE_17 index: 0 
[i]Type for tokenIn

Name: tokenIn Function: flashSwap
Num: 
Den: 
Address: -995
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
recipient_1(address)= UNPACK TUPLE_17 index: 1 
[i]Type for recipient

Name: recipient Function: flashSwap
Num: 
Den: 
Address: -990
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
unwrapBento_1(bool)= UNPACK TUPLE_17 index: 2 
[i]Type for unwrapBento

Name: unwrapBento Function: flashSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
amountIn_1(uint256)= UNPACK TUPLE_17 index: 3 
[i]Type for amountIn

Name: amountIn Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
context_1(bytes)= UNPACK TUPLE_17 index: 4 
[i]Type for context

Name: context Function: flashSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_18(uint256,uint256) = INTERNAL_CALL, HybridPool._getReserves()()
[i]Type for TUPLE_18

Name: TUPLE_18 Function: flashSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token0_29(address) := ϕ(['token0_39'])
[i]Type for token0

Name: token0 Function: flashSwap
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
token1_29(address) := ϕ(['token1_40'])
[i]Type for token1

Name: token1 Function: flashSwap
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
_reserve0_1(uint256)= UNPACK TUPLE_18 index: 0 
[i]Type for _reserve0

Name: _reserve0 Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
_reserve1_1(uint256)= UNPACK TUPLE_18 index: 1 
[i]Type for _reserve1

Name: _reserve1 Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
TMP_136(bool) = tokenIn_1 == token0_29
[i]Type for TMP_136

Name: TMP_136 Function: flashSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_148(bool) = tokenIn_1 == token1_29
[i]Type for TMP_148

Name: TMP_148 Function: flashSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_149(None) = SOLIDITY_CALL require(bool,string)(TMP_148,INVALID_INPUT_TOKEN)
[i]Type for TMP_149

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tokenOut_1(address) := token0_29(address)
Finance type key: (-1, -1)
[i]Type for tokenOut

Name: tokenOut Function: flashSwap
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
tokenOut_2(address) := token1_29(address)
Finance type key: (-1, -1)
[i]Type for tokenOut

Name: tokenOut Function: flashSwap
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
TMP_150(uint256) = INTERNAL_CALL, HybridPool._toAmount(address,uint256)(token1_29,amountIn_1)
token_1(address) := ϕ(['token0_36', 'token0_38', 'token1_29', 'token0_41', 'token1_44', 'token1_33', 'token1_39', 'tokenIn_1', 'token0_29'])
[i]Type for token

Name: token Function: _toAmount
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['TMP_143', '_reserve1_1', 'amountIn_1', 'amountIn_1', 'TMP_156', '_reserve0_1', 'TMP_184', 'TMP_186'])
[i]Type for input

Name: input Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_191 = CONVERT this to address
[i]Type for TMP_191

Name: TMP_191 Function: _toAmount
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_192 = CONVERT TMP_191 to IBentoBoxMinimal
[i]Type for TMP_192

Name: TMP_192 Function: _toAmount
Num: 
Den: 
Address: 8
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
TMP_193(uint256) = HIGH_LEVEL_CALL, dest:TMP_192(IBentoBoxMinimal), function:toAmount, arguments:['token_1', 'input_1', 'False']  
[i]Type for TMP_193

Name: TMP_193 Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
output_1(uint256) := TMP_193(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
RETURN output_1
token_1(address) := ϕ(['token0_36', 'token0_38', 'token1_29', 'token0_41', 'token1_44', 'token1_33', 'token1_39', 'tokenIn_1', 'token0_29'])
[i]Type for token

Name: token Function: _toAmount
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['TMP_143', '_reserve1_1', 'amountIn_1', 'amountIn_1', 'TMP_156', '_reserve0_1', 'TMP_184', 'TMP_186'])
[i]Type for input

Name: input Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_191 = CONVERT this to address
[i]Type for TMP_191

Name: TMP_191 Function: _toAmount
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_192 = CONVERT TMP_191 to IBentoBoxMinimal
[i]Type for TMP_192

Name: TMP_192 Function: _toAmount
Num: 
Den: 
Address: 8
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
TMP_193(uint256) = HIGH_LEVEL_CALL, dest:TMP_192(IBentoBoxMinimal), function:toAmount, arguments:['token_1', 'input_1', 'False']  
[i]Type for TMP_193

Name: TMP_193 Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
output_1(uint256) := TMP_193(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
RETURN output_1
[i]Type for TMP_150

Name: TMP_150 Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
amountIn_2(uint256) := TMP_150(uint256)
Finance type key: (-1, -1)
[i]Type for amountIn

Name: amountIn Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
TMP_137(uint256) = INTERNAL_CALL, HybridPool._toAmount(address,uint256)(token0_29,amountIn_1)
[i]Type for TMP_137

Name: TMP_137 Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
amountIn_3(uint256) := TMP_137(uint256)
Finance type key: (-1, -1)
[i]Type for amountIn

Name: amountIn Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
TMP_151(uint256) = amountIn_2 (c)* swapFee_5
[i]Type for TMP_151

Name: TMP_151 Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
TMP_152(uint256) = TMP_151 (c)/ MAX_FEE_5
[i]Type for TMP_152

Name: TMP_152 Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
fee_1(uint256) := TMP_152(uint256)
Finance type key: (12, -1)
[i]Type for fee

Name: fee Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
TMP_153(uint256) = amountIn_2 (c)- fee_1
[i]Type for TMP_153

Name: TMP_153 Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
TMP_154(uint256) = INTERNAL_CALL, HybridPool._getAmountOut(uint256,uint256,uint256,bool)(TMP_153,_reserve0_1,_reserve1_1,False)
amountIn_1(uint256) := ϕ(['TMP_153', 'TMP_124', 'TMP_103', 'TMP_112', 'TMP_130', 'TMP_140', 'amountIn_3'])
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
_reserve0_1(uint256) := ϕ(['_reserve0_1', '_reserve0_1', '_reserve0_1', 'TMP_104', 'TMP_113'])
[i]Type for _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
_reserve1_1(uint256) := ϕ(['_reserve1_1', 'TMP_105', 'TMP_114', '_reserve1_1', '_reserve1_1'])
[i]Type for _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
token0PrecisionMultiplier_2(uint256) := ϕ(['token0PrecisionMultiplier_0', 'token0PrecisionMultiplier_1', 'token0PrecisionMultiplier_4'])
[i]Type for token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
token1PrecisionMultiplier_2(uint256) := ϕ(['token1PrecisionMultiplier_4', 'token1PrecisionMultiplier_1', 'token1PrecisionMultiplier_0'])
[i]Type for token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_196(uint256) = _reserve0_1 (c)* token0PrecisionMultiplier_2
[i]Type for TMP_196

Name: TMP_196 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
xpIn_1(uint256) := TMP_196(uint256)
Finance type key: (-1, -1)
[i]Type for xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_197(uint256) = _reserve1_1 (c)* token1PrecisionMultiplier_2
[i]Type for TMP_197

Name: TMP_197 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
xpOut_1(uint256) := TMP_197(uint256)
Finance type key: (-1, -1)
[i]Type for xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_198(uint256) = _reserve1_1 (c)* token1PrecisionMultiplier_2
[i]Type for TMP_198

Name: TMP_198 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
xpIn_2(uint256) := TMP_198(uint256)
Finance type key: (-1, -1)
[i]Type for xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
amountIn_2(uint256) = amountIn_1 (c)* token0PrecisionMultiplier_2
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: updated simple fee ratio
TMP_199(uint256) = _reserve0_1 (c)* token0PrecisionMultiplier_2
[i]Type for TMP_199

Name: TMP_199 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
xpOut_2(uint256) := TMP_199(uint256)
Finance type key: (-1, -1)
[i]Type for xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
amountIn_4(uint256) := ϕ(['amountIn_3', 'amountIn_2'])
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
xpIn_3(uint256) := ϕ(['xpIn_1', 'xpIn_2'])
[i]Type for xpIn

Name: xpIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
xpOut_3(uint256) := ϕ(['xpOut_1', 'xpOut_2'])
[i]Type for xpOut

Name: xpOut Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_200(uint256) = INTERNAL_CALL, HybridPool._computeLiquidityFromAdjustedBalances(uint256,uint256)(xpIn_3,xpOut_3)
xp0_1(uint256) := ϕ(['xpIn_3', 'xp0_1'])
[i]Type for xp0

Name: xp0 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
xp1_1(uint256) := ϕ(['xpOut_3', 'xp1_1'])
[i]Type for xp1

Name: xp1 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MAX_LOOP_LIMIT_1(uint256) := ϕ(['MAX_LOOP_LIMIT_0'])
[i]Type for MAX_LOOP_LIMIT

Name: MAX_LOOP_LIMIT Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
N_A_2(uint256) := ϕ(['N_A_0', 'N_A_1'])
[i]Type for N_A

Name: N_A Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
A_PRECISION_1(uint256) := ϕ(['A_PRECISION_0'])
[i]Type for A_PRECISION

Name: A_PRECISION Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_215(uint256) = xp0_1 (c)+ xp1_1
[i]Type for TMP_215

Name: TMP_215 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
s_1(uint256) := TMP_215(uint256)
Finance type key: (-1, -1)
[i]Type for s

Name: s Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_216(bool) = s_1 == 0
[i]Type for TMP_216

Name: TMP_216 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
computed_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for computed

Name: computed Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
D_1(uint256) := s_1(uint256)
Finance type key: (-1, -1)
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
D_2(uint256) := ϕ(['D_3', 'D_1'])
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
i_2(uint256) := ϕ(['i_3', 'i_1'])
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_217(bool) = i_2 < MAX_LOOP_LIMIT_1
[i]Type for TMP_217

Name: TMP_217 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_218(uint256) = D_2 (c)* D_2
Finance type key: (40, 40)
[i]Type for TMP_218

Name: TMP_218 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_219(uint256) = TMP_218 (c)/ xp0_1
[i]Type for TMP_219

Name: TMP_219 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_220(uint256) = TMP_219 (c)* D_2
[i]Type for TMP_220

Name: TMP_220 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
TMP_221(uint256) = TMP_220 (c)/ xp1_1
[i]Type for TMP_221

Name: TMP_221 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
TMP_222(uint256) = TMP_221 (c)/ 4
[i]Type for TMP_222

Name: TMP_222 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: price/exchange rate
dP_1(uint256) := TMP_222(uint256)
Finance type key: (40, -1)
[i]Type for dP

Name: dP Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: price/exchange rate
prevD_1(uint256) := D_2(uint256)
Finance type key: (40, -1)
[i]Type for prevD

Name: prevD Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
computed_2(uint256) := D_3(uint256)
Finance type key: (40, -1)
[i]Type for computed

Name: computed Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
TMP_223(uint256) = N_A_2 (c)* s_1
[i]Type for TMP_223

Name: TMP_223 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_224(uint256) = TMP_223 (c)/ A_PRECISION_1
[i]Type for TMP_224

Name: TMP_224 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_225(uint256) = 2 (c)* dP_1
[i]Type for TMP_225

Name: TMP_225 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: price/exchange rate
TMP_226(uint256) = TMP_224 (c)+ TMP_225
[i]Type for TMP_226

Name: TMP_226 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: price/exchange rate
TMP_227(uint256) = TMP_226 (c)* D_2
Finance type key: (40, 40)
[i]Type for TMP_227

Name: TMP_227 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_228(uint256) = N_A_2 (c)/ A_PRECISION_1
[i]Type for TMP_228

Name: TMP_228 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_229(uint256) = TMP_228 (c)- 1
[i]Type for TMP_229

Name: TMP_229 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
TMP_230(uint256) = TMP_229 (c)* D_2
[i]Type for TMP_230

Name: TMP_230 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: price/exchange rate
TMP_231(uint256) = 3 (c)* dP_1
[i]Type for TMP_231

Name: TMP_231 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 12
Fields: 
Finance Type: price/exchange rate
TMP_232(uint256) = TMP_230 (c)+ TMP_231
Finance type key: (40, 40)
[i]Type for TMP_232

Name: TMP_232 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 13
Fields: 
Finance Type: price/exchange rate
TMP_233(uint256) = TMP_227 (c)/ TMP_232
[i]Type for TMP_233

Name: TMP_233 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
D_3(uint256) := TMP_233(uint256)
Finance type key: (40, -1)
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
TMP_234(bool) = LIBRARY_CALL, dest:MathUtils, function:MathUtils.within1(uint256,uint256), arguments:['D_3', 'prevD_1'] 
[i]Type for TMP_234

Name: TMP_234 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_235(uint256) := i_2(uint256)
Finance type key: (-1, -1)
[i]Type for TMP_235

Name: TMP_235 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_3(uint256) = i_2 (c)+ 1
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
xp0_1(uint256) := ϕ(['xpIn_3', 'xp0_1'])
[i]Type for xp0

Name: xp0 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
xp1_1(uint256) := ϕ(['xpOut_3', 'xp1_1'])
[i]Type for xp1

Name: xp1 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MAX_LOOP_LIMIT_1(uint256) := ϕ(['MAX_LOOP_LIMIT_0'])
[i]Type for MAX_LOOP_LIMIT

Name: MAX_LOOP_LIMIT Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
N_A_2(uint256) := ϕ(['N_A_0', 'N_A_1'])
[i]Type for N_A

Name: N_A Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
A_PRECISION_1(uint256) := ϕ(['A_PRECISION_0'])
[i]Type for A_PRECISION

Name: A_PRECISION Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_215(uint256) = xp0_1 (c)+ xp1_1
[i]Type for TMP_215

Name: TMP_215 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
s_1(uint256) := TMP_215(uint256)
Finance type key: (-1, -1)
[i]Type for s

Name: s Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_216(bool) = s_1 == 0
[i]Type for TMP_216

Name: TMP_216 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
computed_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for computed

Name: computed Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
D_1(uint256) := s_1(uint256)
Finance type key: (-1, -1)
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
D_2(uint256) := ϕ(['D_3', 'D_1'])
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
i_2(uint256) := ϕ(['i_3', 'i_1'])
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_217(bool) = i_2 < MAX_LOOP_LIMIT_1
[i]Type for TMP_217

Name: TMP_217 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_218(uint256) = D_2 (c)* D_2
Finance type key: (40, 40)
[i]Type for TMP_218

Name: TMP_218 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_219(uint256) = TMP_218 (c)/ xp0_1
[i]Type for TMP_219

Name: TMP_219 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_220(uint256) = TMP_219 (c)* D_2
[i]Type for TMP_220

Name: TMP_220 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
TMP_221(uint256) = TMP_220 (c)/ xp1_1
[i]Type for TMP_221

Name: TMP_221 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
TMP_222(uint256) = TMP_221 (c)/ 4
[i]Type for TMP_222

Name: TMP_222 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: price/exchange rate
dP_1(uint256) := TMP_222(uint256)
Finance type key: (40, -1)
[i]Type for dP

Name: dP Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: price/exchange rate
prevD_1(uint256) := D_2(uint256)
Finance type key: (40, -1)
[i]Type for prevD

Name: prevD Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
computed_2(uint256) := D_3(uint256)
Finance type key: (40, -1)
[i]Type for computed

Name: computed Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
TMP_223(uint256) = N_A_2 (c)* s_1
[i]Type for TMP_223

Name: TMP_223 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_224(uint256) = TMP_223 (c)/ A_PRECISION_1
[i]Type for TMP_224

Name: TMP_224 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_225(uint256) = 2 (c)* dP_1
[i]Type for TMP_225

Name: TMP_225 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: price/exchange rate
TMP_226(uint256) = TMP_224 (c)+ TMP_225
[i]Type for TMP_226

Name: TMP_226 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: price/exchange rate
TMP_227(uint256) = TMP_226 (c)* D_2
Finance type key: (40, 40)
[i]Type for TMP_227

Name: TMP_227 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_228(uint256) = N_A_2 (c)/ A_PRECISION_1
[i]Type for TMP_228

Name: TMP_228 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_229(uint256) = TMP_228 (c)- 1
[i]Type for TMP_229

Name: TMP_229 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
TMP_230(uint256) = TMP_229 (c)* D_2
[i]Type for TMP_230

Name: TMP_230 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: price/exchange rate
TMP_231(uint256) = 3 (c)* dP_1
[i]Type for TMP_231

Name: TMP_231 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 12
Fields: 
Finance Type: price/exchange rate
TMP_232(uint256) = TMP_230 (c)+ TMP_231
Finance type key: (40, 40)
[i]Type for TMP_232

Name: TMP_232 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 13
Fields: 
Finance Type: price/exchange rate
TMP_233(uint256) = TMP_227 (c)/ TMP_232
[i]Type for TMP_233

Name: TMP_233 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
D_3(uint256) := TMP_233(uint256)
Finance type key: (40, -1)
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
TMP_234(bool) = LIBRARY_CALL, dest:MathUtils, function:MathUtils.within1(uint256,uint256), arguments:['D_3', 'prevD_1'] 
[i]Type for TMP_234

Name: TMP_234 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_235(uint256) := i_2(uint256)
Finance type key: (-1, -1)
[i]Type for TMP_235

Name: TMP_235 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_3(uint256) = i_2 (c)+ 1
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
[i]Type for TMP_200

Name: TMP_200 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
d_1(uint256) := TMP_200(uint256)
Finance type key: (-1, -1)
[i]Type for d

Name: d Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_201(uint256) = xpIn_3 (c)+ amountIn_4
[i]Type for TMP_201

Name: TMP_201 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
x_1(uint256) := TMP_201(uint256)
Finance type key: (12, -1)
[i]Type for x

Name: x Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
amountIn_3(uint256) = amountIn_1 (c)* token1PrecisionMultiplier_2
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: updated simple fee ratio
TMP_202(uint256) = INTERNAL_CALL, HybridPool._getY(uint256,uint256)(x_1,d_1)
x_1(uint256) := ϕ(['x_1'])
[i]Type for x

Name: x Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
D_1(uint256) := ϕ(['d_1'])
[i]Type for D

Name: D Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MAX_LOOP_LIMIT_2(uint256) := ϕ(['MAX_LOOP_LIMIT_0'])
[i]Type for MAX_LOOP_LIMIT

Name: MAX_LOOP_LIMIT Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
N_A_3(uint256) := ϕ(['N_A_0', 'N_A_1'])
[i]Type for N_A

Name: N_A Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
A_PRECISION_2(uint256) := ϕ(['A_PRECISION_0'])
[i]Type for A_PRECISION

Name: A_PRECISION Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_236(uint256) = D_1 (c)* D_1
[i]Type for TMP_236

Name: TMP_236 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_237(uint256) = x_1 (c)* 2
[i]Type for TMP_237

Name: TMP_237 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
TMP_238(uint256) = TMP_236 (c)/ TMP_237
[i]Type for TMP_238

Name: TMP_238 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
c_1(uint256) := TMP_238(uint256)
Finance type key: (12, -1)
[i]Type for c

Name: c Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
TMP_239(uint256) = c_1 (c)* D_1
[i]Type for TMP_239

Name: TMP_239 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
TMP_240(uint256) = N_A_3 (c)* 2
[i]Type for TMP_240

Name: TMP_240 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
TMP_241(uint256) = TMP_240 (c)/ A_PRECISION_2
[i]Type for TMP_241

Name: TMP_241 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
TMP_242(uint256) = TMP_239 (c)/ TMP_241
[i]Type for TMP_242

Name: TMP_242 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: updated simple fee ratio
c_2(uint256) := TMP_242(uint256)
Finance type key: (12, -1)
[i]Type for c

Name: c Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: updated simple fee ratio
TMP_243(uint256) = D_1 (c)* A_PRECISION_2
[i]Type for TMP_243

Name: TMP_243 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_244(uint256) = TMP_243 (c)/ N_A_3
[i]Type for TMP_244

Name: TMP_244 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_245(uint256) = x_1 (c)+ TMP_244
[i]Type for TMP_245

Name: TMP_245 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
b_1(uint256) := TMP_245(uint256)
Finance type key: (12, -1)
[i]Type for b

Name: b Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
y_1(uint256) := D_1(uint256)
Finance type key: (-1, -1)
[i]Type for y

Name: y Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for i

Name: i Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
y_2(uint256) := ϕ(['y_1', 'y_3'])
[i]Type for y

Name: y Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_2(uint256) := ϕ(['i_1', 'i_3'])
[i]Type for i

Name: i Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_246(bool) = i_2 < MAX_LOOP_LIMIT_2
[i]Type for TMP_246

Name: TMP_246 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
yPrev_1(uint256) := y_2(uint256)
Finance type key: (-1, -1)
[i]Type for yPrev

Name: yPrev Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_247(uint256) = y_2 (c)* y_2
[i]Type for TMP_247

Name: TMP_247 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_248(uint256) = TMP_247 (c)+ c_2
[i]Type for TMP_248

Name: TMP_248 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: updated simple fee ratio
TMP_249(uint256) = y_2 (c)* 2
[i]Type for TMP_249

Name: TMP_249 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_250(uint256) = TMP_249 (c)+ b_1
[i]Type for TMP_250

Name: TMP_250 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: updated simple fee ratio
TMP_251(uint256) = TMP_250 (c)- D_1
[i]Type for TMP_251

Name: TMP_251 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: updated simple fee ratio
TMP_252(uint256) = TMP_248 (c)/ TMP_251
Finance type key: (12, 12)
Finance type key: (12, 12)
[i]Type for TMP_252

Name: TMP_252 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
y_3(uint256) := TMP_252(uint256)
Finance type key: (-1, -1)
[i]Type for y

Name: y Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_253(bool) = LIBRARY_CALL, dest:MathUtils, function:MathUtils.within1(uint256,uint256), arguments:['y_3', 'yPrev_1'] 
[i]Type for TMP_253

Name: TMP_253 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_254(uint256) := i_2(uint256)
Finance type key: (-1, -1)
[i]Type for TMP_254

Name: TMP_254 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_3(uint256) = i_2 (c)+ 1
[i]Type for i

Name: i Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
x_1(uint256) := ϕ(['x_1'])
[i]Type for x

Name: x Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
D_1(uint256) := ϕ(['d_1'])
[i]Type for D

Name: D Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MAX_LOOP_LIMIT_2(uint256) := ϕ(['MAX_LOOP_LIMIT_0'])
[i]Type for MAX_LOOP_LIMIT

Name: MAX_LOOP_LIMIT Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
N_A_3(uint256) := ϕ(['N_A_0', 'N_A_1'])
[i]Type for N_A

Name: N_A Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
A_PRECISION_2(uint256) := ϕ(['A_PRECISION_0'])
[i]Type for A_PRECISION

Name: A_PRECISION Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_236(uint256) = D_1 (c)* D_1
[i]Type for TMP_236

Name: TMP_236 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_237(uint256) = x_1 (c)* 2
[i]Type for TMP_237

Name: TMP_237 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
TMP_238(uint256) = TMP_236 (c)/ TMP_237
[i]Type for TMP_238

Name: TMP_238 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
c_1(uint256) := TMP_238(uint256)
Finance type key: (12, -1)
[i]Type for c

Name: c Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
TMP_239(uint256) = c_1 (c)* D_1
[i]Type for TMP_239

Name: TMP_239 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
TMP_240(uint256) = N_A_3 (c)* 2
[i]Type for TMP_240

Name: TMP_240 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
TMP_241(uint256) = TMP_240 (c)/ A_PRECISION_2
[i]Type for TMP_241

Name: TMP_241 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
TMP_242(uint256) = TMP_239 (c)/ TMP_241
[i]Type for TMP_242

Name: TMP_242 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: updated simple fee ratio
c_2(uint256) := TMP_242(uint256)
Finance type key: (12, -1)
[i]Type for c

Name: c Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: updated simple fee ratio
TMP_243(uint256) = D_1 (c)* A_PRECISION_2
[i]Type for TMP_243

Name: TMP_243 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_244(uint256) = TMP_243 (c)/ N_A_3
[i]Type for TMP_244

Name: TMP_244 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_245(uint256) = x_1 (c)+ TMP_244
[i]Type for TMP_245

Name: TMP_245 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
b_1(uint256) := TMP_245(uint256)
Finance type key: (12, -1)
[i]Type for b

Name: b Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
y_1(uint256) := D_1(uint256)
Finance type key: (-1, -1)
[i]Type for y

Name: y Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for i

Name: i Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
y_2(uint256) := ϕ(['y_1', 'y_3'])
[i]Type for y

Name: y Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_2(uint256) := ϕ(['i_1', 'i_3'])
[i]Type for i

Name: i Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_246(bool) = i_2 < MAX_LOOP_LIMIT_2
[i]Type for TMP_246

Name: TMP_246 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
yPrev_1(uint256) := y_2(uint256)
Finance type key: (-1, -1)
[i]Type for yPrev

Name: yPrev Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_247(uint256) = y_2 (c)* y_2
[i]Type for TMP_247

Name: TMP_247 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_248(uint256) = TMP_247 (c)+ c_2
[i]Type for TMP_248

Name: TMP_248 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: updated simple fee ratio
TMP_249(uint256) = y_2 (c)* 2
[i]Type for TMP_249

Name: TMP_249 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_250(uint256) = TMP_249 (c)+ b_1
[i]Type for TMP_250

Name: TMP_250 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: updated simple fee ratio
TMP_251(uint256) = TMP_250 (c)- D_1
[i]Type for TMP_251

Name: TMP_251 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: updated simple fee ratio
TMP_252(uint256) = TMP_248 (c)/ TMP_251
Finance type key: (12, 12)
Finance type key: (12, 12)
[i]Type for TMP_252

Name: TMP_252 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
y_3(uint256) := TMP_252(uint256)
Finance type key: (-1, -1)
[i]Type for y

Name: y Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_253(bool) = LIBRARY_CALL, dest:MathUtils, function:MathUtils.within1(uint256,uint256), arguments:['y_3', 'yPrev_1'] 
[i]Type for TMP_253

Name: TMP_253 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_254(uint256) := i_2(uint256)
Finance type key: (-1, -1)
[i]Type for TMP_254

Name: TMP_254 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_3(uint256) = i_2 (c)+ 1
[i]Type for i

Name: i Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
[i]Type for TMP_202

Name: TMP_202 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
y_1(uint256) := TMP_202(uint256)
Finance type key: (-1, -1)
[i]Type for y

Name: y Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_203(uint256) = xpOut_3 (c)- y_1
[i]Type for TMP_203

Name: TMP_203 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_204(uint256) = TMP_203 (c)- 1
[i]Type for TMP_204

Name: TMP_204 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
dy_1(uint256) := TMP_204(uint256)
Finance type key: (-1, -1)
[i]Type for dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
dy_2(uint256) = dy_1 (c)/ token1PrecisionMultiplier_4
[i]Type for dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
dy_3(uint256) = dy_1 (c)/ token0PrecisionMultiplier_4
[i]Type for dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
amountIn_1(uint256) := ϕ(['TMP_153', 'TMP_124', 'TMP_103', 'TMP_112', 'TMP_130', 'TMP_140', 'amountIn_3'])
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
_reserve0_1(uint256) := ϕ(['_reserve0_1', '_reserve0_1', '_reserve0_1', 'TMP_104', 'TMP_113'])
[i]Type for _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
_reserve1_1(uint256) := ϕ(['_reserve1_1', 'TMP_105', 'TMP_114', '_reserve1_1', '_reserve1_1'])
[i]Type for _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
token0PrecisionMultiplier_2(uint256) := ϕ(['token0PrecisionMultiplier_0', 'token0PrecisionMultiplier_1', 'token0PrecisionMultiplier_4'])
[i]Type for token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
token1PrecisionMultiplier_2(uint256) := ϕ(['token1PrecisionMultiplier_4', 'token1PrecisionMultiplier_1', 'token1PrecisionMultiplier_0'])
[i]Type for token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_196(uint256) = _reserve0_1 (c)* token0PrecisionMultiplier_2
[i]Type for TMP_196

Name: TMP_196 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
xpIn_1(uint256) := TMP_196(uint256)
Finance type key: (-1, -1)
[i]Type for xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_197(uint256) = _reserve1_1 (c)* token1PrecisionMultiplier_2
[i]Type for TMP_197

Name: TMP_197 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
xpOut_1(uint256) := TMP_197(uint256)
Finance type key: (-1, -1)
[i]Type for xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_198(uint256) = _reserve1_1 (c)* token1PrecisionMultiplier_2
[i]Type for TMP_198

Name: TMP_198 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
xpIn_2(uint256) := TMP_198(uint256)
Finance type key: (-1, -1)
[i]Type for xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
amountIn_2(uint256) = amountIn_1 (c)* token0PrecisionMultiplier_2
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: updated simple fee ratio
TMP_199(uint256) = _reserve0_1 (c)* token0PrecisionMultiplier_2
[i]Type for TMP_199

Name: TMP_199 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
xpOut_2(uint256) := TMP_199(uint256)
Finance type key: (-1, -1)
[i]Type for xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
amountIn_4(uint256) := ϕ(['amountIn_3', 'amountIn_2'])
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
xpIn_3(uint256) := ϕ(['xpIn_1', 'xpIn_2'])
[i]Type for xpIn

Name: xpIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
xpOut_3(uint256) := ϕ(['xpOut_1', 'xpOut_2'])
[i]Type for xpOut

Name: xpOut Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_200(uint256) = INTERNAL_CALL, HybridPool._computeLiquidityFromAdjustedBalances(uint256,uint256)(xpIn_3,xpOut_3)
xp0_1(uint256) := ϕ(['xpIn_3', 'xp0_1'])
[i]Type for xp0

Name: xp0 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
xp1_1(uint256) := ϕ(['xpOut_3', 'xp1_1'])
[i]Type for xp1

Name: xp1 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MAX_LOOP_LIMIT_1(uint256) := ϕ(['MAX_LOOP_LIMIT_0'])
[i]Type for MAX_LOOP_LIMIT

Name: MAX_LOOP_LIMIT Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
N_A_2(uint256) := ϕ(['N_A_0', 'N_A_1'])
[i]Type for N_A

Name: N_A Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
A_PRECISION_1(uint256) := ϕ(['A_PRECISION_0'])
[i]Type for A_PRECISION

Name: A_PRECISION Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_215(uint256) = xp0_1 (c)+ xp1_1
[i]Type for TMP_215

Name: TMP_215 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
s_1(uint256) := TMP_215(uint256)
Finance type key: (-1, -1)
[i]Type for s

Name: s Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_216(bool) = s_1 == 0
[i]Type for TMP_216

Name: TMP_216 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
computed_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for computed

Name: computed Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
D_1(uint256) := s_1(uint256)
Finance type key: (-1, -1)
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
D_2(uint256) := ϕ(['D_3', 'D_1'])
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
i_2(uint256) := ϕ(['i_3', 'i_1'])
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_217(bool) = i_2 < MAX_LOOP_LIMIT_1
[i]Type for TMP_217

Name: TMP_217 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_218(uint256) = D_2 (c)* D_2
Finance type key: (40, 40)
[i]Type for TMP_218

Name: TMP_218 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_219(uint256) = TMP_218 (c)/ xp0_1
[i]Type for TMP_219

Name: TMP_219 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_220(uint256) = TMP_219 (c)* D_2
[i]Type for TMP_220

Name: TMP_220 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
TMP_221(uint256) = TMP_220 (c)/ xp1_1
[i]Type for TMP_221

Name: TMP_221 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
TMP_222(uint256) = TMP_221 (c)/ 4
[i]Type for TMP_222

Name: TMP_222 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: price/exchange rate
dP_1(uint256) := TMP_222(uint256)
Finance type key: (40, -1)
[i]Type for dP

Name: dP Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: price/exchange rate
prevD_1(uint256) := D_2(uint256)
Finance type key: (40, -1)
[i]Type for prevD

Name: prevD Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
computed_2(uint256) := D_3(uint256)
Finance type key: (40, -1)
[i]Type for computed

Name: computed Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
TMP_223(uint256) = N_A_2 (c)* s_1
[i]Type for TMP_223

Name: TMP_223 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_224(uint256) = TMP_223 (c)/ A_PRECISION_1
[i]Type for TMP_224

Name: TMP_224 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_225(uint256) = 2 (c)* dP_1
[i]Type for TMP_225

Name: TMP_225 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: price/exchange rate
TMP_226(uint256) = TMP_224 (c)+ TMP_225
[i]Type for TMP_226

Name: TMP_226 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: price/exchange rate
TMP_227(uint256) = TMP_226 (c)* D_2
Finance type key: (40, 40)
[i]Type for TMP_227

Name: TMP_227 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_228(uint256) = N_A_2 (c)/ A_PRECISION_1
[i]Type for TMP_228

Name: TMP_228 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_229(uint256) = TMP_228 (c)- 1
[i]Type for TMP_229

Name: TMP_229 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
TMP_230(uint256) = TMP_229 (c)* D_2
[i]Type for TMP_230

Name: TMP_230 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: price/exchange rate
TMP_231(uint256) = 3 (c)* dP_1
[i]Type for TMP_231

Name: TMP_231 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 12
Fields: 
Finance Type: price/exchange rate
TMP_232(uint256) = TMP_230 (c)+ TMP_231
Finance type key: (40, 40)
[i]Type for TMP_232

Name: TMP_232 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 13
Fields: 
Finance Type: price/exchange rate
TMP_233(uint256) = TMP_227 (c)/ TMP_232
[i]Type for TMP_233

Name: TMP_233 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
D_3(uint256) := TMP_233(uint256)
Finance type key: (40, -1)
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
TMP_234(bool) = LIBRARY_CALL, dest:MathUtils, function:MathUtils.within1(uint256,uint256), arguments:['D_3', 'prevD_1'] 
[i]Type for TMP_234

Name: TMP_234 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_235(uint256) := i_2(uint256)
Finance type key: (-1, -1)
[i]Type for TMP_235

Name: TMP_235 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_3(uint256) = i_2 (c)+ 1
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
xp0_1(uint256) := ϕ(['xpIn_3', 'xp0_1'])
[i]Type for xp0

Name: xp0 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
xp1_1(uint256) := ϕ(['xpOut_3', 'xp1_1'])
[i]Type for xp1

Name: xp1 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MAX_LOOP_LIMIT_1(uint256) := ϕ(['MAX_LOOP_LIMIT_0'])
[i]Type for MAX_LOOP_LIMIT

Name: MAX_LOOP_LIMIT Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
N_A_2(uint256) := ϕ(['N_A_0', 'N_A_1'])
[i]Type for N_A

Name: N_A Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
A_PRECISION_1(uint256) := ϕ(['A_PRECISION_0'])
[i]Type for A_PRECISION

Name: A_PRECISION Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_215(uint256) = xp0_1 (c)+ xp1_1
[i]Type for TMP_215

Name: TMP_215 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
s_1(uint256) := TMP_215(uint256)
Finance type key: (-1, -1)
[i]Type for s

Name: s Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_216(bool) = s_1 == 0
[i]Type for TMP_216

Name: TMP_216 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
computed_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for computed

Name: computed Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
D_1(uint256) := s_1(uint256)
Finance type key: (-1, -1)
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
D_2(uint256) := ϕ(['D_3', 'D_1'])
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
i_2(uint256) := ϕ(['i_3', 'i_1'])
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_217(bool) = i_2 < MAX_LOOP_LIMIT_1
[i]Type for TMP_217

Name: TMP_217 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_218(uint256) = D_2 (c)* D_2
Finance type key: (40, 40)
[i]Type for TMP_218

Name: TMP_218 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_219(uint256) = TMP_218 (c)/ xp0_1
[i]Type for TMP_219

Name: TMP_219 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_220(uint256) = TMP_219 (c)* D_2
[i]Type for TMP_220

Name: TMP_220 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
TMP_221(uint256) = TMP_220 (c)/ xp1_1
[i]Type for TMP_221

Name: TMP_221 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
TMP_222(uint256) = TMP_221 (c)/ 4
[i]Type for TMP_222

Name: TMP_222 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: price/exchange rate
dP_1(uint256) := TMP_222(uint256)
Finance type key: (40, -1)
[i]Type for dP

Name: dP Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: price/exchange rate
prevD_1(uint256) := D_2(uint256)
Finance type key: (40, -1)
[i]Type for prevD

Name: prevD Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
computed_2(uint256) := D_3(uint256)
Finance type key: (40, -1)
[i]Type for computed

Name: computed Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
TMP_223(uint256) = N_A_2 (c)* s_1
[i]Type for TMP_223

Name: TMP_223 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_224(uint256) = TMP_223 (c)/ A_PRECISION_1
[i]Type for TMP_224

Name: TMP_224 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_225(uint256) = 2 (c)* dP_1
[i]Type for TMP_225

Name: TMP_225 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: price/exchange rate
TMP_226(uint256) = TMP_224 (c)+ TMP_225
[i]Type for TMP_226

Name: TMP_226 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: price/exchange rate
TMP_227(uint256) = TMP_226 (c)* D_2
Finance type key: (40, 40)
[i]Type for TMP_227

Name: TMP_227 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_228(uint256) = N_A_2 (c)/ A_PRECISION_1
[i]Type for TMP_228

Name: TMP_228 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_229(uint256) = TMP_228 (c)- 1
[i]Type for TMP_229

Name: TMP_229 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
TMP_230(uint256) = TMP_229 (c)* D_2
[i]Type for TMP_230

Name: TMP_230 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: price/exchange rate
TMP_231(uint256) = 3 (c)* dP_1
[i]Type for TMP_231

Name: TMP_231 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 12
Fields: 
Finance Type: price/exchange rate
TMP_232(uint256) = TMP_230 (c)+ TMP_231
Finance type key: (40, 40)
[i]Type for TMP_232

Name: TMP_232 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 13
Fields: 
Finance Type: price/exchange rate
TMP_233(uint256) = TMP_227 (c)/ TMP_232
[i]Type for TMP_233

Name: TMP_233 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
D_3(uint256) := TMP_233(uint256)
Finance type key: (40, -1)
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
TMP_234(bool) = LIBRARY_CALL, dest:MathUtils, function:MathUtils.within1(uint256,uint256), arguments:['D_3', 'prevD_1'] 
[i]Type for TMP_234

Name: TMP_234 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_235(uint256) := i_2(uint256)
Finance type key: (-1, -1)
[i]Type for TMP_235

Name: TMP_235 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_3(uint256) = i_2 (c)+ 1
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
[i]Type for TMP_200

Name: TMP_200 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
d_1(uint256) := TMP_200(uint256)
Finance type key: (-1, -1)
[i]Type for d

Name: d Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_201(uint256) = xpIn_3 (c)+ amountIn_4
[i]Type for TMP_201

Name: TMP_201 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
x_1(uint256) := TMP_201(uint256)
Finance type key: (12, -1)
[i]Type for x

Name: x Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
amountIn_3(uint256) = amountIn_1 (c)* token1PrecisionMultiplier_2
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: updated simple fee ratio
TMP_202(uint256) = INTERNAL_CALL, HybridPool._getY(uint256,uint256)(x_1,d_1)
x_1(uint256) := ϕ(['x_1'])
[i]Type for x

Name: x Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
D_1(uint256) := ϕ(['d_1'])
[i]Type for D

Name: D Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MAX_LOOP_LIMIT_2(uint256) := ϕ(['MAX_LOOP_LIMIT_0'])
[i]Type for MAX_LOOP_LIMIT

Name: MAX_LOOP_LIMIT Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
N_A_3(uint256) := ϕ(['N_A_0', 'N_A_1'])
[i]Type for N_A

Name: N_A Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
A_PRECISION_2(uint256) := ϕ(['A_PRECISION_0'])
[i]Type for A_PRECISION

Name: A_PRECISION Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_236(uint256) = D_1 (c)* D_1
[i]Type for TMP_236

Name: TMP_236 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_237(uint256) = x_1 (c)* 2
[i]Type for TMP_237

Name: TMP_237 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
TMP_238(uint256) = TMP_236 (c)/ TMP_237
[i]Type for TMP_238

Name: TMP_238 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
c_1(uint256) := TMP_238(uint256)
Finance type key: (12, -1)
[i]Type for c

Name: c Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
TMP_239(uint256) = c_1 (c)* D_1
[i]Type for TMP_239

Name: TMP_239 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
TMP_240(uint256) = N_A_3 (c)* 2
[i]Type for TMP_240

Name: TMP_240 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
TMP_241(uint256) = TMP_240 (c)/ A_PRECISION_2
[i]Type for TMP_241

Name: TMP_241 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
TMP_242(uint256) = TMP_239 (c)/ TMP_241
[i]Type for TMP_242

Name: TMP_242 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: updated simple fee ratio
c_2(uint256) := TMP_242(uint256)
Finance type key: (12, -1)
[i]Type for c

Name: c Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: updated simple fee ratio
TMP_243(uint256) = D_1 (c)* A_PRECISION_2
[i]Type for TMP_243

Name: TMP_243 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_244(uint256) = TMP_243 (c)/ N_A_3
[i]Type for TMP_244

Name: TMP_244 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_245(uint256) = x_1 (c)+ TMP_244
[i]Type for TMP_245

Name: TMP_245 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
b_1(uint256) := TMP_245(uint256)
Finance type key: (12, -1)
[i]Type for b

Name: b Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
y_1(uint256) := D_1(uint256)
Finance type key: (-1, -1)
[i]Type for y

Name: y Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for i

Name: i Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
y_2(uint256) := ϕ(['y_1', 'y_3'])
[i]Type for y

Name: y Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_2(uint256) := ϕ(['i_1', 'i_3'])
[i]Type for i

Name: i Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_246(bool) = i_2 < MAX_LOOP_LIMIT_2
[i]Type for TMP_246

Name: TMP_246 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
yPrev_1(uint256) := y_2(uint256)
Finance type key: (-1, -1)
[i]Type for yPrev

Name: yPrev Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_247(uint256) = y_2 (c)* y_2
[i]Type for TMP_247

Name: TMP_247 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_248(uint256) = TMP_247 (c)+ c_2
[i]Type for TMP_248

Name: TMP_248 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: updated simple fee ratio
TMP_249(uint256) = y_2 (c)* 2
[i]Type for TMP_249

Name: TMP_249 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_250(uint256) = TMP_249 (c)+ b_1
[i]Type for TMP_250

Name: TMP_250 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: updated simple fee ratio
TMP_251(uint256) = TMP_250 (c)- D_1
[i]Type for TMP_251

Name: TMP_251 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: updated simple fee ratio
TMP_252(uint256) = TMP_248 (c)/ TMP_251
Finance type key: (12, 12)
Finance type key: (12, 12)
[i]Type for TMP_252

Name: TMP_252 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
y_3(uint256) := TMP_252(uint256)
Finance type key: (-1, -1)
[i]Type for y

Name: y Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_253(bool) = LIBRARY_CALL, dest:MathUtils, function:MathUtils.within1(uint256,uint256), arguments:['y_3', 'yPrev_1'] 
[i]Type for TMP_253

Name: TMP_253 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_254(uint256) := i_2(uint256)
Finance type key: (-1, -1)
[i]Type for TMP_254

Name: TMP_254 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_3(uint256) = i_2 (c)+ 1
[i]Type for i

Name: i Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
x_1(uint256) := ϕ(['x_1'])
[i]Type for x

Name: x Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
D_1(uint256) := ϕ(['d_1'])
[i]Type for D

Name: D Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MAX_LOOP_LIMIT_2(uint256) := ϕ(['MAX_LOOP_LIMIT_0'])
[i]Type for MAX_LOOP_LIMIT

Name: MAX_LOOP_LIMIT Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
N_A_3(uint256) := ϕ(['N_A_0', 'N_A_1'])
[i]Type for N_A

Name: N_A Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
A_PRECISION_2(uint256) := ϕ(['A_PRECISION_0'])
[i]Type for A_PRECISION

Name: A_PRECISION Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_236(uint256) = D_1 (c)* D_1
[i]Type for TMP_236

Name: TMP_236 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_237(uint256) = x_1 (c)* 2
[i]Type for TMP_237

Name: TMP_237 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
TMP_238(uint256) = TMP_236 (c)/ TMP_237
[i]Type for TMP_238

Name: TMP_238 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
c_1(uint256) := TMP_238(uint256)
Finance type key: (12, -1)
[i]Type for c

Name: c Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
TMP_239(uint256) = c_1 (c)* D_1
[i]Type for TMP_239

Name: TMP_239 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
TMP_240(uint256) = N_A_3 (c)* 2
[i]Type for TMP_240

Name: TMP_240 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
TMP_241(uint256) = TMP_240 (c)/ A_PRECISION_2
[i]Type for TMP_241

Name: TMP_241 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
TMP_242(uint256) = TMP_239 (c)/ TMP_241
[i]Type for TMP_242

Name: TMP_242 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: updated simple fee ratio
c_2(uint256) := TMP_242(uint256)
Finance type key: (12, -1)
[i]Type for c

Name: c Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: updated simple fee ratio
TMP_243(uint256) = D_1 (c)* A_PRECISION_2
[i]Type for TMP_243

Name: TMP_243 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_244(uint256) = TMP_243 (c)/ N_A_3
[i]Type for TMP_244

Name: TMP_244 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_245(uint256) = x_1 (c)+ TMP_244
[i]Type for TMP_245

Name: TMP_245 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
b_1(uint256) := TMP_245(uint256)
Finance type key: (12, -1)
[i]Type for b

Name: b Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
y_1(uint256) := D_1(uint256)
Finance type key: (-1, -1)
[i]Type for y

Name: y Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for i

Name: i Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
y_2(uint256) := ϕ(['y_1', 'y_3'])
[i]Type for y

Name: y Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_2(uint256) := ϕ(['i_1', 'i_3'])
[i]Type for i

Name: i Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_246(bool) = i_2 < MAX_LOOP_LIMIT_2
[i]Type for TMP_246

Name: TMP_246 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
yPrev_1(uint256) := y_2(uint256)
Finance type key: (-1, -1)
[i]Type for yPrev

Name: yPrev Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_247(uint256) = y_2 (c)* y_2
[i]Type for TMP_247

Name: TMP_247 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_248(uint256) = TMP_247 (c)+ c_2
[i]Type for TMP_248

Name: TMP_248 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: updated simple fee ratio
TMP_249(uint256) = y_2 (c)* 2
[i]Type for TMP_249

Name: TMP_249 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_250(uint256) = TMP_249 (c)+ b_1
[i]Type for TMP_250

Name: TMP_250 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: updated simple fee ratio
TMP_251(uint256) = TMP_250 (c)- D_1
[i]Type for TMP_251

Name: TMP_251 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: updated simple fee ratio
TMP_252(uint256) = TMP_248 (c)/ TMP_251
Finance type key: (12, 12)
Finance type key: (12, 12)
[i]Type for TMP_252

Name: TMP_252 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
y_3(uint256) := TMP_252(uint256)
Finance type key: (-1, -1)
[i]Type for y

Name: y Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_253(bool) = LIBRARY_CALL, dest:MathUtils, function:MathUtils.within1(uint256,uint256), arguments:['y_3', 'yPrev_1'] 
[i]Type for TMP_253

Name: TMP_253 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_254(uint256) := i_2(uint256)
Finance type key: (-1, -1)
[i]Type for TMP_254

Name: TMP_254 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_3(uint256) = i_2 (c)+ 1
[i]Type for i

Name: i Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
[i]Type for TMP_202

Name: TMP_202 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
y_1(uint256) := TMP_202(uint256)
Finance type key: (-1, -1)
[i]Type for y

Name: y Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_203(uint256) = xpOut_3 (c)- y_1
[i]Type for TMP_203

Name: TMP_203 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_204(uint256) = TMP_203 (c)- 1
[i]Type for TMP_204

Name: TMP_204 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
dy_1(uint256) := TMP_204(uint256)
Finance type key: (-1, -1)
[i]Type for dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
dy_2(uint256) = dy_1 (c)/ token1PrecisionMultiplier_4
[i]Type for dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
dy_3(uint256) = dy_1 (c)/ token0PrecisionMultiplier_4
[i]Type for dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
[i]Type for TMP_154

Name: TMP_154 Function: flashSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
amountOut_1(uint256) := TMP_154(uint256)
Finance type key: (-1, -1)
[i]Type for amountOut

Name: amountOut Function: flashSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_138(uint256) = amountIn_3 (c)* swapFee_6
[i]Type for TMP_138

Name: TMP_138 Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
TMP_139(uint256) = TMP_138 (c)/ MAX_FEE_6
[i]Type for TMP_139

Name: TMP_139 Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
fee_2(uint256) := TMP_139(uint256)
Finance type key: (12, -1)
[i]Type for fee

Name: fee Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
INTERNAL_CALL, HybridPool._processSwap(address,address,uint256,bytes,bool)(token0_31,recipient_1,amountOut_1,context_1,unwrapBento_1)
tokenOut_1(address) := ϕ(['token1_36', 'token0_31'])
[i]Type for tokenOut

Name: tokenOut Function: _processSwap
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
to_1(address) := ϕ(['recipient_1'])
[i]Type for to

Name: to Function: _processSwap
Num: 
Den: 
Address: -990
Norm: u
LF: to
Value: u
Fields: 
Finance Type: undef
amountOut_1(uint256) := ϕ(['amountOut_1', 'amountOut_2'])
[i]Type for amountOut

Name: amountOut Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
data_1(bytes) := ϕ(['context_1'])
[i]Type for data

Name: data Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
unwrapBento_1(bool) := ϕ(['unwrapBento_1'])
[i]Type for unwrapBento

Name: unwrapBento Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
INTERNAL_CALL, HybridPool._transfer(address,uint256,address,bool)(tokenOut_1,amountOut_1,to_1,unwrapBento_1)
token_1(address) := ϕ(['tokenOut_3', 'token1_17', 'token1_6', 'token0_5', 'tokenIn_1', 'token0_21', 'tokenIn_1', 'tokenOut_1'])
[i]Type for token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['_barFee_1', 'amount0_1', 'amountOut_3', 'fee_3', 'amountOut_1', 'amount1_2', 'amount0_3', 'amount1_1'])
[i]Type for amount

Name: amount Function: _transfer
Num: 
Den: 
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
to_1(address) := ϕ(['recipient_1', 'recipient_1', 'barFeeTo_16', 'barFeeTo_14', 'to_1', 'recipient_1'])
[i]Type for to

Name: to Function: _transfer
Num: 
Den: 
Address: -990
Norm: u
LF: to
Value: u
Fields: 
Finance Type: undef
unwrapBento_1(bool) := ϕ(['unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1'])
[i]Type for unwrapBento

Name: unwrapBento Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_6(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_74 (->None) := 4052550604(uint256)
Finance type key: (-1, -1)
[i]Type for REF_74

Name: REF_74 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4052550604
Fields: 
Finance Type: undef
TMP_208 = CONVERT this to address
[i]Type for TMP_208

Name: TMP_208 Function: _transfer
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_209(uint256) = INTERNAL_CALL, HybridPool._toShare(address,uint256)(token_1,amount_1)
token_1(address) := ϕ(['token1_21', 'token1_8', 'token0_18', 'token0_7', 'token_1'])
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['amount1_1', 'amount0_1', 'amount0_1', 'amount_1', 'amount1_1'])
[i]Type for input

Name: input Function: _toShare
Num: 
Den: 
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
bento_4(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_5(address) := ϕ(['bento_4', 'bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
output_1(uint256) := TMP_195(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token1_21', 'token1_8', 'token0_18', 'token0_7', 'token_1'])
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['amount1_1', 'amount0_1', 'amount0_1', 'amount_1', 'amount1_1'])
[i]Type for input

Name: input Function: _toShare
Num: 
Den: 
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
bento_4(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_5(address) := ϕ(['bento_4', 'bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
output_1(uint256) := TMP_195(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_209

Name: TMP_209 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_7(address) := ϕ(['bento_5'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
TMP_210(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_74,token_1,TMP_208,to_1,TMP_209)
[i]Type for TMP_210

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_24(bool,bytes) = LOW_LEVEL_CALL, dest:bento_7, function:call, arguments:['TMP_210']  
[i]Type for TUPLE_24

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_8(address) := ϕ(['bento_5', 'bento_7', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
success_1(bool)= UNPACK TUPLE_24 index: 0 
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_70 (->None) := 2547674416(uint256)
Finance type key: (-1, -1)
[i]Type for REF_70

Name: REF_70 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2547674416
Fields: 
Finance Type: undef
TMP_205 = CONVERT this to address
[i]Type for TMP_205

Name: TMP_205 Function: _transfer
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_206(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_70,token_1,TMP_205,to_1,amount_1,0)
[i]Type for TMP_206

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_23(bool,bytes) = LOW_LEVEL_CALL, dest:bento_6, function:call, arguments:['TMP_206']  
[i]Type for TUPLE_23

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_9(address) := ϕ(['bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
success_2(bool)= UNPACK TUPLE_23 index: 0 
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_211(None) = SOLIDITY_CALL require(bool,string)(success_scope_0_0,TRANSFER_FAILED)
[i]Type for TMP_211

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_207(None) = SOLIDITY_CALL require(bool,string)(success_2,WITHDRAW_FAILED)
[i]Type for TMP_207

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['tokenOut_3', 'token1_17', 'token1_6', 'token0_5', 'tokenIn_1', 'token0_21', 'tokenIn_1', 'tokenOut_1'])
[i]Type for token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['_barFee_1', 'amount0_1', 'amountOut_3', 'fee_3', 'amountOut_1', 'amount1_2', 'amount0_3', 'amount1_1'])
[i]Type for amount

Name: amount Function: _transfer
Num: 
Den: 
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
to_1(address) := ϕ(['recipient_1', 'recipient_1', 'barFeeTo_16', 'barFeeTo_14', 'to_1', 'recipient_1'])
[i]Type for to

Name: to Function: _transfer
Num: 
Den: 
Address: -990
Norm: u
LF: to
Value: u
Fields: 
Finance Type: undef
unwrapBento_1(bool) := ϕ(['unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1'])
[i]Type for unwrapBento

Name: unwrapBento Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_6(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_74 (->None) := 4052550604(uint256)
Finance type key: (-1, -1)
[i]Type for REF_74

Name: REF_74 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4052550604
Fields: 
Finance Type: undef
TMP_208 = CONVERT this to address
[i]Type for TMP_208

Name: TMP_208 Function: _transfer
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_209(uint256) = INTERNAL_CALL, HybridPool._toShare(address,uint256)(token_1,amount_1)
token_1(address) := ϕ(['token1_21', 'token1_8', 'token0_18', 'token0_7', 'token_1'])
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['amount1_1', 'amount0_1', 'amount0_1', 'amount_1', 'amount1_1'])
[i]Type for input

Name: input Function: _toShare
Num: 
Den: 
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
bento_4(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_5(address) := ϕ(['bento_4', 'bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
output_1(uint256) := TMP_195(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token1_21', 'token1_8', 'token0_18', 'token0_7', 'token_1'])
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['amount1_1', 'amount0_1', 'amount0_1', 'amount_1', 'amount1_1'])
[i]Type for input

Name: input Function: _toShare
Num: 
Den: 
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
bento_4(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_5(address) := ϕ(['bento_4', 'bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
output_1(uint256) := TMP_195(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_209

Name: TMP_209 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_7(address) := ϕ(['bento_5'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
TMP_210(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_74,token_1,TMP_208,to_1,TMP_209)
[i]Type for TMP_210

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_24(bool,bytes) = LOW_LEVEL_CALL, dest:bento_7, function:call, arguments:['TMP_210']  
[i]Type for TUPLE_24

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_8(address) := ϕ(['bento_5', 'bento_7', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
success_1(bool)= UNPACK TUPLE_24 index: 0 
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_70 (->None) := 2547674416(uint256)
Finance type key: (-1, -1)
[i]Type for REF_70

Name: REF_70 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2547674416
Fields: 
Finance Type: undef
TMP_205 = CONVERT this to address
[i]Type for TMP_205

Name: TMP_205 Function: _transfer
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_206(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_70,token_1,TMP_205,to_1,amount_1,0)
[i]Type for TMP_206

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_23(bool,bytes) = LOW_LEVEL_CALL, dest:bento_6, function:call, arguments:['TMP_206']  
[i]Type for TUPLE_23

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_9(address) := ϕ(['bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
success_2(bool)= UNPACK TUPLE_23 index: 0 
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_211(None) = SOLIDITY_CALL require(bool,string)(success_scope_0_0,TRANSFER_FAILED)
[i]Type for TMP_211

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_207(None) = SOLIDITY_CALL require(bool,string)(success_2,WITHDRAW_FAILED)
[i]Type for TMP_207

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_54 -> LENGTH data_1
[i]Type for REF_54

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_168(bool) = REF_54 != 0
[i]Type for TMP_168

Name: TMP_168 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_169 = CONVERT msg.sender to ITridentCallee
[i]Type for TMP_169

Name: TMP_169 Function: _processSwap
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:TMP_169(ITridentCallee), function:tridentSwapCallback, arguments:['data_1']  
tokenOut_1(address) := ϕ(['token1_36', 'token0_31'])
[i]Type for tokenOut

Name: tokenOut Function: _processSwap
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
to_1(address) := ϕ(['recipient_1'])
[i]Type for to

Name: to Function: _processSwap
Num: 
Den: 
Address: -990
Norm: u
LF: to
Value: u
Fields: 
Finance Type: undef
amountOut_1(uint256) := ϕ(['amountOut_1', 'amountOut_2'])
[i]Type for amountOut

Name: amountOut Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
data_1(bytes) := ϕ(['context_1'])
[i]Type for data

Name: data Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
unwrapBento_1(bool) := ϕ(['unwrapBento_1'])
[i]Type for unwrapBento

Name: unwrapBento Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
INTERNAL_CALL, HybridPool._transfer(address,uint256,address,bool)(tokenOut_1,amountOut_1,to_1,unwrapBento_1)
token_1(address) := ϕ(['tokenOut_3', 'token1_17', 'token1_6', 'token0_5', 'tokenIn_1', 'token0_21', 'tokenIn_1', 'tokenOut_1'])
[i]Type for token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['_barFee_1', 'amount0_1', 'amountOut_3', 'fee_3', 'amountOut_1', 'amount1_2', 'amount0_3', 'amount1_1'])
[i]Type for amount

Name: amount Function: _transfer
Num: 
Den: 
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
to_1(address) := ϕ(['recipient_1', 'recipient_1', 'barFeeTo_16', 'barFeeTo_14', 'to_1', 'recipient_1'])
[i]Type for to

Name: to Function: _transfer
Num: 
Den: 
Address: -990
Norm: u
LF: to
Value: u
Fields: 
Finance Type: undef
unwrapBento_1(bool) := ϕ(['unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1'])
[i]Type for unwrapBento

Name: unwrapBento Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_6(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_74 (->None) := 4052550604(uint256)
Finance type key: (-1, -1)
[i]Type for REF_74

Name: REF_74 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4052550604
Fields: 
Finance Type: undef
TMP_208 = CONVERT this to address
[i]Type for TMP_208

Name: TMP_208 Function: _transfer
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_209(uint256) = INTERNAL_CALL, HybridPool._toShare(address,uint256)(token_1,amount_1)
token_1(address) := ϕ(['token1_21', 'token1_8', 'token0_18', 'token0_7', 'token_1'])
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['amount1_1', 'amount0_1', 'amount0_1', 'amount_1', 'amount1_1'])
[i]Type for input

Name: input Function: _toShare
Num: 
Den: 
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
bento_4(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_5(address) := ϕ(['bento_4', 'bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
output_1(uint256) := TMP_195(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token1_21', 'token1_8', 'token0_18', 'token0_7', 'token_1'])
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['amount1_1', 'amount0_1', 'amount0_1', 'amount_1', 'amount1_1'])
[i]Type for input

Name: input Function: _toShare
Num: 
Den: 
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
bento_4(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_5(address) := ϕ(['bento_4', 'bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
output_1(uint256) := TMP_195(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_209

Name: TMP_209 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_7(address) := ϕ(['bento_5'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
TMP_210(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_74,token_1,TMP_208,to_1,TMP_209)
[i]Type for TMP_210

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_24(bool,bytes) = LOW_LEVEL_CALL, dest:bento_7, function:call, arguments:['TMP_210']  
[i]Type for TUPLE_24

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_8(address) := ϕ(['bento_5', 'bento_7', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
success_1(bool)= UNPACK TUPLE_24 index: 0 
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_70 (->None) := 2547674416(uint256)
Finance type key: (-1, -1)
[i]Type for REF_70

Name: REF_70 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2547674416
Fields: 
Finance Type: undef
TMP_205 = CONVERT this to address
[i]Type for TMP_205

Name: TMP_205 Function: _transfer
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_206(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_70,token_1,TMP_205,to_1,amount_1,0)
[i]Type for TMP_206

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_23(bool,bytes) = LOW_LEVEL_CALL, dest:bento_6, function:call, arguments:['TMP_206']  
[i]Type for TUPLE_23

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_9(address) := ϕ(['bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
success_2(bool)= UNPACK TUPLE_23 index: 0 
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_211(None) = SOLIDITY_CALL require(bool,string)(success_scope_0_0,TRANSFER_FAILED)
[i]Type for TMP_211

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_207(None) = SOLIDITY_CALL require(bool,string)(success_2,WITHDRAW_FAILED)
[i]Type for TMP_207

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['tokenOut_3', 'token1_17', 'token1_6', 'token0_5', 'tokenIn_1', 'token0_21', 'tokenIn_1', 'tokenOut_1'])
[i]Type for token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['_barFee_1', 'amount0_1', 'amountOut_3', 'fee_3', 'amountOut_1', 'amount1_2', 'amount0_3', 'amount1_1'])
[i]Type for amount

Name: amount Function: _transfer
Num: 
Den: 
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
to_1(address) := ϕ(['recipient_1', 'recipient_1', 'barFeeTo_16', 'barFeeTo_14', 'to_1', 'recipient_1'])
[i]Type for to

Name: to Function: _transfer
Num: 
Den: 
Address: -990
Norm: u
LF: to
Value: u
Fields: 
Finance Type: undef
unwrapBento_1(bool) := ϕ(['unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1'])
[i]Type for unwrapBento

Name: unwrapBento Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_6(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_74 (->None) := 4052550604(uint256)
Finance type key: (-1, -1)
[i]Type for REF_74

Name: REF_74 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4052550604
Fields: 
Finance Type: undef
TMP_208 = CONVERT this to address
[i]Type for TMP_208

Name: TMP_208 Function: _transfer
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_209(uint256) = INTERNAL_CALL, HybridPool._toShare(address,uint256)(token_1,amount_1)
token_1(address) := ϕ(['token1_21', 'token1_8', 'token0_18', 'token0_7', 'token_1'])
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['amount1_1', 'amount0_1', 'amount0_1', 'amount_1', 'amount1_1'])
[i]Type for input

Name: input Function: _toShare
Num: 
Den: 
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
bento_4(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_5(address) := ϕ(['bento_4', 'bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
output_1(uint256) := TMP_195(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token1_21', 'token1_8', 'token0_18', 'token0_7', 'token_1'])
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['amount1_1', 'amount0_1', 'amount0_1', 'amount_1', 'amount1_1'])
[i]Type for input

Name: input Function: _toShare
Num: 
Den: 
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
bento_4(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_5(address) := ϕ(['bento_4', 'bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
output_1(uint256) := TMP_195(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_209

Name: TMP_209 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_7(address) := ϕ(['bento_5'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
TMP_210(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_74,token_1,TMP_208,to_1,TMP_209)
[i]Type for TMP_210

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_24(bool,bytes) = LOW_LEVEL_CALL, dest:bento_7, function:call, arguments:['TMP_210']  
[i]Type for TUPLE_24

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_8(address) := ϕ(['bento_5', 'bento_7', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
success_1(bool)= UNPACK TUPLE_24 index: 0 
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_70 (->None) := 2547674416(uint256)
Finance type key: (-1, -1)
[i]Type for REF_70

Name: REF_70 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2547674416
Fields: 
Finance Type: undef
TMP_205 = CONVERT this to address
[i]Type for TMP_205

Name: TMP_205 Function: _transfer
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_206(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_70,token_1,TMP_205,to_1,amount_1,0)
[i]Type for TMP_206

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_23(bool,bytes) = LOW_LEVEL_CALL, dest:bento_6, function:call, arguments:['TMP_206']  
[i]Type for TUPLE_23

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_9(address) := ϕ(['bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
success_2(bool)= UNPACK TUPLE_23 index: 0 
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_211(None) = SOLIDITY_CALL require(bool,string)(success_scope_0_0,TRANSFER_FAILED)
[i]Type for TMP_211

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_207(None) = SOLIDITY_CALL require(bool,string)(success_2,WITHDRAW_FAILED)
[i]Type for TMP_207

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_54 -> LENGTH data_1
[i]Type for REF_54

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_168(bool) = REF_54 != 0
[i]Type for TMP_168

Name: TMP_168 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_169 = CONVERT msg.sender to ITridentCallee
[i]Type for TMP_169

Name: TMP_169 Function: _processSwap
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:TMP_169(ITridentCallee), function:tridentSwapCallback, arguments:['data_1']  
TMP_156(uint256) = INTERNAL_CALL, HybridPool.__balance(address)(token1_32)
token_1(address) := ϕ(['token1_43', 'token0_40', 'token1_32', 'token0_35'])
[i]Type for token

Name: token Function: __balance
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
bento_2(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: __balance
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_59 (->None) := 4152920812(uint256)
Finance type key: (-1, -1)
[i]Type for REF_59

Name: REF_59 Function: __balance
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4152920812
Fields: 
Finance Type: undef
TMP_188 = CONVERT this to address
[i]Type for TMP_188

Name: TMP_188 Function: __balance
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_189(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_59,token_1,TMP_188)
[i]Type for TMP_189

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_21(bool,bytes) = LOW_LEVEL_CALL, dest:bento_2, function:staticcall, arguments:['TMP_189']  
[i]Type for TUPLE_21

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_3(address) := ϕ(['bento_5', 'bento_3', 'bento_1', 'bento_2', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: __balance
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
___balance_1(bytes)= UNPACK TUPLE_21 index: 1 
[i]Type for ___balance

Name: ___balance Function: __balance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_190(uint256) = SOLIDITY_CALL abi.decode()(___balance_1,uint256)
[i]Type for TMP_190

Name: TMP_190 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
balance_1(uint256) := TMP_190(uint256)
Finance type key: (-1, -1)
[i]Type for balance

Name: balance Function: __balance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token1_43', 'token0_40', 'token1_32', 'token0_35'])
[i]Type for token

Name: token Function: __balance
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
bento_2(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: __balance
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_59 (->None) := 4152920812(uint256)
Finance type key: (-1, -1)
[i]Type for REF_59

Name: REF_59 Function: __balance
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4152920812
Fields: 
Finance Type: undef
TMP_188 = CONVERT this to address
[i]Type for TMP_188

Name: TMP_188 Function: __balance
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_189(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_59,token_1,TMP_188)
[i]Type for TMP_189

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_21(bool,bytes) = LOW_LEVEL_CALL, dest:bento_2, function:staticcall, arguments:['TMP_189']  
[i]Type for TUPLE_21

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_3(address) := ϕ(['bento_5', 'bento_3', 'bento_1', 'bento_2', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: __balance
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
___balance_1(bytes)= UNPACK TUPLE_21 index: 1 
[i]Type for ___balance

Name: ___balance Function: __balance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_190(uint256) = SOLIDITY_CALL abi.decode()(___balance_1,uint256)
[i]Type for TMP_190

Name: TMP_190 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
balance_1(uint256) := TMP_190(uint256)
Finance type key: (-1, -1)
[i]Type for balance

Name: balance Function: __balance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_156

Name: TMP_156 Function: flashSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_157(uint256) = INTERNAL_CALL, HybridPool._toAmount(address,uint256)(token1_33,TMP_156)
token_1(address) := ϕ(['token0_36', 'token0_38', 'token1_29', 'token0_41', 'token1_44', 'token1_33', 'token1_39', 'tokenIn_1', 'token0_29'])
[i]Type for token

Name: token Function: _toAmount
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['TMP_143', '_reserve1_1', 'amountIn_1', 'amountIn_1', 'TMP_156', '_reserve0_1', 'TMP_184', 'TMP_186'])
[i]Type for input

Name: input Function: _toAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_191 = CONVERT this to address
[i]Type for TMP_191

Name: TMP_191 Function: _toAmount
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_192 = CONVERT TMP_191 to IBentoBoxMinimal
[i]Type for TMP_192

Name: TMP_192 Function: _toAmount
Num: 
Den: 
Address: 8
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
TMP_193(uint256) = HIGH_LEVEL_CALL, dest:TMP_192(IBentoBoxMinimal), function:toAmount, arguments:['token_1', 'input_1', 'False']  
[i]Type for TMP_193

Name: TMP_193 Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
output_1(uint256) := TMP_193(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
RETURN output_1
token_1(address) := ϕ(['token0_36', 'token0_38', 'token1_29', 'token0_41', 'token1_44', 'token1_33', 'token1_39', 'tokenIn_1', 'token0_29'])
[i]Type for token

Name: token Function: _toAmount
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['TMP_143', '_reserve1_1', 'amountIn_1', 'amountIn_1', 'TMP_156', '_reserve0_1', 'TMP_184', 'TMP_186'])
[i]Type for input

Name: input Function: _toAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_191 = CONVERT this to address
[i]Type for TMP_191

Name: TMP_191 Function: _toAmount
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_192 = CONVERT TMP_191 to IBentoBoxMinimal
[i]Type for TMP_192

Name: TMP_192 Function: _toAmount
Num: 
Den: 
Address: 8
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
TMP_193(uint256) = HIGH_LEVEL_CALL, dest:TMP_192(IBentoBoxMinimal), function:toAmount, arguments:['token_1', 'input_1', 'False']  
[i]Type for TMP_193

Name: TMP_193 Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
output_1(uint256) := TMP_193(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
RETURN output_1
[i]Type for TMP_157

Name: TMP_157 Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
balance1_1(uint256) := TMP_157(uint256)
Finance type key: (-1, -1)
[i]Type for balance1

Name: balance1 Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
TMP_140(uint256) = amountIn_3 (c)- fee_2
[i]Type for TMP_140

Name: TMP_140 Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
TMP_141(uint256) = INTERNAL_CALL, HybridPool._getAmountOut(uint256,uint256,uint256,bool)(TMP_140,_reserve0_1,_reserve1_1,True)
amountIn_1(uint256) := ϕ(['TMP_153', 'TMP_124', 'TMP_103', 'TMP_112', 'TMP_130', 'TMP_140', 'amountIn_3'])
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
_reserve0_1(uint256) := ϕ(['_reserve0_1', '_reserve0_1', '_reserve0_1', 'TMP_104', 'TMP_113'])
[i]Type for _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
_reserve1_1(uint256) := ϕ(['_reserve1_1', 'TMP_105', 'TMP_114', '_reserve1_1', '_reserve1_1'])
[i]Type for _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
token0PrecisionMultiplier_2(uint256) := ϕ(['token0PrecisionMultiplier_0', 'token0PrecisionMultiplier_1', 'token0PrecisionMultiplier_4'])
[i]Type for token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
token1PrecisionMultiplier_2(uint256) := ϕ(['token1PrecisionMultiplier_4', 'token1PrecisionMultiplier_1', 'token1PrecisionMultiplier_0'])
[i]Type for token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_196(uint256) = _reserve0_1 (c)* token0PrecisionMultiplier_2
[i]Type for TMP_196

Name: TMP_196 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
xpIn_1(uint256) := TMP_196(uint256)
Finance type key: (-1, -1)
[i]Type for xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_197(uint256) = _reserve1_1 (c)* token1PrecisionMultiplier_2
[i]Type for TMP_197

Name: TMP_197 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
xpOut_1(uint256) := TMP_197(uint256)
Finance type key: (-1, -1)
[i]Type for xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_198(uint256) = _reserve1_1 (c)* token1PrecisionMultiplier_2
[i]Type for TMP_198

Name: TMP_198 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
xpIn_2(uint256) := TMP_198(uint256)
Finance type key: (-1, -1)
[i]Type for xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
amountIn_2(uint256) = amountIn_1 (c)* token0PrecisionMultiplier_2
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: updated simple fee ratio
TMP_199(uint256) = _reserve0_1 (c)* token0PrecisionMultiplier_2
[i]Type for TMP_199

Name: TMP_199 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
xpOut_2(uint256) := TMP_199(uint256)
Finance type key: (-1, -1)
[i]Type for xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
amountIn_4(uint256) := ϕ(['amountIn_3', 'amountIn_2'])
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
xpIn_3(uint256) := ϕ(['xpIn_1', 'xpIn_2'])
[i]Type for xpIn

Name: xpIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
xpOut_3(uint256) := ϕ(['xpOut_1', 'xpOut_2'])
[i]Type for xpOut

Name: xpOut Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_200(uint256) = INTERNAL_CALL, HybridPool._computeLiquidityFromAdjustedBalances(uint256,uint256)(xpIn_3,xpOut_3)
xp0_1(uint256) := ϕ(['xpIn_3', 'xp0_1'])
[i]Type for xp0

Name: xp0 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
xp1_1(uint256) := ϕ(['xpOut_3', 'xp1_1'])
[i]Type for xp1

Name: xp1 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MAX_LOOP_LIMIT_1(uint256) := ϕ(['MAX_LOOP_LIMIT_0'])
[i]Type for MAX_LOOP_LIMIT

Name: MAX_LOOP_LIMIT Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
N_A_2(uint256) := ϕ(['N_A_0', 'N_A_1'])
[i]Type for N_A

Name: N_A Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
A_PRECISION_1(uint256) := ϕ(['A_PRECISION_0'])
[i]Type for A_PRECISION

Name: A_PRECISION Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_215(uint256) = xp0_1 (c)+ xp1_1
[i]Type for TMP_215

Name: TMP_215 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
s_1(uint256) := TMP_215(uint256)
Finance type key: (-1, -1)
[i]Type for s

Name: s Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_216(bool) = s_1 == 0
[i]Type for TMP_216

Name: TMP_216 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
computed_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for computed

Name: computed Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
D_1(uint256) := s_1(uint256)
Finance type key: (-1, -1)
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
D_2(uint256) := ϕ(['D_3', 'D_1'])
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
i_2(uint256) := ϕ(['i_3', 'i_1'])
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_217(bool) = i_2 < MAX_LOOP_LIMIT_1
[i]Type for TMP_217

Name: TMP_217 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_218(uint256) = D_2 (c)* D_2
Finance type key: (40, 40)
[i]Type for TMP_218

Name: TMP_218 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_219(uint256) = TMP_218 (c)/ xp0_1
[i]Type for TMP_219

Name: TMP_219 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_220(uint256) = TMP_219 (c)* D_2
[i]Type for TMP_220

Name: TMP_220 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
TMP_221(uint256) = TMP_220 (c)/ xp1_1
[i]Type for TMP_221

Name: TMP_221 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
TMP_222(uint256) = TMP_221 (c)/ 4
[i]Type for TMP_222

Name: TMP_222 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: price/exchange rate
dP_1(uint256) := TMP_222(uint256)
Finance type key: (40, -1)
[i]Type for dP

Name: dP Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: price/exchange rate
prevD_1(uint256) := D_2(uint256)
Finance type key: (40, -1)
[i]Type for prevD

Name: prevD Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
computed_2(uint256) := D_3(uint256)
Finance type key: (40, -1)
[i]Type for computed

Name: computed Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
TMP_223(uint256) = N_A_2 (c)* s_1
[i]Type for TMP_223

Name: TMP_223 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_224(uint256) = TMP_223 (c)/ A_PRECISION_1
[i]Type for TMP_224

Name: TMP_224 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_225(uint256) = 2 (c)* dP_1
[i]Type for TMP_225

Name: TMP_225 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: price/exchange rate
TMP_226(uint256) = TMP_224 (c)+ TMP_225
[i]Type for TMP_226

Name: TMP_226 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: price/exchange rate
TMP_227(uint256) = TMP_226 (c)* D_2
Finance type key: (40, 40)
[i]Type for TMP_227

Name: TMP_227 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_228(uint256) = N_A_2 (c)/ A_PRECISION_1
[i]Type for TMP_228

Name: TMP_228 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_229(uint256) = TMP_228 (c)- 1
[i]Type for TMP_229

Name: TMP_229 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
TMP_230(uint256) = TMP_229 (c)* D_2
[i]Type for TMP_230

Name: TMP_230 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: price/exchange rate
TMP_231(uint256) = 3 (c)* dP_1
[i]Type for TMP_231

Name: TMP_231 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 12
Fields: 
Finance Type: price/exchange rate
TMP_232(uint256) = TMP_230 (c)+ TMP_231
Finance type key: (40, 40)
[i]Type for TMP_232

Name: TMP_232 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 13
Fields: 
Finance Type: price/exchange rate
TMP_233(uint256) = TMP_227 (c)/ TMP_232
[i]Type for TMP_233

Name: TMP_233 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
D_3(uint256) := TMP_233(uint256)
Finance type key: (40, -1)
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
TMP_234(bool) = LIBRARY_CALL, dest:MathUtils, function:MathUtils.within1(uint256,uint256), arguments:['D_3', 'prevD_1'] 
[i]Type for TMP_234

Name: TMP_234 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_235(uint256) := i_2(uint256)
Finance type key: (-1, -1)
[i]Type for TMP_235

Name: TMP_235 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_3(uint256) = i_2 (c)+ 1
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
xp0_1(uint256) := ϕ(['xpIn_3', 'xp0_1'])
[i]Type for xp0

Name: xp0 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
xp1_1(uint256) := ϕ(['xpOut_3', 'xp1_1'])
[i]Type for xp1

Name: xp1 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MAX_LOOP_LIMIT_1(uint256) := ϕ(['MAX_LOOP_LIMIT_0'])
[i]Type for MAX_LOOP_LIMIT

Name: MAX_LOOP_LIMIT Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
N_A_2(uint256) := ϕ(['N_A_0', 'N_A_1'])
[i]Type for N_A

Name: N_A Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
A_PRECISION_1(uint256) := ϕ(['A_PRECISION_0'])
[i]Type for A_PRECISION

Name: A_PRECISION Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_215(uint256) = xp0_1 (c)+ xp1_1
[i]Type for TMP_215

Name: TMP_215 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
s_1(uint256) := TMP_215(uint256)
Finance type key: (-1, -1)
[i]Type for s

Name: s Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_216(bool) = s_1 == 0
[i]Type for TMP_216

Name: TMP_216 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
computed_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for computed

Name: computed Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
D_1(uint256) := s_1(uint256)
Finance type key: (-1, -1)
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
D_2(uint256) := ϕ(['D_3', 'D_1'])
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
i_2(uint256) := ϕ(['i_3', 'i_1'])
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_217(bool) = i_2 < MAX_LOOP_LIMIT_1
[i]Type for TMP_217

Name: TMP_217 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_218(uint256) = D_2 (c)* D_2
Finance type key: (40, 40)
[i]Type for TMP_218

Name: TMP_218 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_219(uint256) = TMP_218 (c)/ xp0_1
[i]Type for TMP_219

Name: TMP_219 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_220(uint256) = TMP_219 (c)* D_2
[i]Type for TMP_220

Name: TMP_220 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
TMP_221(uint256) = TMP_220 (c)/ xp1_1
[i]Type for TMP_221

Name: TMP_221 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
TMP_222(uint256) = TMP_221 (c)/ 4
[i]Type for TMP_222

Name: TMP_222 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: price/exchange rate
dP_1(uint256) := TMP_222(uint256)
Finance type key: (40, -1)
[i]Type for dP

Name: dP Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: price/exchange rate
prevD_1(uint256) := D_2(uint256)
Finance type key: (40, -1)
[i]Type for prevD

Name: prevD Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
computed_2(uint256) := D_3(uint256)
Finance type key: (40, -1)
[i]Type for computed

Name: computed Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
TMP_223(uint256) = N_A_2 (c)* s_1
[i]Type for TMP_223

Name: TMP_223 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_224(uint256) = TMP_223 (c)/ A_PRECISION_1
[i]Type for TMP_224

Name: TMP_224 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_225(uint256) = 2 (c)* dP_1
[i]Type for TMP_225

Name: TMP_225 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: price/exchange rate
TMP_226(uint256) = TMP_224 (c)+ TMP_225
[i]Type for TMP_226

Name: TMP_226 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: price/exchange rate
TMP_227(uint256) = TMP_226 (c)* D_2
Finance type key: (40, 40)
[i]Type for TMP_227

Name: TMP_227 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_228(uint256) = N_A_2 (c)/ A_PRECISION_1
[i]Type for TMP_228

Name: TMP_228 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_229(uint256) = TMP_228 (c)- 1
[i]Type for TMP_229

Name: TMP_229 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
TMP_230(uint256) = TMP_229 (c)* D_2
[i]Type for TMP_230

Name: TMP_230 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: price/exchange rate
TMP_231(uint256) = 3 (c)* dP_1
[i]Type for TMP_231

Name: TMP_231 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 12
Fields: 
Finance Type: price/exchange rate
TMP_232(uint256) = TMP_230 (c)+ TMP_231
Finance type key: (40, 40)
[i]Type for TMP_232

Name: TMP_232 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 13
Fields: 
Finance Type: price/exchange rate
TMP_233(uint256) = TMP_227 (c)/ TMP_232
[i]Type for TMP_233

Name: TMP_233 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
D_3(uint256) := TMP_233(uint256)
Finance type key: (40, -1)
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
TMP_234(bool) = LIBRARY_CALL, dest:MathUtils, function:MathUtils.within1(uint256,uint256), arguments:['D_3', 'prevD_1'] 
[i]Type for TMP_234

Name: TMP_234 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_235(uint256) := i_2(uint256)
Finance type key: (-1, -1)
[i]Type for TMP_235

Name: TMP_235 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_3(uint256) = i_2 (c)+ 1
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
[i]Type for TMP_200

Name: TMP_200 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
d_1(uint256) := TMP_200(uint256)
Finance type key: (-1, -1)
[i]Type for d

Name: d Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_201(uint256) = xpIn_3 (c)+ amountIn_4
[i]Type for TMP_201

Name: TMP_201 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
x_1(uint256) := TMP_201(uint256)
Finance type key: (12, -1)
[i]Type for x

Name: x Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
amountIn_3(uint256) = amountIn_1 (c)* token1PrecisionMultiplier_2
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: updated simple fee ratio
TMP_202(uint256) = INTERNAL_CALL, HybridPool._getY(uint256,uint256)(x_1,d_1)
x_1(uint256) := ϕ(['x_1'])
[i]Type for x

Name: x Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
D_1(uint256) := ϕ(['d_1'])
[i]Type for D

Name: D Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MAX_LOOP_LIMIT_2(uint256) := ϕ(['MAX_LOOP_LIMIT_0'])
[i]Type for MAX_LOOP_LIMIT

Name: MAX_LOOP_LIMIT Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
N_A_3(uint256) := ϕ(['N_A_0', 'N_A_1'])
[i]Type for N_A

Name: N_A Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
A_PRECISION_2(uint256) := ϕ(['A_PRECISION_0'])
[i]Type for A_PRECISION

Name: A_PRECISION Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_236(uint256) = D_1 (c)* D_1
[i]Type for TMP_236

Name: TMP_236 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_237(uint256) = x_1 (c)* 2
[i]Type for TMP_237

Name: TMP_237 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
TMP_238(uint256) = TMP_236 (c)/ TMP_237
[i]Type for TMP_238

Name: TMP_238 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
c_1(uint256) := TMP_238(uint256)
Finance type key: (12, -1)
[i]Type for c

Name: c Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
TMP_239(uint256) = c_1 (c)* D_1
[i]Type for TMP_239

Name: TMP_239 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
TMP_240(uint256) = N_A_3 (c)* 2
[i]Type for TMP_240

Name: TMP_240 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
TMP_241(uint256) = TMP_240 (c)/ A_PRECISION_2
[i]Type for TMP_241

Name: TMP_241 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
TMP_242(uint256) = TMP_239 (c)/ TMP_241
[i]Type for TMP_242

Name: TMP_242 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: updated simple fee ratio
c_2(uint256) := TMP_242(uint256)
Finance type key: (12, -1)
[i]Type for c

Name: c Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: updated simple fee ratio
TMP_243(uint256) = D_1 (c)* A_PRECISION_2
[i]Type for TMP_243

Name: TMP_243 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_244(uint256) = TMP_243 (c)/ N_A_3
[i]Type for TMP_244

Name: TMP_244 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_245(uint256) = x_1 (c)+ TMP_244
[i]Type for TMP_245

Name: TMP_245 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
b_1(uint256) := TMP_245(uint256)
Finance type key: (12, -1)
[i]Type for b

Name: b Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
y_1(uint256) := D_1(uint256)
Finance type key: (-1, -1)
[i]Type for y

Name: y Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for i

Name: i Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
y_2(uint256) := ϕ(['y_1', 'y_3'])
[i]Type for y

Name: y Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_2(uint256) := ϕ(['i_1', 'i_3'])
[i]Type for i

Name: i Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_246(bool) = i_2 < MAX_LOOP_LIMIT_2
[i]Type for TMP_246

Name: TMP_246 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
yPrev_1(uint256) := y_2(uint256)
Finance type key: (-1, -1)
[i]Type for yPrev

Name: yPrev Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_247(uint256) = y_2 (c)* y_2
[i]Type for TMP_247

Name: TMP_247 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_248(uint256) = TMP_247 (c)+ c_2
[i]Type for TMP_248

Name: TMP_248 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: updated simple fee ratio
TMP_249(uint256) = y_2 (c)* 2
[i]Type for TMP_249

Name: TMP_249 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_250(uint256) = TMP_249 (c)+ b_1
[i]Type for TMP_250

Name: TMP_250 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: updated simple fee ratio
TMP_251(uint256) = TMP_250 (c)- D_1
[i]Type for TMP_251

Name: TMP_251 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: updated simple fee ratio
TMP_252(uint256) = TMP_248 (c)/ TMP_251
Finance type key: (12, 12)
Finance type key: (12, 12)
[i]Type for TMP_252

Name: TMP_252 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
y_3(uint256) := TMP_252(uint256)
Finance type key: (-1, -1)
[i]Type for y

Name: y Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_253(bool) = LIBRARY_CALL, dest:MathUtils, function:MathUtils.within1(uint256,uint256), arguments:['y_3', 'yPrev_1'] 
[i]Type for TMP_253

Name: TMP_253 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_254(uint256) := i_2(uint256)
Finance type key: (-1, -1)
[i]Type for TMP_254

Name: TMP_254 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_3(uint256) = i_2 (c)+ 1
[i]Type for i

Name: i Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
x_1(uint256) := ϕ(['x_1'])
[i]Type for x

Name: x Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
D_1(uint256) := ϕ(['d_1'])
[i]Type for D

Name: D Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MAX_LOOP_LIMIT_2(uint256) := ϕ(['MAX_LOOP_LIMIT_0'])
[i]Type for MAX_LOOP_LIMIT

Name: MAX_LOOP_LIMIT Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
N_A_3(uint256) := ϕ(['N_A_0', 'N_A_1'])
[i]Type for N_A

Name: N_A Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
A_PRECISION_2(uint256) := ϕ(['A_PRECISION_0'])
[i]Type for A_PRECISION

Name: A_PRECISION Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_236(uint256) = D_1 (c)* D_1
[i]Type for TMP_236

Name: TMP_236 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_237(uint256) = x_1 (c)* 2
[i]Type for TMP_237

Name: TMP_237 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
TMP_238(uint256) = TMP_236 (c)/ TMP_237
[i]Type for TMP_238

Name: TMP_238 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
c_1(uint256) := TMP_238(uint256)
Finance type key: (12, -1)
[i]Type for c

Name: c Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
TMP_239(uint256) = c_1 (c)* D_1
[i]Type for TMP_239

Name: TMP_239 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
TMP_240(uint256) = N_A_3 (c)* 2
[i]Type for TMP_240

Name: TMP_240 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
TMP_241(uint256) = TMP_240 (c)/ A_PRECISION_2
[i]Type for TMP_241

Name: TMP_241 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
TMP_242(uint256) = TMP_239 (c)/ TMP_241
[i]Type for TMP_242

Name: TMP_242 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: updated simple fee ratio
c_2(uint256) := TMP_242(uint256)
Finance type key: (12, -1)
[i]Type for c

Name: c Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: updated simple fee ratio
TMP_243(uint256) = D_1 (c)* A_PRECISION_2
[i]Type for TMP_243

Name: TMP_243 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_244(uint256) = TMP_243 (c)/ N_A_3
[i]Type for TMP_244

Name: TMP_244 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_245(uint256) = x_1 (c)+ TMP_244
[i]Type for TMP_245

Name: TMP_245 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
b_1(uint256) := TMP_245(uint256)
Finance type key: (12, -1)
[i]Type for b

Name: b Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
y_1(uint256) := D_1(uint256)
Finance type key: (-1, -1)
[i]Type for y

Name: y Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for i

Name: i Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
y_2(uint256) := ϕ(['y_1', 'y_3'])
[i]Type for y

Name: y Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_2(uint256) := ϕ(['i_1', 'i_3'])
[i]Type for i

Name: i Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_246(bool) = i_2 < MAX_LOOP_LIMIT_2
[i]Type for TMP_246

Name: TMP_246 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
yPrev_1(uint256) := y_2(uint256)
Finance type key: (-1, -1)
[i]Type for yPrev

Name: yPrev Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_247(uint256) = y_2 (c)* y_2
[i]Type for TMP_247

Name: TMP_247 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_248(uint256) = TMP_247 (c)+ c_2
[i]Type for TMP_248

Name: TMP_248 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: updated simple fee ratio
TMP_249(uint256) = y_2 (c)* 2
[i]Type for TMP_249

Name: TMP_249 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_250(uint256) = TMP_249 (c)+ b_1
[i]Type for TMP_250

Name: TMP_250 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: updated simple fee ratio
TMP_251(uint256) = TMP_250 (c)- D_1
[i]Type for TMP_251

Name: TMP_251 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: updated simple fee ratio
TMP_252(uint256) = TMP_248 (c)/ TMP_251
Finance type key: (12, 12)
Finance type key: (12, 12)
[i]Type for TMP_252

Name: TMP_252 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
y_3(uint256) := TMP_252(uint256)
Finance type key: (-1, -1)
[i]Type for y

Name: y Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_253(bool) = LIBRARY_CALL, dest:MathUtils, function:MathUtils.within1(uint256,uint256), arguments:['y_3', 'yPrev_1'] 
[i]Type for TMP_253

Name: TMP_253 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_254(uint256) := i_2(uint256)
Finance type key: (-1, -1)
[i]Type for TMP_254

Name: TMP_254 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_3(uint256) = i_2 (c)+ 1
[i]Type for i

Name: i Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
[i]Type for TMP_202

Name: TMP_202 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
y_1(uint256) := TMP_202(uint256)
Finance type key: (-1, -1)
[i]Type for y

Name: y Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_203(uint256) = xpOut_3 (c)- y_1
[i]Type for TMP_203

Name: TMP_203 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_204(uint256) = TMP_203 (c)- 1
[i]Type for TMP_204

Name: TMP_204 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
dy_1(uint256) := TMP_204(uint256)
Finance type key: (-1, -1)
[i]Type for dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
dy_2(uint256) = dy_1 (c)/ token1PrecisionMultiplier_4
[i]Type for dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
dy_3(uint256) = dy_1 (c)/ token0PrecisionMultiplier_4
[i]Type for dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
amountIn_1(uint256) := ϕ(['TMP_153', 'TMP_124', 'TMP_103', 'TMP_112', 'TMP_130', 'TMP_140', 'amountIn_3'])
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
_reserve0_1(uint256) := ϕ(['_reserve0_1', '_reserve0_1', '_reserve0_1', 'TMP_104', 'TMP_113'])
[i]Type for _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
_reserve1_1(uint256) := ϕ(['_reserve1_1', 'TMP_105', 'TMP_114', '_reserve1_1', '_reserve1_1'])
[i]Type for _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
token0PrecisionMultiplier_2(uint256) := ϕ(['token0PrecisionMultiplier_0', 'token0PrecisionMultiplier_1', 'token0PrecisionMultiplier_4'])
[i]Type for token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
token1PrecisionMultiplier_2(uint256) := ϕ(['token1PrecisionMultiplier_4', 'token1PrecisionMultiplier_1', 'token1PrecisionMultiplier_0'])
[i]Type for token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_196(uint256) = _reserve0_1 (c)* token0PrecisionMultiplier_2
[i]Type for TMP_196

Name: TMP_196 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
xpIn_1(uint256) := TMP_196(uint256)
Finance type key: (-1, -1)
[i]Type for xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_197(uint256) = _reserve1_1 (c)* token1PrecisionMultiplier_2
[i]Type for TMP_197

Name: TMP_197 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
xpOut_1(uint256) := TMP_197(uint256)
Finance type key: (-1, -1)
[i]Type for xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_198(uint256) = _reserve1_1 (c)* token1PrecisionMultiplier_2
[i]Type for TMP_198

Name: TMP_198 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
xpIn_2(uint256) := TMP_198(uint256)
Finance type key: (-1, -1)
[i]Type for xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
amountIn_2(uint256) = amountIn_1 (c)* token0PrecisionMultiplier_2
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: updated simple fee ratio
TMP_199(uint256) = _reserve0_1 (c)* token0PrecisionMultiplier_2
[i]Type for TMP_199

Name: TMP_199 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
xpOut_2(uint256) := TMP_199(uint256)
Finance type key: (-1, -1)
[i]Type for xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
amountIn_4(uint256) := ϕ(['amountIn_3', 'amountIn_2'])
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
xpIn_3(uint256) := ϕ(['xpIn_1', 'xpIn_2'])
[i]Type for xpIn

Name: xpIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
xpOut_3(uint256) := ϕ(['xpOut_1', 'xpOut_2'])
[i]Type for xpOut

Name: xpOut Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_200(uint256) = INTERNAL_CALL, HybridPool._computeLiquidityFromAdjustedBalances(uint256,uint256)(xpIn_3,xpOut_3)
xp0_1(uint256) := ϕ(['xpIn_3', 'xp0_1'])
[i]Type for xp0

Name: xp0 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
xp1_1(uint256) := ϕ(['xpOut_3', 'xp1_1'])
[i]Type for xp1

Name: xp1 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MAX_LOOP_LIMIT_1(uint256) := ϕ(['MAX_LOOP_LIMIT_0'])
[i]Type for MAX_LOOP_LIMIT

Name: MAX_LOOP_LIMIT Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
N_A_2(uint256) := ϕ(['N_A_0', 'N_A_1'])
[i]Type for N_A

Name: N_A Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
A_PRECISION_1(uint256) := ϕ(['A_PRECISION_0'])
[i]Type for A_PRECISION

Name: A_PRECISION Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_215(uint256) = xp0_1 (c)+ xp1_1
[i]Type for TMP_215

Name: TMP_215 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
s_1(uint256) := TMP_215(uint256)
Finance type key: (-1, -1)
[i]Type for s

Name: s Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_216(bool) = s_1 == 0
[i]Type for TMP_216

Name: TMP_216 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
computed_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for computed

Name: computed Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
D_1(uint256) := s_1(uint256)
Finance type key: (-1, -1)
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
D_2(uint256) := ϕ(['D_3', 'D_1'])
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
i_2(uint256) := ϕ(['i_3', 'i_1'])
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_217(bool) = i_2 < MAX_LOOP_LIMIT_1
[i]Type for TMP_217

Name: TMP_217 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_218(uint256) = D_2 (c)* D_2
Finance type key: (40, 40)
[i]Type for TMP_218

Name: TMP_218 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_219(uint256) = TMP_218 (c)/ xp0_1
[i]Type for TMP_219

Name: TMP_219 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_220(uint256) = TMP_219 (c)* D_2
[i]Type for TMP_220

Name: TMP_220 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
TMP_221(uint256) = TMP_220 (c)/ xp1_1
[i]Type for TMP_221

Name: TMP_221 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
TMP_222(uint256) = TMP_221 (c)/ 4
[i]Type for TMP_222

Name: TMP_222 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: price/exchange rate
dP_1(uint256) := TMP_222(uint256)
Finance type key: (40, -1)
[i]Type for dP

Name: dP Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: price/exchange rate
prevD_1(uint256) := D_2(uint256)
Finance type key: (40, -1)
[i]Type for prevD

Name: prevD Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
computed_2(uint256) := D_3(uint256)
Finance type key: (40, -1)
[i]Type for computed

Name: computed Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
TMP_223(uint256) = N_A_2 (c)* s_1
[i]Type for TMP_223

Name: TMP_223 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_224(uint256) = TMP_223 (c)/ A_PRECISION_1
[i]Type for TMP_224

Name: TMP_224 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_225(uint256) = 2 (c)* dP_1
[i]Type for TMP_225

Name: TMP_225 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: price/exchange rate
TMP_226(uint256) = TMP_224 (c)+ TMP_225
[i]Type for TMP_226

Name: TMP_226 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: price/exchange rate
TMP_227(uint256) = TMP_226 (c)* D_2
Finance type key: (40, 40)
[i]Type for TMP_227

Name: TMP_227 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_228(uint256) = N_A_2 (c)/ A_PRECISION_1
[i]Type for TMP_228

Name: TMP_228 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_229(uint256) = TMP_228 (c)- 1
[i]Type for TMP_229

Name: TMP_229 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
TMP_230(uint256) = TMP_229 (c)* D_2
[i]Type for TMP_230

Name: TMP_230 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: price/exchange rate
TMP_231(uint256) = 3 (c)* dP_1
[i]Type for TMP_231

Name: TMP_231 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 12
Fields: 
Finance Type: price/exchange rate
TMP_232(uint256) = TMP_230 (c)+ TMP_231
Finance type key: (40, 40)
[i]Type for TMP_232

Name: TMP_232 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 13
Fields: 
Finance Type: price/exchange rate
TMP_233(uint256) = TMP_227 (c)/ TMP_232
[i]Type for TMP_233

Name: TMP_233 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
D_3(uint256) := TMP_233(uint256)
Finance type key: (40, -1)
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
TMP_234(bool) = LIBRARY_CALL, dest:MathUtils, function:MathUtils.within1(uint256,uint256), arguments:['D_3', 'prevD_1'] 
[i]Type for TMP_234

Name: TMP_234 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_235(uint256) := i_2(uint256)
Finance type key: (-1, -1)
[i]Type for TMP_235

Name: TMP_235 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_3(uint256) = i_2 (c)+ 1
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
xp0_1(uint256) := ϕ(['xpIn_3', 'xp0_1'])
[i]Type for xp0

Name: xp0 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
xp1_1(uint256) := ϕ(['xpOut_3', 'xp1_1'])
[i]Type for xp1

Name: xp1 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MAX_LOOP_LIMIT_1(uint256) := ϕ(['MAX_LOOP_LIMIT_0'])
[i]Type for MAX_LOOP_LIMIT

Name: MAX_LOOP_LIMIT Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
N_A_2(uint256) := ϕ(['N_A_0', 'N_A_1'])
[i]Type for N_A

Name: N_A Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
A_PRECISION_1(uint256) := ϕ(['A_PRECISION_0'])
[i]Type for A_PRECISION

Name: A_PRECISION Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_215(uint256) = xp0_1 (c)+ xp1_1
[i]Type for TMP_215

Name: TMP_215 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
s_1(uint256) := TMP_215(uint256)
Finance type key: (-1, -1)
[i]Type for s

Name: s Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_216(bool) = s_1 == 0
[i]Type for TMP_216

Name: TMP_216 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
computed_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for computed

Name: computed Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
D_1(uint256) := s_1(uint256)
Finance type key: (-1, -1)
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
D_2(uint256) := ϕ(['D_3', 'D_1'])
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
i_2(uint256) := ϕ(['i_3', 'i_1'])
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_217(bool) = i_2 < MAX_LOOP_LIMIT_1
[i]Type for TMP_217

Name: TMP_217 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_218(uint256) = D_2 (c)* D_2
Finance type key: (40, 40)
[i]Type for TMP_218

Name: TMP_218 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_219(uint256) = TMP_218 (c)/ xp0_1
[i]Type for TMP_219

Name: TMP_219 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_220(uint256) = TMP_219 (c)* D_2
[i]Type for TMP_220

Name: TMP_220 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
TMP_221(uint256) = TMP_220 (c)/ xp1_1
[i]Type for TMP_221

Name: TMP_221 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
TMP_222(uint256) = TMP_221 (c)/ 4
[i]Type for TMP_222

Name: TMP_222 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: price/exchange rate
dP_1(uint256) := TMP_222(uint256)
Finance type key: (40, -1)
[i]Type for dP

Name: dP Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: price/exchange rate
prevD_1(uint256) := D_2(uint256)
Finance type key: (40, -1)
[i]Type for prevD

Name: prevD Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
computed_2(uint256) := D_3(uint256)
Finance type key: (40, -1)
[i]Type for computed

Name: computed Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
TMP_223(uint256) = N_A_2 (c)* s_1
[i]Type for TMP_223

Name: TMP_223 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_224(uint256) = TMP_223 (c)/ A_PRECISION_1
[i]Type for TMP_224

Name: TMP_224 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_225(uint256) = 2 (c)* dP_1
[i]Type for TMP_225

Name: TMP_225 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: price/exchange rate
TMP_226(uint256) = TMP_224 (c)+ TMP_225
[i]Type for TMP_226

Name: TMP_226 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: price/exchange rate
TMP_227(uint256) = TMP_226 (c)* D_2
Finance type key: (40, 40)
[i]Type for TMP_227

Name: TMP_227 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_228(uint256) = N_A_2 (c)/ A_PRECISION_1
[i]Type for TMP_228

Name: TMP_228 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_229(uint256) = TMP_228 (c)- 1
[i]Type for TMP_229

Name: TMP_229 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
TMP_230(uint256) = TMP_229 (c)* D_2
[i]Type for TMP_230

Name: TMP_230 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: price/exchange rate
TMP_231(uint256) = 3 (c)* dP_1
[i]Type for TMP_231

Name: TMP_231 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 12
Fields: 
Finance Type: price/exchange rate
TMP_232(uint256) = TMP_230 (c)+ TMP_231
Finance type key: (40, 40)
[i]Type for TMP_232

Name: TMP_232 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 13
Fields: 
Finance Type: price/exchange rate
TMP_233(uint256) = TMP_227 (c)/ TMP_232
[i]Type for TMP_233

Name: TMP_233 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
D_3(uint256) := TMP_233(uint256)
Finance type key: (40, -1)
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
TMP_234(bool) = LIBRARY_CALL, dest:MathUtils, function:MathUtils.within1(uint256,uint256), arguments:['D_3', 'prevD_1'] 
[i]Type for TMP_234

Name: TMP_234 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_235(uint256) := i_2(uint256)
Finance type key: (-1, -1)
[i]Type for TMP_235

Name: TMP_235 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_3(uint256) = i_2 (c)+ 1
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
[i]Type for TMP_200

Name: TMP_200 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
d_1(uint256) := TMP_200(uint256)
Finance type key: (-1, -1)
[i]Type for d

Name: d Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_201(uint256) = xpIn_3 (c)+ amountIn_4
[i]Type for TMP_201

Name: TMP_201 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
x_1(uint256) := TMP_201(uint256)
Finance type key: (12, -1)
[i]Type for x

Name: x Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
amountIn_3(uint256) = amountIn_1 (c)* token1PrecisionMultiplier_2
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: updated simple fee ratio
TMP_202(uint256) = INTERNAL_CALL, HybridPool._getY(uint256,uint256)(x_1,d_1)
x_1(uint256) := ϕ(['x_1'])
[i]Type for x

Name: x Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
D_1(uint256) := ϕ(['d_1'])
[i]Type for D

Name: D Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MAX_LOOP_LIMIT_2(uint256) := ϕ(['MAX_LOOP_LIMIT_0'])
[i]Type for MAX_LOOP_LIMIT

Name: MAX_LOOP_LIMIT Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
N_A_3(uint256) := ϕ(['N_A_0', 'N_A_1'])
[i]Type for N_A

Name: N_A Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
A_PRECISION_2(uint256) := ϕ(['A_PRECISION_0'])
[i]Type for A_PRECISION

Name: A_PRECISION Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_236(uint256) = D_1 (c)* D_1
[i]Type for TMP_236

Name: TMP_236 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_237(uint256) = x_1 (c)* 2
[i]Type for TMP_237

Name: TMP_237 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
TMP_238(uint256) = TMP_236 (c)/ TMP_237
[i]Type for TMP_238

Name: TMP_238 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
c_1(uint256) := TMP_238(uint256)
Finance type key: (12, -1)
[i]Type for c

Name: c Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
TMP_239(uint256) = c_1 (c)* D_1
[i]Type for TMP_239

Name: TMP_239 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
TMP_240(uint256) = N_A_3 (c)* 2
[i]Type for TMP_240

Name: TMP_240 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
TMP_241(uint256) = TMP_240 (c)/ A_PRECISION_2
[i]Type for TMP_241

Name: TMP_241 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
TMP_242(uint256) = TMP_239 (c)/ TMP_241
[i]Type for TMP_242

Name: TMP_242 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: updated simple fee ratio
c_2(uint256) := TMP_242(uint256)
Finance type key: (12, -1)
[i]Type for c

Name: c Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: updated simple fee ratio
TMP_243(uint256) = D_1 (c)* A_PRECISION_2
[i]Type for TMP_243

Name: TMP_243 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_244(uint256) = TMP_243 (c)/ N_A_3
[i]Type for TMP_244

Name: TMP_244 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_245(uint256) = x_1 (c)+ TMP_244
[i]Type for TMP_245

Name: TMP_245 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
b_1(uint256) := TMP_245(uint256)
Finance type key: (12, -1)
[i]Type for b

Name: b Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
y_1(uint256) := D_1(uint256)
Finance type key: (-1, -1)
[i]Type for y

Name: y Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for i

Name: i Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
y_2(uint256) := ϕ(['y_1', 'y_3'])
[i]Type for y

Name: y Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_2(uint256) := ϕ(['i_1', 'i_3'])
[i]Type for i

Name: i Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_246(bool) = i_2 < MAX_LOOP_LIMIT_2
[i]Type for TMP_246

Name: TMP_246 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
yPrev_1(uint256) := y_2(uint256)
Finance type key: (-1, -1)
[i]Type for yPrev

Name: yPrev Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_247(uint256) = y_2 (c)* y_2
[i]Type for TMP_247

Name: TMP_247 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_248(uint256) = TMP_247 (c)+ c_2
[i]Type for TMP_248

Name: TMP_248 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: updated simple fee ratio
TMP_249(uint256) = y_2 (c)* 2
[i]Type for TMP_249

Name: TMP_249 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_250(uint256) = TMP_249 (c)+ b_1
[i]Type for TMP_250

Name: TMP_250 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: updated simple fee ratio
TMP_251(uint256) = TMP_250 (c)- D_1
[i]Type for TMP_251

Name: TMP_251 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: updated simple fee ratio
TMP_252(uint256) = TMP_248 (c)/ TMP_251
Finance type key: (12, 12)
Finance type key: (12, 12)
[i]Type for TMP_252

Name: TMP_252 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
y_3(uint256) := TMP_252(uint256)
Finance type key: (-1, -1)
[i]Type for y

Name: y Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_253(bool) = LIBRARY_CALL, dest:MathUtils, function:MathUtils.within1(uint256,uint256), arguments:['y_3', 'yPrev_1'] 
[i]Type for TMP_253

Name: TMP_253 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_254(uint256) := i_2(uint256)
Finance type key: (-1, -1)
[i]Type for TMP_254

Name: TMP_254 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_3(uint256) = i_2 (c)+ 1
[i]Type for i

Name: i Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
x_1(uint256) := ϕ(['x_1'])
[i]Type for x

Name: x Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
D_1(uint256) := ϕ(['d_1'])
[i]Type for D

Name: D Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MAX_LOOP_LIMIT_2(uint256) := ϕ(['MAX_LOOP_LIMIT_0'])
[i]Type for MAX_LOOP_LIMIT

Name: MAX_LOOP_LIMIT Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
N_A_3(uint256) := ϕ(['N_A_0', 'N_A_1'])
[i]Type for N_A

Name: N_A Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
A_PRECISION_2(uint256) := ϕ(['A_PRECISION_0'])
[i]Type for A_PRECISION

Name: A_PRECISION Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_236(uint256) = D_1 (c)* D_1
[i]Type for TMP_236

Name: TMP_236 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_237(uint256) = x_1 (c)* 2
[i]Type for TMP_237

Name: TMP_237 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
TMP_238(uint256) = TMP_236 (c)/ TMP_237
[i]Type for TMP_238

Name: TMP_238 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
c_1(uint256) := TMP_238(uint256)
Finance type key: (12, -1)
[i]Type for c

Name: c Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
TMP_239(uint256) = c_1 (c)* D_1
[i]Type for TMP_239

Name: TMP_239 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
TMP_240(uint256) = N_A_3 (c)* 2
[i]Type for TMP_240

Name: TMP_240 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
TMP_241(uint256) = TMP_240 (c)/ A_PRECISION_2
[i]Type for TMP_241

Name: TMP_241 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
TMP_242(uint256) = TMP_239 (c)/ TMP_241
[i]Type for TMP_242

Name: TMP_242 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: updated simple fee ratio
c_2(uint256) := TMP_242(uint256)
Finance type key: (12, -1)
[i]Type for c

Name: c Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: updated simple fee ratio
TMP_243(uint256) = D_1 (c)* A_PRECISION_2
[i]Type for TMP_243

Name: TMP_243 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_244(uint256) = TMP_243 (c)/ N_A_3
[i]Type for TMP_244

Name: TMP_244 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_245(uint256) = x_1 (c)+ TMP_244
[i]Type for TMP_245

Name: TMP_245 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
b_1(uint256) := TMP_245(uint256)
Finance type key: (12, -1)
[i]Type for b

Name: b Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
y_1(uint256) := D_1(uint256)
Finance type key: (-1, -1)
[i]Type for y

Name: y Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for i

Name: i Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
y_2(uint256) := ϕ(['y_1', 'y_3'])
[i]Type for y

Name: y Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_2(uint256) := ϕ(['i_1', 'i_3'])
[i]Type for i

Name: i Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_246(bool) = i_2 < MAX_LOOP_LIMIT_2
[i]Type for TMP_246

Name: TMP_246 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
yPrev_1(uint256) := y_2(uint256)
Finance type key: (-1, -1)
[i]Type for yPrev

Name: yPrev Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_247(uint256) = y_2 (c)* y_2
[i]Type for TMP_247

Name: TMP_247 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_248(uint256) = TMP_247 (c)+ c_2
[i]Type for TMP_248

Name: TMP_248 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: updated simple fee ratio
TMP_249(uint256) = y_2 (c)* 2
[i]Type for TMP_249

Name: TMP_249 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_250(uint256) = TMP_249 (c)+ b_1
[i]Type for TMP_250

Name: TMP_250 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: updated simple fee ratio
TMP_251(uint256) = TMP_250 (c)- D_1
[i]Type for TMP_251

Name: TMP_251 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: updated simple fee ratio
TMP_252(uint256) = TMP_248 (c)/ TMP_251
Finance type key: (12, 12)
Finance type key: (12, 12)
[i]Type for TMP_252

Name: TMP_252 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
y_3(uint256) := TMP_252(uint256)
Finance type key: (-1, -1)
[i]Type for y

Name: y Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_253(bool) = LIBRARY_CALL, dest:MathUtils, function:MathUtils.within1(uint256,uint256), arguments:['y_3', 'yPrev_1'] 
[i]Type for TMP_253

Name: TMP_253 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_254(uint256) := i_2(uint256)
Finance type key: (-1, -1)
[i]Type for TMP_254

Name: TMP_254 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_3(uint256) = i_2 (c)+ 1
[i]Type for i

Name: i Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
[i]Type for TMP_202

Name: TMP_202 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
y_1(uint256) := TMP_202(uint256)
Finance type key: (-1, -1)
[i]Type for y

Name: y Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_203(uint256) = xpOut_3 (c)- y_1
[i]Type for TMP_203

Name: TMP_203 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_204(uint256) = TMP_203 (c)- 1
[i]Type for TMP_204

Name: TMP_204 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
dy_1(uint256) := TMP_204(uint256)
Finance type key: (-1, -1)
[i]Type for dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
dy_2(uint256) = dy_1 (c)/ token1PrecisionMultiplier_4
[i]Type for dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
dy_3(uint256) = dy_1 (c)/ token0PrecisionMultiplier_4
[i]Type for dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
[i]Type for TMP_141

Name: TMP_141 Function: flashSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
amountOut_2(uint256) := TMP_141(uint256)
Finance type key: (-1, -1)
[i]Type for amountOut

Name: amountOut Function: flashSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_158(uint256) = balance1_1 (c)- _reserve1_1
[i]Type for TMP_158

Name: TMP_158 Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_159(bool) = TMP_158 >= amountIn_2
[i]Type for TMP_159

Name: TMP_159 Function: flashSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_160(None) = SOLIDITY_CALL require(bool,string)(TMP_159,INSUFFICIENT_AMOUNT_IN)
[i]Type for TMP_160

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
INTERNAL_CALL, HybridPool._processSwap(address,address,uint256,bytes,bool)(token1_36,recipient_1,amountOut_2,context_1,unwrapBento_1)
tokenOut_1(address) := ϕ(['token1_36', 'token0_31'])
[i]Type for tokenOut

Name: tokenOut Function: _processSwap
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
to_1(address) := ϕ(['recipient_1'])
[i]Type for to

Name: to Function: _processSwap
Num: 
Den: 
Address: -990
Norm: u
LF: to
Value: u
Fields: 
Finance Type: undef
amountOut_1(uint256) := ϕ(['amountOut_1', 'amountOut_2'])
[i]Type for amountOut

Name: amountOut Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
data_1(bytes) := ϕ(['context_1'])
[i]Type for data

Name: data Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
unwrapBento_1(bool) := ϕ(['unwrapBento_1'])
[i]Type for unwrapBento

Name: unwrapBento Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
INTERNAL_CALL, HybridPool._transfer(address,uint256,address,bool)(tokenOut_1,amountOut_1,to_1,unwrapBento_1)
token_1(address) := ϕ(['tokenOut_3', 'token1_17', 'token1_6', 'token0_5', 'tokenIn_1', 'token0_21', 'tokenIn_1', 'tokenOut_1'])
[i]Type for token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['_barFee_1', 'amount0_1', 'amountOut_3', 'fee_3', 'amountOut_1', 'amount1_2', 'amount0_3', 'amount1_1'])
[i]Type for amount

Name: amount Function: _transfer
Num: 
Den: 
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
to_1(address) := ϕ(['recipient_1', 'recipient_1', 'barFeeTo_16', 'barFeeTo_14', 'to_1', 'recipient_1'])
[i]Type for to

Name: to Function: _transfer
Num: 
Den: 
Address: -990
Norm: u
LF: to
Value: u
Fields: 
Finance Type: undef
unwrapBento_1(bool) := ϕ(['unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1'])
[i]Type for unwrapBento

Name: unwrapBento Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_6(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_74 (->None) := 4052550604(uint256)
Finance type key: (-1, -1)
[i]Type for REF_74

Name: REF_74 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4052550604
Fields: 
Finance Type: undef
TMP_208 = CONVERT this to address
[i]Type for TMP_208

Name: TMP_208 Function: _transfer
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_209(uint256) = INTERNAL_CALL, HybridPool._toShare(address,uint256)(token_1,amount_1)
token_1(address) := ϕ(['token1_21', 'token1_8', 'token0_18', 'token0_7', 'token_1'])
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['amount1_1', 'amount0_1', 'amount0_1', 'amount_1', 'amount1_1'])
[i]Type for input

Name: input Function: _toShare
Num: 
Den: 
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
bento_4(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_5(address) := ϕ(['bento_4', 'bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
output_1(uint256) := TMP_195(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token1_21', 'token1_8', 'token0_18', 'token0_7', 'token_1'])
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['amount1_1', 'amount0_1', 'amount0_1', 'amount_1', 'amount1_1'])
[i]Type for input

Name: input Function: _toShare
Num: 
Den: 
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
bento_4(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_5(address) := ϕ(['bento_4', 'bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
output_1(uint256) := TMP_195(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_209

Name: TMP_209 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_7(address) := ϕ(['bento_5'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
TMP_210(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_74,token_1,TMP_208,to_1,TMP_209)
[i]Type for TMP_210

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_24(bool,bytes) = LOW_LEVEL_CALL, dest:bento_7, function:call, arguments:['TMP_210']  
[i]Type for TUPLE_24

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_8(address) := ϕ(['bento_5', 'bento_7', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
success_1(bool)= UNPACK TUPLE_24 index: 0 
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_70 (->None) := 2547674416(uint256)
Finance type key: (-1, -1)
[i]Type for REF_70

Name: REF_70 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2547674416
Fields: 
Finance Type: undef
TMP_205 = CONVERT this to address
[i]Type for TMP_205

Name: TMP_205 Function: _transfer
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_206(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_70,token_1,TMP_205,to_1,amount_1,0)
[i]Type for TMP_206

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_23(bool,bytes) = LOW_LEVEL_CALL, dest:bento_6, function:call, arguments:['TMP_206']  
[i]Type for TUPLE_23

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_9(address) := ϕ(['bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
success_2(bool)= UNPACK TUPLE_23 index: 0 
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_211(None) = SOLIDITY_CALL require(bool,string)(success_scope_0_0,TRANSFER_FAILED)
[i]Type for TMP_211

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_207(None) = SOLIDITY_CALL require(bool,string)(success_2,WITHDRAW_FAILED)
[i]Type for TMP_207

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['tokenOut_3', 'token1_17', 'token1_6', 'token0_5', 'tokenIn_1', 'token0_21', 'tokenIn_1', 'tokenOut_1'])
[i]Type for token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['_barFee_1', 'amount0_1', 'amountOut_3', 'fee_3', 'amountOut_1', 'amount1_2', 'amount0_3', 'amount1_1'])
[i]Type for amount

Name: amount Function: _transfer
Num: 
Den: 
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
to_1(address) := ϕ(['recipient_1', 'recipient_1', 'barFeeTo_16', 'barFeeTo_14', 'to_1', 'recipient_1'])
[i]Type for to

Name: to Function: _transfer
Num: 
Den: 
Address: -990
Norm: u
LF: to
Value: u
Fields: 
Finance Type: undef
unwrapBento_1(bool) := ϕ(['unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1'])
[i]Type for unwrapBento

Name: unwrapBento Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_6(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_74 (->None) := 4052550604(uint256)
Finance type key: (-1, -1)
[i]Type for REF_74

Name: REF_74 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4052550604
Fields: 
Finance Type: undef
TMP_208 = CONVERT this to address
[i]Type for TMP_208

Name: TMP_208 Function: _transfer
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_209(uint256) = INTERNAL_CALL, HybridPool._toShare(address,uint256)(token_1,amount_1)
token_1(address) := ϕ(['token1_21', 'token1_8', 'token0_18', 'token0_7', 'token_1'])
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['amount1_1', 'amount0_1', 'amount0_1', 'amount_1', 'amount1_1'])
[i]Type for input

Name: input Function: _toShare
Num: 
Den: 
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
bento_4(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_5(address) := ϕ(['bento_4', 'bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
output_1(uint256) := TMP_195(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token1_21', 'token1_8', 'token0_18', 'token0_7', 'token_1'])
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['amount1_1', 'amount0_1', 'amount0_1', 'amount_1', 'amount1_1'])
[i]Type for input

Name: input Function: _toShare
Num: 
Den: 
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
bento_4(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_5(address) := ϕ(['bento_4', 'bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
output_1(uint256) := TMP_195(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_209

Name: TMP_209 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_7(address) := ϕ(['bento_5'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
TMP_210(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_74,token_1,TMP_208,to_1,TMP_209)
[i]Type for TMP_210

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_24(bool,bytes) = LOW_LEVEL_CALL, dest:bento_7, function:call, arguments:['TMP_210']  
[i]Type for TUPLE_24

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_8(address) := ϕ(['bento_5', 'bento_7', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
success_1(bool)= UNPACK TUPLE_24 index: 0 
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_70 (->None) := 2547674416(uint256)
Finance type key: (-1, -1)
[i]Type for REF_70

Name: REF_70 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2547674416
Fields: 
Finance Type: undef
TMP_205 = CONVERT this to address
[i]Type for TMP_205

Name: TMP_205 Function: _transfer
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_206(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_70,token_1,TMP_205,to_1,amount_1,0)
[i]Type for TMP_206

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_23(bool,bytes) = LOW_LEVEL_CALL, dest:bento_6, function:call, arguments:['TMP_206']  
[i]Type for TUPLE_23

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_9(address) := ϕ(['bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
success_2(bool)= UNPACK TUPLE_23 index: 0 
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_211(None) = SOLIDITY_CALL require(bool,string)(success_scope_0_0,TRANSFER_FAILED)
[i]Type for TMP_211

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_207(None) = SOLIDITY_CALL require(bool,string)(success_2,WITHDRAW_FAILED)
[i]Type for TMP_207

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_54 -> LENGTH data_1
[i]Type for REF_54

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_168(bool) = REF_54 != 0
[i]Type for TMP_168

Name: TMP_168 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_169 = CONVERT msg.sender to ITridentCallee
[i]Type for TMP_169

Name: TMP_169 Function: _processSwap
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:TMP_169(ITridentCallee), function:tridentSwapCallback, arguments:['data_1']  
tokenOut_1(address) := ϕ(['token1_36', 'token0_31'])
[i]Type for tokenOut

Name: tokenOut Function: _processSwap
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
to_1(address) := ϕ(['recipient_1'])
[i]Type for to

Name: to Function: _processSwap
Num: 
Den: 
Address: -990
Norm: u
LF: to
Value: u
Fields: 
Finance Type: undef
amountOut_1(uint256) := ϕ(['amountOut_1', 'amountOut_2'])
[i]Type for amountOut

Name: amountOut Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
data_1(bytes) := ϕ(['context_1'])
[i]Type for data

Name: data Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
unwrapBento_1(bool) := ϕ(['unwrapBento_1'])
[i]Type for unwrapBento

Name: unwrapBento Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
INTERNAL_CALL, HybridPool._transfer(address,uint256,address,bool)(tokenOut_1,amountOut_1,to_1,unwrapBento_1)
token_1(address) := ϕ(['tokenOut_3', 'token1_17', 'token1_6', 'token0_5', 'tokenIn_1', 'token0_21', 'tokenIn_1', 'tokenOut_1'])
[i]Type for token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['_barFee_1', 'amount0_1', 'amountOut_3', 'fee_3', 'amountOut_1', 'amount1_2', 'amount0_3', 'amount1_1'])
[i]Type for amount

Name: amount Function: _transfer
Num: 
Den: 
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
to_1(address) := ϕ(['recipient_1', 'recipient_1', 'barFeeTo_16', 'barFeeTo_14', 'to_1', 'recipient_1'])
[i]Type for to

Name: to Function: _transfer
Num: 
Den: 
Address: -990
Norm: u
LF: to
Value: u
Fields: 
Finance Type: undef
unwrapBento_1(bool) := ϕ(['unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1'])
[i]Type for unwrapBento

Name: unwrapBento Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_6(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_74 (->None) := 4052550604(uint256)
Finance type key: (-1, -1)
[i]Type for REF_74

Name: REF_74 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4052550604
Fields: 
Finance Type: undef
TMP_208 = CONVERT this to address
[i]Type for TMP_208

Name: TMP_208 Function: _transfer
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_209(uint256) = INTERNAL_CALL, HybridPool._toShare(address,uint256)(token_1,amount_1)
token_1(address) := ϕ(['token1_21', 'token1_8', 'token0_18', 'token0_7', 'token_1'])
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['amount1_1', 'amount0_1', 'amount0_1', 'amount_1', 'amount1_1'])
[i]Type for input

Name: input Function: _toShare
Num: 
Den: 
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
bento_4(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_5(address) := ϕ(['bento_4', 'bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
output_1(uint256) := TMP_195(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token1_21', 'token1_8', 'token0_18', 'token0_7', 'token_1'])
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['amount1_1', 'amount0_1', 'amount0_1', 'amount_1', 'amount1_1'])
[i]Type for input

Name: input Function: _toShare
Num: 
Den: 
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
bento_4(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_5(address) := ϕ(['bento_4', 'bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
output_1(uint256) := TMP_195(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_209

Name: TMP_209 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_7(address) := ϕ(['bento_5'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
TMP_210(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_74,token_1,TMP_208,to_1,TMP_209)
[i]Type for TMP_210

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_24(bool,bytes) = LOW_LEVEL_CALL, dest:bento_7, function:call, arguments:['TMP_210']  
[i]Type for TUPLE_24

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_8(address) := ϕ(['bento_5', 'bento_7', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
success_1(bool)= UNPACK TUPLE_24 index: 0 
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_70 (->None) := 2547674416(uint256)
Finance type key: (-1, -1)
[i]Type for REF_70

Name: REF_70 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2547674416
Fields: 
Finance Type: undef
TMP_205 = CONVERT this to address
[i]Type for TMP_205

Name: TMP_205 Function: _transfer
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_206(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_70,token_1,TMP_205,to_1,amount_1,0)
[i]Type for TMP_206

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_23(bool,bytes) = LOW_LEVEL_CALL, dest:bento_6, function:call, arguments:['TMP_206']  
[i]Type for TUPLE_23

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_9(address) := ϕ(['bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
success_2(bool)= UNPACK TUPLE_23 index: 0 
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_211(None) = SOLIDITY_CALL require(bool,string)(success_scope_0_0,TRANSFER_FAILED)
[i]Type for TMP_211

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_207(None) = SOLIDITY_CALL require(bool,string)(success_2,WITHDRAW_FAILED)
[i]Type for TMP_207

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['tokenOut_3', 'token1_17', 'token1_6', 'token0_5', 'tokenIn_1', 'token0_21', 'tokenIn_1', 'tokenOut_1'])
[i]Type for token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['_barFee_1', 'amount0_1', 'amountOut_3', 'fee_3', 'amountOut_1', 'amount1_2', 'amount0_3', 'amount1_1'])
[i]Type for amount

Name: amount Function: _transfer
Num: 
Den: 
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
to_1(address) := ϕ(['recipient_1', 'recipient_1', 'barFeeTo_16', 'barFeeTo_14', 'to_1', 'recipient_1'])
[i]Type for to

Name: to Function: _transfer
Num: 
Den: 
Address: -990
Norm: u
LF: to
Value: u
Fields: 
Finance Type: undef
unwrapBento_1(bool) := ϕ(['unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1'])
[i]Type for unwrapBento

Name: unwrapBento Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_6(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_74 (->None) := 4052550604(uint256)
Finance type key: (-1, -1)
[i]Type for REF_74

Name: REF_74 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4052550604
Fields: 
Finance Type: undef
TMP_208 = CONVERT this to address
[i]Type for TMP_208

Name: TMP_208 Function: _transfer
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_209(uint256) = INTERNAL_CALL, HybridPool._toShare(address,uint256)(token_1,amount_1)
token_1(address) := ϕ(['token1_21', 'token1_8', 'token0_18', 'token0_7', 'token_1'])
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['amount1_1', 'amount0_1', 'amount0_1', 'amount_1', 'amount1_1'])
[i]Type for input

Name: input Function: _toShare
Num: 
Den: 
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
bento_4(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_5(address) := ϕ(['bento_4', 'bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
output_1(uint256) := TMP_195(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token1_21', 'token1_8', 'token0_18', 'token0_7', 'token_1'])
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['amount1_1', 'amount0_1', 'amount0_1', 'amount_1', 'amount1_1'])
[i]Type for input

Name: input Function: _toShare
Num: 
Den: 
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
bento_4(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_5(address) := ϕ(['bento_4', 'bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
output_1(uint256) := TMP_195(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_209

Name: TMP_209 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_7(address) := ϕ(['bento_5'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
TMP_210(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_74,token_1,TMP_208,to_1,TMP_209)
[i]Type for TMP_210

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_24(bool,bytes) = LOW_LEVEL_CALL, dest:bento_7, function:call, arguments:['TMP_210']  
[i]Type for TUPLE_24

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_8(address) := ϕ(['bento_5', 'bento_7', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
success_1(bool)= UNPACK TUPLE_24 index: 0 
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_70 (->None) := 2547674416(uint256)
Finance type key: (-1, -1)
[i]Type for REF_70

Name: REF_70 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2547674416
Fields: 
Finance Type: undef
TMP_205 = CONVERT this to address
[i]Type for TMP_205

Name: TMP_205 Function: _transfer
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_206(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_70,token_1,TMP_205,to_1,amount_1,0)
[i]Type for TMP_206

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_23(bool,bytes) = LOW_LEVEL_CALL, dest:bento_6, function:call, arguments:['TMP_206']  
[i]Type for TUPLE_23

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_9(address) := ϕ(['bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
success_2(bool)= UNPACK TUPLE_23 index: 0 
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_211(None) = SOLIDITY_CALL require(bool,string)(success_scope_0_0,TRANSFER_FAILED)
[i]Type for TMP_211

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_207(None) = SOLIDITY_CALL require(bool,string)(success_2,WITHDRAW_FAILED)
[i]Type for TMP_207

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_54 -> LENGTH data_1
[i]Type for REF_54

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_168(bool) = REF_54 != 0
[i]Type for TMP_168

Name: TMP_168 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_169 = CONVERT msg.sender to ITridentCallee
[i]Type for TMP_169

Name: TMP_169 Function: _processSwap
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:TMP_169(ITridentCallee), function:tridentSwapCallback, arguments:['data_1']  
TMP_143(uint256) = INTERNAL_CALL, HybridPool.__balance(address)(token0_35)
[i]Type for TMP_143

Name: TMP_143 Function: flashSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_144(uint256) = INTERNAL_CALL, HybridPool._toAmount(address,uint256)(token0_36,TMP_143)
token_1(address) := ϕ(['token0_36', 'token0_38', 'token1_29', 'token0_41', 'token1_44', 'token1_33', 'token1_39', 'tokenIn_1', 'token0_29'])
[i]Type for token

Name: token Function: _toAmount
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['TMP_143', '_reserve1_1', 'amountIn_1', 'amountIn_1', 'TMP_156', '_reserve0_1', 'TMP_184', 'TMP_186'])
[i]Type for input

Name: input Function: _toAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_191 = CONVERT this to address
[i]Type for TMP_191

Name: TMP_191 Function: _toAmount
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_192 = CONVERT TMP_191 to IBentoBoxMinimal
[i]Type for TMP_192

Name: TMP_192 Function: _toAmount
Num: 
Den: 
Address: 8
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
TMP_193(uint256) = HIGH_LEVEL_CALL, dest:TMP_192(IBentoBoxMinimal), function:toAmount, arguments:['token_1', 'input_1', 'False']  
[i]Type for TMP_193

Name: TMP_193 Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
output_1(uint256) := TMP_193(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
RETURN output_1
token_1(address) := ϕ(['token0_36', 'token0_38', 'token1_29', 'token0_41', 'token1_44', 'token1_33', 'token1_39', 'tokenIn_1', 'token0_29'])
[i]Type for token

Name: token Function: _toAmount
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['TMP_143', '_reserve1_1', 'amountIn_1', 'amountIn_1', 'TMP_156', '_reserve0_1', 'TMP_184', 'TMP_186'])
[i]Type for input

Name: input Function: _toAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_191 = CONVERT this to address
[i]Type for TMP_191

Name: TMP_191 Function: _toAmount
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_192 = CONVERT TMP_191 to IBentoBoxMinimal
[i]Type for TMP_192

Name: TMP_192 Function: _toAmount
Num: 
Den: 
Address: 8
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
TMP_193(uint256) = HIGH_LEVEL_CALL, dest:TMP_192(IBentoBoxMinimal), function:toAmount, arguments:['token_1', 'input_1', 'False']  
[i]Type for TMP_193

Name: TMP_193 Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
output_1(uint256) := TMP_193(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
RETURN output_1
[i]Type for TMP_144

Name: TMP_144 Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
balance0_1(uint256) := TMP_144(uint256)
Finance type key: (-1, -1)
[i]Type for balance0

Name: balance0 Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
amountOut_3(uint256) := ϕ(['amountOut_1', 'amountOut_2'])
[i]Type for amountOut

Name: amountOut Function: flashSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
amountIn_4(uint256) := ϕ(['amountIn_2', 'amountIn_3'])
[i]Type for amountIn

Name: amountIn Function: flashSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tokenOut_3(address) := ϕ(['tokenOut_1', 'tokenOut_2'])
[i]Type for tokenOut

Name: tokenOut Function: flashSwap
Num: 
Den: 
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
fee_3(uint256) := ϕ(['fee_2', 'fee_1'])
[i]Type for fee

Name: fee Function: flashSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
TMP_145(uint256) = balance0_1 (c)- _reserve0_1
[i]Type for TMP_145

Name: TMP_145 Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_146(bool) = TMP_145 >= amountIn_3
[i]Type for TMP_146

Name: TMP_146 Function: flashSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_147(None) = SOLIDITY_CALL require(bool,string)(TMP_146,INSUFFICIENT_AMOUNT_IN)
[i]Type for TMP_147

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
INTERNAL_CALL, HybridPool._transfer(address,uint256,address,bool)(tokenIn_1,fee_3,barFeeTo_14,False)
token_1(address) := ϕ(['tokenOut_3', 'token1_17', 'token1_6', 'token0_5', 'tokenIn_1', 'token0_21', 'tokenIn_1', 'tokenOut_1'])
[i]Type for token

Name: token Function: _transfer
Num: 
Den: 
Address: -995
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['_barFee_1', 'amount0_1', 'amountOut_3', 'fee_3', 'amountOut_1', 'amount1_2', 'amount0_3', 'amount1_1'])
[i]Type for amount

Name: amount Function: _transfer
Num: 
Den: 
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
to_1(address) := ϕ(['recipient_1', 'recipient_1', 'barFeeTo_16', 'barFeeTo_14', 'to_1', 'recipient_1'])
[i]Type for to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 7
Norm: u
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
unwrapBento_1(bool) := ϕ(['unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1'])
[i]Type for unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_6(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_74 (->None) := 4052550604(uint256)
Finance type key: (-1, -1)
[i]Type for REF_74

Name: REF_74 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4052550604
Fields: 
Finance Type: undef
TMP_208 = CONVERT this to address
[i]Type for TMP_208

Name: TMP_208 Function: _transfer
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_209(uint256) = INTERNAL_CALL, HybridPool._toShare(address,uint256)(token_1,amount_1)
token_1(address) := ϕ(['token1_21', 'token1_8', 'token0_18', 'token0_7', 'token_1'])
[i]Type for token

Name: token Function: _toShare
Num: 
Den: 
Address: -995
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['amount1_1', 'amount0_1', 'amount0_1', 'amount_1', 'amount1_1'])
[i]Type for input

Name: input Function: _toShare
Num: 
Den: 
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
bento_4(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_5(address) := ϕ(['bento_4', 'bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
output_1(uint256) := TMP_195(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token1_21', 'token1_8', 'token0_18', 'token0_7', 'token_1'])
[i]Type for token

Name: token Function: _toShare
Num: 
Den: 
Address: -995
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['amount1_1', 'amount0_1', 'amount0_1', 'amount_1', 'amount1_1'])
[i]Type for input

Name: input Function: _toShare
Num: 
Den: 
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
bento_4(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_5(address) := ϕ(['bento_4', 'bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
output_1(uint256) := TMP_195(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_209

Name: TMP_209 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_7(address) := ϕ(['bento_5'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
TMP_210(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_74,token_1,TMP_208,to_1,TMP_209)
[i]Type for TMP_210

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_24(bool,bytes) = LOW_LEVEL_CALL, dest:bento_7, function:call, arguments:['TMP_210']  
[i]Type for TUPLE_24

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_8(address) := ϕ(['bento_5', 'bento_7', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
success_1(bool)= UNPACK TUPLE_24 index: 0 
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_70 (->None) := 2547674416(uint256)
Finance type key: (-1, -1)
[i]Type for REF_70

Name: REF_70 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2547674416
Fields: 
Finance Type: undef
TMP_205 = CONVERT this to address
[i]Type for TMP_205

Name: TMP_205 Function: _transfer
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_206(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_70,token_1,TMP_205,to_1,amount_1,0)
[i]Type for TMP_206

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_23(bool,bytes) = LOW_LEVEL_CALL, dest:bento_6, function:call, arguments:['TMP_206']  
[i]Type for TUPLE_23

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_9(address) := ϕ(['bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
success_2(bool)= UNPACK TUPLE_23 index: 0 
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_211(None) = SOLIDITY_CALL require(bool,string)(success_scope_0_0,TRANSFER_FAILED)
[i]Type for TMP_211

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_207(None) = SOLIDITY_CALL require(bool,string)(success_2,WITHDRAW_FAILED)
[i]Type for TMP_207

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['tokenOut_3', 'token1_17', 'token1_6', 'token0_5', 'tokenIn_1', 'token0_21', 'tokenIn_1', 'tokenOut_1'])
[i]Type for token

Name: token Function: _transfer
Num: 
Den: 
Address: -995
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['_barFee_1', 'amount0_1', 'amountOut_3', 'fee_3', 'amountOut_1', 'amount1_2', 'amount0_3', 'amount1_1'])
[i]Type for amount

Name: amount Function: _transfer
Num: 
Den: 
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
to_1(address) := ϕ(['recipient_1', 'recipient_1', 'barFeeTo_16', 'barFeeTo_14', 'to_1', 'recipient_1'])
[i]Type for to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 7
Norm: u
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
unwrapBento_1(bool) := ϕ(['unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1'])
[i]Type for unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_6(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_74 (->None) := 4052550604(uint256)
Finance type key: (-1, -1)
[i]Type for REF_74

Name: REF_74 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4052550604
Fields: 
Finance Type: undef
TMP_208 = CONVERT this to address
[i]Type for TMP_208

Name: TMP_208 Function: _transfer
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_209(uint256) = INTERNAL_CALL, HybridPool._toShare(address,uint256)(token_1,amount_1)
token_1(address) := ϕ(['token1_21', 'token1_8', 'token0_18', 'token0_7', 'token_1'])
[i]Type for token

Name: token Function: _toShare
Num: 
Den: 
Address: -995
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['amount1_1', 'amount0_1', 'amount0_1', 'amount_1', 'amount1_1'])
[i]Type for input

Name: input Function: _toShare
Num: 
Den: 
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
bento_4(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_5(address) := ϕ(['bento_4', 'bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
output_1(uint256) := TMP_195(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token1_21', 'token1_8', 'token0_18', 'token0_7', 'token_1'])
[i]Type for token

Name: token Function: _toShare
Num: 
Den: 
Address: -995
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['amount1_1', 'amount0_1', 'amount0_1', 'amount_1', 'amount1_1'])
[i]Type for input

Name: input Function: _toShare
Num: 
Den: 
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
bento_4(address) := ϕ(['bento_5', 'bento_0', 'bento_1', 'bento_8', 'bento_9', 'bento_3'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_5(address) := ϕ(['bento_4', 'bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
output_1(uint256) := TMP_195(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_209

Name: TMP_209 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_7(address) := ϕ(['bento_5'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
TMP_210(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_74,token_1,TMP_208,to_1,TMP_209)
[i]Type for TMP_210

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_24(bool,bytes) = LOW_LEVEL_CALL, dest:bento_7, function:call, arguments:['TMP_210']  
[i]Type for TUPLE_24

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_8(address) := ϕ(['bento_5', 'bento_7', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
success_1(bool)= UNPACK TUPLE_24 index: 0 
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_70 (->None) := 2547674416(uint256)
Finance type key: (-1, -1)
[i]Type for REF_70

Name: REF_70 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2547674416
Fields: 
Finance Type: undef
TMP_205 = CONVERT this to address
[i]Type for TMP_205

Name: TMP_205 Function: _transfer
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_206(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_70,token_1,TMP_205,to_1,amount_1,0)
[i]Type for TMP_206

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_23(bool,bytes) = LOW_LEVEL_CALL, dest:bento_6, function:call, arguments:['TMP_206']  
[i]Type for TUPLE_23

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_9(address) := ϕ(['bento_5', 'bento_3', 'bento_1', 'bento_9', 'bento_8'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 6
Norm: u
LF: bento
Value: u
Fields: 
Finance Type: undef
success_2(bool)= UNPACK TUPLE_23 index: 0 
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_211(None) = SOLIDITY_CALL require(bool,string)(success_scope_0_0,TRANSFER_FAILED)
[i]Type for TMP_211

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_207(None) = SOLIDITY_CALL require(bool,string)(success_2,WITHDRAW_FAILED)
[i]Type for TMP_207

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
INTERNAL_CALL, HybridPool._updateReserves()()



getAmountOut
MAX_FEE_9(uint256) := ϕ(['MAX_FEE_5', 'MAX_FEE_0', 'MAX_FEE_6', 'MAX_FEE_11'])
[i]Type for MAX_FEE

Name: MAX_FEE Function: getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
swapFee_9(uint256) := ϕ(['swapFee_0', 'swapFee_5', 'swapFee_1', 'swapFee_11', 'swapFee_6'])
[i]Type for swapFee

Name: swapFee Function: getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: simple fee ratio
token0_44(address) := ϕ(['token0_10', 'token0_26', 'token0_0', 'token0_19', 'token0_42', 'token0_39', 'token0_32', 'token0_1', 'token0_46', 'token0_22', 'token0_37'])
[i]Type for token0

Name: token0 Function: getAmountOut
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
TUPLE_25(address,uint256) = SOLIDITY_CALL abi.decode()(data_1(address,uint256))
[i]Type for TUPLE_25

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tokenIn_1(address)= UNPACK TUPLE_25 index: 0 
[i]Type for tokenIn

Name: tokenIn Function: getAmountOut
Num: 
Den: 
Address: -989
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
amountIn_1(uint256)= UNPACK TUPLE_25 index: 1 
[i]Type for amountIn

Name: amountIn Function: getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_26(uint256,uint256) = INTERNAL_CALL, HybridPool._getReserves()()
[i]Type for TUPLE_26

Name: TUPLE_26 Function: getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_reserve0_1(uint256)= UNPACK TUPLE_26 index: 0 
[i]Type for _reserve0

Name: _reserve0 Function: getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
_reserve1_1(uint256)= UNPACK TUPLE_26 index: 1 
[i]Type for _reserve1

Name: _reserve1 Function: getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
TMP_297(uint256) = INTERNAL_CALL, HybridPool._toAmount(address,uint256)(tokenIn_1,amountIn_1)
token_1(address) := ϕ(['token0_36', 'token0_38', 'token1_29', 'token0_41', 'token1_44', 'token1_33', 'token1_39', 'tokenIn_1', 'token0_29'])
[i]Type for token

Name: token Function: _toAmount
Num: 
Den: 
Address: -989
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['TMP_143', '_reserve1_1', 'amountIn_1', 'amountIn_1', 'TMP_156', '_reserve0_1', 'TMP_184', 'TMP_186'])
[i]Type for input

Name: input Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_191 = CONVERT this to address
[i]Type for TMP_191

Name: TMP_191 Function: _toAmount
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_192 = CONVERT TMP_191 to IBentoBoxMinimal
[i]Type for TMP_192

Name: TMP_192 Function: _toAmount
Num: 
Den: 
Address: 8
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
TMP_193(uint256) = HIGH_LEVEL_CALL, dest:TMP_192(IBentoBoxMinimal), function:toAmount, arguments:['token_1', 'input_1', 'False']  
[i]Type for TMP_193

Name: TMP_193 Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
output_1(uint256) := TMP_193(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
RETURN output_1
token_1(address) := ϕ(['token0_36', 'token0_38', 'token1_29', 'token0_41', 'token1_44', 'token1_33', 'token1_39', 'tokenIn_1', 'token0_29'])
[i]Type for token

Name: token Function: _toAmount
Num: 
Den: 
Address: -989
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['TMP_143', '_reserve1_1', 'amountIn_1', 'amountIn_1', 'TMP_156', '_reserve0_1', 'TMP_184', 'TMP_186'])
[i]Type for input

Name: input Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_191 = CONVERT this to address
[i]Type for TMP_191

Name: TMP_191 Function: _toAmount
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_192 = CONVERT TMP_191 to IBentoBoxMinimal
[i]Type for TMP_192

Name: TMP_192 Function: _toAmount
Num: 
Den: 
Address: 8
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
TMP_193(uint256) = HIGH_LEVEL_CALL, dest:TMP_192(IBentoBoxMinimal), function:toAmount, arguments:['token_1', 'input_1', 'False']  
[i]Type for TMP_193

Name: TMP_193 Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
output_1(uint256) := TMP_193(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
RETURN output_1
[i]Type for TMP_297

Name: TMP_297 Function: getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
amountIn_2(uint256) := TMP_297(uint256)
Finance type key: (-1, -1)
[i]Type for amountIn

Name: amountIn Function: getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
TMP_298(uint256) = amountIn_2 (c)* swapFee_11
[i]Type for TMP_298

Name: TMP_298 Function: getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
TMP_299(uint256) = TMP_298 (c)/ MAX_FEE_11
[i]Type for TMP_299

Name: TMP_299 Function: getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
amountIn_3(uint256) = amountIn_2 (c)- TMP_299
[i]Type for amountIn

Name: amountIn Function: getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
TMP_300(bool) = tokenIn_1 == token0_46
[i]Type for TMP_300

Name: TMP_300 Function: getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_302(uint256) = INTERNAL_CALL, HybridPool._getAmountOut(uint256,uint256,uint256,bool)(amountIn_3,_reserve0_1,_reserve1_1,False)
amountIn_1(uint256) := ϕ(['TMP_153', 'TMP_124', 'TMP_103', 'TMP_112', 'TMP_130', 'TMP_140', 'amountIn_3'])
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
_reserve0_1(uint256) := ϕ(['_reserve0_1', '_reserve0_1', '_reserve0_1', 'TMP_104', 'TMP_113'])
[i]Type for _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
_reserve1_1(uint256) := ϕ(['_reserve1_1', 'TMP_105', 'TMP_114', '_reserve1_1', '_reserve1_1'])
[i]Type for _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
token0PrecisionMultiplier_2(uint256) := ϕ(['token0PrecisionMultiplier_0', 'token0PrecisionMultiplier_1', 'token0PrecisionMultiplier_4'])
[i]Type for token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
token1PrecisionMultiplier_2(uint256) := ϕ(['token1PrecisionMultiplier_4', 'token1PrecisionMultiplier_1', 'token1PrecisionMultiplier_0'])
[i]Type for token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_196(uint256) = _reserve0_1 (c)* token0PrecisionMultiplier_2
[i]Type for TMP_196

Name: TMP_196 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
xpIn_1(uint256) := TMP_196(uint256)
Finance type key: (-1, -1)
[i]Type for xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_197(uint256) = _reserve1_1 (c)* token1PrecisionMultiplier_2
[i]Type for TMP_197

Name: TMP_197 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
xpOut_1(uint256) := TMP_197(uint256)
Finance type key: (-1, -1)
[i]Type for xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_198(uint256) = _reserve1_1 (c)* token1PrecisionMultiplier_2
[i]Type for TMP_198

Name: TMP_198 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
xpIn_2(uint256) := TMP_198(uint256)
Finance type key: (-1, -1)
[i]Type for xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
amountIn_2(uint256) = amountIn_1 (c)* token0PrecisionMultiplier_2
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: updated simple fee ratio
TMP_199(uint256) = _reserve0_1 (c)* token0PrecisionMultiplier_2
[i]Type for TMP_199

Name: TMP_199 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
xpOut_2(uint256) := TMP_199(uint256)
Finance type key: (-1, -1)
[i]Type for xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
amountIn_4(uint256) := ϕ(['amountIn_3', 'amountIn_2'])
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
xpIn_3(uint256) := ϕ(['xpIn_1', 'xpIn_2'])
[i]Type for xpIn

Name: xpIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
xpOut_3(uint256) := ϕ(['xpOut_1', 'xpOut_2'])
[i]Type for xpOut

Name: xpOut Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_200(uint256) = INTERNAL_CALL, HybridPool._computeLiquidityFromAdjustedBalances(uint256,uint256)(xpIn_3,xpOut_3)
xp0_1(uint256) := ϕ(['xpIn_3', 'xp0_1'])
[i]Type for xp0

Name: xp0 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
xp1_1(uint256) := ϕ(['xpOut_3', 'xp1_1'])
[i]Type for xp1

Name: xp1 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MAX_LOOP_LIMIT_1(uint256) := ϕ(['MAX_LOOP_LIMIT_0'])
[i]Type for MAX_LOOP_LIMIT

Name: MAX_LOOP_LIMIT Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
N_A_2(uint256) := ϕ(['N_A_0', 'N_A_1'])
[i]Type for N_A

Name: N_A Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
A_PRECISION_1(uint256) := ϕ(['A_PRECISION_0'])
[i]Type for A_PRECISION

Name: A_PRECISION Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_215(uint256) = xp0_1 (c)+ xp1_1
[i]Type for TMP_215

Name: TMP_215 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
s_1(uint256) := TMP_215(uint256)
Finance type key: (-1, -1)
[i]Type for s

Name: s Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_216(bool) = s_1 == 0
[i]Type for TMP_216

Name: TMP_216 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
computed_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for computed

Name: computed Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
D_1(uint256) := s_1(uint256)
Finance type key: (-1, -1)
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
D_2(uint256) := ϕ(['D_3', 'D_1'])
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
i_2(uint256) := ϕ(['i_3', 'i_1'])
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_217(bool) = i_2 < MAX_LOOP_LIMIT_1
[i]Type for TMP_217

Name: TMP_217 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_218(uint256) = D_2 (c)* D_2
Finance type key: (40, 40)
[i]Type for TMP_218

Name: TMP_218 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_219(uint256) = TMP_218 (c)/ xp0_1
[i]Type for TMP_219

Name: TMP_219 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_220(uint256) = TMP_219 (c)* D_2
[i]Type for TMP_220

Name: TMP_220 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
TMP_221(uint256) = TMP_220 (c)/ xp1_1
[i]Type for TMP_221

Name: TMP_221 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
TMP_222(uint256) = TMP_221 (c)/ 4
[i]Type for TMP_222

Name: TMP_222 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: price/exchange rate
dP_1(uint256) := TMP_222(uint256)
Finance type key: (40, -1)
[i]Type for dP

Name: dP Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: price/exchange rate
prevD_1(uint256) := D_2(uint256)
Finance type key: (40, -1)
[i]Type for prevD

Name: prevD Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
computed_2(uint256) := D_3(uint256)
Finance type key: (40, -1)
[i]Type for computed

Name: computed Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
TMP_223(uint256) = N_A_2 (c)* s_1
[i]Type for TMP_223

Name: TMP_223 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_224(uint256) = TMP_223 (c)/ A_PRECISION_1
[i]Type for TMP_224

Name: TMP_224 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_225(uint256) = 2 (c)* dP_1
[i]Type for TMP_225

Name: TMP_225 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: price/exchange rate
TMP_226(uint256) = TMP_224 (c)+ TMP_225
[i]Type for TMP_226

Name: TMP_226 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: price/exchange rate
TMP_227(uint256) = TMP_226 (c)* D_2
Finance type key: (40, 40)
[i]Type for TMP_227

Name: TMP_227 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_228(uint256) = N_A_2 (c)/ A_PRECISION_1
[i]Type for TMP_228

Name: TMP_228 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_229(uint256) = TMP_228 (c)- 1
[i]Type for TMP_229

Name: TMP_229 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
TMP_230(uint256) = TMP_229 (c)* D_2
[i]Type for TMP_230

Name: TMP_230 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: price/exchange rate
TMP_231(uint256) = 3 (c)* dP_1
[i]Type for TMP_231

Name: TMP_231 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 12
Fields: 
Finance Type: price/exchange rate
TMP_232(uint256) = TMP_230 (c)+ TMP_231
Finance type key: (40, 40)
[i]Type for TMP_232

Name: TMP_232 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 13
Fields: 
Finance Type: price/exchange rate
TMP_233(uint256) = TMP_227 (c)/ TMP_232
[i]Type for TMP_233

Name: TMP_233 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
D_3(uint256) := TMP_233(uint256)
Finance type key: (40, -1)
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
TMP_234(bool) = LIBRARY_CALL, dest:MathUtils, function:MathUtils.within1(uint256,uint256), arguments:['D_3', 'prevD_1'] 
[i]Type for TMP_234

Name: TMP_234 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_235(uint256) := i_2(uint256)
Finance type key: (-1, -1)
[i]Type for TMP_235

Name: TMP_235 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_3(uint256) = i_2 (c)+ 1
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
xp0_1(uint256) := ϕ(['xpIn_3', 'xp0_1'])
[i]Type for xp0

Name: xp0 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
xp1_1(uint256) := ϕ(['xpOut_3', 'xp1_1'])
[i]Type for xp1

Name: xp1 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MAX_LOOP_LIMIT_1(uint256) := ϕ(['MAX_LOOP_LIMIT_0'])
[i]Type for MAX_LOOP_LIMIT

Name: MAX_LOOP_LIMIT Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
N_A_2(uint256) := ϕ(['N_A_0', 'N_A_1'])
[i]Type for N_A

Name: N_A Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
A_PRECISION_1(uint256) := ϕ(['A_PRECISION_0'])
[i]Type for A_PRECISION

Name: A_PRECISION Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_215(uint256) = xp0_1 (c)+ xp1_1
[i]Type for TMP_215

Name: TMP_215 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
s_1(uint256) := TMP_215(uint256)
Finance type key: (-1, -1)
[i]Type for s

Name: s Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_216(bool) = s_1 == 0
[i]Type for TMP_216

Name: TMP_216 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
computed_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for computed

Name: computed Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
D_1(uint256) := s_1(uint256)
Finance type key: (-1, -1)
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
D_2(uint256) := ϕ(['D_3', 'D_1'])
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
i_2(uint256) := ϕ(['i_3', 'i_1'])
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_217(bool) = i_2 < MAX_LOOP_LIMIT_1
[i]Type for TMP_217

Name: TMP_217 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_218(uint256) = D_2 (c)* D_2
Finance type key: (40, 40)
[i]Type for TMP_218

Name: TMP_218 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_219(uint256) = TMP_218 (c)/ xp0_1
[i]Type for TMP_219

Name: TMP_219 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_220(uint256) = TMP_219 (c)* D_2
[i]Type for TMP_220

Name: TMP_220 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
TMP_221(uint256) = TMP_220 (c)/ xp1_1
[i]Type for TMP_221

Name: TMP_221 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
TMP_222(uint256) = TMP_221 (c)/ 4
[i]Type for TMP_222

Name: TMP_222 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: price/exchange rate
dP_1(uint256) := TMP_222(uint256)
Finance type key: (40, -1)
[i]Type for dP

Name: dP Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: price/exchange rate
prevD_1(uint256) := D_2(uint256)
Finance type key: (40, -1)
[i]Type for prevD

Name: prevD Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
computed_2(uint256) := D_3(uint256)
Finance type key: (40, -1)
[i]Type for computed

Name: computed Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
TMP_223(uint256) = N_A_2 (c)* s_1
[i]Type for TMP_223

Name: TMP_223 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_224(uint256) = TMP_223 (c)/ A_PRECISION_1
[i]Type for TMP_224

Name: TMP_224 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_225(uint256) = 2 (c)* dP_1
[i]Type for TMP_225

Name: TMP_225 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: price/exchange rate
TMP_226(uint256) = TMP_224 (c)+ TMP_225
[i]Type for TMP_226

Name: TMP_226 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: price/exchange rate
TMP_227(uint256) = TMP_226 (c)* D_2
Finance type key: (40, 40)
[i]Type for TMP_227

Name: TMP_227 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_228(uint256) = N_A_2 (c)/ A_PRECISION_1
[i]Type for TMP_228

Name: TMP_228 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_229(uint256) = TMP_228 (c)- 1
[i]Type for TMP_229

Name: TMP_229 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
TMP_230(uint256) = TMP_229 (c)* D_2
[i]Type for TMP_230

Name: TMP_230 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: price/exchange rate
TMP_231(uint256) = 3 (c)* dP_1
[i]Type for TMP_231

Name: TMP_231 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 12
Fields: 
Finance Type: price/exchange rate
TMP_232(uint256) = TMP_230 (c)+ TMP_231
Finance type key: (40, 40)
[i]Type for TMP_232

Name: TMP_232 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 13
Fields: 
Finance Type: price/exchange rate
TMP_233(uint256) = TMP_227 (c)/ TMP_232
[i]Type for TMP_233

Name: TMP_233 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
D_3(uint256) := TMP_233(uint256)
Finance type key: (40, -1)
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
TMP_234(bool) = LIBRARY_CALL, dest:MathUtils, function:MathUtils.within1(uint256,uint256), arguments:['D_3', 'prevD_1'] 
[i]Type for TMP_234

Name: TMP_234 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_235(uint256) := i_2(uint256)
Finance type key: (-1, -1)
[i]Type for TMP_235

Name: TMP_235 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_3(uint256) = i_2 (c)+ 1
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
[i]Type for TMP_200

Name: TMP_200 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
d_1(uint256) := TMP_200(uint256)
Finance type key: (-1, -1)
[i]Type for d

Name: d Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_201(uint256) = xpIn_3 (c)+ amountIn_4
[i]Type for TMP_201

Name: TMP_201 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
x_1(uint256) := TMP_201(uint256)
Finance type key: (12, -1)
[i]Type for x

Name: x Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
amountIn_3(uint256) = amountIn_1 (c)* token1PrecisionMultiplier_2
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: updated simple fee ratio
TMP_202(uint256) = INTERNAL_CALL, HybridPool._getY(uint256,uint256)(x_1,d_1)
x_1(uint256) := ϕ(['x_1'])
[i]Type for x

Name: x Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
D_1(uint256) := ϕ(['d_1'])
[i]Type for D

Name: D Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MAX_LOOP_LIMIT_2(uint256) := ϕ(['MAX_LOOP_LIMIT_0'])
[i]Type for MAX_LOOP_LIMIT

Name: MAX_LOOP_LIMIT Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
N_A_3(uint256) := ϕ(['N_A_0', 'N_A_1'])
[i]Type for N_A

Name: N_A Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
A_PRECISION_2(uint256) := ϕ(['A_PRECISION_0'])
[i]Type for A_PRECISION

Name: A_PRECISION Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_236(uint256) = D_1 (c)* D_1
[i]Type for TMP_236

Name: TMP_236 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_237(uint256) = x_1 (c)* 2
[i]Type for TMP_237

Name: TMP_237 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
TMP_238(uint256) = TMP_236 (c)/ TMP_237
[i]Type for TMP_238

Name: TMP_238 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
c_1(uint256) := TMP_238(uint256)
Finance type key: (12, -1)
[i]Type for c

Name: c Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
TMP_239(uint256) = c_1 (c)* D_1
[i]Type for TMP_239

Name: TMP_239 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
TMP_240(uint256) = N_A_3 (c)* 2
[i]Type for TMP_240

Name: TMP_240 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
TMP_241(uint256) = TMP_240 (c)/ A_PRECISION_2
[i]Type for TMP_241

Name: TMP_241 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
TMP_242(uint256) = TMP_239 (c)/ TMP_241
[i]Type for TMP_242

Name: TMP_242 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: updated simple fee ratio
c_2(uint256) := TMP_242(uint256)
Finance type key: (12, -1)
[i]Type for c

Name: c Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: updated simple fee ratio
TMP_243(uint256) = D_1 (c)* A_PRECISION_2
[i]Type for TMP_243

Name: TMP_243 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_244(uint256) = TMP_243 (c)/ N_A_3
[i]Type for TMP_244

Name: TMP_244 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_245(uint256) = x_1 (c)+ TMP_244
[i]Type for TMP_245

Name: TMP_245 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
b_1(uint256) := TMP_245(uint256)
Finance type key: (12, -1)
[i]Type for b

Name: b Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
y_1(uint256) := D_1(uint256)
Finance type key: (-1, -1)
[i]Type for y

Name: y Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for i

Name: i Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
y_2(uint256) := ϕ(['y_1', 'y_3'])
[i]Type for y

Name: y Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_2(uint256) := ϕ(['i_1', 'i_3'])
[i]Type for i

Name: i Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_246(bool) = i_2 < MAX_LOOP_LIMIT_2
[i]Type for TMP_246

Name: TMP_246 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
yPrev_1(uint256) := y_2(uint256)
Finance type key: (-1, -1)
[i]Type for yPrev

Name: yPrev Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_247(uint256) = y_2 (c)* y_2
[i]Type for TMP_247

Name: TMP_247 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_248(uint256) = TMP_247 (c)+ c_2
[i]Type for TMP_248

Name: TMP_248 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: updated simple fee ratio
TMP_249(uint256) = y_2 (c)* 2
[i]Type for TMP_249

Name: TMP_249 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_250(uint256) = TMP_249 (c)+ b_1
[i]Type for TMP_250

Name: TMP_250 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: updated simple fee ratio
TMP_251(uint256) = TMP_250 (c)- D_1
[i]Type for TMP_251

Name: TMP_251 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: updated simple fee ratio
TMP_252(uint256) = TMP_248 (c)/ TMP_251
Finance type key: (12, 12)
Finance type key: (12, 12)
[i]Type for TMP_252

Name: TMP_252 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
y_3(uint256) := TMP_252(uint256)
Finance type key: (-1, -1)
[i]Type for y

Name: y Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_253(bool) = LIBRARY_CALL, dest:MathUtils, function:MathUtils.within1(uint256,uint256), arguments:['y_3', 'yPrev_1'] 
[i]Type for TMP_253

Name: TMP_253 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_254(uint256) := i_2(uint256)
Finance type key: (-1, -1)
[i]Type for TMP_254

Name: TMP_254 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_3(uint256) = i_2 (c)+ 1
[i]Type for i

Name: i Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
x_1(uint256) := ϕ(['x_1'])
[i]Type for x

Name: x Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
D_1(uint256) := ϕ(['d_1'])
[i]Type for D

Name: D Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MAX_LOOP_LIMIT_2(uint256) := ϕ(['MAX_LOOP_LIMIT_0'])
[i]Type for MAX_LOOP_LIMIT

Name: MAX_LOOP_LIMIT Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
N_A_3(uint256) := ϕ(['N_A_0', 'N_A_1'])
[i]Type for N_A

Name: N_A Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
A_PRECISION_2(uint256) := ϕ(['A_PRECISION_0'])
[i]Type for A_PRECISION

Name: A_PRECISION Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_236(uint256) = D_1 (c)* D_1
[i]Type for TMP_236

Name: TMP_236 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_237(uint256) = x_1 (c)* 2
[i]Type for TMP_237

Name: TMP_237 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
TMP_238(uint256) = TMP_236 (c)/ TMP_237
[i]Type for TMP_238

Name: TMP_238 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
c_1(uint256) := TMP_238(uint256)
Finance type key: (12, -1)
[i]Type for c

Name: c Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
TMP_239(uint256) = c_1 (c)* D_1
[i]Type for TMP_239

Name: TMP_239 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
TMP_240(uint256) = N_A_3 (c)* 2
[i]Type for TMP_240

Name: TMP_240 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
TMP_241(uint256) = TMP_240 (c)/ A_PRECISION_2
[i]Type for TMP_241

Name: TMP_241 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
TMP_242(uint256) = TMP_239 (c)/ TMP_241
[i]Type for TMP_242

Name: TMP_242 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: updated simple fee ratio
c_2(uint256) := TMP_242(uint256)
Finance type key: (12, -1)
[i]Type for c

Name: c Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: updated simple fee ratio
TMP_243(uint256) = D_1 (c)* A_PRECISION_2
[i]Type for TMP_243

Name: TMP_243 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_244(uint256) = TMP_243 (c)/ N_A_3
[i]Type for TMP_244

Name: TMP_244 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_245(uint256) = x_1 (c)+ TMP_244
[i]Type for TMP_245

Name: TMP_245 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
b_1(uint256) := TMP_245(uint256)
Finance type key: (12, -1)
[i]Type for b

Name: b Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
y_1(uint256) := D_1(uint256)
Finance type key: (-1, -1)
[i]Type for y

Name: y Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for i

Name: i Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
y_2(uint256) := ϕ(['y_1', 'y_3'])
[i]Type for y

Name: y Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_2(uint256) := ϕ(['i_1', 'i_3'])
[i]Type for i

Name: i Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_246(bool) = i_2 < MAX_LOOP_LIMIT_2
[i]Type for TMP_246

Name: TMP_246 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
yPrev_1(uint256) := y_2(uint256)
Finance type key: (-1, -1)
[i]Type for yPrev

Name: yPrev Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_247(uint256) = y_2 (c)* y_2
[i]Type for TMP_247

Name: TMP_247 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_248(uint256) = TMP_247 (c)+ c_2
[i]Type for TMP_248

Name: TMP_248 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: updated simple fee ratio
TMP_249(uint256) = y_2 (c)* 2
[i]Type for TMP_249

Name: TMP_249 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_250(uint256) = TMP_249 (c)+ b_1
[i]Type for TMP_250

Name: TMP_250 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: updated simple fee ratio
TMP_251(uint256) = TMP_250 (c)- D_1
[i]Type for TMP_251

Name: TMP_251 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: updated simple fee ratio
TMP_252(uint256) = TMP_248 (c)/ TMP_251
Finance type key: (12, 12)
Finance type key: (12, 12)
[i]Type for TMP_252

Name: TMP_252 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
y_3(uint256) := TMP_252(uint256)
Finance type key: (-1, -1)
[i]Type for y

Name: y Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_253(bool) = LIBRARY_CALL, dest:MathUtils, function:MathUtils.within1(uint256,uint256), arguments:['y_3', 'yPrev_1'] 
[i]Type for TMP_253

Name: TMP_253 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_254(uint256) := i_2(uint256)
Finance type key: (-1, -1)
[i]Type for TMP_254

Name: TMP_254 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_3(uint256) = i_2 (c)+ 1
[i]Type for i

Name: i Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
[i]Type for TMP_202

Name: TMP_202 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
y_1(uint256) := TMP_202(uint256)
Finance type key: (-1, -1)
[i]Type for y

Name: y Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_203(uint256) = xpOut_3 (c)- y_1
[i]Type for TMP_203

Name: TMP_203 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_204(uint256) = TMP_203 (c)- 1
[i]Type for TMP_204

Name: TMP_204 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
dy_1(uint256) := TMP_204(uint256)
Finance type key: (-1, -1)
[i]Type for dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
dy_2(uint256) = dy_1 (c)/ token1PrecisionMultiplier_4
[i]Type for dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
dy_3(uint256) = dy_1 (c)/ token0PrecisionMultiplier_4
[i]Type for dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
amountIn_1(uint256) := ϕ(['TMP_153', 'TMP_124', 'TMP_103', 'TMP_112', 'TMP_130', 'TMP_140', 'amountIn_3'])
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
_reserve0_1(uint256) := ϕ(['_reserve0_1', '_reserve0_1', '_reserve0_1', 'TMP_104', 'TMP_113'])
[i]Type for _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
_reserve1_1(uint256) := ϕ(['_reserve1_1', 'TMP_105', 'TMP_114', '_reserve1_1', '_reserve1_1'])
[i]Type for _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
token0PrecisionMultiplier_2(uint256) := ϕ(['token0PrecisionMultiplier_0', 'token0PrecisionMultiplier_1', 'token0PrecisionMultiplier_4'])
[i]Type for token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
token1PrecisionMultiplier_2(uint256) := ϕ(['token1PrecisionMultiplier_4', 'token1PrecisionMultiplier_1', 'token1PrecisionMultiplier_0'])
[i]Type for token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_196(uint256) = _reserve0_1 (c)* token0PrecisionMultiplier_2
[i]Type for TMP_196

Name: TMP_196 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
xpIn_1(uint256) := TMP_196(uint256)
Finance type key: (-1, -1)
[i]Type for xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_197(uint256) = _reserve1_1 (c)* token1PrecisionMultiplier_2
[i]Type for TMP_197

Name: TMP_197 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
xpOut_1(uint256) := TMP_197(uint256)
Finance type key: (-1, -1)
[i]Type for xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_198(uint256) = _reserve1_1 (c)* token1PrecisionMultiplier_2
[i]Type for TMP_198

Name: TMP_198 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
xpIn_2(uint256) := TMP_198(uint256)
Finance type key: (-1, -1)
[i]Type for xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
amountIn_2(uint256) = amountIn_1 (c)* token0PrecisionMultiplier_2
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: updated simple fee ratio
TMP_199(uint256) = _reserve0_1 (c)* token0PrecisionMultiplier_2
[i]Type for TMP_199

Name: TMP_199 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
xpOut_2(uint256) := TMP_199(uint256)
Finance type key: (-1, -1)
[i]Type for xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
amountIn_4(uint256) := ϕ(['amountIn_3', 'amountIn_2'])
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
xpIn_3(uint256) := ϕ(['xpIn_1', 'xpIn_2'])
[i]Type for xpIn

Name: xpIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
xpOut_3(uint256) := ϕ(['xpOut_1', 'xpOut_2'])
[i]Type for xpOut

Name: xpOut Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_200(uint256) = INTERNAL_CALL, HybridPool._computeLiquidityFromAdjustedBalances(uint256,uint256)(xpIn_3,xpOut_3)
xp0_1(uint256) := ϕ(['xpIn_3', 'xp0_1'])
[i]Type for xp0

Name: xp0 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
xp1_1(uint256) := ϕ(['xpOut_3', 'xp1_1'])
[i]Type for xp1

Name: xp1 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MAX_LOOP_LIMIT_1(uint256) := ϕ(['MAX_LOOP_LIMIT_0'])
[i]Type for MAX_LOOP_LIMIT

Name: MAX_LOOP_LIMIT Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
N_A_2(uint256) := ϕ(['N_A_0', 'N_A_1'])
[i]Type for N_A

Name: N_A Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
A_PRECISION_1(uint256) := ϕ(['A_PRECISION_0'])
[i]Type for A_PRECISION

Name: A_PRECISION Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_215(uint256) = xp0_1 (c)+ xp1_1
[i]Type for TMP_215

Name: TMP_215 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
s_1(uint256) := TMP_215(uint256)
Finance type key: (-1, -1)
[i]Type for s

Name: s Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_216(bool) = s_1 == 0
[i]Type for TMP_216

Name: TMP_216 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
computed_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for computed

Name: computed Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
D_1(uint256) := s_1(uint256)
Finance type key: (-1, -1)
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
D_2(uint256) := ϕ(['D_3', 'D_1'])
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
i_2(uint256) := ϕ(['i_3', 'i_1'])
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_217(bool) = i_2 < MAX_LOOP_LIMIT_1
[i]Type for TMP_217

Name: TMP_217 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_218(uint256) = D_2 (c)* D_2
Finance type key: (40, 40)
[i]Type for TMP_218

Name: TMP_218 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_219(uint256) = TMP_218 (c)/ xp0_1
[i]Type for TMP_219

Name: TMP_219 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_220(uint256) = TMP_219 (c)* D_2
[i]Type for TMP_220

Name: TMP_220 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
TMP_221(uint256) = TMP_220 (c)/ xp1_1
[i]Type for TMP_221

Name: TMP_221 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
TMP_222(uint256) = TMP_221 (c)/ 4
[i]Type for TMP_222

Name: TMP_222 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: price/exchange rate
dP_1(uint256) := TMP_222(uint256)
Finance type key: (40, -1)
[i]Type for dP

Name: dP Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: price/exchange rate
prevD_1(uint256) := D_2(uint256)
Finance type key: (40, -1)
[i]Type for prevD

Name: prevD Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
computed_2(uint256) := D_3(uint256)
Finance type key: (40, -1)
[i]Type for computed

Name: computed Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
TMP_223(uint256) = N_A_2 (c)* s_1
[i]Type for TMP_223

Name: TMP_223 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_224(uint256) = TMP_223 (c)/ A_PRECISION_1
[i]Type for TMP_224

Name: TMP_224 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_225(uint256) = 2 (c)* dP_1
[i]Type for TMP_225

Name: TMP_225 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: price/exchange rate
TMP_226(uint256) = TMP_224 (c)+ TMP_225
[i]Type for TMP_226

Name: TMP_226 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: price/exchange rate
TMP_227(uint256) = TMP_226 (c)* D_2
Finance type key: (40, 40)
[i]Type for TMP_227

Name: TMP_227 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_228(uint256) = N_A_2 (c)/ A_PRECISION_1
[i]Type for TMP_228

Name: TMP_228 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_229(uint256) = TMP_228 (c)- 1
[i]Type for TMP_229

Name: TMP_229 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
TMP_230(uint256) = TMP_229 (c)* D_2
[i]Type for TMP_230

Name: TMP_230 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: price/exchange rate
TMP_231(uint256) = 3 (c)* dP_1
[i]Type for TMP_231

Name: TMP_231 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 12
Fields: 
Finance Type: price/exchange rate
TMP_232(uint256) = TMP_230 (c)+ TMP_231
Finance type key: (40, 40)
[i]Type for TMP_232

Name: TMP_232 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 13
Fields: 
Finance Type: price/exchange rate
TMP_233(uint256) = TMP_227 (c)/ TMP_232
[i]Type for TMP_233

Name: TMP_233 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
D_3(uint256) := TMP_233(uint256)
Finance type key: (40, -1)
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
TMP_234(bool) = LIBRARY_CALL, dest:MathUtils, function:MathUtils.within1(uint256,uint256), arguments:['D_3', 'prevD_1'] 
[i]Type for TMP_234

Name: TMP_234 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_235(uint256) := i_2(uint256)
Finance type key: (-1, -1)
[i]Type for TMP_235

Name: TMP_235 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_3(uint256) = i_2 (c)+ 1
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
xp0_1(uint256) := ϕ(['xpIn_3', 'xp0_1'])
[i]Type for xp0

Name: xp0 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
xp1_1(uint256) := ϕ(['xpOut_3', 'xp1_1'])
[i]Type for xp1

Name: xp1 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MAX_LOOP_LIMIT_1(uint256) := ϕ(['MAX_LOOP_LIMIT_0'])
[i]Type for MAX_LOOP_LIMIT

Name: MAX_LOOP_LIMIT Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
N_A_2(uint256) := ϕ(['N_A_0', 'N_A_1'])
[i]Type for N_A

Name: N_A Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
A_PRECISION_1(uint256) := ϕ(['A_PRECISION_0'])
[i]Type for A_PRECISION

Name: A_PRECISION Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_215(uint256) = xp0_1 (c)+ xp1_1
[i]Type for TMP_215

Name: TMP_215 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
s_1(uint256) := TMP_215(uint256)
Finance type key: (-1, -1)
[i]Type for s

Name: s Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_216(bool) = s_1 == 0
[i]Type for TMP_216

Name: TMP_216 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
computed_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for computed

Name: computed Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
D_1(uint256) := s_1(uint256)
Finance type key: (-1, -1)
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
D_2(uint256) := ϕ(['D_3', 'D_1'])
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
i_2(uint256) := ϕ(['i_3', 'i_1'])
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_217(bool) = i_2 < MAX_LOOP_LIMIT_1
[i]Type for TMP_217

Name: TMP_217 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_218(uint256) = D_2 (c)* D_2
Finance type key: (40, 40)
[i]Type for TMP_218

Name: TMP_218 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_219(uint256) = TMP_218 (c)/ xp0_1
[i]Type for TMP_219

Name: TMP_219 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_220(uint256) = TMP_219 (c)* D_2
[i]Type for TMP_220

Name: TMP_220 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
TMP_221(uint256) = TMP_220 (c)/ xp1_1
[i]Type for TMP_221

Name: TMP_221 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
TMP_222(uint256) = TMP_221 (c)/ 4
[i]Type for TMP_222

Name: TMP_222 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: price/exchange rate
dP_1(uint256) := TMP_222(uint256)
Finance type key: (40, -1)
[i]Type for dP

Name: dP Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: price/exchange rate
prevD_1(uint256) := D_2(uint256)
Finance type key: (40, -1)
[i]Type for prevD

Name: prevD Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
computed_2(uint256) := D_3(uint256)
Finance type key: (40, -1)
[i]Type for computed

Name: computed Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
TMP_223(uint256) = N_A_2 (c)* s_1
[i]Type for TMP_223

Name: TMP_223 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_224(uint256) = TMP_223 (c)/ A_PRECISION_1
[i]Type for TMP_224

Name: TMP_224 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_225(uint256) = 2 (c)* dP_1
[i]Type for TMP_225

Name: TMP_225 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: price/exchange rate
TMP_226(uint256) = TMP_224 (c)+ TMP_225
[i]Type for TMP_226

Name: TMP_226 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: price/exchange rate
TMP_227(uint256) = TMP_226 (c)* D_2
Finance type key: (40, 40)
[i]Type for TMP_227

Name: TMP_227 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_228(uint256) = N_A_2 (c)/ A_PRECISION_1
[i]Type for TMP_228

Name: TMP_228 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_229(uint256) = TMP_228 (c)- 1
[i]Type for TMP_229

Name: TMP_229 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
TMP_230(uint256) = TMP_229 (c)* D_2
[i]Type for TMP_230

Name: TMP_230 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: price/exchange rate
TMP_231(uint256) = 3 (c)* dP_1
[i]Type for TMP_231

Name: TMP_231 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 12
Fields: 
Finance Type: price/exchange rate
TMP_232(uint256) = TMP_230 (c)+ TMP_231
Finance type key: (40, 40)
[i]Type for TMP_232

Name: TMP_232 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 13
Fields: 
Finance Type: price/exchange rate
TMP_233(uint256) = TMP_227 (c)/ TMP_232
[i]Type for TMP_233

Name: TMP_233 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
D_3(uint256) := TMP_233(uint256)
Finance type key: (40, -1)
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
TMP_234(bool) = LIBRARY_CALL, dest:MathUtils, function:MathUtils.within1(uint256,uint256), arguments:['D_3', 'prevD_1'] 
[i]Type for TMP_234

Name: TMP_234 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_235(uint256) := i_2(uint256)
Finance type key: (-1, -1)
[i]Type for TMP_235

Name: TMP_235 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_3(uint256) = i_2 (c)+ 1
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
[i]Type for TMP_200

Name: TMP_200 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
d_1(uint256) := TMP_200(uint256)
Finance type key: (-1, -1)
[i]Type for d

Name: d Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_201(uint256) = xpIn_3 (c)+ amountIn_4
[i]Type for TMP_201

Name: TMP_201 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
x_1(uint256) := TMP_201(uint256)
Finance type key: (12, -1)
[i]Type for x

Name: x Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
amountIn_3(uint256) = amountIn_1 (c)* token1PrecisionMultiplier_2
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: updated simple fee ratio
TMP_202(uint256) = INTERNAL_CALL, HybridPool._getY(uint256,uint256)(x_1,d_1)
x_1(uint256) := ϕ(['x_1'])
[i]Type for x

Name: x Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
D_1(uint256) := ϕ(['d_1'])
[i]Type for D

Name: D Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MAX_LOOP_LIMIT_2(uint256) := ϕ(['MAX_LOOP_LIMIT_0'])
[i]Type for MAX_LOOP_LIMIT

Name: MAX_LOOP_LIMIT Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
N_A_3(uint256) := ϕ(['N_A_0', 'N_A_1'])
[i]Type for N_A

Name: N_A Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
A_PRECISION_2(uint256) := ϕ(['A_PRECISION_0'])
[i]Type for A_PRECISION

Name: A_PRECISION Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_236(uint256) = D_1 (c)* D_1
[i]Type for TMP_236

Name: TMP_236 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_237(uint256) = x_1 (c)* 2
[i]Type for TMP_237

Name: TMP_237 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
TMP_238(uint256) = TMP_236 (c)/ TMP_237
[i]Type for TMP_238

Name: TMP_238 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
c_1(uint256) := TMP_238(uint256)
Finance type key: (12, -1)
[i]Type for c

Name: c Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
TMP_239(uint256) = c_1 (c)* D_1
[i]Type for TMP_239

Name: TMP_239 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
TMP_240(uint256) = N_A_3 (c)* 2
[i]Type for TMP_240

Name: TMP_240 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
TMP_241(uint256) = TMP_240 (c)/ A_PRECISION_2
[i]Type for TMP_241

Name: TMP_241 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
TMP_242(uint256) = TMP_239 (c)/ TMP_241
[i]Type for TMP_242

Name: TMP_242 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: updated simple fee ratio
c_2(uint256) := TMP_242(uint256)
Finance type key: (12, -1)
[i]Type for c

Name: c Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: updated simple fee ratio
TMP_243(uint256) = D_1 (c)* A_PRECISION_2
[i]Type for TMP_243

Name: TMP_243 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_244(uint256) = TMP_243 (c)/ N_A_3
[i]Type for TMP_244

Name: TMP_244 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_245(uint256) = x_1 (c)+ TMP_244
[i]Type for TMP_245

Name: TMP_245 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
b_1(uint256) := TMP_245(uint256)
Finance type key: (12, -1)
[i]Type for b

Name: b Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
y_1(uint256) := D_1(uint256)
Finance type key: (-1, -1)
[i]Type for y

Name: y Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for i

Name: i Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
y_2(uint256) := ϕ(['y_1', 'y_3'])
[i]Type for y

Name: y Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_2(uint256) := ϕ(['i_1', 'i_3'])
[i]Type for i

Name: i Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_246(bool) = i_2 < MAX_LOOP_LIMIT_2
[i]Type for TMP_246

Name: TMP_246 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
yPrev_1(uint256) := y_2(uint256)
Finance type key: (-1, -1)
[i]Type for yPrev

Name: yPrev Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_247(uint256) = y_2 (c)* y_2
[i]Type for TMP_247

Name: TMP_247 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_248(uint256) = TMP_247 (c)+ c_2
[i]Type for TMP_248

Name: TMP_248 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: updated simple fee ratio
TMP_249(uint256) = y_2 (c)* 2
[i]Type for TMP_249

Name: TMP_249 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_250(uint256) = TMP_249 (c)+ b_1
[i]Type for TMP_250

Name: TMP_250 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: updated simple fee ratio
TMP_251(uint256) = TMP_250 (c)- D_1
[i]Type for TMP_251

Name: TMP_251 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: updated simple fee ratio
TMP_252(uint256) = TMP_248 (c)/ TMP_251
Finance type key: (12, 12)
Finance type key: (12, 12)
[i]Type for TMP_252

Name: TMP_252 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
y_3(uint256) := TMP_252(uint256)
Finance type key: (-1, -1)
[i]Type for y

Name: y Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_253(bool) = LIBRARY_CALL, dest:MathUtils, function:MathUtils.within1(uint256,uint256), arguments:['y_3', 'yPrev_1'] 
[i]Type for TMP_253

Name: TMP_253 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_254(uint256) := i_2(uint256)
Finance type key: (-1, -1)
[i]Type for TMP_254

Name: TMP_254 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_3(uint256) = i_2 (c)+ 1
[i]Type for i

Name: i Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
x_1(uint256) := ϕ(['x_1'])
[i]Type for x

Name: x Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
D_1(uint256) := ϕ(['d_1'])
[i]Type for D

Name: D Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MAX_LOOP_LIMIT_2(uint256) := ϕ(['MAX_LOOP_LIMIT_0'])
[i]Type for MAX_LOOP_LIMIT

Name: MAX_LOOP_LIMIT Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
N_A_3(uint256) := ϕ(['N_A_0', 'N_A_1'])
[i]Type for N_A

Name: N_A Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
A_PRECISION_2(uint256) := ϕ(['A_PRECISION_0'])
[i]Type for A_PRECISION

Name: A_PRECISION Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_236(uint256) = D_1 (c)* D_1
[i]Type for TMP_236

Name: TMP_236 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_237(uint256) = x_1 (c)* 2
[i]Type for TMP_237

Name: TMP_237 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
TMP_238(uint256) = TMP_236 (c)/ TMP_237
[i]Type for TMP_238

Name: TMP_238 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
c_1(uint256) := TMP_238(uint256)
Finance type key: (12, -1)
[i]Type for c

Name: c Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
TMP_239(uint256) = c_1 (c)* D_1
[i]Type for TMP_239

Name: TMP_239 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
TMP_240(uint256) = N_A_3 (c)* 2
[i]Type for TMP_240

Name: TMP_240 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
TMP_241(uint256) = TMP_240 (c)/ A_PRECISION_2
[i]Type for TMP_241

Name: TMP_241 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
TMP_242(uint256) = TMP_239 (c)/ TMP_241
[i]Type for TMP_242

Name: TMP_242 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: updated simple fee ratio
c_2(uint256) := TMP_242(uint256)
Finance type key: (12, -1)
[i]Type for c

Name: c Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: updated simple fee ratio
TMP_243(uint256) = D_1 (c)* A_PRECISION_2
[i]Type for TMP_243

Name: TMP_243 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_244(uint256) = TMP_243 (c)/ N_A_3
[i]Type for TMP_244

Name: TMP_244 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_245(uint256) = x_1 (c)+ TMP_244
[i]Type for TMP_245

Name: TMP_245 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
b_1(uint256) := TMP_245(uint256)
Finance type key: (12, -1)
[i]Type for b

Name: b Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
y_1(uint256) := D_1(uint256)
Finance type key: (-1, -1)
[i]Type for y

Name: y Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for i

Name: i Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
y_2(uint256) := ϕ(['y_1', 'y_3'])
[i]Type for y

Name: y Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_2(uint256) := ϕ(['i_1', 'i_3'])
[i]Type for i

Name: i Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_246(bool) = i_2 < MAX_LOOP_LIMIT_2
[i]Type for TMP_246

Name: TMP_246 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
yPrev_1(uint256) := y_2(uint256)
Finance type key: (-1, -1)
[i]Type for yPrev

Name: yPrev Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_247(uint256) = y_2 (c)* y_2
[i]Type for TMP_247

Name: TMP_247 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_248(uint256) = TMP_247 (c)+ c_2
[i]Type for TMP_248

Name: TMP_248 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: updated simple fee ratio
TMP_249(uint256) = y_2 (c)* 2
[i]Type for TMP_249

Name: TMP_249 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_250(uint256) = TMP_249 (c)+ b_1
[i]Type for TMP_250

Name: TMP_250 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: updated simple fee ratio
TMP_251(uint256) = TMP_250 (c)- D_1
[i]Type for TMP_251

Name: TMP_251 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: updated simple fee ratio
TMP_252(uint256) = TMP_248 (c)/ TMP_251
Finance type key: (12, 12)
Finance type key: (12, 12)
[i]Type for TMP_252

Name: TMP_252 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
y_3(uint256) := TMP_252(uint256)
Finance type key: (-1, -1)
[i]Type for y

Name: y Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_253(bool) = LIBRARY_CALL, dest:MathUtils, function:MathUtils.within1(uint256,uint256), arguments:['y_3', 'yPrev_1'] 
[i]Type for TMP_253

Name: TMP_253 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_254(uint256) := i_2(uint256)
Finance type key: (-1, -1)
[i]Type for TMP_254

Name: TMP_254 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_3(uint256) = i_2 (c)+ 1
[i]Type for i

Name: i Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
[i]Type for TMP_202

Name: TMP_202 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
y_1(uint256) := TMP_202(uint256)
Finance type key: (-1, -1)
[i]Type for y

Name: y Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_203(uint256) = xpOut_3 (c)- y_1
[i]Type for TMP_203

Name: TMP_203 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_204(uint256) = TMP_203 (c)- 1
[i]Type for TMP_204

Name: TMP_204 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
dy_1(uint256) := TMP_204(uint256)
Finance type key: (-1, -1)
[i]Type for dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
dy_2(uint256) = dy_1 (c)/ token1PrecisionMultiplier_4
[i]Type for dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
dy_3(uint256) = dy_1 (c)/ token0PrecisionMultiplier_4
[i]Type for dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
[i]Type for TMP_302

Name: TMP_302 Function: getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
finalAmountOut_1(uint256) := TMP_302(uint256)
Finance type key: (-1, -1)
[i]Type for finalAmountOut

Name: finalAmountOut Function: getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_301(uint256) = INTERNAL_CALL, HybridPool._getAmountOut(uint256,uint256,uint256,bool)(amountIn_3,_reserve0_1,_reserve1_1,True)
amountIn_1(uint256) := ϕ(['TMP_153', 'TMP_124', 'TMP_103', 'TMP_112', 'TMP_130', 'TMP_140', 'amountIn_3'])
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
_reserve0_1(uint256) := ϕ(['_reserve0_1', '_reserve0_1', '_reserve0_1', 'TMP_104', 'TMP_113'])
[i]Type for _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
_reserve1_1(uint256) := ϕ(['_reserve1_1', 'TMP_105', 'TMP_114', '_reserve1_1', '_reserve1_1'])
[i]Type for _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
token0PrecisionMultiplier_2(uint256) := ϕ(['token0PrecisionMultiplier_0', 'token0PrecisionMultiplier_1', 'token0PrecisionMultiplier_4'])
[i]Type for token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
token1PrecisionMultiplier_2(uint256) := ϕ(['token1PrecisionMultiplier_4', 'token1PrecisionMultiplier_1', 'token1PrecisionMultiplier_0'])
[i]Type for token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_196(uint256) = _reserve0_1 (c)* token0PrecisionMultiplier_2
[i]Type for TMP_196

Name: TMP_196 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
xpIn_1(uint256) := TMP_196(uint256)
Finance type key: (-1, -1)
[i]Type for xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_197(uint256) = _reserve1_1 (c)* token1PrecisionMultiplier_2
[i]Type for TMP_197

Name: TMP_197 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
xpOut_1(uint256) := TMP_197(uint256)
Finance type key: (-1, -1)
[i]Type for xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_198(uint256) = _reserve1_1 (c)* token1PrecisionMultiplier_2
[i]Type for TMP_198

Name: TMP_198 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
xpIn_2(uint256) := TMP_198(uint256)
Finance type key: (-1, -1)
[i]Type for xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
amountIn_2(uint256) = amountIn_1 (c)* token0PrecisionMultiplier_2
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: updated simple fee ratio
TMP_199(uint256) = _reserve0_1 (c)* token0PrecisionMultiplier_2
[i]Type for TMP_199

Name: TMP_199 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
xpOut_2(uint256) := TMP_199(uint256)
Finance type key: (-1, -1)
[i]Type for xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
amountIn_4(uint256) := ϕ(['amountIn_3', 'amountIn_2'])
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
xpIn_3(uint256) := ϕ(['xpIn_1', 'xpIn_2'])
[i]Type for xpIn

Name: xpIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
xpOut_3(uint256) := ϕ(['xpOut_1', 'xpOut_2'])
[i]Type for xpOut

Name: xpOut Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_200(uint256) = INTERNAL_CALL, HybridPool._computeLiquidityFromAdjustedBalances(uint256,uint256)(xpIn_3,xpOut_3)
xp0_1(uint256) := ϕ(['xpIn_3', 'xp0_1'])
[i]Type for xp0

Name: xp0 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
xp1_1(uint256) := ϕ(['xpOut_3', 'xp1_1'])
[i]Type for xp1

Name: xp1 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MAX_LOOP_LIMIT_1(uint256) := ϕ(['MAX_LOOP_LIMIT_0'])
[i]Type for MAX_LOOP_LIMIT

Name: MAX_LOOP_LIMIT Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
N_A_2(uint256) := ϕ(['N_A_0', 'N_A_1'])
[i]Type for N_A

Name: N_A Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
A_PRECISION_1(uint256) := ϕ(['A_PRECISION_0'])
[i]Type for A_PRECISION

Name: A_PRECISION Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_215(uint256) = xp0_1 (c)+ xp1_1
[i]Type for TMP_215

Name: TMP_215 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
s_1(uint256) := TMP_215(uint256)
Finance type key: (-1, -1)
[i]Type for s

Name: s Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_216(bool) = s_1 == 0
[i]Type for TMP_216

Name: TMP_216 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
computed_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for computed

Name: computed Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
D_1(uint256) := s_1(uint256)
Finance type key: (-1, -1)
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
D_2(uint256) := ϕ(['D_3', 'D_1'])
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
i_2(uint256) := ϕ(['i_3', 'i_1'])
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_217(bool) = i_2 < MAX_LOOP_LIMIT_1
[i]Type for TMP_217

Name: TMP_217 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_218(uint256) = D_2 (c)* D_2
Finance type key: (40, 40)
[i]Type for TMP_218

Name: TMP_218 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_219(uint256) = TMP_218 (c)/ xp0_1
[i]Type for TMP_219

Name: TMP_219 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_220(uint256) = TMP_219 (c)* D_2
[i]Type for TMP_220

Name: TMP_220 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
TMP_221(uint256) = TMP_220 (c)/ xp1_1
[i]Type for TMP_221

Name: TMP_221 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
TMP_222(uint256) = TMP_221 (c)/ 4
[i]Type for TMP_222

Name: TMP_222 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: price/exchange rate
dP_1(uint256) := TMP_222(uint256)
Finance type key: (40, -1)
[i]Type for dP

Name: dP Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: price/exchange rate
prevD_1(uint256) := D_2(uint256)
Finance type key: (40, -1)
[i]Type for prevD

Name: prevD Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
computed_2(uint256) := D_3(uint256)
Finance type key: (40, -1)
[i]Type for computed

Name: computed Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
TMP_223(uint256) = N_A_2 (c)* s_1
[i]Type for TMP_223

Name: TMP_223 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_224(uint256) = TMP_223 (c)/ A_PRECISION_1
[i]Type for TMP_224

Name: TMP_224 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_225(uint256) = 2 (c)* dP_1
[i]Type for TMP_225

Name: TMP_225 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: price/exchange rate
TMP_226(uint256) = TMP_224 (c)+ TMP_225
[i]Type for TMP_226

Name: TMP_226 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: price/exchange rate
TMP_227(uint256) = TMP_226 (c)* D_2
Finance type key: (40, 40)
[i]Type for TMP_227

Name: TMP_227 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_228(uint256) = N_A_2 (c)/ A_PRECISION_1
[i]Type for TMP_228

Name: TMP_228 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_229(uint256) = TMP_228 (c)- 1
[i]Type for TMP_229

Name: TMP_229 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
TMP_230(uint256) = TMP_229 (c)* D_2
[i]Type for TMP_230

Name: TMP_230 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: price/exchange rate
TMP_231(uint256) = 3 (c)* dP_1
[i]Type for TMP_231

Name: TMP_231 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 12
Fields: 
Finance Type: price/exchange rate
TMP_232(uint256) = TMP_230 (c)+ TMP_231
Finance type key: (40, 40)
[i]Type for TMP_232

Name: TMP_232 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 13
Fields: 
Finance Type: price/exchange rate
TMP_233(uint256) = TMP_227 (c)/ TMP_232
[i]Type for TMP_233

Name: TMP_233 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
D_3(uint256) := TMP_233(uint256)
Finance type key: (40, -1)
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
TMP_234(bool) = LIBRARY_CALL, dest:MathUtils, function:MathUtils.within1(uint256,uint256), arguments:['D_3', 'prevD_1'] 
[i]Type for TMP_234

Name: TMP_234 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_235(uint256) := i_2(uint256)
Finance type key: (-1, -1)
[i]Type for TMP_235

Name: TMP_235 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_3(uint256) = i_2 (c)+ 1
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
xp0_1(uint256) := ϕ(['xpIn_3', 'xp0_1'])
[i]Type for xp0

Name: xp0 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
xp1_1(uint256) := ϕ(['xpOut_3', 'xp1_1'])
[i]Type for xp1

Name: xp1 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MAX_LOOP_LIMIT_1(uint256) := ϕ(['MAX_LOOP_LIMIT_0'])
[i]Type for MAX_LOOP_LIMIT

Name: MAX_LOOP_LIMIT Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
N_A_2(uint256) := ϕ(['N_A_0', 'N_A_1'])
[i]Type for N_A

Name: N_A Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
A_PRECISION_1(uint256) := ϕ(['A_PRECISION_0'])
[i]Type for A_PRECISION

Name: A_PRECISION Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_215(uint256) = xp0_1 (c)+ xp1_1
[i]Type for TMP_215

Name: TMP_215 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
s_1(uint256) := TMP_215(uint256)
Finance type key: (-1, -1)
[i]Type for s

Name: s Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_216(bool) = s_1 == 0
[i]Type for TMP_216

Name: TMP_216 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
computed_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for computed

Name: computed Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
D_1(uint256) := s_1(uint256)
Finance type key: (-1, -1)
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
D_2(uint256) := ϕ(['D_3', 'D_1'])
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
i_2(uint256) := ϕ(['i_3', 'i_1'])
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_217(bool) = i_2 < MAX_LOOP_LIMIT_1
[i]Type for TMP_217

Name: TMP_217 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_218(uint256) = D_2 (c)* D_2
Finance type key: (40, 40)
[i]Type for TMP_218

Name: TMP_218 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_219(uint256) = TMP_218 (c)/ xp0_1
[i]Type for TMP_219

Name: TMP_219 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_220(uint256) = TMP_219 (c)* D_2
[i]Type for TMP_220

Name: TMP_220 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
TMP_221(uint256) = TMP_220 (c)/ xp1_1
[i]Type for TMP_221

Name: TMP_221 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
TMP_222(uint256) = TMP_221 (c)/ 4
[i]Type for TMP_222

Name: TMP_222 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: price/exchange rate
dP_1(uint256) := TMP_222(uint256)
Finance type key: (40, -1)
[i]Type for dP

Name: dP Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: price/exchange rate
prevD_1(uint256) := D_2(uint256)
Finance type key: (40, -1)
[i]Type for prevD

Name: prevD Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
computed_2(uint256) := D_3(uint256)
Finance type key: (40, -1)
[i]Type for computed

Name: computed Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
TMP_223(uint256) = N_A_2 (c)* s_1
[i]Type for TMP_223

Name: TMP_223 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_224(uint256) = TMP_223 (c)/ A_PRECISION_1
[i]Type for TMP_224

Name: TMP_224 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_225(uint256) = 2 (c)* dP_1
[i]Type for TMP_225

Name: TMP_225 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: price/exchange rate
TMP_226(uint256) = TMP_224 (c)+ TMP_225
[i]Type for TMP_226

Name: TMP_226 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: price/exchange rate
TMP_227(uint256) = TMP_226 (c)* D_2
Finance type key: (40, 40)
[i]Type for TMP_227

Name: TMP_227 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_228(uint256) = N_A_2 (c)/ A_PRECISION_1
[i]Type for TMP_228

Name: TMP_228 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_229(uint256) = TMP_228 (c)- 1
[i]Type for TMP_229

Name: TMP_229 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
TMP_230(uint256) = TMP_229 (c)* D_2
[i]Type for TMP_230

Name: TMP_230 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: price/exchange rate
TMP_231(uint256) = 3 (c)* dP_1
[i]Type for TMP_231

Name: TMP_231 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 12
Fields: 
Finance Type: price/exchange rate
TMP_232(uint256) = TMP_230 (c)+ TMP_231
Finance type key: (40, 40)
[i]Type for TMP_232

Name: TMP_232 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 13
Fields: 
Finance Type: price/exchange rate
TMP_233(uint256) = TMP_227 (c)/ TMP_232
[i]Type for TMP_233

Name: TMP_233 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
D_3(uint256) := TMP_233(uint256)
Finance type key: (40, -1)
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
TMP_234(bool) = LIBRARY_CALL, dest:MathUtils, function:MathUtils.within1(uint256,uint256), arguments:['D_3', 'prevD_1'] 
[i]Type for TMP_234

Name: TMP_234 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_235(uint256) := i_2(uint256)
Finance type key: (-1, -1)
[i]Type for TMP_235

Name: TMP_235 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_3(uint256) = i_2 (c)+ 1
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
[i]Type for TMP_200

Name: TMP_200 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
d_1(uint256) := TMP_200(uint256)
Finance type key: (-1, -1)
[i]Type for d

Name: d Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_201(uint256) = xpIn_3 (c)+ amountIn_4
[i]Type for TMP_201

Name: TMP_201 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
x_1(uint256) := TMP_201(uint256)
Finance type key: (12, -1)
[i]Type for x

Name: x Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
amountIn_3(uint256) = amountIn_1 (c)* token1PrecisionMultiplier_2
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: updated simple fee ratio
TMP_202(uint256) = INTERNAL_CALL, HybridPool._getY(uint256,uint256)(x_1,d_1)
x_1(uint256) := ϕ(['x_1'])
[i]Type for x

Name: x Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
D_1(uint256) := ϕ(['d_1'])
[i]Type for D

Name: D Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MAX_LOOP_LIMIT_2(uint256) := ϕ(['MAX_LOOP_LIMIT_0'])
[i]Type for MAX_LOOP_LIMIT

Name: MAX_LOOP_LIMIT Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
N_A_3(uint256) := ϕ(['N_A_0', 'N_A_1'])
[i]Type for N_A

Name: N_A Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
A_PRECISION_2(uint256) := ϕ(['A_PRECISION_0'])
[i]Type for A_PRECISION

Name: A_PRECISION Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_236(uint256) = D_1 (c)* D_1
[i]Type for TMP_236

Name: TMP_236 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_237(uint256) = x_1 (c)* 2
[i]Type for TMP_237

Name: TMP_237 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
TMP_238(uint256) = TMP_236 (c)/ TMP_237
[i]Type for TMP_238

Name: TMP_238 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
c_1(uint256) := TMP_238(uint256)
Finance type key: (12, -1)
[i]Type for c

Name: c Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
TMP_239(uint256) = c_1 (c)* D_1
[i]Type for TMP_239

Name: TMP_239 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
TMP_240(uint256) = N_A_3 (c)* 2
[i]Type for TMP_240

Name: TMP_240 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
TMP_241(uint256) = TMP_240 (c)/ A_PRECISION_2
[i]Type for TMP_241

Name: TMP_241 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
TMP_242(uint256) = TMP_239 (c)/ TMP_241
[i]Type for TMP_242

Name: TMP_242 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: updated simple fee ratio
c_2(uint256) := TMP_242(uint256)
Finance type key: (12, -1)
[i]Type for c

Name: c Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: updated simple fee ratio
TMP_243(uint256) = D_1 (c)* A_PRECISION_2
[i]Type for TMP_243

Name: TMP_243 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_244(uint256) = TMP_243 (c)/ N_A_3
[i]Type for TMP_244

Name: TMP_244 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_245(uint256) = x_1 (c)+ TMP_244
[i]Type for TMP_245

Name: TMP_245 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
b_1(uint256) := TMP_245(uint256)
Finance type key: (12, -1)
[i]Type for b

Name: b Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
y_1(uint256) := D_1(uint256)
Finance type key: (-1, -1)
[i]Type for y

Name: y Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for i

Name: i Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
y_2(uint256) := ϕ(['y_1', 'y_3'])
[i]Type for y

Name: y Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_2(uint256) := ϕ(['i_1', 'i_3'])
[i]Type for i

Name: i Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_246(bool) = i_2 < MAX_LOOP_LIMIT_2
[i]Type for TMP_246

Name: TMP_246 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
yPrev_1(uint256) := y_2(uint256)
Finance type key: (-1, -1)
[i]Type for yPrev

Name: yPrev Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_247(uint256) = y_2 (c)* y_2
[i]Type for TMP_247

Name: TMP_247 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_248(uint256) = TMP_247 (c)+ c_2
[i]Type for TMP_248

Name: TMP_248 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: updated simple fee ratio
TMP_249(uint256) = y_2 (c)* 2
[i]Type for TMP_249

Name: TMP_249 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_250(uint256) = TMP_249 (c)+ b_1
[i]Type for TMP_250

Name: TMP_250 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: updated simple fee ratio
TMP_251(uint256) = TMP_250 (c)- D_1
[i]Type for TMP_251

Name: TMP_251 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: updated simple fee ratio
TMP_252(uint256) = TMP_248 (c)/ TMP_251
Finance type key: (12, 12)
Finance type key: (12, 12)
[i]Type for TMP_252

Name: TMP_252 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
y_3(uint256) := TMP_252(uint256)
Finance type key: (-1, -1)
[i]Type for y

Name: y Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_253(bool) = LIBRARY_CALL, dest:MathUtils, function:MathUtils.within1(uint256,uint256), arguments:['y_3', 'yPrev_1'] 
[i]Type for TMP_253

Name: TMP_253 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_254(uint256) := i_2(uint256)
Finance type key: (-1, -1)
[i]Type for TMP_254

Name: TMP_254 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_3(uint256) = i_2 (c)+ 1
[i]Type for i

Name: i Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
x_1(uint256) := ϕ(['x_1'])
[i]Type for x

Name: x Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
D_1(uint256) := ϕ(['d_1'])
[i]Type for D

Name: D Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MAX_LOOP_LIMIT_2(uint256) := ϕ(['MAX_LOOP_LIMIT_0'])
[i]Type for MAX_LOOP_LIMIT

Name: MAX_LOOP_LIMIT Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
N_A_3(uint256) := ϕ(['N_A_0', 'N_A_1'])
[i]Type for N_A

Name: N_A Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
A_PRECISION_2(uint256) := ϕ(['A_PRECISION_0'])
[i]Type for A_PRECISION

Name: A_PRECISION Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_236(uint256) = D_1 (c)* D_1
[i]Type for TMP_236

Name: TMP_236 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_237(uint256) = x_1 (c)* 2
[i]Type for TMP_237

Name: TMP_237 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
TMP_238(uint256) = TMP_236 (c)/ TMP_237
[i]Type for TMP_238

Name: TMP_238 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
c_1(uint256) := TMP_238(uint256)
Finance type key: (12, -1)
[i]Type for c

Name: c Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
TMP_239(uint256) = c_1 (c)* D_1
[i]Type for TMP_239

Name: TMP_239 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
TMP_240(uint256) = N_A_3 (c)* 2
[i]Type for TMP_240

Name: TMP_240 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
TMP_241(uint256) = TMP_240 (c)/ A_PRECISION_2
[i]Type for TMP_241

Name: TMP_241 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
TMP_242(uint256) = TMP_239 (c)/ TMP_241
[i]Type for TMP_242

Name: TMP_242 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: updated simple fee ratio
c_2(uint256) := TMP_242(uint256)
Finance type key: (12, -1)
[i]Type for c

Name: c Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: updated simple fee ratio
TMP_243(uint256) = D_1 (c)* A_PRECISION_2
[i]Type for TMP_243

Name: TMP_243 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_244(uint256) = TMP_243 (c)/ N_A_3
[i]Type for TMP_244

Name: TMP_244 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_245(uint256) = x_1 (c)+ TMP_244
[i]Type for TMP_245

Name: TMP_245 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
b_1(uint256) := TMP_245(uint256)
Finance type key: (12, -1)
[i]Type for b

Name: b Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
y_1(uint256) := D_1(uint256)
Finance type key: (-1, -1)
[i]Type for y

Name: y Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for i

Name: i Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
y_2(uint256) := ϕ(['y_1', 'y_3'])
[i]Type for y

Name: y Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_2(uint256) := ϕ(['i_1', 'i_3'])
[i]Type for i

Name: i Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_246(bool) = i_2 < MAX_LOOP_LIMIT_2
[i]Type for TMP_246

Name: TMP_246 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
yPrev_1(uint256) := y_2(uint256)
Finance type key: (-1, -1)
[i]Type for yPrev

Name: yPrev Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_247(uint256) = y_2 (c)* y_2
[i]Type for TMP_247

Name: TMP_247 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_248(uint256) = TMP_247 (c)+ c_2
[i]Type for TMP_248

Name: TMP_248 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: updated simple fee ratio
TMP_249(uint256) = y_2 (c)* 2
[i]Type for TMP_249

Name: TMP_249 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_250(uint256) = TMP_249 (c)+ b_1
[i]Type for TMP_250

Name: TMP_250 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: updated simple fee ratio
TMP_251(uint256) = TMP_250 (c)- D_1
[i]Type for TMP_251

Name: TMP_251 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: updated simple fee ratio
TMP_252(uint256) = TMP_248 (c)/ TMP_251
Finance type key: (12, 12)
Finance type key: (12, 12)
[i]Type for TMP_252

Name: TMP_252 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
y_3(uint256) := TMP_252(uint256)
Finance type key: (-1, -1)
[i]Type for y

Name: y Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_253(bool) = LIBRARY_CALL, dest:MathUtils, function:MathUtils.within1(uint256,uint256), arguments:['y_3', 'yPrev_1'] 
[i]Type for TMP_253

Name: TMP_253 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_254(uint256) := i_2(uint256)
Finance type key: (-1, -1)
[i]Type for TMP_254

Name: TMP_254 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_3(uint256) = i_2 (c)+ 1
[i]Type for i

Name: i Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
[i]Type for TMP_202

Name: TMP_202 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
y_1(uint256) := TMP_202(uint256)
Finance type key: (-1, -1)
[i]Type for y

Name: y Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_203(uint256) = xpOut_3 (c)- y_1
[i]Type for TMP_203

Name: TMP_203 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_204(uint256) = TMP_203 (c)- 1
[i]Type for TMP_204

Name: TMP_204 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
dy_1(uint256) := TMP_204(uint256)
Finance type key: (-1, -1)
[i]Type for dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
dy_2(uint256) = dy_1 (c)/ token1PrecisionMultiplier_4
[i]Type for dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
dy_3(uint256) = dy_1 (c)/ token0PrecisionMultiplier_4
[i]Type for dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
amountIn_1(uint256) := ϕ(['TMP_153', 'TMP_124', 'TMP_103', 'TMP_112', 'TMP_130', 'TMP_140', 'amountIn_3'])
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
_reserve0_1(uint256) := ϕ(['_reserve0_1', '_reserve0_1', '_reserve0_1', 'TMP_104', 'TMP_113'])
[i]Type for _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
_reserve1_1(uint256) := ϕ(['_reserve1_1', 'TMP_105', 'TMP_114', '_reserve1_1', '_reserve1_1'])
[i]Type for _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
token0PrecisionMultiplier_2(uint256) := ϕ(['token0PrecisionMultiplier_0', 'token0PrecisionMultiplier_1', 'token0PrecisionMultiplier_4'])
[i]Type for token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
token1PrecisionMultiplier_2(uint256) := ϕ(['token1PrecisionMultiplier_4', 'token1PrecisionMultiplier_1', 'token1PrecisionMultiplier_0'])
[i]Type for token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_196(uint256) = _reserve0_1 (c)* token0PrecisionMultiplier_2
[i]Type for TMP_196

Name: TMP_196 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
xpIn_1(uint256) := TMP_196(uint256)
Finance type key: (-1, -1)
[i]Type for xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_197(uint256) = _reserve1_1 (c)* token1PrecisionMultiplier_2
[i]Type for TMP_197

Name: TMP_197 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
xpOut_1(uint256) := TMP_197(uint256)
Finance type key: (-1, -1)
[i]Type for xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_198(uint256) = _reserve1_1 (c)* token1PrecisionMultiplier_2
[i]Type for TMP_198

Name: TMP_198 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
xpIn_2(uint256) := TMP_198(uint256)
Finance type key: (-1, -1)
[i]Type for xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
amountIn_2(uint256) = amountIn_1 (c)* token0PrecisionMultiplier_2
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: updated simple fee ratio
TMP_199(uint256) = _reserve0_1 (c)* token0PrecisionMultiplier_2
[i]Type for TMP_199

Name: TMP_199 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
xpOut_2(uint256) := TMP_199(uint256)
Finance type key: (-1, -1)
[i]Type for xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
amountIn_4(uint256) := ϕ(['amountIn_3', 'amountIn_2'])
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
xpIn_3(uint256) := ϕ(['xpIn_1', 'xpIn_2'])
[i]Type for xpIn

Name: xpIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
xpOut_3(uint256) := ϕ(['xpOut_1', 'xpOut_2'])
[i]Type for xpOut

Name: xpOut Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_200(uint256) = INTERNAL_CALL, HybridPool._computeLiquidityFromAdjustedBalances(uint256,uint256)(xpIn_3,xpOut_3)
xp0_1(uint256) := ϕ(['xpIn_3', 'xp0_1'])
[i]Type for xp0

Name: xp0 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
xp1_1(uint256) := ϕ(['xpOut_3', 'xp1_1'])
[i]Type for xp1

Name: xp1 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MAX_LOOP_LIMIT_1(uint256) := ϕ(['MAX_LOOP_LIMIT_0'])
[i]Type for MAX_LOOP_LIMIT

Name: MAX_LOOP_LIMIT Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
N_A_2(uint256) := ϕ(['N_A_0', 'N_A_1'])
[i]Type for N_A

Name: N_A Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
A_PRECISION_1(uint256) := ϕ(['A_PRECISION_0'])
[i]Type for A_PRECISION

Name: A_PRECISION Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_215(uint256) = xp0_1 (c)+ xp1_1
[i]Type for TMP_215

Name: TMP_215 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
s_1(uint256) := TMP_215(uint256)
Finance type key: (-1, -1)
[i]Type for s

Name: s Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_216(bool) = s_1 == 0
[i]Type for TMP_216

Name: TMP_216 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
computed_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for computed

Name: computed Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
D_1(uint256) := s_1(uint256)
Finance type key: (-1, -1)
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
D_2(uint256) := ϕ(['D_3', 'D_1'])
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
i_2(uint256) := ϕ(['i_3', 'i_1'])
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_217(bool) = i_2 < MAX_LOOP_LIMIT_1
[i]Type for TMP_217

Name: TMP_217 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_218(uint256) = D_2 (c)* D_2
Finance type key: (40, 40)
[i]Type for TMP_218

Name: TMP_218 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_219(uint256) = TMP_218 (c)/ xp0_1
[i]Type for TMP_219

Name: TMP_219 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_220(uint256) = TMP_219 (c)* D_2
[i]Type for TMP_220

Name: TMP_220 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
TMP_221(uint256) = TMP_220 (c)/ xp1_1
[i]Type for TMP_221

Name: TMP_221 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
TMP_222(uint256) = TMP_221 (c)/ 4
[i]Type for TMP_222

Name: TMP_222 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: price/exchange rate
dP_1(uint256) := TMP_222(uint256)
Finance type key: (40, -1)
[i]Type for dP

Name: dP Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: price/exchange rate
prevD_1(uint256) := D_2(uint256)
Finance type key: (40, -1)
[i]Type for prevD

Name: prevD Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
computed_2(uint256) := D_3(uint256)
Finance type key: (40, -1)
[i]Type for computed

Name: computed Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
TMP_223(uint256) = N_A_2 (c)* s_1
[i]Type for TMP_223

Name: TMP_223 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_224(uint256) = TMP_223 (c)/ A_PRECISION_1
[i]Type for TMP_224

Name: TMP_224 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_225(uint256) = 2 (c)* dP_1
[i]Type for TMP_225

Name: TMP_225 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: price/exchange rate
TMP_226(uint256) = TMP_224 (c)+ TMP_225
[i]Type for TMP_226

Name: TMP_226 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: price/exchange rate
TMP_227(uint256) = TMP_226 (c)* D_2
Finance type key: (40, 40)
[i]Type for TMP_227

Name: TMP_227 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_228(uint256) = N_A_2 (c)/ A_PRECISION_1
[i]Type for TMP_228

Name: TMP_228 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_229(uint256) = TMP_228 (c)- 1
[i]Type for TMP_229

Name: TMP_229 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
TMP_230(uint256) = TMP_229 (c)* D_2
[i]Type for TMP_230

Name: TMP_230 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: price/exchange rate
TMP_231(uint256) = 3 (c)* dP_1
[i]Type for TMP_231

Name: TMP_231 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 12
Fields: 
Finance Type: price/exchange rate
TMP_232(uint256) = TMP_230 (c)+ TMP_231
Finance type key: (40, 40)
[i]Type for TMP_232

Name: TMP_232 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 13
Fields: 
Finance Type: price/exchange rate
TMP_233(uint256) = TMP_227 (c)/ TMP_232
[i]Type for TMP_233

Name: TMP_233 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
D_3(uint256) := TMP_233(uint256)
Finance type key: (40, -1)
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
TMP_234(bool) = LIBRARY_CALL, dest:MathUtils, function:MathUtils.within1(uint256,uint256), arguments:['D_3', 'prevD_1'] 
[i]Type for TMP_234

Name: TMP_234 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_235(uint256) := i_2(uint256)
Finance type key: (-1, -1)
[i]Type for TMP_235

Name: TMP_235 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_3(uint256) = i_2 (c)+ 1
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
xp0_1(uint256) := ϕ(['xpIn_3', 'xp0_1'])
[i]Type for xp0

Name: xp0 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
xp1_1(uint256) := ϕ(['xpOut_3', 'xp1_1'])
[i]Type for xp1

Name: xp1 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MAX_LOOP_LIMIT_1(uint256) := ϕ(['MAX_LOOP_LIMIT_0'])
[i]Type for MAX_LOOP_LIMIT

Name: MAX_LOOP_LIMIT Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
N_A_2(uint256) := ϕ(['N_A_0', 'N_A_1'])
[i]Type for N_A

Name: N_A Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
A_PRECISION_1(uint256) := ϕ(['A_PRECISION_0'])
[i]Type for A_PRECISION

Name: A_PRECISION Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_215(uint256) = xp0_1 (c)+ xp1_1
[i]Type for TMP_215

Name: TMP_215 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
s_1(uint256) := TMP_215(uint256)
Finance type key: (-1, -1)
[i]Type for s

Name: s Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_216(bool) = s_1 == 0
[i]Type for TMP_216

Name: TMP_216 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
computed_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for computed

Name: computed Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
D_1(uint256) := s_1(uint256)
Finance type key: (-1, -1)
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
D_2(uint256) := ϕ(['D_3', 'D_1'])
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
i_2(uint256) := ϕ(['i_3', 'i_1'])
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_217(bool) = i_2 < MAX_LOOP_LIMIT_1
[i]Type for TMP_217

Name: TMP_217 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_218(uint256) = D_2 (c)* D_2
Finance type key: (40, 40)
[i]Type for TMP_218

Name: TMP_218 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_219(uint256) = TMP_218 (c)/ xp0_1
[i]Type for TMP_219

Name: TMP_219 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_220(uint256) = TMP_219 (c)* D_2
[i]Type for TMP_220

Name: TMP_220 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
TMP_221(uint256) = TMP_220 (c)/ xp1_1
[i]Type for TMP_221

Name: TMP_221 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
TMP_222(uint256) = TMP_221 (c)/ 4
[i]Type for TMP_222

Name: TMP_222 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: price/exchange rate
dP_1(uint256) := TMP_222(uint256)
Finance type key: (40, -1)
[i]Type for dP

Name: dP Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: price/exchange rate
prevD_1(uint256) := D_2(uint256)
Finance type key: (40, -1)
[i]Type for prevD

Name: prevD Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
computed_2(uint256) := D_3(uint256)
Finance type key: (40, -1)
[i]Type for computed

Name: computed Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
TMP_223(uint256) = N_A_2 (c)* s_1
[i]Type for TMP_223

Name: TMP_223 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_224(uint256) = TMP_223 (c)/ A_PRECISION_1
[i]Type for TMP_224

Name: TMP_224 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_225(uint256) = 2 (c)* dP_1
[i]Type for TMP_225

Name: TMP_225 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: price/exchange rate
TMP_226(uint256) = TMP_224 (c)+ TMP_225
[i]Type for TMP_226

Name: TMP_226 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: price/exchange rate
TMP_227(uint256) = TMP_226 (c)* D_2
Finance type key: (40, 40)
[i]Type for TMP_227

Name: TMP_227 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_228(uint256) = N_A_2 (c)/ A_PRECISION_1
[i]Type for TMP_228

Name: TMP_228 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_229(uint256) = TMP_228 (c)- 1
[i]Type for TMP_229

Name: TMP_229 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
TMP_230(uint256) = TMP_229 (c)* D_2
[i]Type for TMP_230

Name: TMP_230 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: price/exchange rate
TMP_231(uint256) = 3 (c)* dP_1
[i]Type for TMP_231

Name: TMP_231 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 12
Fields: 
Finance Type: price/exchange rate
TMP_232(uint256) = TMP_230 (c)+ TMP_231
Finance type key: (40, 40)
[i]Type for TMP_232

Name: TMP_232 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 13
Fields: 
Finance Type: price/exchange rate
TMP_233(uint256) = TMP_227 (c)/ TMP_232
[i]Type for TMP_233

Name: TMP_233 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
D_3(uint256) := TMP_233(uint256)
Finance type key: (40, -1)
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
TMP_234(bool) = LIBRARY_CALL, dest:MathUtils, function:MathUtils.within1(uint256,uint256), arguments:['D_3', 'prevD_1'] 
[i]Type for TMP_234

Name: TMP_234 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_235(uint256) := i_2(uint256)
Finance type key: (-1, -1)
[i]Type for TMP_235

Name: TMP_235 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_3(uint256) = i_2 (c)+ 1
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
[i]Type for TMP_200

Name: TMP_200 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
d_1(uint256) := TMP_200(uint256)
Finance type key: (-1, -1)
[i]Type for d

Name: d Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_201(uint256) = xpIn_3 (c)+ amountIn_4
[i]Type for TMP_201

Name: TMP_201 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
x_1(uint256) := TMP_201(uint256)
Finance type key: (12, -1)
[i]Type for x

Name: x Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
amountIn_3(uint256) = amountIn_1 (c)* token1PrecisionMultiplier_2
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: updated simple fee ratio
TMP_202(uint256) = INTERNAL_CALL, HybridPool._getY(uint256,uint256)(x_1,d_1)
x_1(uint256) := ϕ(['x_1'])
[i]Type for x

Name: x Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
D_1(uint256) := ϕ(['d_1'])
[i]Type for D

Name: D Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MAX_LOOP_LIMIT_2(uint256) := ϕ(['MAX_LOOP_LIMIT_0'])
[i]Type for MAX_LOOP_LIMIT

Name: MAX_LOOP_LIMIT Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
N_A_3(uint256) := ϕ(['N_A_0', 'N_A_1'])
[i]Type for N_A

Name: N_A Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
A_PRECISION_2(uint256) := ϕ(['A_PRECISION_0'])
[i]Type for A_PRECISION

Name: A_PRECISION Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_236(uint256) = D_1 (c)* D_1
[i]Type for TMP_236

Name: TMP_236 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_237(uint256) = x_1 (c)* 2
[i]Type for TMP_237

Name: TMP_237 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
TMP_238(uint256) = TMP_236 (c)/ TMP_237
[i]Type for TMP_238

Name: TMP_238 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
c_1(uint256) := TMP_238(uint256)
Finance type key: (12, -1)
[i]Type for c

Name: c Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
TMP_239(uint256) = c_1 (c)* D_1
[i]Type for TMP_239

Name: TMP_239 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
TMP_240(uint256) = N_A_3 (c)* 2
[i]Type for TMP_240

Name: TMP_240 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
TMP_241(uint256) = TMP_240 (c)/ A_PRECISION_2
[i]Type for TMP_241

Name: TMP_241 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
TMP_242(uint256) = TMP_239 (c)/ TMP_241
[i]Type for TMP_242

Name: TMP_242 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: updated simple fee ratio
c_2(uint256) := TMP_242(uint256)
Finance type key: (12, -1)
[i]Type for c

Name: c Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: updated simple fee ratio
TMP_243(uint256) = D_1 (c)* A_PRECISION_2
[i]Type for TMP_243

Name: TMP_243 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_244(uint256) = TMP_243 (c)/ N_A_3
[i]Type for TMP_244

Name: TMP_244 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_245(uint256) = x_1 (c)+ TMP_244
[i]Type for TMP_245

Name: TMP_245 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
b_1(uint256) := TMP_245(uint256)
Finance type key: (12, -1)
[i]Type for b

Name: b Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
y_1(uint256) := D_1(uint256)
Finance type key: (-1, -1)
[i]Type for y

Name: y Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for i

Name: i Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
y_2(uint256) := ϕ(['y_1', 'y_3'])
[i]Type for y

Name: y Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_2(uint256) := ϕ(['i_1', 'i_3'])
[i]Type for i

Name: i Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_246(bool) = i_2 < MAX_LOOP_LIMIT_2
[i]Type for TMP_246

Name: TMP_246 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
yPrev_1(uint256) := y_2(uint256)
Finance type key: (-1, -1)
[i]Type for yPrev

Name: yPrev Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_247(uint256) = y_2 (c)* y_2
[i]Type for TMP_247

Name: TMP_247 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_248(uint256) = TMP_247 (c)+ c_2
[i]Type for TMP_248

Name: TMP_248 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: updated simple fee ratio
TMP_249(uint256) = y_2 (c)* 2
[i]Type for TMP_249

Name: TMP_249 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_250(uint256) = TMP_249 (c)+ b_1
[i]Type for TMP_250

Name: TMP_250 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: updated simple fee ratio
TMP_251(uint256) = TMP_250 (c)- D_1
[i]Type for TMP_251

Name: TMP_251 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: updated simple fee ratio
TMP_252(uint256) = TMP_248 (c)/ TMP_251
Finance type key: (12, 12)
Finance type key: (12, 12)
[i]Type for TMP_252

Name: TMP_252 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
y_3(uint256) := TMP_252(uint256)
Finance type key: (-1, -1)
[i]Type for y

Name: y Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_253(bool) = LIBRARY_CALL, dest:MathUtils, function:MathUtils.within1(uint256,uint256), arguments:['y_3', 'yPrev_1'] 
[i]Type for TMP_253

Name: TMP_253 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_254(uint256) := i_2(uint256)
Finance type key: (-1, -1)
[i]Type for TMP_254

Name: TMP_254 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_3(uint256) = i_2 (c)+ 1
[i]Type for i

Name: i Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
x_1(uint256) := ϕ(['x_1'])
[i]Type for x

Name: x Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
D_1(uint256) := ϕ(['d_1'])
[i]Type for D

Name: D Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MAX_LOOP_LIMIT_2(uint256) := ϕ(['MAX_LOOP_LIMIT_0'])
[i]Type for MAX_LOOP_LIMIT

Name: MAX_LOOP_LIMIT Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
N_A_3(uint256) := ϕ(['N_A_0', 'N_A_1'])
[i]Type for N_A

Name: N_A Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
A_PRECISION_2(uint256) := ϕ(['A_PRECISION_0'])
[i]Type for A_PRECISION

Name: A_PRECISION Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_236(uint256) = D_1 (c)* D_1
[i]Type for TMP_236

Name: TMP_236 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_237(uint256) = x_1 (c)* 2
[i]Type for TMP_237

Name: TMP_237 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
TMP_238(uint256) = TMP_236 (c)/ TMP_237
[i]Type for TMP_238

Name: TMP_238 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
c_1(uint256) := TMP_238(uint256)
Finance type key: (12, -1)
[i]Type for c

Name: c Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
TMP_239(uint256) = c_1 (c)* D_1
[i]Type for TMP_239

Name: TMP_239 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
TMP_240(uint256) = N_A_3 (c)* 2
[i]Type for TMP_240

Name: TMP_240 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
TMP_241(uint256) = TMP_240 (c)/ A_PRECISION_2
[i]Type for TMP_241

Name: TMP_241 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
TMP_242(uint256) = TMP_239 (c)/ TMP_241
[i]Type for TMP_242

Name: TMP_242 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: updated simple fee ratio
c_2(uint256) := TMP_242(uint256)
Finance type key: (12, -1)
[i]Type for c

Name: c Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: updated simple fee ratio
TMP_243(uint256) = D_1 (c)* A_PRECISION_2
[i]Type for TMP_243

Name: TMP_243 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_244(uint256) = TMP_243 (c)/ N_A_3
[i]Type for TMP_244

Name: TMP_244 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_245(uint256) = x_1 (c)+ TMP_244
[i]Type for TMP_245

Name: TMP_245 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
b_1(uint256) := TMP_245(uint256)
Finance type key: (12, -1)
[i]Type for b

Name: b Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
y_1(uint256) := D_1(uint256)
Finance type key: (-1, -1)
[i]Type for y

Name: y Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for i

Name: i Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
y_2(uint256) := ϕ(['y_1', 'y_3'])
[i]Type for y

Name: y Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_2(uint256) := ϕ(['i_1', 'i_3'])
[i]Type for i

Name: i Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_246(bool) = i_2 < MAX_LOOP_LIMIT_2
[i]Type for TMP_246

Name: TMP_246 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
yPrev_1(uint256) := y_2(uint256)
Finance type key: (-1, -1)
[i]Type for yPrev

Name: yPrev Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_247(uint256) = y_2 (c)* y_2
[i]Type for TMP_247

Name: TMP_247 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_248(uint256) = TMP_247 (c)+ c_2
[i]Type for TMP_248

Name: TMP_248 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: updated simple fee ratio
TMP_249(uint256) = y_2 (c)* 2
[i]Type for TMP_249

Name: TMP_249 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_250(uint256) = TMP_249 (c)+ b_1
[i]Type for TMP_250

Name: TMP_250 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: updated simple fee ratio
TMP_251(uint256) = TMP_250 (c)- D_1
[i]Type for TMP_251

Name: TMP_251 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: updated simple fee ratio
TMP_252(uint256) = TMP_248 (c)/ TMP_251
Finance type key: (12, 12)
Finance type key: (12, 12)
[i]Type for TMP_252

Name: TMP_252 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
y_3(uint256) := TMP_252(uint256)
Finance type key: (-1, -1)
[i]Type for y

Name: y Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_253(bool) = LIBRARY_CALL, dest:MathUtils, function:MathUtils.within1(uint256,uint256), arguments:['y_3', 'yPrev_1'] 
[i]Type for TMP_253

Name: TMP_253 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_254(uint256) := i_2(uint256)
Finance type key: (-1, -1)
[i]Type for TMP_254

Name: TMP_254 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_3(uint256) = i_2 (c)+ 1
[i]Type for i

Name: i Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
[i]Type for TMP_202

Name: TMP_202 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
y_1(uint256) := TMP_202(uint256)
Finance type key: (-1, -1)
[i]Type for y

Name: y Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_203(uint256) = xpOut_3 (c)- y_1
[i]Type for TMP_203

Name: TMP_203 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_204(uint256) = TMP_203 (c)- 1
[i]Type for TMP_204

Name: TMP_204 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
dy_1(uint256) := TMP_204(uint256)
Finance type key: (-1, -1)
[i]Type for dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
dy_2(uint256) = dy_1 (c)/ token1PrecisionMultiplier_4
[i]Type for dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
dy_3(uint256) = dy_1 (c)/ token0PrecisionMultiplier_4
[i]Type for dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
[i]Type for TMP_301

Name: TMP_301 Function: getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
finalAmountOut_2(uint256) := TMP_301(uint256)
Finance type key: (-1, -1)
[i]Type for finalAmountOut

Name: finalAmountOut Function: getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MAX_FEE_9(uint256) := ϕ(['MAX_FEE_5', 'MAX_FEE_0', 'MAX_FEE_6', 'MAX_FEE_11'])
[i]Type for MAX_FEE

Name: MAX_FEE Function: getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
swapFee_9(uint256) := ϕ(['swapFee_0', 'swapFee_5', 'swapFee_1', 'swapFee_11', 'swapFee_6'])
[i]Type for swapFee

Name: swapFee Function: getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: simple fee ratio
token0_44(address) := ϕ(['token0_10', 'token0_26', 'token0_0', 'token0_19', 'token0_42', 'token0_39', 'token0_32', 'token0_1', 'token0_46', 'token0_22', 'token0_37'])
[i]Type for token0

Name: token0 Function: getAmountOut
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
TUPLE_25(address,uint256) = SOLIDITY_CALL abi.decode()(data_1(address,uint256))
[i]Type for TUPLE_25

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tokenIn_1(address)= UNPACK TUPLE_25 index: 0 
[i]Type for tokenIn

Name: tokenIn Function: getAmountOut
Num: 
Den: 
Address: -989
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
amountIn_1(uint256)= UNPACK TUPLE_25 index: 1 
[i]Type for amountIn

Name: amountIn Function: getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_26(uint256,uint256) = INTERNAL_CALL, HybridPool._getReserves()()
[i]Type for TUPLE_26

Name: TUPLE_26 Function: getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_reserve0_1(uint256)= UNPACK TUPLE_26 index: 0 
[i]Type for _reserve0

Name: _reserve0 Function: getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
_reserve1_1(uint256)= UNPACK TUPLE_26 index: 1 
[i]Type for _reserve1

Name: _reserve1 Function: getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
TMP_297(uint256) = INTERNAL_CALL, HybridPool._toAmount(address,uint256)(tokenIn_1,amountIn_1)
token_1(address) := ϕ(['token0_36', 'token0_38', 'token1_29', 'token0_41', 'token1_44', 'token1_33', 'token1_39', 'tokenIn_1', 'token0_29'])
[i]Type for token

Name: token Function: _toAmount
Num: 
Den: 
Address: -989
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['TMP_143', '_reserve1_1', 'amountIn_1', 'amountIn_1', 'TMP_156', '_reserve0_1', 'TMP_184', 'TMP_186'])
[i]Type for input

Name: input Function: _toAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_191 = CONVERT this to address
[i]Type for TMP_191

Name: TMP_191 Function: _toAmount
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_192 = CONVERT TMP_191 to IBentoBoxMinimal
[i]Type for TMP_192

Name: TMP_192 Function: _toAmount
Num: 
Den: 
Address: 8
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
TMP_193(uint256) = HIGH_LEVEL_CALL, dest:TMP_192(IBentoBoxMinimal), function:toAmount, arguments:['token_1', 'input_1', 'False']  
[i]Type for TMP_193

Name: TMP_193 Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
output_1(uint256) := TMP_193(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
RETURN output_1
token_1(address) := ϕ(['token0_36', 'token0_38', 'token1_29', 'token0_41', 'token1_44', 'token1_33', 'token1_39', 'tokenIn_1', 'token0_29'])
[i]Type for token

Name: token Function: _toAmount
Num: 
Den: 
Address: -989
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
input_1(uint256) := ϕ(['TMP_143', '_reserve1_1', 'amountIn_1', 'amountIn_1', 'TMP_156', '_reserve0_1', 'TMP_184', 'TMP_186'])
[i]Type for input

Name: input Function: _toAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_191 = CONVERT this to address
[i]Type for TMP_191

Name: TMP_191 Function: _toAmount
Num: 
Den: 
Address: 8
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
TMP_192 = CONVERT TMP_191 to IBentoBoxMinimal
[i]Type for TMP_192

Name: TMP_192 Function: _toAmount
Num: 
Den: 
Address: 8
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
TMP_193(uint256) = HIGH_LEVEL_CALL, dest:TMP_192(IBentoBoxMinimal), function:toAmount, arguments:['token_1', 'input_1', 'False']  
[i]Type for TMP_193

Name: TMP_193 Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
output_1(uint256) := TMP_193(uint256)
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
RETURN output_1
[i]Type for TMP_297

Name: TMP_297 Function: getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
amountIn_2(uint256) := TMP_297(uint256)
Finance type key: (-1, -1)
[i]Type for amountIn

Name: amountIn Function: getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
TMP_298(uint256) = amountIn_2 (c)* swapFee_11
[i]Type for TMP_298

Name: TMP_298 Function: getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
TMP_299(uint256) = TMP_298 (c)/ MAX_FEE_11
[i]Type for TMP_299

Name: TMP_299 Function: getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
amountIn_3(uint256) = amountIn_2 (c)- TMP_299
[i]Type for amountIn

Name: amountIn Function: getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
TMP_300(bool) = tokenIn_1 == token0_46
[i]Type for TMP_300

Name: TMP_300 Function: getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_302(uint256) = INTERNAL_CALL, HybridPool._getAmountOut(uint256,uint256,uint256,bool)(amountIn_3,_reserve0_1,_reserve1_1,False)
amountIn_1(uint256) := ϕ(['TMP_153', 'TMP_124', 'TMP_103', 'TMP_112', 'TMP_130', 'TMP_140', 'amountIn_3'])
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
_reserve0_1(uint256) := ϕ(['_reserve0_1', '_reserve0_1', '_reserve0_1', 'TMP_104', 'TMP_113'])
[i]Type for _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
_reserve1_1(uint256) := ϕ(['_reserve1_1', 'TMP_105', 'TMP_114', '_reserve1_1', '_reserve1_1'])
[i]Type for _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
token0PrecisionMultiplier_2(uint256) := ϕ(['token0PrecisionMultiplier_0', 'token0PrecisionMultiplier_1', 'token0PrecisionMultiplier_4'])
[i]Type for token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
token1PrecisionMultiplier_2(uint256) := ϕ(['token1PrecisionMultiplier_4', 'token1PrecisionMultiplier_1', 'token1PrecisionMultiplier_0'])
[i]Type for token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_196(uint256) = _reserve0_1 (c)* token0PrecisionMultiplier_2
[i]Type for TMP_196

Name: TMP_196 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
xpIn_1(uint256) := TMP_196(uint256)
Finance type key: (-1, -1)
[i]Type for xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_197(uint256) = _reserve1_1 (c)* token1PrecisionMultiplier_2
[i]Type for TMP_197

Name: TMP_197 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
xpOut_1(uint256) := TMP_197(uint256)
Finance type key: (-1, -1)
[i]Type for xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_198(uint256) = _reserve1_1 (c)* token1PrecisionMultiplier_2
[i]Type for TMP_198

Name: TMP_198 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
xpIn_2(uint256) := TMP_198(uint256)
Finance type key: (-1, -1)
[i]Type for xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
amountIn_2(uint256) = amountIn_1 (c)* token0PrecisionMultiplier_2
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: updated simple fee ratio
TMP_199(uint256) = _reserve0_1 (c)* token0PrecisionMultiplier_2
[i]Type for TMP_199

Name: TMP_199 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
xpOut_2(uint256) := TMP_199(uint256)
Finance type key: (-1, -1)
[i]Type for xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
amountIn_4(uint256) := ϕ(['amountIn_3', 'amountIn_2'])
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
xpIn_3(uint256) := ϕ(['xpIn_1', 'xpIn_2'])
[i]Type for xpIn

Name: xpIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
xpOut_3(uint256) := ϕ(['xpOut_1', 'xpOut_2'])
[i]Type for xpOut

Name: xpOut Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_200(uint256) = INTERNAL_CALL, HybridPool._computeLiquidityFromAdjustedBalances(uint256,uint256)(xpIn_3,xpOut_3)
xp0_1(uint256) := ϕ(['xpIn_3', 'xp0_1'])
[i]Type for xp0

Name: xp0 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
xp1_1(uint256) := ϕ(['xpOut_3', 'xp1_1'])
[i]Type for xp1

Name: xp1 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MAX_LOOP_LIMIT_1(uint256) := ϕ(['MAX_LOOP_LIMIT_0'])
[i]Type for MAX_LOOP_LIMIT

Name: MAX_LOOP_LIMIT Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
N_A_2(uint256) := ϕ(['N_A_0', 'N_A_1'])
[i]Type for N_A

Name: N_A Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
A_PRECISION_1(uint256) := ϕ(['A_PRECISION_0'])
[i]Type for A_PRECISION

Name: A_PRECISION Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_215(uint256) = xp0_1 (c)+ xp1_1
[i]Type for TMP_215

Name: TMP_215 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
s_1(uint256) := TMP_215(uint256)
Finance type key: (-1, -1)
[i]Type for s

Name: s Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_216(bool) = s_1 == 0
[i]Type for TMP_216

Name: TMP_216 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
computed_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for computed

Name: computed Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
D_1(uint256) := s_1(uint256)
Finance type key: (-1, -1)
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
D_2(uint256) := ϕ(['D_3', 'D_1'])
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
i_2(uint256) := ϕ(['i_3', 'i_1'])
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_217(bool) = i_2 < MAX_LOOP_LIMIT_1
[i]Type for TMP_217

Name: TMP_217 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_218(uint256) = D_2 (c)* D_2
Finance type key: (40, 40)
[i]Type for TMP_218

Name: TMP_218 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_219(uint256) = TMP_218 (c)/ xp0_1
[i]Type for TMP_219

Name: TMP_219 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_220(uint256) = TMP_219 (c)* D_2
[i]Type for TMP_220

Name: TMP_220 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
TMP_221(uint256) = TMP_220 (c)/ xp1_1
[i]Type for TMP_221

Name: TMP_221 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
TMP_222(uint256) = TMP_221 (c)/ 4
[i]Type for TMP_222

Name: TMP_222 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: price/exchange rate
dP_1(uint256) := TMP_222(uint256)
Finance type key: (40, -1)
[i]Type for dP

Name: dP Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: price/exchange rate
prevD_1(uint256) := D_2(uint256)
Finance type key: (40, -1)
[i]Type for prevD

Name: prevD Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
computed_2(uint256) := D_3(uint256)
Finance type key: (40, -1)
[i]Type for computed

Name: computed Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
TMP_223(uint256) = N_A_2 (c)* s_1
[i]Type for TMP_223

Name: TMP_223 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_224(uint256) = TMP_223 (c)/ A_PRECISION_1
[i]Type for TMP_224

Name: TMP_224 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_225(uint256) = 2 (c)* dP_1
[i]Type for TMP_225

Name: TMP_225 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: price/exchange rate
TMP_226(uint256) = TMP_224 (c)+ TMP_225
[i]Type for TMP_226

Name: TMP_226 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: price/exchange rate
TMP_227(uint256) = TMP_226 (c)* D_2
Finance type key: (40, 40)
[i]Type for TMP_227

Name: TMP_227 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_228(uint256) = N_A_2 (c)/ A_PRECISION_1
[i]Type for TMP_228

Name: TMP_228 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_229(uint256) = TMP_228 (c)- 1
[i]Type for TMP_229

Name: TMP_229 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
TMP_230(uint256) = TMP_229 (c)* D_2
[i]Type for TMP_230

Name: TMP_230 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: price/exchange rate
TMP_231(uint256) = 3 (c)* dP_1
[i]Type for TMP_231

Name: TMP_231 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 12
Fields: 
Finance Type: price/exchange rate
TMP_232(uint256) = TMP_230 (c)+ TMP_231
Finance type key: (40, 40)
[i]Type for TMP_232

Name: TMP_232 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 13
Fields: 
Finance Type: price/exchange rate
TMP_233(uint256) = TMP_227 (c)/ TMP_232
[i]Type for TMP_233

Name: TMP_233 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
D_3(uint256) := TMP_233(uint256)
Finance type key: (40, -1)
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
TMP_234(bool) = LIBRARY_CALL, dest:MathUtils, function:MathUtils.within1(uint256,uint256), arguments:['D_3', 'prevD_1'] 
[i]Type for TMP_234

Name: TMP_234 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_235(uint256) := i_2(uint256)
Finance type key: (-1, -1)
[i]Type for TMP_235

Name: TMP_235 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_3(uint256) = i_2 (c)+ 1
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
xp0_1(uint256) := ϕ(['xpIn_3', 'xp0_1'])
[i]Type for xp0

Name: xp0 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
xp1_1(uint256) := ϕ(['xpOut_3', 'xp1_1'])
[i]Type for xp1

Name: xp1 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MAX_LOOP_LIMIT_1(uint256) := ϕ(['MAX_LOOP_LIMIT_0'])
[i]Type for MAX_LOOP_LIMIT

Name: MAX_LOOP_LIMIT Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
N_A_2(uint256) := ϕ(['N_A_0', 'N_A_1'])
[i]Type for N_A

Name: N_A Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
A_PRECISION_1(uint256) := ϕ(['A_PRECISION_0'])
[i]Type for A_PRECISION

Name: A_PRECISION Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_215(uint256) = xp0_1 (c)+ xp1_1
[i]Type for TMP_215

Name: TMP_215 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
s_1(uint256) := TMP_215(uint256)
Finance type key: (-1, -1)
[i]Type for s

Name: s Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_216(bool) = s_1 == 0
[i]Type for TMP_216

Name: TMP_216 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
computed_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for computed

Name: computed Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
D_1(uint256) := s_1(uint256)
Finance type key: (-1, -1)
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
D_2(uint256) := ϕ(['D_3', 'D_1'])
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
i_2(uint256) := ϕ(['i_3', 'i_1'])
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_217(bool) = i_2 < MAX_LOOP_LIMIT_1
[i]Type for TMP_217

Name: TMP_217 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_218(uint256) = D_2 (c)* D_2
Finance type key: (40, 40)
[i]Type for TMP_218

Name: TMP_218 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_219(uint256) = TMP_218 (c)/ xp0_1
[i]Type for TMP_219

Name: TMP_219 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_220(uint256) = TMP_219 (c)* D_2
[i]Type for TMP_220

Name: TMP_220 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
TMP_221(uint256) = TMP_220 (c)/ xp1_1
[i]Type for TMP_221

Name: TMP_221 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
TMP_222(uint256) = TMP_221 (c)/ 4
[i]Type for TMP_222

Name: TMP_222 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: price/exchange rate
dP_1(uint256) := TMP_222(uint256)
Finance type key: (40, -1)
[i]Type for dP

Name: dP Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: price/exchange rate
prevD_1(uint256) := D_2(uint256)
Finance type key: (40, -1)
[i]Type for prevD

Name: prevD Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
computed_2(uint256) := D_3(uint256)
Finance type key: (40, -1)
[i]Type for computed

Name: computed Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
TMP_223(uint256) = N_A_2 (c)* s_1
[i]Type for TMP_223

Name: TMP_223 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_224(uint256) = TMP_223 (c)/ A_PRECISION_1
[i]Type for TMP_224

Name: TMP_224 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_225(uint256) = 2 (c)* dP_1
[i]Type for TMP_225

Name: TMP_225 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: price/exchange rate
TMP_226(uint256) = TMP_224 (c)+ TMP_225
[i]Type for TMP_226

Name: TMP_226 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: price/exchange rate
TMP_227(uint256) = TMP_226 (c)* D_2
Finance type key: (40, 40)
[i]Type for TMP_227

Name: TMP_227 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_228(uint256) = N_A_2 (c)/ A_PRECISION_1
[i]Type for TMP_228

Name: TMP_228 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_229(uint256) = TMP_228 (c)- 1
[i]Type for TMP_229

Name: TMP_229 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
TMP_230(uint256) = TMP_229 (c)* D_2
[i]Type for TMP_230

Name: TMP_230 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: price/exchange rate
TMP_231(uint256) = 3 (c)* dP_1
[i]Type for TMP_231

Name: TMP_231 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 12
Fields: 
Finance Type: price/exchange rate
TMP_232(uint256) = TMP_230 (c)+ TMP_231
Finance type key: (40, 40)
[i]Type for TMP_232

Name: TMP_232 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 13
Fields: 
Finance Type: price/exchange rate
TMP_233(uint256) = TMP_227 (c)/ TMP_232
[i]Type for TMP_233

Name: TMP_233 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
D_3(uint256) := TMP_233(uint256)
Finance type key: (40, -1)
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
TMP_234(bool) = LIBRARY_CALL, dest:MathUtils, function:MathUtils.within1(uint256,uint256), arguments:['D_3', 'prevD_1'] 
[i]Type for TMP_234

Name: TMP_234 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_235(uint256) := i_2(uint256)
Finance type key: (-1, -1)
[i]Type for TMP_235

Name: TMP_235 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_3(uint256) = i_2 (c)+ 1
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
[i]Type for TMP_200

Name: TMP_200 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
d_1(uint256) := TMP_200(uint256)
Finance type key: (-1, -1)
[i]Type for d

Name: d Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_201(uint256) = xpIn_3 (c)+ amountIn_4
[i]Type for TMP_201

Name: TMP_201 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
x_1(uint256) := TMP_201(uint256)
Finance type key: (12, -1)
[i]Type for x

Name: x Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
amountIn_3(uint256) = amountIn_1 (c)* token1PrecisionMultiplier_2
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: updated simple fee ratio
TMP_202(uint256) = INTERNAL_CALL, HybridPool._getY(uint256,uint256)(x_1,d_1)
x_1(uint256) := ϕ(['x_1'])
[i]Type for x

Name: x Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
D_1(uint256) := ϕ(['d_1'])
[i]Type for D

Name: D Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MAX_LOOP_LIMIT_2(uint256) := ϕ(['MAX_LOOP_LIMIT_0'])
[i]Type for MAX_LOOP_LIMIT

Name: MAX_LOOP_LIMIT Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
N_A_3(uint256) := ϕ(['N_A_0', 'N_A_1'])
[i]Type for N_A

Name: N_A Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
A_PRECISION_2(uint256) := ϕ(['A_PRECISION_0'])
[i]Type for A_PRECISION

Name: A_PRECISION Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_236(uint256) = D_1 (c)* D_1
[i]Type for TMP_236

Name: TMP_236 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_237(uint256) = x_1 (c)* 2
[i]Type for TMP_237

Name: TMP_237 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
TMP_238(uint256) = TMP_236 (c)/ TMP_237
[i]Type for TMP_238

Name: TMP_238 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
c_1(uint256) := TMP_238(uint256)
Finance type key: (12, -1)
[i]Type for c

Name: c Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
TMP_239(uint256) = c_1 (c)* D_1
[i]Type for TMP_239

Name: TMP_239 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
TMP_240(uint256) = N_A_3 (c)* 2
[i]Type for TMP_240

Name: TMP_240 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
TMP_241(uint256) = TMP_240 (c)/ A_PRECISION_2
[i]Type for TMP_241

Name: TMP_241 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
TMP_242(uint256) = TMP_239 (c)/ TMP_241
[i]Type for TMP_242

Name: TMP_242 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: updated simple fee ratio
c_2(uint256) := TMP_242(uint256)
Finance type key: (12, -1)
[i]Type for c

Name: c Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: updated simple fee ratio
TMP_243(uint256) = D_1 (c)* A_PRECISION_2
[i]Type for TMP_243

Name: TMP_243 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_244(uint256) = TMP_243 (c)/ N_A_3
[i]Type for TMP_244

Name: TMP_244 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_245(uint256) = x_1 (c)+ TMP_244
[i]Type for TMP_245

Name: TMP_245 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
b_1(uint256) := TMP_245(uint256)
Finance type key: (12, -1)
[i]Type for b

Name: b Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
y_1(uint256) := D_1(uint256)
Finance type key: (-1, -1)
[i]Type for y

Name: y Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for i

Name: i Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
y_2(uint256) := ϕ(['y_1', 'y_3'])
[i]Type for y

Name: y Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_2(uint256) := ϕ(['i_1', 'i_3'])
[i]Type for i

Name: i Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_246(bool) = i_2 < MAX_LOOP_LIMIT_2
[i]Type for TMP_246

Name: TMP_246 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
yPrev_1(uint256) := y_2(uint256)
Finance type key: (-1, -1)
[i]Type for yPrev

Name: yPrev Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_247(uint256) = y_2 (c)* y_2
[i]Type for TMP_247

Name: TMP_247 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_248(uint256) = TMP_247 (c)+ c_2
[i]Type for TMP_248

Name: TMP_248 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: updated simple fee ratio
TMP_249(uint256) = y_2 (c)* 2
[i]Type for TMP_249

Name: TMP_249 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_250(uint256) = TMP_249 (c)+ b_1
[i]Type for TMP_250

Name: TMP_250 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: updated simple fee ratio
TMP_251(uint256) = TMP_250 (c)- D_1
[i]Type for TMP_251

Name: TMP_251 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: updated simple fee ratio
TMP_252(uint256) = TMP_248 (c)/ TMP_251
Finance type key: (12, 12)
Finance type key: (12, 12)
[i]Type for TMP_252

Name: TMP_252 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
y_3(uint256) := TMP_252(uint256)
Finance type key: (-1, -1)
[i]Type for y

Name: y Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_253(bool) = LIBRARY_CALL, dest:MathUtils, function:MathUtils.within1(uint256,uint256), arguments:['y_3', 'yPrev_1'] 
[i]Type for TMP_253

Name: TMP_253 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_254(uint256) := i_2(uint256)
Finance type key: (-1, -1)
[i]Type for TMP_254

Name: TMP_254 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_3(uint256) = i_2 (c)+ 1
[i]Type for i

Name: i Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
x_1(uint256) := ϕ(['x_1'])
[i]Type for x

Name: x Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
D_1(uint256) := ϕ(['d_1'])
[i]Type for D

Name: D Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MAX_LOOP_LIMIT_2(uint256) := ϕ(['MAX_LOOP_LIMIT_0'])
[i]Type for MAX_LOOP_LIMIT

Name: MAX_LOOP_LIMIT Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
N_A_3(uint256) := ϕ(['N_A_0', 'N_A_1'])
[i]Type for N_A

Name: N_A Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
A_PRECISION_2(uint256) := ϕ(['A_PRECISION_0'])
[i]Type for A_PRECISION

Name: A_PRECISION Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_236(uint256) = D_1 (c)* D_1
[i]Type for TMP_236

Name: TMP_236 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_237(uint256) = x_1 (c)* 2
[i]Type for TMP_237

Name: TMP_237 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
TMP_238(uint256) = TMP_236 (c)/ TMP_237
[i]Type for TMP_238

Name: TMP_238 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
c_1(uint256) := TMP_238(uint256)
Finance type key: (12, -1)
[i]Type for c

Name: c Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
TMP_239(uint256) = c_1 (c)* D_1
[i]Type for TMP_239

Name: TMP_239 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
TMP_240(uint256) = N_A_3 (c)* 2
[i]Type for TMP_240

Name: TMP_240 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
TMP_241(uint256) = TMP_240 (c)/ A_PRECISION_2
[i]Type for TMP_241

Name: TMP_241 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
TMP_242(uint256) = TMP_239 (c)/ TMP_241
[i]Type for TMP_242

Name: TMP_242 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: updated simple fee ratio
c_2(uint256) := TMP_242(uint256)
Finance type key: (12, -1)
[i]Type for c

Name: c Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: updated simple fee ratio
TMP_243(uint256) = D_1 (c)* A_PRECISION_2
[i]Type for TMP_243

Name: TMP_243 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_244(uint256) = TMP_243 (c)/ N_A_3
[i]Type for TMP_244

Name: TMP_244 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_245(uint256) = x_1 (c)+ TMP_244
[i]Type for TMP_245

Name: TMP_245 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
b_1(uint256) := TMP_245(uint256)
Finance type key: (12, -1)
[i]Type for b

Name: b Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
y_1(uint256) := D_1(uint256)
Finance type key: (-1, -1)
[i]Type for y

Name: y Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for i

Name: i Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
y_2(uint256) := ϕ(['y_1', 'y_3'])
[i]Type for y

Name: y Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_2(uint256) := ϕ(['i_1', 'i_3'])
[i]Type for i

Name: i Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_246(bool) = i_2 < MAX_LOOP_LIMIT_2
[i]Type for TMP_246

Name: TMP_246 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
yPrev_1(uint256) := y_2(uint256)
Finance type key: (-1, -1)
[i]Type for yPrev

Name: yPrev Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_247(uint256) = y_2 (c)* y_2
[i]Type for TMP_247

Name: TMP_247 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_248(uint256) = TMP_247 (c)+ c_2
[i]Type for TMP_248

Name: TMP_248 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: updated simple fee ratio
TMP_249(uint256) = y_2 (c)* 2
[i]Type for TMP_249

Name: TMP_249 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_250(uint256) = TMP_249 (c)+ b_1
[i]Type for TMP_250

Name: TMP_250 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: updated simple fee ratio
TMP_251(uint256) = TMP_250 (c)- D_1
[i]Type for TMP_251

Name: TMP_251 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: updated simple fee ratio
TMP_252(uint256) = TMP_248 (c)/ TMP_251
Finance type key: (12, 12)
Finance type key: (12, 12)
[i]Type for TMP_252

Name: TMP_252 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
y_3(uint256) := TMP_252(uint256)
Finance type key: (-1, -1)
[i]Type for y

Name: y Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_253(bool) = LIBRARY_CALL, dest:MathUtils, function:MathUtils.within1(uint256,uint256), arguments:['y_3', 'yPrev_1'] 
[i]Type for TMP_253

Name: TMP_253 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_254(uint256) := i_2(uint256)
Finance type key: (-1, -1)
[i]Type for TMP_254

Name: TMP_254 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_3(uint256) = i_2 (c)+ 1
[i]Type for i

Name: i Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
[i]Type for TMP_202

Name: TMP_202 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
y_1(uint256) := TMP_202(uint256)
Finance type key: (-1, -1)
[i]Type for y

Name: y Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_203(uint256) = xpOut_3 (c)- y_1
[i]Type for TMP_203

Name: TMP_203 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_204(uint256) = TMP_203 (c)- 1
[i]Type for TMP_204

Name: TMP_204 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
dy_1(uint256) := TMP_204(uint256)
Finance type key: (-1, -1)
[i]Type for dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
dy_2(uint256) = dy_1 (c)/ token1PrecisionMultiplier_4
[i]Type for dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
dy_3(uint256) = dy_1 (c)/ token0PrecisionMultiplier_4
[i]Type for dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
amountIn_1(uint256) := ϕ(['TMP_153', 'TMP_124', 'TMP_103', 'TMP_112', 'TMP_130', 'TMP_140', 'amountIn_3'])
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
_reserve0_1(uint256) := ϕ(['_reserve0_1', '_reserve0_1', '_reserve0_1', 'TMP_104', 'TMP_113'])
[i]Type for _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
_reserve1_1(uint256) := ϕ(['_reserve1_1', 'TMP_105', 'TMP_114', '_reserve1_1', '_reserve1_1'])
[i]Type for _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
token0PrecisionMultiplier_2(uint256) := ϕ(['token0PrecisionMultiplier_0', 'token0PrecisionMultiplier_1', 'token0PrecisionMultiplier_4'])
[i]Type for token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
token1PrecisionMultiplier_2(uint256) := ϕ(['token1PrecisionMultiplier_4', 'token1PrecisionMultiplier_1', 'token1PrecisionMultiplier_0'])
[i]Type for token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_196(uint256) = _reserve0_1 (c)* token0PrecisionMultiplier_2
[i]Type for TMP_196

Name: TMP_196 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
xpIn_1(uint256) := TMP_196(uint256)
Finance type key: (-1, -1)
[i]Type for xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_197(uint256) = _reserve1_1 (c)* token1PrecisionMultiplier_2
[i]Type for TMP_197

Name: TMP_197 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
xpOut_1(uint256) := TMP_197(uint256)
Finance type key: (-1, -1)
[i]Type for xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_198(uint256) = _reserve1_1 (c)* token1PrecisionMultiplier_2
[i]Type for TMP_198

Name: TMP_198 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
xpIn_2(uint256) := TMP_198(uint256)
Finance type key: (-1, -1)
[i]Type for xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
amountIn_2(uint256) = amountIn_1 (c)* token0PrecisionMultiplier_2
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: updated simple fee ratio
TMP_199(uint256) = _reserve0_1 (c)* token0PrecisionMultiplier_2
[i]Type for TMP_199

Name: TMP_199 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
xpOut_2(uint256) := TMP_199(uint256)
Finance type key: (-1, -1)
[i]Type for xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
amountIn_4(uint256) := ϕ(['amountIn_3', 'amountIn_2'])
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
xpIn_3(uint256) := ϕ(['xpIn_1', 'xpIn_2'])
[i]Type for xpIn

Name: xpIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
xpOut_3(uint256) := ϕ(['xpOut_1', 'xpOut_2'])
[i]Type for xpOut

Name: xpOut Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_200(uint256) = INTERNAL_CALL, HybridPool._computeLiquidityFromAdjustedBalances(uint256,uint256)(xpIn_3,xpOut_3)
xp0_1(uint256) := ϕ(['xpIn_3', 'xp0_1'])
[i]Type for xp0

Name: xp0 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
xp1_1(uint256) := ϕ(['xpOut_3', 'xp1_1'])
[i]Type for xp1

Name: xp1 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MAX_LOOP_LIMIT_1(uint256) := ϕ(['MAX_LOOP_LIMIT_0'])
[i]Type for MAX_LOOP_LIMIT

Name: MAX_LOOP_LIMIT Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
N_A_2(uint256) := ϕ(['N_A_0', 'N_A_1'])
[i]Type for N_A

Name: N_A Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
A_PRECISION_1(uint256) := ϕ(['A_PRECISION_0'])
[i]Type for A_PRECISION

Name: A_PRECISION Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_215(uint256) = xp0_1 (c)+ xp1_1
[i]Type for TMP_215

Name: TMP_215 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
s_1(uint256) := TMP_215(uint256)
Finance type key: (-1, -1)
[i]Type for s

Name: s Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_216(bool) = s_1 == 0
[i]Type for TMP_216

Name: TMP_216 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
computed_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for computed

Name: computed Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
D_1(uint256) := s_1(uint256)
Finance type key: (-1, -1)
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
D_2(uint256) := ϕ(['D_3', 'D_1'])
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
i_2(uint256) := ϕ(['i_3', 'i_1'])
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_217(bool) = i_2 < MAX_LOOP_LIMIT_1
[i]Type for TMP_217

Name: TMP_217 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_218(uint256) = D_2 (c)* D_2
Finance type key: (40, 40)
[i]Type for TMP_218

Name: TMP_218 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_219(uint256) = TMP_218 (c)/ xp0_1
[i]Type for TMP_219

Name: TMP_219 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_220(uint256) = TMP_219 (c)* D_2
[i]Type for TMP_220

Name: TMP_220 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
TMP_221(uint256) = TMP_220 (c)/ xp1_1
[i]Type for TMP_221

Name: TMP_221 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
TMP_222(uint256) = TMP_221 (c)/ 4
[i]Type for TMP_222

Name: TMP_222 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: price/exchange rate
dP_1(uint256) := TMP_222(uint256)
Finance type key: (40, -1)
[i]Type for dP

Name: dP Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: price/exchange rate
prevD_1(uint256) := D_2(uint256)
Finance type key: (40, -1)
[i]Type for prevD

Name: prevD Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
computed_2(uint256) := D_3(uint256)
Finance type key: (40, -1)
[i]Type for computed

Name: computed Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
TMP_223(uint256) = N_A_2 (c)* s_1
[i]Type for TMP_223

Name: TMP_223 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_224(uint256) = TMP_223 (c)/ A_PRECISION_1
[i]Type for TMP_224

Name: TMP_224 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_225(uint256) = 2 (c)* dP_1
[i]Type for TMP_225

Name: TMP_225 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: price/exchange rate
TMP_226(uint256) = TMP_224 (c)+ TMP_225
[i]Type for TMP_226

Name: TMP_226 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: price/exchange rate
TMP_227(uint256) = TMP_226 (c)* D_2
Finance type key: (40, 40)
[i]Type for TMP_227

Name: TMP_227 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_228(uint256) = N_A_2 (c)/ A_PRECISION_1
[i]Type for TMP_228

Name: TMP_228 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_229(uint256) = TMP_228 (c)- 1
[i]Type for TMP_229

Name: TMP_229 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
TMP_230(uint256) = TMP_229 (c)* D_2
[i]Type for TMP_230

Name: TMP_230 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: price/exchange rate
TMP_231(uint256) = 3 (c)* dP_1
[i]Type for TMP_231

Name: TMP_231 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 12
Fields: 
Finance Type: price/exchange rate
TMP_232(uint256) = TMP_230 (c)+ TMP_231
Finance type key: (40, 40)
[i]Type for TMP_232

Name: TMP_232 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 13
Fields: 
Finance Type: price/exchange rate
TMP_233(uint256) = TMP_227 (c)/ TMP_232
[i]Type for TMP_233

Name: TMP_233 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
D_3(uint256) := TMP_233(uint256)
Finance type key: (40, -1)
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
TMP_234(bool) = LIBRARY_CALL, dest:MathUtils, function:MathUtils.within1(uint256,uint256), arguments:['D_3', 'prevD_1'] 
[i]Type for TMP_234

Name: TMP_234 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_235(uint256) := i_2(uint256)
Finance type key: (-1, -1)
[i]Type for TMP_235

Name: TMP_235 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_3(uint256) = i_2 (c)+ 1
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
xp0_1(uint256) := ϕ(['xpIn_3', 'xp0_1'])
[i]Type for xp0

Name: xp0 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
xp1_1(uint256) := ϕ(['xpOut_3', 'xp1_1'])
[i]Type for xp1

Name: xp1 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MAX_LOOP_LIMIT_1(uint256) := ϕ(['MAX_LOOP_LIMIT_0'])
[i]Type for MAX_LOOP_LIMIT

Name: MAX_LOOP_LIMIT Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
N_A_2(uint256) := ϕ(['N_A_0', 'N_A_1'])
[i]Type for N_A

Name: N_A Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
A_PRECISION_1(uint256) := ϕ(['A_PRECISION_0'])
[i]Type for A_PRECISION

Name: A_PRECISION Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_215(uint256) = xp0_1 (c)+ xp1_1
[i]Type for TMP_215

Name: TMP_215 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
s_1(uint256) := TMP_215(uint256)
Finance type key: (-1, -1)
[i]Type for s

Name: s Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_216(bool) = s_1 == 0
[i]Type for TMP_216

Name: TMP_216 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
computed_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for computed

Name: computed Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
D_1(uint256) := s_1(uint256)
Finance type key: (-1, -1)
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
D_2(uint256) := ϕ(['D_3', 'D_1'])
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
i_2(uint256) := ϕ(['i_3', 'i_1'])
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_217(bool) = i_2 < MAX_LOOP_LIMIT_1
[i]Type for TMP_217

Name: TMP_217 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_218(uint256) = D_2 (c)* D_2
Finance type key: (40, 40)
[i]Type for TMP_218

Name: TMP_218 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_219(uint256) = TMP_218 (c)/ xp0_1
[i]Type for TMP_219

Name: TMP_219 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_220(uint256) = TMP_219 (c)* D_2
[i]Type for TMP_220

Name: TMP_220 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
TMP_221(uint256) = TMP_220 (c)/ xp1_1
[i]Type for TMP_221

Name: TMP_221 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
TMP_222(uint256) = TMP_221 (c)/ 4
[i]Type for TMP_222

Name: TMP_222 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: price/exchange rate
dP_1(uint256) := TMP_222(uint256)
Finance type key: (40, -1)
[i]Type for dP

Name: dP Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: price/exchange rate
prevD_1(uint256) := D_2(uint256)
Finance type key: (40, -1)
[i]Type for prevD

Name: prevD Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
computed_2(uint256) := D_3(uint256)
Finance type key: (40, -1)
[i]Type for computed

Name: computed Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
TMP_223(uint256) = N_A_2 (c)* s_1
[i]Type for TMP_223

Name: TMP_223 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_224(uint256) = TMP_223 (c)/ A_PRECISION_1
[i]Type for TMP_224

Name: TMP_224 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_225(uint256) = 2 (c)* dP_1
[i]Type for TMP_225

Name: TMP_225 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: price/exchange rate
TMP_226(uint256) = TMP_224 (c)+ TMP_225
[i]Type for TMP_226

Name: TMP_226 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: price/exchange rate
TMP_227(uint256) = TMP_226 (c)* D_2
Finance type key: (40, 40)
[i]Type for TMP_227

Name: TMP_227 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_228(uint256) = N_A_2 (c)/ A_PRECISION_1
[i]Type for TMP_228

Name: TMP_228 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_229(uint256) = TMP_228 (c)- 1
[i]Type for TMP_229

Name: TMP_229 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
TMP_230(uint256) = TMP_229 (c)* D_2
[i]Type for TMP_230

Name: TMP_230 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: price/exchange rate
TMP_231(uint256) = 3 (c)* dP_1
[i]Type for TMP_231

Name: TMP_231 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 12
Fields: 
Finance Type: price/exchange rate
TMP_232(uint256) = TMP_230 (c)+ TMP_231
Finance type key: (40, 40)
[i]Type for TMP_232

Name: TMP_232 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 13
Fields: 
Finance Type: price/exchange rate
TMP_233(uint256) = TMP_227 (c)/ TMP_232
[i]Type for TMP_233

Name: TMP_233 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
D_3(uint256) := TMP_233(uint256)
Finance type key: (40, -1)
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
TMP_234(bool) = LIBRARY_CALL, dest:MathUtils, function:MathUtils.within1(uint256,uint256), arguments:['D_3', 'prevD_1'] 
[i]Type for TMP_234

Name: TMP_234 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_235(uint256) := i_2(uint256)
Finance type key: (-1, -1)
[i]Type for TMP_235

Name: TMP_235 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_3(uint256) = i_2 (c)+ 1
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
[i]Type for TMP_200

Name: TMP_200 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
d_1(uint256) := TMP_200(uint256)
Finance type key: (-1, -1)
[i]Type for d

Name: d Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_201(uint256) = xpIn_3 (c)+ amountIn_4
[i]Type for TMP_201

Name: TMP_201 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
x_1(uint256) := TMP_201(uint256)
Finance type key: (12, -1)
[i]Type for x

Name: x Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
amountIn_3(uint256) = amountIn_1 (c)* token1PrecisionMultiplier_2
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: updated simple fee ratio
TMP_202(uint256) = INTERNAL_CALL, HybridPool._getY(uint256,uint256)(x_1,d_1)
x_1(uint256) := ϕ(['x_1'])
[i]Type for x

Name: x Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
D_1(uint256) := ϕ(['d_1'])
[i]Type for D

Name: D Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MAX_LOOP_LIMIT_2(uint256) := ϕ(['MAX_LOOP_LIMIT_0'])
[i]Type for MAX_LOOP_LIMIT

Name: MAX_LOOP_LIMIT Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
N_A_3(uint256) := ϕ(['N_A_0', 'N_A_1'])
[i]Type for N_A

Name: N_A Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
A_PRECISION_2(uint256) := ϕ(['A_PRECISION_0'])
[i]Type for A_PRECISION

Name: A_PRECISION Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_236(uint256) = D_1 (c)* D_1
[i]Type for TMP_236

Name: TMP_236 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_237(uint256) = x_1 (c)* 2
[i]Type for TMP_237

Name: TMP_237 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
TMP_238(uint256) = TMP_236 (c)/ TMP_237
[i]Type for TMP_238

Name: TMP_238 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
c_1(uint256) := TMP_238(uint256)
Finance type key: (12, -1)
[i]Type for c

Name: c Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
TMP_239(uint256) = c_1 (c)* D_1
[i]Type for TMP_239

Name: TMP_239 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
TMP_240(uint256) = N_A_3 (c)* 2
[i]Type for TMP_240

Name: TMP_240 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
TMP_241(uint256) = TMP_240 (c)/ A_PRECISION_2
[i]Type for TMP_241

Name: TMP_241 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
TMP_242(uint256) = TMP_239 (c)/ TMP_241
[i]Type for TMP_242

Name: TMP_242 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: updated simple fee ratio
c_2(uint256) := TMP_242(uint256)
Finance type key: (12, -1)
[i]Type for c

Name: c Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: updated simple fee ratio
TMP_243(uint256) = D_1 (c)* A_PRECISION_2
[i]Type for TMP_243

Name: TMP_243 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_244(uint256) = TMP_243 (c)/ N_A_3
[i]Type for TMP_244

Name: TMP_244 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_245(uint256) = x_1 (c)+ TMP_244
[i]Type for TMP_245

Name: TMP_245 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
b_1(uint256) := TMP_245(uint256)
Finance type key: (12, -1)
[i]Type for b

Name: b Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
y_1(uint256) := D_1(uint256)
Finance type key: (-1, -1)
[i]Type for y

Name: y Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for i

Name: i Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
y_2(uint256) := ϕ(['y_1', 'y_3'])
[i]Type for y

Name: y Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_2(uint256) := ϕ(['i_1', 'i_3'])
[i]Type for i

Name: i Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_246(bool) = i_2 < MAX_LOOP_LIMIT_2
[i]Type for TMP_246

Name: TMP_246 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
yPrev_1(uint256) := y_2(uint256)
Finance type key: (-1, -1)
[i]Type for yPrev

Name: yPrev Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_247(uint256) = y_2 (c)* y_2
[i]Type for TMP_247

Name: TMP_247 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_248(uint256) = TMP_247 (c)+ c_2
[i]Type for TMP_248

Name: TMP_248 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: updated simple fee ratio
TMP_249(uint256) = y_2 (c)* 2
[i]Type for TMP_249

Name: TMP_249 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_250(uint256) = TMP_249 (c)+ b_1
[i]Type for TMP_250

Name: TMP_250 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: updated simple fee ratio
TMP_251(uint256) = TMP_250 (c)- D_1
[i]Type for TMP_251

Name: TMP_251 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: updated simple fee ratio
TMP_252(uint256) = TMP_248 (c)/ TMP_251
Finance type key: (12, 12)
Finance type key: (12, 12)
[i]Type for TMP_252

Name: TMP_252 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
y_3(uint256) := TMP_252(uint256)
Finance type key: (-1, -1)
[i]Type for y

Name: y Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_253(bool) = LIBRARY_CALL, dest:MathUtils, function:MathUtils.within1(uint256,uint256), arguments:['y_3', 'yPrev_1'] 
[i]Type for TMP_253

Name: TMP_253 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_254(uint256) := i_2(uint256)
Finance type key: (-1, -1)
[i]Type for TMP_254

Name: TMP_254 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_3(uint256) = i_2 (c)+ 1
[i]Type for i

Name: i Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
x_1(uint256) := ϕ(['x_1'])
[i]Type for x

Name: x Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
D_1(uint256) := ϕ(['d_1'])
[i]Type for D

Name: D Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MAX_LOOP_LIMIT_2(uint256) := ϕ(['MAX_LOOP_LIMIT_0'])
[i]Type for MAX_LOOP_LIMIT

Name: MAX_LOOP_LIMIT Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
N_A_3(uint256) := ϕ(['N_A_0', 'N_A_1'])
[i]Type for N_A

Name: N_A Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
A_PRECISION_2(uint256) := ϕ(['A_PRECISION_0'])
[i]Type for A_PRECISION

Name: A_PRECISION Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_236(uint256) = D_1 (c)* D_1
[i]Type for TMP_236

Name: TMP_236 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_237(uint256) = x_1 (c)* 2
[i]Type for TMP_237

Name: TMP_237 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
TMP_238(uint256) = TMP_236 (c)/ TMP_237
[i]Type for TMP_238

Name: TMP_238 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
c_1(uint256) := TMP_238(uint256)
Finance type key: (12, -1)
[i]Type for c

Name: c Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
TMP_239(uint256) = c_1 (c)* D_1
[i]Type for TMP_239

Name: TMP_239 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
TMP_240(uint256) = N_A_3 (c)* 2
[i]Type for TMP_240

Name: TMP_240 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
TMP_241(uint256) = TMP_240 (c)/ A_PRECISION_2
[i]Type for TMP_241

Name: TMP_241 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
TMP_242(uint256) = TMP_239 (c)/ TMP_241
[i]Type for TMP_242

Name: TMP_242 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: updated simple fee ratio
c_2(uint256) := TMP_242(uint256)
Finance type key: (12, -1)
[i]Type for c

Name: c Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: updated simple fee ratio
TMP_243(uint256) = D_1 (c)* A_PRECISION_2
[i]Type for TMP_243

Name: TMP_243 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_244(uint256) = TMP_243 (c)/ N_A_3
[i]Type for TMP_244

Name: TMP_244 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_245(uint256) = x_1 (c)+ TMP_244
[i]Type for TMP_245

Name: TMP_245 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
b_1(uint256) := TMP_245(uint256)
Finance type key: (12, -1)
[i]Type for b

Name: b Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
y_1(uint256) := D_1(uint256)
Finance type key: (-1, -1)
[i]Type for y

Name: y Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for i

Name: i Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
y_2(uint256) := ϕ(['y_1', 'y_3'])
[i]Type for y

Name: y Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_2(uint256) := ϕ(['i_1', 'i_3'])
[i]Type for i

Name: i Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_246(bool) = i_2 < MAX_LOOP_LIMIT_2
[i]Type for TMP_246

Name: TMP_246 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
yPrev_1(uint256) := y_2(uint256)
Finance type key: (-1, -1)
[i]Type for yPrev

Name: yPrev Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_247(uint256) = y_2 (c)* y_2
[i]Type for TMP_247

Name: TMP_247 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_248(uint256) = TMP_247 (c)+ c_2
[i]Type for TMP_248

Name: TMP_248 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: updated simple fee ratio
TMP_249(uint256) = y_2 (c)* 2
[i]Type for TMP_249

Name: TMP_249 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_250(uint256) = TMP_249 (c)+ b_1
[i]Type for TMP_250

Name: TMP_250 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: updated simple fee ratio
TMP_251(uint256) = TMP_250 (c)- D_1
[i]Type for TMP_251

Name: TMP_251 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: updated simple fee ratio
TMP_252(uint256) = TMP_248 (c)/ TMP_251
Finance type key: (12, 12)
Finance type key: (12, 12)
[i]Type for TMP_252

Name: TMP_252 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
y_3(uint256) := TMP_252(uint256)
Finance type key: (-1, -1)
[i]Type for y

Name: y Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_253(bool) = LIBRARY_CALL, dest:MathUtils, function:MathUtils.within1(uint256,uint256), arguments:['y_3', 'yPrev_1'] 
[i]Type for TMP_253

Name: TMP_253 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_254(uint256) := i_2(uint256)
Finance type key: (-1, -1)
[i]Type for TMP_254

Name: TMP_254 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_3(uint256) = i_2 (c)+ 1
[i]Type for i

Name: i Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
[i]Type for TMP_202

Name: TMP_202 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
y_1(uint256) := TMP_202(uint256)
Finance type key: (-1, -1)
[i]Type for y

Name: y Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_203(uint256) = xpOut_3 (c)- y_1
[i]Type for TMP_203

Name: TMP_203 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_204(uint256) = TMP_203 (c)- 1
[i]Type for TMP_204

Name: TMP_204 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
dy_1(uint256) := TMP_204(uint256)
Finance type key: (-1, -1)
[i]Type for dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
dy_2(uint256) = dy_1 (c)/ token1PrecisionMultiplier_4
[i]Type for dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
dy_3(uint256) = dy_1 (c)/ token0PrecisionMultiplier_4
[i]Type for dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
[i]Type for TMP_302

Name: TMP_302 Function: getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
finalAmountOut_1(uint256) := TMP_302(uint256)
Finance type key: (-1, -1)
[i]Type for finalAmountOut

Name: finalAmountOut Function: getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_301(uint256) = INTERNAL_CALL, HybridPool._getAmountOut(uint256,uint256,uint256,bool)(amountIn_3,_reserve0_1,_reserve1_1,True)
amountIn_1(uint256) := ϕ(['TMP_153', 'TMP_124', 'TMP_103', 'TMP_112', 'TMP_130', 'TMP_140', 'amountIn_3'])
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
_reserve0_1(uint256) := ϕ(['_reserve0_1', '_reserve0_1', '_reserve0_1', 'TMP_104', 'TMP_113'])
[i]Type for _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
_reserve1_1(uint256) := ϕ(['_reserve1_1', 'TMP_105', 'TMP_114', '_reserve1_1', '_reserve1_1'])
[i]Type for _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
token0PrecisionMultiplier_2(uint256) := ϕ(['token0PrecisionMultiplier_0', 'token0PrecisionMultiplier_1', 'token0PrecisionMultiplier_4'])
[i]Type for token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
token1PrecisionMultiplier_2(uint256) := ϕ(['token1PrecisionMultiplier_4', 'token1PrecisionMultiplier_1', 'token1PrecisionMultiplier_0'])
[i]Type for token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_196(uint256) = _reserve0_1 (c)* token0PrecisionMultiplier_2
[i]Type for TMP_196

Name: TMP_196 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
xpIn_1(uint256) := TMP_196(uint256)
Finance type key: (-1, -1)
[i]Type for xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_197(uint256) = _reserve1_1 (c)* token1PrecisionMultiplier_2
[i]Type for TMP_197

Name: TMP_197 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
xpOut_1(uint256) := TMP_197(uint256)
Finance type key: (-1, -1)
[i]Type for xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_198(uint256) = _reserve1_1 (c)* token1PrecisionMultiplier_2
[i]Type for TMP_198

Name: TMP_198 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
xpIn_2(uint256) := TMP_198(uint256)
Finance type key: (-1, -1)
[i]Type for xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
amountIn_2(uint256) = amountIn_1 (c)* token0PrecisionMultiplier_2
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: updated simple fee ratio
TMP_199(uint256) = _reserve0_1 (c)* token0PrecisionMultiplier_2
[i]Type for TMP_199

Name: TMP_199 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
xpOut_2(uint256) := TMP_199(uint256)
Finance type key: (-1, -1)
[i]Type for xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
amountIn_4(uint256) := ϕ(['amountIn_3', 'amountIn_2'])
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
xpIn_3(uint256) := ϕ(['xpIn_1', 'xpIn_2'])
[i]Type for xpIn

Name: xpIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
xpOut_3(uint256) := ϕ(['xpOut_1', 'xpOut_2'])
[i]Type for xpOut

Name: xpOut Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_200(uint256) = INTERNAL_CALL, HybridPool._computeLiquidityFromAdjustedBalances(uint256,uint256)(xpIn_3,xpOut_3)
xp0_1(uint256) := ϕ(['xpIn_3', 'xp0_1'])
[i]Type for xp0

Name: xp0 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
xp1_1(uint256) := ϕ(['xpOut_3', 'xp1_1'])
[i]Type for xp1

Name: xp1 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MAX_LOOP_LIMIT_1(uint256) := ϕ(['MAX_LOOP_LIMIT_0'])
[i]Type for MAX_LOOP_LIMIT

Name: MAX_LOOP_LIMIT Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
N_A_2(uint256) := ϕ(['N_A_0', 'N_A_1'])
[i]Type for N_A

Name: N_A Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
A_PRECISION_1(uint256) := ϕ(['A_PRECISION_0'])
[i]Type for A_PRECISION

Name: A_PRECISION Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_215(uint256) = xp0_1 (c)+ xp1_1
[i]Type for TMP_215

Name: TMP_215 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
s_1(uint256) := TMP_215(uint256)
Finance type key: (-1, -1)
[i]Type for s

Name: s Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_216(bool) = s_1 == 0
[i]Type for TMP_216

Name: TMP_216 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
computed_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for computed

Name: computed Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
D_1(uint256) := s_1(uint256)
Finance type key: (-1, -1)
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
D_2(uint256) := ϕ(['D_3', 'D_1'])
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
i_2(uint256) := ϕ(['i_3', 'i_1'])
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_217(bool) = i_2 < MAX_LOOP_LIMIT_1
[i]Type for TMP_217

Name: TMP_217 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_218(uint256) = D_2 (c)* D_2
Finance type key: (40, 40)
[i]Type for TMP_218

Name: TMP_218 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_219(uint256) = TMP_218 (c)/ xp0_1
[i]Type for TMP_219

Name: TMP_219 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_220(uint256) = TMP_219 (c)* D_2
[i]Type for TMP_220

Name: TMP_220 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
TMP_221(uint256) = TMP_220 (c)/ xp1_1
[i]Type for TMP_221

Name: TMP_221 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
TMP_222(uint256) = TMP_221 (c)/ 4
[i]Type for TMP_222

Name: TMP_222 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: price/exchange rate
dP_1(uint256) := TMP_222(uint256)
Finance type key: (40, -1)
[i]Type for dP

Name: dP Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: price/exchange rate
prevD_1(uint256) := D_2(uint256)
Finance type key: (40, -1)
[i]Type for prevD

Name: prevD Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
computed_2(uint256) := D_3(uint256)
Finance type key: (40, -1)
[i]Type for computed

Name: computed Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
TMP_223(uint256) = N_A_2 (c)* s_1
[i]Type for TMP_223

Name: TMP_223 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_224(uint256) = TMP_223 (c)/ A_PRECISION_1
[i]Type for TMP_224

Name: TMP_224 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_225(uint256) = 2 (c)* dP_1
[i]Type for TMP_225

Name: TMP_225 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: price/exchange rate
TMP_226(uint256) = TMP_224 (c)+ TMP_225
[i]Type for TMP_226

Name: TMP_226 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: price/exchange rate
TMP_227(uint256) = TMP_226 (c)* D_2
Finance type key: (40, 40)
[i]Type for TMP_227

Name: TMP_227 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_228(uint256) = N_A_2 (c)/ A_PRECISION_1
[i]Type for TMP_228

Name: TMP_228 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_229(uint256) = TMP_228 (c)- 1
[i]Type for TMP_229

Name: TMP_229 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
TMP_230(uint256) = TMP_229 (c)* D_2
[i]Type for TMP_230

Name: TMP_230 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: price/exchange rate
TMP_231(uint256) = 3 (c)* dP_1
[i]Type for TMP_231

Name: TMP_231 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 12
Fields: 
Finance Type: price/exchange rate
TMP_232(uint256) = TMP_230 (c)+ TMP_231
Finance type key: (40, 40)
[i]Type for TMP_232

Name: TMP_232 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 13
Fields: 
Finance Type: price/exchange rate
TMP_233(uint256) = TMP_227 (c)/ TMP_232
[i]Type for TMP_233

Name: TMP_233 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
D_3(uint256) := TMP_233(uint256)
Finance type key: (40, -1)
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
TMP_234(bool) = LIBRARY_CALL, dest:MathUtils, function:MathUtils.within1(uint256,uint256), arguments:['D_3', 'prevD_1'] 
[i]Type for TMP_234

Name: TMP_234 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_235(uint256) := i_2(uint256)
Finance type key: (-1, -1)
[i]Type for TMP_235

Name: TMP_235 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_3(uint256) = i_2 (c)+ 1
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
xp0_1(uint256) := ϕ(['xpIn_3', 'xp0_1'])
[i]Type for xp0

Name: xp0 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
xp1_1(uint256) := ϕ(['xpOut_3', 'xp1_1'])
[i]Type for xp1

Name: xp1 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MAX_LOOP_LIMIT_1(uint256) := ϕ(['MAX_LOOP_LIMIT_0'])
[i]Type for MAX_LOOP_LIMIT

Name: MAX_LOOP_LIMIT Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
N_A_2(uint256) := ϕ(['N_A_0', 'N_A_1'])
[i]Type for N_A

Name: N_A Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
A_PRECISION_1(uint256) := ϕ(['A_PRECISION_0'])
[i]Type for A_PRECISION

Name: A_PRECISION Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_215(uint256) = xp0_1 (c)+ xp1_1
[i]Type for TMP_215

Name: TMP_215 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
s_1(uint256) := TMP_215(uint256)
Finance type key: (-1, -1)
[i]Type for s

Name: s Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_216(bool) = s_1 == 0
[i]Type for TMP_216

Name: TMP_216 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
computed_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for computed

Name: computed Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
D_1(uint256) := s_1(uint256)
Finance type key: (-1, -1)
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
D_2(uint256) := ϕ(['D_3', 'D_1'])
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
i_2(uint256) := ϕ(['i_3', 'i_1'])
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_217(bool) = i_2 < MAX_LOOP_LIMIT_1
[i]Type for TMP_217

Name: TMP_217 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_218(uint256) = D_2 (c)* D_2
Finance type key: (40, 40)
[i]Type for TMP_218

Name: TMP_218 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_219(uint256) = TMP_218 (c)/ xp0_1
[i]Type for TMP_219

Name: TMP_219 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_220(uint256) = TMP_219 (c)* D_2
[i]Type for TMP_220

Name: TMP_220 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
TMP_221(uint256) = TMP_220 (c)/ xp1_1
[i]Type for TMP_221

Name: TMP_221 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
TMP_222(uint256) = TMP_221 (c)/ 4
[i]Type for TMP_222

Name: TMP_222 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: price/exchange rate
dP_1(uint256) := TMP_222(uint256)
Finance type key: (40, -1)
[i]Type for dP

Name: dP Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: price/exchange rate
prevD_1(uint256) := D_2(uint256)
Finance type key: (40, -1)
[i]Type for prevD

Name: prevD Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
computed_2(uint256) := D_3(uint256)
Finance type key: (40, -1)
[i]Type for computed

Name: computed Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
TMP_223(uint256) = N_A_2 (c)* s_1
[i]Type for TMP_223

Name: TMP_223 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_224(uint256) = TMP_223 (c)/ A_PRECISION_1
[i]Type for TMP_224

Name: TMP_224 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_225(uint256) = 2 (c)* dP_1
[i]Type for TMP_225

Name: TMP_225 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: price/exchange rate
TMP_226(uint256) = TMP_224 (c)+ TMP_225
[i]Type for TMP_226

Name: TMP_226 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: price/exchange rate
TMP_227(uint256) = TMP_226 (c)* D_2
Finance type key: (40, 40)
[i]Type for TMP_227

Name: TMP_227 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_228(uint256) = N_A_2 (c)/ A_PRECISION_1
[i]Type for TMP_228

Name: TMP_228 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_229(uint256) = TMP_228 (c)- 1
[i]Type for TMP_229

Name: TMP_229 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
TMP_230(uint256) = TMP_229 (c)* D_2
[i]Type for TMP_230

Name: TMP_230 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: price/exchange rate
TMP_231(uint256) = 3 (c)* dP_1
[i]Type for TMP_231

Name: TMP_231 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 12
Fields: 
Finance Type: price/exchange rate
TMP_232(uint256) = TMP_230 (c)+ TMP_231
Finance type key: (40, 40)
[i]Type for TMP_232

Name: TMP_232 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 13
Fields: 
Finance Type: price/exchange rate
TMP_233(uint256) = TMP_227 (c)/ TMP_232
[i]Type for TMP_233

Name: TMP_233 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
D_3(uint256) := TMP_233(uint256)
Finance type key: (40, -1)
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
TMP_234(bool) = LIBRARY_CALL, dest:MathUtils, function:MathUtils.within1(uint256,uint256), arguments:['D_3', 'prevD_1'] 
[i]Type for TMP_234

Name: TMP_234 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_235(uint256) := i_2(uint256)
Finance type key: (-1, -1)
[i]Type for TMP_235

Name: TMP_235 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_3(uint256) = i_2 (c)+ 1
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
[i]Type for TMP_200

Name: TMP_200 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
d_1(uint256) := TMP_200(uint256)
Finance type key: (-1, -1)
[i]Type for d

Name: d Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_201(uint256) = xpIn_3 (c)+ amountIn_4
[i]Type for TMP_201

Name: TMP_201 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
x_1(uint256) := TMP_201(uint256)
Finance type key: (12, -1)
[i]Type for x

Name: x Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
amountIn_3(uint256) = amountIn_1 (c)* token1PrecisionMultiplier_2
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: updated simple fee ratio
TMP_202(uint256) = INTERNAL_CALL, HybridPool._getY(uint256,uint256)(x_1,d_1)
x_1(uint256) := ϕ(['x_1'])
[i]Type for x

Name: x Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
D_1(uint256) := ϕ(['d_1'])
[i]Type for D

Name: D Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MAX_LOOP_LIMIT_2(uint256) := ϕ(['MAX_LOOP_LIMIT_0'])
[i]Type for MAX_LOOP_LIMIT

Name: MAX_LOOP_LIMIT Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
N_A_3(uint256) := ϕ(['N_A_0', 'N_A_1'])
[i]Type for N_A

Name: N_A Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
A_PRECISION_2(uint256) := ϕ(['A_PRECISION_0'])
[i]Type for A_PRECISION

Name: A_PRECISION Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_236(uint256) = D_1 (c)* D_1
[i]Type for TMP_236

Name: TMP_236 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_237(uint256) = x_1 (c)* 2
[i]Type for TMP_237

Name: TMP_237 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
TMP_238(uint256) = TMP_236 (c)/ TMP_237
[i]Type for TMP_238

Name: TMP_238 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
c_1(uint256) := TMP_238(uint256)
Finance type key: (12, -1)
[i]Type for c

Name: c Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
TMP_239(uint256) = c_1 (c)* D_1
[i]Type for TMP_239

Name: TMP_239 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
TMP_240(uint256) = N_A_3 (c)* 2
[i]Type for TMP_240

Name: TMP_240 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
TMP_241(uint256) = TMP_240 (c)/ A_PRECISION_2
[i]Type for TMP_241

Name: TMP_241 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
TMP_242(uint256) = TMP_239 (c)/ TMP_241
[i]Type for TMP_242

Name: TMP_242 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: updated simple fee ratio
c_2(uint256) := TMP_242(uint256)
Finance type key: (12, -1)
[i]Type for c

Name: c Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: updated simple fee ratio
TMP_243(uint256) = D_1 (c)* A_PRECISION_2
[i]Type for TMP_243

Name: TMP_243 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_244(uint256) = TMP_243 (c)/ N_A_3
[i]Type for TMP_244

Name: TMP_244 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_245(uint256) = x_1 (c)+ TMP_244
[i]Type for TMP_245

Name: TMP_245 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
b_1(uint256) := TMP_245(uint256)
Finance type key: (12, -1)
[i]Type for b

Name: b Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
y_1(uint256) := D_1(uint256)
Finance type key: (-1, -1)
[i]Type for y

Name: y Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for i

Name: i Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
y_2(uint256) := ϕ(['y_1', 'y_3'])
[i]Type for y

Name: y Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_2(uint256) := ϕ(['i_1', 'i_3'])
[i]Type for i

Name: i Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_246(bool) = i_2 < MAX_LOOP_LIMIT_2
[i]Type for TMP_246

Name: TMP_246 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
yPrev_1(uint256) := y_2(uint256)
Finance type key: (-1, -1)
[i]Type for yPrev

Name: yPrev Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_247(uint256) = y_2 (c)* y_2
[i]Type for TMP_247

Name: TMP_247 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_248(uint256) = TMP_247 (c)+ c_2
[i]Type for TMP_248

Name: TMP_248 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: updated simple fee ratio
TMP_249(uint256) = y_2 (c)* 2
[i]Type for TMP_249

Name: TMP_249 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_250(uint256) = TMP_249 (c)+ b_1
[i]Type for TMP_250

Name: TMP_250 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: updated simple fee ratio
TMP_251(uint256) = TMP_250 (c)- D_1
[i]Type for TMP_251

Name: TMP_251 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: updated simple fee ratio
TMP_252(uint256) = TMP_248 (c)/ TMP_251
Finance type key: (12, 12)
Finance type key: (12, 12)
[i]Type for TMP_252

Name: TMP_252 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
y_3(uint256) := TMP_252(uint256)
Finance type key: (-1, -1)
[i]Type for y

Name: y Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_253(bool) = LIBRARY_CALL, dest:MathUtils, function:MathUtils.within1(uint256,uint256), arguments:['y_3', 'yPrev_1'] 
[i]Type for TMP_253

Name: TMP_253 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_254(uint256) := i_2(uint256)
Finance type key: (-1, -1)
[i]Type for TMP_254

Name: TMP_254 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_3(uint256) = i_2 (c)+ 1
[i]Type for i

Name: i Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
x_1(uint256) := ϕ(['x_1'])
[i]Type for x

Name: x Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
D_1(uint256) := ϕ(['d_1'])
[i]Type for D

Name: D Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MAX_LOOP_LIMIT_2(uint256) := ϕ(['MAX_LOOP_LIMIT_0'])
[i]Type for MAX_LOOP_LIMIT

Name: MAX_LOOP_LIMIT Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
N_A_3(uint256) := ϕ(['N_A_0', 'N_A_1'])
[i]Type for N_A

Name: N_A Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
A_PRECISION_2(uint256) := ϕ(['A_PRECISION_0'])
[i]Type for A_PRECISION

Name: A_PRECISION Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_236(uint256) = D_1 (c)* D_1
[i]Type for TMP_236

Name: TMP_236 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_237(uint256) = x_1 (c)* 2
[i]Type for TMP_237

Name: TMP_237 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
TMP_238(uint256) = TMP_236 (c)/ TMP_237
[i]Type for TMP_238

Name: TMP_238 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
c_1(uint256) := TMP_238(uint256)
Finance type key: (12, -1)
[i]Type for c

Name: c Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
TMP_239(uint256) = c_1 (c)* D_1
[i]Type for TMP_239

Name: TMP_239 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
TMP_240(uint256) = N_A_3 (c)* 2
[i]Type for TMP_240

Name: TMP_240 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
TMP_241(uint256) = TMP_240 (c)/ A_PRECISION_2
[i]Type for TMP_241

Name: TMP_241 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
TMP_242(uint256) = TMP_239 (c)/ TMP_241
[i]Type for TMP_242

Name: TMP_242 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: updated simple fee ratio
c_2(uint256) := TMP_242(uint256)
Finance type key: (12, -1)
[i]Type for c

Name: c Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: updated simple fee ratio
TMP_243(uint256) = D_1 (c)* A_PRECISION_2
[i]Type for TMP_243

Name: TMP_243 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_244(uint256) = TMP_243 (c)/ N_A_3
[i]Type for TMP_244

Name: TMP_244 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_245(uint256) = x_1 (c)+ TMP_244
[i]Type for TMP_245

Name: TMP_245 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
b_1(uint256) := TMP_245(uint256)
Finance type key: (12, -1)
[i]Type for b

Name: b Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
y_1(uint256) := D_1(uint256)
Finance type key: (-1, -1)
[i]Type for y

Name: y Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for i

Name: i Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
y_2(uint256) := ϕ(['y_1', 'y_3'])
[i]Type for y

Name: y Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_2(uint256) := ϕ(['i_1', 'i_3'])
[i]Type for i

Name: i Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_246(bool) = i_2 < MAX_LOOP_LIMIT_2
[i]Type for TMP_246

Name: TMP_246 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
yPrev_1(uint256) := y_2(uint256)
Finance type key: (-1, -1)
[i]Type for yPrev

Name: yPrev Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_247(uint256) = y_2 (c)* y_2
[i]Type for TMP_247

Name: TMP_247 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_248(uint256) = TMP_247 (c)+ c_2
[i]Type for TMP_248

Name: TMP_248 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: updated simple fee ratio
TMP_249(uint256) = y_2 (c)* 2
[i]Type for TMP_249

Name: TMP_249 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_250(uint256) = TMP_249 (c)+ b_1
[i]Type for TMP_250

Name: TMP_250 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: updated simple fee ratio
TMP_251(uint256) = TMP_250 (c)- D_1
[i]Type for TMP_251

Name: TMP_251 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: updated simple fee ratio
TMP_252(uint256) = TMP_248 (c)/ TMP_251
Finance type key: (12, 12)
Finance type key: (12, 12)
[i]Type for TMP_252

Name: TMP_252 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
y_3(uint256) := TMP_252(uint256)
Finance type key: (-1, -1)
[i]Type for y

Name: y Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_253(bool) = LIBRARY_CALL, dest:MathUtils, function:MathUtils.within1(uint256,uint256), arguments:['y_3', 'yPrev_1'] 
[i]Type for TMP_253

Name: TMP_253 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_254(uint256) := i_2(uint256)
Finance type key: (-1, -1)
[i]Type for TMP_254

Name: TMP_254 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_3(uint256) = i_2 (c)+ 1
[i]Type for i

Name: i Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
[i]Type for TMP_202

Name: TMP_202 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
y_1(uint256) := TMP_202(uint256)
Finance type key: (-1, -1)
[i]Type for y

Name: y Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_203(uint256) = xpOut_3 (c)- y_1
[i]Type for TMP_203

Name: TMP_203 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_204(uint256) = TMP_203 (c)- 1
[i]Type for TMP_204

Name: TMP_204 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
dy_1(uint256) := TMP_204(uint256)
Finance type key: (-1, -1)
[i]Type for dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
dy_2(uint256) = dy_1 (c)/ token1PrecisionMultiplier_4
[i]Type for dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
dy_3(uint256) = dy_1 (c)/ token0PrecisionMultiplier_4
[i]Type for dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
amountIn_1(uint256) := ϕ(['TMP_153', 'TMP_124', 'TMP_103', 'TMP_112', 'TMP_130', 'TMP_140', 'amountIn_3'])
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
_reserve0_1(uint256) := ϕ(['_reserve0_1', '_reserve0_1', '_reserve0_1', 'TMP_104', 'TMP_113'])
[i]Type for _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
_reserve1_1(uint256) := ϕ(['_reserve1_1', 'TMP_105', 'TMP_114', '_reserve1_1', '_reserve1_1'])
[i]Type for _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
token0PrecisionMultiplier_2(uint256) := ϕ(['token0PrecisionMultiplier_0', 'token0PrecisionMultiplier_1', 'token0PrecisionMultiplier_4'])
[i]Type for token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
token1PrecisionMultiplier_2(uint256) := ϕ(['token1PrecisionMultiplier_4', 'token1PrecisionMultiplier_1', 'token1PrecisionMultiplier_0'])
[i]Type for token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_196(uint256) = _reserve0_1 (c)* token0PrecisionMultiplier_2
[i]Type for TMP_196

Name: TMP_196 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
xpIn_1(uint256) := TMP_196(uint256)
Finance type key: (-1, -1)
[i]Type for xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_197(uint256) = _reserve1_1 (c)* token1PrecisionMultiplier_2
[i]Type for TMP_197

Name: TMP_197 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
xpOut_1(uint256) := TMP_197(uint256)
Finance type key: (-1, -1)
[i]Type for xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_198(uint256) = _reserve1_1 (c)* token1PrecisionMultiplier_2
[i]Type for TMP_198

Name: TMP_198 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
xpIn_2(uint256) := TMP_198(uint256)
Finance type key: (-1, -1)
[i]Type for xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
amountIn_2(uint256) = amountIn_1 (c)* token0PrecisionMultiplier_2
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: updated simple fee ratio
TMP_199(uint256) = _reserve0_1 (c)* token0PrecisionMultiplier_2
[i]Type for TMP_199

Name: TMP_199 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
xpOut_2(uint256) := TMP_199(uint256)
Finance type key: (-1, -1)
[i]Type for xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
amountIn_4(uint256) := ϕ(['amountIn_3', 'amountIn_2'])
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
xpIn_3(uint256) := ϕ(['xpIn_1', 'xpIn_2'])
[i]Type for xpIn

Name: xpIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
xpOut_3(uint256) := ϕ(['xpOut_1', 'xpOut_2'])
[i]Type for xpOut

Name: xpOut Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_200(uint256) = INTERNAL_CALL, HybridPool._computeLiquidityFromAdjustedBalances(uint256,uint256)(xpIn_3,xpOut_3)
xp0_1(uint256) := ϕ(['xpIn_3', 'xp0_1'])
[i]Type for xp0

Name: xp0 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
xp1_1(uint256) := ϕ(['xpOut_3', 'xp1_1'])
[i]Type for xp1

Name: xp1 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MAX_LOOP_LIMIT_1(uint256) := ϕ(['MAX_LOOP_LIMIT_0'])
[i]Type for MAX_LOOP_LIMIT

Name: MAX_LOOP_LIMIT Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
N_A_2(uint256) := ϕ(['N_A_0', 'N_A_1'])
[i]Type for N_A

Name: N_A Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
A_PRECISION_1(uint256) := ϕ(['A_PRECISION_0'])
[i]Type for A_PRECISION

Name: A_PRECISION Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_215(uint256) = xp0_1 (c)+ xp1_1
[i]Type for TMP_215

Name: TMP_215 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
s_1(uint256) := TMP_215(uint256)
Finance type key: (-1, -1)
[i]Type for s

Name: s Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_216(bool) = s_1 == 0
[i]Type for TMP_216

Name: TMP_216 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
computed_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for computed

Name: computed Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
D_1(uint256) := s_1(uint256)
Finance type key: (-1, -1)
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
D_2(uint256) := ϕ(['D_3', 'D_1'])
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
i_2(uint256) := ϕ(['i_3', 'i_1'])
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_217(bool) = i_2 < MAX_LOOP_LIMIT_1
[i]Type for TMP_217

Name: TMP_217 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_218(uint256) = D_2 (c)* D_2
Finance type key: (40, 40)
[i]Type for TMP_218

Name: TMP_218 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_219(uint256) = TMP_218 (c)/ xp0_1
[i]Type for TMP_219

Name: TMP_219 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_220(uint256) = TMP_219 (c)* D_2
[i]Type for TMP_220

Name: TMP_220 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
TMP_221(uint256) = TMP_220 (c)/ xp1_1
[i]Type for TMP_221

Name: TMP_221 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
TMP_222(uint256) = TMP_221 (c)/ 4
[i]Type for TMP_222

Name: TMP_222 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: price/exchange rate
dP_1(uint256) := TMP_222(uint256)
Finance type key: (40, -1)
[i]Type for dP

Name: dP Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: price/exchange rate
prevD_1(uint256) := D_2(uint256)
Finance type key: (40, -1)
[i]Type for prevD

Name: prevD Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
computed_2(uint256) := D_3(uint256)
Finance type key: (40, -1)
[i]Type for computed

Name: computed Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
TMP_223(uint256) = N_A_2 (c)* s_1
[i]Type for TMP_223

Name: TMP_223 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_224(uint256) = TMP_223 (c)/ A_PRECISION_1
[i]Type for TMP_224

Name: TMP_224 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_225(uint256) = 2 (c)* dP_1
[i]Type for TMP_225

Name: TMP_225 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: price/exchange rate
TMP_226(uint256) = TMP_224 (c)+ TMP_225
[i]Type for TMP_226

Name: TMP_226 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: price/exchange rate
TMP_227(uint256) = TMP_226 (c)* D_2
Finance type key: (40, 40)
[i]Type for TMP_227

Name: TMP_227 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_228(uint256) = N_A_2 (c)/ A_PRECISION_1
[i]Type for TMP_228

Name: TMP_228 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_229(uint256) = TMP_228 (c)- 1
[i]Type for TMP_229

Name: TMP_229 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
TMP_230(uint256) = TMP_229 (c)* D_2
[i]Type for TMP_230

Name: TMP_230 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: price/exchange rate
TMP_231(uint256) = 3 (c)* dP_1
[i]Type for TMP_231

Name: TMP_231 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 12
Fields: 
Finance Type: price/exchange rate
TMP_232(uint256) = TMP_230 (c)+ TMP_231
Finance type key: (40, 40)
[i]Type for TMP_232

Name: TMP_232 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 13
Fields: 
Finance Type: price/exchange rate
TMP_233(uint256) = TMP_227 (c)/ TMP_232
[i]Type for TMP_233

Name: TMP_233 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
D_3(uint256) := TMP_233(uint256)
Finance type key: (40, -1)
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
TMP_234(bool) = LIBRARY_CALL, dest:MathUtils, function:MathUtils.within1(uint256,uint256), arguments:['D_3', 'prevD_1'] 
[i]Type for TMP_234

Name: TMP_234 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_235(uint256) := i_2(uint256)
Finance type key: (-1, -1)
[i]Type for TMP_235

Name: TMP_235 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_3(uint256) = i_2 (c)+ 1
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
xp0_1(uint256) := ϕ(['xpIn_3', 'xp0_1'])
[i]Type for xp0

Name: xp0 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
xp1_1(uint256) := ϕ(['xpOut_3', 'xp1_1'])
[i]Type for xp1

Name: xp1 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MAX_LOOP_LIMIT_1(uint256) := ϕ(['MAX_LOOP_LIMIT_0'])
[i]Type for MAX_LOOP_LIMIT

Name: MAX_LOOP_LIMIT Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
N_A_2(uint256) := ϕ(['N_A_0', 'N_A_1'])
[i]Type for N_A

Name: N_A Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
A_PRECISION_1(uint256) := ϕ(['A_PRECISION_0'])
[i]Type for A_PRECISION

Name: A_PRECISION Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_215(uint256) = xp0_1 (c)+ xp1_1
[i]Type for TMP_215

Name: TMP_215 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
s_1(uint256) := TMP_215(uint256)
Finance type key: (-1, -1)
[i]Type for s

Name: s Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_216(bool) = s_1 == 0
[i]Type for TMP_216

Name: TMP_216 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
computed_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for computed

Name: computed Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
D_1(uint256) := s_1(uint256)
Finance type key: (-1, -1)
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
D_2(uint256) := ϕ(['D_3', 'D_1'])
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
i_2(uint256) := ϕ(['i_3', 'i_1'])
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_217(bool) = i_2 < MAX_LOOP_LIMIT_1
[i]Type for TMP_217

Name: TMP_217 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_218(uint256) = D_2 (c)* D_2
Finance type key: (40, 40)
[i]Type for TMP_218

Name: TMP_218 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_219(uint256) = TMP_218 (c)/ xp0_1
[i]Type for TMP_219

Name: TMP_219 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_220(uint256) = TMP_219 (c)* D_2
[i]Type for TMP_220

Name: TMP_220 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
TMP_221(uint256) = TMP_220 (c)/ xp1_1
[i]Type for TMP_221

Name: TMP_221 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
TMP_222(uint256) = TMP_221 (c)/ 4
[i]Type for TMP_222

Name: TMP_222 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: price/exchange rate
dP_1(uint256) := TMP_222(uint256)
Finance type key: (40, -1)
[i]Type for dP

Name: dP Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: price/exchange rate
prevD_1(uint256) := D_2(uint256)
Finance type key: (40, -1)
[i]Type for prevD

Name: prevD Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
computed_2(uint256) := D_3(uint256)
Finance type key: (40, -1)
[i]Type for computed

Name: computed Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
TMP_223(uint256) = N_A_2 (c)* s_1
[i]Type for TMP_223

Name: TMP_223 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_224(uint256) = TMP_223 (c)/ A_PRECISION_1
[i]Type for TMP_224

Name: TMP_224 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_225(uint256) = 2 (c)* dP_1
[i]Type for TMP_225

Name: TMP_225 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: price/exchange rate
TMP_226(uint256) = TMP_224 (c)+ TMP_225
[i]Type for TMP_226

Name: TMP_226 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: price/exchange rate
TMP_227(uint256) = TMP_226 (c)* D_2
Finance type key: (40, 40)
[i]Type for TMP_227

Name: TMP_227 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_228(uint256) = N_A_2 (c)/ A_PRECISION_1
[i]Type for TMP_228

Name: TMP_228 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_229(uint256) = TMP_228 (c)- 1
[i]Type for TMP_229

Name: TMP_229 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
TMP_230(uint256) = TMP_229 (c)* D_2
[i]Type for TMP_230

Name: TMP_230 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: price/exchange rate
TMP_231(uint256) = 3 (c)* dP_1
[i]Type for TMP_231

Name: TMP_231 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 12
Fields: 
Finance Type: price/exchange rate
TMP_232(uint256) = TMP_230 (c)+ TMP_231
Finance type key: (40, 40)
[i]Type for TMP_232

Name: TMP_232 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 13
Fields: 
Finance Type: price/exchange rate
TMP_233(uint256) = TMP_227 (c)/ TMP_232
[i]Type for TMP_233

Name: TMP_233 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
D_3(uint256) := TMP_233(uint256)
Finance type key: (40, -1)
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: price/exchange rate
TMP_234(bool) = LIBRARY_CALL, dest:MathUtils, function:MathUtils.within1(uint256,uint256), arguments:['D_3', 'prevD_1'] 
[i]Type for TMP_234

Name: TMP_234 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_235(uint256) := i_2(uint256)
Finance type key: (-1, -1)
[i]Type for TMP_235

Name: TMP_235 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_3(uint256) = i_2 (c)+ 1
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
[i]Type for TMP_200

Name: TMP_200 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
d_1(uint256) := TMP_200(uint256)
Finance type key: (-1, -1)
[i]Type for d

Name: d Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_201(uint256) = xpIn_3 (c)+ amountIn_4
[i]Type for TMP_201

Name: TMP_201 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
x_1(uint256) := TMP_201(uint256)
Finance type key: (12, -1)
[i]Type for x

Name: x Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
amountIn_3(uint256) = amountIn_1 (c)* token1PrecisionMultiplier_2
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: updated simple fee ratio
TMP_202(uint256) = INTERNAL_CALL, HybridPool._getY(uint256,uint256)(x_1,d_1)
x_1(uint256) := ϕ(['x_1'])
[i]Type for x

Name: x Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
D_1(uint256) := ϕ(['d_1'])
[i]Type for D

Name: D Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MAX_LOOP_LIMIT_2(uint256) := ϕ(['MAX_LOOP_LIMIT_0'])
[i]Type for MAX_LOOP_LIMIT

Name: MAX_LOOP_LIMIT Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
N_A_3(uint256) := ϕ(['N_A_0', 'N_A_1'])
[i]Type for N_A

Name: N_A Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
A_PRECISION_2(uint256) := ϕ(['A_PRECISION_0'])
[i]Type for A_PRECISION

Name: A_PRECISION Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_236(uint256) = D_1 (c)* D_1
[i]Type for TMP_236

Name: TMP_236 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_237(uint256) = x_1 (c)* 2
[i]Type for TMP_237

Name: TMP_237 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
TMP_238(uint256) = TMP_236 (c)/ TMP_237
[i]Type for TMP_238

Name: TMP_238 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
c_1(uint256) := TMP_238(uint256)
Finance type key: (12, -1)
[i]Type for c

Name: c Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
TMP_239(uint256) = c_1 (c)* D_1
[i]Type for TMP_239

Name: TMP_239 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
TMP_240(uint256) = N_A_3 (c)* 2
[i]Type for TMP_240

Name: TMP_240 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
TMP_241(uint256) = TMP_240 (c)/ A_PRECISION_2
[i]Type for TMP_241

Name: TMP_241 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
TMP_242(uint256) = TMP_239 (c)/ TMP_241
[i]Type for TMP_242

Name: TMP_242 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: updated simple fee ratio
c_2(uint256) := TMP_242(uint256)
Finance type key: (12, -1)
[i]Type for c

Name: c Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: updated simple fee ratio
TMP_243(uint256) = D_1 (c)* A_PRECISION_2
[i]Type for TMP_243

Name: TMP_243 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_244(uint256) = TMP_243 (c)/ N_A_3
[i]Type for TMP_244

Name: TMP_244 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_245(uint256) = x_1 (c)+ TMP_244
[i]Type for TMP_245

Name: TMP_245 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
b_1(uint256) := TMP_245(uint256)
Finance type key: (12, -1)
[i]Type for b

Name: b Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
y_1(uint256) := D_1(uint256)
Finance type key: (-1, -1)
[i]Type for y

Name: y Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for i

Name: i Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
y_2(uint256) := ϕ(['y_1', 'y_3'])
[i]Type for y

Name: y Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_2(uint256) := ϕ(['i_1', 'i_3'])
[i]Type for i

Name: i Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_246(bool) = i_2 < MAX_LOOP_LIMIT_2
[i]Type for TMP_246

Name: TMP_246 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
yPrev_1(uint256) := y_2(uint256)
Finance type key: (-1, -1)
[i]Type for yPrev

Name: yPrev Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_247(uint256) = y_2 (c)* y_2
[i]Type for TMP_247

Name: TMP_247 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_248(uint256) = TMP_247 (c)+ c_2
[i]Type for TMP_248

Name: TMP_248 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: updated simple fee ratio
TMP_249(uint256) = y_2 (c)* 2
[i]Type for TMP_249

Name: TMP_249 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_250(uint256) = TMP_249 (c)+ b_1
[i]Type for TMP_250

Name: TMP_250 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: updated simple fee ratio
TMP_251(uint256) = TMP_250 (c)- D_1
[i]Type for TMP_251

Name: TMP_251 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: updated simple fee ratio
TMP_252(uint256) = TMP_248 (c)/ TMP_251
Finance type key: (12, 12)
Finance type key: (12, 12)
[i]Type for TMP_252

Name: TMP_252 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
y_3(uint256) := TMP_252(uint256)
Finance type key: (-1, -1)
[i]Type for y

Name: y Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_253(bool) = LIBRARY_CALL, dest:MathUtils, function:MathUtils.within1(uint256,uint256), arguments:['y_3', 'yPrev_1'] 
[i]Type for TMP_253

Name: TMP_253 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_254(uint256) := i_2(uint256)
Finance type key: (-1, -1)
[i]Type for TMP_254

Name: TMP_254 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_3(uint256) = i_2 (c)+ 1
[i]Type for i

Name: i Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
x_1(uint256) := ϕ(['x_1'])
[i]Type for x

Name: x Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated simple fee ratio
D_1(uint256) := ϕ(['d_1'])
[i]Type for D

Name: D Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MAX_LOOP_LIMIT_2(uint256) := ϕ(['MAX_LOOP_LIMIT_0'])
[i]Type for MAX_LOOP_LIMIT

Name: MAX_LOOP_LIMIT Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
N_A_3(uint256) := ϕ(['N_A_0', 'N_A_1'])
[i]Type for N_A

Name: N_A Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
A_PRECISION_2(uint256) := ϕ(['A_PRECISION_0'])
[i]Type for A_PRECISION

Name: A_PRECISION Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_236(uint256) = D_1 (c)* D_1
[i]Type for TMP_236

Name: TMP_236 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_237(uint256) = x_1 (c)* 2
[i]Type for TMP_237

Name: TMP_237 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
TMP_238(uint256) = TMP_236 (c)/ TMP_237
[i]Type for TMP_238

Name: TMP_238 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
c_1(uint256) := TMP_238(uint256)
Finance type key: (12, -1)
[i]Type for c

Name: c Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
TMP_239(uint256) = c_1 (c)* D_1
[i]Type for TMP_239

Name: TMP_239 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
TMP_240(uint256) = N_A_3 (c)* 2
[i]Type for TMP_240

Name: TMP_240 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
TMP_241(uint256) = TMP_240 (c)/ A_PRECISION_2
[i]Type for TMP_241

Name: TMP_241 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
TMP_242(uint256) = TMP_239 (c)/ TMP_241
[i]Type for TMP_242

Name: TMP_242 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: updated simple fee ratio
c_2(uint256) := TMP_242(uint256)
Finance type key: (12, -1)
[i]Type for c

Name: c Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: updated simple fee ratio
TMP_243(uint256) = D_1 (c)* A_PRECISION_2
[i]Type for TMP_243

Name: TMP_243 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_244(uint256) = TMP_243 (c)/ N_A_3
[i]Type for TMP_244

Name: TMP_244 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_245(uint256) = x_1 (c)+ TMP_244
[i]Type for TMP_245

Name: TMP_245 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
b_1(uint256) := TMP_245(uint256)
Finance type key: (12, -1)
[i]Type for b

Name: b Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated simple fee ratio
y_1(uint256) := D_1(uint256)
Finance type key: (-1, -1)
[i]Type for y

Name: y Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for i

Name: i Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
y_2(uint256) := ϕ(['y_1', 'y_3'])
[i]Type for y

Name: y Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_2(uint256) := ϕ(['i_1', 'i_3'])
[i]Type for i

Name: i Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_246(bool) = i_2 < MAX_LOOP_LIMIT_2
[i]Type for TMP_246

Name: TMP_246 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
yPrev_1(uint256) := y_2(uint256)
Finance type key: (-1, -1)
[i]Type for yPrev

Name: yPrev Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_247(uint256) = y_2 (c)* y_2
[i]Type for TMP_247

Name: TMP_247 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_248(uint256) = TMP_247 (c)+ c_2
[i]Type for TMP_248

Name: TMP_248 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: updated simple fee ratio
TMP_249(uint256) = y_2 (c)* 2
[i]Type for TMP_249

Name: TMP_249 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_250(uint256) = TMP_249 (c)+ b_1
[i]Type for TMP_250

Name: TMP_250 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: updated simple fee ratio
TMP_251(uint256) = TMP_250 (c)- D_1
[i]Type for TMP_251

Name: TMP_251 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: updated simple fee ratio
TMP_252(uint256) = TMP_248 (c)/ TMP_251
Finance type key: (12, 12)
Finance type key: (12, 12)
[i]Type for TMP_252

Name: TMP_252 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
y_3(uint256) := TMP_252(uint256)
Finance type key: (-1, -1)
[i]Type for y

Name: y Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_253(bool) = LIBRARY_CALL, dest:MathUtils, function:MathUtils.within1(uint256,uint256), arguments:['y_3', 'yPrev_1'] 
[i]Type for TMP_253

Name: TMP_253 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_254(uint256) := i_2(uint256)
Finance type key: (-1, -1)
[i]Type for TMP_254

Name: TMP_254 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_3(uint256) = i_2 (c)+ 1
[i]Type for i

Name: i Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
[i]Type for TMP_202

Name: TMP_202 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
y_1(uint256) := TMP_202(uint256)
Finance type key: (-1, -1)
[i]Type for y

Name: y Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_203(uint256) = xpOut_3 (c)- y_1
[i]Type for TMP_203

Name: TMP_203 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_204(uint256) = TMP_203 (c)- 1
[i]Type for TMP_204

Name: TMP_204 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
dy_1(uint256) := TMP_204(uint256)
Finance type key: (-1, -1)
[i]Type for dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
dy_2(uint256) = dy_1 (c)/ token1PrecisionMultiplier_4
[i]Type for dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
dy_3(uint256) = dy_1 (c)/ token0PrecisionMultiplier_4
[i]Type for dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
[i]Type for TMP_301

Name: TMP_301 Function: getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
finalAmountOut_2(uint256) := TMP_301(uint256)
Finance type key: (-1, -1)
[i]Type for finalAmountOut

Name: finalAmountOut Function: getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Function count: 219
Executing Group 6
[*] Tested 0 warnings for Sushi Tridnet
Group 6 complete
Elapsed time: 13.691916711 seconds
Testing complete
