Switched global version to 0.8.0
Checking LiquidityPool
Checking IERC20Detailed
Checking IERC20Nonces
Checking IERC20Permit
Checking IExecutorManager
Checking ILiquidityProviders
Checking ITokenManager
Checking ERC2771ContextUpgradeable
Checking OwnableUpgradeable
Checking Initializable
Checking PausableUpgradeable
Checking ReentrancyGuardUpgradeable
Checking IERC20Upgradeable
Checking SafeERC20Upgradeable
Checking AddressUpgradeable
Checking ContextUpgradeable
Checking Pausable
Add to address_to_label {'global:_pauser': 1}
Add to address_to_label {'global:_pauser': 1, 'global:_owner': 2}
Add to address_to_label {'global:_pauser': 1, 'global:_owner': 2, 'global:NATIVE': 3}
Add to address_to_label {'global:_pauser': 1, 'global:_owner': 2, 'global:NATIVE': 3, 'global:_trustedForwarder': 4}
Add to address_to_label {'global:_pauser': 1, 'global:_owner': 2, 'global:NATIVE': 3, 'global:_trustedForwarder': 4, 'initialize:_executorManagerAddress': -999}
Add to address_to_label {'global:_pauser': 1, 'global:_owner': 2, 'global:NATIVE': 3, 'global:_trustedForwarder': 4, 'initialize:_executorManagerAddress': -999, 'initialize:_pauser': -998}
Add to address_to_label {'global:_pauser': 1, 'global:_owner': 2, 'global:NATIVE': 3, 'global:_trustedForwarder': 4, 'initialize:_executorManagerAddress': -999, 'initialize:_pauser': -998, 'initialize:_trustedForwarder': -997}
Add to address_to_label {'global:_pauser': 1, 'global:_owner': 2, 'global:NATIVE': 3, 'global:_trustedForwarder': 4, 'initialize:_executorManagerAddress': -999, 'initialize:_pauser': -998, 'initialize:_trustedForwarder': -997, 'initialize:_tokenManager': -996}
Add to address_to_label {'global:_pauser': 1, 'global:_owner': 2, 'global:NATIVE': 3, 'global:_trustedForwarder': 4, 'initialize:_executorManagerAddress': -999, 'initialize:_pauser': -998, 'initialize:_trustedForwarder': -997, 'initialize:_tokenManager': -996, 'initialize:_liquidityProviders': -995}
Add to address_to_label {'global:_pauser': 1, 'global:_owner': 2, 'global:NATIVE': 3, 'global:_trustedForwarder': 4, 'initialize:_executorManagerAddress': -999, 'initialize:_pauser': -998, 'initialize:_trustedForwarder': -997, 'initialize:_tokenManager': -996, 'initialize:_liquidityProviders': -995, 'setTrustedForwarder:trustedForwarder': -994}
Add to address_to_label {'global:_pauser': 1, 'global:_owner': 2, 'global:NATIVE': 3, 'global:_trustedForwarder': 4, 'initialize:_executorManagerAddress': -999, 'initialize:_pauser': -998, 'initialize:_trustedForwarder': -997, 'initialize:_tokenManager': -996, 'initialize:_liquidityProviders': -995, 'setTrustedForwarder:trustedForwarder': -994, 'setLiquidityProviders:_liquidityProviders': -993}
Add to address_to_label {'global:_pauser': 1, 'global:_owner': 2, 'global:NATIVE': 3, 'global:_trustedForwarder': 4, 'initialize:_executorManagerAddress': -999, 'initialize:_pauser': -998, 'initialize:_trustedForwarder': -997, 'initialize:_tokenManager': -996, 'initialize:_liquidityProviders': -995, 'setTrustedForwarder:trustedForwarder': -994, 'setLiquidityProviders:_liquidityProviders': -993, 'setExecutorManager:_executorManagerAddress': -992}
Add to address_to_label {'global:_pauser': 1, 'global:_owner': 2, 'global:NATIVE': 3, 'global:_trustedForwarder': 4, 'initialize:_executorManagerAddress': -999, 'initialize:_pauser': -998, 'initialize:_trustedForwarder': -997, 'initialize:_tokenManager': -996, 'initialize:_liquidityProviders': -995, 'setTrustedForwarder:trustedForwarder': -994, 'setLiquidityProviders:_liquidityProviders': -993, 'setExecutorManager:_executorManagerAddress': -992, 'getCurrentLiquidity:tokenAddress': -991}
Add to address_to_label {'global:_pauser': 1, 'global:_owner': 2, 'global:NATIVE': 3, 'global:_trustedForwarder': 4, 'initialize:_executorManagerAddress': -999, 'initialize:_pauser': -998, 'initialize:_trustedForwarder': -997, 'initialize:_tokenManager': -996, 'initialize:_liquidityProviders': -995, 'setTrustedForwarder:trustedForwarder': -994, 'setLiquidityProviders:_liquidityProviders': -993, 'setExecutorManager:_executorManagerAddress': -992, 'getCurrentLiquidity:tokenAddress': -991, 'depositErc20:tokenAddress': -990}
Add to address_to_label {'global:_pauser': 1, 'global:_owner': 2, 'global:NATIVE': 3, 'global:_trustedForwarder': 4, 'initialize:_executorManagerAddress': -999, 'initialize:_pauser': -998, 'initialize:_trustedForwarder': -997, 'initialize:_tokenManager': -996, 'initialize:_liquidityProviders': -995, 'setTrustedForwarder:trustedForwarder': -994, 'setLiquidityProviders:_liquidityProviders': -993, 'setExecutorManager:_executorManagerAddress': -992, 'getCurrentLiquidity:tokenAddress': -991, 'depositErc20:tokenAddress': -990, 'depositErc20:receiver': -989}
Add to address_to_label {'global:_pauser': 1, 'global:_owner': 2, 'global:NATIVE': 3, 'global:_trustedForwarder': 4, 'initialize:_executorManagerAddress': -999, 'initialize:_pauser': -998, 'initialize:_trustedForwarder': -997, 'initialize:_tokenManager': -996, 'initialize:_liquidityProviders': -995, 'setTrustedForwarder:trustedForwarder': -994, 'setLiquidityProviders:_liquidityProviders': -993, 'setExecutorManager:_executorManagerAddress': -992, 'getCurrentLiquidity:tokenAddress': -991, 'depositErc20:tokenAddress': -990, 'depositErc20:receiver': -989, 'getRewardAmount:tokenAddress': -988}
Add to address_to_label {'global:_pauser': 1, 'global:_owner': 2, 'global:NATIVE': 3, 'global:_trustedForwarder': 4, 'initialize:_executorManagerAddress': -999, 'initialize:_pauser': -998, 'initialize:_trustedForwarder': -997, 'initialize:_tokenManager': -996, 'initialize:_liquidityProviders': -995, 'setTrustedForwarder:trustedForwarder': -994, 'setLiquidityProviders:_liquidityProviders': -993, 'setExecutorManager:_executorManagerAddress': -992, 'getCurrentLiquidity:tokenAddress': -991, 'depositErc20:tokenAddress': -990, 'depositErc20:receiver': -989, 'getRewardAmount:tokenAddress': -988, 'permitAndDepositErc20:tokenAddress': -987}
Add to address_to_label {'global:_pauser': 1, 'global:_owner': 2, 'global:NATIVE': 3, 'global:_trustedForwarder': 4, 'initialize:_executorManagerAddress': -999, 'initialize:_pauser': -998, 'initialize:_trustedForwarder': -997, 'initialize:_tokenManager': -996, 'initialize:_liquidityProviders': -995, 'setTrustedForwarder:trustedForwarder': -994, 'setLiquidityProviders:_liquidityProviders': -993, 'setExecutorManager:_executorManagerAddress': -992, 'getCurrentLiquidity:tokenAddress': -991, 'depositErc20:tokenAddress': -990, 'depositErc20:receiver': -989, 'getRewardAmount:tokenAddress': -988, 'permitAndDepositErc20:tokenAddress': -987, 'permitAndDepositErc20:receiver': -986}
Add to address_to_label {'global:_pauser': 1, 'global:_owner': 2, 'global:NATIVE': 3, 'global:_trustedForwarder': 4, 'initialize:_executorManagerAddress': -999, 'initialize:_pauser': -998, 'initialize:_trustedForwarder': -997, 'initialize:_tokenManager': -996, 'initialize:_liquidityProviders': -995, 'setTrustedForwarder:trustedForwarder': -994, 'setLiquidityProviders:_liquidityProviders': -993, 'setExecutorManager:_executorManagerAddress': -992, 'getCurrentLiquidity:tokenAddress': -991, 'depositErc20:tokenAddress': -990, 'depositErc20:receiver': -989, 'getRewardAmount:tokenAddress': -988, 'permitAndDepositErc20:tokenAddress': -987, 'permitAndDepositErc20:receiver': -986, 'permitEIP2612AndDepositErc20:tokenAddress': -985}
Add to address_to_label {'global:_pauser': 1, 'global:_owner': 2, 'global:NATIVE': 3, 'global:_trustedForwarder': 4, 'initialize:_executorManagerAddress': -999, 'initialize:_pauser': -998, 'initialize:_trustedForwarder': -997, 'initialize:_tokenManager': -996, 'initialize:_liquidityProviders': -995, 'setTrustedForwarder:trustedForwarder': -994, 'setLiquidityProviders:_liquidityProviders': -993, 'setExecutorManager:_executorManagerAddress': -992, 'getCurrentLiquidity:tokenAddress': -991, 'depositErc20:tokenAddress': -990, 'depositErc20:receiver': -989, 'getRewardAmount:tokenAddress': -988, 'permitAndDepositErc20:tokenAddress': -987, 'permitAndDepositErc20:receiver': -986, 'permitEIP2612AndDepositErc20:tokenAddress': -985, 'permitEIP2612AndDepositErc20:receiver': -984}
Add to address_to_label {'global:_pauser': 1, 'global:_owner': 2, 'global:NATIVE': 3, 'global:_trustedForwarder': 4, 'initialize:_executorManagerAddress': -999, 'initialize:_pauser': -998, 'initialize:_trustedForwarder': -997, 'initialize:_tokenManager': -996, 'initialize:_liquidityProviders': -995, 'setTrustedForwarder:trustedForwarder': -994, 'setLiquidityProviders:_liquidityProviders': -993, 'setExecutorManager:_executorManagerAddress': -992, 'getCurrentLiquidity:tokenAddress': -991, 'depositErc20:tokenAddress': -990, 'depositErc20:receiver': -989, 'getRewardAmount:tokenAddress': -988, 'permitAndDepositErc20:tokenAddress': -987, 'permitAndDepositErc20:receiver': -986, 'permitEIP2612AndDepositErc20:tokenAddress': -985, 'permitEIP2612AndDepositErc20:receiver': -984, 'depositNative:receiver': -983}
Add to address_to_label {'global:_pauser': 1, 'global:_owner': 2, 'global:NATIVE': 3, 'global:_trustedForwarder': 4, 'initialize:_executorManagerAddress': -999, 'initialize:_pauser': -998, 'initialize:_trustedForwarder': -997, 'initialize:_tokenManager': -996, 'initialize:_liquidityProviders': -995, 'setTrustedForwarder:trustedForwarder': -994, 'setLiquidityProviders:_liquidityProviders': -993, 'setExecutorManager:_executorManagerAddress': -992, 'getCurrentLiquidity:tokenAddress': -991, 'depositErc20:tokenAddress': -990, 'depositErc20:receiver': -989, 'getRewardAmount:tokenAddress': -988, 'permitAndDepositErc20:tokenAddress': -987, 'permitAndDepositErc20:receiver': -986, 'permitEIP2612AndDepositErc20:tokenAddress': -985, 'permitEIP2612AndDepositErc20:receiver': -984, 'depositNative:receiver': -983, 'sendFundsToUser:tokenAddress': -982}
Add to address_to_label {'global:_pauser': 1, 'global:_owner': 2, 'global:NATIVE': 3, 'global:_trustedForwarder': 4, 'initialize:_executorManagerAddress': -999, 'initialize:_pauser': -998, 'initialize:_trustedForwarder': -997, 'initialize:_tokenManager': -996, 'initialize:_liquidityProviders': -995, 'setTrustedForwarder:trustedForwarder': -994, 'setLiquidityProviders:_liquidityProviders': -993, 'setExecutorManager:_executorManagerAddress': -992, 'getCurrentLiquidity:tokenAddress': -991, 'depositErc20:tokenAddress': -990, 'depositErc20:receiver': -989, 'getRewardAmount:tokenAddress': -988, 'permitAndDepositErc20:tokenAddress': -987, 'permitAndDepositErc20:receiver': -986, 'permitEIP2612AndDepositErc20:tokenAddress': -985, 'permitEIP2612AndDepositErc20:receiver': -984, 'depositNative:receiver': -983, 'sendFundsToUser:tokenAddress': -982, 'sendFundsToUser:receiver': -981}
Add to address_to_label {'global:_pauser': 1, 'global:_owner': 2, 'global:NATIVE': 3, 'global:_trustedForwarder': 4, 'initialize:_executorManagerAddress': -999, 'initialize:_pauser': -998, 'initialize:_trustedForwarder': -997, 'initialize:_tokenManager': -996, 'initialize:_liquidityProviders': -995, 'setTrustedForwarder:trustedForwarder': -994, 'setLiquidityProviders:_liquidityProviders': -993, 'setExecutorManager:_executorManagerAddress': -992, 'getCurrentLiquidity:tokenAddress': -991, 'depositErc20:tokenAddress': -990, 'depositErc20:receiver': -989, 'getRewardAmount:tokenAddress': -988, 'permitAndDepositErc20:tokenAddress': -987, 'permitAndDepositErc20:receiver': -986, 'permitEIP2612AndDepositErc20:tokenAddress': -985, 'permitEIP2612AndDepositErc20:receiver': -984, 'depositNative:receiver': -983, 'sendFundsToUser:tokenAddress': -982, 'sendFundsToUser:receiver': -981, 'getAmountToTransfer:tokenAddress': -980}
Add to address_to_label {'global:_pauser': 1, 'global:_owner': 2, 'global:NATIVE': 3, 'global:_trustedForwarder': 4, 'initialize:_executorManagerAddress': -999, 'initialize:_pauser': -998, 'initialize:_trustedForwarder': -997, 'initialize:_tokenManager': -996, 'initialize:_liquidityProviders': -995, 'setTrustedForwarder:trustedForwarder': -994, 'setLiquidityProviders:_liquidityProviders': -993, 'setExecutorManager:_executorManagerAddress': -992, 'getCurrentLiquidity:tokenAddress': -991, 'depositErc20:tokenAddress': -990, 'depositErc20:receiver': -989, 'getRewardAmount:tokenAddress': -988, 'permitAndDepositErc20:tokenAddress': -987, 'permitAndDepositErc20:receiver': -986, 'permitEIP2612AndDepositErc20:tokenAddress': -985, 'permitEIP2612AndDepositErc20:receiver': -984, 'depositNative:receiver': -983, 'sendFundsToUser:tokenAddress': -982, 'sendFundsToUser:receiver': -981, 'getAmountToTransfer:tokenAddress': -980, 'getTransferFee:tokenAddress': -979}
Add to address_to_label {'global:_pauser': 1, 'global:_owner': 2, 'global:NATIVE': 3, 'global:_trustedForwarder': 4, 'initialize:_executorManagerAddress': -999, 'initialize:_pauser': -998, 'initialize:_trustedForwarder': -997, 'initialize:_tokenManager': -996, 'initialize:_liquidityProviders': -995, 'setTrustedForwarder:trustedForwarder': -994, 'setLiquidityProviders:_liquidityProviders': -993, 'setExecutorManager:_executorManagerAddress': -992, 'getCurrentLiquidity:tokenAddress': -991, 'depositErc20:tokenAddress': -990, 'depositErc20:receiver': -989, 'getRewardAmount:tokenAddress': -988, 'permitAndDepositErc20:tokenAddress': -987, 'permitAndDepositErc20:receiver': -986, 'permitEIP2612AndDepositErc20:tokenAddress': -985, 'permitEIP2612AndDepositErc20:receiver': -984, 'depositNative:receiver': -983, 'sendFundsToUser:tokenAddress': -982, 'sendFundsToUser:receiver': -981, 'getAmountToTransfer:tokenAddress': -980, 'getTransferFee:tokenAddress': -979, 'checkHashStatus:tokenAddress': -978}
Add to address_to_label {'global:_pauser': 1, 'global:_owner': 2, 'global:NATIVE': 3, 'global:_trustedForwarder': 4, 'initialize:_executorManagerAddress': -999, 'initialize:_pauser': -998, 'initialize:_trustedForwarder': -997, 'initialize:_tokenManager': -996, 'initialize:_liquidityProviders': -995, 'setTrustedForwarder:trustedForwarder': -994, 'setLiquidityProviders:_liquidityProviders': -993, 'setExecutorManager:_executorManagerAddress': -992, 'getCurrentLiquidity:tokenAddress': -991, 'depositErc20:tokenAddress': -990, 'depositErc20:receiver': -989, 'getRewardAmount:tokenAddress': -988, 'permitAndDepositErc20:tokenAddress': -987, 'permitAndDepositErc20:receiver': -986, 'permitEIP2612AndDepositErc20:tokenAddress': -985, 'permitEIP2612AndDepositErc20:receiver': -984, 'depositNative:receiver': -983, 'sendFundsToUser:tokenAddress': -982, 'sendFundsToUser:receiver': -981, 'getAmountToTransfer:tokenAddress': -980, 'getTransferFee:tokenAddress': -979, 'checkHashStatus:tokenAddress': -978, 'checkHashStatus:receiver': -977}
Add to address_to_label {'global:_pauser': 1, 'global:_owner': 2, 'global:NATIVE': 3, 'global:_trustedForwarder': 4, 'initialize:_executorManagerAddress': -999, 'initialize:_pauser': -998, 'initialize:_trustedForwarder': -997, 'initialize:_tokenManager': -996, 'initialize:_liquidityProviders': -995, 'setTrustedForwarder:trustedForwarder': -994, 'setLiquidityProviders:_liquidityProviders': -993, 'setExecutorManager:_executorManagerAddress': -992, 'getCurrentLiquidity:tokenAddress': -991, 'depositErc20:tokenAddress': -990, 'depositErc20:receiver': -989, 'getRewardAmount:tokenAddress': -988, 'permitAndDepositErc20:tokenAddress': -987, 'permitAndDepositErc20:receiver': -986, 'permitEIP2612AndDepositErc20:tokenAddress': -985, 'permitEIP2612AndDepositErc20:receiver': -984, 'depositNative:receiver': -983, 'sendFundsToUser:tokenAddress': -982, 'sendFundsToUser:receiver': -981, 'getAmountToTransfer:tokenAddress': -980, 'getTransferFee:tokenAddress': -979, 'checkHashStatus:tokenAddress': -978, 'checkHashStatus:receiver': -977, 'withdrawErc20GasFee:tokenAddress': -976}
Add to address_to_label {'global:_pauser': 1, 'global:_owner': 2, 'global:NATIVE': 3, 'global:_trustedForwarder': 4, 'initialize:_executorManagerAddress': -999, 'initialize:_pauser': -998, 'initialize:_trustedForwarder': -997, 'initialize:_tokenManager': -996, 'initialize:_liquidityProviders': -995, 'setTrustedForwarder:trustedForwarder': -994, 'setLiquidityProviders:_liquidityProviders': -993, 'setExecutorManager:_executorManagerAddress': -992, 'getCurrentLiquidity:tokenAddress': -991, 'depositErc20:tokenAddress': -990, 'depositErc20:receiver': -989, 'getRewardAmount:tokenAddress': -988, 'permitAndDepositErc20:tokenAddress': -987, 'permitAndDepositErc20:receiver': -986, 'permitEIP2612AndDepositErc20:tokenAddress': -985, 'permitEIP2612AndDepositErc20:receiver': -984, 'depositNative:receiver': -983, 'sendFundsToUser:tokenAddress': -982, 'sendFundsToUser:receiver': -981, 'getAmountToTransfer:tokenAddress': -980, 'getTransferFee:tokenAddress': -979, 'checkHashStatus:tokenAddress': -978, 'checkHashStatus:receiver': -977, 'withdrawErc20GasFee:tokenAddress': -976, 'transfer:_tokenAddress': -975}
Add to address_to_label {'global:_pauser': 1, 'global:_owner': 2, 'global:NATIVE': 3, 'global:_trustedForwarder': 4, 'initialize:_executorManagerAddress': -999, 'initialize:_pauser': -998, 'initialize:_trustedForwarder': -997, 'initialize:_tokenManager': -996, 'initialize:_liquidityProviders': -995, 'setTrustedForwarder:trustedForwarder': -994, 'setLiquidityProviders:_liquidityProviders': -993, 'setExecutorManager:_executorManagerAddress': -992, 'getCurrentLiquidity:tokenAddress': -991, 'depositErc20:tokenAddress': -990, 'depositErc20:receiver': -989, 'getRewardAmount:tokenAddress': -988, 'permitAndDepositErc20:tokenAddress': -987, 'permitAndDepositErc20:receiver': -986, 'permitEIP2612AndDepositErc20:tokenAddress': -985, 'permitEIP2612AndDepositErc20:receiver': -984, 'depositNative:receiver': -983, 'sendFundsToUser:tokenAddress': -982, 'sendFundsToUser:receiver': -981, 'getAmountToTransfer:tokenAddress': -980, 'getTransferFee:tokenAddress': -979, 'checkHashStatus:tokenAddress': -978, 'checkHashStatus:receiver': -977, 'withdrawErc20GasFee:tokenAddress': -976, 'transfer:_tokenAddress': -975, 'transfer:receiver': -974}
State_var: gasFeeAccumulatedByToken
Finding type for gasFeeAccumulatedByToken(mapping(address => uint256) ... )
querrying!!!
Source address: u
Saved name: gasFeeAccumulatedByToken

Name: PIC_1 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
State_var: incentivePool
Finding type for incentivePool(mapping(address => uint256) ... )
querrying!!!
Source address: u
Saved name: incentivePool

Name: PIC_2 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
State_var: liquidityProviders
Finding type for liquidityProviders(ILiquidityProviders ... )
querrying!!!
Source address: u
Saved name: liquidityProviders

Name: PIC_3 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
State_var: BASE_DIVISOR
Finding type for BASE_DIVISOR(uint256 ... )
querrying!!!
Source address: u
Saved name: BASE_DIVISOR

Name: PIC_4 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
State_var: baseGas
Finding type for baseGas(uint256 ... )
querrying!!!
Source address: u
Saved name: baseGas

Name: PIC_5 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
State_var: gasFeeAccumulated
Finding type for gasFeeAccumulated(mapping(address => mapping(address => uint256)) ... )
querrying!!!
Source address: u
Saved name: gasFeeAccumulated

Name: PIC_6 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
State_var: tokenManager
Finding type for tokenManager(ITokenManager ... )
querrying!!!
Source address: u
Saved name: tokenManager

Name: PIC_7 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
State_var: executorManager
Finding type for executorManager(IExecutorManager ... )
querrying!!!
Source address: u
Saved name: executorManager

Name: PIC_8 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
State_var: _owner
Finding type for _owner(address ... )
prev address? u
Head Addr: 2
    Norm: 0
    Set: {2}
    Fin: NULL
querrying!!!
Source address: 2
Saved name: _owner

Name: PIC_9 Function: None
Num: -1
Den: -1
Address: 2
Norm: 0
LF: _owner
Value: u
Fields: 
Finance Type: undef
State_var: _initialized
Finding type for _initialized(bool ... )
querrying!!!
Source address: u
Saved name: _initialized

Name: PIC_10 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
State_var: _initializing
Finding type for _initializing(bool ... )
querrying!!!
Source address: u
Saved name: _initializing

Name: PIC_11 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
State_var: processedHash
Finding type for processedHash(mapping(bytes32 => bool) ... )
querrying!!!
Source address: u
Saved name: processedHash

Name: PIC_12 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
State_var: NATIVE
Finding type for NATIVE(address ... )
prev address? u
Head Addr: 3
    Norm: 6
    Set: {3}
    Fin: NULL
querrying!!!
Source address: 3
Saved name: NATIVE

Name: PIC_13 Function: None
Num: -1
Den: -1
Address: 3
Norm: 6
LF: NATIVE
Value: u
Fields: 
Finance Type: undef
State_var: _pauser
Finding type for _pauser(address ... )
prev address? u
Head Addr: 1
    Norm: 0
    Set: {1}
    Fin: NULL
querrying!!!
Source address: 1
Saved name: _pauser

Name: PIC_14 Function: None
Num: -1
Den: -1
Address: 1
Norm: 0
LF: _pauser
Value: u
Fields: 
Finance Type: undef
State_var: _trustedForwarder
Finding type for _trustedForwarder(address ... )
prev address? u
Head Addr: 4
    Norm: 0
    Set: {4}
    Fin: NULL
querrying!!!
Source address: 4
Saved name: _trustedForwarder

Name: PIC_15 Function: None
Num: -1
Den: -1
Address: 4
Norm: 0
LF: _trustedForwarder
Value: u
Fields: 
Finance Type: undef
State_var: _paused
Finding type for _paused(bool ... )
querrying!!!
Source address: u
Saved name: _paused

Name: PIC_16 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
State_var: _ENTERED
Finding type for _ENTERED(uint256 ... )
querrying!!!
Source address: u
Saved name: _ENTERED

Name: PIC_17 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
State_var: _NOT_ENTERED
Finding type for _NOT_ENTERED(uint256 ... )
querrying!!!
Source address: u
Saved name: _NOT_ENTERED

Name: PIC_18 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
State_var: _status
Finding type for _status(uint256 ... )
querrying!!!
Source address: u
Saved name: _status

Name: PIC_19 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef



initialize
Finding type for _executorManagerAddress(address ... )
prev address? u
Head Addr: -999
    Norm: 0
    Set: {-999}
    Fin: NULL
Finding type for _pauser(address ... )
prev address? u
Head Addr: -998
    Norm: 0
    Set: {-998}
    Fin: NULL
Finding type for _trustedForwarder(address ... )
prev address? u
Head Addr: -997
    Norm: 0
    Set: {-997}
    Fin: NULL
Finding type for _tokenManager(address ... )
prev address? u
Head Addr: -996
    Norm: 0
    Set: {-996}
    Fin: NULL
Finding type for _liquidityProviders(address ... )
prev address? u
Head Addr: -995
    Norm: 0
    Set: {-995}
    Fin: NULL
Param: 0
    num: []
    den: []
    norm: 0
    link: _executorManagerAddress
    fields: []
    fintype: -1
Param: 1
    num: []
    den: []
    norm: 0
    link: _pauser
    fields: []
    fintype: -1
Param: 2
    num: []
    den: []
    norm: 0
    link: _trustedForwarder
    fields: []
    fintype: -1
Param: 3
    num: []
    den: []
    norm: 0
    link: _tokenManager
    fields: []
    fintype: -1
Param: 4
    num: []
    den: []
    norm: 0
    link: _liquidityProviders
    fields: []
    fintype: -1


MODIFIER_CALL, Initializable.initializer()()
TMP_64 = CONVERT 0 to address
TMP_65(bool) = _executorManagerAddress_1 != TMP_64
TMP_66(None) = SOLIDITY_CALL require(bool,string)(TMP_65,ExecutorManager cannot be 0x0)
TMP_67 = CONVERT 0 to address
TMP_68(bool) = _trustedForwarder_1 != TMP_67
TMP_69(None) = SOLIDITY_CALL require(bool,string)(TMP_68,TrustedForwarder cannot be 0x0)
TMP_70 = CONVERT 0 to address
TMP_71(bool) = _liquidityProviders_1 != TMP_70
TMP_72(None) = SOLIDITY_CALL require(bool,string)(TMP_71,LiquidityProviders cannot be 0x0)
INTERNAL_CALL, ERC2771ContextUpgradeable.__ERC2771Context_init(address)(_trustedForwarder_1)
INTERNAL_CALL, ReentrancyGuardUpgradeable.__ReentrancyGuard_init()()
INTERNAL_CALL, OwnableUpgradeable.__Ownable_init()()
INTERNAL_CALL, Pausable.__Pausable_init(address)(_pauser_1)
TMP_77 = CONVERT _executorManagerAddress_1 to IExecutorManager
executorManager_1(IExecutorManager) := TMP_77(IExecutorManager)
TMP_78 = CONVERT _tokenManager_1 to ITokenManager
tokenManager_1(ITokenManager) := TMP_78(ITokenManager)
TMP_79 = CONVERT _liquidityProviders_1 to ILiquidityProviders
liquidityProviders_1(ILiquidityProviders) := TMP_79(ILiquidityProviders)
baseGas_1(uint256) := 21000(uint256)


Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, Initializable.initializer()()
Propogating parameters and globals to SSA variables...
End popogation
Name: _initialized, Num: 1
Globalname: _initialized
global...

Name: PIC_10 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: _initializing, Num: 1
Globalname: _initializing
global...

Name: PIC_11 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
_initialized_1(bool) := ϕ(['_initialized_0', '_initialized_2'])
Phi
[i]Type for _initialized

Name: _initialized Function: initializer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_initializing_1(bool) := ϕ(['_initializing_0', '_initializing_3', '_initializing_2'])
Phi
[i]Type for _initializing

Name: _initializing Function: initializer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_295 = ! _initialized_1 
[i]Type for TMP_295

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_296(bool) = _initializing_1 || TMP_295
[i]Type for TMP_296

Name: TMP_296 Function: initializer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_297(None) = SOLIDITY_CALL require(bool,string)(TMP_296,Initializable: contract is already initialized)
[i]Type for TMP_297

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: isTopLevelCall, Num: 1
Globalname: isTopLevelCall
End popogation
TMP_298 = ! _initializing_1 
[i]Type for TMP_298

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
isTopLevelCall_1(bool) := TMP_298(bool)
asgn
init
end
_______________

Name: TMP_298 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: isTopLevelCall Function: initializer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for isTopLevelCall

Name: isTopLevelCall Function: initializer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: isTopLevelCall, Num: 1
Globalname: isTopLevelCall
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: _initializing, Num: 2
Globalname: _initializing
global...

Name: PIC_11 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
End popogation
_initializing_2(bool) := True(bool)
asgn
init
end
_______________

Name: True Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _initializing Function: initializer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for _initializing

Name: _initializing Function: initializer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: True
Fields: 
Finance Type: undef
XXXX
Source address: u
Propogating parameters and globals to SSA variables...
Name: isTopLevelCall, Num: 1
Globalname: isTopLevelCall
End popogation
Propogating parameters and globals to SSA variables...
Name: _initializing, Num: 3
Globalname: _initializing
global...

Name: _initializing Function: initializer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: True
Fields: 
Finance Type: undef
Source address: u
End popogation
_initializing_3(bool) := False(bool)
asgn
init
end
_______________

Name: False Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _initializing Function: initializer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: True
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for _initializing

Name: _initializing Function: initializer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: False
Fields: 
Finance Type: undef
XXXX
Source address: u
Propogating parameters and globals to SSA variables...
Name: _initialized, Num: 2
Globalname: _initialized
global...

Name: PIC_10 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
End popogation
_initialized_2(bool) := True(bool)
asgn
init
end
_______________

Name: True Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _initialized Function: initializer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for _initialized

Name: _initialized Function: initializer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: True
Fields: 
Finance Type: undef
XXXX
Source address: u
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation

Name: _initialized Function: initializer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: _initializing Function: initializer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
_initialized_1(bool) := ϕ(['_initialized_0', '_initialized_2'])
Phi
[i]Type for _initialized

Name: _initialized Function: initializer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_initializing_1(bool) := ϕ(['_initializing_0', '_initializing_3', '_initializing_2'])
Phi
[i]Type for _initializing

Name: _initializing Function: initializer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_295 = ! _initialized_1 
[i]Type for TMP_295

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_296(bool) = _initializing_1 || TMP_295
[i]Type for TMP_296

Name: TMP_296 Function: initializer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_297(None) = SOLIDITY_CALL require(bool,string)(TMP_296,Initializable: contract is already initialized)
[i]Type for TMP_297

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: isTopLevelCall, Num: 1
Globalname: isTopLevelCall
End popogation
TMP_298 = ! _initializing_1 
[i]Type for TMP_298

Name: TMP_298 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
isTopLevelCall_1(bool) := TMP_298(bool)
asgn
init
end
_______________

Name: TMP_298 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: isTopLevelCall Function: initializer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for isTopLevelCall

Name: isTopLevelCall Function: initializer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: isTopLevelCall, Num: 1
Globalname: isTopLevelCall
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
_initializing_2(bool) := True(bool)
asgn
init
end
_______________

Name: True Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _initializing Function: initializer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: True
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for _initializing

Name: _initializing Function: initializer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: True
Fields: 
Finance Type: undef
XXXX
Source address: u
Propogating parameters and globals to SSA variables...
Name: isTopLevelCall, Num: 1
Globalname: isTopLevelCall
End popogation
Propogating parameters and globals to SSA variables...
End popogation
_initializing_3(bool) := False(bool)
asgn
init
end
_______________

Name: False Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _initializing Function: initializer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: False
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for _initializing

Name: _initializing Function: initializer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: False
Fields: 
Finance Type: undef
XXXX
Source address: u
Propogating parameters and globals to SSA variables...
End popogation
_initialized_2(bool) := True(bool)
asgn
init
end
_______________

Name: True Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _initialized Function: initializer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: True
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for _initialized

Name: _initialized Function: initializer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: True
Fields: 
Finance Type: undef
XXXX
Source address: u
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Source address: -999
End popogation
TMP_64 = CONVERT 0 to address
Converting 0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
_______________

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_64 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_64

Name: TMP_64 Function: initialize
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_65(bool) = _executorManagerAddress_1 != TMP_64
[i]Type for TMP_65

Name: TMP_65 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_66(None) = SOLIDITY_CALL require(bool,string)(TMP_65,ExecutorManager cannot be 0x0)
[i]Type for TMP_66

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Source address: -997
End popogation
TMP_67 = CONVERT 0 to address
Converting 0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
_______________

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_67 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_67

Name: TMP_67 Function: initialize
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_68(bool) = _trustedForwarder_1 != TMP_67
[i]Type for TMP_68

Name: TMP_68 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_69(None) = SOLIDITY_CALL require(bool,string)(TMP_68,TrustedForwarder cannot be 0x0)
[i]Type for TMP_69

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Source address: -995
End popogation
TMP_70 = CONVERT 0 to address
Converting 0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
_______________

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_70 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_70

Name: TMP_70 Function: initialize
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_71(bool) = _liquidityProviders_1 != TMP_70
[i]Type for TMP_71

Name: TMP_71 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_72(None) = SOLIDITY_CALL require(bool,string)(TMP_71,LiquidityProviders cannot be 0x0)
[i]Type for TMP_72

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, ERC2771ContextUpgradeable.__ERC2771Context_init(address)(_trustedForwarder_1)
init
end
[[], [], 0, '_trustedForwarder', [], -1, -997, 'u']

Name: trustedForwarder Function: None
Num: 
Den: 
Address: -997
Norm: 0
LF: _trustedForwarder
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
Source address: -997

Name: trustedForwarder_1 Function: None
Num: 
Den: 
Address: -997
Norm: 0
LF: _trustedForwarder
Value: u
Fields: 
Finance Type: undef
Phid
trustedForwarder_1(address) := ϕ(['_trustedForwarder_1'])
Phi
[i]Type for trustedForwarder

Name: trustedForwarder Function: __ERC2771Context_init
Num: 
Den: 
Address: -997
Norm: 0
LF: _trustedForwarder
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, Initializable.initializer()()
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, ContextUpgradeable.__Context_init_unchained()()
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, Initializable.initializer()()
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, Initializable.initializer()()
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, ERC2771ContextUpgradeable.__ERC2771Context_init_unchained(address)(trustedForwarder_1)
init
end
[[], [], 0, '_trustedForwarder', [], -1, -997, 'u']

Name: trustedForwarder Function: None
Num: 
Den: 
Address: -997
Norm: 0
LF: _trustedForwarder
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
Source address: -997

Name: trustedForwarder_1 Function: None
Num: 
Den: 
Address: -997
Norm: 0
LF: _trustedForwarder
Value: u
Fields: 
Finance Type: undef
Phid
trustedForwarder_1(address) := ϕ(['trustedForwarder_1'])
Phi
[i]Type for trustedForwarder

Name: trustedForwarder Function: __ERC2771Context_init_unchained
Num: 
Den: 
Address: -997
Norm: 0
LF: _trustedForwarder
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, Initializable.initializer()()
Propogating parameters and globals to SSA variables...
Name: _trustedForwarder, Num: 1
Globalname: _trustedForwarder
global...

Name: PIC_15 Function: None
Num: -1
Den: -1
Address: 4
Norm: 0
LF: _trustedForwarder
Value: u
Fields: 
Finance Type: undef
Source address: 4
End popogation
_trustedForwarder_1(address) := trustedForwarder_1(address)
asgn
init
end
_______________

Name: trustedForwarder Function: __ERC2771Context_init_unchained
Num: 
Den: 
Address: -997
Norm: 0
LF: _trustedForwarder
Value: u
Fields: 
Finance Type: undef

Name: _trustedForwarder Function: __ERC2771Context_init_unchained
Num: -1
Den: -1
Address: 4
Norm: 0
LF: _trustedForwarder
Value: u
Fields: 
Finance Type: undef
Source address: -997
Finance type key: (-1, -1)
[i]Type for _trustedForwarder

Name: _trustedForwarder Function: __ERC2771Context_init_unchained
Num: -1
Den: -1
Address: -997
Norm: 0
LF: _trustedForwarder
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Source address: -997

Name: trustedForwarder_1 Function: __ERC2771Context_init_unchained
Num: 
Den: 
Address: -997
Norm: 0
LF: _trustedForwarder
Value: u
Fields: 
Finance Type: undef
Phid
trustedForwarder_1(address) := ϕ(['trustedForwarder_1'])
Phi
[i]Type for trustedForwarder

Name: trustedForwarder Function: __ERC2771Context_init_unchained
Num: 
Den: 
Address: -997
Norm: 0
LF: _trustedForwarder
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, Initializable.initializer()()
Propogating parameters and globals to SSA variables...
End popogation
_trustedForwarder_1(address) := trustedForwarder_1(address)
asgn
init
end
_______________

Name: trustedForwarder Function: __ERC2771Context_init_unchained
Num: 
Den: 
Address: -997
Norm: 0
LF: _trustedForwarder
Value: u
Fields: 
Finance Type: undef

Name: _trustedForwarder Function: __ERC2771Context_init_unchained
Num: -1
Den: -1
Address: -997
Norm: 0
LF: _trustedForwarder
Value: u
Fields: 
Finance Type: undef
Source address: -997
Finance type key: (-1, -1)
[i]Type for _trustedForwarder

Name: _trustedForwarder Function: __ERC2771Context_init_unchained
Num: -1
Den: -1
Address: -997
Norm: 0
LF: _trustedForwarder
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Source address: -997

Name: trustedForwarder_1 Function: __ERC2771Context_init
Num: 
Den: 
Address: -997
Norm: 0
LF: _trustedForwarder
Value: u
Fields: 
Finance Type: undef
Phid
trustedForwarder_1(address) := ϕ(['_trustedForwarder_1'])
Phi
[i]Type for trustedForwarder

Name: trustedForwarder Function: __ERC2771Context_init
Num: 
Den: 
Address: -997
Norm: 0
LF: _trustedForwarder
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, Initializable.initializer()()
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, ContextUpgradeable.__Context_init_unchained()()
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, ERC2771ContextUpgradeable.__ERC2771Context_init_unchained(address)(trustedForwarder_1)
init
end
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, ReentrancyGuardUpgradeable.__ReentrancyGuard_init()()
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, Initializable.initializer()()
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, ReentrancyGuardUpgradeable.__ReentrancyGuard_init_unchained()()
Propogating parameters and globals to SSA variables...
End popogation
Name: _NOT_ENTERED, Num: 1
Globalname: _NOT_ENTERED
global...

Name: PIC_18 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
_NOT_ENTERED_1(uint256) := ϕ(['_NOT_ENTERED_2', '_NOT_ENTERED_0'])
Phi
[i]Type for _NOT_ENTERED

Name: _NOT_ENTERED Function: __ReentrancyGuard_init_unchained
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, Initializable.initializer()()
Propogating parameters and globals to SSA variables...
Name: _NOT_ENTERED, Num: 2
Globalname: _NOT_ENTERED
global...

Name: PIC_18 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Name: _status, Num: 1
Globalname: _status
global...

Name: PIC_19 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
End popogation
_status_1(uint256) := _NOT_ENTERED_2(uint256)
asgn
init
end
_______________

Name: _NOT_ENTERED Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _status Function: __ReentrancyGuard_init_unchained
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for _status

Name: _status Function: __ReentrancyGuard_init_unchained
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Propogating parameters and globals to SSA variables...
End popogation

Name: _NOT_ENTERED Function: __ReentrancyGuard_init_unchained
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
_NOT_ENTERED_1(uint256) := ϕ(['_NOT_ENTERED_2', '_NOT_ENTERED_0'])
Phi
[i]Type for _NOT_ENTERED

Name: _NOT_ENTERED Function: __ReentrancyGuard_init_unchained
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, Initializable.initializer()()
Propogating parameters and globals to SSA variables...
End popogation
_status_1(uint256) := _NOT_ENTERED_2(uint256)
asgn
init
end
_______________

Name: _NOT_ENTERED Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _status Function: __ReentrancyGuard_init_unchained
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for _status

Name: _status Function: __ReentrancyGuard_init_unchained
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, Initializable.initializer()()
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, ReentrancyGuardUpgradeable.__ReentrancyGuard_init_unchained()()
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, OwnableUpgradeable.__Ownable_init()()
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, Initializable.initializer()()
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, ContextUpgradeable.__Context_init_unchained()()
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, OwnableUpgradeable.__Ownable_init_unchained()()
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, Initializable.initializer()()
Propogating parameters and globals to SSA variables...
End popogation
TMP_19(address) = INTERNAL_CALL, LiquidityPool._msgSender()()
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
TMP_291(address) = INTERNAL_CALL, ERC2771ContextUpgradeable._msgSender()()
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
TMP_5(bool) = INTERNAL_CALL, ERC2771ContextUpgradeable.isTrustedForwarder(address)(msg.sender)
init
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: forwarder Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: forwarder
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
Source address: u

Name: forwarder_1 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: forwarder
Value: u
Fields: 
Finance Type: undef
Phid
Name: _trustedForwarder, Num: 2
Globalname: _trustedForwarder
global...

Name: PIC_15 Function: None
Num: -1
Den: -1
Address: 4
Norm: 0
LF: _trustedForwarder
Value: u
Fields: 
Finance Type: undef
Source address: 4

Name: None Function: None
Num: -1
Den: -1
Address: 4
Norm: 0
LF: _trustedForwarder
Value: u
Fields: 
Finance Type: undef
Phid
forwarder_1(address) := ϕ(['msg.sender'])
Phi
[i]Type for forwarder

Name: forwarder Function: isTrustedForwarder
Num: -1
Den: -1
Address: u
Norm: u
LF: forwarder
Value: u
Fields: 
Finance Type: undef
XXXX
_trustedForwarder_2(address) := ϕ(['_trustedForwarder_0', '_trustedForwarder_3', '_trustedForwarder_1'])
Phi
[i]Type for _trustedForwarder

Name: _trustedForwarder Function: isTrustedForwarder
Num: -1
Den: -1
Address: 4
Norm: 0
LF: _trustedForwarder
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_4(bool) = forwarder_1 == _trustedForwarder_2
[i]Type for TMP_4

Name: TMP_4 Function: isTrustedForwarder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_4
RETURN
init
end

Name: TMP_4 Function: isTrustedForwarder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
Source address: u

Name: forwarder_1 Function: isTrustedForwarder
Num: -1
Den: -1
Address: u
Norm: u
LF: forwarder
Value: u
Fields: 
Finance Type: undef
Phid

Name: _trustedForwarder Function: isTrustedForwarder
Num: -1
Den: -1
Address: 4
Norm: 0
LF: _trustedForwarder
Value: u
Fields: 
Finance Type: undef
Phid
forwarder_1(address) := ϕ(['msg.sender'])
Phi
[i]Type for forwarder

Name: forwarder Function: isTrustedForwarder
Num: -1
Den: -1
Address: u
Norm: u
LF: forwarder
Value: u
Fields: 
Finance Type: undef
XXXX
_trustedForwarder_2(address) := ϕ(['_trustedForwarder_0', '_trustedForwarder_3', '_trustedForwarder_1'])
Phi
[i]Type for _trustedForwarder

Name: _trustedForwarder Function: isTrustedForwarder
Num: -1
Den: -1
Address: 4
Norm: 0
LF: _trustedForwarder
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_4(bool) = forwarder_1 == _trustedForwarder_2
[i]Type for TMP_4

Name: TMP_4 Function: isTrustedForwarder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_4
RETURN
init
end

Name: TMP_4 Function: isTrustedForwarder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Source address: u
[i]Type for TMP_5

Name: TMP_5 Function: _msgSender
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: sender, Num: 1
Globalname: sender
End popogation
TMP_6(uint256) = SOLIDITY_CALL calldatasize()()
[i]Type for TMP_6

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_7(uint256) = TMP_6 - 20
init
end
init
end
init
end
_______________

Name: 20 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_7 Function: _msgSender
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_7

Name: TMP_7 Function: _msgSender
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
XXXX
TMP_8(uint256) = SOLIDITY_CALL calldataload(uint256)(TMP_7)
[i]Type for TMP_8

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_9(uint256) = TMP_8 >> 96
[i]Type for TMP_9

Name: TMP_9 Function: _msgSender
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
sender_1(address) := TMP_9(uint256)
asgn
init
end
_______________

Name: TMP_9 Function: _msgSender
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: sender Function: _msgSender
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for sender

Name: sender Function: _msgSender
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
TMP_10(address) = INTERNAL_CALL, ContextUpgradeable._msgSender()()
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
RETURN msg.sender
RETURN
init
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
RETURN msg.sender
RETURN
init
Source address: u
Source address: u
[i]Type for TMP_10

Name: TMP_10 Function: _msgSender
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_10
RETURN
init
end

Name: TMP_10 Function: _msgSender
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
TMP_5(bool) = INTERNAL_CALL, ERC2771ContextUpgradeable.isTrustedForwarder(address)(msg.sender)
init
init
end
_______________

Name: PIC_27 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_5 Function: _msgSender
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_5

Name: TMP_5 Function: _msgSender
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: sender, Num: 1
Globalname: sender
End popogation
TMP_6(uint256) = SOLIDITY_CALL calldatasize()()
[i]Type for TMP_6

Name: TMP_6 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_7(uint256) = TMP_6 - 20
init
end
init
end
init
end
_______________

Name: 20 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_7 Function: _msgSender
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_7

Name: TMP_7 Function: _msgSender
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
XXXX
TMP_8(uint256) = SOLIDITY_CALL calldataload(uint256)(TMP_7)
[i]Type for TMP_8

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_9(uint256) = TMP_8 >> 96
[i]Type for TMP_9

Name: TMP_9 Function: _msgSender
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
sender_1(address) := TMP_9(uint256)
asgn
init
end
_______________

Name: TMP_9 Function: _msgSender
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: sender Function: _msgSender
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for sender

Name: sender Function: _msgSender
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
TMP_10(address) = INTERNAL_CALL, ContextUpgradeable._msgSender()()
init
end
_______________

Name: PIC_30 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_10 Function: _msgSender
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_10

Name: TMP_10 Function: _msgSender
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_10
RETURN
init
end

Name: TMP_10 Function: _msgSender
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Source address: u
[i]Type for TMP_291

Name: TMP_291 Function: _msgSender
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_291
RETURN
init
end

Name: TMP_291 Function: _msgSender
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
TMP_291(address) = INTERNAL_CALL, ERC2771ContextUpgradeable._msgSender()()
init
end
_______________

Name: PIC_32 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_291 Function: _msgSender
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_291

Name: TMP_291 Function: _msgSender
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_291
RETURN
init
end

Name: TMP_291 Function: _msgSender
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Source address: u
[i]Type for TMP_19

Name: TMP_19 Function: __Ownable_init_unchained
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
INTERNAL_CALL, OwnableUpgradeable._setOwner(address)(TMP_19)
init
end
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: newOwner Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: newOwner
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
Source address: u

Name: newOwner_1 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: newOwner
Value: u
Fields: 
Finance Type: undef
Phid
Name: _owner, Num: 2
Globalname: _owner
global...

Name: PIC_9 Function: None
Num: -1
Den: -1
Address: 2
Norm: 0
LF: _owner
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: None Function: None
Num: -1
Den: -1
Address: 2
Norm: 0
LF: _owner
Value: u
Fields: 
Finance Type: undef
Phid
newOwner_1(address) := ϕ(['TMP_22', 'TMP_19', 'newOwner_1'])
Phi
[i]Type for newOwner

Name: newOwner Function: _setOwner
Num: -1
Den: -1
Address: u
Norm: u
LF: newOwner
Value: u
Fields: 
Finance Type: undef
XXXX
_owner_2(address) := ϕ(['_owner_0', '_owner_3'])
Phi
[i]Type for _owner

Name: _owner Function: _setOwner
Num: -1
Den: -1
Address: 2
Norm: 0
LF: _owner
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: oldOwner, Num: 1
Globalname: oldOwner
End popogation
oldOwner_1(address) := _owner_2(address)
asgn
init
end
_______________

Name: _owner Function: _setOwner
Num: -1
Den: -1
Address: 2
Norm: 0
LF: _owner
Value: u
Fields: 
Finance Type: undef

Name: oldOwner Function: _setOwner
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: 2
Finance type key: (-1, -1)
[i]Type for oldOwner

Name: oldOwner Function: _setOwner
Num: -1
Den: -1
Address: 2
Norm: 0
LF: _owner
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _owner, Num: 3
Globalname: _owner
global...

Name: PIC_9 Function: None
Num: -1
Den: -1
Address: 2
Norm: 0
LF: _owner
Value: u
Fields: 
Finance Type: undef
Source address: 2
End popogation
_owner_3(address) := newOwner_1(address)
asgn
init
end
_______________

Name: newOwner Function: _setOwner
Num: -1
Den: -1
Address: u
Norm: u
LF: newOwner
Value: u
Fields: 
Finance Type: undef

Name: _owner Function: _setOwner
Num: -1
Den: -1
Address: 2
Norm: 0
LF: _owner
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for _owner

Name: _owner Function: _setOwner
Num: -1
Den: -1
Address: u
Norm: 0
LF: newOwner
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Source address: u

Name: newOwner_1 Function: _setOwner
Num: -1
Den: -1
Address: u
Norm: u
LF: newOwner
Value: u
Fields: 
Finance Type: undef
Phid

Name: _owner Function: _setOwner
Num: -1
Den: -1
Address: 2
Norm: 0
LF: _owner
Value: u
Fields: 
Finance Type: undef
Phid
newOwner_1(address) := ϕ(['TMP_22', 'TMP_19', 'newOwner_1'])
Phi
[i]Type for newOwner

Name: newOwner Function: _setOwner
Num: -1
Den: -1
Address: u
Norm: u
LF: newOwner
Value: u
Fields: 
Finance Type: undef
XXXX
_owner_2(address) := ϕ(['_owner_0', '_owner_3'])
Phi
[i]Type for _owner

Name: _owner Function: _setOwner
Num: -1
Den: -1
Address: 2
Norm: 0
LF: _owner
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: oldOwner, Num: 1
Globalname: oldOwner
End popogation
oldOwner_1(address) := _owner_2(address)
asgn
init
end
_______________

Name: _owner Function: _setOwner
Num: -1
Den: -1
Address: 2
Norm: 0
LF: _owner
Value: u
Fields: 
Finance Type: undef

Name: oldOwner Function: _setOwner
Num: 
Den: 
Address: u
Norm: u
LF: _owner
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: 2
Finance type key: (-1, -1)
[i]Type for oldOwner

Name: oldOwner Function: _setOwner
Num: -1
Den: -1
Address: 2
Norm: 0
LF: _owner
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
_owner_3(address) := newOwner_1(address)
asgn
init
end
_______________

Name: newOwner Function: _setOwner
Num: -1
Den: -1
Address: u
Norm: u
LF: newOwner
Value: u
Fields: 
Finance Type: undef

Name: _owner Function: _setOwner
Num: -1
Den: -1
Address: u
Norm: 0
LF: newOwner
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for _owner

Name: _owner Function: _setOwner
Num: -1
Den: -1
Address: u
Norm: 0
LF: newOwner
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, Initializable.initializer()()
Propogating parameters and globals to SSA variables...
End popogation
TMP_19(address) = INTERNAL_CALL, LiquidityPool._msgSender()()
init
end
_______________

Name: PIC_33 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_19 Function: __Ownable_init_unchained
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_19

Name: TMP_19 Function: __Ownable_init_unchained
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
INTERNAL_CALL, OwnableUpgradeable._setOwner(address)(TMP_19)
init
end
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, Initializable.initializer()()
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, ContextUpgradeable.__Context_init_unchained()()
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, OwnableUpgradeable.__Ownable_init_unchained()()
Propogating parameters and globals to SSA variables...
Source address: -998
End popogation
INTERNAL_CALL, Pausable.__Pausable_init(address)(_pauser_1)
init
end
[[], [], 0, '_pauser', [], -1, -998, 'u']

Name: pauser Function: None
Num: 
Den: 
Address: -998
Norm: 0
LF: _pauser
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
Source address: -998

Name: pauser_1 Function: None
Num: 
Den: 
Address: -998
Norm: 0
LF: _pauser
Value: u
Fields: 
Finance Type: undef
Phid
pauser_1(address) := ϕ(['_pauser_1'])
Phi
[i]Type for pauser

Name: pauser Function: __Pausable_init
Num: 
Den: 
Address: -998
Norm: 0
LF: _pauser
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, Initializable.initializer()()
Propogating parameters and globals to SSA variables...
End popogation
TMP_31 = CONVERT 0 to address
Converting 0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
_______________

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_31 Function: __Pausable_init
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_31

Name: TMP_31 Function: __Pausable_init
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_32(bool) = pauser_1 != TMP_31
[i]Type for TMP_32

Name: TMP_32 Function: __Pausable_init
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_33(None) = SOLIDITY_CALL require(bool,string)(TMP_32,Pauser Address cannot be 0)
[i]Type for TMP_33

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, PausableUpgradeable.__Pausable_init()()
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, Initializable.initializer()()
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, ContextUpgradeable.__Context_init_unchained()()
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, PausableUpgradeable.__Pausable_init_unchained()()
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, Initializable.initializer()()
Propogating parameters and globals to SSA variables...
Name: _paused, Num: 1
Globalname: _paused
global...

Name: PIC_16 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
End popogation
_paused_1(bool) := False(bool)
asgn
init
end
_______________

Name: False Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _paused Function: __Pausable_init_unchained
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for _paused

Name: _paused Function: __Pausable_init_unchained
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: False
Fields: 
Finance Type: undef
XXXX
Source address: u
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, Initializable.initializer()()
Propogating parameters and globals to SSA variables...
End popogation
_paused_1(bool) := False(bool)
asgn
init
end
_______________

Name: False Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _paused Function: __Pausable_init_unchained
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: False
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for _paused

Name: _paused Function: __Pausable_init_unchained
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: False
Fields: 
Finance Type: undef
XXXX
Source address: u
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, Initializable.initializer()()
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, ContextUpgradeable.__Context_init_unchained()()
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, PausableUpgradeable.__Pausable_init_unchained()()
Propogating parameters and globals to SSA variables...
Name: _pauser, Num: 1
Globalname: _pauser
global...

Name: PIC_14 Function: None
Num: -1
Den: -1
Address: 1
Norm: 0
LF: _pauser
Value: u
Fields: 
Finance Type: undef
Source address: 1
End popogation
_pauser_1(address) := pauser_1(address)
asgn
init
end
_______________

Name: pauser Function: __Pausable_init
Num: 
Den: 
Address: -998
Norm: 0
LF: _pauser
Value: u
Fields: 
Finance Type: undef

Name: _pauser Function: __Pausable_init
Num: -1
Den: -1
Address: 1
Norm: 0
LF: _pauser
Value: u
Fields: 
Finance Type: undef
Source address: -998
Finance type key: (-1, -1)
[i]Type for _pauser

Name: _pauser Function: __Pausable_init
Num: -1
Den: -1
Address: -998
Norm: 0
LF: _pauser
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Source address: -998

Name: pauser_1 Function: __Pausable_init
Num: 
Den: 
Address: -998
Norm: 0
LF: _pauser
Value: u
Fields: 
Finance Type: undef
Phid
pauser_1(address) := ϕ(['_pauser_1'])
Phi
[i]Type for pauser

Name: pauser Function: __Pausable_init
Num: 
Den: 
Address: -998
Norm: 0
LF: _pauser
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, Initializable.initializer()()
Propogating parameters and globals to SSA variables...
End popogation
TMP_31 = CONVERT 0 to address
Converting 0

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
_______________

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_31 Function: __Pausable_init
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_31

Name: TMP_31 Function: __Pausable_init
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_32(bool) = pauser_1 != TMP_31
[i]Type for TMP_32

Name: TMP_32 Function: __Pausable_init
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_33(None) = SOLIDITY_CALL require(bool,string)(TMP_32,Pauser Address cannot be 0)
[i]Type for TMP_33

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, PausableUpgradeable.__Pausable_init()()
Propogating parameters and globals to SSA variables...
End popogation
_pauser_1(address) := pauser_1(address)
asgn
init
end
_______________

Name: pauser Function: __Pausable_init
Num: 
Den: 
Address: -998
Norm: 0
LF: _pauser
Value: u
Fields: 
Finance Type: undef

Name: _pauser Function: __Pausable_init
Num: -1
Den: -1
Address: -998
Norm: 0
LF: _pauser
Value: u
Fields: 
Finance Type: undef
Source address: -998
Finance type key: (-1, -1)
[i]Type for _pauser

Name: _pauser Function: __Pausable_init
Num: -1
Den: -1
Address: -998
Norm: 0
LF: _pauser
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: executorManager, Num: 1
Globalname: executorManager
global...

Name: PIC_8 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
End popogation
TMP_77 = CONVERT _executorManagerAddress_1 to IExecutorManager
Converting _executorManagerAddress_1

Name: _executorManagerAddress_1 Function: None
Num: 
Den: 
Address: -999
Norm: 0
LF: _executorManagerAddress
Value: u
Fields: 
Finance Type: undef
init
end
_______________

Name: _executorManagerAddress Function: None
Num: 
Den: 
Address: -999
Norm: 0
LF: _executorManagerAddress
Value: u
Fields: 
Finance Type: undef

Name: TMP_77 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: -999
ExecutorManager
[i]Type for TMP_77

Name: TMP_77 Function: initialize
Num: 
Den: 
Address: -999
Norm: 0
LF: ExecutorManager
Value: u
Fields: 
Finance Type: undef
XXXX
executorManager_1(IExecutorManager) := TMP_77(IExecutorManager)
asgn
init
end
_______________

Name: TMP_77 Function: initialize
Num: 
Den: 
Address: -999
Norm: 0
LF: ExecutorManager
Value: u
Fields: 
Finance Type: undef

Name: executorManager Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: -999
Finance type key: (-1, -1)
[i]Type for executorManager

Name: executorManager Function: initialize
Num: -1
Den: -1
Address: -999
Norm: 0
LF: ExecutorManager
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: -999
Propogating parameters and globals to SSA variables...
Source address: -996
Name: tokenManager, Num: 1
Globalname: tokenManager
global...

Name: PIC_7 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
End popogation
TMP_78 = CONVERT _tokenManager_1 to ITokenManager
Converting _tokenManager_1

Name: _tokenManager_1 Function: None
Num: 
Den: 
Address: -996
Norm: 0
LF: _tokenManager
Value: u
Fields: 
Finance Type: undef
init
end
_______________

Name: _tokenManager Function: None
Num: 
Den: 
Address: -996
Norm: 0
LF: _tokenManager
Value: u
Fields: 
Finance Type: undef

Name: TMP_78 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: -996
TokenManager
[i]Type for TMP_78

Name: TMP_78 Function: initialize
Num: 
Den: 
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
tokenManager_1(ITokenManager) := TMP_78(ITokenManager)
asgn
init
end
_______________

Name: TMP_78 Function: initialize
Num: 
Den: 
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef

Name: tokenManager Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: -996
Finance type key: (-1, -1)
[i]Type for tokenManager

Name: tokenManager Function: initialize
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: -996
Propogating parameters and globals to SSA variables...
Name: liquidityProviders, Num: 1
Globalname: liquidityProviders
global...

Name: PIC_3 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
End popogation
TMP_79 = CONVERT _liquidityProviders_1 to ILiquidityProviders
Converting _liquidityProviders_1

Name: _liquidityProviders_1 Function: None
Num: 
Den: 
Address: -995
Norm: 0
LF: _liquidityProviders
Value: u
Fields: 
Finance Type: undef
init
end
_______________

Name: _liquidityProviders Function: None
Num: 
Den: 
Address: -995
Norm: 0
LF: _liquidityProviders
Value: u
Fields: 
Finance Type: undef

Name: TMP_79 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: -995
LiquidityProviders
[i]Type for TMP_79

Name: TMP_79 Function: initialize
Num: 
Den: 
Address: -995
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_1(ILiquidityProviders) := TMP_79(ILiquidityProviders)
asgn
init
end
_______________

Name: TMP_79 Function: initialize
Num: 
Den: 
Address: -995
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef

Name: liquidityProviders Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: -995
Finance type key: (-1, -1)
[i]Type for liquidityProviders

Name: liquidityProviders Function: initialize
Num: -1
Den: -1
Address: -995
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: -995
Propogating parameters and globals to SSA variables...
Name: baseGas, Num: 1
Globalname: baseGas
global...

Name: PIC_5 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
End popogation
baseGas_1(uint256) := 21000(uint256)
asgn
init
end
_______________

Name: 21000 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef

Name: baseGas Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for baseGas

Name: baseGas Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 21000
Fields: 
Finance Type: undef
XXXX
Source address: u


MODIFIER_CALL, Initializable.initializer()()
TMP_64 = CONVERT 0 to address
TMP_65(bool) = _executorManagerAddress_1 != TMP_64
TMP_66(None) = SOLIDITY_CALL require(bool,string)(TMP_65,ExecutorManager cannot be 0x0)
TMP_67 = CONVERT 0 to address
TMP_68(bool) = _trustedForwarder_1 != TMP_67
TMP_69(None) = SOLIDITY_CALL require(bool,string)(TMP_68,TrustedForwarder cannot be 0x0)
TMP_70 = CONVERT 0 to address
TMP_71(bool) = _liquidityProviders_1 != TMP_70
TMP_72(None) = SOLIDITY_CALL require(bool,string)(TMP_71,LiquidityProviders cannot be 0x0)
INTERNAL_CALL, ERC2771ContextUpgradeable.__ERC2771Context_init(address)(_trustedForwarder_1)
INTERNAL_CALL, ReentrancyGuardUpgradeable.__ReentrancyGuard_init()()
INTERNAL_CALL, OwnableUpgradeable.__Ownable_init()()
INTERNAL_CALL, Pausable.__Pausable_init(address)(_pauser_1)
TMP_77 = CONVERT _executorManagerAddress_1 to IExecutorManager
executorManager_1(IExecutorManager) := TMP_77(IExecutorManager)
TMP_78 = CONVERT _tokenManager_1 to ITokenManager
tokenManager_1(ITokenManager) := TMP_78(ITokenManager)
TMP_79 = CONVERT _liquidityProviders_1 to ILiquidityProviders
liquidityProviders_1(ILiquidityProviders) := TMP_79(ILiquidityProviders)
baseGas_1(uint256) := 21000(uint256)


Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, Initializable.initializer()()
Propogating parameters and globals to SSA variables...
End popogation
TMP_64 = CONVERT 0 to address
Converting 0

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
_______________

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_64 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_64

Name: TMP_64 Function: initialize
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_65(bool) = _executorManagerAddress_1 != TMP_64
[i]Type for TMP_65

Name: TMP_65 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_66(None) = SOLIDITY_CALL require(bool,string)(TMP_65,ExecutorManager cannot be 0x0)
[i]Type for TMP_66

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_67 = CONVERT 0 to address
Converting 0

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
_______________

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_67 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_67

Name: TMP_67 Function: initialize
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_68(bool) = _trustedForwarder_1 != TMP_67
[i]Type for TMP_68

Name: TMP_68 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_69(None) = SOLIDITY_CALL require(bool,string)(TMP_68,TrustedForwarder cannot be 0x0)
[i]Type for TMP_69

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_70 = CONVERT 0 to address
Converting 0

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
_______________

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_70 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_70

Name: TMP_70 Function: initialize
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_71(bool) = _liquidityProviders_1 != TMP_70
[i]Type for TMP_71

Name: TMP_71 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_72(None) = SOLIDITY_CALL require(bool,string)(TMP_71,LiquidityProviders cannot be 0x0)
[i]Type for TMP_72

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, ERC2771ContextUpgradeable.__ERC2771Context_init(address)(_trustedForwarder_1)
init
end
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, ReentrancyGuardUpgradeable.__ReentrancyGuard_init()()
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, OwnableUpgradeable.__Ownable_init()()
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, Pausable.__Pausable_init(address)(_pauser_1)
init
end
Propogating parameters and globals to SSA variables...
End popogation
TMP_77 = CONVERT _executorManagerAddress_1 to IExecutorManager
Converting _executorManagerAddress_1

Name: _executorManagerAddress Function: None
Num: 
Den: 
Address: -999
Norm: 0
LF: _executorManagerAddress
Value: u
Fields: 
Finance Type: undef
init
end
_______________

Name: _executorManagerAddress Function: None
Num: 
Den: 
Address: -999
Norm: 0
LF: _executorManagerAddress
Value: u
Fields: 
Finance Type: undef

Name: TMP_77 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: ExecutorManager
Value: u
Fields: 
Finance Type: undef
Source address: -999
ExecutorManager
[i]Type for TMP_77

Name: TMP_77 Function: initialize
Num: 
Den: 
Address: -999
Norm: 0
LF: ExecutorManager
Value: u
Fields: 
Finance Type: undef
XXXX
executorManager_1(IExecutorManager) := TMP_77(IExecutorManager)
asgn
init
end
_______________

Name: TMP_77 Function: initialize
Num: 
Den: 
Address: -999
Norm: 0
LF: ExecutorManager
Value: u
Fields: 
Finance Type: undef

Name: executorManager Function: initialize
Num: -1
Den: -1
Address: -999
Norm: 0
LF: ExecutorManager
Value: u
Fields: 
Finance Type: undef
Source address: -999
Finance type key: (-1, -1)
[i]Type for executorManager

Name: executorManager Function: initialize
Num: -1
Den: -1
Address: -999
Norm: 0
LF: ExecutorManager
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: -999
Propogating parameters and globals to SSA variables...
End popogation
TMP_78 = CONVERT _tokenManager_1 to ITokenManager
Converting _tokenManager_1

Name: _tokenManager Function: None
Num: 
Den: 
Address: -996
Norm: 0
LF: _tokenManager
Value: u
Fields: 
Finance Type: undef
init
end
_______________

Name: _tokenManager Function: None
Num: 
Den: 
Address: -996
Norm: 0
LF: _tokenManager
Value: u
Fields: 
Finance Type: undef

Name: TMP_78 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Source address: -996
TokenManager
[i]Type for TMP_78

Name: TMP_78 Function: initialize
Num: 
Den: 
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
tokenManager_1(ITokenManager) := TMP_78(ITokenManager)
asgn
init
end
_______________

Name: TMP_78 Function: initialize
Num: 
Den: 
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef

Name: tokenManager Function: initialize
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Source address: -996
Finance type key: (-1, -1)
[i]Type for tokenManager

Name: tokenManager Function: initialize
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: -996
Propogating parameters and globals to SSA variables...
End popogation
TMP_79 = CONVERT _liquidityProviders_1 to ILiquidityProviders
Converting _liquidityProviders_1

Name: _liquidityProviders Function: None
Num: 
Den: 
Address: -995
Norm: 0
LF: _liquidityProviders
Value: u
Fields: 
Finance Type: undef
init
end
_______________

Name: _liquidityProviders Function: None
Num: 
Den: 
Address: -995
Norm: 0
LF: _liquidityProviders
Value: u
Fields: 
Finance Type: undef

Name: TMP_79 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Source address: -995
LiquidityProviders
[i]Type for TMP_79

Name: TMP_79 Function: initialize
Num: 
Den: 
Address: -995
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_1(ILiquidityProviders) := TMP_79(ILiquidityProviders)
asgn
init
end
_______________

Name: TMP_79 Function: initialize
Num: 
Den: 
Address: -995
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef

Name: liquidityProviders Function: initialize
Num: -1
Den: -1
Address: -995
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Source address: -995
Finance type key: (-1, -1)
[i]Type for liquidityProviders

Name: liquidityProviders Function: initialize
Num: -1
Den: -1
Address: -995
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: -995
Propogating parameters and globals to SSA variables...
End popogation
baseGas_1(uint256) := 21000(uint256)
asgn
init
end
_______________

Name: 21000 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef

Name: baseGas Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 21000
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for baseGas

Name: baseGas Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 21000
Fields: 
Finance Type: undef
XXXX
Source address: u



setTrustedForwarder
Finding type for trustedForwarder(address ... )
prev address? u
Head Addr: -994
    Norm: 0
    Set: {-994}
    Fin: NULL
Param: 0
    num: []
    den: []
    norm: 0
    link: trustedForwarder
    fields: []
    fintype: -1


MODIFIER_CALL, OwnableUpgradeable.onlyOwner()()
TMP_81 = CONVERT 0 to address
TMP_82(bool) = trustedForwarder_1 != TMP_81
TMP_83(None) = SOLIDITY_CALL require(bool,string)(TMP_82,TrustedForwarder can't be 0)
_trustedForwarder_3(address) := trustedForwarder_1(address)
Emit TrustedForwarderChanged(trustedForwarder_1)


Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, OwnableUpgradeable.onlyOwner()()
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
TMP_299(address) = INTERNAL_CALL, OwnableUpgradeable.owner()()
Propogating parameters and globals to SSA variables...
End popogation
Name: _owner, Num: 1
Globalname: _owner
global...

Name: PIC_9 Function: None
Num: -1
Den: -1
Address: 2
Norm: 0
LF: _owner
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: None Function: None
Num: -1
Den: -1
Address: 2
Norm: 0
LF: _owner
Value: u
Fields: 
Finance Type: undef
Phid
_owner_1(address) := ϕ(['_owner_0', '_owner_3'])
Phi
[i]Type for _owner

Name: _owner Function: owner
Num: -1
Den: -1
Address: 2
Norm: 0
LF: _owner
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
RETURN _owner_1
RETURN
init
end

Name: _owner Function: owner
Num: -1
Den: -1
Address: 2
Norm: 0
LF: _owner
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation

Name: _owner Function: owner
Num: -1
Den: -1
Address: 2
Norm: 0
LF: _owner
Value: u
Fields: 
Finance Type: undef
Phid
_owner_1(address) := ϕ(['_owner_0', '_owner_3'])
Phi
[i]Type for _owner

Name: _owner Function: owner
Num: -1
Den: -1
Address: 2
Norm: 0
LF: _owner
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
RETURN _owner_1
RETURN
init
end

Name: _owner Function: owner
Num: -1
Den: -1
Address: 2
Norm: 0
LF: _owner
Value: u
Fields: 
Finance Type: undef
Source address: 2
Source address: 2
[i]Type for TMP_299

Name: TMP_299 Function: onlyOwner
Num: -1
Den: -1
Address: 2
Norm: 0
LF: _owner
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_300(address) = INTERNAL_CALL, LiquidityPool._msgSender()()
init
end
_______________

Name: PIC_33 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_300 Function: onlyOwner
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_300

Name: TMP_300 Function: onlyOwner
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_301(bool) = TMP_299 == TMP_300
[i]Type for TMP_301

Name: TMP_301 Function: onlyOwner
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_302(None) = SOLIDITY_CALL require(bool,string)(TMP_301,Ownable: caller is not the owner)
[i]Type for TMP_302

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
TMP_299(address) = INTERNAL_CALL, OwnableUpgradeable.owner()()
init
end
_______________

Name: PIC_41 Function: None
Num: -1
Den: -1
Address: 2
Norm: 0
LF: _owner
Value: u
Fields: 
Finance Type: undef

Name: TMP_299 Function: onlyOwner
Num: 
Den: 
Address: u
Norm: u
LF: _owner
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: 2
[i]Type for TMP_299

Name: TMP_299 Function: onlyOwner
Num: -1
Den: -1
Address: 2
Norm: 0
LF: _owner
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_300(address) = INTERNAL_CALL, LiquidityPool._msgSender()()
init
end
_______________

Name: PIC_33 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_300 Function: onlyOwner
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_300

Name: TMP_300 Function: onlyOwner
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_301(bool) = TMP_299 == TMP_300
[i]Type for TMP_301

Name: TMP_301 Function: onlyOwner
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_302(None) = SOLIDITY_CALL require(bool,string)(TMP_301,Ownable: caller is not the owner)
[i]Type for TMP_302

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Source address: -994
End popogation
TMP_81 = CONVERT 0 to address
Converting 0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
_______________

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_81 Function: setTrustedForwarder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_81

Name: TMP_81 Function: setTrustedForwarder
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_82(bool) = trustedForwarder_1 != TMP_81
[i]Type for TMP_82

Name: TMP_82 Function: setTrustedForwarder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_83(None) = SOLIDITY_CALL require(bool,string)(TMP_82,TrustedForwarder can't be 0)
[i]Type for TMP_83

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _trustedForwarder, Num: 3
Globalname: _trustedForwarder
global...

Name: PIC_15 Function: None
Num: -1
Den: -1
Address: 4
Norm: 0
LF: _trustedForwarder
Value: u
Fields: 
Finance Type: undef
Source address: 4
End popogation
_trustedForwarder_3(address) := trustedForwarder_1(address)
asgn
init
end
_______________

Name: trustedForwarder Function: None
Num: 
Den: 
Address: -994
Norm: 0
LF: trustedForwarder
Value: u
Fields: 
Finance Type: undef

Name: _trustedForwarder Function: setTrustedForwarder
Num: -1
Den: -1
Address: 4
Norm: 0
LF: _trustedForwarder
Value: u
Fields: 
Finance Type: undef
Source address: -994
Finance type key: (-1, -1)
[i]Type for _trustedForwarder

Name: _trustedForwarder Function: setTrustedForwarder
Num: -1
Den: -1
Address: -994
Norm: 0
LF: trustedForwarder
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation


MODIFIER_CALL, OwnableUpgradeable.onlyOwner()()
TMP_81 = CONVERT 0 to address
TMP_82(bool) = trustedForwarder_1 != TMP_81
TMP_83(None) = SOLIDITY_CALL require(bool,string)(TMP_82,TrustedForwarder can't be 0)
_trustedForwarder_3(address) := trustedForwarder_1(address)
Emit TrustedForwarderChanged(trustedForwarder_1)


Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, OwnableUpgradeable.onlyOwner()()
Propogating parameters and globals to SSA variables...
End popogation
TMP_81 = CONVERT 0 to address
Converting 0

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
_______________

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_81 Function: setTrustedForwarder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_81

Name: TMP_81 Function: setTrustedForwarder
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_82(bool) = trustedForwarder_1 != TMP_81
[i]Type for TMP_82

Name: TMP_82 Function: setTrustedForwarder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_83(None) = SOLIDITY_CALL require(bool,string)(TMP_82,TrustedForwarder can't be 0)
[i]Type for TMP_83

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
_trustedForwarder_3(address) := trustedForwarder_1(address)
asgn
init
end
_______________

Name: trustedForwarder Function: None
Num: 
Den: 
Address: -994
Norm: 0
LF: trustedForwarder
Value: u
Fields: 
Finance Type: undef

Name: _trustedForwarder Function: setTrustedForwarder
Num: -1
Den: -1
Address: -994
Norm: 0
LF: trustedForwarder
Value: u
Fields: 
Finance Type: undef
Source address: -994
Finance type key: (-1, -1)
[i]Type for _trustedForwarder

Name: _trustedForwarder Function: setTrustedForwarder
Num: -1
Den: -1
Address: -994
Norm: 0
LF: trustedForwarder
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation



setLiquidityProviders
Finding type for _liquidityProviders(address ... )
prev address? u
Changed here
Head Addr: -993
    Norm: 0
    Set: {-993}
    Fin: NULL
Param: 0
    num: []
    den: []
    norm: 0
    link: _liquidityProviders
    fields: []
    fintype: -1


MODIFIER_CALL, OwnableUpgradeable.onlyOwner()()
TMP_86 = CONVERT 0 to address
TMP_87(bool) = _liquidityProviders_1 != TMP_86
TMP_88(None) = SOLIDITY_CALL require(bool,string)(TMP_87,LiquidityProviders can't be 0)
TMP_89 = CONVERT _liquidityProviders_1 to ILiquidityProviders
liquidityProviders_2(ILiquidityProviders) := TMP_89(ILiquidityProviders)
Emit LiquidityProvidersChanged(_liquidityProviders_1)


Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, OwnableUpgradeable.onlyOwner()()
Propogating parameters and globals to SSA variables...
Source address: -993
End popogation
TMP_86 = CONVERT 0 to address
Converting 0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
_______________

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_86 Function: setLiquidityProviders
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_86

Name: TMP_86 Function: setLiquidityProviders
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_87(bool) = _liquidityProviders_1 != TMP_86
[i]Type for TMP_87

Name: TMP_87 Function: setLiquidityProviders
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_88(None) = SOLIDITY_CALL require(bool,string)(TMP_87,LiquidityProviders can't be 0)
[i]Type for TMP_88

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: liquidityProviders, Num: 2
Globalname: liquidityProviders
global...

Name: liquidityProviders Function: initialize
Num: -1
Den: -1
Address: -995
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Source address: -995
End popogation
TMP_89 = CONVERT _liquidityProviders_1 to ILiquidityProviders
Converting _liquidityProviders_1

Name: _liquidityProviders_1 Function: None
Num: 
Den: 
Address: -993
Norm: 0
LF: _liquidityProviders
Value: u
Fields: 
Finance Type: undef
init
end
_______________

Name: _liquidityProviders Function: None
Num: 
Den: 
Address: -993
Norm: 0
LF: _liquidityProviders
Value: u
Fields: 
Finance Type: undef

Name: TMP_89 Function: setLiquidityProviders
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: -993
LiquidityProviders
[i]Type for TMP_89

Name: TMP_89 Function: setLiquidityProviders
Num: 
Den: 
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_2(ILiquidityProviders) := TMP_89(ILiquidityProviders)
asgn
init
end
_______________

Name: TMP_89 Function: setLiquidityProviders
Num: 
Den: 
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef

Name: liquidityProviders Function: setLiquidityProviders
Num: -1
Den: -1
Address: -995
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Source address: -993
Finance type key: (-1, -1)
[i]Type for liquidityProviders

Name: liquidityProviders Function: setLiquidityProviders
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: -993
Propogating parameters and globals to SSA variables...
End popogation


MODIFIER_CALL, OwnableUpgradeable.onlyOwner()()
TMP_86 = CONVERT 0 to address
TMP_87(bool) = _liquidityProviders_1 != TMP_86
TMP_88(None) = SOLIDITY_CALL require(bool,string)(TMP_87,LiquidityProviders can't be 0)
TMP_89 = CONVERT _liquidityProviders_1 to ILiquidityProviders
liquidityProviders_2(ILiquidityProviders) := TMP_89(ILiquidityProviders)
Emit LiquidityProvidersChanged(_liquidityProviders_1)


Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, OwnableUpgradeable.onlyOwner()()
Propogating parameters and globals to SSA variables...
End popogation
TMP_86 = CONVERT 0 to address
Converting 0

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
_______________

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_86 Function: setLiquidityProviders
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_86

Name: TMP_86 Function: setLiquidityProviders
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_87(bool) = _liquidityProviders_1 != TMP_86
[i]Type for TMP_87

Name: TMP_87 Function: setLiquidityProviders
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_88(None) = SOLIDITY_CALL require(bool,string)(TMP_87,LiquidityProviders can't be 0)
[i]Type for TMP_88

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_89 = CONVERT _liquidityProviders_1 to ILiquidityProviders
Converting _liquidityProviders_1

Name: _liquidityProviders Function: None
Num: 
Den: 
Address: -993
Norm: 0
LF: _liquidityProviders
Value: u
Fields: 
Finance Type: undef
init
end
_______________

Name: _liquidityProviders Function: None
Num: 
Den: 
Address: -993
Norm: 0
LF: _liquidityProviders
Value: u
Fields: 
Finance Type: undef

Name: TMP_89 Function: setLiquidityProviders
Num: 
Den: 
Address: u
Norm: u
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Source address: -993
LiquidityProviders
[i]Type for TMP_89

Name: TMP_89 Function: setLiquidityProviders
Num: 
Den: 
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_2(ILiquidityProviders) := TMP_89(ILiquidityProviders)
asgn
init
end
_______________

Name: TMP_89 Function: setLiquidityProviders
Num: 
Den: 
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef

Name: liquidityProviders Function: setLiquidityProviders
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Source address: -993
Finance type key: (-1, -1)
[i]Type for liquidityProviders

Name: liquidityProviders Function: setLiquidityProviders
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: -993
Propogating parameters and globals to SSA variables...
End popogation



setBaseGas
Finding type for gas(uint128 ... )
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1


MODIFIER_CALL, OwnableUpgradeable.onlyOwner()()
baseGas_2(uint256) := gas_1(uint128)


Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, OwnableUpgradeable.onlyOwner()()
Propogating parameters and globals to SSA variables...
Source address: u
Name: gas, Num: 1
Globalname: gas
Name: baseGas, Num: 2
Globalname: baseGas
global...

Name: baseGas Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 21000
Fields: 
Finance Type: undef
Source address: u
End popogation
baseGas_2(uint256) := gas_1(uint128)
asgn
init
end
_______________

Name: gas Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: baseGas Function: setBaseGas
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 21000
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for baseGas

Name: baseGas Function: setBaseGas
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u


MODIFIER_CALL, OwnableUpgradeable.onlyOwner()()
baseGas_2(uint256) := gas_1(uint128)


Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, OwnableUpgradeable.onlyOwner()()
Propogating parameters and globals to SSA variables...
Source address: u
Name: gas, Num: 1
Globalname: gas
End popogation
baseGas_2(uint256) := gas_1(uint128)
asgn
init
end
_______________

Name: gas Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: baseGas Function: setBaseGas
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for baseGas

Name: baseGas Function: setBaseGas
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u



getExecutorManager


executorManager_2(IExecutorManager) := ϕ(['executorManager_3', 'executorManager_6', 'executorManager_0', 'executorManager_1'])
TMP_93 = CONVERT executorManager_2 to address
RETURN TMP_93


Propogating parameters and globals to SSA variables...
End popogation
Name: executorManager, Num: 2
Globalname: executorManager
global...

Name: executorManager Function: initialize
Num: -1
Den: -1
Address: -999
Norm: 0
LF: ExecutorManager
Value: u
Fields: 
Finance Type: undef
Source address: -999

Name: None Function: None
Num: -1
Den: -1
Address: -999
Norm: 0
LF: ExecutorManager
Value: u
Fields: 
Finance Type: undef
Phid
executorManager_2(IExecutorManager) := ϕ(['executorManager_3', 'executorManager_6', 'executorManager_0', 'executorManager_1'])
Phi
[i]Type for executorManager

Name: executorManager Function: getExecutorManager
Num: -1
Den: -1
Address: -999
Norm: 0
LF: ExecutorManager
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_93 = CONVERT executorManager_2 to address
Converting executorManager_2

Name: executorManager Function: getExecutorManager
Num: -1
Den: -1
Address: -999
Norm: 0
LF: ExecutorManager
Value: u
Fields: 
Finance Type: undef
init
end
_______________

Name: executorManager Function: getExecutorManager
Num: -1
Den: -1
Address: -999
Norm: 0
LF: ExecutorManager
Value: u
Fields: 
Finance Type: undef

Name: TMP_93 Function: getExecutorManager
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: -999
[i]Type for TMP_93

Name: TMP_93 Function: getExecutorManager
Num: -1
Den: -1
Address: -999
Norm: 0
LF: ExecutorManager
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_93
RETURN
init
end

Name: TMP_93 Function: getExecutorManager
Num: -1
Den: -1
Address: -999
Norm: 0
LF: ExecutorManager
Value: u
Fields: 
Finance Type: undef


executorManager_2(IExecutorManager) := ϕ(['executorManager_3', 'executorManager_6', 'executorManager_0', 'executorManager_1'])
TMP_93 = CONVERT executorManager_2 to address
RETURN TMP_93


Propogating parameters and globals to SSA variables...
End popogation

Name: executorManager Function: getExecutorManager
Num: -1
Den: -1
Address: -999
Norm: 0
LF: ExecutorManager
Value: u
Fields: 
Finance Type: undef
Phid
executorManager_2(IExecutorManager) := ϕ(['executorManager_3', 'executorManager_6', 'executorManager_0', 'executorManager_1'])
Phi
[i]Type for executorManager

Name: executorManager Function: getExecutorManager
Num: -1
Den: -1
Address: -999
Norm: 0
LF: ExecutorManager
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_93 = CONVERT executorManager_2 to address
Converting executorManager_2

Name: executorManager Function: getExecutorManager
Num: -1
Den: -1
Address: -999
Norm: 0
LF: ExecutorManager
Value: u
Fields: 
Finance Type: undef
init
end
_______________

Name: executorManager Function: getExecutorManager
Num: -1
Den: -1
Address: -999
Norm: 0
LF: ExecutorManager
Value: u
Fields: 
Finance Type: undef

Name: TMP_93 Function: getExecutorManager
Num: 
Den: 
Address: u
Norm: u
LF: ExecutorManager
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: -999
[i]Type for TMP_93

Name: TMP_93 Function: getExecutorManager
Num: -1
Den: -1
Address: -999
Norm: 0
LF: ExecutorManager
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_93
RETURN
init
end

Name: TMP_93 Function: getExecutorManager
Num: -1
Den: -1
Address: -999
Norm: 0
LF: ExecutorManager
Value: u
Fields: 
Finance Type: undef



setExecutorManager
Finding type for _executorManagerAddress(address ... )
prev address? u
Head Addr: -992
    Norm: 0
    Set: {-992}
    Fin: NULL
Param: 0
    num: []
    den: []
    norm: 0
    link: _executorManagerAddress
    fields: []
    fintype: -1


MODIFIER_CALL, OwnableUpgradeable.onlyOwner()()
TMP_94 = CONVERT 0 to address
TMP_95(bool) = _executorManagerAddress_1 != TMP_94
TMP_96(None) = SOLIDITY_CALL require(bool,string)(TMP_95,Executor Manager cannot be 0)
TMP_97 = CONVERT _executorManagerAddress_1 to IExecutorManager
executorManager_3(IExecutorManager) := TMP_97(IExecutorManager)


Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, OwnableUpgradeable.onlyOwner()()
Propogating parameters and globals to SSA variables...
Source address: -992
End popogation
TMP_94 = CONVERT 0 to address
Converting 0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
_______________

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_94 Function: setExecutorManager
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_94

Name: TMP_94 Function: setExecutorManager
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_95(bool) = _executorManagerAddress_1 != TMP_94
[i]Type for TMP_95

Name: TMP_95 Function: setExecutorManager
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_96(None) = SOLIDITY_CALL require(bool,string)(TMP_95,Executor Manager cannot be 0)
[i]Type for TMP_96

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: executorManager, Num: 3
Globalname: executorManager
global...

Name: executorManager Function: initialize
Num: -1
Den: -1
Address: -999
Norm: 0
LF: ExecutorManager
Value: u
Fields: 
Finance Type: undef
Source address: -999
End popogation
TMP_97 = CONVERT _executorManagerAddress_1 to IExecutorManager
Converting _executorManagerAddress_1

Name: _executorManagerAddress_1 Function: None
Num: 
Den: 
Address: -992
Norm: 0
LF: _executorManagerAddress
Value: u
Fields: 
Finance Type: undef
init
end
_______________

Name: _executorManagerAddress Function: None
Num: 
Den: 
Address: -992
Norm: 0
LF: _executorManagerAddress
Value: u
Fields: 
Finance Type: undef

Name: TMP_97 Function: setExecutorManager
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: -992
ExecutorManager
[i]Type for TMP_97

Name: TMP_97 Function: setExecutorManager
Num: 
Den: 
Address: -992
Norm: 0
LF: ExecutorManager
Value: u
Fields: 
Finance Type: undef
XXXX
executorManager_3(IExecutorManager) := TMP_97(IExecutorManager)
asgn
init
end
_______________

Name: TMP_97 Function: setExecutorManager
Num: 
Den: 
Address: -992
Norm: 0
LF: ExecutorManager
Value: u
Fields: 
Finance Type: undef

Name: executorManager Function: setExecutorManager
Num: -1
Den: -1
Address: -999
Norm: 0
LF: ExecutorManager
Value: u
Fields: 
Finance Type: undef
Source address: -992
Finance type key: (-1, -1)
[i]Type for executorManager

Name: executorManager Function: setExecutorManager
Num: -1
Den: -1
Address: -992
Norm: 0
LF: ExecutorManager
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: -992


MODIFIER_CALL, OwnableUpgradeable.onlyOwner()()
TMP_94 = CONVERT 0 to address
TMP_95(bool) = _executorManagerAddress_1 != TMP_94
TMP_96(None) = SOLIDITY_CALL require(bool,string)(TMP_95,Executor Manager cannot be 0)
TMP_97 = CONVERT _executorManagerAddress_1 to IExecutorManager
executorManager_3(IExecutorManager) := TMP_97(IExecutorManager)


Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, OwnableUpgradeable.onlyOwner()()
Propogating parameters and globals to SSA variables...
End popogation
TMP_94 = CONVERT 0 to address
Converting 0

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
_______________

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_94 Function: setExecutorManager
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_94

Name: TMP_94 Function: setExecutorManager
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_95(bool) = _executorManagerAddress_1 != TMP_94
[i]Type for TMP_95

Name: TMP_95 Function: setExecutorManager
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_96(None) = SOLIDITY_CALL require(bool,string)(TMP_95,Executor Manager cannot be 0)
[i]Type for TMP_96

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_97 = CONVERT _executorManagerAddress_1 to IExecutorManager
Converting _executorManagerAddress_1

Name: _executorManagerAddress Function: None
Num: 
Den: 
Address: -992
Norm: 0
LF: _executorManagerAddress
Value: u
Fields: 
Finance Type: undef
init
end
_______________

Name: _executorManagerAddress Function: None
Num: 
Den: 
Address: -992
Norm: 0
LF: _executorManagerAddress
Value: u
Fields: 
Finance Type: undef

Name: TMP_97 Function: setExecutorManager
Num: 
Den: 
Address: u
Norm: u
LF: ExecutorManager
Value: u
Fields: 
Finance Type: undef
Source address: -992
ExecutorManager
[i]Type for TMP_97

Name: TMP_97 Function: setExecutorManager
Num: 
Den: 
Address: -992
Norm: 0
LF: ExecutorManager
Value: u
Fields: 
Finance Type: undef
XXXX
executorManager_3(IExecutorManager) := TMP_97(IExecutorManager)
asgn
init
end
_______________

Name: TMP_97 Function: setExecutorManager
Num: 
Den: 
Address: -992
Norm: 0
LF: ExecutorManager
Value: u
Fields: 
Finance Type: undef

Name: executorManager Function: setExecutorManager
Num: -1
Den: -1
Address: -992
Norm: 0
LF: ExecutorManager
Value: u
Fields: 
Finance Type: undef
Source address: -992
Finance type key: (-1, -1)
[i]Type for executorManager

Name: executorManager Function: setExecutorManager
Num: -1
Den: -1
Address: -992
Norm: 0
LF: ExecutorManager
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: -992



getCurrentLiquidity
Finding type for tokenAddress(address ... )
prev address? u
Head Addr: -991
    Norm: 6
    Set: {-991}
    Fin: NULL
Param: 0
    num: []
    den: []
    norm: 6
    link: tokenAddress
    fields: []
    fintype: -1


tokenAddress_1(address) := ϕ(['tokenAddress_1', 'tokenAddress_1'])
liquidityProviders_3(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
gasFeeAccumulatedByToken_1(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_0', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
incentivePool_1(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_0'])
TMP_99(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_3(ILiquidityProviders), function:getCurrentLiquidity, arguments:['tokenAddress_1']  
liquidityProviders_4(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_3', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
gasFeeAccumulatedByToken_2(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_1', 'gasFeeAccumulatedByToken_23'])
incentivePool_2(mapping(address => uint256)) := ϕ(['incentivePool_1', 'incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21'])
liquidityPoolBalance_1(uint256) := TMP_99(uint256)
TMP_100(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_4(ILiquidityProviders), function:totalLPFees, arguments:['tokenAddress_1']  
liquidityProviders_5(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_4', 'liquidityProviders_40', 'liquidityProviders_1'])
gasFeeAccumulatedByToken_3(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_2', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
incentivePool_3(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_2', 'incentivePool_21'])
TMP_101(uint256) = liquidityPoolBalance_1 (c)- TMP_100
REF_2(uint256) -> gasFeeAccumulatedByToken_3[tokenAddress_1]
TMP_102(uint256) = TMP_101 (c)- REF_2
REF_3(uint256) -> incentivePool_3[tokenAddress_1]
TMP_103(uint256) = TMP_102 (c)- REF_3
currentLiquidity_1(uint256) := TMP_103(uint256)


Propogating parameters and globals to SSA variables...
End popogation
Source address: -991

Name: tokenAddress_1 Function: None
Num: 
Den: 
Address: -991
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
Phid
Name: liquidityProviders, Num: 3
Globalname: liquidityProviders
global...

Name: liquidityProviders Function: setLiquidityProviders
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Source address: -993

Name: None Function: None
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid
Name: gasFeeAccumulatedByToken, Num: 1
Globalname: gasFeeAccumulatedByToken
global...

Name: PIC_1 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: incentivePool, Num: 1
Globalname: incentivePool
global...

Name: PIC_2 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
tokenAddress_1(address) := ϕ(['tokenAddress_1', 'tokenAddress_1'])
Phi
[i]Type for tokenAddress

Name: tokenAddress Function: getCurrentLiquidity
Num: 
Den: 
Address: -991
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_3(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_1(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_0', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_1(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_0'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: liquidityPoolBalance, Num: 1
Globalname: liquidityPoolBalance
End popogation
Name: liquidityProviders, Num: 4
Globalname: liquidityProviders
global...

Name: liquidityProviders Function: setLiquidityProviders
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Source address: -993

Name: None Function: None
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid
Name: gasFeeAccumulatedByToken, Num: 2
Globalname: gasFeeAccumulatedByToken
global...

Name: PIC_1 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: incentivePool, Num: 2
Globalname: incentivePool
global...

Name: PIC_2 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_99(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_3(ILiquidityProviders), function:getCurrentLiquidity, arguments:['tokenAddress_1']  
High Call: getCurrentLiquidity
Running querryfc
Written func info: LiquidityProviders, getCurrentLiquidity
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-991], [-1], 6, "'u'", 'u', -1)
[i]Type for TMP_99

Name: TMP_99 Function: getCurrentLiquidity
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
liquidityProviders_4(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_3', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_2(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_1', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_2(mapping(address => uint256)) := ϕ(['incentivePool_1', 'incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityPoolBalance_1(uint256) := TMP_99(uint256)
asgn
init
end
_______________

Name: TMP_99 Function: getCurrentLiquidity
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for liquidityPoolBalance

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: gasFeeAccumulatedByToken, Num: 3
Globalname: gasFeeAccumulatedByToken
global...

Name: PIC_1 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Name: incentivePool, Num: 3
Globalname: incentivePool
global...

Name: PIC_2 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Name: currentLiquidity, Num: 1
Globalname: currentLiquidity
End popogation
Name: liquidityProviders, Num: 5
Globalname: liquidityProviders
global...

Name: liquidityProviders Function: setLiquidityProviders
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Source address: -993

Name: None Function: None
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_100(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_4(ILiquidityProviders), function:totalLPFees, arguments:['tokenAddress_1']  
High Call: totalLPFees
Running querryfc
Written func info: LiquidityProviders, totalLPFees
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-991], [-1], 6, "'u'", 'u', -1)
[i]Type for TMP_100

Name: TMP_100 Function: getCurrentLiquidity
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
liquidityProviders_5(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_4', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_3(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_2', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_3(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_2', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_101(uint256) = liquidityPoolBalance_1 (c)- TMP_100
init
end
init
end
-991
-1
lnorm: 6 rnorm: 6
init
end
_______________

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_101 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_101

Name: TMP_101 Function: getCurrentLiquidity
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_2(uint256) -> gasFeeAccumulatedByToken_3[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_2

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_102(uint256) = TMP_101 (c)- REF_2
init
end
init
end
init
end
_______________

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_102 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_102

Name: TMP_102 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_3(uint256) -> incentivePool_3[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_3

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_103(uint256) = TMP_102 (c)- REF_3
init
end
init
end
init
end
_______________

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_103 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_103

Name: TMP_103 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
currentLiquidity_1(uint256) := TMP_103(uint256)
asgn
init
end
_______________

Name: TMP_103 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: currentLiquidity Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for currentLiquidity

Name: currentLiquidity Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX


tokenAddress_1(address) := ϕ(['tokenAddress_1', 'tokenAddress_1'])
liquidityProviders_3(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
gasFeeAccumulatedByToken_1(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_0', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
incentivePool_1(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_0'])
TMP_99(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_3(ILiquidityProviders), function:getCurrentLiquidity, arguments:['tokenAddress_1']  
liquidityProviders_4(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_3', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
gasFeeAccumulatedByToken_2(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_1', 'gasFeeAccumulatedByToken_23'])
incentivePool_2(mapping(address => uint256)) := ϕ(['incentivePool_1', 'incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21'])
liquidityPoolBalance_1(uint256) := TMP_99(uint256)
TMP_100(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_4(ILiquidityProviders), function:totalLPFees, arguments:['tokenAddress_1']  
liquidityProviders_5(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_4', 'liquidityProviders_40', 'liquidityProviders_1'])
gasFeeAccumulatedByToken_3(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_2', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
incentivePool_3(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_2', 'incentivePool_21'])
TMP_101(uint256) = liquidityPoolBalance_1 (c)- TMP_100
REF_2(uint256) -> gasFeeAccumulatedByToken_3[tokenAddress_1]
TMP_102(uint256) = TMP_101 (c)- REF_2
REF_3(uint256) -> incentivePool_3[tokenAddress_1]
TMP_103(uint256) = TMP_102 (c)- REF_3
currentLiquidity_1(uint256) := TMP_103(uint256)


Propogating parameters and globals to SSA variables...
End popogation
Source address: -991

Name: tokenAddress_1 Function: getCurrentLiquidity
Num: 
Den: 
Address: -991
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
tokenAddress_1(address) := ϕ(['tokenAddress_1', 'tokenAddress_1'])
Phi
[i]Type for tokenAddress

Name: tokenAddress Function: getCurrentLiquidity
Num: 
Den: 
Address: -991
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_3(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_1(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_0', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_1(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_0'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: liquidityPoolBalance, Num: 1
Globalname: liquidityPoolBalance
End popogation

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_99(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_3(ILiquidityProviders), function:getCurrentLiquidity, arguments:['tokenAddress_1']  
High Call: getCurrentLiquidity
Running querryfc
Written func info: LiquidityProviders, getCurrentLiquidity
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-991], [-1], 6, "'u'", 'u', -1)
[i]Type for TMP_99

Name: TMP_99 Function: getCurrentLiquidity
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
liquidityProviders_4(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_3', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_2(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_1', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_2(mapping(address => uint256)) := ϕ(['incentivePool_1', 'incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityPoolBalance_1(uint256) := TMP_99(uint256)
asgn
init
end
_______________

Name: TMP_99 Function: getCurrentLiquidity
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for liquidityPoolBalance

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: currentLiquidity, Num: 1
Globalname: currentLiquidity
End popogation

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_100(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_4(ILiquidityProviders), function:totalLPFees, arguments:['tokenAddress_1']  
High Call: totalLPFees
Running querryfc
Written func info: LiquidityProviders, totalLPFees
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-991], [-1], 6, "'u'", 'u', -1)
[i]Type for TMP_100

Name: TMP_100 Function: getCurrentLiquidity
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
liquidityProviders_5(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_4', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_3(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_2', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_3(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_2', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_101(uint256) = liquidityPoolBalance_1 (c)- TMP_100
init
end
init
end
-991
-1
lnorm: 6 rnorm: 6
init
end
_______________

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_101 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_101

Name: TMP_101 Function: getCurrentLiquidity
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_2(uint256) -> gasFeeAccumulatedByToken_3[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_2

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_102(uint256) = TMP_101 (c)- REF_2
init
end
init
end
init
end
_______________

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_102 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_102

Name: TMP_102 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_3(uint256) -> incentivePool_3[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_3

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_103(uint256) = TMP_102 (c)- REF_3
init
end
init
end
init
end
_______________

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_103 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_103

Name: TMP_103 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
currentLiquidity_1(uint256) := TMP_103(uint256)
asgn
init
end
_______________

Name: TMP_103 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: currentLiquidity Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for currentLiquidity

Name: currentLiquidity Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u



depositErc20
Finding type for toChainId(uint256 ... )
Finding type for tokenAddress(address ... )
prev address? u
Head Addr: -990
    Norm: 6
    Set: {-990}
    Fin: NULL
Finding type for receiver(address ... )
prev address? u
Head Addr: -989
    Norm: 0
    Set: {-989}
    Fin: NULL
Finding type for amount(uint256 ... )
Finding type for tag(string ... )
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: []
    den: []
    norm: 6
    link: tokenAddress
    fields: []
    fintype: -1
Param: 2
    num: []
    den: []
    norm: 0
    link: receiver
    fields: []
    fintype: -1
Param: 3
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 4
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1


toChainId_1(uint256) := ϕ(['toChainId_1', 'toChainId_1'])
tokenAddress_1(address) := ϕ(['tokenAddress_1', 'tokenAddress_1'])
receiver_1(address) := ϕ(['receiver_1', 'receiver_1'])
amount_1(uint256) := ϕ(['amount_1', 'amount_1'])
tag_1(string) := ϕ(['tag_1', 'tag_1'])
tokenManager_2(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_0', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
liquidityProviders_6(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
incentivePool_4(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_0'])
MODIFIER_CALL, LiquidityPool.tokenChecks(address)(tokenAddress_1)
tokenManager_3(ITokenManager) := ϕ(['tokenManager_33'])
MODIFIER_CALL, PausableUpgradeable.whenNotPaused()()
MODIFIER_CALL, ReentrancyGuardUpgradeable.nonReentrant()()
TMP_104(ITokenManager.TokenConfig) = HIGH_LEVEL_CALL, dest:tokenManager_5(ITokenManager), function:getDepositConfig, arguments:['toChainId_1', 'tokenAddress_1']  
tokenManager_6(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_5', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
liquidityProviders_10(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1', 'liquidityProviders_9'])
incentivePool_8(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_7', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21'])
REF_5(uint256) -> TMP_104.min
TMP_105(bool) = REF_5 <= amount_1
TMP_106(ITokenManager.TokenConfig) = HIGH_LEVEL_CALL, dest:tokenManager_6(ITokenManager), function:getDepositConfig, arguments:['toChainId_1', 'tokenAddress_1']  
tokenManager_7(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_6', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
liquidityProviders_11(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_10', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
incentivePool_9(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_8'])
REF_7(uint256) -> TMP_106.max
TMP_107(bool) = REF_7 >= amount_1
TMP_108(bool) = TMP_105 && TMP_107
TMP_109(None) = SOLIDITY_CALL require(bool,string)(TMP_108,Deposit amount not in Cap limit)
TMP_110 = CONVERT 0 to address
TMP_111(bool) = receiver_1 != TMP_110
TMP_112(None) = SOLIDITY_CALL require(bool,string)(TMP_111,Receiver address cannot be 0)
TMP_113(bool) = amount_1 != 0
TMP_114(None) = SOLIDITY_CALL require(bool,string)(TMP_113,Amount cannot be 0)
TMP_115(address) = INTERNAL_CALL, LiquidityPool._msgSender()()
sender_1(address) := TMP_115(address)
TMP_116(uint256) = INTERNAL_CALL, LiquidityPool.getRewardAmount(uint256,address)(amount_1,tokenAddress_1)
liquidityProviders_13(ILiquidityProviders) := ϕ(['liquidityProviders_17'])
incentivePool_11(mapping(address => uint256)) := ϕ(['incentivePool_15'])
rewardAmount_1(uint256) := TMP_116(uint256)
TMP_117(bool) = rewardAmount_1 != 0
CONDITION TMP_117
HIGH_LEVEL_CALL, dest:liquidityProviders_13(ILiquidityProviders), function:increaseCurrentLiquidity, arguments:['tokenAddress_1', 'amount_1']  
liquidityProviders_14(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_13', 'liquidityProviders_40', 'liquidityProviders_1'])
REF_8(uint256) -> incentivePool_11[tokenAddress_1]
REF_9(uint256) -> incentivePool_11[tokenAddress_1]
TMP_118(uint256) = REF_9 (c)- rewardAmount_1
incentivePool_12(mapping(address => uint256)) := ϕ(['incentivePool_11'])
REF_8 (->incentivePool_12) := TMP_118(uint256)
TMP_120 = CONVERT tokenAddress_1 to IERC20Upgradeable
TMP_121 = CONVERT this to address
LIBRARY_CALL, dest:SafeERC20Upgradeable, function:SafeERC20Upgradeable.safeTransferFrom(IERC20Upgradeable,address,address,uint256), arguments:['TMP_120', 'sender_1', 'TMP_121', 'amount_1'] 
TMP_123(uint256) = amount_1 (c)+ rewardAmount_1
Emit Deposit(sender_1,tokenAddress_1,receiver_1,toChainId_1,TMP_123,rewardAmount_1,tag_1)


Propogating parameters and globals to SSA variables...
End popogation
Source address: u
Name: toChainId, Num: 1
Globalname: toChainId

Name: toChainId_1 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Source address: -990

Name: tokenAddress_1 Function: None
Num: 
Den: 
Address: -990
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
Phid
Source address: -989

Name: receiver_1 Function: None
Num: 
Den: 
Address: -989
Norm: 0
LF: receiver
Value: u
Fields: 
Finance Type: undef
Phid
Source address: u
Name: amount, Num: 1
Globalname: amount

Name: amount_1 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Source address: u
Name: tag, Num: 1
Globalname: tag

Name: tag_1 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: tokenManager, Num: 2
Globalname: tokenManager
global...

Name: tokenManager Function: initialize
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Source address: -996

Name: None Function: None
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid
Name: liquidityProviders, Num: 6
Globalname: liquidityProviders
global...

Name: liquidityProviders Function: setLiquidityProviders
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Source address: -993

Name: None Function: None
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid
Name: incentivePool, Num: 4
Globalname: incentivePool
global...

Name: PIC_2 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
toChainId_1(uint256) := ϕ(['toChainId_1', 'toChainId_1'])
Phi

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for toChainId

Name: toChainId Function: depositErc20
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tokenAddress_1(address) := ϕ(['tokenAddress_1', 'tokenAddress_1'])
Phi
[i]Type for tokenAddress

Name: tokenAddress Function: depositErc20
Num: 
Den: 
Address: -990
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
XXXX
receiver_1(address) := ϕ(['receiver_1', 'receiver_1'])
Phi
[i]Type for receiver

Name: receiver Function: depositErc20
Num: 
Den: 
Address: -989
Norm: 0
LF: receiver
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount_1', 'amount_1'])
Phi

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for amount

Name: amount Function: depositErc20
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tag_1(string) := ϕ(['tag_1', 'tag_1'])
Phi

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for tag

Name: tag Function: depositErc20
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tokenManager_2(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_0', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: depositErc20
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_6(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: depositErc20
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_4(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_0'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: depositErc20
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Name: tokenManager, Num: 3
Globalname: tokenManager
global...

Name: tokenManager Function: initialize
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Source address: -996

Name: None Function: None
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid
MODIFIER_CALL, LiquidityPool.tokenChecks(address)(tokenAddress_1)
init
end
[[], [], 6, 'tokenAddress', [], -1, -990, 'u']

Name: tokenAddress Function: None
Num: 
Den: 
Address: -990
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
Source address: -990

Name: tokenAddress_1 Function: None
Num: 
Den: 
Address: -990
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
Phid
Name: tokenManager, Num: 32
Globalname: tokenManager
global...

Name: tokenManager Function: initialize
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Source address: -996

Name: None Function: None
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid
tokenAddress_1(address) := ϕ(['tokenAddress_1', 'tokenAddress_1'])
Phi
[i]Type for tokenAddress

Name: tokenAddress Function: tokenChecks
Num: 
Den: 
Address: -990
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
XXXX
tokenManager_32(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_0', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: tokenChecks
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_319 = CONVERT 0 to address
Converting 0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
_______________

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_319 Function: tokenChecks
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_319

Name: TMP_319 Function: tokenChecks
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_320(bool) = tokenAddress_1 != TMP_319
[i]Type for TMP_320

Name: TMP_320 Function: tokenChecks
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_321(None) = SOLIDITY_CALL require(bool,string)(TMP_320,Token address cannot be 0)
[i]Type for TMP_321

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Name: tokenManager, Num: 33
Globalname: tokenManager
global...

Name: tokenManager Function: initialize
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Source address: -996

Name: None Function: None
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid
TMP_322(ITokenManager.TokenInfo) = HIGH_LEVEL_CALL, dest:tokenManager_32(ITokenManager), function:getTokensInfo, arguments:['tokenAddress_1']  
High Call: getTokensInfo
Running querryfc
Written func info: TokenManager, getTokensInfo
[i]Type for TMP_322

Name: TMP_322 Function: tokenChecks
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tokenManager_33(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_7', 'tokenManager_1', 'tokenManager_32', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: tokenChecks
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
REF_88(bool) -> TMP_322.supportedToken
MEMBER
init
end
init
end
OUT KEY: tokenChecks_TMP_322_supportedToken
OUT KEY: tokenChecks_TMP_supportedToken
FTT: None
No field found
[i]Type for REF_88

Name: TMP_322.supportedToken Function: tokenChecks
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: TMP_322, Field: supportedToken
#################
Member: 
Name: TMP_322 Function: tokenChecks
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Fieldf: 
Name: supportedToken Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: TMP_322.supportedToken Function: tokenChecks
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: False
Source address: u
Finance type key: (-1, -1)
Add new member...
XXXX
TMP_323(None) = SOLIDITY_CALL require(bool,string)(REF_88,Token not supported)
[i]Type for TMP_323

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Source address: -990

Name: tokenAddress_1 Function: tokenChecks
Num: 
Den: 
Address: -990
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
Phid

Name: tokenManager Function: tokenChecks
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid
tokenAddress_1(address) := ϕ(['tokenAddress_1', 'tokenAddress_1'])
Phi
[i]Type for tokenAddress

Name: tokenAddress Function: tokenChecks
Num: 
Den: 
Address: -990
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
XXXX
tokenManager_32(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_0', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: tokenChecks
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_319 = CONVERT 0 to address
Converting 0

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
_______________

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_319 Function: tokenChecks
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_319

Name: TMP_319 Function: tokenChecks
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_320(bool) = tokenAddress_1 != TMP_319
[i]Type for TMP_320

Name: TMP_320 Function: tokenChecks
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_321(None) = SOLIDITY_CALL require(bool,string)(TMP_320,Token address cannot be 0)
[i]Type for TMP_321

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation

Name: tokenManager Function: tokenChecks
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid
TMP_322(ITokenManager.TokenInfo) = HIGH_LEVEL_CALL, dest:tokenManager_32(ITokenManager), function:getTokensInfo, arguments:['tokenAddress_1']  
High Call: getTokensInfo
Running querryfc
Written func info: TokenManager, getTokensInfo
[i]Type for TMP_322

Name: TMP_322 Function: tokenChecks
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: supportedToken
Finance Type: undef
XXXX
tokenManager_33(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_7', 'tokenManager_1', 'tokenManager_32', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: tokenChecks
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
REF_88(bool) -> TMP_322.supportedToken
MEMBER
init
end
init
end
Source address: u
[i]Type for REF_88

Name: TMP_322.supportedToken Function: tokenChecks
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: TMP_322, Field: supportedToken
#################
Member: 
Name: TMP_322 Function: tokenChecks
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: supportedToken
Finance Type: undef
Fieldf: 
Name: supportedToken Function: tokenChecks
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: TMP_322.supportedToken Function: tokenChecks
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: supportedToken Function: tokenChecks
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_323(None) = SOLIDITY_CALL require(bool,string)(REF_88,Token not supported)
[i]Type for TMP_323

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
tokenManager_3(ITokenManager) := ϕ(['tokenManager_33'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: depositErc20
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, PausableUpgradeable.whenNotPaused()()
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
TMP_305(bool) = INTERNAL_CALL, PausableUpgradeable.paused()()
Propogating parameters and globals to SSA variables...
End popogation
Name: _paused, Num: 2
Globalname: _paused
global...

Name: _paused Function: __Pausable_init_unchained
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: False
Fields: 
Finance Type: undef
Source address: u

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: False
Fields: 
Finance Type: undef
Phid
_paused_2(bool) := ϕ(['_paused_0', '_paused_1', '_paused_4', '_paused_3'])
Phi
[i]Type for _paused

Name: _paused Function: paused
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: False
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
RETURN _paused_2
RETURN
init
end

Name: _paused Function: paused
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: False
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation

Name: _paused Function: paused
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: False
Fields: 
Finance Type: undef
Phid
_paused_2(bool) := ϕ(['_paused_0', '_paused_1', '_paused_4', '_paused_3'])
Phi
[i]Type for _paused

Name: _paused Function: paused
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: False
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
RETURN _paused_2
RETURN
init
end

Name: _paused Function: paused
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: False
Fields: 
Finance Type: undef
Source address: u
Source address: u
[i]Type for TMP_305

Name: TMP_305 Function: whenNotPaused
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: False
Fields: 
Finance Type: undef
XXXX
TMP_306 = ! TMP_305 
[i]Type for TMP_306

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_307(None) = SOLIDITY_CALL require(bool,string)(TMP_306,Pausable: paused)
[i]Type for TMP_307

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
TMP_305(bool) = INTERNAL_CALL, PausableUpgradeable.paused()()
init
end
_______________

Name: PIC_48 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: False
Fields: 
Finance Type: undef

Name: TMP_305 Function: whenNotPaused
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: False
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_305

Name: TMP_305 Function: whenNotPaused
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: False
Fields: 
Finance Type: undef
XXXX
TMP_306 = ! TMP_305 
[i]Type for TMP_306

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_307(None) = SOLIDITY_CALL require(bool,string)(TMP_306,Pausable: paused)
[i]Type for TMP_307

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, ReentrancyGuardUpgradeable.nonReentrant()()
Propogating parameters and globals to SSA variables...
End popogation
Name: _NOT_ENTERED, Num: 3
Globalname: _NOT_ENTERED
global...

Name: PIC_18 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: _ENTERED, Num: 1
Globalname: _ENTERED
global...

Name: PIC_17 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: _status, Num: 2
Globalname: _status
global...

Name: _status Function: __ReentrancyGuard_init_unchained
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
_NOT_ENTERED_3(uint256) := ϕ(['_NOT_ENTERED_2', '_NOT_ENTERED_0'])
Phi
[i]Type for _NOT_ENTERED

Name: _NOT_ENTERED Function: nonReentrant
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_ENTERED_1(uint256) := ϕ(['_ENTERED_0'])
Phi
[i]Type for _ENTERED

Name: _ENTERED Function: nonReentrant
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_status_2(uint256) := ϕ(['_status_0', '_status_1', '_status_4'])
Phi
[i]Type for _status

Name: _status Function: nonReentrant
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_310(bool) = _status_2 != _ENTERED_1
[i]Type for TMP_310

Name: TMP_310 Function: nonReentrant
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_311(None) = SOLIDITY_CALL require(bool,string)(TMP_310,ReentrancyGuard: reentrant call)
[i]Type for TMP_311

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _status, Num: 3
Globalname: _status
global...

Name: _status Function: __ReentrancyGuard_init_unchained
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
End popogation
_status_3(uint256) := _ENTERED_1(uint256)
asgn
init
end
_______________

Name: _ENTERED Function: nonReentrant
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _status Function: nonReentrant
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for _status

Name: _status Function: nonReentrant
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: _status, Num: 4
Globalname: _status
global...

Name: _status Function: nonReentrant
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
End popogation
_status_4(uint256) := _NOT_ENTERED_3(uint256)
asgn
init
end
_______________

Name: _NOT_ENTERED Function: nonReentrant
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _status Function: nonReentrant
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for _status

Name: _status Function: nonReentrant
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Propogating parameters and globals to SSA variables...
End popogation

Name: _NOT_ENTERED Function: nonReentrant
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: _ENTERED Function: nonReentrant
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: _status Function: nonReentrant
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
_NOT_ENTERED_3(uint256) := ϕ(['_NOT_ENTERED_2', '_NOT_ENTERED_0'])
Phi
[i]Type for _NOT_ENTERED

Name: _NOT_ENTERED Function: nonReentrant
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_ENTERED_1(uint256) := ϕ(['_ENTERED_0'])
Phi
[i]Type for _ENTERED

Name: _ENTERED Function: nonReentrant
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_status_2(uint256) := ϕ(['_status_0', '_status_1', '_status_4'])
Phi
[i]Type for _status

Name: _status Function: nonReentrant
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_310(bool) = _status_2 != _ENTERED_1
[i]Type for TMP_310

Name: TMP_310 Function: nonReentrant
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_311(None) = SOLIDITY_CALL require(bool,string)(TMP_310,ReentrancyGuard: reentrant call)
[i]Type for TMP_311

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
_status_3(uint256) := _ENTERED_1(uint256)
asgn
init
end
_______________

Name: _ENTERED Function: nonReentrant
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _status Function: nonReentrant
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for _status

Name: _status Function: nonReentrant
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
_status_4(uint256) := _NOT_ENTERED_3(uint256)
asgn
init
end
_______________

Name: _NOT_ENTERED Function: nonReentrant
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _status Function: nonReentrant
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for _status

Name: _status Function: nonReentrant
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Propogating parameters and globals to SSA variables...
Name: tokenManager, Num: 5
Globalname: tokenManager
global...

Name: tokenManager Function: initialize
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Source address: -996
Source address: u
Name: toChainId, Num: 1
Globalname: toChainId
Source address: u
Name: amount, Num: 1
Globalname: amount
Name: tokenManager, Num: 6
Globalname: tokenManager
global...

Name: tokenManager Function: initialize
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Source address: -996
End popogation

Name: None Function: None
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid
Name: liquidityProviders, Num: 10
Globalname: liquidityProviders
global...

Name: liquidityProviders Function: setLiquidityProviders
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Source address: -993

Name: None Function: None
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid
Name: incentivePool, Num: 8
Globalname: incentivePool
global...

Name: PIC_2 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: tokenManager, Num: 7
Globalname: tokenManager
global...

Name: tokenManager Function: initialize
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Source address: -996

Name: None Function: None
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid
Name: liquidityProviders, Num: 11
Globalname: liquidityProviders
global...

Name: liquidityProviders Function: setLiquidityProviders
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Source address: -993

Name: None Function: None
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid
Name: incentivePool, Num: 9
Globalname: incentivePool
global...

Name: PIC_2 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_104(ITokenManager.TokenConfig) = HIGH_LEVEL_CALL, dest:tokenManager_5(ITokenManager), function:getDepositConfig, arguments:['toChainId_1', 'tokenAddress_1']  
High Call: getDepositConfig
Running querryfc
Written func info: TokenManager, getDepositConfig
[i]Type for TMP_104

Name: TMP_104 Function: depositErc20
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tokenManager_6(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_5', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: depositErc20
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_10(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1', 'liquidityProviders_9'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: depositErc20
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_8(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_7', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: depositErc20
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_5(uint256) -> TMP_104.min
MEMBER
init
end
init
end
OUT KEY: depositErc20_TMP_104_min
OUT KEY: depositErc20_TMP_min
FTT: None
No field found
[i]Type for REF_5

Name: TMP_104.min Function: depositErc20
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: TMP_104, Field: min
#################
Member: 
Name: TMP_104 Function: depositErc20
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Fieldf: 
Name: min Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: TMP_104.min Function: depositErc20
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: False
Source address: u
Finance type key: (-1, -1)
Add new member...
XXXX
TMP_105(bool) = REF_5 <= amount_1
init
end
init
end
lnorm: u rnorm: u
init
end
_______________

Name: amount_1 Function: depositErc20
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_105 Function: depositErc20
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
_______________

Name: amount_1 Function: depositErc20
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_104.min Function: depositErc20
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_105

Name: TMP_105 Function: depositErc20
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_106(ITokenManager.TokenConfig) = HIGH_LEVEL_CALL, dest:tokenManager_6(ITokenManager), function:getDepositConfig, arguments:['toChainId_1', 'tokenAddress_1']  
High Call: getDepositConfig
Running querryfc
Written func info: TokenManager, getDepositConfig
[i]Type for TMP_106

Name: TMP_106 Function: depositErc20
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tokenManager_7(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_6', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: depositErc20
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_11(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_10', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: depositErc20
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_9(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_8'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: depositErc20
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_7(uint256) -> TMP_106.max
MEMBER
init
end
init
end
OUT KEY: depositErc20_TMP_106_max
OUT KEY: depositErc20_TMP_max
FTT: None
No field found
[i]Type for REF_7

Name: TMP_106.max Function: depositErc20
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: TMP_106, Field: max
#################
Member: 
Name: TMP_106 Function: depositErc20
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Fieldf: 
Name: max Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: TMP_106.max Function: depositErc20
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: False
Source address: u
Finance type key: (-1, -1)
Add new member...
XXXX
TMP_107(bool) = REF_7 >= amount_1
init
end
init
end
lnorm: u rnorm: u
init
end
_______________

Name: amount_1 Function: depositErc20
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_107 Function: depositErc20
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
_______________

Name: amount_1 Function: depositErc20
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_106.max Function: depositErc20
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_107

Name: TMP_107 Function: depositErc20
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_108(bool) = TMP_105 && TMP_107
[i]Type for TMP_108

Name: TMP_108 Function: depositErc20
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_109(None) = SOLIDITY_CALL require(bool,string)(TMP_108,Deposit amount not in Cap limit)
[i]Type for TMP_109

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_110 = CONVERT 0 to address
Converting 0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
_______________

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_110 Function: depositErc20
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_110

Name: TMP_110 Function: depositErc20
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_111(bool) = receiver_1 != TMP_110
[i]Type for TMP_111

Name: TMP_111 Function: depositErc20
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_112(None) = SOLIDITY_CALL require(bool,string)(TMP_111,Receiver address cannot be 0)
[i]Type for TMP_112

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Source address: u
Name: amount, Num: 1
Globalname: amount
End popogation
TMP_113(bool) = amount_1 != 0
[i]Type for TMP_113

Name: TMP_113 Function: depositErc20
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_114(None) = SOLIDITY_CALL require(bool,string)(TMP_113,Amount cannot be 0)
[i]Type for TMP_114

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: sender, Num: 1
Globalname: sender
End popogation
TMP_115(address) = INTERNAL_CALL, LiquidityPool._msgSender()()
init
end
_______________

Name: PIC_33 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_115 Function: depositErc20
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_115

Name: TMP_115 Function: depositErc20
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
sender_1(address) := TMP_115(address)
asgn
init
end
_______________

Name: TMP_115 Function: depositErc20
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: sender Function: depositErc20
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for sender

Name: sender Function: depositErc20
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Source address: u
Name: amount, Num: 1
Globalname: amount
Name: rewardAmount, Num: 1
Globalname: rewardAmount
End popogation
Name: liquidityProviders, Num: 13
Globalname: liquidityProviders
global...

Name: liquidityProviders Function: setLiquidityProviders
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Source address: -993

Name: None Function: None
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid
Name: incentivePool, Num: 11
Globalname: incentivePool
global...

Name: PIC_2 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_116(uint256) = INTERNAL_CALL, LiquidityPool.getRewardAmount(uint256,address)(amount_1,tokenAddress_1)
init
end
init
end
[[], [], 'u', None, [], -1, 'u', 'u']

Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[], [], 6, 'tokenAddress', [], -1, -990, 'u']

Name: tokenAddress Function: None
Num: 
Den: 
Address: -990
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
Source address: u
Name: amount, Num: 1
Globalname: amount

Name: amount_1 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Source address: -990

Name: tokenAddress_1 Function: None
Num: 
Den: 
Address: -990
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
Phid
Name: liquidityProviders, Num: 15
Globalname: liquidityProviders
global...

Name: liquidityProviders Function: setLiquidityProviders
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Source address: -993

Name: None Function: None
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid
Name: incentivePool, Num: 13
Globalname: incentivePool
global...

Name: PIC_2 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
amount_1(uint256) := ϕ(['amount_1', 'msg.value'])
Phi

Name: amount_1 Function: depositErc20
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: msg.value Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for amount

Name: amount Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tokenAddress_1(address) := ϕ(['NATIVE_5', 'tokenAddress_1'])
Phi
[i]Type for tokenAddress

Name: tokenAddress Function: getRewardAmount
Num: 
Den: 
Address: -990
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_15(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getRewardAmount
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_13(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_0'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: currentLiquidity, Num: 1
Globalname: currentLiquidity
End popogation
Name: liquidityProviders, Num: 16
Globalname: liquidityProviders
global...

Name: liquidityProviders Function: setLiquidityProviders
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Source address: -993

Name: None Function: None
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid
Name: incentivePool, Num: 14
Globalname: incentivePool
global...

Name: PIC_2 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_128(uint256) = INTERNAL_CALL, LiquidityPool.getCurrentLiquidity(address)(tokenAddress_1)
init
end
[[], [], 6, 'tokenAddress', [], -1, -990, 'u']

Name: tokenAddress Function: getCurrentLiquidity
Num: 
Den: 
Address: -990
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
Source address: -990

Name: tokenAddress_1 Function: getCurrentLiquidity
Num: 
Den: 
Address: -990
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
tokenAddress_1(address) := ϕ(['tokenAddress_1', 'tokenAddress_1'])
Phi
[i]Type for tokenAddress

Name: tokenAddress Function: getCurrentLiquidity
Num: 
Den: 
Address: -990
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_3(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_1(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_0', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_1(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_0'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: liquidityPoolBalance, Num: 1
Globalname: liquidityPoolBalance
End popogation

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_99(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_3(ILiquidityProviders), function:getCurrentLiquidity, arguments:['tokenAddress_1']  
High Call: getCurrentLiquidity
Running querryfc
Written func info: LiquidityProviders, getCurrentLiquidity
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-990], [-1], 6, "'u'", 'u', -1)
[i]Type for TMP_99

Name: TMP_99 Function: getCurrentLiquidity
Num: -990
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
liquidityProviders_4(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_3', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_2(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_1', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_2(mapping(address => uint256)) := ϕ(['incentivePool_1', 'incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityPoolBalance_1(uint256) := TMP_99(uint256)
asgn
init
end
_______________

Name: TMP_99 Function: getCurrentLiquidity
Num: -990
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for liquidityPoolBalance

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: -990
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: currentLiquidity, Num: 1
Globalname: currentLiquidity
End popogation

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_100(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_4(ILiquidityProviders), function:totalLPFees, arguments:['tokenAddress_1']  
High Call: totalLPFees
Running querryfc
Written func info: LiquidityProviders, totalLPFees
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-990], [-1], 6, "'u'", 'u', -1)
[i]Type for TMP_100

Name: TMP_100 Function: getCurrentLiquidity
Num: -990
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
liquidityProviders_5(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_4', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_3(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_2', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_3(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_2', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_101(uint256) = liquidityPoolBalance_1 (c)- TMP_100
init
end
init
end
-990
-1
lnorm: 6 rnorm: 6
init
end
_______________

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: -990
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_101 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_101

Name: TMP_101 Function: getCurrentLiquidity
Num: -990
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_2(uint256) -> gasFeeAccumulatedByToken_3[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_2

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_102(uint256) = TMP_101 (c)- REF_2
init
end
init
end
init
end
_______________

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_102 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_102

Name: TMP_102 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_3(uint256) -> incentivePool_3[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_3

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_103(uint256) = TMP_102 (c)- REF_3
init
end
init
end
init
end
_______________

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_103 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_103

Name: TMP_103 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
currentLiquidity_1(uint256) := TMP_103(uint256)
asgn
init
end
_______________

Name: TMP_103 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: currentLiquidity Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for currentLiquidity

Name: currentLiquidity Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Source address: -990

Name: tokenAddress_1 Function: getCurrentLiquidity
Num: 
Den: 
Address: -990
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
tokenAddress_1(address) := ϕ(['tokenAddress_1', 'tokenAddress_1'])
Phi
[i]Type for tokenAddress

Name: tokenAddress Function: getCurrentLiquidity
Num: 
Den: 
Address: -990
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_3(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_1(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_0', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_1(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_0'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: liquidityPoolBalance, Num: 1
Globalname: liquidityPoolBalance
End popogation

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_99(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_3(ILiquidityProviders), function:getCurrentLiquidity, arguments:['tokenAddress_1']  
High Call: getCurrentLiquidity
Running querryfc
Written func info: LiquidityProviders, getCurrentLiquidity
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-990], [-1], 6, "'u'", 'u', -1)
[i]Type for TMP_99

Name: TMP_99 Function: getCurrentLiquidity
Num: -990
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
liquidityProviders_4(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_3', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_2(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_1', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_2(mapping(address => uint256)) := ϕ(['incentivePool_1', 'incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityPoolBalance_1(uint256) := TMP_99(uint256)
asgn
init
end
_______________

Name: TMP_99 Function: getCurrentLiquidity
Num: -990
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for liquidityPoolBalance

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: -990
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: currentLiquidity, Num: 1
Globalname: currentLiquidity
End popogation

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_100(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_4(ILiquidityProviders), function:totalLPFees, arguments:['tokenAddress_1']  
High Call: totalLPFees
Running querryfc
Written func info: LiquidityProviders, totalLPFees
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-990], [-1], 6, "'u'", 'u', -1)
[i]Type for TMP_100

Name: TMP_100 Function: getCurrentLiquidity
Num: -990
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
liquidityProviders_5(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_4', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_3(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_2', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_3(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_2', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_101(uint256) = liquidityPoolBalance_1 (c)- TMP_100
init
end
init
end
-990
-1
lnorm: 6 rnorm: 6
init
end
_______________

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: -990
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_101 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_101

Name: TMP_101 Function: getCurrentLiquidity
Num: -990
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_2(uint256) -> gasFeeAccumulatedByToken_3[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_2

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_102(uint256) = TMP_101 (c)- REF_2
init
end
init
end
init
end
_______________

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_102 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_102

Name: TMP_102 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_3(uint256) -> incentivePool_3[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_3

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_103(uint256) = TMP_102 (c)- REF_3
init
end
init
end
init
end
_______________

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_103 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_103

Name: TMP_103 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
currentLiquidity_1(uint256) := TMP_103(uint256)
asgn
init
end
_______________

Name: TMP_103 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: currentLiquidity Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for currentLiquidity

Name: currentLiquidity Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_128

Name: TMP_128 Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_16(ILiquidityProviders) := ϕ(['liquidityProviders_5'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getRewardAmount
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_14(mapping(address => uint256)) := ϕ(['incentivePool_3'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
currentLiquidity_1(uint256) := TMP_128(uint256)
asgn
init
end
_______________

Name: TMP_128 Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: currentLiquidity Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for currentLiquidity

Name: currentLiquidity Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: providedLiquidity, Num: 1
Globalname: providedLiquidity
End popogation
Name: liquidityProviders, Num: 17
Globalname: liquidityProviders
global...

Name: liquidityProviders Function: setLiquidityProviders
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Source address: -993

Name: None Function: None
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid
Name: incentivePool, Num: 15
Globalname: incentivePool
global...

Name: PIC_2 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_129(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_16(ILiquidityProviders), function:getSuppliedLiquidityByToken, arguments:['tokenAddress_1']  
High Call: getSuppliedLiquidityByToken
Running querryfc
Written func info: LiquidityProviders, getSuppliedLiquidityByToken
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-990], [-1], 6, "'u'", 'u', -1)
[i]Type for TMP_129

Name: TMP_129 Function: getRewardAmount
Num: -990
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
liquidityProviders_17(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_16', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getRewardAmount
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_15(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_14', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
providedLiquidity_1(uint256) := TMP_129(uint256)
asgn
init
end
_______________

Name: TMP_129 Function: getRewardAmount
Num: -990
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: providedLiquidity Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for providedLiquidity

Name: providedLiquidity Function: getRewardAmount
Num: -990
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: currentLiquidity, Num: 1
Globalname: currentLiquidity
End popogation
TMP_130(bool) = currentLiquidity_1 < providedLiquidity_1
init
end
init
end
lnorm: u rnorm: 6
init
end
_______________

Name: providedLiquidity Function: getRewardAmount
Num: -990
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_130 Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
init
end
_______________

Name: providedLiquidity Function: getRewardAmount
Num: -990
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: currentLiquidity Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_130

Name: TMP_130 Function: getRewardAmount
Num: -990
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: liquidityDifference, Num: 1
Globalname: liquidityDifference
End popogation
TMP_131(uint256) = providedLiquidity_1 (c)- currentLiquidity_1
init
end
init
end
-990
-1
lnorm: 6 rnorm: u
init
end
_______________

Name: providedLiquidity Function: getRewardAmount
Num: -990
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_131 Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_131

Name: TMP_131 Function: getRewardAmount
Num: -990
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityDifference_1(uint256) := TMP_131(uint256)
asgn
init
end
_______________

Name: TMP_131 Function: getRewardAmount
Num: -990
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef

Name: liquidityDifference Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for liquidityDifference

Name: liquidityDifference Function: getRewardAmount
Num: -990
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Source address: u
Name: amount, Num: 1
Globalname: amount
End popogation
TMP_132(bool) = amount_1 >= liquidityDifference_1
init
end
init
end
lnorm: u rnorm: 6
init
end
_______________

Name: liquidityDifference Function: getRewardAmount
Num: -990
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_132 Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
init
end
_______________

Name: liquidityDifference Function: getRewardAmount
Num: -990
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_132

Name: TMP_132 Function: getRewardAmount
Num: -990
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: rewardAmount, Num: 1
Globalname: rewardAmount
End popogation
REF_13(uint256) -> incentivePool_15[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_13

Name: incentivePool Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
rewardAmount_1(uint256) := REF_13(uint256)
asgn
init
end
_______________

Name: incentivePool Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: rewardAmount Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for rewardAmount

Name: rewardAmount Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: rewardAmount, Num: 2
Globalname: rewardAmount
End popogation
REF_14(uint256) -> incentivePool_15[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_14

Name: incentivePool Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_133(uint256) = amount_1 (c)* REF_14
testing mul...
init
end
init
end

Name: amount_1 Function: getRewardAmount
Num: -990
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: incentivePool Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: amount_1 Function: getRewardAmount
Num: -990
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_133 Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_133

Name: TMP_133 Function: getRewardAmount
Num: -990
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_134(uint256) = TMP_133 (c)* 10000000000
testing mul...
init
end
init
end

Name: TMP_133 Function: getRewardAmount
Num: -990
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: 10000000000 Function: None
Num: -1
Den: -1
Address: u
Norm: 10
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: 10
init
end
_______________

Name: TMP_133 Function: getRewardAmount
Num: -990
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_134 Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: 10
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_134

Name: TMP_134 Function: getRewardAmount
Num: -990
Den: -1
Address: u
Norm: 10
LF: None
Value: 10000000000
Fields: 
Finance Type: undef
XXXX
TMP_135(uint256) = TMP_134 (c)/ liquidityDifference_1
init
end
init
end
lnorm: 10 rnorm: 6
Source address: u
init
end
_______________

Name: PIC_52 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10000000000
Fields: 
Finance Type: undef

Name: TMP_135 Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: 4
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
init
end
init
end
lnorm: 10 rnorm: 6
Source address: u
init
end
_______________

Name: PIC_53 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10000000000
Fields: 
Finance Type: undef

Name: TMP_135 Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: 4
LF: None
Value: 10000000000
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_135

Name: TMP_135 Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: 4
LF: None
Value: 10000000000
Fields: 
Finance Type: undef
XXXX
rewardAmount_2(uint256) := TMP_135(uint256)
asgn
init
end
_______________

Name: TMP_135 Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: 4
LF: None
Value: 10000000000
Fields: 
Finance Type: undef

Name: rewardAmount Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for rewardAmount

Name: rewardAmount Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: 4
LF: None
Value: 10000000000
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: rewardAmount, Num: 3
Globalname: rewardAmount
End popogation
TMP_136(uint256) = rewardAmount_2 (c)/ 10000000000
init
end
init
end
lnorm: 4 rnorm: 10
init
end
init
end
init
end
lnorm: 4 rnorm: 10
init
end
[i]Type for TMP_136

Name: TMP_136 Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: -6
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
rewardAmount_3(uint256) := TMP_136(uint256)
asgn
init
end
_______________

Name: TMP_136 Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: -6
LF: None
Value: 1
Fields: 
Finance Type: undef

Name: rewardAmount Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for rewardAmount

Name: rewardAmount Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: -6
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Source address: u
Name: amount, Num: 1
Globalname: amount

Name: amount_1 Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Source address: -990

Name: tokenAddress_1 Function: getRewardAmount
Num: 
Den: 
Address: -990
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getRewardAmount
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
amount_1(uint256) := ϕ(['amount_1', 'msg.value'])
Phi

Name: amount_1 Function: depositErc20
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: msg.value Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for amount

Name: amount Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tokenAddress_1(address) := ϕ(['NATIVE_5', 'tokenAddress_1'])
Phi
[i]Type for tokenAddress

Name: tokenAddress Function: getRewardAmount
Num: 
Den: 
Address: -990
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_15(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getRewardAmount
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_13(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_0'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: currentLiquidity, Num: 1
Globalname: currentLiquidity
End popogation

Name: liquidityProviders Function: getRewardAmount
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_128(uint256) = INTERNAL_CALL, LiquidityPool.getCurrentLiquidity(address)(tokenAddress_1)
init
end
[[], [], 6, 'tokenAddress', [], -1, -990, 'u']

Name: tokenAddress Function: getCurrentLiquidity
Num: 
Den: 
Address: -990
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
Source address: -990

Name: tokenAddress_1 Function: getCurrentLiquidity
Num: 
Den: 
Address: -990
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
tokenAddress_1(address) := ϕ(['tokenAddress_1', 'tokenAddress_1'])
Phi
[i]Type for tokenAddress

Name: tokenAddress Function: getCurrentLiquidity
Num: 
Den: 
Address: -990
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_3(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_1(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_0', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_1(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_0'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: liquidityPoolBalance, Num: 1
Globalname: liquidityPoolBalance
End popogation

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_99(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_3(ILiquidityProviders), function:getCurrentLiquidity, arguments:['tokenAddress_1']  
High Call: getCurrentLiquidity
Running querryfc
Written func info: LiquidityProviders, getCurrentLiquidity
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-990], [-1], 6, "'u'", 'u', -1)
[i]Type for TMP_99

Name: TMP_99 Function: getCurrentLiquidity
Num: -990
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
liquidityProviders_4(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_3', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_2(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_1', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_2(mapping(address => uint256)) := ϕ(['incentivePool_1', 'incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityPoolBalance_1(uint256) := TMP_99(uint256)
asgn
init
end
_______________

Name: TMP_99 Function: getCurrentLiquidity
Num: -990
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for liquidityPoolBalance

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: -990
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: currentLiquidity, Num: 1
Globalname: currentLiquidity
End popogation

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_100(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_4(ILiquidityProviders), function:totalLPFees, arguments:['tokenAddress_1']  
High Call: totalLPFees
Running querryfc
Written func info: LiquidityProviders, totalLPFees
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-990], [-1], 6, "'u'", 'u', -1)
[i]Type for TMP_100

Name: TMP_100 Function: getCurrentLiquidity
Num: -990
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
liquidityProviders_5(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_4', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_3(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_2', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_3(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_2', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_101(uint256) = liquidityPoolBalance_1 (c)- TMP_100
init
end
init
end
-990
-1
lnorm: 6 rnorm: 6
init
end
_______________

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: -990
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_101 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_101

Name: TMP_101 Function: getCurrentLiquidity
Num: -990
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_2(uint256) -> gasFeeAccumulatedByToken_3[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_2

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_102(uint256) = TMP_101 (c)- REF_2
init
end
init
end
init
end
_______________

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_102 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_102

Name: TMP_102 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_3(uint256) -> incentivePool_3[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_3

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_103(uint256) = TMP_102 (c)- REF_3
init
end
init
end
init
end
_______________

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_103 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_103

Name: TMP_103 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
currentLiquidity_1(uint256) := TMP_103(uint256)
asgn
init
end
_______________

Name: TMP_103 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: currentLiquidity Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for currentLiquidity

Name: currentLiquidity Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Source address: -990

Name: tokenAddress_1 Function: getCurrentLiquidity
Num: 
Den: 
Address: -990
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
tokenAddress_1(address) := ϕ(['tokenAddress_1', 'tokenAddress_1'])
Phi
[i]Type for tokenAddress

Name: tokenAddress Function: getCurrentLiquidity
Num: 
Den: 
Address: -990
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_3(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_1(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_0', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_1(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_0'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: liquidityPoolBalance, Num: 1
Globalname: liquidityPoolBalance
End popogation

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_99(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_3(ILiquidityProviders), function:getCurrentLiquidity, arguments:['tokenAddress_1']  
High Call: getCurrentLiquidity
Running querryfc
Written func info: LiquidityProviders, getCurrentLiquidity
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-990], [-1], 6, "'u'", 'u', -1)
[i]Type for TMP_99

Name: TMP_99 Function: getCurrentLiquidity
Num: -990
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
liquidityProviders_4(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_3', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_2(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_1', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_2(mapping(address => uint256)) := ϕ(['incentivePool_1', 'incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityPoolBalance_1(uint256) := TMP_99(uint256)
asgn
init
end
_______________

Name: TMP_99 Function: getCurrentLiquidity
Num: -990
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for liquidityPoolBalance

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: -990
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: currentLiquidity, Num: 1
Globalname: currentLiquidity
End popogation

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_100(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_4(ILiquidityProviders), function:totalLPFees, arguments:['tokenAddress_1']  
High Call: totalLPFees
Running querryfc
Written func info: LiquidityProviders, totalLPFees
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-990], [-1], 6, "'u'", 'u', -1)
[i]Type for TMP_100

Name: TMP_100 Function: getCurrentLiquidity
Num: -990
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
liquidityProviders_5(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_4', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_3(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_2', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_3(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_2', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_101(uint256) = liquidityPoolBalance_1 (c)- TMP_100
init
end
init
end
-990
-1
lnorm: 6 rnorm: 6
init
end
_______________

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: -990
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_101 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_101

Name: TMP_101 Function: getCurrentLiquidity
Num: -990
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_2(uint256) -> gasFeeAccumulatedByToken_3[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_2

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_102(uint256) = TMP_101 (c)- REF_2
init
end
init
end
init
end
_______________

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_102 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_102

Name: TMP_102 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_3(uint256) -> incentivePool_3[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_3

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_103(uint256) = TMP_102 (c)- REF_3
init
end
init
end
init
end
_______________

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_103 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_103

Name: TMP_103 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
currentLiquidity_1(uint256) := TMP_103(uint256)
asgn
init
end
_______________

Name: TMP_103 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: currentLiquidity Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for currentLiquidity

Name: currentLiquidity Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_128

Name: TMP_128 Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_16(ILiquidityProviders) := ϕ(['liquidityProviders_5'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getRewardAmount
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_14(mapping(address => uint256)) := ϕ(['incentivePool_3'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
currentLiquidity_1(uint256) := TMP_128(uint256)
asgn
init
end
_______________

Name: TMP_128 Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: currentLiquidity Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for currentLiquidity

Name: currentLiquidity Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: providedLiquidity, Num: 1
Globalname: providedLiquidity
End popogation

Name: liquidityProviders Function: getRewardAmount
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_129(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_16(ILiquidityProviders), function:getSuppliedLiquidityByToken, arguments:['tokenAddress_1']  
High Call: getSuppliedLiquidityByToken
Running querryfc
Written func info: LiquidityProviders, getSuppliedLiquidityByToken
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-990], [-1], 6, "'u'", 'u', -1)
[i]Type for TMP_129

Name: TMP_129 Function: getRewardAmount
Num: -990
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
liquidityProviders_17(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_16', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getRewardAmount
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_15(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_14', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
providedLiquidity_1(uint256) := TMP_129(uint256)
asgn
init
end
_______________

Name: TMP_129 Function: getRewardAmount
Num: -990
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: providedLiquidity Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for providedLiquidity

Name: providedLiquidity Function: getRewardAmount
Num: -990
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: currentLiquidity, Num: 1
Globalname: currentLiquidity
End popogation
TMP_130(bool) = currentLiquidity_1 < providedLiquidity_1
init
end
init
end
lnorm: u rnorm: 6
init
end
_______________

Name: providedLiquidity Function: getRewardAmount
Num: -990
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_130 Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
init
end
_______________

Name: providedLiquidity Function: getRewardAmount
Num: -990
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: currentLiquidity Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_130

Name: TMP_130 Function: getRewardAmount
Num: -990
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: liquidityDifference, Num: 1
Globalname: liquidityDifference
End popogation
TMP_131(uint256) = providedLiquidity_1 (c)- currentLiquidity_1
init
end
init
end
-990
-1
lnorm: 6 rnorm: u
init
end
_______________

Name: providedLiquidity Function: getRewardAmount
Num: -990
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_131 Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_131

Name: TMP_131 Function: getRewardAmount
Num: -990
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityDifference_1(uint256) := TMP_131(uint256)
asgn
init
end
_______________

Name: TMP_131 Function: getRewardAmount
Num: -990
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef

Name: liquidityDifference Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for liquidityDifference

Name: liquidityDifference Function: getRewardAmount
Num: -990
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Source address: u
Name: amount, Num: 1
Globalname: amount
End popogation
TMP_132(bool) = amount_1 >= liquidityDifference_1
init
end
init
end
lnorm: u rnorm: 6
init
end
_______________

Name: liquidityDifference Function: getRewardAmount
Num: -990
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_132 Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
init
end
_______________

Name: liquidityDifference Function: getRewardAmount
Num: -990
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_132

Name: TMP_132 Function: getRewardAmount
Num: -990
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: rewardAmount, Num: 1
Globalname: rewardAmount
End popogation
REF_13(uint256) -> incentivePool_15[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_13

Name: incentivePool Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
rewardAmount_1(uint256) := REF_13(uint256)
asgn
init
end
_______________

Name: incentivePool Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: rewardAmount Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for rewardAmount

Name: rewardAmount Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: rewardAmount, Num: 2
Globalname: rewardAmount
End popogation
REF_14(uint256) -> incentivePool_15[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_14

Name: incentivePool Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_133(uint256) = amount_1 (c)* REF_14
testing mul...
init
end
init
end

Name: amount_1 Function: getRewardAmount
Num: -990
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: incentivePool Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: amount_1 Function: getRewardAmount
Num: -990
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_133 Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_133

Name: TMP_133 Function: getRewardAmount
Num: -990
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_134(uint256) = TMP_133 (c)* 10000000000
testing mul...
init
end
init
end

Name: TMP_133 Function: getRewardAmount
Num: -990
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: 10000000000 Function: None
Num: -1
Den: -1
Address: u
Norm: 10
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: 10
init
end
_______________

Name: TMP_133 Function: getRewardAmount
Num: -990
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_134 Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: 10
LF: None
Value: 10000000000
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_134

Name: TMP_134 Function: getRewardAmount
Num: -990
Den: -1
Address: u
Norm: 10
LF: None
Value: 10000000000
Fields: 
Finance Type: undef
XXXX
TMP_135(uint256) = TMP_134 (c)/ liquidityDifference_1
init
end
init
end
lnorm: 10 rnorm: 6
Source address: u
init
end
_______________

Name: PIC_55 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10000000000
Fields: 
Finance Type: undef

Name: TMP_135 Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: 4
LF: None
Value: 10000000000
Fields: 
Finance Type: undef
COPY HERE
Source address: u
init
end
init
end
lnorm: 10 rnorm: 6
Source address: u
init
end
_______________

Name: PIC_56 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10000000000
Fields: 
Finance Type: undef

Name: TMP_135 Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: 4
LF: None
Value: 10000000000
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_135

Name: TMP_135 Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: 4
LF: None
Value: 10000000000
Fields: 
Finance Type: undef
XXXX
rewardAmount_2(uint256) := TMP_135(uint256)
asgn
init
end
_______________

Name: TMP_135 Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: 4
LF: None
Value: 10000000000
Fields: 
Finance Type: undef

Name: rewardAmount Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10000000000
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for rewardAmount

Name: rewardAmount Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: 4
LF: None
Value: 10000000000
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: rewardAmount, Num: 3
Globalname: rewardAmount
End popogation
TMP_136(uint256) = rewardAmount_2 (c)/ 10000000000
init
end
init
end
lnorm: 4 rnorm: 10
init
end
init
end
init
end
lnorm: 4 rnorm: 10
init
end
[i]Type for TMP_136

Name: TMP_136 Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: -6
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
rewardAmount_3(uint256) := TMP_136(uint256)
asgn
init
end
_______________

Name: TMP_136 Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: -6
LF: None
Value: 1
Fields: 
Finance Type: undef

Name: rewardAmount Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for rewardAmount

Name: rewardAmount Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: -6
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_116

Name: TMP_116 Function: depositErc20
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_13(ILiquidityProviders) := ϕ(['liquidityProviders_17'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: depositErc20
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_11(mapping(address => uint256)) := ϕ(['incentivePool_15'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: depositErc20
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
rewardAmount_1(uint256) := TMP_116(uint256)
asgn
init
end
_______________

Name: TMP_116 Function: depositErc20
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: rewardAmount Function: depositErc20
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for rewardAmount

Name: rewardAmount Function: depositErc20
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: rewardAmount, Num: 1
Globalname: rewardAmount
End popogation
TMP_117(bool) = rewardAmount_1 != 0
[i]Type for TMP_117

Name: TMP_117 Function: depositErc20
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Source address: u
Name: amount, Num: 1
Globalname: amount
End popogation
Name: liquidityProviders, Num: 14
Globalname: liquidityProviders
global...

Name: liquidityProviders Function: setLiquidityProviders
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Source address: -993

Name: None Function: None
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid
HIGH_LEVEL_CALL, dest:liquidityProviders_13(ILiquidityProviders), function:increaseCurrentLiquidity, arguments:['tokenAddress_1', 'amount_1']  
High Call: increaseCurrentLiquidity
liquidityProviders_14(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_13', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: depositErc20
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: rewardAmount, Num: 1
Globalname: rewardAmount
Name: incentivePool, Num: 12
Globalname: incentivePool
global...

Name: PIC_2 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
End popogation

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
REF_8(uint256) -> incentivePool_11[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_8

Name: incentivePool Function: depositErc20
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_9(uint256) -> incentivePool_11[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_9

Name: incentivePool Function: depositErc20
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_118(uint256) = REF_9 (c)- rewardAmount_1
init
end
init
end
init
end
_______________

Name: incentivePool Function: depositErc20
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_118 Function: depositErc20
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_118

Name: TMP_118 Function: depositErc20
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_12(mapping(address => uint256)) := ϕ(['incentivePool_11'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: depositErc20
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_8 (->incentivePool_12) := TMP_118(uint256)
asgn
init
end
_______________

Name: TMP_118 Function: depositErc20
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: REF_8 Function: depositErc20
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_8

Name: REF_8 Function: depositErc20
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
Source address: u
Propogating parameters and globals to SSA variables...
Source address: u
Name: amount, Num: 1
Globalname: amount
End popogation
TMP_120 = CONVERT tokenAddress_1 to IERC20Upgradeable
Converting tokenAddress_1

Name: tokenAddress Function: depositErc20
Num: 
Den: 
Address: -990
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
init
end
_______________

Name: tokenAddress Function: depositErc20
Num: 
Den: 
Address: -990
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef

Name: TMP_120 Function: depositErc20
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: -990
ERC20Upgradeable
[i]Type for TMP_120

Name: TMP_120 Function: depositErc20
Num: 
Den: 
Address: -990
Norm: 6
LF: ERC20Upgradeable
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_121 = CONVERT this to address
Converting this
new address made for this
prev address? u
global assignment: 5
5
5
[i]Type for TMP_121

Name: TMP_121 Function: depositErc20
Num: -1
Den: -1
Address: 5
Norm: u
LF: LiquidityPool
Value: u
Fields: 
Finance Type: undef
XXXX
LIBRARY_CALL, dest:SafeERC20Upgradeable, function:SafeERC20Upgradeable.safeTransferFrom(IERC20Upgradeable,address,address,uint256), arguments:['TMP_120', 'sender_1', 'TMP_121', 'amount_1'] 
Propogating parameters and globals to SSA variables...
Source address: u
Name: tag, Num: 1
Globalname: tag
Source address: u
Name: toChainId, Num: 1
Globalname: toChainId
Source address: u
Name: amount, Num: 1
Globalname: amount
Name: rewardAmount, Num: 1
Globalname: rewardAmount
End popogation
TMP_123(uint256) = amount_1 (c)+ rewardAmount_1
init
end
init
end
init
end
_______________

Name: rewardAmount Function: depositErc20
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_123 Function: depositErc20
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_123

Name: TMP_123 Function: depositErc20
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX


toChainId_1(uint256) := ϕ(['toChainId_1', 'toChainId_1'])
tokenAddress_1(address) := ϕ(['tokenAddress_1', 'tokenAddress_1'])
receiver_1(address) := ϕ(['receiver_1', 'receiver_1'])
amount_1(uint256) := ϕ(['amount_1', 'amount_1'])
tag_1(string) := ϕ(['tag_1', 'tag_1'])
tokenManager_2(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_0', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
liquidityProviders_6(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
incentivePool_4(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_0'])
MODIFIER_CALL, LiquidityPool.tokenChecks(address)(tokenAddress_1)
tokenManager_3(ITokenManager) := ϕ(['tokenManager_33'])
MODIFIER_CALL, PausableUpgradeable.whenNotPaused()()
MODIFIER_CALL, ReentrancyGuardUpgradeable.nonReentrant()()
TMP_104(ITokenManager.TokenConfig) = HIGH_LEVEL_CALL, dest:tokenManager_5(ITokenManager), function:getDepositConfig, arguments:['toChainId_1', 'tokenAddress_1']  
tokenManager_6(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_5', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
liquidityProviders_10(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1', 'liquidityProviders_9'])
incentivePool_8(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_7', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21'])
REF_5(uint256) -> TMP_104.min
TMP_105(bool) = REF_5 <= amount_1
TMP_106(ITokenManager.TokenConfig) = HIGH_LEVEL_CALL, dest:tokenManager_6(ITokenManager), function:getDepositConfig, arguments:['toChainId_1', 'tokenAddress_1']  
tokenManager_7(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_6', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
liquidityProviders_11(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_10', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
incentivePool_9(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_8'])
REF_7(uint256) -> TMP_106.max
TMP_107(bool) = REF_7 >= amount_1
TMP_108(bool) = TMP_105 && TMP_107
TMP_109(None) = SOLIDITY_CALL require(bool,string)(TMP_108,Deposit amount not in Cap limit)
TMP_110 = CONVERT 0 to address
TMP_111(bool) = receiver_1 != TMP_110
TMP_112(None) = SOLIDITY_CALL require(bool,string)(TMP_111,Receiver address cannot be 0)
TMP_113(bool) = amount_1 != 0
TMP_114(None) = SOLIDITY_CALL require(bool,string)(TMP_113,Amount cannot be 0)
TMP_115(address) = INTERNAL_CALL, LiquidityPool._msgSender()()
sender_1(address) := TMP_115(address)
TMP_116(uint256) = INTERNAL_CALL, LiquidityPool.getRewardAmount(uint256,address)(amount_1,tokenAddress_1)
liquidityProviders_13(ILiquidityProviders) := ϕ(['liquidityProviders_17'])
incentivePool_11(mapping(address => uint256)) := ϕ(['incentivePool_15'])
rewardAmount_1(uint256) := TMP_116(uint256)
TMP_117(bool) = rewardAmount_1 != 0
CONDITION TMP_117
HIGH_LEVEL_CALL, dest:liquidityProviders_13(ILiquidityProviders), function:increaseCurrentLiquidity, arguments:['tokenAddress_1', 'amount_1']  
liquidityProviders_14(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_13', 'liquidityProviders_40', 'liquidityProviders_1'])
REF_8(uint256) -> incentivePool_11[tokenAddress_1]
REF_9(uint256) -> incentivePool_11[tokenAddress_1]
TMP_118(uint256) = REF_9 (c)- rewardAmount_1
incentivePool_12(mapping(address => uint256)) := ϕ(['incentivePool_11'])
REF_8 (->incentivePool_12) := TMP_118(uint256)
TMP_120 = CONVERT tokenAddress_1 to IERC20Upgradeable
TMP_121 = CONVERT this to address
LIBRARY_CALL, dest:SafeERC20Upgradeable, function:SafeERC20Upgradeable.safeTransferFrom(IERC20Upgradeable,address,address,uint256), arguments:['TMP_120', 'sender_1', 'TMP_121', 'amount_1'] 
TMP_123(uint256) = amount_1 (c)+ rewardAmount_1
Emit Deposit(sender_1,tokenAddress_1,receiver_1,toChainId_1,TMP_123,rewardAmount_1,tag_1)


Propogating parameters and globals to SSA variables...
End popogation
Source address: u
Name: toChainId, Num: 1
Globalname: toChainId

Name: toChainId_1 Function: depositErc20
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Source address: -990

Name: tokenAddress_1 Function: depositErc20
Num: 
Den: 
Address: -990
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
Phid
Source address: -989

Name: receiver_1 Function: depositErc20
Num: 
Den: 
Address: -989
Norm: 0
LF: receiver
Value: u
Fields: 
Finance Type: undef
Phid
Source address: u
Name: amount, Num: 1
Globalname: amount

Name: amount_1 Function: depositErc20
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Source address: u
Name: tag, Num: 1
Globalname: tag

Name: tag_1 Function: depositErc20
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: tokenManager Function: depositErc20
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: depositErc20
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: depositErc20
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
toChainId_1(uint256) := ϕ(['toChainId_1', 'toChainId_1'])
Phi

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for toChainId

Name: toChainId Function: depositErc20
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tokenAddress_1(address) := ϕ(['tokenAddress_1', 'tokenAddress_1'])
Phi
[i]Type for tokenAddress

Name: tokenAddress Function: depositErc20
Num: 
Den: 
Address: -990
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
XXXX
receiver_1(address) := ϕ(['receiver_1', 'receiver_1'])
Phi
[i]Type for receiver

Name: receiver Function: depositErc20
Num: 
Den: 
Address: -989
Norm: 0
LF: receiver
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount_1', 'amount_1'])
Phi

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for amount

Name: amount Function: depositErc20
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tag_1(string) := ϕ(['tag_1', 'tag_1'])
Phi

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for tag

Name: tag Function: depositErc20
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tokenManager_2(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_0', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: depositErc20
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_6(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: depositErc20
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_4(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_0'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: depositErc20
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation

Name: tokenManager Function: depositErc20
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid
MODIFIER_CALL, LiquidityPool.tokenChecks(address)(tokenAddress_1)
init
end
tokenManager_3(ITokenManager) := ϕ(['tokenManager_33'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: depositErc20
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, PausableUpgradeable.whenNotPaused()()
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, ReentrancyGuardUpgradeable.nonReentrant()()
Propogating parameters and globals to SSA variables...
Source address: u
Name: toChainId, Num: 1
Globalname: toChainId
Source address: u
Name: amount, Num: 1
Globalname: amount
End popogation

Name: tokenManager Function: depositErc20
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: depositErc20
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: depositErc20
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: tokenManager Function: depositErc20
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: depositErc20
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: depositErc20
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_104(ITokenManager.TokenConfig) = HIGH_LEVEL_CALL, dest:tokenManager_5(ITokenManager), function:getDepositConfig, arguments:['toChainId_1', 'tokenAddress_1']  
High Call: getDepositConfig
Running querryfc
Written func info: TokenManager, getDepositConfig
[i]Type for TMP_104

Name: TMP_104 Function: depositErc20
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: min
Finance Type: undef
XXXX
tokenManager_6(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_5', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: depositErc20
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_10(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1', 'liquidityProviders_9'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: depositErc20
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_8(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_7', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: depositErc20
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_5(uint256) -> TMP_104.min
MEMBER
init
end
init
end
Source address: u
[i]Type for REF_5

Name: TMP_104.min Function: depositErc20
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: TMP_104, Field: min
#################
Member: 
Name: TMP_104 Function: depositErc20
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: min
Finance Type: undef
Fieldf: 
Name: min Function: depositErc20
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: TMP_104.min Function: depositErc20
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: min Function: depositErc20
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_105(bool) = REF_5 <= amount_1
init
end
init
end
lnorm: u rnorm: u
init
end
_______________

Name: TMP_104.min Function: depositErc20
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_105 Function: depositErc20
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
init
end
_______________

Name: TMP_104.min Function: depositErc20
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: depositErc20
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_105

Name: TMP_105 Function: depositErc20
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_106(ITokenManager.TokenConfig) = HIGH_LEVEL_CALL, dest:tokenManager_6(ITokenManager), function:getDepositConfig, arguments:['toChainId_1', 'tokenAddress_1']  
High Call: getDepositConfig
Running querryfc
Written func info: TokenManager, getDepositConfig
[i]Type for TMP_106

Name: TMP_106 Function: depositErc20
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: max
Finance Type: undef
XXXX
tokenManager_7(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_6', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: depositErc20
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_11(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_10', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: depositErc20
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_9(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_8'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: depositErc20
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_7(uint256) -> TMP_106.max
MEMBER
init
end
init
end
Source address: u
[i]Type for REF_7

Name: TMP_106.max Function: depositErc20
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: TMP_106, Field: max
#################
Member: 
Name: TMP_106 Function: depositErc20
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: max
Finance Type: undef
Fieldf: 
Name: max Function: depositErc20
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: TMP_106.max Function: depositErc20
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: max Function: depositErc20
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_107(bool) = REF_7 >= amount_1
init
end
init
end
lnorm: u rnorm: u
[i]Type for TMP_107

Name: TMP_107 Function: depositErc20
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_108(bool) = TMP_105 && TMP_107
[i]Type for TMP_108

Name: TMP_108 Function: depositErc20
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_109(None) = SOLIDITY_CALL require(bool,string)(TMP_108,Deposit amount not in Cap limit)
[i]Type for TMP_109

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_110 = CONVERT 0 to address
Converting 0

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
_______________

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_110 Function: depositErc20
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_110

Name: TMP_110 Function: depositErc20
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_111(bool) = receiver_1 != TMP_110
[i]Type for TMP_111

Name: TMP_111 Function: depositErc20
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_112(None) = SOLIDITY_CALL require(bool,string)(TMP_111,Receiver address cannot be 0)
[i]Type for TMP_112

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_113(bool) = amount_1 != 0
[i]Type for TMP_113

Name: TMP_113 Function: depositErc20
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_114(None) = SOLIDITY_CALL require(bool,string)(TMP_113,Amount cannot be 0)
[i]Type for TMP_114

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: sender, Num: 1
Globalname: sender
End popogation
TMP_115(address) = INTERNAL_CALL, LiquidityPool._msgSender()()
init
end
_______________

Name: PIC_33 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_115 Function: depositErc20
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_115

Name: TMP_115 Function: depositErc20
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
sender_1(address) := TMP_115(address)
asgn
init
end
_______________

Name: TMP_115 Function: depositErc20
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: sender Function: depositErc20
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for sender

Name: sender Function: depositErc20
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: rewardAmount, Num: 1
Globalname: rewardAmount
End popogation

Name: liquidityProviders Function: depositErc20
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: depositErc20
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_116(uint256) = INTERNAL_CALL, LiquidityPool.getRewardAmount(uint256,address)(amount_1,tokenAddress_1)
init
end
init
end
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[], [], 6, 'tokenAddress', [], -1, -990, 'u']

Name: tokenAddress Function: None
Num: 
Den: 
Address: -990
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
Source address: u

Name: amount_1 Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Source address: -990

Name: tokenAddress_1 Function: getRewardAmount
Num: 
Den: 
Address: -990
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getRewardAmount
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
amount_1(uint256) := ϕ(['amount_1', 'msg.value'])
Phi
[i]Type for amount

Name: amount Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tokenAddress_1(address) := ϕ(['NATIVE_5', 'tokenAddress_1'])
Phi
[i]Type for tokenAddress

Name: tokenAddress Function: getRewardAmount
Num: 
Den: 
Address: -990
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_15(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getRewardAmount
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_13(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_0'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: currentLiquidity, Num: 1
Globalname: currentLiquidity
End popogation

Name: liquidityProviders Function: getRewardAmount
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_128(uint256) = INTERNAL_CALL, LiquidityPool.getCurrentLiquidity(address)(tokenAddress_1)
init
end
[[], [], 6, 'tokenAddress', [], -1, -990, 'u']

Name: tokenAddress Function: getCurrentLiquidity
Num: 
Den: 
Address: -990
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
Source address: -990

Name: tokenAddress_1 Function: getCurrentLiquidity
Num: 
Den: 
Address: -990
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
tokenAddress_1(address) := ϕ(['tokenAddress_1', 'tokenAddress_1'])
Phi
[i]Type for tokenAddress

Name: tokenAddress Function: getCurrentLiquidity
Num: 
Den: 
Address: -990
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_3(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_1(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_0', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_1(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_0'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: liquidityPoolBalance, Num: 1
Globalname: liquidityPoolBalance
End popogation

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_99(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_3(ILiquidityProviders), function:getCurrentLiquidity, arguments:['tokenAddress_1']  
High Call: getCurrentLiquidity
Running querryfc
Written func info: LiquidityProviders, getCurrentLiquidity
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-990], [-1], 6, "'u'", 'u', -1)
[i]Type for TMP_99

Name: TMP_99 Function: getCurrentLiquidity
Num: -990
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
liquidityProviders_4(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_3', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_2(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_1', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_2(mapping(address => uint256)) := ϕ(['incentivePool_1', 'incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityPoolBalance_1(uint256) := TMP_99(uint256)
asgn
init
end
_______________

Name: TMP_99 Function: getCurrentLiquidity
Num: -990
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for liquidityPoolBalance

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: -990
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: currentLiquidity, Num: 1
Globalname: currentLiquidity
End popogation

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_100(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_4(ILiquidityProviders), function:totalLPFees, arguments:['tokenAddress_1']  
High Call: totalLPFees
Running querryfc
Written func info: LiquidityProviders, totalLPFees
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-990], [-1], 6, "'u'", 'u', -1)
[i]Type for TMP_100

Name: TMP_100 Function: getCurrentLiquidity
Num: -990
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
liquidityProviders_5(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_4', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_3(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_2', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_3(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_2', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_101(uint256) = liquidityPoolBalance_1 (c)- TMP_100
init
end
init
end
-990
-1
lnorm: 6 rnorm: 6
init
end
_______________

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: -990
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_101 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_101

Name: TMP_101 Function: getCurrentLiquidity
Num: -990
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_2(uint256) -> gasFeeAccumulatedByToken_3[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_2

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_102(uint256) = TMP_101 (c)- REF_2
init
end
init
end
init
end
_______________

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_102 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_102

Name: TMP_102 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_3(uint256) -> incentivePool_3[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_3

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_103(uint256) = TMP_102 (c)- REF_3
init
end
init
end
init
end
_______________

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_103 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_103

Name: TMP_103 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
currentLiquidity_1(uint256) := TMP_103(uint256)
asgn
init
end
_______________

Name: TMP_103 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: currentLiquidity Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for currentLiquidity

Name: currentLiquidity Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Source address: -990

Name: tokenAddress_1 Function: getCurrentLiquidity
Num: 
Den: 
Address: -990
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
tokenAddress_1(address) := ϕ(['tokenAddress_1', 'tokenAddress_1'])
Phi
[i]Type for tokenAddress

Name: tokenAddress Function: getCurrentLiquidity
Num: 
Den: 
Address: -990
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_3(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_1(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_0', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_1(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_0'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: liquidityPoolBalance, Num: 1
Globalname: liquidityPoolBalance
End popogation

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_99(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_3(ILiquidityProviders), function:getCurrentLiquidity, arguments:['tokenAddress_1']  
High Call: getCurrentLiquidity
Running querryfc
Written func info: LiquidityProviders, getCurrentLiquidity
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-990], [-1], 6, "'u'", 'u', -1)
[i]Type for TMP_99

Name: TMP_99 Function: getCurrentLiquidity
Num: -990
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
liquidityProviders_4(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_3', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_2(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_1', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_2(mapping(address => uint256)) := ϕ(['incentivePool_1', 'incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityPoolBalance_1(uint256) := TMP_99(uint256)
asgn
init
end
_______________

Name: TMP_99 Function: getCurrentLiquidity
Num: -990
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for liquidityPoolBalance

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: -990
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: currentLiquidity, Num: 1
Globalname: currentLiquidity
End popogation

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_100(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_4(ILiquidityProviders), function:totalLPFees, arguments:['tokenAddress_1']  
High Call: totalLPFees
Running querryfc
Written func info: LiquidityProviders, totalLPFees
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-990], [-1], 6, "'u'", 'u', -1)
[i]Type for TMP_100

Name: TMP_100 Function: getCurrentLiquidity
Num: -990
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
liquidityProviders_5(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_4', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_3(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_2', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_3(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_2', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_101(uint256) = liquidityPoolBalance_1 (c)- TMP_100
init
end
init
end
-990
-1
lnorm: 6 rnorm: 6
init
end
_______________

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: -990
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_101 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_101

Name: TMP_101 Function: getCurrentLiquidity
Num: -990
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_2(uint256) -> gasFeeAccumulatedByToken_3[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_2

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_102(uint256) = TMP_101 (c)- REF_2
init
end
init
end
init
end
_______________

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_102 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_102

Name: TMP_102 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_3(uint256) -> incentivePool_3[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_3

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_103(uint256) = TMP_102 (c)- REF_3
init
end
init
end
init
end
_______________

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_103 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_103

Name: TMP_103 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
currentLiquidity_1(uint256) := TMP_103(uint256)
asgn
init
end
_______________

Name: TMP_103 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: currentLiquidity Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for currentLiquidity

Name: currentLiquidity Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_128

Name: TMP_128 Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_16(ILiquidityProviders) := ϕ(['liquidityProviders_5'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getRewardAmount
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_14(mapping(address => uint256)) := ϕ(['incentivePool_3'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
currentLiquidity_1(uint256) := TMP_128(uint256)
asgn
init
end
_______________

Name: TMP_128 Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: currentLiquidity Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for currentLiquidity

Name: currentLiquidity Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: providedLiquidity, Num: 1
Globalname: providedLiquidity
End popogation

Name: liquidityProviders Function: getRewardAmount
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_129(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_16(ILiquidityProviders), function:getSuppliedLiquidityByToken, arguments:['tokenAddress_1']  
High Call: getSuppliedLiquidityByToken
Running querryfc
Written func info: LiquidityProviders, getSuppliedLiquidityByToken
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-990], [-1], 6, "'u'", 'u', -1)
[i]Type for TMP_129

Name: TMP_129 Function: getRewardAmount
Num: -990
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
liquidityProviders_17(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_16', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getRewardAmount
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_15(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_14', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
providedLiquidity_1(uint256) := TMP_129(uint256)
asgn
init
end
_______________

Name: TMP_129 Function: getRewardAmount
Num: -990
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: providedLiquidity Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for providedLiquidity

Name: providedLiquidity Function: getRewardAmount
Num: -990
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: currentLiquidity, Num: 1
Globalname: currentLiquidity
End popogation
TMP_130(bool) = currentLiquidity_1 < providedLiquidity_1
init
end
init
end
lnorm: u rnorm: 6
init
end
_______________

Name: providedLiquidity Function: getRewardAmount
Num: -990
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_130 Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
init
end
_______________

Name: providedLiquidity Function: getRewardAmount
Num: -990
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: currentLiquidity Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_130

Name: TMP_130 Function: getRewardAmount
Num: -990
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: liquidityDifference, Num: 1
Globalname: liquidityDifference
End popogation
TMP_131(uint256) = providedLiquidity_1 (c)- currentLiquidity_1
init
end
init
end
-990
-1
lnorm: 6 rnorm: u
init
end
_______________

Name: providedLiquidity Function: getRewardAmount
Num: -990
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_131 Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_131

Name: TMP_131 Function: getRewardAmount
Num: -990
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityDifference_1(uint256) := TMP_131(uint256)
asgn
init
end
_______________

Name: TMP_131 Function: getRewardAmount
Num: -990
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef

Name: liquidityDifference Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for liquidityDifference

Name: liquidityDifference Function: getRewardAmount
Num: -990
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
TMP_132(bool) = amount_1 >= liquidityDifference_1
init
end
init
end
lnorm: u rnorm: 6
[i]Type for TMP_132

Name: TMP_132 Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: rewardAmount, Num: 1
Globalname: rewardAmount
End popogation
REF_13(uint256) -> incentivePool_15[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_13

Name: incentivePool Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
rewardAmount_1(uint256) := REF_13(uint256)
asgn
init
end
_______________

Name: incentivePool Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: rewardAmount Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for rewardAmount

Name: rewardAmount Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: rewardAmount, Num: 2
Globalname: rewardAmount
End popogation
REF_14(uint256) -> incentivePool_15[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_14

Name: incentivePool Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_133(uint256) = amount_1 (c)* REF_14
testing mul...
init
end
init
end

Name: amount Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: incentivePool Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: incentivePool Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_133 Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_133

Name: TMP_133 Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_134(uint256) = TMP_133 (c)* 10000000000
testing mul...
init
end
init
end

Name: TMP_133 Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: 10000000000 Function: None
Num: -1
Den: -1
Address: u
Norm: 10
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: 10
init
end
_______________

Name: 10000000000 Function: None
Num: -1
Den: -1
Address: u
Norm: 10
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_134 Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: 10
LF: None
Value: 10000000000
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_134

Name: TMP_134 Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: 10
LF: None
Value: 10000000000
Fields: 
Finance Type: undef
XXXX
TMP_135(uint256) = TMP_134 (c)/ liquidityDifference_1
init
end
init
end
lnorm: 10 rnorm: 6
init
end
Source address: u
init
end
init
end
lnorm: 10 rnorm: 6
init
end
Source address: u
-1
-990
[i]Type for TMP_135

Name: TMP_135 Function: getRewardAmount
Num: -1
Den: -990
Address: u
Norm: 4
LF: None
Value: 10000000000
Fields: 
Finance Type: undef
XXXX
rewardAmount_2(uint256) := TMP_135(uint256)
asgn
init
end
_______________

Name: TMP_135 Function: getRewardAmount
Num: -1
Den: -990
Address: u
Norm: 4
LF: None
Value: 10000000000
Fields: 
Finance Type: undef

Name: rewardAmount Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10000000000
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for rewardAmount

Name: rewardAmount Function: getRewardAmount
Num: -1
Den: -990
Address: u
Norm: 4
LF: None
Value: 10000000000
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: rewardAmount, Num: 3
Globalname: rewardAmount
End popogation
TMP_136(uint256) = rewardAmount_2 (c)/ 10000000000
init
end
init
end
lnorm: 4 rnorm: 10
init
end
_______________

Name: rewardAmount Function: getRewardAmount
Num: -1
Den: -990
Address: u
Norm: 4
LF: None
Value: 10000000000
Fields: 
Finance Type: undef

Name: TMP_136 Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: -6
LF: None
Value: 1
Fields: 
Finance Type: undef
Source address: u
init
end
init
end
lnorm: 4 rnorm: 10
init
end
_______________

Name: rewardAmount Function: getRewardAmount
Num: -1
Den: -990
Address: u
Norm: 4
LF: None
Value: 10000000000
Fields: 
Finance Type: undef

Name: TMP_136 Function: getRewardAmount
Num: -1
Den: -990
Address: u
Norm: -6
LF: None
Value: 1
Fields: 
Finance Type: undef
-1
-990
[i]Type for TMP_136

Name: TMP_136 Function: getRewardAmount
Num: -1
Den: -990
Address: u
Norm: -6
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
rewardAmount_3(uint256) := TMP_136(uint256)
asgn
init
end
_______________

Name: TMP_136 Function: getRewardAmount
Num: -1
Den: -990
Address: u
Norm: -6
LF: None
Value: 1
Fields: 
Finance Type: undef

Name: rewardAmount Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for rewardAmount

Name: rewardAmount Function: getRewardAmount
Num: -1
Den: -990
Address: u
Norm: -6
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Source address: u

Name: amount_1 Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Source address: -990

Name: tokenAddress_1 Function: getRewardAmount
Num: 
Den: 
Address: -990
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getRewardAmount
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
amount_1(uint256) := ϕ(['amount_1', 'msg.value'])
Phi
[i]Type for amount

Name: amount Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tokenAddress_1(address) := ϕ(['NATIVE_5', 'tokenAddress_1'])
Phi
[i]Type for tokenAddress

Name: tokenAddress Function: getRewardAmount
Num: 
Den: 
Address: -990
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_15(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getRewardAmount
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_13(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_0'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: currentLiquidity, Num: 1
Globalname: currentLiquidity
End popogation

Name: liquidityProviders Function: getRewardAmount
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_128(uint256) = INTERNAL_CALL, LiquidityPool.getCurrentLiquidity(address)(tokenAddress_1)
init
end
[[], [], 6, 'tokenAddress', [], -1, -990, 'u']

Name: tokenAddress Function: getCurrentLiquidity
Num: 
Den: 
Address: -990
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
Source address: -990

Name: tokenAddress_1 Function: getCurrentLiquidity
Num: 
Den: 
Address: -990
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
tokenAddress_1(address) := ϕ(['tokenAddress_1', 'tokenAddress_1'])
Phi
[i]Type for tokenAddress

Name: tokenAddress Function: getCurrentLiquidity
Num: 
Den: 
Address: -990
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_3(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_1(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_0', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_1(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_0'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: liquidityPoolBalance, Num: 1
Globalname: liquidityPoolBalance
End popogation

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_99(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_3(ILiquidityProviders), function:getCurrentLiquidity, arguments:['tokenAddress_1']  
High Call: getCurrentLiquidity
Running querryfc
Written func info: LiquidityProviders, getCurrentLiquidity
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-990], [-1], 6, "'u'", 'u', -1)
[i]Type for TMP_99

Name: TMP_99 Function: getCurrentLiquidity
Num: -990
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
liquidityProviders_4(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_3', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_2(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_1', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_2(mapping(address => uint256)) := ϕ(['incentivePool_1', 'incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityPoolBalance_1(uint256) := TMP_99(uint256)
asgn
init
end
_______________

Name: TMP_99 Function: getCurrentLiquidity
Num: -990
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for liquidityPoolBalance

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: -990
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: currentLiquidity, Num: 1
Globalname: currentLiquidity
End popogation

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_100(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_4(ILiquidityProviders), function:totalLPFees, arguments:['tokenAddress_1']  
High Call: totalLPFees
Running querryfc
Written func info: LiquidityProviders, totalLPFees
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-990], [-1], 6, "'u'", 'u', -1)
[i]Type for TMP_100

Name: TMP_100 Function: getCurrentLiquidity
Num: -990
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
liquidityProviders_5(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_4', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_3(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_2', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_3(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_2', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_101(uint256) = liquidityPoolBalance_1 (c)- TMP_100
init
end
init
end
-990
-1
lnorm: 6 rnorm: 6
init
end
_______________

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: -990
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_101 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_101

Name: TMP_101 Function: getCurrentLiquidity
Num: -990
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_2(uint256) -> gasFeeAccumulatedByToken_3[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_2

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_102(uint256) = TMP_101 (c)- REF_2
init
end
init
end
init
end
_______________

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_102 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_102

Name: TMP_102 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_3(uint256) -> incentivePool_3[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_3

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_103(uint256) = TMP_102 (c)- REF_3
init
end
init
end
init
end
_______________

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_103 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_103

Name: TMP_103 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
currentLiquidity_1(uint256) := TMP_103(uint256)
asgn
init
end
_______________

Name: TMP_103 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: currentLiquidity Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for currentLiquidity

Name: currentLiquidity Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Source address: -990

Name: tokenAddress_1 Function: getCurrentLiquidity
Num: 
Den: 
Address: -990
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
tokenAddress_1(address) := ϕ(['tokenAddress_1', 'tokenAddress_1'])
Phi
[i]Type for tokenAddress

Name: tokenAddress Function: getCurrentLiquidity
Num: 
Den: 
Address: -990
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_3(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_1(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_0', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_1(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_0'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: liquidityPoolBalance, Num: 1
Globalname: liquidityPoolBalance
End popogation

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_99(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_3(ILiquidityProviders), function:getCurrentLiquidity, arguments:['tokenAddress_1']  
High Call: getCurrentLiquidity
Running querryfc
Written func info: LiquidityProviders, getCurrentLiquidity
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-990], [-1], 6, "'u'", 'u', -1)
[i]Type for TMP_99

Name: TMP_99 Function: getCurrentLiquidity
Num: -990
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
liquidityProviders_4(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_3', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_2(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_1', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_2(mapping(address => uint256)) := ϕ(['incentivePool_1', 'incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityPoolBalance_1(uint256) := TMP_99(uint256)
asgn
init
end
_______________

Name: TMP_99 Function: getCurrentLiquidity
Num: -990
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for liquidityPoolBalance

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: -990
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: currentLiquidity, Num: 1
Globalname: currentLiquidity
End popogation

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_100(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_4(ILiquidityProviders), function:totalLPFees, arguments:['tokenAddress_1']  
High Call: totalLPFees
Running querryfc
Written func info: LiquidityProviders, totalLPFees
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-990], [-1], 6, "'u'", 'u', -1)
[i]Type for TMP_100

Name: TMP_100 Function: getCurrentLiquidity
Num: -990
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
liquidityProviders_5(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_4', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_3(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_2', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_3(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_2', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_101(uint256) = liquidityPoolBalance_1 (c)- TMP_100
init
end
init
end
-990
-1
lnorm: 6 rnorm: 6
init
end
_______________

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: -990
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_101 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_101

Name: TMP_101 Function: getCurrentLiquidity
Num: -990
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_2(uint256) -> gasFeeAccumulatedByToken_3[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_2

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_102(uint256) = TMP_101 (c)- REF_2
init
end
init
end
init
end
_______________

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_102 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_102

Name: TMP_102 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_3(uint256) -> incentivePool_3[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_3

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_103(uint256) = TMP_102 (c)- REF_3
init
end
init
end
init
end
_______________

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_103 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_103

Name: TMP_103 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
currentLiquidity_1(uint256) := TMP_103(uint256)
asgn
init
end
_______________

Name: TMP_103 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: currentLiquidity Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for currentLiquidity

Name: currentLiquidity Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_128

Name: TMP_128 Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_16(ILiquidityProviders) := ϕ(['liquidityProviders_5'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getRewardAmount
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_14(mapping(address => uint256)) := ϕ(['incentivePool_3'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
currentLiquidity_1(uint256) := TMP_128(uint256)
asgn
init
end
_______________

Name: TMP_128 Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: currentLiquidity Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for currentLiquidity

Name: currentLiquidity Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: providedLiquidity, Num: 1
Globalname: providedLiquidity
End popogation

Name: liquidityProviders Function: getRewardAmount
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_129(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_16(ILiquidityProviders), function:getSuppliedLiquidityByToken, arguments:['tokenAddress_1']  
High Call: getSuppliedLiquidityByToken
Running querryfc
Written func info: LiquidityProviders, getSuppliedLiquidityByToken
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-990], [-1], 6, "'u'", 'u', -1)
[i]Type for TMP_129

Name: TMP_129 Function: getRewardAmount
Num: -990
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
liquidityProviders_17(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_16', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getRewardAmount
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_15(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_14', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
providedLiquidity_1(uint256) := TMP_129(uint256)
asgn
init
end
_______________

Name: TMP_129 Function: getRewardAmount
Num: -990
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: providedLiquidity Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for providedLiquidity

Name: providedLiquidity Function: getRewardAmount
Num: -990
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: currentLiquidity, Num: 1
Globalname: currentLiquidity
End popogation
TMP_130(bool) = currentLiquidity_1 < providedLiquidity_1
init
end
init
end
lnorm: u rnorm: 6
init
end
_______________

Name: providedLiquidity Function: getRewardAmount
Num: -990
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_130 Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
init
end
_______________

Name: providedLiquidity Function: getRewardAmount
Num: -990
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: currentLiquidity Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_130

Name: TMP_130 Function: getRewardAmount
Num: -990
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: liquidityDifference, Num: 1
Globalname: liquidityDifference
End popogation
TMP_131(uint256) = providedLiquidity_1 (c)- currentLiquidity_1
init
end
init
end
-990
-1
lnorm: 6 rnorm: u
init
end
_______________

Name: providedLiquidity Function: getRewardAmount
Num: -990
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_131 Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_131

Name: TMP_131 Function: getRewardAmount
Num: -990
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityDifference_1(uint256) := TMP_131(uint256)
asgn
init
end
_______________

Name: TMP_131 Function: getRewardAmount
Num: -990
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef

Name: liquidityDifference Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for liquidityDifference

Name: liquidityDifference Function: getRewardAmount
Num: -990
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
TMP_132(bool) = amount_1 >= liquidityDifference_1
init
end
init
end
lnorm: u rnorm: 6
[i]Type for TMP_132

Name: TMP_132 Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: rewardAmount, Num: 1
Globalname: rewardAmount
End popogation
REF_13(uint256) -> incentivePool_15[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_13

Name: incentivePool Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
rewardAmount_1(uint256) := REF_13(uint256)
asgn
init
end
_______________

Name: incentivePool Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: rewardAmount Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for rewardAmount

Name: rewardAmount Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: rewardAmount, Num: 2
Globalname: rewardAmount
End popogation
REF_14(uint256) -> incentivePool_15[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_14

Name: incentivePool Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_133(uint256) = amount_1 (c)* REF_14
testing mul...
init
end
init
end

Name: amount Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: incentivePool Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: incentivePool Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_133 Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_133

Name: TMP_133 Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_134(uint256) = TMP_133 (c)* 10000000000
testing mul...
init
end
init
end

Name: TMP_133 Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: 10000000000 Function: None
Num: -1
Den: -1
Address: u
Norm: 10
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: 10
init
end
_______________

Name: 10000000000 Function: None
Num: -1
Den: -1
Address: u
Norm: 10
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_134 Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: 10
LF: None
Value: 10000000000
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_134

Name: TMP_134 Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: 10
LF: None
Value: 10000000000
Fields: 
Finance Type: undef
XXXX
TMP_135(uint256) = TMP_134 (c)/ liquidityDifference_1
init
end
init
end
lnorm: 10 rnorm: 6
init
end
Source address: u
init
end
init
end
lnorm: 10 rnorm: 6
init
end
Source address: u
-1
-990
[i]Type for TMP_135

Name: TMP_135 Function: getRewardAmount
Num: -1
Den: -990
Address: u
Norm: 4
LF: None
Value: 10000000000
Fields: 
Finance Type: undef
XXXX
rewardAmount_2(uint256) := TMP_135(uint256)
asgn
init
end
_______________

Name: TMP_135 Function: getRewardAmount
Num: -1
Den: -990
Address: u
Norm: 4
LF: None
Value: 10000000000
Fields: 
Finance Type: undef

Name: rewardAmount Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10000000000
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for rewardAmount

Name: rewardAmount Function: getRewardAmount
Num: -1
Den: -990
Address: u
Norm: 4
LF: None
Value: 10000000000
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: rewardAmount, Num: 3
Globalname: rewardAmount
End popogation
TMP_136(uint256) = rewardAmount_2 (c)/ 10000000000
init
end
init
end
lnorm: 4 rnorm: 10
init
end
_______________

Name: rewardAmount Function: getRewardAmount
Num: -1
Den: -990
Address: u
Norm: 4
LF: None
Value: 10000000000
Fields: 
Finance Type: undef

Name: TMP_136 Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: -6
LF: None
Value: 1
Fields: 
Finance Type: undef
Source address: u
init
end
init
end
lnorm: 4 rnorm: 10
init
end
_______________

Name: rewardAmount Function: getRewardAmount
Num: -1
Den: -990
Address: u
Norm: 4
LF: None
Value: 10000000000
Fields: 
Finance Type: undef

Name: TMP_136 Function: getRewardAmount
Num: -1
Den: -990
Address: u
Norm: -6
LF: None
Value: 1
Fields: 
Finance Type: undef
-1
-990
[i]Type for TMP_136

Name: TMP_136 Function: getRewardAmount
Num: -1
Den: -990
Address: u
Norm: -6
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
rewardAmount_3(uint256) := TMP_136(uint256)
asgn
init
end
_______________

Name: TMP_136 Function: getRewardAmount
Num: -1
Den: -990
Address: u
Norm: -6
LF: None
Value: 1
Fields: 
Finance Type: undef

Name: rewardAmount Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for rewardAmount

Name: rewardAmount Function: getRewardAmount
Num: -1
Den: -990
Address: u
Norm: -6
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_116

Name: TMP_116 Function: depositErc20
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_13(ILiquidityProviders) := ϕ(['liquidityProviders_17'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: depositErc20
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_11(mapping(address => uint256)) := ϕ(['incentivePool_15'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: depositErc20
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
rewardAmount_1(uint256) := TMP_116(uint256)
asgn
init
end
_______________

Name: TMP_116 Function: depositErc20
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: rewardAmount Function: depositErc20
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for rewardAmount

Name: rewardAmount Function: depositErc20
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: rewardAmount, Num: 1
Globalname: rewardAmount
End popogation
TMP_117(bool) = rewardAmount_1 != 0
[i]Type for TMP_117

Name: TMP_117 Function: depositErc20
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation

Name: liquidityProviders Function: depositErc20
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid
HIGH_LEVEL_CALL, dest:liquidityProviders_13(ILiquidityProviders), function:increaseCurrentLiquidity, arguments:['tokenAddress_1', 'amount_1']  
High Call: increaseCurrentLiquidity
liquidityProviders_14(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_13', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: depositErc20
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: rewardAmount, Num: 1
Globalname: rewardAmount
End popogation

Name: incentivePool Function: depositErc20
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
REF_8(uint256) -> incentivePool_11[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_8

Name: incentivePool Function: depositErc20
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_9(uint256) -> incentivePool_11[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_9

Name: incentivePool Function: depositErc20
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_118(uint256) = REF_9 (c)- rewardAmount_1
init
end
init
end
init
end
_______________

Name: incentivePool Function: depositErc20
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_118 Function: depositErc20
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_118

Name: TMP_118 Function: depositErc20
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_12(mapping(address => uint256)) := ϕ(['incentivePool_11'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: depositErc20
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_8 (->incentivePool_12) := TMP_118(uint256)
asgn
init
end
_______________

Name: TMP_118 Function: depositErc20
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: REF_8 Function: depositErc20
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_8

Name: REF_8 Function: depositErc20
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
Source address: u
Propogating parameters and globals to SSA variables...
End popogation
TMP_120 = CONVERT tokenAddress_1 to IERC20Upgradeable
Converting tokenAddress_1

Name: tokenAddress Function: depositErc20
Num: 
Den: 
Address: -990
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
init
end
_______________

Name: tokenAddress Function: depositErc20
Num: 
Den: 
Address: -990
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef

Name: TMP_120 Function: depositErc20
Num: 
Den: 
Address: u
Norm: u
LF: ERC20Upgradeable
Value: u
Fields: 
Finance Type: undef
Source address: -990
ERC20Upgradeable
[i]Type for TMP_120

Name: TMP_120 Function: depositErc20
Num: 
Den: 
Address: -990
Norm: 6
LF: ERC20Upgradeable
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_121 = CONVERT this to address
Converting this
5
[i]Type for TMP_121

Name: TMP_121 Function: depositErc20
Num: 
Den: 
Address: 5
Norm: u
LF: LiquidityPool
Value: u
Fields: 
Finance Type: undef
XXXX
LIBRARY_CALL, dest:SafeERC20Upgradeable, function:SafeERC20Upgradeable.safeTransferFrom(IERC20Upgradeable,address,address,uint256), arguments:['TMP_120', 'sender_1', 'TMP_121', 'amount_1'] 
Propogating parameters and globals to SSA variables...
Source address: u
Name: tag, Num: 1
Globalname: tag
Source address: u
Name: toChainId, Num: 1
Globalname: toChainId
Name: rewardAmount, Num: 1
Globalname: rewardAmount
End popogation
TMP_123(uint256) = amount_1 (c)+ rewardAmount_1
init
end
init
end
init
end
_______________

Name: amount_1 Function: depositErc20
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_123 Function: depositErc20
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_123

Name: TMP_123 Function: depositErc20
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX



getRewardAmount
Finding type for amount(uint256 ... )
Finding type for tokenAddress(address ... )
prev address? -990
Head Addr: -990
    Norm: 6
    Set: {-990}
    Fin: NULL
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: []
    den: []
    norm: 6
    link: tokenAddress
    fields: []
    fintype: -1


amount_1(uint256) := ϕ(['amount_1', 'msg.value'])
tokenAddress_1(address) := ϕ(['NATIVE_5', 'tokenAddress_1'])
liquidityProviders_15(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
incentivePool_13(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_0'])
TMP_128(uint256) = INTERNAL_CALL, LiquidityPool.getCurrentLiquidity(address)(tokenAddress_1)
liquidityProviders_16(ILiquidityProviders) := ϕ(['liquidityProviders_5'])
incentivePool_14(mapping(address => uint256)) := ϕ(['incentivePool_3'])
currentLiquidity_1(uint256) := TMP_128(uint256)
TMP_129(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_16(ILiquidityProviders), function:getSuppliedLiquidityByToken, arguments:['tokenAddress_1']  
liquidityProviders_17(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_16', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
incentivePool_15(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_14', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21'])
providedLiquidity_1(uint256) := TMP_129(uint256)
TMP_130(bool) = currentLiquidity_1 < providedLiquidity_1
CONDITION TMP_130
TMP_131(uint256) = providedLiquidity_1 (c)- currentLiquidity_1
liquidityDifference_1(uint256) := TMP_131(uint256)
TMP_132(bool) = amount_1 >= liquidityDifference_1
CONDITION TMP_132
REF_13(uint256) -> incentivePool_15[tokenAddress_1]
rewardAmount_1(uint256) := REF_13(uint256)
REF_14(uint256) -> incentivePool_15[tokenAddress_1]
TMP_133(uint256) = amount_1 (c)* REF_14
TMP_134(uint256) = TMP_133 (c)* 10000000000
TMP_135(uint256) = TMP_134 (c)/ liquidityDifference_1
rewardAmount_2(uint256) := TMP_135(uint256)
TMP_136(uint256) = rewardAmount_2 (c)/ 10000000000
rewardAmount_3(uint256) := TMP_136(uint256)


Propogating parameters and globals to SSA variables...
End popogation
Source address: u
Name: amount, Num: 1
Globalname: amount

Name: amount_1 Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Source address: -990

Name: tokenAddress_1 Function: getRewardAmount
Num: 
Den: 
Address: -990
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getRewardAmount
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
amount_1(uint256) := ϕ(['amount_1', 'msg.value'])
Phi

Name: amount_1 Function: depositErc20
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: msg.value Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
init
end
_______________

Name: amount_1 Function: depositErc20
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for amount

Name: amount Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tokenAddress_1(address) := ϕ(['NATIVE_5', 'tokenAddress_1'])
Phi
[i]Type for tokenAddress

Name: tokenAddress Function: getRewardAmount
Num: 
Den: 
Address: -990
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_15(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getRewardAmount
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_13(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_0'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: currentLiquidity, Num: 1
Globalname: currentLiquidity
End popogation

Name: liquidityProviders Function: getRewardAmount
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_128(uint256) = INTERNAL_CALL, LiquidityPool.getCurrentLiquidity(address)(tokenAddress_1)
init
end
[[], [], 6, 'tokenAddress', [], -1, -990, 'u']

Name: tokenAddress Function: getCurrentLiquidity
Num: 
Den: 
Address: -990
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
Source address: -990

Name: tokenAddress_1 Function: getCurrentLiquidity
Num: 
Den: 
Address: -990
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
tokenAddress_1(address) := ϕ(['tokenAddress_1', 'tokenAddress_1'])
Phi
[i]Type for tokenAddress

Name: tokenAddress Function: getCurrentLiquidity
Num: 
Den: 
Address: -990
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_3(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_1(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_0', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_1(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_0'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: liquidityPoolBalance, Num: 1
Globalname: liquidityPoolBalance
End popogation

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_99(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_3(ILiquidityProviders), function:getCurrentLiquidity, arguments:['tokenAddress_1']  
High Call: getCurrentLiquidity
Running querryfc
Written func info: LiquidityProviders, getCurrentLiquidity
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-990], [-1], 6, "'u'", 'u', -1)
[i]Type for TMP_99

Name: TMP_99 Function: getCurrentLiquidity
Num: -990
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
liquidityProviders_4(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_3', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_2(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_1', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_2(mapping(address => uint256)) := ϕ(['incentivePool_1', 'incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityPoolBalance_1(uint256) := TMP_99(uint256)
asgn
init
end
_______________

Name: TMP_99 Function: getCurrentLiquidity
Num: -990
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for liquidityPoolBalance

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: -990
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: currentLiquidity, Num: 1
Globalname: currentLiquidity
End popogation

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_100(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_4(ILiquidityProviders), function:totalLPFees, arguments:['tokenAddress_1']  
High Call: totalLPFees
Running querryfc
Written func info: LiquidityProviders, totalLPFees
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-990], [-1], 6, "'u'", 'u', -1)
[i]Type for TMP_100

Name: TMP_100 Function: getCurrentLiquidity
Num: -990
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
liquidityProviders_5(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_4', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_3(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_2', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_3(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_2', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_101(uint256) = liquidityPoolBalance_1 (c)- TMP_100
init
end
init
end
-990
-1
lnorm: 6 rnorm: 6
init
end
_______________

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: -990
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_101 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_101

Name: TMP_101 Function: getCurrentLiquidity
Num: -990
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_2(uint256) -> gasFeeAccumulatedByToken_3[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_2

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_102(uint256) = TMP_101 (c)- REF_2
init
end
init
end
init
end
_______________

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_102 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_102

Name: TMP_102 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_3(uint256) -> incentivePool_3[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_3

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_103(uint256) = TMP_102 (c)- REF_3
init
end
init
end
init
end
_______________

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_103 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_103

Name: TMP_103 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
currentLiquidity_1(uint256) := TMP_103(uint256)
asgn
init
end
_______________

Name: TMP_103 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: currentLiquidity Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for currentLiquidity

Name: currentLiquidity Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Source address: -990

Name: tokenAddress_1 Function: getCurrentLiquidity
Num: 
Den: 
Address: -990
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
tokenAddress_1(address) := ϕ(['tokenAddress_1', 'tokenAddress_1'])
Phi
[i]Type for tokenAddress

Name: tokenAddress Function: getCurrentLiquidity
Num: 
Den: 
Address: -990
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_3(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_1(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_0', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_1(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_0'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: liquidityPoolBalance, Num: 1
Globalname: liquidityPoolBalance
End popogation

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_99(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_3(ILiquidityProviders), function:getCurrentLiquidity, arguments:['tokenAddress_1']  
High Call: getCurrentLiquidity
Running querryfc
Written func info: LiquidityProviders, getCurrentLiquidity
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-990], [-1], 6, "'u'", 'u', -1)
[i]Type for TMP_99

Name: TMP_99 Function: getCurrentLiquidity
Num: -990
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
liquidityProviders_4(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_3', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_2(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_1', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_2(mapping(address => uint256)) := ϕ(['incentivePool_1', 'incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityPoolBalance_1(uint256) := TMP_99(uint256)
asgn
init
end
_______________

Name: TMP_99 Function: getCurrentLiquidity
Num: -990
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for liquidityPoolBalance

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: -990
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: currentLiquidity, Num: 1
Globalname: currentLiquidity
End popogation

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_100(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_4(ILiquidityProviders), function:totalLPFees, arguments:['tokenAddress_1']  
High Call: totalLPFees
Running querryfc
Written func info: LiquidityProviders, totalLPFees
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-990], [-1], 6, "'u'", 'u', -1)
[i]Type for TMP_100

Name: TMP_100 Function: getCurrentLiquidity
Num: -990
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
liquidityProviders_5(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_4', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_3(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_2', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_3(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_2', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_101(uint256) = liquidityPoolBalance_1 (c)- TMP_100
init
end
init
end
-990
-1
lnorm: 6 rnorm: 6
init
end
_______________

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: -990
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_101 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_101

Name: TMP_101 Function: getCurrentLiquidity
Num: -990
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_2(uint256) -> gasFeeAccumulatedByToken_3[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_2

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_102(uint256) = TMP_101 (c)- REF_2
init
end
init
end
init
end
_______________

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_102 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_102

Name: TMP_102 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_3(uint256) -> incentivePool_3[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_3

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_103(uint256) = TMP_102 (c)- REF_3
init
end
init
end
init
end
_______________

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_103 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_103

Name: TMP_103 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
currentLiquidity_1(uint256) := TMP_103(uint256)
asgn
init
end
_______________

Name: TMP_103 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: currentLiquidity Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for currentLiquidity

Name: currentLiquidity Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_128

Name: TMP_128 Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_16(ILiquidityProviders) := ϕ(['liquidityProviders_5'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getRewardAmount
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_14(mapping(address => uint256)) := ϕ(['incentivePool_3'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
currentLiquidity_1(uint256) := TMP_128(uint256)
asgn
init
end
_______________

Name: TMP_128 Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: currentLiquidity Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for currentLiquidity

Name: currentLiquidity Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: providedLiquidity, Num: 1
Globalname: providedLiquidity
End popogation

Name: liquidityProviders Function: getRewardAmount
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_129(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_16(ILiquidityProviders), function:getSuppliedLiquidityByToken, arguments:['tokenAddress_1']  
High Call: getSuppliedLiquidityByToken
Running querryfc
Written func info: LiquidityProviders, getSuppliedLiquidityByToken
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-990], [-1], 6, "'u'", 'u', -1)
[i]Type for TMP_129

Name: TMP_129 Function: getRewardAmount
Num: -990
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
liquidityProviders_17(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_16', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getRewardAmount
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_15(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_14', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
providedLiquidity_1(uint256) := TMP_129(uint256)
asgn
init
end
_______________

Name: TMP_129 Function: getRewardAmount
Num: -990
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: providedLiquidity Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for providedLiquidity

Name: providedLiquidity Function: getRewardAmount
Num: -990
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: currentLiquidity, Num: 1
Globalname: currentLiquidity
End popogation
TMP_130(bool) = currentLiquidity_1 < providedLiquidity_1
init
end
init
end
lnorm: u rnorm: 6
init
end
_______________

Name: providedLiquidity Function: getRewardAmount
Num: -990
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_130 Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
init
end
_______________

Name: providedLiquidity Function: getRewardAmount
Num: -990
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: currentLiquidity Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_130

Name: TMP_130 Function: getRewardAmount
Num: -990
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: liquidityDifference, Num: 1
Globalname: liquidityDifference
End popogation
TMP_131(uint256) = providedLiquidity_1 (c)- currentLiquidity_1
init
end
init
end
-990
-1
lnorm: 6 rnorm: u
init
end
_______________

Name: providedLiquidity Function: getRewardAmount
Num: -990
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_131 Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_131

Name: TMP_131 Function: getRewardAmount
Num: -990
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityDifference_1(uint256) := TMP_131(uint256)
asgn
init
end
_______________

Name: TMP_131 Function: getRewardAmount
Num: -990
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef

Name: liquidityDifference Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for liquidityDifference

Name: liquidityDifference Function: getRewardAmount
Num: -990
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
TMP_132(bool) = amount_1 >= liquidityDifference_1
init
end
init
end
lnorm: u rnorm: 6
[i]Type for TMP_132

Name: TMP_132 Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: rewardAmount, Num: 1
Globalname: rewardAmount
End popogation
REF_13(uint256) -> incentivePool_15[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_13

Name: incentivePool Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
rewardAmount_1(uint256) := REF_13(uint256)
asgn
init
end
_______________

Name: incentivePool Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: rewardAmount Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for rewardAmount

Name: rewardAmount Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: rewardAmount, Num: 2
Globalname: rewardAmount
End popogation
REF_14(uint256) -> incentivePool_15[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_14

Name: incentivePool Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_133(uint256) = amount_1 (c)* REF_14
testing mul...
init
end
init
end

Name: amount Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: incentivePool Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: incentivePool Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_133 Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_133

Name: TMP_133 Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_134(uint256) = TMP_133 (c)* 10000000000
testing mul...
init
end
init
end

Name: TMP_133 Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: 10000000000 Function: None
Num: -1
Den: -1
Address: u
Norm: 10
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: 10
init
end
_______________

Name: 10000000000 Function: None
Num: -1
Den: -1
Address: u
Norm: 10
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_134 Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: 10
LF: None
Value: 10000000000
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_134

Name: TMP_134 Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: 10
LF: None
Value: 10000000000
Fields: 
Finance Type: undef
XXXX
TMP_135(uint256) = TMP_134 (c)/ liquidityDifference_1
init
end
init
end
lnorm: 10 rnorm: 6
init
end
Source address: u
init
end
init
end
lnorm: 10 rnorm: 6
init
end
Source address: u
-1
-990
[i]Type for TMP_135

Name: TMP_135 Function: getRewardAmount
Num: -1
Den: -990
Address: u
Norm: 4
LF: None
Value: 10000000000
Fields: 
Finance Type: undef
XXXX
rewardAmount_2(uint256) := TMP_135(uint256)
asgn
init
end
_______________

Name: TMP_135 Function: getRewardAmount
Num: -1
Den: -990
Address: u
Norm: 4
LF: None
Value: 10000000000
Fields: 
Finance Type: undef

Name: rewardAmount Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10000000000
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for rewardAmount

Name: rewardAmount Function: getRewardAmount
Num: -1
Den: -990
Address: u
Norm: 4
LF: None
Value: 10000000000
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: rewardAmount, Num: 3
Globalname: rewardAmount
End popogation
TMP_136(uint256) = rewardAmount_2 (c)/ 10000000000
init
end
init
end
lnorm: 4 rnorm: 10
init
end
_______________

Name: rewardAmount Function: getRewardAmount
Num: -1
Den: -990
Address: u
Norm: 4
LF: None
Value: 10000000000
Fields: 
Finance Type: undef

Name: TMP_136 Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: -6
LF: None
Value: 1
Fields: 
Finance Type: undef
Source address: u
init
end
init
end
lnorm: 4 rnorm: 10
init
end
_______________

Name: rewardAmount Function: getRewardAmount
Num: -1
Den: -990
Address: u
Norm: 4
LF: None
Value: 10000000000
Fields: 
Finance Type: undef

Name: TMP_136 Function: getRewardAmount
Num: -1
Den: -990
Address: u
Norm: -6
LF: None
Value: 1
Fields: 
Finance Type: undef
-1
-990
[i]Type for TMP_136

Name: TMP_136 Function: getRewardAmount
Num: -1
Den: -990
Address: u
Norm: -6
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
rewardAmount_3(uint256) := TMP_136(uint256)
asgn
init
end
_______________

Name: TMP_136 Function: getRewardAmount
Num: -1
Den: -990
Address: u
Norm: -6
LF: None
Value: 1
Fields: 
Finance Type: undef

Name: rewardAmount Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for rewardAmount

Name: rewardAmount Function: getRewardAmount
Num: -1
Den: -990
Address: u
Norm: -6
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX


amount_1(uint256) := ϕ(['amount_1', 'msg.value'])
tokenAddress_1(address) := ϕ(['NATIVE_5', 'tokenAddress_1'])
liquidityProviders_15(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
incentivePool_13(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_0'])
TMP_128(uint256) = INTERNAL_CALL, LiquidityPool.getCurrentLiquidity(address)(tokenAddress_1)
liquidityProviders_16(ILiquidityProviders) := ϕ(['liquidityProviders_5'])
incentivePool_14(mapping(address => uint256)) := ϕ(['incentivePool_3'])
currentLiquidity_1(uint256) := TMP_128(uint256)
TMP_129(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_16(ILiquidityProviders), function:getSuppliedLiquidityByToken, arguments:['tokenAddress_1']  
liquidityProviders_17(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_16', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
incentivePool_15(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_14', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21'])
providedLiquidity_1(uint256) := TMP_129(uint256)
TMP_130(bool) = currentLiquidity_1 < providedLiquidity_1
CONDITION TMP_130
TMP_131(uint256) = providedLiquidity_1 (c)- currentLiquidity_1
liquidityDifference_1(uint256) := TMP_131(uint256)
TMP_132(bool) = amount_1 >= liquidityDifference_1
CONDITION TMP_132
REF_13(uint256) -> incentivePool_15[tokenAddress_1]
rewardAmount_1(uint256) := REF_13(uint256)
REF_14(uint256) -> incentivePool_15[tokenAddress_1]
TMP_133(uint256) = amount_1 (c)* REF_14
TMP_134(uint256) = TMP_133 (c)* 10000000000
TMP_135(uint256) = TMP_134 (c)/ liquidityDifference_1
rewardAmount_2(uint256) := TMP_135(uint256)
TMP_136(uint256) = rewardAmount_2 (c)/ 10000000000
rewardAmount_3(uint256) := TMP_136(uint256)


Propogating parameters and globals to SSA variables...
End popogation
Source address: u
Name: amount, Num: 1
Globalname: amount

Name: amount_1 Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Source address: -990

Name: tokenAddress_1 Function: getRewardAmount
Num: 
Den: 
Address: -990
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getRewardAmount
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
amount_1(uint256) := ϕ(['amount_1', 'msg.value'])
Phi

Name: amount_1 Function: depositErc20
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: msg.value Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
init
end
_______________

Name: amount_1 Function: depositErc20
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for amount

Name: amount Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tokenAddress_1(address) := ϕ(['NATIVE_5', 'tokenAddress_1'])
Phi
[i]Type for tokenAddress

Name: tokenAddress Function: getRewardAmount
Num: 
Den: 
Address: -990
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_15(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getRewardAmount
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_13(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_0'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: currentLiquidity, Num: 1
Globalname: currentLiquidity
End popogation

Name: liquidityProviders Function: getRewardAmount
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_128(uint256) = INTERNAL_CALL, LiquidityPool.getCurrentLiquidity(address)(tokenAddress_1)
init
end
[[], [], 6, 'tokenAddress', [], -1, -990, 'u']

Name: tokenAddress Function: getCurrentLiquidity
Num: 
Den: 
Address: -990
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
Source address: -990

Name: tokenAddress_1 Function: getCurrentLiquidity
Num: 
Den: 
Address: -990
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
tokenAddress_1(address) := ϕ(['tokenAddress_1', 'tokenAddress_1'])
Phi
[i]Type for tokenAddress

Name: tokenAddress Function: getCurrentLiquidity
Num: 
Den: 
Address: -990
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_3(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_1(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_0', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_1(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_0'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: liquidityPoolBalance, Num: 1
Globalname: liquidityPoolBalance
End popogation

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_99(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_3(ILiquidityProviders), function:getCurrentLiquidity, arguments:['tokenAddress_1']  
High Call: getCurrentLiquidity
Running querryfc
Written func info: LiquidityProviders, getCurrentLiquidity
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-990], [-1], 6, "'u'", 'u', -1)
[i]Type for TMP_99

Name: TMP_99 Function: getCurrentLiquidity
Num: -990
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
liquidityProviders_4(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_3', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_2(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_1', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_2(mapping(address => uint256)) := ϕ(['incentivePool_1', 'incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityPoolBalance_1(uint256) := TMP_99(uint256)
asgn
init
end
_______________

Name: TMP_99 Function: getCurrentLiquidity
Num: -990
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for liquidityPoolBalance

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: -990
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: currentLiquidity, Num: 1
Globalname: currentLiquidity
End popogation

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_100(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_4(ILiquidityProviders), function:totalLPFees, arguments:['tokenAddress_1']  
High Call: totalLPFees
Running querryfc
Written func info: LiquidityProviders, totalLPFees
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-990], [-1], 6, "'u'", 'u', -1)
[i]Type for TMP_100

Name: TMP_100 Function: getCurrentLiquidity
Num: -990
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
liquidityProviders_5(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_4', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_3(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_2', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_3(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_2', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_101(uint256) = liquidityPoolBalance_1 (c)- TMP_100
init
end
init
end
-990
-1
lnorm: 6 rnorm: 6
init
end
_______________

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: -990
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_101 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_101

Name: TMP_101 Function: getCurrentLiquidity
Num: -990
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_2(uint256) -> gasFeeAccumulatedByToken_3[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_2

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_102(uint256) = TMP_101 (c)- REF_2
init
end
init
end
init
end
_______________

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_102 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_102

Name: TMP_102 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_3(uint256) -> incentivePool_3[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_3

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_103(uint256) = TMP_102 (c)- REF_3
init
end
init
end
init
end
_______________

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_103 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_103

Name: TMP_103 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
currentLiquidity_1(uint256) := TMP_103(uint256)
asgn
init
end
_______________

Name: TMP_103 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: currentLiquidity Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for currentLiquidity

Name: currentLiquidity Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Source address: -990

Name: tokenAddress_1 Function: getCurrentLiquidity
Num: 
Den: 
Address: -990
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
tokenAddress_1(address) := ϕ(['tokenAddress_1', 'tokenAddress_1'])
Phi
[i]Type for tokenAddress

Name: tokenAddress Function: getCurrentLiquidity
Num: 
Den: 
Address: -990
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_3(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_1(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_0', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_1(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_0'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: liquidityPoolBalance, Num: 1
Globalname: liquidityPoolBalance
End popogation

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_99(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_3(ILiquidityProviders), function:getCurrentLiquidity, arguments:['tokenAddress_1']  
High Call: getCurrentLiquidity
Running querryfc
Written func info: LiquidityProviders, getCurrentLiquidity
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-990], [-1], 6, "'u'", 'u', -1)
[i]Type for TMP_99

Name: TMP_99 Function: getCurrentLiquidity
Num: -990
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
liquidityProviders_4(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_3', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_2(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_1', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_2(mapping(address => uint256)) := ϕ(['incentivePool_1', 'incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityPoolBalance_1(uint256) := TMP_99(uint256)
asgn
init
end
_______________

Name: TMP_99 Function: getCurrentLiquidity
Num: -990
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for liquidityPoolBalance

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: -990
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: currentLiquidity, Num: 1
Globalname: currentLiquidity
End popogation

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_100(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_4(ILiquidityProviders), function:totalLPFees, arguments:['tokenAddress_1']  
High Call: totalLPFees
Running querryfc
Written func info: LiquidityProviders, totalLPFees
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-990], [-1], 6, "'u'", 'u', -1)
[i]Type for TMP_100

Name: TMP_100 Function: getCurrentLiquidity
Num: -990
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
liquidityProviders_5(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_4', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_3(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_2', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_3(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_2', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_101(uint256) = liquidityPoolBalance_1 (c)- TMP_100
init
end
init
end
-990
-1
lnorm: 6 rnorm: 6
init
end
_______________

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: -990
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_101 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_101

Name: TMP_101 Function: getCurrentLiquidity
Num: -990
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_2(uint256) -> gasFeeAccumulatedByToken_3[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_2

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_102(uint256) = TMP_101 (c)- REF_2
init
end
init
end
init
end
_______________

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_102 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_102

Name: TMP_102 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_3(uint256) -> incentivePool_3[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_3

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_103(uint256) = TMP_102 (c)- REF_3
init
end
init
end
init
end
_______________

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_103 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_103

Name: TMP_103 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
currentLiquidity_1(uint256) := TMP_103(uint256)
asgn
init
end
_______________

Name: TMP_103 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: currentLiquidity Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for currentLiquidity

Name: currentLiquidity Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_128

Name: TMP_128 Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_16(ILiquidityProviders) := ϕ(['liquidityProviders_5'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getRewardAmount
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_14(mapping(address => uint256)) := ϕ(['incentivePool_3'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
currentLiquidity_1(uint256) := TMP_128(uint256)
asgn
init
end
_______________

Name: TMP_128 Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: currentLiquidity Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for currentLiquidity

Name: currentLiquidity Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: providedLiquidity, Num: 1
Globalname: providedLiquidity
End popogation

Name: liquidityProviders Function: getRewardAmount
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_129(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_16(ILiquidityProviders), function:getSuppliedLiquidityByToken, arguments:['tokenAddress_1']  
High Call: getSuppliedLiquidityByToken
Running querryfc
Written func info: LiquidityProviders, getSuppliedLiquidityByToken
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-990], [-1], 6, "'u'", 'u', -1)
[i]Type for TMP_129

Name: TMP_129 Function: getRewardAmount
Num: -990
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
liquidityProviders_17(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_16', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getRewardAmount
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_15(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_14', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
providedLiquidity_1(uint256) := TMP_129(uint256)
asgn
init
end
_______________

Name: TMP_129 Function: getRewardAmount
Num: -990
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: providedLiquidity Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for providedLiquidity

Name: providedLiquidity Function: getRewardAmount
Num: -990
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: currentLiquidity, Num: 1
Globalname: currentLiquidity
End popogation
TMP_130(bool) = currentLiquidity_1 < providedLiquidity_1
init
end
init
end
lnorm: u rnorm: 6
init
end
_______________

Name: providedLiquidity Function: getRewardAmount
Num: -990
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_130 Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
init
end
_______________

Name: providedLiquidity Function: getRewardAmount
Num: -990
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: currentLiquidity Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_130

Name: TMP_130 Function: getRewardAmount
Num: -990
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: liquidityDifference, Num: 1
Globalname: liquidityDifference
End popogation
TMP_131(uint256) = providedLiquidity_1 (c)- currentLiquidity_1
init
end
init
end
-990
-1
lnorm: 6 rnorm: u
init
end
_______________

Name: providedLiquidity Function: getRewardAmount
Num: -990
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_131 Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_131

Name: TMP_131 Function: getRewardAmount
Num: -990
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityDifference_1(uint256) := TMP_131(uint256)
asgn
init
end
_______________

Name: TMP_131 Function: getRewardAmount
Num: -990
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef

Name: liquidityDifference Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for liquidityDifference

Name: liquidityDifference Function: getRewardAmount
Num: -990
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
TMP_132(bool) = amount_1 >= liquidityDifference_1
init
end
init
end
lnorm: u rnorm: 6
[i]Type for TMP_132

Name: TMP_132 Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: rewardAmount, Num: 1
Globalname: rewardAmount
End popogation
REF_13(uint256) -> incentivePool_15[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_13

Name: incentivePool Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
rewardAmount_1(uint256) := REF_13(uint256)
asgn
init
end
_______________

Name: incentivePool Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: rewardAmount Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for rewardAmount

Name: rewardAmount Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: rewardAmount, Num: 2
Globalname: rewardAmount
End popogation
REF_14(uint256) -> incentivePool_15[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_14

Name: incentivePool Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_133(uint256) = amount_1 (c)* REF_14
testing mul...
init
end
init
end

Name: amount Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: incentivePool Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: incentivePool Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_133 Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_133

Name: TMP_133 Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_134(uint256) = TMP_133 (c)* 10000000000
testing mul...
init
end
init
end

Name: TMP_133 Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: 10000000000 Function: None
Num: -1
Den: -1
Address: u
Norm: 10
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: 10
init
end
_______________

Name: 10000000000 Function: None
Num: -1
Den: -1
Address: u
Norm: 10
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_134 Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: 10
LF: None
Value: 10000000000
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_134

Name: TMP_134 Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: 10
LF: None
Value: 10000000000
Fields: 
Finance Type: undef
XXXX
TMP_135(uint256) = TMP_134 (c)/ liquidityDifference_1
init
end
init
end
lnorm: 10 rnorm: 6
init
end
Source address: u
init
end
init
end
lnorm: 10 rnorm: 6
init
end
Source address: u
-1
-990
[i]Type for TMP_135

Name: TMP_135 Function: getRewardAmount
Num: -1
Den: -990
Address: u
Norm: 4
LF: None
Value: 10000000000
Fields: 
Finance Type: undef
XXXX
rewardAmount_2(uint256) := TMP_135(uint256)
asgn
init
end
_______________

Name: TMP_135 Function: getRewardAmount
Num: -1
Den: -990
Address: u
Norm: 4
LF: None
Value: 10000000000
Fields: 
Finance Type: undef

Name: rewardAmount Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10000000000
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for rewardAmount

Name: rewardAmount Function: getRewardAmount
Num: -1
Den: -990
Address: u
Norm: 4
LF: None
Value: 10000000000
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: rewardAmount, Num: 3
Globalname: rewardAmount
End popogation
TMP_136(uint256) = rewardAmount_2 (c)/ 10000000000
init
end
init
end
lnorm: 4 rnorm: 10
init
end
_______________

Name: rewardAmount Function: getRewardAmount
Num: -1
Den: -990
Address: u
Norm: 4
LF: None
Value: 10000000000
Fields: 
Finance Type: undef

Name: TMP_136 Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: -6
LF: None
Value: 1
Fields: 
Finance Type: undef
Source address: u
init
end
init
end
lnorm: 4 rnorm: 10
init
end
_______________

Name: rewardAmount Function: getRewardAmount
Num: -1
Den: -990
Address: u
Norm: 4
LF: None
Value: 10000000000
Fields: 
Finance Type: undef

Name: TMP_136 Function: getRewardAmount
Num: -1
Den: -990
Address: u
Norm: -6
LF: None
Value: 1
Fields: 
Finance Type: undef
-1
-990
[i]Type for TMP_136

Name: TMP_136 Function: getRewardAmount
Num: -1
Den: -990
Address: u
Norm: -6
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
rewardAmount_3(uint256) := TMP_136(uint256)
asgn
init
end
_______________

Name: TMP_136 Function: getRewardAmount
Num: -1
Den: -990
Address: u
Norm: -6
LF: None
Value: 1
Fields: 
Finance Type: undef

Name: rewardAmount Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for rewardAmount

Name: rewardAmount Function: getRewardAmount
Num: -1
Den: -990
Address: u
Norm: -6
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
Source address: u



permitAndDepositErc20
Finding type for tokenAddress(address ... )
prev address? u
Head Addr: -987
    Norm: 6
    Set: {-987}
    Fin: NULL
Finding type for receiver(address ... )
prev address? u
Head Addr: -986
    Norm: 0
    Set: {-986}
    Fin: NULL
Finding type for amount(uint256 ... )
Finding type for toChainId(uint256 ... )
Finding type for permitOptions(LiquidityPool.PermitRequest ... )
permitAndDepositErc20
permitOptions
nonce
OUT KEY: permitAndDepositErc20_permitOptions_nonce
permitAndDepositErc20
permitOptions
expiry
OUT KEY: permitAndDepositErc20_permitOptions_expiry
permitAndDepositErc20
permitOptions
allowed
OUT KEY: permitAndDepositErc20_permitOptions_allowed
permitAndDepositErc20
permitOptions
v
OUT KEY: permitAndDepositErc20_permitOptions_v
permitAndDepositErc20
permitOptions
r
OUT KEY: permitAndDepositErc20_permitOptions_r
permitAndDepositErc20
permitOptions
s
OUT KEY: permitAndDepositErc20_permitOptions_s
Finding type for tag(string ... )
Param: 0
    num: []
    den: []
    norm: 6
    link: tokenAddress
    fields: []
    fintype: -1
Param: 1
    num: []
    den: []
    norm: 0
    link: receiver
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 3
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 4
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 5
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1


TMP_137 = CONVERT tokenAddress_1 to IERC20Permit
TMP_138(address) = INTERNAL_CALL, LiquidityPool._msgSender()()
TMP_139 = CONVERT this to address
REF_16(uint256) -> permitOptions_1 (-> []).nonce
REF_17(uint256) -> permitOptions_1 (-> []).expiry
REF_18(bool) -> permitOptions_1 (-> []).allowed
REF_19(uint8) -> permitOptions_1 (-> []).v
REF_20(bytes32) -> permitOptions_1 (-> []).r
REF_21(bytes32) -> permitOptions_1 (-> []).s
HIGH_LEVEL_CALL, dest:TMP_137(IERC20Permit), function:permit, arguments:['TMP_138', 'TMP_139', 'REF_16', 'REF_17', 'REF_18', 'REF_19', 'REF_20', 'REF_21']  
INTERNAL_CALL, LiquidityPool.depositErc20(uint256,address,address,uint256,string)(toChainId_1,tokenAddress_1,receiver_1,amount_1,tag_1)


Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Source address: u
Name: permitOptions, Num: 1 (-> [])
Globalname: permitOptions
Source address: -987
End popogation
TMP_137 = CONVERT tokenAddress_1 to IERC20Permit
Converting tokenAddress_1

Name: tokenAddress_1 Function: None
Num: 
Den: 
Address: -987
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
init
end
_______________

Name: tokenAddress Function: None
Num: 
Den: 
Address: -987
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef

Name: TMP_137 Function: permitAndDepositErc20
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: -987
ERC20Permit
[i]Type for TMP_137

Name: TMP_137 Function: permitAndDepositErc20
Num: 
Den: 
Address: -987
Norm: 6
LF: ERC20Permit
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_138(address) = INTERNAL_CALL, LiquidityPool._msgSender()()
[i]Type for TMP_138

Name: TMP_138 Function: permitAndDepositErc20
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_139 = CONVERT this to address
Converting this
5
[i]Type for TMP_139

Name: TMP_139 Function: permitAndDepositErc20
Num: -1
Den: -1
Address: 5
Norm: u
LF: LiquidityPool
Value: u
Fields: 
Finance Type: undef
XXXX
REF_16(uint256) -> permitOptions_1 (-> []).nonce
MEMBER
init
end
init
end
FTT: None
No field found
[i]Type for REF_16

Name: permitOptions.nonce Function: permitAndDepositErc20
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: permitOptions_1 (-> []), Field: nonce
#################
Member: 
Name: permitOptions Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Fieldf: 
Name: nonce Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: permitOptions.nonce Function: permitAndDepositErc20
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: False
Source address: u
Finance type key: (-1, -1)
Add new member...
XXXX
REF_17(uint256) -> permitOptions_1 (-> []).expiry
MEMBER
init
end
init
end
FTT: None
No field found
[i]Type for REF_17

Name: permitOptions.expiry Function: permitAndDepositErc20
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: permitOptions_1 (-> []), Field: expiry
#################
Member: 
Name: permitOptions Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: nonce
Finance Type: undef
Fieldf: 
Name: expiry Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: permitOptions.expiry Function: permitAndDepositErc20
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: False
Source address: u
Finance type key: (-1, -1)
Add new member...
XXXX
REF_18(bool) -> permitOptions_1 (-> []).allowed
MEMBER
init
end
init
end
FTT: None
No field found
[i]Type for REF_18

Name: permitOptions.allowed Function: permitAndDepositErc20
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: permitOptions_1 (-> []), Field: allowed
#################
Member: 
Name: permitOptions Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: nonce, expiry
Finance Type: undef
Fieldf: 
Name: allowed Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: permitOptions.allowed Function: permitAndDepositErc20
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: False
Source address: u
Finance type key: (-1, -1)
Add new member...
XXXX
REF_19(uint8) -> permitOptions_1 (-> []).v
MEMBER
init
end
init
end
FTT: None
No field found
[i]Type for REF_19

Name: permitOptions.v Function: permitAndDepositErc20
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: permitOptions_1 (-> []), Field: v
#################
Member: 
Name: permitOptions Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: nonce, expiry, allowed
Finance Type: undef
Fieldf: 
Name: v Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: permitOptions.v Function: permitAndDepositErc20
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: False
Source address: u
Finance type key: (-1, -1)
Add new member...
XXXX
REF_20(bytes32) -> permitOptions_1 (-> []).r
MEMBER
init
end
init
end
FTT: None
No field found
[i]Type for REF_20

Name: permitOptions.r Function: permitAndDepositErc20
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: permitOptions_1 (-> []), Field: r
#################
Member: 
Name: permitOptions Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: nonce, expiry, allowed, v
Finance Type: undef
Fieldf: 
Name: r Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: permitOptions.r Function: permitAndDepositErc20
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: False
Source address: u
Finance type key: (-1, -1)
Add new member...
XXXX
REF_21(bytes32) -> permitOptions_1 (-> []).s
MEMBER
init
end
init
end
FTT: None
No field found
[i]Type for REF_21

Name: permitOptions.s Function: permitAndDepositErc20
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: permitOptions_1 (-> []), Field: s
#################
Member: 
Name: permitOptions Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: nonce, expiry, allowed, v, r
Finance Type: undef
Fieldf: 
Name: s Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: permitOptions.s Function: permitAndDepositErc20
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: False
Source address: u
Finance type key: (-1, -1)
Add new member...
XXXX
HIGH_LEVEL_CALL, dest:TMP_137(IERC20Permit), function:permit, arguments:['TMP_138', 'TMP_139', 'REF_16', 'REF_17', 'REF_18', 'REF_19', 'REF_20', 'REF_21']  
High Call: permit
Propogating parameters and globals to SSA variables...
Source address: -986
Source address: u
Name: toChainId, Num: 1
Globalname: toChainId
Source address: u
Name: tag, Num: 1
Globalname: tag
Source address: u
Name: amount, Num: 1
Globalname: amount
End popogation
INTERNAL_CALL, LiquidityPool.depositErc20(uint256,address,address,uint256,string)(toChainId_1,tokenAddress_1,receiver_1,amount_1,tag_1)


TMP_137 = CONVERT tokenAddress_1 to IERC20Permit
TMP_138(address) = INTERNAL_CALL, LiquidityPool._msgSender()()
TMP_139 = CONVERT this to address
REF_16(uint256) -> permitOptions_1 (-> []).nonce
REF_17(uint256) -> permitOptions_1 (-> []).expiry
REF_18(bool) -> permitOptions_1 (-> []).allowed
REF_19(uint8) -> permitOptions_1 (-> []).v
REF_20(bytes32) -> permitOptions_1 (-> []).r
REF_21(bytes32) -> permitOptions_1 (-> []).s
HIGH_LEVEL_CALL, dest:TMP_137(IERC20Permit), function:permit, arguments:['TMP_138', 'TMP_139', 'REF_16', 'REF_17', 'REF_18', 'REF_19', 'REF_20', 'REF_21']  
INTERNAL_CALL, LiquidityPool.depositErc20(uint256,address,address,uint256,string)(toChainId_1,tokenAddress_1,receiver_1,amount_1,tag_1)


Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Source address: u
Name: permitOptions, Num: 1 (-> [])
Globalname: permitOptions
End popogation
TMP_137 = CONVERT tokenAddress_1 to IERC20Permit
Converting tokenAddress_1

Name: tokenAddress Function: None
Num: 
Den: 
Address: -987
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
init
end
_______________

Name: tokenAddress Function: None
Num: 
Den: 
Address: -987
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef

Name: TMP_137 Function: permitAndDepositErc20
Num: 
Den: 
Address: u
Norm: u
LF: ERC20Permit
Value: u
Fields: 
Finance Type: undef
Source address: -987
ERC20Permit
[i]Type for TMP_137

Name: TMP_137 Function: permitAndDepositErc20
Num: 
Den: 
Address: -987
Norm: 6
LF: ERC20Permit
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_138(address) = INTERNAL_CALL, LiquidityPool._msgSender()()
[i]Type for TMP_138

Name: TMP_138 Function: permitAndDepositErc20
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_139 = CONVERT this to address
Converting this
5
[i]Type for TMP_139

Name: TMP_139 Function: permitAndDepositErc20
Num: 
Den: 
Address: 5
Norm: u
LF: LiquidityPool
Value: u
Fields: 
Finance Type: undef
XXXX
REF_16(uint256) -> permitOptions_1 (-> []).nonce
MEMBER
init
end
init
end
Source address: u
[i]Type for REF_16

Name: permitOptions.nonce Function: permitAndDepositErc20
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: permitOptions_1 (-> []), Field: nonce
#################
Member: 
Name: permitOptions Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: nonce, expiry, allowed, v, r, s
Finance Type: undef
Fieldf: 
Name: nonce Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: permitOptions.nonce Function: permitAndDepositErc20
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: nonce Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_17(uint256) -> permitOptions_1 (-> []).expiry
MEMBER
init
end
init
end
Source address: u
[i]Type for REF_17

Name: permitOptions.expiry Function: permitAndDepositErc20
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: permitOptions_1 (-> []), Field: expiry
#################
Member: 
Name: permitOptions Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: nonce, expiry, allowed, v, r, s
Finance Type: undef
Fieldf: 
Name: expiry Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: permitOptions.expiry Function: permitAndDepositErc20
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: expiry Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_18(bool) -> permitOptions_1 (-> []).allowed
MEMBER
init
end
init
end
Source address: u
[i]Type for REF_18

Name: permitOptions.allowed Function: permitAndDepositErc20
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: permitOptions_1 (-> []), Field: allowed
#################
Member: 
Name: permitOptions Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: nonce, expiry, allowed, v, r, s
Finance Type: undef
Fieldf: 
Name: allowed Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: permitOptions.allowed Function: permitAndDepositErc20
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: allowed Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_19(uint8) -> permitOptions_1 (-> []).v
MEMBER
init
end
init
end
Source address: u
[i]Type for REF_19

Name: permitOptions.v Function: permitAndDepositErc20
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: permitOptions_1 (-> []), Field: v
#################
Member: 
Name: permitOptions Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: nonce, expiry, allowed, v, r, s
Finance Type: undef
Fieldf: 
Name: v Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: permitOptions.v Function: permitAndDepositErc20
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: v Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_20(bytes32) -> permitOptions_1 (-> []).r
MEMBER
init
end
init
end
Source address: u
[i]Type for REF_20

Name: permitOptions.r Function: permitAndDepositErc20
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: permitOptions_1 (-> []), Field: r
#################
Member: 
Name: permitOptions Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: nonce, expiry, allowed, v, r, s
Finance Type: undef
Fieldf: 
Name: r Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: permitOptions.r Function: permitAndDepositErc20
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: r Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_21(bytes32) -> permitOptions_1 (-> []).s
MEMBER
init
end
init
end
Source address: u
[i]Type for REF_21

Name: permitOptions.s Function: permitAndDepositErc20
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: permitOptions_1 (-> []), Field: s
#################
Member: 
Name: permitOptions Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: nonce, expiry, allowed, v, r, s
Finance Type: undef
Fieldf: 
Name: s Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: permitOptions.s Function: permitAndDepositErc20
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: s Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
HIGH_LEVEL_CALL, dest:TMP_137(IERC20Permit), function:permit, arguments:['TMP_138', 'TMP_139', 'REF_16', 'REF_17', 'REF_18', 'REF_19', 'REF_20', 'REF_21']  
High Call: permit
Propogating parameters and globals to SSA variables...
Source address: u
Name: toChainId, Num: 1
Globalname: toChainId
Source address: u
Name: tag, Num: 1
Globalname: tag
Source address: u
Name: amount, Num: 1
Globalname: amount
End popogation
INTERNAL_CALL, LiquidityPool.depositErc20(uint256,address,address,uint256,string)(toChainId_1,tokenAddress_1,receiver_1,amount_1,tag_1)



permitEIP2612AndDepositErc20
Finding type for tokenAddress(address ... )
prev address? u
Head Addr: -985
    Norm: 6
    Set: {-985}
    Fin: NULL
Finding type for receiver(address ... )
prev address? u
Head Addr: -984
    Norm: 0
    Set: {-984}
    Fin: NULL
Finding type for amount(uint256 ... )
Finding type for toChainId(uint256 ... )
Finding type for permitOptions(LiquidityPool.PermitRequest ... )
permitEIP2612AndDepositErc20
permitOptions
nonce
OUT KEY: permitEIP2612AndDepositErc20_permitOptions_nonce
permitEIP2612AndDepositErc20
permitOptions
expiry
OUT KEY: permitEIP2612AndDepositErc20_permitOptions_expiry
permitEIP2612AndDepositErc20
permitOptions
allowed
OUT KEY: permitEIP2612AndDepositErc20_permitOptions_allowed
permitEIP2612AndDepositErc20
permitOptions
v
OUT KEY: permitEIP2612AndDepositErc20_permitOptions_v
permitEIP2612AndDepositErc20
permitOptions
r
OUT KEY: permitEIP2612AndDepositErc20_permitOptions_r
permitEIP2612AndDepositErc20
permitOptions
s
OUT KEY: permitEIP2612AndDepositErc20_permitOptions_s
Finding type for tag(string ... )
Param: 0
    num: []
    den: []
    norm: 6
    link: tokenAddress
    fields: []
    fintype: -1
Param: 1
    num: []
    den: []
    norm: 0
    link: receiver
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 3
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 4
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 5
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1


TMP_142 = CONVERT tokenAddress_1 to IERC20Permit
TMP_143(address) = INTERNAL_CALL, LiquidityPool._msgSender()()
TMP_144 = CONVERT this to address
REF_23(uint256) -> permitOptions_1 (-> []).expiry
REF_24(uint8) -> permitOptions_1 (-> []).v
REF_25(bytes32) -> permitOptions_1 (-> []).r
REF_26(bytes32) -> permitOptions_1 (-> []).s
HIGH_LEVEL_CALL, dest:TMP_142(IERC20Permit), function:permit, arguments:['TMP_143', 'TMP_144', 'amount_1', 'REF_23', 'REF_24', 'REF_25', 'REF_26']  
INTERNAL_CALL, LiquidityPool.depositErc20(uint256,address,address,uint256,string)(toChainId_1,tokenAddress_1,receiver_1,amount_1,tag_1)


Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Source address: -985
Source address: u
Name: amount, Num: 1
Globalname: amount
Source address: u
Name: permitOptions, Num: 1 (-> [])
Globalname: permitOptions
End popogation
TMP_142 = CONVERT tokenAddress_1 to IERC20Permit
Converting tokenAddress_1

Name: tokenAddress_1 Function: None
Num: 
Den: 
Address: -985
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
init
end
_______________

Name: tokenAddress Function: None
Num: 
Den: 
Address: -985
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef

Name: TMP_142 Function: permitEIP2612AndDepositErc20
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: -985
ERC20Permit
[i]Type for TMP_142

Name: TMP_142 Function: permitEIP2612AndDepositErc20
Num: 
Den: 
Address: -985
Norm: 6
LF: ERC20Permit
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_143(address) = INTERNAL_CALL, LiquidityPool._msgSender()()
[i]Type for TMP_143

Name: TMP_143 Function: permitEIP2612AndDepositErc20
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_144 = CONVERT this to address
Converting this
5
[i]Type for TMP_144

Name: TMP_144 Function: permitEIP2612AndDepositErc20
Num: -1
Den: -1
Address: 5
Norm: u
LF: LiquidityPool
Value: u
Fields: 
Finance Type: undef
XXXX
REF_23(uint256) -> permitOptions_1 (-> []).expiry
MEMBER
init
end
init
end
FTT: None
No field found
[i]Type for REF_23

Name: permitOptions.expiry Function: permitEIP2612AndDepositErc20
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: permitOptions_1 (-> []), Field: expiry
#################
Member: 
Name: permitOptions Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Fieldf: 
Name: expiry Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: permitOptions.expiry Function: permitEIP2612AndDepositErc20
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: False
Source address: u
Finance type key: (-1, -1)
Add new member...
XXXX
REF_24(uint8) -> permitOptions_1 (-> []).v
MEMBER
init
end
init
end
FTT: None
No field found
[i]Type for REF_24

Name: permitOptions.v Function: permitEIP2612AndDepositErc20
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: permitOptions_1 (-> []), Field: v
#################
Member: 
Name: permitOptions Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: expiry
Finance Type: undef
Fieldf: 
Name: v Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: permitOptions.v Function: permitEIP2612AndDepositErc20
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: False
Source address: u
Finance type key: (-1, -1)
Add new member...
XXXX
REF_25(bytes32) -> permitOptions_1 (-> []).r
MEMBER
init
end
init
end
FTT: None
No field found
[i]Type for REF_25

Name: permitOptions.r Function: permitEIP2612AndDepositErc20
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: permitOptions_1 (-> []), Field: r
#################
Member: 
Name: permitOptions Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: expiry, v
Finance Type: undef
Fieldf: 
Name: r Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: permitOptions.r Function: permitEIP2612AndDepositErc20
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: False
Source address: u
Finance type key: (-1, -1)
Add new member...
XXXX
REF_26(bytes32) -> permitOptions_1 (-> []).s
MEMBER
init
end
init
end
FTT: None
No field found
[i]Type for REF_26

Name: permitOptions.s Function: permitEIP2612AndDepositErc20
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: permitOptions_1 (-> []), Field: s
#################
Member: 
Name: permitOptions Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: expiry, v, r
Finance Type: undef
Fieldf: 
Name: s Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: permitOptions.s Function: permitEIP2612AndDepositErc20
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: False
Source address: u
Finance type key: (-1, -1)
Add new member...
XXXX
HIGH_LEVEL_CALL, dest:TMP_142(IERC20Permit), function:permit, arguments:['TMP_143', 'TMP_144', 'amount_1', 'REF_23', 'REF_24', 'REF_25', 'REF_26']  
High Call: permit
Propogating parameters and globals to SSA variables...
Source address: u
Name: amount, Num: 1
Globalname: amount
Source address: -984
Source address: u
Name: toChainId, Num: 1
Globalname: toChainId
Source address: u
Name: tag, Num: 1
Globalname: tag
End popogation
INTERNAL_CALL, LiquidityPool.depositErc20(uint256,address,address,uint256,string)(toChainId_1,tokenAddress_1,receiver_1,amount_1,tag_1)


TMP_142 = CONVERT tokenAddress_1 to IERC20Permit
TMP_143(address) = INTERNAL_CALL, LiquidityPool._msgSender()()
TMP_144 = CONVERT this to address
REF_23(uint256) -> permitOptions_1 (-> []).expiry
REF_24(uint8) -> permitOptions_1 (-> []).v
REF_25(bytes32) -> permitOptions_1 (-> []).r
REF_26(bytes32) -> permitOptions_1 (-> []).s
HIGH_LEVEL_CALL, dest:TMP_142(IERC20Permit), function:permit, arguments:['TMP_143', 'TMP_144', 'amount_1', 'REF_23', 'REF_24', 'REF_25', 'REF_26']  
INTERNAL_CALL, LiquidityPool.depositErc20(uint256,address,address,uint256,string)(toChainId_1,tokenAddress_1,receiver_1,amount_1,tag_1)


Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Source address: u
Name: amount, Num: 1
Globalname: amount
Source address: u
Name: permitOptions, Num: 1 (-> [])
Globalname: permitOptions
End popogation
TMP_142 = CONVERT tokenAddress_1 to IERC20Permit
Converting tokenAddress_1

Name: tokenAddress Function: None
Num: 
Den: 
Address: -985
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
init
end
_______________

Name: tokenAddress Function: None
Num: 
Den: 
Address: -985
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef

Name: TMP_142 Function: permitEIP2612AndDepositErc20
Num: 
Den: 
Address: u
Norm: u
LF: ERC20Permit
Value: u
Fields: 
Finance Type: undef
Source address: -985
ERC20Permit
[i]Type for TMP_142

Name: TMP_142 Function: permitEIP2612AndDepositErc20
Num: 
Den: 
Address: -985
Norm: 6
LF: ERC20Permit
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_143(address) = INTERNAL_CALL, LiquidityPool._msgSender()()
[i]Type for TMP_143

Name: TMP_143 Function: permitEIP2612AndDepositErc20
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_144 = CONVERT this to address
Converting this
5
[i]Type for TMP_144

Name: TMP_144 Function: permitEIP2612AndDepositErc20
Num: 
Den: 
Address: 5
Norm: u
LF: LiquidityPool
Value: u
Fields: 
Finance Type: undef
XXXX
REF_23(uint256) -> permitOptions_1 (-> []).expiry
MEMBER
init
end
init
end
Source address: u
[i]Type for REF_23

Name: permitOptions.expiry Function: permitEIP2612AndDepositErc20
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: permitOptions_1 (-> []), Field: expiry
#################
Member: 
Name: permitOptions Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: expiry, v, r, s
Finance Type: undef
Fieldf: 
Name: expiry Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: permitOptions.expiry Function: permitEIP2612AndDepositErc20
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: expiry Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_24(uint8) -> permitOptions_1 (-> []).v
MEMBER
init
end
init
end
Source address: u
[i]Type for REF_24

Name: permitOptions.v Function: permitEIP2612AndDepositErc20
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: permitOptions_1 (-> []), Field: v
#################
Member: 
Name: permitOptions Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: expiry, v, r, s
Finance Type: undef
Fieldf: 
Name: v Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: permitOptions.v Function: permitEIP2612AndDepositErc20
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: v Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_25(bytes32) -> permitOptions_1 (-> []).r
MEMBER
init
end
init
end
Source address: u
[i]Type for REF_25

Name: permitOptions.r Function: permitEIP2612AndDepositErc20
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: permitOptions_1 (-> []), Field: r
#################
Member: 
Name: permitOptions Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: expiry, v, r, s
Finance Type: undef
Fieldf: 
Name: r Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: permitOptions.r Function: permitEIP2612AndDepositErc20
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: r Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_26(bytes32) -> permitOptions_1 (-> []).s
MEMBER
init
end
init
end
Source address: u
[i]Type for REF_26

Name: permitOptions.s Function: permitEIP2612AndDepositErc20
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: permitOptions_1 (-> []), Field: s
#################
Member: 
Name: permitOptions Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: expiry, v, r, s
Finance Type: undef
Fieldf: 
Name: s Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: permitOptions.s Function: permitEIP2612AndDepositErc20
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: s Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
HIGH_LEVEL_CALL, dest:TMP_142(IERC20Permit), function:permit, arguments:['TMP_143', 'TMP_144', 'amount_1', 'REF_23', 'REF_24', 'REF_25', 'REF_26']  
High Call: permit
Propogating parameters and globals to SSA variables...
Source address: u
Name: amount, Num: 1
Globalname: amount
Source address: u
Name: toChainId, Num: 1
Globalname: toChainId
Source address: u
Name: tag, Num: 1
Globalname: tag
End popogation
INTERNAL_CALL, LiquidityPool.depositErc20(uint256,address,address,uint256,string)(toChainId_1,tokenAddress_1,receiver_1,amount_1,tag_1)



depositNative
Finding type for receiver(address ... )
prev address? u
Head Addr: -983
    Norm: 0
    Set: {-983}
    Fin: NULL
Finding type for toChainId(uint256 ... )
Finding type for tag(string ... )
Param: 0
    num: []
    den: []
    norm: 0
    link: receiver
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1


NATIVE_1(address) := ϕ(['NATIVE_28', 'NATIVE_0', 'NATIVE_8', 'NATIVE_22', 'NATIVE_18', 'NATIVE_32'])
tokenManager_8(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_0', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
liquidityProviders_18(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
incentivePool_16(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_0'])
MODIFIER_CALL, PausableUpgradeable.whenNotPaused()()
MODIFIER_CALL, ReentrancyGuardUpgradeable.nonReentrant()()
TMP_147(ITokenManager.TokenConfig) = HIGH_LEVEL_CALL, dest:tokenManager_10(ITokenManager), function:getDepositConfig, arguments:['toChainId_1', 'NATIVE_3']  
NATIVE_4(address) := ϕ(['NATIVE_3', 'NATIVE_28', 'NATIVE_8', 'NATIVE_22', 'NATIVE_18', 'NATIVE_32'])
tokenManager_11(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_10', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
liquidityProviders_21(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_20', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
incentivePool_19(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_18', 'incentivePool_21'])
REF_28(uint256) -> TMP_147.min
TMP_148(bool) = REF_28 <= msg.value
TMP_149(ITokenManager.TokenConfig) = HIGH_LEVEL_CALL, dest:tokenManager_11(ITokenManager), function:getDepositConfig, arguments:['toChainId_1', 'NATIVE_4']  
NATIVE_5(address) := ϕ(['NATIVE_28', 'NATIVE_4', 'NATIVE_8', 'NATIVE_22', 'NATIVE_18', 'NATIVE_32'])
tokenManager_12(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_11', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
liquidityProviders_22(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_21', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
incentivePool_20(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_19', 'incentivePool_21'])
REF_30(uint256) -> TMP_149.max
TMP_150(bool) = REF_30 >= msg.value
TMP_151(bool) = TMP_148 && TMP_150
TMP_152(None) = SOLIDITY_CALL require(bool,string)(TMP_151,Deposit amount not in Cap limit)
TMP_153 = CONVERT 0 to address
TMP_154(bool) = receiver_1 != TMP_153
TMP_155(None) = SOLIDITY_CALL require(bool,string)(TMP_154,Receiver address cannot be 0)
TMP_156(bool) = msg.value != 0
TMP_157(None) = SOLIDITY_CALL require(bool,string)(TMP_156,Amount cannot be 0)
TMP_158(uint256) = INTERNAL_CALL, LiquidityPool.getRewardAmount(uint256,address)(msg.value,NATIVE_5)
liquidityProviders_23(ILiquidityProviders) := ϕ(['liquidityProviders_17'])
incentivePool_21(mapping(address => uint256)) := ϕ(['incentivePool_15'])
rewardAmount_1(uint256) := TMP_158(uint256)
TMP_159(bool) = rewardAmount_1 != 0
CONDITION TMP_159
HIGH_LEVEL_CALL, dest:liquidityProviders_23(ILiquidityProviders), function:increaseCurrentLiquidity, arguments:['NATIVE_6', 'msg.value']  
NATIVE_7(address) := ϕ(['NATIVE_28', 'NATIVE_6', 'NATIVE_8', 'NATIVE_22', 'NATIVE_18', 'NATIVE_32'])
liquidityProviders_24(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_23', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
TMP_162(address) = INTERNAL_CALL, LiquidityPool._msgSender()()
TMP_163(uint256) = msg.value (c)+ rewardAmount_1
Emit Deposit(TMP_162,NATIVE_8,receiver_1,toChainId_1,TMP_163,rewardAmount_1,tag_1)
REF_31(uint256) -> incentivePool_21[NATIVE_6]
REF_32(uint256) -> incentivePool_21[NATIVE_6]
TMP_160(uint256) = REF_32 (c)- rewardAmount_1
incentivePool_22(mapping(address => uint256)) := ϕ(['incentivePool_21'])
REF_31 (->incentivePool_22) := TMP_160(uint256)


Propogating parameters and globals to SSA variables...
End popogation
Name: NATIVE, Num: 1
Globalname: NATIVE
global...

Name: PIC_13 Function: None
Num: -1
Den: -1
Address: 3
Norm: 6
LF: NATIVE
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: None Function: None
Num: -1
Den: -1
Address: 3
Norm: 6
LF: NATIVE
Value: u
Fields: 
Finance Type: undef
Phid
Name: tokenManager, Num: 8
Globalname: tokenManager
global...

Name: tokenManager Function: initialize
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Source address: -996

Name: None Function: None
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid
Name: liquidityProviders, Num: 18
Globalname: liquidityProviders
global...

Name: liquidityProviders Function: setLiquidityProviders
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Source address: -993

Name: None Function: None
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid
Name: incentivePool, Num: 16
Globalname: incentivePool
global...

Name: incentivePool Function: depositErc20
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
NATIVE_1(address) := ϕ(['NATIVE_28', 'NATIVE_0', 'NATIVE_8', 'NATIVE_22', 'NATIVE_18', 'NATIVE_32'])
Phi
[i]Type for NATIVE

Name: NATIVE Function: depositNative
Num: -1
Den: -1
Address: 3
Norm: 6
LF: NATIVE
Value: u
Fields: 
Finance Type: undef
XXXX
tokenManager_8(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_0', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: depositNative
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_18(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: depositNative
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_16(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_0'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: depositNative
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, PausableUpgradeable.whenNotPaused()()
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, ReentrancyGuardUpgradeable.nonReentrant()()
Propogating parameters and globals to SSA variables...
Name: NATIVE, Num: 3
Globalname: NATIVE
global...

Name: PIC_13 Function: None
Num: -1
Den: -1
Address: 3
Norm: 6
LF: NATIVE
Value: u
Fields: 
Finance Type: undef
Source address: 3
Source address: u
Name: toChainId, Num: 1
Globalname: toChainId
Name: tokenManager, Num: 11
Globalname: tokenManager
global...

Name: tokenManager Function: initialize
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Source address: -996
Name: tokenManager, Num: 10
Globalname: tokenManager
global...

Name: tokenManager Function: initialize
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Source address: -996
Name: NATIVE, Num: 4
Globalname: NATIVE
global...

Name: PIC_13 Function: None
Num: -1
Den: -1
Address: 3
Norm: 6
LF: NATIVE
Value: u
Fields: 
Finance Type: undef
Source address: 3
End popogation

Name: None Function: None
Num: -1
Den: -1
Address: 3
Norm: 6
LF: NATIVE
Value: u
Fields: 
Finance Type: undef
Phid

Name: None Function: None
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid
Name: liquidityProviders, Num: 21
Globalname: liquidityProviders
global...

Name: liquidityProviders Function: setLiquidityProviders
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Source address: -993

Name: None Function: None
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid
Name: incentivePool, Num: 19
Globalname: incentivePool
global...

Name: incentivePool Function: depositErc20
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: NATIVE, Num: 5
Globalname: NATIVE
global...

Name: PIC_13 Function: None
Num: -1
Den: -1
Address: 3
Norm: 6
LF: NATIVE
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: None Function: None
Num: -1
Den: -1
Address: 3
Norm: 6
LF: NATIVE
Value: u
Fields: 
Finance Type: undef
Phid
Name: tokenManager, Num: 12
Globalname: tokenManager
global...

Name: tokenManager Function: initialize
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Source address: -996

Name: None Function: None
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid
Name: liquidityProviders, Num: 22
Globalname: liquidityProviders
global...

Name: liquidityProviders Function: setLiquidityProviders
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Source address: -993

Name: None Function: None
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid
Name: incentivePool, Num: 20
Globalname: incentivePool
global...

Name: incentivePool Function: depositErc20
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_147(ITokenManager.TokenConfig) = HIGH_LEVEL_CALL, dest:tokenManager_10(ITokenManager), function:getDepositConfig, arguments:['toChainId_1', 'NATIVE_3']  
High Call: getDepositConfig
Running querryfc
Written func info: TokenManager, getDepositConfig
[i]Type for TMP_147

Name: TMP_147 Function: depositNative
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
NATIVE_4(address) := ϕ(['NATIVE_3', 'NATIVE_28', 'NATIVE_8', 'NATIVE_22', 'NATIVE_18', 'NATIVE_32'])
Phi
[i]Type for NATIVE

Name: NATIVE Function: depositNative
Num: -1
Den: -1
Address: 3
Norm: 6
LF: NATIVE
Value: u
Fields: 
Finance Type: undef
XXXX
tokenManager_11(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_10', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: depositNative
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_21(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_20', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: depositNative
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_19(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_18', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: depositNative
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_28(uint256) -> TMP_147.min
MEMBER
init
end
init
end
OUT KEY: depositNative_TMP_147_min
OUT KEY: depositNative_TMP_min
FTT: None
No field found
[i]Type for REF_28

Name: TMP_147.min Function: depositNative
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: TMP_147, Field: min
#################
Member: 
Name: TMP_147 Function: depositNative
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Fieldf: 
Name: min Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: TMP_147.min Function: depositNative
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: False
Source address: u
Finance type key: (-1, -1)
Add new member...
XXXX
TMP_148(bool) = REF_28 <= msg.value
init
end
init
end
lnorm: u rnorm: u
init
end
_______________

Name: msg.value Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_148 Function: depositNative
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
_______________

Name: msg.value Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_147.min Function: depositNative
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_148

Name: TMP_148 Function: depositNative
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_149(ITokenManager.TokenConfig) = HIGH_LEVEL_CALL, dest:tokenManager_11(ITokenManager), function:getDepositConfig, arguments:['toChainId_1', 'NATIVE_4']  
High Call: getDepositConfig
Running querryfc
Written func info: TokenManager, getDepositConfig
[i]Type for TMP_149

Name: TMP_149 Function: depositNative
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
NATIVE_5(address) := ϕ(['NATIVE_28', 'NATIVE_4', 'NATIVE_8', 'NATIVE_22', 'NATIVE_18', 'NATIVE_32'])
Phi
[i]Type for NATIVE

Name: NATIVE Function: depositNative
Num: -1
Den: -1
Address: 3
Norm: 6
LF: NATIVE
Value: u
Fields: 
Finance Type: undef
XXXX
tokenManager_12(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_11', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: depositNative
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_22(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_21', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: depositNative
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_20(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_19', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: depositNative
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_30(uint256) -> TMP_149.max
MEMBER
init
end
init
end
OUT KEY: depositNative_TMP_149_max
OUT KEY: depositNative_TMP_max
FTT: None
No field found
[i]Type for REF_30

Name: TMP_149.max Function: depositNative
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: TMP_149, Field: max
#################
Member: 
Name: TMP_149 Function: depositNative
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Fieldf: 
Name: max Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: TMP_149.max Function: depositNative
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: False
Source address: u
Finance type key: (-1, -1)
Add new member...
XXXX
TMP_150(bool) = REF_30 >= msg.value
init
end
init
end
lnorm: u rnorm: u
init
end
_______________

Name: msg.value Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_150 Function: depositNative
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
_______________

Name: msg.value Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_149.max Function: depositNative
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_150

Name: TMP_150 Function: depositNative
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_151(bool) = TMP_148 && TMP_150
[i]Type for TMP_151

Name: TMP_151 Function: depositNative
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_152(None) = SOLIDITY_CALL require(bool,string)(TMP_151,Deposit amount not in Cap limit)
[i]Type for TMP_152

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Source address: -983
End popogation
TMP_153 = CONVERT 0 to address
Converting 0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
_______________

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_153 Function: depositNative
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_153

Name: TMP_153 Function: depositNative
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_154(bool) = receiver_1 != TMP_153
[i]Type for TMP_154

Name: TMP_154 Function: depositNative
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_155(None) = SOLIDITY_CALL require(bool,string)(TMP_154,Receiver address cannot be 0)
[i]Type for TMP_155

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_156(bool) = msg.value != 0
[i]Type for TMP_156

Name: TMP_156 Function: depositNative
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_157(None) = SOLIDITY_CALL require(bool,string)(TMP_156,Amount cannot be 0)
[i]Type for TMP_157

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: rewardAmount, Num: 1
Globalname: rewardAmount
End popogation
Name: liquidityProviders, Num: 23
Globalname: liquidityProviders
global...

Name: liquidityProviders Function: setLiquidityProviders
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Source address: -993

Name: None Function: None
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid
Name: incentivePool, Num: 21
Globalname: incentivePool
global...

Name: incentivePool Function: depositErc20
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_158(uint256) = INTERNAL_CALL, LiquidityPool.getRewardAmount(uint256,address)(msg.value,NATIVE_5)
init
end
init
end
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: amount Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 6, 'NATIVE', [], -1, 3, 'u']

Name: tokenAddress Function: getRewardAmount
Num: -1
Den: -1
Address: 3
Norm: 6
LF: NATIVE
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
Source address: u

Name: amount_1 Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Source address: 3

Name: tokenAddress_1 Function: getRewardAmount
Num: -1
Den: -1
Address: 3
Norm: 6
LF: NATIVE
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getRewardAmount
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
amount_1(uint256) := ϕ(['amount_1', 'msg.value'])
Phi
[i]Type for amount

Name: amount Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tokenAddress_1(address) := ϕ(['NATIVE_5', 'tokenAddress_1'])
Phi
[i]Type for tokenAddress

Name: tokenAddress Function: getRewardAmount
Num: -1
Den: -1
Address: 3
Norm: 6
LF: NATIVE
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_15(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getRewardAmount
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_13(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_0'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: currentLiquidity, Num: 1
Globalname: currentLiquidity
End popogation

Name: liquidityProviders Function: getRewardAmount
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_128(uint256) = INTERNAL_CALL, LiquidityPool.getCurrentLiquidity(address)(tokenAddress_1)
init
end
[[-1], [-1], 6, 'NATIVE', [], -1, 3, 'u']

Name: tokenAddress Function: getCurrentLiquidity
Num: -1
Den: -1
Address: 3
Norm: 6
LF: NATIVE
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
Source address: 3

Name: tokenAddress_1 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: 3
Norm: 6
LF: NATIVE
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
tokenAddress_1(address) := ϕ(['tokenAddress_1', 'tokenAddress_1'])
Phi
[i]Type for tokenAddress

Name: tokenAddress Function: getCurrentLiquidity
Num: -1
Den: -1
Address: 3
Norm: 6
LF: NATIVE
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_3(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_1(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_0', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_1(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_0'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: liquidityPoolBalance, Num: 1
Globalname: liquidityPoolBalance
End popogation

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_99(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_3(ILiquidityProviders), function:getCurrentLiquidity, arguments:['tokenAddress_1']  
High Call: getCurrentLiquidity
Running querryfc
Written func info: LiquidityProviders, getCurrentLiquidity
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-1, 3], [-1, -1], 6, "'u'", 'u', -1)
[i]Type for TMP_99

Name: TMP_99 Function: getCurrentLiquidity
Num: 3
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
liquidityProviders_4(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_3', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_2(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_1', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_2(mapping(address => uint256)) := ϕ(['incentivePool_1', 'incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityPoolBalance_1(uint256) := TMP_99(uint256)
asgn
init
end
_______________

Name: TMP_99 Function: getCurrentLiquidity
Num: 3
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for liquidityPoolBalance

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: 3
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: currentLiquidity, Num: 1
Globalname: currentLiquidity
End popogation

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_100(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_4(ILiquidityProviders), function:totalLPFees, arguments:['tokenAddress_1']  
High Call: totalLPFees
Running querryfc
Written func info: LiquidityProviders, totalLPFees
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-1, 3], [-1, -1], 6, "'u'", 'u', -1)
[i]Type for TMP_100

Name: TMP_100 Function: getCurrentLiquidity
Num: 3
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
liquidityProviders_5(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_4', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_3(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_2', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_3(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_2', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_101(uint256) = liquidityPoolBalance_1 (c)- TMP_100
init
end
init
end
3
-1
lnorm: 6 rnorm: 6
init
end
_______________

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: 3
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_101 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_101

Name: TMP_101 Function: getCurrentLiquidity
Num: 3
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_2(uint256) -> gasFeeAccumulatedByToken_3[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_2

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_102(uint256) = TMP_101 (c)- REF_2
init
end
init
end
init
end
_______________

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_102 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_102

Name: TMP_102 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_3(uint256) -> incentivePool_3[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_3

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_103(uint256) = TMP_102 (c)- REF_3
init
end
init
end
init
end
_______________

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_103 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_103

Name: TMP_103 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
currentLiquidity_1(uint256) := TMP_103(uint256)
asgn
init
end
_______________

Name: TMP_103 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: currentLiquidity Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for currentLiquidity

Name: currentLiquidity Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Source address: 3

Name: tokenAddress_1 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: 3
Norm: 6
LF: NATIVE
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
tokenAddress_1(address) := ϕ(['tokenAddress_1', 'tokenAddress_1'])
Phi
[i]Type for tokenAddress

Name: tokenAddress Function: getCurrentLiquidity
Num: -1
Den: -1
Address: 3
Norm: 6
LF: NATIVE
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_3(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_1(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_0', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_1(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_0'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: liquidityPoolBalance, Num: 1
Globalname: liquidityPoolBalance
End popogation

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_99(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_3(ILiquidityProviders), function:getCurrentLiquidity, arguments:['tokenAddress_1']  
High Call: getCurrentLiquidity
Running querryfc
Written func info: LiquidityProviders, getCurrentLiquidity
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-1, 3], [-1, -1], 6, "'u'", 'u', -1)
[i]Type for TMP_99

Name: TMP_99 Function: getCurrentLiquidity
Num: 3
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
liquidityProviders_4(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_3', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_2(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_1', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_2(mapping(address => uint256)) := ϕ(['incentivePool_1', 'incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityPoolBalance_1(uint256) := TMP_99(uint256)
asgn
init
end
_______________

Name: TMP_99 Function: getCurrentLiquidity
Num: 3
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for liquidityPoolBalance

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: 3
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: currentLiquidity, Num: 1
Globalname: currentLiquidity
End popogation

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_100(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_4(ILiquidityProviders), function:totalLPFees, arguments:['tokenAddress_1']  
High Call: totalLPFees
Running querryfc
Written func info: LiquidityProviders, totalLPFees
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-1, 3], [-1, -1], 6, "'u'", 'u', -1)
[i]Type for TMP_100

Name: TMP_100 Function: getCurrentLiquidity
Num: 3
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
liquidityProviders_5(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_4', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_3(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_2', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_3(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_2', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_101(uint256) = liquidityPoolBalance_1 (c)- TMP_100
init
end
init
end
3
-1
lnorm: 6 rnorm: 6
init
end
_______________

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: 3
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_101 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_101

Name: TMP_101 Function: getCurrentLiquidity
Num: 3
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_2(uint256) -> gasFeeAccumulatedByToken_3[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_2

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_102(uint256) = TMP_101 (c)- REF_2
init
end
init
end
init
end
_______________

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_102 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_102

Name: TMP_102 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_3(uint256) -> incentivePool_3[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_3

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_103(uint256) = TMP_102 (c)- REF_3
init
end
init
end
init
end
_______________

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_103 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_103

Name: TMP_103 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
currentLiquidity_1(uint256) := TMP_103(uint256)
asgn
init
end
_______________

Name: TMP_103 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: currentLiquidity Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for currentLiquidity

Name: currentLiquidity Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_128

Name: TMP_128 Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_16(ILiquidityProviders) := ϕ(['liquidityProviders_5'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getRewardAmount
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_14(mapping(address => uint256)) := ϕ(['incentivePool_3'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
currentLiquidity_1(uint256) := TMP_128(uint256)
asgn
init
end
_______________

Name: TMP_128 Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: currentLiquidity Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for currentLiquidity

Name: currentLiquidity Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: providedLiquidity, Num: 1
Globalname: providedLiquidity
End popogation

Name: liquidityProviders Function: getRewardAmount
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_129(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_16(ILiquidityProviders), function:getSuppliedLiquidityByToken, arguments:['tokenAddress_1']  
High Call: getSuppliedLiquidityByToken
Running querryfc
Written func info: LiquidityProviders, getSuppliedLiquidityByToken
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-1, 3], [-1, -1], 6, "'u'", 'u', -1)
[i]Type for TMP_129

Name: TMP_129 Function: getRewardAmount
Num: 3
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
liquidityProviders_17(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_16', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getRewardAmount
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_15(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_14', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
providedLiquidity_1(uint256) := TMP_129(uint256)
asgn
init
end
_______________

Name: TMP_129 Function: getRewardAmount
Num: 3
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: providedLiquidity Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for providedLiquidity

Name: providedLiquidity Function: getRewardAmount
Num: 3
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: currentLiquidity, Num: 1
Globalname: currentLiquidity
End popogation
TMP_130(bool) = currentLiquidity_1 < providedLiquidity_1
init
end
init
end
lnorm: u rnorm: 6
init
end
_______________

Name: providedLiquidity Function: getRewardAmount
Num: 3
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_130 Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
init
end
_______________

Name: providedLiquidity Function: getRewardAmount
Num: 3
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: currentLiquidity Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_130

Name: TMP_130 Function: getRewardAmount
Num: 3
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: liquidityDifference, Num: 1
Globalname: liquidityDifference
End popogation
TMP_131(uint256) = providedLiquidity_1 (c)- currentLiquidity_1
init
end
init
end
3
-1
lnorm: 6 rnorm: u
init
end
_______________

Name: providedLiquidity Function: getRewardAmount
Num: 3
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_131 Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_131

Name: TMP_131 Function: getRewardAmount
Num: 3
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityDifference_1(uint256) := TMP_131(uint256)
asgn
init
end
_______________

Name: TMP_131 Function: getRewardAmount
Num: 3
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef

Name: liquidityDifference Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for liquidityDifference

Name: liquidityDifference Function: getRewardAmount
Num: 3
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
TMP_132(bool) = amount_1 >= liquidityDifference_1
init
end
init
end
lnorm: u rnorm: 6
[i]Type for TMP_132

Name: TMP_132 Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: rewardAmount, Num: 1
Globalname: rewardAmount
End popogation
REF_13(uint256) -> incentivePool_15[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_13

Name: incentivePool Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
rewardAmount_1(uint256) := REF_13(uint256)
asgn
init
end
_______________

Name: incentivePool Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: rewardAmount Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for rewardAmount

Name: rewardAmount Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: rewardAmount, Num: 2
Globalname: rewardAmount
End popogation
REF_14(uint256) -> incentivePool_15[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_14

Name: incentivePool Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_133(uint256) = amount_1 (c)* REF_14
testing mul...
init
end
init
end

Name: amount Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: incentivePool Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: incentivePool Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_133 Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_133

Name: TMP_133 Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_134(uint256) = TMP_133 (c)* 10000000000
testing mul...
init
end
init
end

Name: TMP_133 Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: 10000000000 Function: None
Num: -1
Den: -1
Address: u
Norm: 10
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: 10
init
end
_______________

Name: 10000000000 Function: None
Num: -1
Den: -1
Address: u
Norm: 10
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_134 Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: 10
LF: None
Value: 10000000000
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_134

Name: TMP_134 Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: 10
LF: None
Value: 10000000000
Fields: 
Finance Type: undef
XXXX
TMP_135(uint256) = TMP_134 (c)/ liquidityDifference_1
init
end
init
end
lnorm: 10 rnorm: 6
init
end
Source address: u
init
end
init
end
lnorm: 10 rnorm: 6
init
end
Source address: u
-1
3
[i]Type for TMP_135

Name: TMP_135 Function: getRewardAmount
Num: -1
Den: 3
Address: u
Norm: 4
LF: None
Value: 10000000000
Fields: 
Finance Type: undef
XXXX
rewardAmount_2(uint256) := TMP_135(uint256)
asgn
init
end
_______________

Name: TMP_135 Function: getRewardAmount
Num: -1
Den: 3
Address: u
Norm: 4
LF: None
Value: 10000000000
Fields: 
Finance Type: undef

Name: rewardAmount Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10000000000
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for rewardAmount

Name: rewardAmount Function: getRewardAmount
Num: -1
Den: 3
Address: u
Norm: 4
LF: None
Value: 10000000000
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: rewardAmount, Num: 3
Globalname: rewardAmount
End popogation
TMP_136(uint256) = rewardAmount_2 (c)/ 10000000000
init
end
init
end
lnorm: 4 rnorm: 10
init
end
_______________

Name: rewardAmount Function: getRewardAmount
Num: -1
Den: 3
Address: u
Norm: 4
LF: None
Value: 10000000000
Fields: 
Finance Type: undef

Name: TMP_136 Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: -6
LF: None
Value: 1
Fields: 
Finance Type: undef
Source address: u
init
end
init
end
lnorm: 4 rnorm: 10
init
end
_______________

Name: rewardAmount Function: getRewardAmount
Num: -1
Den: 3
Address: u
Norm: 4
LF: None
Value: 10000000000
Fields: 
Finance Type: undef

Name: TMP_136 Function: getRewardAmount
Num: -1
Den: 3
Address: u
Norm: -6
LF: None
Value: 1
Fields: 
Finance Type: undef
-1
3
[i]Type for TMP_136

Name: TMP_136 Function: getRewardAmount
Num: -1
Den: 3
Address: u
Norm: -6
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
rewardAmount_3(uint256) := TMP_136(uint256)
asgn
init
end
_______________

Name: TMP_136 Function: getRewardAmount
Num: -1
Den: 3
Address: u
Norm: -6
LF: None
Value: 1
Fields: 
Finance Type: undef

Name: rewardAmount Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for rewardAmount

Name: rewardAmount Function: getRewardAmount
Num: -1
Den: 3
Address: u
Norm: -6
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Source address: u

Name: amount_1 Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Source address: 3

Name: tokenAddress_1 Function: getRewardAmount
Num: -1
Den: -1
Address: 3
Norm: 6
LF: NATIVE
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getRewardAmount
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
amount_1(uint256) := ϕ(['amount_1', 'msg.value'])
Phi
[i]Type for amount

Name: amount Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tokenAddress_1(address) := ϕ(['NATIVE_5', 'tokenAddress_1'])
Phi
[i]Type for tokenAddress

Name: tokenAddress Function: getRewardAmount
Num: -1
Den: -1
Address: 3
Norm: 6
LF: NATIVE
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_15(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getRewardAmount
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_13(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_0'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: currentLiquidity, Num: 1
Globalname: currentLiquidity
End popogation

Name: liquidityProviders Function: getRewardAmount
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_128(uint256) = INTERNAL_CALL, LiquidityPool.getCurrentLiquidity(address)(tokenAddress_1)
init
end
[[-1], [-1], 6, 'NATIVE', [], -1, 3, 'u']

Name: tokenAddress Function: getCurrentLiquidity
Num: -1
Den: -1
Address: 3
Norm: 6
LF: NATIVE
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
Source address: 3

Name: tokenAddress_1 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: 3
Norm: 6
LF: NATIVE
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
tokenAddress_1(address) := ϕ(['tokenAddress_1', 'tokenAddress_1'])
Phi
[i]Type for tokenAddress

Name: tokenAddress Function: getCurrentLiquidity
Num: -1
Den: -1
Address: 3
Norm: 6
LF: NATIVE
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_3(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_1(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_0', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_1(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_0'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: liquidityPoolBalance, Num: 1
Globalname: liquidityPoolBalance
End popogation

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_99(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_3(ILiquidityProviders), function:getCurrentLiquidity, arguments:['tokenAddress_1']  
High Call: getCurrentLiquidity
Running querryfc
Written func info: LiquidityProviders, getCurrentLiquidity
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-1, 3], [-1, -1], 6, "'u'", 'u', -1)
[i]Type for TMP_99

Name: TMP_99 Function: getCurrentLiquidity
Num: 3
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
liquidityProviders_4(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_3', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_2(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_1', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_2(mapping(address => uint256)) := ϕ(['incentivePool_1', 'incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityPoolBalance_1(uint256) := TMP_99(uint256)
asgn
init
end
_______________

Name: TMP_99 Function: getCurrentLiquidity
Num: 3
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for liquidityPoolBalance

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: 3
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: currentLiquidity, Num: 1
Globalname: currentLiquidity
End popogation

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_100(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_4(ILiquidityProviders), function:totalLPFees, arguments:['tokenAddress_1']  
High Call: totalLPFees
Running querryfc
Written func info: LiquidityProviders, totalLPFees
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-1, 3], [-1, -1], 6, "'u'", 'u', -1)
[i]Type for TMP_100

Name: TMP_100 Function: getCurrentLiquidity
Num: 3
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
liquidityProviders_5(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_4', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_3(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_2', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_3(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_2', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_101(uint256) = liquidityPoolBalance_1 (c)- TMP_100
init
end
init
end
3
-1
lnorm: 6 rnorm: 6
init
end
_______________

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: 3
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_101 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_101

Name: TMP_101 Function: getCurrentLiquidity
Num: 3
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_2(uint256) -> gasFeeAccumulatedByToken_3[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_2

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_102(uint256) = TMP_101 (c)- REF_2
init
end
init
end
init
end
_______________

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_102 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_102

Name: TMP_102 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_3(uint256) -> incentivePool_3[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_3

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_103(uint256) = TMP_102 (c)- REF_3
init
end
init
end
init
end
_______________

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_103 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_103

Name: TMP_103 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
currentLiquidity_1(uint256) := TMP_103(uint256)
asgn
init
end
_______________

Name: TMP_103 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: currentLiquidity Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for currentLiquidity

Name: currentLiquidity Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Source address: 3

Name: tokenAddress_1 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: 3
Norm: 6
LF: NATIVE
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
tokenAddress_1(address) := ϕ(['tokenAddress_1', 'tokenAddress_1'])
Phi
[i]Type for tokenAddress

Name: tokenAddress Function: getCurrentLiquidity
Num: -1
Den: -1
Address: 3
Norm: 6
LF: NATIVE
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_3(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_1(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_0', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_1(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_0'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: liquidityPoolBalance, Num: 1
Globalname: liquidityPoolBalance
End popogation

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_99(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_3(ILiquidityProviders), function:getCurrentLiquidity, arguments:['tokenAddress_1']  
High Call: getCurrentLiquidity
Running querryfc
Written func info: LiquidityProviders, getCurrentLiquidity
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-1, 3], [-1, -1], 6, "'u'", 'u', -1)
[i]Type for TMP_99

Name: TMP_99 Function: getCurrentLiquidity
Num: 3
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
liquidityProviders_4(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_3', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_2(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_1', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_2(mapping(address => uint256)) := ϕ(['incentivePool_1', 'incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityPoolBalance_1(uint256) := TMP_99(uint256)
asgn
init
end
_______________

Name: TMP_99 Function: getCurrentLiquidity
Num: 3
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for liquidityPoolBalance

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: 3
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: currentLiquidity, Num: 1
Globalname: currentLiquidity
End popogation

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_100(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_4(ILiquidityProviders), function:totalLPFees, arguments:['tokenAddress_1']  
High Call: totalLPFees
Running querryfc
Written func info: LiquidityProviders, totalLPFees
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-1, 3], [-1, -1], 6, "'u'", 'u', -1)
[i]Type for TMP_100

Name: TMP_100 Function: getCurrentLiquidity
Num: 3
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
liquidityProviders_5(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_4', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_3(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_2', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_3(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_2', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_101(uint256) = liquidityPoolBalance_1 (c)- TMP_100
init
end
init
end
3
-1
lnorm: 6 rnorm: 6
init
end
_______________

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: 3
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_101 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_101

Name: TMP_101 Function: getCurrentLiquidity
Num: 3
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_2(uint256) -> gasFeeAccumulatedByToken_3[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_2

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_102(uint256) = TMP_101 (c)- REF_2
init
end
init
end
init
end
_______________

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_102 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_102

Name: TMP_102 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_3(uint256) -> incentivePool_3[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_3

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_103(uint256) = TMP_102 (c)- REF_3
init
end
init
end
init
end
_______________

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_103 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_103

Name: TMP_103 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
currentLiquidity_1(uint256) := TMP_103(uint256)
asgn
init
end
_______________

Name: TMP_103 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: currentLiquidity Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for currentLiquidity

Name: currentLiquidity Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_128

Name: TMP_128 Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_16(ILiquidityProviders) := ϕ(['liquidityProviders_5'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getRewardAmount
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_14(mapping(address => uint256)) := ϕ(['incentivePool_3'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
currentLiquidity_1(uint256) := TMP_128(uint256)
asgn
init
end
_______________

Name: TMP_128 Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: currentLiquidity Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for currentLiquidity

Name: currentLiquidity Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: providedLiquidity, Num: 1
Globalname: providedLiquidity
End popogation

Name: liquidityProviders Function: getRewardAmount
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_129(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_16(ILiquidityProviders), function:getSuppliedLiquidityByToken, arguments:['tokenAddress_1']  
High Call: getSuppliedLiquidityByToken
Running querryfc
Written func info: LiquidityProviders, getSuppliedLiquidityByToken
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-1, 3], [-1, -1], 6, "'u'", 'u', -1)
[i]Type for TMP_129

Name: TMP_129 Function: getRewardAmount
Num: 3
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
liquidityProviders_17(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_16', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getRewardAmount
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_15(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_14', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
providedLiquidity_1(uint256) := TMP_129(uint256)
asgn
init
end
_______________

Name: TMP_129 Function: getRewardAmount
Num: 3
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: providedLiquidity Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for providedLiquidity

Name: providedLiquidity Function: getRewardAmount
Num: 3
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: currentLiquidity, Num: 1
Globalname: currentLiquidity
End popogation
TMP_130(bool) = currentLiquidity_1 < providedLiquidity_1
init
end
init
end
lnorm: u rnorm: 6
init
end
_______________

Name: providedLiquidity Function: getRewardAmount
Num: 3
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_130 Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
init
end
_______________

Name: providedLiquidity Function: getRewardAmount
Num: 3
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: currentLiquidity Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_130

Name: TMP_130 Function: getRewardAmount
Num: 3
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: liquidityDifference, Num: 1
Globalname: liquidityDifference
End popogation
TMP_131(uint256) = providedLiquidity_1 (c)- currentLiquidity_1
init
end
init
end
3
-1
lnorm: 6 rnorm: u
init
end
_______________

Name: providedLiquidity Function: getRewardAmount
Num: 3
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_131 Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_131

Name: TMP_131 Function: getRewardAmount
Num: 3
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityDifference_1(uint256) := TMP_131(uint256)
asgn
init
end
_______________

Name: TMP_131 Function: getRewardAmount
Num: 3
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef

Name: liquidityDifference Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for liquidityDifference

Name: liquidityDifference Function: getRewardAmount
Num: 3
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
TMP_132(bool) = amount_1 >= liquidityDifference_1
init
end
init
end
lnorm: u rnorm: 6
[i]Type for TMP_132

Name: TMP_132 Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: rewardAmount, Num: 1
Globalname: rewardAmount
End popogation
REF_13(uint256) -> incentivePool_15[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_13

Name: incentivePool Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
rewardAmount_1(uint256) := REF_13(uint256)
asgn
init
end
_______________

Name: incentivePool Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: rewardAmount Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for rewardAmount

Name: rewardAmount Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: rewardAmount, Num: 2
Globalname: rewardAmount
End popogation
REF_14(uint256) -> incentivePool_15[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_14

Name: incentivePool Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_133(uint256) = amount_1 (c)* REF_14
testing mul...
init
end
init
end

Name: amount Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: incentivePool Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: incentivePool Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_133 Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_133

Name: TMP_133 Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_134(uint256) = TMP_133 (c)* 10000000000
testing mul...
init
end
init
end

Name: TMP_133 Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: 10000000000 Function: None
Num: -1
Den: -1
Address: u
Norm: 10
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: 10
init
end
_______________

Name: 10000000000 Function: None
Num: -1
Den: -1
Address: u
Norm: 10
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_134 Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: 10
LF: None
Value: 10000000000
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_134

Name: TMP_134 Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: 10
LF: None
Value: 10000000000
Fields: 
Finance Type: undef
XXXX
TMP_135(uint256) = TMP_134 (c)/ liquidityDifference_1
init
end
init
end
lnorm: 10 rnorm: 6
init
end
Source address: u
init
end
init
end
lnorm: 10 rnorm: 6
init
end
Source address: u
-1
3
[i]Type for TMP_135

Name: TMP_135 Function: getRewardAmount
Num: -1
Den: 3
Address: u
Norm: 4
LF: None
Value: 10000000000
Fields: 
Finance Type: undef
XXXX
rewardAmount_2(uint256) := TMP_135(uint256)
asgn
init
end
_______________

Name: TMP_135 Function: getRewardAmount
Num: -1
Den: 3
Address: u
Norm: 4
LF: None
Value: 10000000000
Fields: 
Finance Type: undef

Name: rewardAmount Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10000000000
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for rewardAmount

Name: rewardAmount Function: getRewardAmount
Num: -1
Den: 3
Address: u
Norm: 4
LF: None
Value: 10000000000
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: rewardAmount, Num: 3
Globalname: rewardAmount
End popogation
TMP_136(uint256) = rewardAmount_2 (c)/ 10000000000
init
end
init
end
lnorm: 4 rnorm: 10
init
end
_______________

Name: rewardAmount Function: getRewardAmount
Num: -1
Den: 3
Address: u
Norm: 4
LF: None
Value: 10000000000
Fields: 
Finance Type: undef

Name: TMP_136 Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: -6
LF: None
Value: 1
Fields: 
Finance Type: undef
Source address: u
init
end
init
end
lnorm: 4 rnorm: 10
init
end
_______________

Name: rewardAmount Function: getRewardAmount
Num: -1
Den: 3
Address: u
Norm: 4
LF: None
Value: 10000000000
Fields: 
Finance Type: undef

Name: TMP_136 Function: getRewardAmount
Num: -1
Den: 3
Address: u
Norm: -6
LF: None
Value: 1
Fields: 
Finance Type: undef
-1
3
[i]Type for TMP_136

Name: TMP_136 Function: getRewardAmount
Num: -1
Den: 3
Address: u
Norm: -6
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
rewardAmount_3(uint256) := TMP_136(uint256)
asgn
init
end
_______________

Name: TMP_136 Function: getRewardAmount
Num: -1
Den: 3
Address: u
Norm: -6
LF: None
Value: 1
Fields: 
Finance Type: undef

Name: rewardAmount Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for rewardAmount

Name: rewardAmount Function: getRewardAmount
Num: -1
Den: 3
Address: u
Norm: -6
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_158

Name: TMP_158 Function: depositNative
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_23(ILiquidityProviders) := ϕ(['liquidityProviders_17'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: depositNative
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_21(mapping(address => uint256)) := ϕ(['incentivePool_15'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: depositNative
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
rewardAmount_1(uint256) := TMP_158(uint256)
asgn
init
end
_______________

Name: TMP_158 Function: depositNative
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: rewardAmount Function: depositNative
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for rewardAmount

Name: rewardAmount Function: depositNative
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: rewardAmount, Num: 1
Globalname: rewardAmount
End popogation
TMP_159(bool) = rewardAmount_1 != 0
[i]Type for TMP_159

Name: TMP_159 Function: depositNative
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: NATIVE, Num: 6
Globalname: NATIVE
global...

Name: PIC_13 Function: None
Num: -1
Den: -1
Address: 3
Norm: 6
LF: NATIVE
Value: u
Fields: 
Finance Type: undef
Source address: 3
End popogation
Name: NATIVE, Num: 7
Globalname: NATIVE
global...

Name: PIC_13 Function: None
Num: -1
Den: -1
Address: 3
Norm: 6
LF: NATIVE
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: None Function: None
Num: -1
Den: -1
Address: 3
Norm: 6
LF: NATIVE
Value: u
Fields: 
Finance Type: undef
Phid
Name: liquidityProviders, Num: 24
Globalname: liquidityProviders
global...

Name: liquidityProviders Function: setLiquidityProviders
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Source address: -993

Name: None Function: None
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid
HIGH_LEVEL_CALL, dest:liquidityProviders_23(ILiquidityProviders), function:increaseCurrentLiquidity, arguments:['NATIVE_6', 'msg.value']  
High Call: increaseCurrentLiquidity
NATIVE_7(address) := ϕ(['NATIVE_28', 'NATIVE_6', 'NATIVE_8', 'NATIVE_22', 'NATIVE_18', 'NATIVE_32'])
Phi
[i]Type for NATIVE

Name: NATIVE Function: depositNative
Num: -1
Den: -1
Address: 3
Norm: 6
LF: NATIVE
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_24(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_23', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: depositNative
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Source address: u
Name: toChainId, Num: 1
Globalname: toChainId
Name: rewardAmount, Num: 1
Globalname: rewardAmount
Name: NATIVE, Num: 8
Globalname: NATIVE
global...

Name: PIC_13 Function: None
Num: -1
Den: -1
Address: 3
Norm: 6
LF: NATIVE
Value: u
Fields: 
Finance Type: undef
Source address: 3
Source address: u
Name: tag, Num: 1
Globalname: tag
End popogation
TMP_162(address) = INTERNAL_CALL, LiquidityPool._msgSender()()
init
end
_______________

Name: PIC_33 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_162 Function: depositNative
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_162

Name: TMP_162 Function: depositNative
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_163(uint256) = msg.value (c)+ rewardAmount_1
init
end
init
end
init
end
_______________

Name: rewardAmount Function: depositNative
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_163 Function: depositNative
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_163

Name: TMP_163 Function: depositNative
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: rewardAmount, Num: 1
Globalname: rewardAmount
Name: incentivePool, Num: 22
Globalname: incentivePool
global...

Name: incentivePool Function: depositErc20
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
End popogation

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
REF_31(uint256) -> incentivePool_21[NATIVE_6]
INDEX
Source address: u
[i]Type for REF_31

Name: incentivePool Function: depositNative
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_32(uint256) -> incentivePool_21[NATIVE_6]
INDEX
Source address: u
[i]Type for REF_32

Name: incentivePool Function: depositNative
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_160(uint256) = REF_32 (c)- rewardAmount_1
init
end
init
end
init
end
_______________

Name: incentivePool Function: depositNative
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_160 Function: depositNative
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_160

Name: TMP_160 Function: depositNative
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_22(mapping(address => uint256)) := ϕ(['incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: depositNative
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_31 (->incentivePool_22) := TMP_160(uint256)
asgn
init
end
_______________

Name: TMP_160 Function: depositNative
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: REF_31 Function: depositNative
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_31

Name: REF_31 Function: depositNative
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
Source address: u


NATIVE_1(address) := ϕ(['NATIVE_28', 'NATIVE_0', 'NATIVE_8', 'NATIVE_22', 'NATIVE_18', 'NATIVE_32'])
tokenManager_8(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_0', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
liquidityProviders_18(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
incentivePool_16(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_0'])
MODIFIER_CALL, PausableUpgradeable.whenNotPaused()()
MODIFIER_CALL, ReentrancyGuardUpgradeable.nonReentrant()()
TMP_147(ITokenManager.TokenConfig) = HIGH_LEVEL_CALL, dest:tokenManager_10(ITokenManager), function:getDepositConfig, arguments:['toChainId_1', 'NATIVE_3']  
NATIVE_4(address) := ϕ(['NATIVE_3', 'NATIVE_28', 'NATIVE_8', 'NATIVE_22', 'NATIVE_18', 'NATIVE_32'])
tokenManager_11(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_10', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
liquidityProviders_21(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_20', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
incentivePool_19(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_18', 'incentivePool_21'])
REF_28(uint256) -> TMP_147.min
TMP_148(bool) = REF_28 <= msg.value
TMP_149(ITokenManager.TokenConfig) = HIGH_LEVEL_CALL, dest:tokenManager_11(ITokenManager), function:getDepositConfig, arguments:['toChainId_1', 'NATIVE_4']  
NATIVE_5(address) := ϕ(['NATIVE_28', 'NATIVE_4', 'NATIVE_8', 'NATIVE_22', 'NATIVE_18', 'NATIVE_32'])
tokenManager_12(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_11', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
liquidityProviders_22(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_21', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
incentivePool_20(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_19', 'incentivePool_21'])
REF_30(uint256) -> TMP_149.max
TMP_150(bool) = REF_30 >= msg.value
TMP_151(bool) = TMP_148 && TMP_150
TMP_152(None) = SOLIDITY_CALL require(bool,string)(TMP_151,Deposit amount not in Cap limit)
TMP_153 = CONVERT 0 to address
TMP_154(bool) = receiver_1 != TMP_153
TMP_155(None) = SOLIDITY_CALL require(bool,string)(TMP_154,Receiver address cannot be 0)
TMP_156(bool) = msg.value != 0
TMP_157(None) = SOLIDITY_CALL require(bool,string)(TMP_156,Amount cannot be 0)
TMP_158(uint256) = INTERNAL_CALL, LiquidityPool.getRewardAmount(uint256,address)(msg.value,NATIVE_5)
liquidityProviders_23(ILiquidityProviders) := ϕ(['liquidityProviders_17'])
incentivePool_21(mapping(address => uint256)) := ϕ(['incentivePool_15'])
rewardAmount_1(uint256) := TMP_158(uint256)
TMP_159(bool) = rewardAmount_1 != 0
CONDITION TMP_159
HIGH_LEVEL_CALL, dest:liquidityProviders_23(ILiquidityProviders), function:increaseCurrentLiquidity, arguments:['NATIVE_6', 'msg.value']  
NATIVE_7(address) := ϕ(['NATIVE_28', 'NATIVE_6', 'NATIVE_8', 'NATIVE_22', 'NATIVE_18', 'NATIVE_32'])
liquidityProviders_24(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_23', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
TMP_162(address) = INTERNAL_CALL, LiquidityPool._msgSender()()
TMP_163(uint256) = msg.value (c)+ rewardAmount_1
Emit Deposit(TMP_162,NATIVE_8,receiver_1,toChainId_1,TMP_163,rewardAmount_1,tag_1)
REF_31(uint256) -> incentivePool_21[NATIVE_6]
REF_32(uint256) -> incentivePool_21[NATIVE_6]
TMP_160(uint256) = REF_32 (c)- rewardAmount_1
incentivePool_22(mapping(address => uint256)) := ϕ(['incentivePool_21'])
REF_31 (->incentivePool_22) := TMP_160(uint256)


Propogating parameters and globals to SSA variables...
End popogation

Name: NATIVE Function: depositNative
Num: -1
Den: -1
Address: 3
Norm: 6
LF: NATIVE
Value: u
Fields: 
Finance Type: undef
Phid

Name: tokenManager Function: depositNative
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: depositNative
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: depositNative
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
NATIVE_1(address) := ϕ(['NATIVE_28', 'NATIVE_0', 'NATIVE_8', 'NATIVE_22', 'NATIVE_18', 'NATIVE_32'])
Phi
[i]Type for NATIVE

Name: NATIVE Function: depositNative
Num: -1
Den: -1
Address: 3
Norm: 6
LF: NATIVE
Value: u
Fields: 
Finance Type: undef
XXXX
tokenManager_8(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_0', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: depositNative
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_18(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: depositNative
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_16(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_0'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: depositNative
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, PausableUpgradeable.whenNotPaused()()
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, ReentrancyGuardUpgradeable.nonReentrant()()
Propogating parameters and globals to SSA variables...
Source address: u
Name: toChainId, Num: 1
Globalname: toChainId
End popogation

Name: NATIVE Function: depositNative
Num: -1
Den: -1
Address: 3
Norm: 6
LF: NATIVE
Value: u
Fields: 
Finance Type: undef
Phid

Name: tokenManager Function: depositNative
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: depositNative
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: depositNative
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: NATIVE Function: depositNative
Num: -1
Den: -1
Address: 3
Norm: 6
LF: NATIVE
Value: u
Fields: 
Finance Type: undef
Phid

Name: tokenManager Function: depositNative
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: depositNative
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: depositNative
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_147(ITokenManager.TokenConfig) = HIGH_LEVEL_CALL, dest:tokenManager_10(ITokenManager), function:getDepositConfig, arguments:['toChainId_1', 'NATIVE_3']  
High Call: getDepositConfig
Running querryfc
Written func info: TokenManager, getDepositConfig
[i]Type for TMP_147

Name: TMP_147 Function: depositNative
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: min
Finance Type: undef
XXXX
NATIVE_4(address) := ϕ(['NATIVE_3', 'NATIVE_28', 'NATIVE_8', 'NATIVE_22', 'NATIVE_18', 'NATIVE_32'])
Phi
[i]Type for NATIVE

Name: NATIVE Function: depositNative
Num: -1
Den: -1
Address: 3
Norm: 6
LF: NATIVE
Value: u
Fields: 
Finance Type: undef
XXXX
tokenManager_11(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_10', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: depositNative
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_21(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_20', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: depositNative
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_19(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_18', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: depositNative
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_28(uint256) -> TMP_147.min
MEMBER
init
end
init
end
Source address: u
[i]Type for REF_28

Name: TMP_147.min Function: depositNative
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: TMP_147, Field: min
#################
Member: 
Name: TMP_147 Function: depositNative
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: min
Finance Type: undef
Fieldf: 
Name: min Function: depositNative
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: TMP_147.min Function: depositNative
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: min Function: depositNative
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_148(bool) = REF_28 <= msg.value
init
end
init
end
lnorm: u rnorm: u
init
end
_______________

Name: TMP_147.min Function: depositNative
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_148 Function: depositNative
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
init
end
_______________

Name: TMP_147.min Function: depositNative
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: msg.value Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_148

Name: TMP_148 Function: depositNative
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_149(ITokenManager.TokenConfig) = HIGH_LEVEL_CALL, dest:tokenManager_11(ITokenManager), function:getDepositConfig, arguments:['toChainId_1', 'NATIVE_4']  
High Call: getDepositConfig
Running querryfc
Written func info: TokenManager, getDepositConfig
[i]Type for TMP_149

Name: TMP_149 Function: depositNative
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: max
Finance Type: undef
XXXX
NATIVE_5(address) := ϕ(['NATIVE_28', 'NATIVE_4', 'NATIVE_8', 'NATIVE_22', 'NATIVE_18', 'NATIVE_32'])
Phi
[i]Type for NATIVE

Name: NATIVE Function: depositNative
Num: -1
Den: -1
Address: 3
Norm: 6
LF: NATIVE
Value: u
Fields: 
Finance Type: undef
XXXX
tokenManager_12(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_11', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: depositNative
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_22(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_21', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: depositNative
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_20(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_19', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: depositNative
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_30(uint256) -> TMP_149.max
MEMBER
init
end
init
end
Source address: u
[i]Type for REF_30

Name: TMP_149.max Function: depositNative
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: TMP_149, Field: max
#################
Member: 
Name: TMP_149 Function: depositNative
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: max
Finance Type: undef
Fieldf: 
Name: max Function: depositNative
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: TMP_149.max Function: depositNative
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: max Function: depositNative
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_150(bool) = REF_30 >= msg.value
init
end
init
end
lnorm: u rnorm: u
init
end
_______________

Name: TMP_149.max Function: depositNative
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_150 Function: depositNative
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
init
end
_______________

Name: TMP_149.max Function: depositNative
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: msg.value Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_150

Name: TMP_150 Function: depositNative
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_151(bool) = TMP_148 && TMP_150
[i]Type for TMP_151

Name: TMP_151 Function: depositNative
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_152(None) = SOLIDITY_CALL require(bool,string)(TMP_151,Deposit amount not in Cap limit)
[i]Type for TMP_152

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_153 = CONVERT 0 to address
Converting 0

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
_______________

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_153 Function: depositNative
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_153

Name: TMP_153 Function: depositNative
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_154(bool) = receiver_1 != TMP_153
[i]Type for TMP_154

Name: TMP_154 Function: depositNative
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_155(None) = SOLIDITY_CALL require(bool,string)(TMP_154,Receiver address cannot be 0)
[i]Type for TMP_155

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_156(bool) = msg.value != 0
[i]Type for TMP_156

Name: TMP_156 Function: depositNative
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_157(None) = SOLIDITY_CALL require(bool,string)(TMP_156,Amount cannot be 0)
[i]Type for TMP_157

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: rewardAmount, Num: 1
Globalname: rewardAmount
End popogation

Name: liquidityProviders Function: depositNative
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: depositNative
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_158(uint256) = INTERNAL_CALL, LiquidityPool.getRewardAmount(uint256,address)(msg.value,NATIVE_5)
init
end
init
end
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: amount Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 6, 'NATIVE', [], -1, 3, 'u']

Name: tokenAddress Function: getRewardAmount
Num: -1
Den: -1
Address: 3
Norm: 6
LF: NATIVE
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
Source address: u

Name: amount_1 Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Source address: 3

Name: tokenAddress_1 Function: getRewardAmount
Num: -1
Den: -1
Address: 3
Norm: 6
LF: NATIVE
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getRewardAmount
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
amount_1(uint256) := ϕ(['amount_1', 'msg.value'])
Phi
[i]Type for amount

Name: amount Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tokenAddress_1(address) := ϕ(['NATIVE_5', 'tokenAddress_1'])
Phi
[i]Type for tokenAddress

Name: tokenAddress Function: getRewardAmount
Num: -1
Den: -1
Address: 3
Norm: 6
LF: NATIVE
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_15(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getRewardAmount
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_13(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_0'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: currentLiquidity, Num: 1
Globalname: currentLiquidity
End popogation

Name: liquidityProviders Function: getRewardAmount
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_128(uint256) = INTERNAL_CALL, LiquidityPool.getCurrentLiquidity(address)(tokenAddress_1)
init
end
[[-1], [-1], 6, 'NATIVE', [], -1, 3, 'u']

Name: tokenAddress Function: getCurrentLiquidity
Num: -1
Den: -1
Address: 3
Norm: 6
LF: NATIVE
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
Source address: 3

Name: tokenAddress_1 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: 3
Norm: 6
LF: NATIVE
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
tokenAddress_1(address) := ϕ(['tokenAddress_1', 'tokenAddress_1'])
Phi
[i]Type for tokenAddress

Name: tokenAddress Function: getCurrentLiquidity
Num: -1
Den: -1
Address: 3
Norm: 6
LF: NATIVE
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_3(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_1(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_0', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_1(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_0'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: liquidityPoolBalance, Num: 1
Globalname: liquidityPoolBalance
End popogation

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_99(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_3(ILiquidityProviders), function:getCurrentLiquidity, arguments:['tokenAddress_1']  
High Call: getCurrentLiquidity
Running querryfc
Written func info: LiquidityProviders, getCurrentLiquidity
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-1, 3], [-1, -1], 6, "'u'", 'u', -1)
[i]Type for TMP_99

Name: TMP_99 Function: getCurrentLiquidity
Num: 3
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
liquidityProviders_4(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_3', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_2(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_1', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_2(mapping(address => uint256)) := ϕ(['incentivePool_1', 'incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityPoolBalance_1(uint256) := TMP_99(uint256)
asgn
init
end
_______________

Name: TMP_99 Function: getCurrentLiquidity
Num: 3
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for liquidityPoolBalance

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: 3
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: currentLiquidity, Num: 1
Globalname: currentLiquidity
End popogation

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_100(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_4(ILiquidityProviders), function:totalLPFees, arguments:['tokenAddress_1']  
High Call: totalLPFees
Running querryfc
Written func info: LiquidityProviders, totalLPFees
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-1, 3], [-1, -1], 6, "'u'", 'u', -1)
[i]Type for TMP_100

Name: TMP_100 Function: getCurrentLiquidity
Num: 3
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
liquidityProviders_5(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_4', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_3(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_2', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_3(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_2', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_101(uint256) = liquidityPoolBalance_1 (c)- TMP_100
init
end
init
end
3
-1
lnorm: 6 rnorm: 6
init
end
_______________

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: 3
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_101 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_101

Name: TMP_101 Function: getCurrentLiquidity
Num: 3
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_2(uint256) -> gasFeeAccumulatedByToken_3[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_2

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_102(uint256) = TMP_101 (c)- REF_2
init
end
init
end
init
end
_______________

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_102 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_102

Name: TMP_102 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_3(uint256) -> incentivePool_3[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_3

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_103(uint256) = TMP_102 (c)- REF_3
init
end
init
end
init
end
_______________

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_103 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_103

Name: TMP_103 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
currentLiquidity_1(uint256) := TMP_103(uint256)
asgn
init
end
_______________

Name: TMP_103 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: currentLiquidity Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for currentLiquidity

Name: currentLiquidity Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Source address: 3

Name: tokenAddress_1 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: 3
Norm: 6
LF: NATIVE
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
tokenAddress_1(address) := ϕ(['tokenAddress_1', 'tokenAddress_1'])
Phi
[i]Type for tokenAddress

Name: tokenAddress Function: getCurrentLiquidity
Num: -1
Den: -1
Address: 3
Norm: 6
LF: NATIVE
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_3(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_1(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_0', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_1(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_0'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: liquidityPoolBalance, Num: 1
Globalname: liquidityPoolBalance
End popogation

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_99(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_3(ILiquidityProviders), function:getCurrentLiquidity, arguments:['tokenAddress_1']  
High Call: getCurrentLiquidity
Running querryfc
Written func info: LiquidityProviders, getCurrentLiquidity
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-1, 3], [-1, -1], 6, "'u'", 'u', -1)
[i]Type for TMP_99

Name: TMP_99 Function: getCurrentLiquidity
Num: 3
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
liquidityProviders_4(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_3', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_2(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_1', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_2(mapping(address => uint256)) := ϕ(['incentivePool_1', 'incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityPoolBalance_1(uint256) := TMP_99(uint256)
asgn
init
end
_______________

Name: TMP_99 Function: getCurrentLiquidity
Num: 3
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for liquidityPoolBalance

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: 3
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: currentLiquidity, Num: 1
Globalname: currentLiquidity
End popogation

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_100(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_4(ILiquidityProviders), function:totalLPFees, arguments:['tokenAddress_1']  
High Call: totalLPFees
Running querryfc
Written func info: LiquidityProviders, totalLPFees
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-1, 3], [-1, -1], 6, "'u'", 'u', -1)
[i]Type for TMP_100

Name: TMP_100 Function: getCurrentLiquidity
Num: 3
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
liquidityProviders_5(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_4', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_3(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_2', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_3(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_2', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_101(uint256) = liquidityPoolBalance_1 (c)- TMP_100
init
end
init
end
3
-1
lnorm: 6 rnorm: 6
init
end
_______________

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: 3
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_101 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_101

Name: TMP_101 Function: getCurrentLiquidity
Num: 3
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_2(uint256) -> gasFeeAccumulatedByToken_3[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_2

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_102(uint256) = TMP_101 (c)- REF_2
init
end
init
end
init
end
_______________

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_102 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_102

Name: TMP_102 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_3(uint256) -> incentivePool_3[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_3

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_103(uint256) = TMP_102 (c)- REF_3
init
end
init
end
init
end
_______________

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_103 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_103

Name: TMP_103 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
currentLiquidity_1(uint256) := TMP_103(uint256)
asgn
init
end
_______________

Name: TMP_103 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: currentLiquidity Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for currentLiquidity

Name: currentLiquidity Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_128

Name: TMP_128 Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_16(ILiquidityProviders) := ϕ(['liquidityProviders_5'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getRewardAmount
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_14(mapping(address => uint256)) := ϕ(['incentivePool_3'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
currentLiquidity_1(uint256) := TMP_128(uint256)
asgn
init
end
_______________

Name: TMP_128 Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: currentLiquidity Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for currentLiquidity

Name: currentLiquidity Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: providedLiquidity, Num: 1
Globalname: providedLiquidity
End popogation

Name: liquidityProviders Function: getRewardAmount
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_129(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_16(ILiquidityProviders), function:getSuppliedLiquidityByToken, arguments:['tokenAddress_1']  
High Call: getSuppliedLiquidityByToken
Running querryfc
Written func info: LiquidityProviders, getSuppliedLiquidityByToken
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-1, 3], [-1, -1], 6, "'u'", 'u', -1)
[i]Type for TMP_129

Name: TMP_129 Function: getRewardAmount
Num: 3
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
liquidityProviders_17(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_16', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getRewardAmount
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_15(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_14', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
providedLiquidity_1(uint256) := TMP_129(uint256)
asgn
init
end
_______________

Name: TMP_129 Function: getRewardAmount
Num: 3
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: providedLiquidity Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for providedLiquidity

Name: providedLiquidity Function: getRewardAmount
Num: 3
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: currentLiquidity, Num: 1
Globalname: currentLiquidity
End popogation
TMP_130(bool) = currentLiquidity_1 < providedLiquidity_1
init
end
init
end
lnorm: u rnorm: 6
init
end
_______________

Name: providedLiquidity Function: getRewardAmount
Num: 3
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_130 Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
init
end
_______________

Name: providedLiquidity Function: getRewardAmount
Num: 3
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: currentLiquidity Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_130

Name: TMP_130 Function: getRewardAmount
Num: 3
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: liquidityDifference, Num: 1
Globalname: liquidityDifference
End popogation
TMP_131(uint256) = providedLiquidity_1 (c)- currentLiquidity_1
init
end
init
end
3
-1
lnorm: 6 rnorm: u
init
end
_______________

Name: providedLiquidity Function: getRewardAmount
Num: 3
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_131 Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_131

Name: TMP_131 Function: getRewardAmount
Num: 3
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityDifference_1(uint256) := TMP_131(uint256)
asgn
init
end
_______________

Name: TMP_131 Function: getRewardAmount
Num: 3
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef

Name: liquidityDifference Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for liquidityDifference

Name: liquidityDifference Function: getRewardAmount
Num: 3
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
TMP_132(bool) = amount_1 >= liquidityDifference_1
init
end
init
end
lnorm: u rnorm: 6
[i]Type for TMP_132

Name: TMP_132 Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: rewardAmount, Num: 1
Globalname: rewardAmount
End popogation
REF_13(uint256) -> incentivePool_15[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_13

Name: incentivePool Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
rewardAmount_1(uint256) := REF_13(uint256)
asgn
init
end
_______________

Name: incentivePool Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: rewardAmount Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for rewardAmount

Name: rewardAmount Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: rewardAmount, Num: 2
Globalname: rewardAmount
End popogation
REF_14(uint256) -> incentivePool_15[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_14

Name: incentivePool Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_133(uint256) = amount_1 (c)* REF_14
testing mul...
init
end
init
end

Name: amount Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: incentivePool Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: incentivePool Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_133 Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_133

Name: TMP_133 Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_134(uint256) = TMP_133 (c)* 10000000000
testing mul...
init
end
init
end

Name: TMP_133 Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: 10000000000 Function: None
Num: -1
Den: -1
Address: u
Norm: 10
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: 10
init
end
_______________

Name: 10000000000 Function: None
Num: -1
Den: -1
Address: u
Norm: 10
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_134 Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: 10
LF: None
Value: 10000000000
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_134

Name: TMP_134 Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: 10
LF: None
Value: 10000000000
Fields: 
Finance Type: undef
XXXX
TMP_135(uint256) = TMP_134 (c)/ liquidityDifference_1
init
end
init
end
lnorm: 10 rnorm: 6
init
end
Source address: u
init
end
init
end
lnorm: 10 rnorm: 6
init
end
Source address: u
-1
3
[i]Type for TMP_135

Name: TMP_135 Function: getRewardAmount
Num: -1
Den: 3
Address: u
Norm: 4
LF: None
Value: 10000000000
Fields: 
Finance Type: undef
XXXX
rewardAmount_2(uint256) := TMP_135(uint256)
asgn
init
end
_______________

Name: TMP_135 Function: getRewardAmount
Num: -1
Den: 3
Address: u
Norm: 4
LF: None
Value: 10000000000
Fields: 
Finance Type: undef

Name: rewardAmount Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10000000000
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for rewardAmount

Name: rewardAmount Function: getRewardAmount
Num: -1
Den: 3
Address: u
Norm: 4
LF: None
Value: 10000000000
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: rewardAmount, Num: 3
Globalname: rewardAmount
End popogation
TMP_136(uint256) = rewardAmount_2 (c)/ 10000000000
init
end
init
end
lnorm: 4 rnorm: 10
init
end
_______________

Name: rewardAmount Function: getRewardAmount
Num: -1
Den: 3
Address: u
Norm: 4
LF: None
Value: 10000000000
Fields: 
Finance Type: undef

Name: TMP_136 Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: -6
LF: None
Value: 1
Fields: 
Finance Type: undef
Source address: u
init
end
init
end
lnorm: 4 rnorm: 10
init
end
_______________

Name: rewardAmount Function: getRewardAmount
Num: -1
Den: 3
Address: u
Norm: 4
LF: None
Value: 10000000000
Fields: 
Finance Type: undef

Name: TMP_136 Function: getRewardAmount
Num: -1
Den: 3
Address: u
Norm: -6
LF: None
Value: 1
Fields: 
Finance Type: undef
-1
3
[i]Type for TMP_136

Name: TMP_136 Function: getRewardAmount
Num: -1
Den: 3
Address: u
Norm: -6
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
rewardAmount_3(uint256) := TMP_136(uint256)
asgn
init
end
_______________

Name: TMP_136 Function: getRewardAmount
Num: -1
Den: 3
Address: u
Norm: -6
LF: None
Value: 1
Fields: 
Finance Type: undef

Name: rewardAmount Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for rewardAmount

Name: rewardAmount Function: getRewardAmount
Num: -1
Den: 3
Address: u
Norm: -6
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Source address: u

Name: amount_1 Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Source address: 3

Name: tokenAddress_1 Function: getRewardAmount
Num: -1
Den: -1
Address: 3
Norm: 6
LF: NATIVE
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getRewardAmount
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
amount_1(uint256) := ϕ(['amount_1', 'msg.value'])
Phi
[i]Type for amount

Name: amount Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tokenAddress_1(address) := ϕ(['NATIVE_5', 'tokenAddress_1'])
Phi
[i]Type for tokenAddress

Name: tokenAddress Function: getRewardAmount
Num: -1
Den: -1
Address: 3
Norm: 6
LF: NATIVE
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_15(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getRewardAmount
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_13(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_0'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: currentLiquidity, Num: 1
Globalname: currentLiquidity
End popogation

Name: liquidityProviders Function: getRewardAmount
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_128(uint256) = INTERNAL_CALL, LiquidityPool.getCurrentLiquidity(address)(tokenAddress_1)
init
end
[[-1], [-1], 6, 'NATIVE', [], -1, 3, 'u']

Name: tokenAddress Function: getCurrentLiquidity
Num: -1
Den: -1
Address: 3
Norm: 6
LF: NATIVE
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
Source address: 3

Name: tokenAddress_1 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: 3
Norm: 6
LF: NATIVE
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
tokenAddress_1(address) := ϕ(['tokenAddress_1', 'tokenAddress_1'])
Phi
[i]Type for tokenAddress

Name: tokenAddress Function: getCurrentLiquidity
Num: -1
Den: -1
Address: 3
Norm: 6
LF: NATIVE
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_3(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_1(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_0', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_1(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_0'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: liquidityPoolBalance, Num: 1
Globalname: liquidityPoolBalance
End popogation

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_99(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_3(ILiquidityProviders), function:getCurrentLiquidity, arguments:['tokenAddress_1']  
High Call: getCurrentLiquidity
Running querryfc
Written func info: LiquidityProviders, getCurrentLiquidity
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-1, 3], [-1, -1], 6, "'u'", 'u', -1)
[i]Type for TMP_99

Name: TMP_99 Function: getCurrentLiquidity
Num: 3
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
liquidityProviders_4(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_3', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_2(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_1', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_2(mapping(address => uint256)) := ϕ(['incentivePool_1', 'incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityPoolBalance_1(uint256) := TMP_99(uint256)
asgn
init
end
_______________

Name: TMP_99 Function: getCurrentLiquidity
Num: 3
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for liquidityPoolBalance

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: 3
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: currentLiquidity, Num: 1
Globalname: currentLiquidity
End popogation

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_100(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_4(ILiquidityProviders), function:totalLPFees, arguments:['tokenAddress_1']  
High Call: totalLPFees
Running querryfc
Written func info: LiquidityProviders, totalLPFees
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-1, 3], [-1, -1], 6, "'u'", 'u', -1)
[i]Type for TMP_100

Name: TMP_100 Function: getCurrentLiquidity
Num: 3
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
liquidityProviders_5(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_4', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_3(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_2', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_3(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_2', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_101(uint256) = liquidityPoolBalance_1 (c)- TMP_100
init
end
init
end
3
-1
lnorm: 6 rnorm: 6
init
end
_______________

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: 3
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_101 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_101

Name: TMP_101 Function: getCurrentLiquidity
Num: 3
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_2(uint256) -> gasFeeAccumulatedByToken_3[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_2

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_102(uint256) = TMP_101 (c)- REF_2
init
end
init
end
init
end
_______________

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_102 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_102

Name: TMP_102 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_3(uint256) -> incentivePool_3[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_3

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_103(uint256) = TMP_102 (c)- REF_3
init
end
init
end
init
end
_______________

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_103 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_103

Name: TMP_103 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
currentLiquidity_1(uint256) := TMP_103(uint256)
asgn
init
end
_______________

Name: TMP_103 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: currentLiquidity Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for currentLiquidity

Name: currentLiquidity Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Source address: 3

Name: tokenAddress_1 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: 3
Norm: 6
LF: NATIVE
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
tokenAddress_1(address) := ϕ(['tokenAddress_1', 'tokenAddress_1'])
Phi
[i]Type for tokenAddress

Name: tokenAddress Function: getCurrentLiquidity
Num: -1
Den: -1
Address: 3
Norm: 6
LF: NATIVE
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_3(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_1(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_0', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_1(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_0'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: liquidityPoolBalance, Num: 1
Globalname: liquidityPoolBalance
End popogation

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_99(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_3(ILiquidityProviders), function:getCurrentLiquidity, arguments:['tokenAddress_1']  
High Call: getCurrentLiquidity
Running querryfc
Written func info: LiquidityProviders, getCurrentLiquidity
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-1, 3], [-1, -1], 6, "'u'", 'u', -1)
[i]Type for TMP_99

Name: TMP_99 Function: getCurrentLiquidity
Num: 3
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
liquidityProviders_4(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_3', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_2(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_1', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_2(mapping(address => uint256)) := ϕ(['incentivePool_1', 'incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityPoolBalance_1(uint256) := TMP_99(uint256)
asgn
init
end
_______________

Name: TMP_99 Function: getCurrentLiquidity
Num: 3
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for liquidityPoolBalance

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: 3
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: currentLiquidity, Num: 1
Globalname: currentLiquidity
End popogation

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_100(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_4(ILiquidityProviders), function:totalLPFees, arguments:['tokenAddress_1']  
High Call: totalLPFees
Running querryfc
Written func info: LiquidityProviders, totalLPFees
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-1, 3], [-1, -1], 6, "'u'", 'u', -1)
[i]Type for TMP_100

Name: TMP_100 Function: getCurrentLiquidity
Num: 3
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
liquidityProviders_5(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_4', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_3(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_2', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_3(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_2', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_101(uint256) = liquidityPoolBalance_1 (c)- TMP_100
init
end
init
end
3
-1
lnorm: 6 rnorm: 6
init
end
_______________

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: 3
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_101 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_101

Name: TMP_101 Function: getCurrentLiquidity
Num: 3
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_2(uint256) -> gasFeeAccumulatedByToken_3[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_2

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_102(uint256) = TMP_101 (c)- REF_2
init
end
init
end
init
end
_______________

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_102 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_102

Name: TMP_102 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_3(uint256) -> incentivePool_3[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_3

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_103(uint256) = TMP_102 (c)- REF_3
init
end
init
end
init
end
_______________

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_103 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_103

Name: TMP_103 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
currentLiquidity_1(uint256) := TMP_103(uint256)
asgn
init
end
_______________

Name: TMP_103 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: currentLiquidity Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for currentLiquidity

Name: currentLiquidity Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_128

Name: TMP_128 Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_16(ILiquidityProviders) := ϕ(['liquidityProviders_5'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getRewardAmount
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_14(mapping(address => uint256)) := ϕ(['incentivePool_3'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
currentLiquidity_1(uint256) := TMP_128(uint256)
asgn
init
end
_______________

Name: TMP_128 Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: currentLiquidity Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for currentLiquidity

Name: currentLiquidity Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: providedLiquidity, Num: 1
Globalname: providedLiquidity
End popogation

Name: liquidityProviders Function: getRewardAmount
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_129(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_16(ILiquidityProviders), function:getSuppliedLiquidityByToken, arguments:['tokenAddress_1']  
High Call: getSuppliedLiquidityByToken
Running querryfc
Written func info: LiquidityProviders, getSuppliedLiquidityByToken
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-1, 3], [-1, -1], 6, "'u'", 'u', -1)
[i]Type for TMP_129

Name: TMP_129 Function: getRewardAmount
Num: 3
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
liquidityProviders_17(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_16', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getRewardAmount
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_15(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_14', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
providedLiquidity_1(uint256) := TMP_129(uint256)
asgn
init
end
_______________

Name: TMP_129 Function: getRewardAmount
Num: 3
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: providedLiquidity Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for providedLiquidity

Name: providedLiquidity Function: getRewardAmount
Num: 3
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: currentLiquidity, Num: 1
Globalname: currentLiquidity
End popogation
TMP_130(bool) = currentLiquidity_1 < providedLiquidity_1
init
end
init
end
lnorm: u rnorm: 6
init
end
_______________

Name: providedLiquidity Function: getRewardAmount
Num: 3
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_130 Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
init
end
_______________

Name: providedLiquidity Function: getRewardAmount
Num: 3
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: currentLiquidity Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_130

Name: TMP_130 Function: getRewardAmount
Num: 3
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: liquidityDifference, Num: 1
Globalname: liquidityDifference
End popogation
TMP_131(uint256) = providedLiquidity_1 (c)- currentLiquidity_1
init
end
init
end
3
-1
lnorm: 6 rnorm: u
init
end
_______________

Name: providedLiquidity Function: getRewardAmount
Num: 3
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_131 Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_131

Name: TMP_131 Function: getRewardAmount
Num: 3
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityDifference_1(uint256) := TMP_131(uint256)
asgn
init
end
_______________

Name: TMP_131 Function: getRewardAmount
Num: 3
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef

Name: liquidityDifference Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for liquidityDifference

Name: liquidityDifference Function: getRewardAmount
Num: 3
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
TMP_132(bool) = amount_1 >= liquidityDifference_1
init
end
init
end
lnorm: u rnorm: 6
[i]Type for TMP_132

Name: TMP_132 Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: rewardAmount, Num: 1
Globalname: rewardAmount
End popogation
REF_13(uint256) -> incentivePool_15[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_13

Name: incentivePool Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
rewardAmount_1(uint256) := REF_13(uint256)
asgn
init
end
_______________

Name: incentivePool Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: rewardAmount Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for rewardAmount

Name: rewardAmount Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: rewardAmount, Num: 2
Globalname: rewardAmount
End popogation
REF_14(uint256) -> incentivePool_15[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_14

Name: incentivePool Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_133(uint256) = amount_1 (c)* REF_14
testing mul...
init
end
init
end

Name: amount Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: incentivePool Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: incentivePool Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_133 Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_133

Name: TMP_133 Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_134(uint256) = TMP_133 (c)* 10000000000
testing mul...
init
end
init
end

Name: TMP_133 Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: 10000000000 Function: None
Num: -1
Den: -1
Address: u
Norm: 10
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: 10
init
end
_______________

Name: 10000000000 Function: None
Num: -1
Den: -1
Address: u
Norm: 10
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_134 Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: 10
LF: None
Value: 10000000000
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_134

Name: TMP_134 Function: getRewardAmount
Num: -1
Den: -1
Address: u
Norm: 10
LF: None
Value: 10000000000
Fields: 
Finance Type: undef
XXXX
TMP_135(uint256) = TMP_134 (c)/ liquidityDifference_1
init
end
init
end
lnorm: 10 rnorm: 6
init
end
Source address: u
init
end
init
end
lnorm: 10 rnorm: 6
init
end
Source address: u
-1
3
[i]Type for TMP_135

Name: TMP_135 Function: getRewardAmount
Num: -1
Den: 3
Address: u
Norm: 4
LF: None
Value: 10000000000
Fields: 
Finance Type: undef
XXXX
rewardAmount_2(uint256) := TMP_135(uint256)
asgn
init
end
_______________

Name: TMP_135 Function: getRewardAmount
Num: -1
Den: 3
Address: u
Norm: 4
LF: None
Value: 10000000000
Fields: 
Finance Type: undef

Name: rewardAmount Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10000000000
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for rewardAmount

Name: rewardAmount Function: getRewardAmount
Num: -1
Den: 3
Address: u
Norm: 4
LF: None
Value: 10000000000
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: rewardAmount, Num: 3
Globalname: rewardAmount
End popogation
TMP_136(uint256) = rewardAmount_2 (c)/ 10000000000
init
end
init
end
lnorm: 4 rnorm: 10
init
end
_______________

Name: rewardAmount Function: getRewardAmount
Num: -1
Den: 3
Address: u
Norm: 4
LF: None
Value: 10000000000
Fields: 
Finance Type: undef

Name: TMP_136 Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: -6
LF: None
Value: 1
Fields: 
Finance Type: undef
Source address: u
init
end
init
end
lnorm: 4 rnorm: 10
init
end
_______________

Name: rewardAmount Function: getRewardAmount
Num: -1
Den: 3
Address: u
Norm: 4
LF: None
Value: 10000000000
Fields: 
Finance Type: undef

Name: TMP_136 Function: getRewardAmount
Num: -1
Den: 3
Address: u
Norm: -6
LF: None
Value: 1
Fields: 
Finance Type: undef
-1
3
[i]Type for TMP_136

Name: TMP_136 Function: getRewardAmount
Num: -1
Den: 3
Address: u
Norm: -6
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
rewardAmount_3(uint256) := TMP_136(uint256)
asgn
init
end
_______________

Name: TMP_136 Function: getRewardAmount
Num: -1
Den: 3
Address: u
Norm: -6
LF: None
Value: 1
Fields: 
Finance Type: undef

Name: rewardAmount Function: getRewardAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for rewardAmount

Name: rewardAmount Function: getRewardAmount
Num: -1
Den: 3
Address: u
Norm: -6
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_158

Name: TMP_158 Function: depositNative
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_23(ILiquidityProviders) := ϕ(['liquidityProviders_17'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: depositNative
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_21(mapping(address => uint256)) := ϕ(['incentivePool_15'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: depositNative
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
rewardAmount_1(uint256) := TMP_158(uint256)
asgn
init
end
_______________

Name: TMP_158 Function: depositNative
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: rewardAmount Function: depositNative
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for rewardAmount

Name: rewardAmount Function: depositNative
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: rewardAmount, Num: 1
Globalname: rewardAmount
End popogation
TMP_159(bool) = rewardAmount_1 != 0
[i]Type for TMP_159

Name: TMP_159 Function: depositNative
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation

Name: NATIVE Function: depositNative
Num: -1
Den: -1
Address: 3
Norm: 6
LF: NATIVE
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: depositNative
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid
HIGH_LEVEL_CALL, dest:liquidityProviders_23(ILiquidityProviders), function:increaseCurrentLiquidity, arguments:['NATIVE_6', 'msg.value']  
High Call: increaseCurrentLiquidity
NATIVE_7(address) := ϕ(['NATIVE_28', 'NATIVE_6', 'NATIVE_8', 'NATIVE_22', 'NATIVE_18', 'NATIVE_32'])
Phi
[i]Type for NATIVE

Name: NATIVE Function: depositNative
Num: -1
Den: -1
Address: 3
Norm: 6
LF: NATIVE
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_24(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_23', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: depositNative
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Source address: u
Name: toChainId, Num: 1
Globalname: toChainId
Name: rewardAmount, Num: 1
Globalname: rewardAmount
Source address: u
Name: tag, Num: 1
Globalname: tag
End popogation
TMP_162(address) = INTERNAL_CALL, LiquidityPool._msgSender()()
init
end
_______________

Name: PIC_33 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_162 Function: depositNative
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_162

Name: TMP_162 Function: depositNative
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_163(uint256) = msg.value (c)+ rewardAmount_1
init
end
init
end
init
end
_______________

Name: rewardAmount Function: depositNative
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_163 Function: depositNative
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_163

Name: TMP_163 Function: depositNative
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: rewardAmount, Num: 1
Globalname: rewardAmount
End popogation

Name: incentivePool Function: depositNative
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
REF_31(uint256) -> incentivePool_21[NATIVE_6]
INDEX
Source address: u
[i]Type for REF_31

Name: incentivePool Function: depositNative
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_32(uint256) -> incentivePool_21[NATIVE_6]
INDEX
Source address: u
[i]Type for REF_32

Name: incentivePool Function: depositNative
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_160(uint256) = REF_32 (c)- rewardAmount_1
init
end
init
end
init
end
_______________

Name: incentivePool Function: depositNative
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_160 Function: depositNative
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_160

Name: TMP_160 Function: depositNative
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_22(mapping(address => uint256)) := ϕ(['incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: depositNative
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_31 (->incentivePool_22) := TMP_160(uint256)
asgn
init
end
_______________

Name: TMP_160 Function: depositNative
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: REF_31 Function: depositNative
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_31

Name: REF_31 Function: depositNative
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
Source address: u



sendFundsToUser
Finding type for tokenAddress(address ... )
prev address? u
Head Addr: -982
    Norm: 6
    Set: {-982}
    Fin: NULL
Finding type for amount(uint256 ... )
Finding type for receiver(address ... )
prev address? u
Head Addr: -981
    Norm: 0
    Set: {-981}
    Fin: NULL
Finding type for depositHash(bytes ... )
Finding type for tokenGasPrice(uint256 ... )
Finding type for fromChainId(uint256 ... )
Param: 0
    num: []
    den: []
    norm: 6
    link: tokenAddress
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: []
    den: []
    norm: 0
    link: receiver
    fields: []
    fintype: -1
Param: 3
    num: []
    den: []
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 4
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 5
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1


NATIVE_9(address) := ϕ(['NATIVE_28', 'NATIVE_0', 'NATIVE_8', 'NATIVE_22', 'NATIVE_18', 'NATIVE_32'])
tokenManager_13(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_0', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
liquidityProviders_25(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
MODIFIER_CALL, ReentrancyGuardUpgradeable.nonReentrant()()
MODIFIER_CALL, LiquidityPool.onlyExecutor()()
MODIFIER_CALL, LiquidityPool.tokenChecks(address)(tokenAddress_1)
tokenManager_16(ITokenManager) := ϕ(['tokenManager_33'])
MODIFIER_CALL, PausableUpgradeable.whenNotPaused()()
TMP_167(uint256) = SOLIDITY_CALL gasleft()()
initialGas_1(uint256) := TMP_167(uint256)
TMP_168(ITokenManager.TokenConfig) = HIGH_LEVEL_CALL, dest:tokenManager_17(ITokenManager), function:getTransferConfig, arguments:['tokenAddress_1']  
NATIVE_14(address) := ϕ(['NATIVE_28', 'NATIVE_8', 'NATIVE_13', 'NATIVE_22', 'NATIVE_18', 'NATIVE_32'])
tokenManager_18(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_17', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
liquidityProviders_30(ILiquidityProviders) := ϕ(['liquidityProviders_29', 'liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
REF_35(uint256) -> TMP_168.min
TMP_169(bool) = REF_35 <= amount_1
TMP_170(ITokenManager.TokenConfig) = HIGH_LEVEL_CALL, dest:tokenManager_18(ITokenManager), function:getTransferConfig, arguments:['tokenAddress_1']  
NATIVE_15(address) := ϕ(['NATIVE_14', 'NATIVE_28', 'NATIVE_8', 'NATIVE_22', 'NATIVE_18', 'NATIVE_32'])
tokenManager_19(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_18', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
liquidityProviders_31(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_30', 'liquidityProviders_40', 'liquidityProviders_1'])
REF_37(uint256) -> TMP_170.max
TMP_171(bool) = REF_37 >= amount_1
TMP_172(bool) = TMP_169 && TMP_171
TMP_173(None) = SOLIDITY_CALL require(bool,string)(TMP_172,Withdraw amnt not in Cap limits)
TMP_174 = CONVERT 0 to address
TMP_175(bool) = receiver_1 != TMP_174
TMP_176(None) = SOLIDITY_CALL require(bool,string)(TMP_175,Bad receiver address)
TUPLE_0(bytes32,bool) = INTERNAL_CALL, LiquidityPool.checkHashStatus(address,uint256,address,bytes)(tokenAddress_1,amount_1,receiver_1,depositHash_1)
hashSendTransaction_1(bytes32)= UNPACK TUPLE_0 index: 0 
status_1(bool)= UNPACK TUPLE_0 index: 1 
TMP_177 = ! status_1 
TMP_178(None) = SOLIDITY_CALL require(bool,string)(TMP_177,Already Processed)
REF_38(bool) -> processedHash_0[hashSendTransaction_1]
processedHash_1(mapping(bytes32 => bool)) := ϕ(['processedHash_0'])
REF_38 (->processedHash_1) := True(bool)
TMP_179(uint256) = INTERNAL_CALL, LiquidityPool.getAmountToTransfer(uint256,address,uint256,uint256)(initialGas_1,tokenAddress_1,amount_1,tokenGasPrice_1)
liquidityProviders_33(ILiquidityProviders) := ϕ(['liquidityProviders_40'])
amountToTransfer_1(uint256) := TMP_179(uint256)
HIGH_LEVEL_CALL, dest:liquidityProviders_33(ILiquidityProviders), function:decreaseCurrentLiquidity, arguments:['tokenAddress_1', 'amountToTransfer_1']  
NATIVE_18(address) := ϕ(['NATIVE_17', 'NATIVE_28', 'NATIVE_8', 'NATIVE_22', 'NATIVE_18', 'NATIVE_32'])
liquidityProviders_34(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_33', 'liquidityProviders_40', 'liquidityProviders_1'])
TMP_181(bool) = tokenAddress_1 == NATIVE_18
CONDITION TMP_181
TMP_187 = CONVERT tokenAddress_1 to IERC20Upgradeable
TMP_188 = CONVERT this to address
TMP_189(uint256) = HIGH_LEVEL_CALL, dest:TMP_187(IERC20Upgradeable), function:balanceOf, arguments:['TMP_188']  
TMP_190(bool) = TMP_189 >= amountToTransfer_1
TMP_191(None) = SOLIDITY_CALL require(bool,string)(TMP_190,Not Enough Balance)
TMP_192 = CONVERT tokenAddress_1 to IERC20Upgradeable
LIBRARY_CALL, dest:SafeERC20Upgradeable, function:SafeERC20Upgradeable.safeTransfer(IERC20Upgradeable,address,uint256), arguments:['TMP_192', 'receiver_1', 'amountToTransfer_1'] 
Emit AssetSent(tokenAddress_1,amount_1,amountToTransfer_1,receiver_1,depositHash_1,fromChainId_1)
TMP_182 = CONVERT this to address
TMP_183(uint256) = SOLIDITY_CALL balance(address)(TMP_182)
TMP_184(bool) = TMP_183 >= amountToTransfer_1
TMP_185(None) = SOLIDITY_CALL require(bool,string)(TMP_184,Not Enough Balance)
TUPLE_1(bool,bytes) = LOW_LEVEL_CALL, dest:receiver_1, function:call, arguments:[''] value:amountToTransfer_1 
success_1(bool)= UNPACK TUPLE_1 index: 0 
TMP_186(None) = SOLIDITY_CALL require(bool,string)(success_1,Native Transfer Failed)


Propogating parameters and globals to SSA variables...
End popogation
Name: NATIVE, Num: 9
Globalname: NATIVE
global...

Name: PIC_13 Function: None
Num: -1
Den: -1
Address: 3
Norm: 6
LF: NATIVE
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: None Function: None
Num: -1
Den: -1
Address: 3
Norm: 6
LF: NATIVE
Value: u
Fields: 
Finance Type: undef
Phid
Name: tokenManager, Num: 13
Globalname: tokenManager
global...

Name: tokenManager Function: initialize
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Source address: -996

Name: None Function: None
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid
Name: liquidityProviders, Num: 25
Globalname: liquidityProviders
global...

Name: liquidityProviders Function: setLiquidityProviders
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Source address: -993

Name: None Function: None
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid
NATIVE_9(address) := ϕ(['NATIVE_28', 'NATIVE_0', 'NATIVE_8', 'NATIVE_22', 'NATIVE_18', 'NATIVE_32'])
Phi
[i]Type for NATIVE

Name: NATIVE Function: sendFundsToUser
Num: -1
Den: -1
Address: 3
Norm: 6
LF: NATIVE
Value: u
Fields: 
Finance Type: undef
XXXX
tokenManager_13(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_0', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: sendFundsToUser
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_25(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: sendFundsToUser
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, ReentrancyGuardUpgradeable.nonReentrant()()
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, LiquidityPool.onlyExecutor()()
Propogating parameters and globals to SSA variables...
End popogation
Name: executorManager, Num: 4
Globalname: executorManager
global...

Name: executorManager Function: setExecutorManager
Num: -1
Den: -1
Address: -992
Norm: 0
LF: ExecutorManager
Value: u
Fields: 
Finance Type: undef
Source address: -992

Name: None Function: None
Num: -1
Den: -1
Address: -992
Norm: 0
LF: ExecutorManager
Value: u
Fields: 
Finance Type: undef
Phid
executorManager_4(IExecutorManager) := ϕ(['executorManager_3', 'executorManager_6', 'executorManager_0', 'executorManager_1'])
Phi
[i]Type for executorManager

Name: executorManager Function: onlyExecutor
Num: -1
Den: -1
Address: -992
Norm: 0
LF: ExecutorManager
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: executorManager, Num: 5
Globalname: executorManager
global...

Name: executorManager Function: setExecutorManager
Num: -1
Den: -1
Address: -992
Norm: 0
LF: ExecutorManager
Value: u
Fields: 
Finance Type: undef
Source address: -992
End popogation
Name: executorManager, Num: 6
Globalname: executorManager
global...

Name: executorManager Function: setExecutorManager
Num: -1
Den: -1
Address: -992
Norm: 0
LF: ExecutorManager
Value: u
Fields: 
Finance Type: undef
Source address: -992

Name: None Function: None
Num: -1
Den: -1
Address: -992
Norm: 0
LF: ExecutorManager
Value: u
Fields: 
Finance Type: undef
Phid
TMP_312(address) = INTERNAL_CALL, LiquidityPool._msgSender()()
init
end
_______________

Name: PIC_33 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_312 Function: onlyExecutor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_312

Name: TMP_312 Function: onlyExecutor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_313(bool) = HIGH_LEVEL_CALL, dest:executorManager_5(IExecutorManager), function:getExecutorStatus, arguments:['TMP_312']  
High Call: getExecutorStatus
Running querryfc
[i]Type for TMP_313

Name: TMP_313 Function: onlyExecutor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
executorManager_6(IExecutorManager) := ϕ(['executorManager_3', 'executorManager_6', 'executorManager_5', 'executorManager_1'])
Phi
[i]Type for executorManager

Name: executorManager Function: onlyExecutor
Num: -1
Den: -1
Address: -992
Norm: 0
LF: ExecutorManager
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_314(None) = SOLIDITY_CALL require(bool,string)(TMP_313,Only executor is allowed)
[i]Type for TMP_314

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation

Name: executorManager Function: onlyExecutor
Num: -1
Den: -1
Address: -992
Norm: 0
LF: ExecutorManager
Value: u
Fields: 
Finance Type: undef
Phid
executorManager_4(IExecutorManager) := ϕ(['executorManager_3', 'executorManager_6', 'executorManager_0', 'executorManager_1'])
Phi
[i]Type for executorManager

Name: executorManager Function: onlyExecutor
Num: -1
Den: -1
Address: -992
Norm: 0
LF: ExecutorManager
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation

Name: executorManager Function: onlyExecutor
Num: -1
Den: -1
Address: -992
Norm: 0
LF: ExecutorManager
Value: u
Fields: 
Finance Type: undef
Phid
TMP_312(address) = INTERNAL_CALL, LiquidityPool._msgSender()()
init
end
_______________

Name: PIC_33 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_312 Function: onlyExecutor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_312

Name: TMP_312 Function: onlyExecutor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_313(bool) = HIGH_LEVEL_CALL, dest:executorManager_5(IExecutorManager), function:getExecutorStatus, arguments:['TMP_312']  
High Call: getExecutorStatus
Running querryfc
[i]Type for TMP_313

Name: TMP_313 Function: onlyExecutor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
executorManager_6(IExecutorManager) := ϕ(['executorManager_3', 'executorManager_6', 'executorManager_5', 'executorManager_1'])
Phi
[i]Type for executorManager

Name: executorManager Function: onlyExecutor
Num: -1
Den: -1
Address: -992
Norm: 0
LF: ExecutorManager
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_314(None) = SOLIDITY_CALL require(bool,string)(TMP_313,Only executor is allowed)
[i]Type for TMP_314

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Source address: -982
End popogation
Name: tokenManager, Num: 16
Globalname: tokenManager
global...

Name: tokenManager Function: initialize
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Source address: -996

Name: None Function: None
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid
MODIFIER_CALL, LiquidityPool.tokenChecks(address)(tokenAddress_1)
init
end
[[], [], 6, 'tokenAddress', [], -1, -982, 'u']

Name: tokenAddress Function: None
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
Source address: -982

Name: tokenAddress_1 Function: tokenChecks
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
Phid

Name: tokenManager Function: tokenChecks
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid
tokenAddress_1(address) := ϕ(['tokenAddress_1', 'tokenAddress_1'])
Phi
[i]Type for tokenAddress

Name: tokenAddress Function: tokenChecks
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
XXXX
tokenManager_32(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_0', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: tokenChecks
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_319 = CONVERT 0 to address
Converting 0

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
_______________

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_319 Function: tokenChecks
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_319

Name: TMP_319 Function: tokenChecks
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_320(bool) = tokenAddress_1 != TMP_319
[i]Type for TMP_320

Name: TMP_320 Function: tokenChecks
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_321(None) = SOLIDITY_CALL require(bool,string)(TMP_320,Token address cannot be 0)
[i]Type for TMP_321

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation

Name: tokenManager Function: tokenChecks
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid
TMP_322(ITokenManager.TokenInfo) = HIGH_LEVEL_CALL, dest:tokenManager_32(ITokenManager), function:getTokensInfo, arguments:['tokenAddress_1']  
High Call: getTokensInfo
Running querryfc
Written func info: TokenManager, getTokensInfo
[i]Type for TMP_322

Name: TMP_322 Function: tokenChecks
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: supportedToken
Finance Type: undef
XXXX
tokenManager_33(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_7', 'tokenManager_1', 'tokenManager_32', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: tokenChecks
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
REF_88(bool) -> TMP_322.supportedToken
MEMBER
init
end
init
end
init
end
_______________

Name: TMP_322.supportedToken Function: tokenChecks
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: supportedToken Function: tokenChecks
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for REF_88

Name: TMP_322.supportedToken Function: tokenChecks
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: TMP_322, Field: supportedToken
#################
Member: 
Name: TMP_322 Function: tokenChecks
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: supportedToken
Finance Type: undef
Fieldf: 
Name: supportedToken Function: tokenChecks
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: TMP_322.supportedToken Function: tokenChecks
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: supportedToken Function: tokenChecks
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_323(None) = SOLIDITY_CALL require(bool,string)(REF_88,Token not supported)
[i]Type for TMP_323

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Source address: -982

Name: tokenAddress_1 Function: tokenChecks
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
Phid

Name: tokenManager Function: tokenChecks
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid
tokenAddress_1(address) := ϕ(['tokenAddress_1', 'tokenAddress_1'])
Phi
[i]Type for tokenAddress

Name: tokenAddress Function: tokenChecks
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
XXXX
tokenManager_32(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_0', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: tokenChecks
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_319 = CONVERT 0 to address
Converting 0

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
_______________

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_319 Function: tokenChecks
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_319

Name: TMP_319 Function: tokenChecks
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_320(bool) = tokenAddress_1 != TMP_319
[i]Type for TMP_320

Name: TMP_320 Function: tokenChecks
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_321(None) = SOLIDITY_CALL require(bool,string)(TMP_320,Token address cannot be 0)
[i]Type for TMP_321

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation

Name: tokenManager Function: tokenChecks
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid
TMP_322(ITokenManager.TokenInfo) = HIGH_LEVEL_CALL, dest:tokenManager_32(ITokenManager), function:getTokensInfo, arguments:['tokenAddress_1']  
High Call: getTokensInfo
Running querryfc
Written func info: TokenManager, getTokensInfo
[i]Type for TMP_322

Name: TMP_322 Function: tokenChecks
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: supportedToken
Finance Type: undef
XXXX
tokenManager_33(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_7', 'tokenManager_1', 'tokenManager_32', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: tokenChecks
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
REF_88(bool) -> TMP_322.supportedToken
MEMBER
init
end
init
end
init
end
_______________

Name: TMP_322.supportedToken Function: tokenChecks
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: supportedToken Function: tokenChecks
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for REF_88

Name: TMP_322.supportedToken Function: tokenChecks
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: TMP_322, Field: supportedToken
#################
Member: 
Name: TMP_322 Function: tokenChecks
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: supportedToken
Finance Type: undef
Fieldf: 
Name: supportedToken Function: tokenChecks
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: TMP_322.supportedToken Function: tokenChecks
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: supportedToken Function: tokenChecks
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_323(None) = SOLIDITY_CALL require(bool,string)(REF_88,Token not supported)
[i]Type for TMP_323

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
tokenManager_16(ITokenManager) := ϕ(['tokenManager_33'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: sendFundsToUser
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, PausableUpgradeable.whenNotPaused()()
Propogating parameters and globals to SSA variables...
Name: initialGas, Num: 1
Globalname: initialGas
End popogation
TMP_167(uint256) = SOLIDITY_CALL gasleft()()
[i]Type for TMP_167

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
initialGas_1(uint256) := TMP_167(uint256)
asgn
init
end
_______________

Name: TMP_167 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: initialGas Function: sendFundsToUser
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for initialGas

Name: initialGas Function: sendFundsToUser
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Source address: u
Name: amount, Num: 1
Globalname: amount
Name: tokenManager, Num: 18
Globalname: tokenManager
global...

Name: tokenManager Function: initialize
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Source address: -996
Name: tokenManager, Num: 17
Globalname: tokenManager
global...

Name: tokenManager Function: initialize
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Source address: -996
End popogation
Name: NATIVE, Num: 14
Globalname: NATIVE
global...

Name: PIC_13 Function: None
Num: -1
Den: -1
Address: 3
Norm: 6
LF: NATIVE
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: None Function: None
Num: -1
Den: -1
Address: 3
Norm: 6
LF: NATIVE
Value: u
Fields: 
Finance Type: undef
Phid

Name: None Function: None
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid
Name: liquidityProviders, Num: 30
Globalname: liquidityProviders
global...

Name: liquidityProviders Function: setLiquidityProviders
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Source address: -993

Name: None Function: None
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid
Name: NATIVE, Num: 15
Globalname: NATIVE
global...

Name: PIC_13 Function: None
Num: -1
Den: -1
Address: 3
Norm: 6
LF: NATIVE
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: None Function: None
Num: -1
Den: -1
Address: 3
Norm: 6
LF: NATIVE
Value: u
Fields: 
Finance Type: undef
Phid
Name: tokenManager, Num: 19
Globalname: tokenManager
global...

Name: tokenManager Function: initialize
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Source address: -996

Name: None Function: None
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid
Name: liquidityProviders, Num: 31
Globalname: liquidityProviders
global...

Name: liquidityProviders Function: setLiquidityProviders
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Source address: -993

Name: None Function: None
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid
TMP_168(ITokenManager.TokenConfig) = HIGH_LEVEL_CALL, dest:tokenManager_17(ITokenManager), function:getTransferConfig, arguments:['tokenAddress_1']  
High Call: getTransferConfig
Running querryfc
Written func info: TokenManager, getTransferConfig
[i]Type for TMP_168

Name: TMP_168 Function: sendFundsToUser
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
NATIVE_14(address) := ϕ(['NATIVE_28', 'NATIVE_8', 'NATIVE_13', 'NATIVE_22', 'NATIVE_18', 'NATIVE_32'])
Phi
[i]Type for NATIVE

Name: NATIVE Function: sendFundsToUser
Num: -1
Den: -1
Address: 3
Norm: 6
LF: NATIVE
Value: u
Fields: 
Finance Type: undef
XXXX
tokenManager_18(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_17', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: sendFundsToUser
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_30(ILiquidityProviders) := ϕ(['liquidityProviders_29', 'liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: sendFundsToUser
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
REF_35(uint256) -> TMP_168.min
MEMBER
init
end
init
end
OUT KEY: sendFundsToUser_TMP_168_min
OUT KEY: sendFundsToUser_TMP_min
FTT: None
No field found
[i]Type for REF_35

Name: TMP_168.min Function: sendFundsToUser
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: TMP_168, Field: min
#################
Member: 
Name: TMP_168 Function: sendFundsToUser
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Fieldf: 
Name: min Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: TMP_168.min Function: sendFundsToUser
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: False
Source address: u
Finance type key: (-1, -1)
Add new member...
XXXX
TMP_169(bool) = REF_35 <= amount_1
init
end
init
end
lnorm: u rnorm: u
init
end
_______________

Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_169 Function: sendFundsToUser
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
_______________

Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_168.min Function: sendFundsToUser
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_169

Name: TMP_169 Function: sendFundsToUser
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_170(ITokenManager.TokenConfig) = HIGH_LEVEL_CALL, dest:tokenManager_18(ITokenManager), function:getTransferConfig, arguments:['tokenAddress_1']  
High Call: getTransferConfig
Running querryfc
Written func info: TokenManager, getTransferConfig
[i]Type for TMP_170

Name: TMP_170 Function: sendFundsToUser
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
NATIVE_15(address) := ϕ(['NATIVE_14', 'NATIVE_28', 'NATIVE_8', 'NATIVE_22', 'NATIVE_18', 'NATIVE_32'])
Phi
[i]Type for NATIVE

Name: NATIVE Function: sendFundsToUser
Num: -1
Den: -1
Address: 3
Norm: 6
LF: NATIVE
Value: u
Fields: 
Finance Type: undef
XXXX
tokenManager_19(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_18', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: sendFundsToUser
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_31(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_30', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: sendFundsToUser
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
REF_37(uint256) -> TMP_170.max
MEMBER
init
end
init
end
OUT KEY: sendFundsToUser_TMP_170_max
OUT KEY: sendFundsToUser_TMP_max
FTT: None
No field found
[i]Type for REF_37

Name: TMP_170.max Function: sendFundsToUser
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: TMP_170, Field: max
#################
Member: 
Name: TMP_170 Function: sendFundsToUser
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Fieldf: 
Name: max Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: TMP_170.max Function: sendFundsToUser
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: False
Source address: u
Finance type key: (-1, -1)
Add new member...
XXXX
TMP_171(bool) = REF_37 >= amount_1
init
end
init
end
lnorm: u rnorm: u
init
end
_______________

Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_171 Function: sendFundsToUser
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
_______________

Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_170.max Function: sendFundsToUser
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_171

Name: TMP_171 Function: sendFundsToUser
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_172(bool) = TMP_169 && TMP_171
[i]Type for TMP_172

Name: TMP_172 Function: sendFundsToUser
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_173(None) = SOLIDITY_CALL require(bool,string)(TMP_172,Withdraw amnt not in Cap limits)
[i]Type for TMP_173

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Source address: -981
End popogation
TMP_174 = CONVERT 0 to address
Converting 0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
_______________

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_174 Function: sendFundsToUser
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_174

Name: TMP_174 Function: sendFundsToUser
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_175(bool) = receiver_1 != TMP_174
[i]Type for TMP_175

Name: TMP_175 Function: sendFundsToUser
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_176(None) = SOLIDITY_CALL require(bool,string)(TMP_175,Bad receiver address)
[i]Type for TMP_176

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Source address: u
Name: amount, Num: 1
Globalname: amount
Source address: u
Name: depositHash, Num: 1
Globalname: depositHash
Name: status, Num: 1
Globalname: status
Name: hashSendTransaction, Num: 1
Globalname: hashSendTransaction
End popogation
TUPLE_0(bytes32,bool) = INTERNAL_CALL, LiquidityPool.checkHashStatus(address,uint256,address,bytes)(tokenAddress_1,amount_1,receiver_1,depositHash_1)
init
end
init
end
init
end
init
end
[[], [], 6, 'tokenAddress', [], -1, -982, 'u']

Name: tokenAddress Function: None
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
[[], [], 'u', None, [], -1, 'u', 'u']

Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[], [], 0, 'receiver', [], -1, -981, 'u']

Name: receiver Function: None
Num: 
Den: 
Address: -981
Norm: 0
LF: receiver
Value: u
Fields: 
Finance Type: undef
[[], [], 'u', None, [], -1, 'u', 'u']

Name: depositHash Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
Source address: -982

Name: tokenAddress_1 Function: None
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
Phid
Source address: u
Name: amount, Num: 1
Globalname: amount

Name: amount_1 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Source address: -981

Name: receiver_1 Function: None
Num: 
Den: 
Address: -981
Norm: 0
LF: receiver
Value: u
Fields: 
Finance Type: undef
Phid
Source address: u
Name: depositHash, Num: 1
Globalname: depositHash

Name: depositHash_1 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: processedHash, Num: 2
Globalname: processedHash
global...

Name: PIC_12 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
tokenAddress_1(address) := ϕ(['tokenAddress_1'])
Phi
[i]Type for tokenAddress

Name: tokenAddress Function: checkHashStatus
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount_1'])
Phi

Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for amount

Name: amount Function: checkHashStatus
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
receiver_1(address) := ϕ(['receiver_1'])
Phi
[i]Type for receiver

Name: receiver Function: checkHashStatus
Num: 
Den: 
Address: -981
Norm: 0
LF: receiver
Value: u
Fields: 
Finance Type: undef
XXXX
depositHash_1(bytes) := ϕ(['depositHash_1'])
Phi

Name: depositHash Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for depositHash

Name: depositHash Function: checkHashStatus
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
processedHash_2(mapping(bytes32 => bool)) := ϕ(['processedHash_0', 'processedHash_2', 'processedHash_1'])
Phi
[i]Type for processedHash

Name: processedHash Function: checkHashStatus
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Source address: u
Name: amount, Num: 1
Globalname: amount
Source address: u
Name: depositHash, Num: 1
Globalname: depositHash
Name: hashSendTransaction, Num: 1
Globalname: hashSendTransaction
End popogation
TMP_241(bytes32) = SOLIDITY_CALL keccak256(bytes)(depositHash_1)
[i]Type for TMP_241

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_242(bytes) = SOLIDITY_CALL abi.encode()(tokenAddress_1,amount_1,receiver_1,TMP_241)
[i]Type for TMP_242

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_243(bytes32) = SOLIDITY_CALL keccak256(bytes)(TMP_242)
[i]Type for TMP_243

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
hashSendTransaction_1(bytes32) := TMP_243(bytes32)
asgn
init
end
_______________

Name: TMP_243 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: hashSendTransaction Function: checkHashStatus
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for hashSendTransaction

Name: hashSendTransaction Function: checkHashStatus
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: hashSendTransaction, Num: 1
Globalname: hashSendTransaction
Name: status, Num: 1
Globalname: status
End popogation
REF_66(bool) -> processedHash_2[hashSendTransaction_1]
INDEX
[i]Type for REF_66

Name: processedHash Function: checkHashStatus
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
status_1(bool) := REF_66(bool)
asgn
init
end
_______________

Name: processedHash Function: checkHashStatus
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: status Function: checkHashStatus
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for status

Name: status Function: checkHashStatus
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: hashSendTransaction, Num: 1
Globalname: hashSendTransaction
End popogation
RETURN hashSendTransaction_1,status_1
RETURN
init
end

Name: hashSendTransaction Function: checkHashStatus
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
init
end

Name: status Function: checkHashStatus
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
Source address: -982

Name: tokenAddress_1 Function: checkHashStatus
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
Phid
Source address: u
Name: amount, Num: 1
Globalname: amount

Name: amount_1 Function: checkHashStatus
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Source address: -981

Name: receiver_1 Function: checkHashStatus
Num: 
Den: 
Address: -981
Norm: 0
LF: receiver
Value: u
Fields: 
Finance Type: undef
Phid
Source address: u
Name: depositHash, Num: 1
Globalname: depositHash

Name: depositHash_1 Function: checkHashStatus
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: processedHash Function: checkHashStatus
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
tokenAddress_1(address) := ϕ(['tokenAddress_1'])
Phi
[i]Type for tokenAddress

Name: tokenAddress Function: checkHashStatus
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount_1'])
Phi

Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for amount

Name: amount Function: checkHashStatus
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
receiver_1(address) := ϕ(['receiver_1'])
Phi
[i]Type for receiver

Name: receiver Function: checkHashStatus
Num: 
Den: 
Address: -981
Norm: 0
LF: receiver
Value: u
Fields: 
Finance Type: undef
XXXX
depositHash_1(bytes) := ϕ(['depositHash_1'])
Phi

Name: depositHash Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for depositHash

Name: depositHash Function: checkHashStatus
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
processedHash_2(mapping(bytes32 => bool)) := ϕ(['processedHash_0', 'processedHash_2', 'processedHash_1'])
Phi
[i]Type for processedHash

Name: processedHash Function: checkHashStatus
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Source address: u
Name: amount, Num: 1
Globalname: amount
Source address: u
Name: depositHash, Num: 1
Globalname: depositHash
Name: hashSendTransaction, Num: 1
Globalname: hashSendTransaction
End popogation
TMP_241(bytes32) = SOLIDITY_CALL keccak256(bytes)(depositHash_1)
[i]Type for TMP_241

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_242(bytes) = SOLIDITY_CALL abi.encode()(tokenAddress_1,amount_1,receiver_1,TMP_241)
[i]Type for TMP_242

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_243(bytes32) = SOLIDITY_CALL keccak256(bytes)(TMP_242)
[i]Type for TMP_243

Name: TMP_243 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
hashSendTransaction_1(bytes32) := TMP_243(bytes32)
asgn
init
end
_______________

Name: TMP_243 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: hashSendTransaction Function: checkHashStatus
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for hashSendTransaction

Name: hashSendTransaction Function: checkHashStatus
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: hashSendTransaction, Num: 1
Globalname: hashSendTransaction
Name: status, Num: 1
Globalname: status
End popogation
REF_66(bool) -> processedHash_2[hashSendTransaction_1]
INDEX
[i]Type for REF_66

Name: processedHash Function: checkHashStatus
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
status_1(bool) := REF_66(bool)
asgn
init
end
_______________

Name: processedHash Function: checkHashStatus
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: status Function: checkHashStatus
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for status

Name: status Function: checkHashStatus
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: hashSendTransaction, Num: 1
Globalname: hashSendTransaction
End popogation
RETURN hashSendTransaction_1,status_1
RETURN
init
end

Name: hashSendTransaction Function: checkHashStatus
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
init
end

Name: status Function: checkHashStatus
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TUPLE_0

Name: TUPLE_0 Function: sendFundsToUser
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
hashSendTransaction_1(bytes32)= UNPACK TUPLE_0 index: 0 
([], [], 'u', 'u', 'u', -1)
[i]Type for hashSendTransaction

Name: hashSendTransaction Function: sendFundsToUser
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
status_1(bool)= UNPACK TUPLE_0 index: 1 
([-1], [-1], 'u', 'u', 'u', -1)
[i]Type for status

Name: status Function: sendFundsToUser
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_177 = ! status_1 
[i]Type for TMP_177

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_178(None) = SOLIDITY_CALL require(bool,string)(TMP_177,Already Processed)
[i]Type for TMP_178

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: hashSendTransaction, Num: 1
Globalname: hashSendTransaction
Name: processedHash, Num: 1
Globalname: processedHash
global...

Name: PIC_12 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
End popogation

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
REF_38(bool) -> processedHash_0[hashSendTransaction_1]
INDEX
[i]Type for REF_38

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
processedHash_1(mapping(bytes32 => bool)) := ϕ(['processedHash_0'])
Phi
[i]Type for processedHash

Name: processedHash Function: sendFundsToUser
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_38 (->processedHash_1) := True(bool)
asgn
init
end
_______________

Name: True Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef

Name: REF_38 Function: sendFundsToUser
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_38

Name: REF_38 Function: sendFundsToUser
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: True
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
Source address: u
Propogating parameters and globals to SSA variables...
Source address: u
Name: amount, Num: 1
Globalname: amount
Name: initialGas, Num: 1
Globalname: initialGas
Source address: u
Name: tokenGasPrice, Num: 1
Globalname: tokenGasPrice
Name: amountToTransfer, Num: 1
Globalname: amountToTransfer
End popogation
Name: liquidityProviders, Num: 33
Globalname: liquidityProviders
global...

Name: liquidityProviders Function: setLiquidityProviders
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Source address: -993

Name: None Function: None
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid
TMP_179(uint256) = INTERNAL_CALL, LiquidityPool.getAmountToTransfer(uint256,address,uint256,uint256)(initialGas_1,tokenAddress_1,amount_1,tokenGasPrice_1)
init
end
init
end
init
end
init
end
[[], [], 'u', None, [], -1, 'u', 'u']

Name: initialGas Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[], [], 6, 'tokenAddress', [], -1, -982, 'u']

Name: tokenAddress Function: None
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
[[], [], 'u', None, [], -1, 'u', 'u']

Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[], [], 'u', None, [], -1, 'u', 'u']

Name: tokenGasPrice Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
Source address: u
Name: initialGas, Num: 1
Globalname: initialGas

Name: initialGas_1 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Source address: -982

Name: tokenAddress_1 Function: None
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
Phid
Source address: u
Name: amount, Num: 1
Globalname: amount

Name: amount_1 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Source address: u
Name: tokenGasPrice, Num: 1
Globalname: tokenGasPrice

Name: tokenGasPrice_1 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: BASE_DIVISOR, Num: 1
Globalname: BASE_DIVISOR
global...

Name: PIC_4 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: baseGas, Num: 3
Globalname: baseGas
global...

Name: baseGas Function: setBaseGas
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: tokenManager, Num: 20
Globalname: tokenManager
global...

Name: tokenManager Function: initialize
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Source address: -996

Name: None Function: None
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid
Name: liquidityProviders, Num: 35
Globalname: liquidityProviders
global...

Name: liquidityProviders Function: setLiquidityProviders
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Source address: -993

Name: None Function: None
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid
Name: gasFeeAccumulatedByToken, Num: 4
Globalname: gasFeeAccumulatedByToken
global...

Name: PIC_1 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: gasFeeAccumulated, Num: 1
Globalname: gasFeeAccumulated
global...

Name: PIC_6 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: incentivePool, Num: 23
Globalname: incentivePool
global...

Name: incentivePool Function: depositNative
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
initialGas_1(uint256) := ϕ(['initialGas_1'])
Phi

Name: initialGas Function: sendFundsToUser
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for initialGas

Name: initialGas Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tokenAddress_1(address) := ϕ(['tokenAddress_1'])
Phi
[i]Type for tokenAddress

Name: tokenAddress Function: getAmountToTransfer
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount_1'])
Phi

Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for amount

Name: amount Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tokenGasPrice_1(uint256) := ϕ(['tokenGasPrice_1'])
Phi

Name: tokenGasPrice Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for tokenGasPrice

Name: tokenGasPrice Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
BASE_DIVISOR_1(uint256) := ϕ(['BASE_DIVISOR_3', 'BASE_DIVISOR_5', 'BASE_DIVISOR_0'])
Phi
[i]Type for BASE_DIVISOR

Name: BASE_DIVISOR Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
baseGas_3(uint256) := ϕ(['baseGas_2', 'baseGas_1', 'baseGas_0', 'baseGas_9'])
Phi
[i]Type for baseGas

Name: baseGas Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tokenManager_20(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_0', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getAmountToTransfer
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_35(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getAmountToTransfer
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_4(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_0', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulated_1(mapping(address => mapping(address => uint256))) := ϕ(['gasFeeAccumulated_0', 'gasFeeAccumulated_10', 'gasFeeAccumulated_16', 'gasFeeAccumulated_22'])
Phi
[i]Type for gasFeeAccumulated

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_23(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_0'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Source address: u
Name: amount, Num: 1
Globalname: amount
Name: transferFeePerc, Num: 1
Globalname: transferFeePerc
End popogation
Name: tokenManager, Num: 21
Globalname: tokenManager
global...

Name: tokenManager Function: initialize
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Source address: -996

Name: None Function: None
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid
Name: liquidityProviders, Num: 36
Globalname: liquidityProviders
global...

Name: liquidityProviders Function: setLiquidityProviders
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Source address: -993

Name: None Function: None
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid
TMP_199(uint256) = INTERNAL_CALL, LiquidityPool.getTransferFee(address,uint256)(tokenAddress_1,amount_1)
init
end
init
end
[[], [], 6, 'tokenAddress', [], -1, -982, 'u']

Name: tokenAddress Function: None
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
[[], [], 'u', None, [], -1, 'u', 'u']

Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
Source address: -982

Name: tokenAddress_1 Function: None
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
Phid
Source address: u
Name: amount, Num: 1
Globalname: amount

Name: amount_1 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: tokenManager, Num: 27
Globalname: tokenManager
global...

Name: tokenManager Function: initialize
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Source address: -996

Name: None Function: None
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid
Name: liquidityProviders, Num: 41
Globalname: liquidityProviders
global...

Name: liquidityProviders Function: setLiquidityProviders
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Source address: -993

Name: None Function: None
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid
tokenAddress_1(address) := ϕ(['tokenAddress_1'])
Phi
[i]Type for tokenAddress

Name: tokenAddress Function: getTransferFee
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount_1'])
Phi

Name: amount_1 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for amount

Name: amount Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tokenManager_27(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_0', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_41(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getTransferFee
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: currentLiquidity, Num: 1
Globalname: currentLiquidity
End popogation
Name: liquidityProviders, Num: 42
Globalname: liquidityProviders
global...

Name: liquidityProviders Function: setLiquidityProviders
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Source address: -993

Name: None Function: None
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid
TMP_228(uint256) = INTERNAL_CALL, LiquidityPool.getCurrentLiquidity(address)(tokenAddress_1)
init
end
[[], [], 6, 'tokenAddress', [], -1, -982, 'u']

Name: tokenAddress Function: getCurrentLiquidity
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
Source address: -982

Name: tokenAddress_1 Function: getCurrentLiquidity
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
tokenAddress_1(address) := ϕ(['tokenAddress_1', 'tokenAddress_1'])
Phi
[i]Type for tokenAddress

Name: tokenAddress Function: getCurrentLiquidity
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_3(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_1(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_0', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_1(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_0'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: liquidityPoolBalance, Num: 1
Globalname: liquidityPoolBalance
End popogation

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_99(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_3(ILiquidityProviders), function:getCurrentLiquidity, arguments:['tokenAddress_1']  
High Call: getCurrentLiquidity
Running querryfc
Written func info: LiquidityProviders, getCurrentLiquidity
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-982], [-1], 6, "'u'", 'u', -1)
[i]Type for TMP_99

Name: TMP_99 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
liquidityProviders_4(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_3', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_2(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_1', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_2(mapping(address => uint256)) := ϕ(['incentivePool_1', 'incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityPoolBalance_1(uint256) := TMP_99(uint256)
asgn
init
end
_______________

Name: TMP_99 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for liquidityPoolBalance

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: currentLiquidity, Num: 1
Globalname: currentLiquidity
End popogation

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_100(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_4(ILiquidityProviders), function:totalLPFees, arguments:['tokenAddress_1']  
High Call: totalLPFees
Running querryfc
Written func info: LiquidityProviders, totalLPFees
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-982], [-1], 6, "'u'", 'u', -1)
[i]Type for TMP_100

Name: TMP_100 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
liquidityProviders_5(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_4', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_3(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_2', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_3(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_2', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_101(uint256) = liquidityPoolBalance_1 (c)- TMP_100
init
end
init
end
-982
-1
lnorm: 6 rnorm: 6
init
end
_______________

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_101 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_101

Name: TMP_101 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_2(uint256) -> gasFeeAccumulatedByToken_3[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_2

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_102(uint256) = TMP_101 (c)- REF_2
init
end
init
end
init
end
_______________

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_102 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_102

Name: TMP_102 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_3(uint256) -> incentivePool_3[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_3

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_103(uint256) = TMP_102 (c)- REF_3
init
end
init
end
init
end
_______________

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_103 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_103

Name: TMP_103 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
currentLiquidity_1(uint256) := TMP_103(uint256)
asgn
init
end
_______________

Name: TMP_103 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: currentLiquidity Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for currentLiquidity

Name: currentLiquidity Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Source address: -982

Name: tokenAddress_1 Function: getCurrentLiquidity
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
tokenAddress_1(address) := ϕ(['tokenAddress_1', 'tokenAddress_1'])
Phi
[i]Type for tokenAddress

Name: tokenAddress Function: getCurrentLiquidity
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_3(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_1(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_0', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_1(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_0'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: liquidityPoolBalance, Num: 1
Globalname: liquidityPoolBalance
End popogation

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_99(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_3(ILiquidityProviders), function:getCurrentLiquidity, arguments:['tokenAddress_1']  
High Call: getCurrentLiquidity
Running querryfc
Written func info: LiquidityProviders, getCurrentLiquidity
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-982], [-1], 6, "'u'", 'u', -1)
[i]Type for TMP_99

Name: TMP_99 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
liquidityProviders_4(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_3', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_2(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_1', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_2(mapping(address => uint256)) := ϕ(['incentivePool_1', 'incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityPoolBalance_1(uint256) := TMP_99(uint256)
asgn
init
end
_______________

Name: TMP_99 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for liquidityPoolBalance

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: currentLiquidity, Num: 1
Globalname: currentLiquidity
End popogation

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_100(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_4(ILiquidityProviders), function:totalLPFees, arguments:['tokenAddress_1']  
High Call: totalLPFees
Running querryfc
Written func info: LiquidityProviders, totalLPFees
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-982], [-1], 6, "'u'", 'u', -1)
[i]Type for TMP_100

Name: TMP_100 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
liquidityProviders_5(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_4', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_3(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_2', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_3(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_2', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_101(uint256) = liquidityPoolBalance_1 (c)- TMP_100
init
end
init
end
-982
-1
lnorm: 6 rnorm: 6
init
end
_______________

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_101 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_101

Name: TMP_101 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_2(uint256) -> gasFeeAccumulatedByToken_3[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_2

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_102(uint256) = TMP_101 (c)- REF_2
init
end
init
end
init
end
_______________

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_102 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_102

Name: TMP_102 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_3(uint256) -> incentivePool_3[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_3

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_103(uint256) = TMP_102 (c)- REF_3
init
end
init
end
init
end
_______________

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_103 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_103

Name: TMP_103 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
currentLiquidity_1(uint256) := TMP_103(uint256)
asgn
init
end
_______________

Name: TMP_103 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: currentLiquidity Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for currentLiquidity

Name: currentLiquidity Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_228

Name: TMP_228 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_42(ILiquidityProviders) := ϕ(['liquidityProviders_5'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getTransferFee
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
currentLiquidity_1(uint256) := TMP_228(uint256)
asgn
init
end
_______________

Name: TMP_228 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: currentLiquidity Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for currentLiquidity

Name: currentLiquidity Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: providedLiquidity, Num: 1
Globalname: providedLiquidity
End popogation
Name: tokenManager, Num: 29
Globalname: tokenManager
global...

Name: tokenManager Function: initialize
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Source address: -996

Name: None Function: None
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid
Name: liquidityProviders, Num: 43
Globalname: liquidityProviders
global...

Name: liquidityProviders Function: setLiquidityProviders
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Source address: -993

Name: None Function: None
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid
TMP_229(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_42(ILiquidityProviders), function:getSuppliedLiquidityByToken, arguments:['tokenAddress_1']  
High Call: getSuppliedLiquidityByToken
Running querryfc
Written func info: LiquidityProviders, getSuppliedLiquidityByToken
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-982], [-1], 6, "'u'", 'u', -1)
[i]Type for TMP_229

Name: TMP_229 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
tokenManager_29(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_28', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_43(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_42', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getTransferFee
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
providedLiquidity_1(uint256) := TMP_229(uint256)
asgn
init
end
_______________

Name: TMP_229 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: providedLiquidity Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for providedLiquidity

Name: providedLiquidity Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Source address: u
Name: amount, Num: 1
Globalname: amount
Name: currentLiquidity, Num: 1
Globalname: currentLiquidity
Name: resultingLiquidity, Num: 1
Globalname: resultingLiquidity
End popogation
TMP_230(uint256) = currentLiquidity_1 (c)- amount_1
init
end
init
end
init
end
_______________

Name: amount_1 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_230 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_230

Name: TMP_230 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
resultingLiquidity_1(uint256) := TMP_230(uint256)
asgn
init
end
_______________

Name: TMP_230 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: resultingLiquidity Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for resultingLiquidity

Name: resultingLiquidity Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: equilibriumFee, Num: 1
Globalname: equilibriumFee
End popogation
Name: tokenManager, Num: 30
Globalname: tokenManager
global...

Name: tokenManager Function: initialize
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Source address: -996

Name: None Function: None
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid
TMP_231(ITokenManager.TokenInfo) = HIGH_LEVEL_CALL, dest:tokenManager_29(ITokenManager), function:getTokensInfo, arguments:['tokenAddress_1']  
High Call: getTokensInfo
Running querryfc
Written func info: TokenManager, getTokensInfo
[i]Type for TMP_231

Name: TMP_231 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tokenManager_30(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_29', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
REF_62(uint256) -> TMP_231.equilibriumFee
MEMBER
init
end
init
end
OUT KEY: getTransferFee_TMP_231_equilibriumFee
OUT KEY: getTransferFee_TMP_equilibriumFee
FTT: None
No field found
[i]Type for REF_62

Name: TMP_231.equilibriumFee Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: TMP_231, Field: equilibriumFee
#################
Member: 
Name: TMP_231 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Fieldf: 
Name: equilibriumFee Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: TMP_231.equilibriumFee Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: False
Source address: u
Finance type key: (-1, -1)
Add new member...
XXXX
equilibriumFee_1(uint256) := REF_62(uint256)
asgn
init
end
_______________

Name: TMP_231.equilibriumFee Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: equilibriumFee Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for equilibriumFee

Name: equilibriumFee Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: maxFee, Num: 1
Globalname: maxFee
End popogation
Name: tokenManager, Num: 31
Globalname: tokenManager
global...

Name: tokenManager Function: initialize
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Source address: -996

Name: None Function: None
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid
TMP_232(ITokenManager.TokenInfo) = HIGH_LEVEL_CALL, dest:tokenManager_30(ITokenManager), function:getTokensInfo, arguments:['tokenAddress_1']  
High Call: getTokensInfo
Running querryfc
Written func info: TokenManager, getTokensInfo
[i]Type for TMP_232

Name: TMP_232 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tokenManager_31(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_30', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
REF_64(uint256) -> TMP_232.maxFee
MEMBER
init
end
init
end
OUT KEY: getTransferFee_TMP_232_maxFee
OUT KEY: getTransferFee_TMP_maxFee
FTT: None
No field found
[i]Type for REF_64

Name: TMP_232.maxFee Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: TMP_232, Field: maxFee
#################
Member: 
Name: TMP_232 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Fieldf: 
Name: maxFee Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: TMP_232.maxFee Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: False
Source address: u
Finance type key: (-1, -1)
Add new member...
XXXX
maxFee_1(uint256) := REF_64(uint256)
asgn
init
end
_______________

Name: TMP_232.maxFee Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: maxFee Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for maxFee

Name: maxFee Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: maxFee, Num: 1
Globalname: maxFee
Name: equilibriumFee, Num: 1
Globalname: equilibriumFee
Name: numerator, Num: 1
Globalname: numerator
End popogation
TMP_233(uint256) = providedLiquidity_1 (c)* equilibriumFee_1
testing mul...
init
end
init
end

Name: providedLiquidity Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: equilibriumFee Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: 6 rnorm: u
init
end
_______________

Name: providedLiquidity Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_233 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_233

Name: TMP_233 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_234(uint256) = TMP_233 (c)* maxFee_1
testing mul...
init
end
init
end

Name: TMP_233 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef

Name: maxFee Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: 6 rnorm: u
init
end
_______________

Name: TMP_233 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_234 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_234

Name: TMP_234 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
numerator_1(uint256) := TMP_234(uint256)
asgn
init
end
_______________

Name: TMP_234 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef

Name: numerator Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for numerator

Name: numerator Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: maxFee, Num: 1
Globalname: maxFee
Name: resultingLiquidity, Num: 1
Globalname: resultingLiquidity
Name: equilibriumFee, Num: 1
Globalname: equilibriumFee
Name: denominator, Num: 1
Globalname: denominator
End popogation
TMP_235(uint256) = equilibriumFee_1 (c)* providedLiquidity_1
testing mul...
init
end
init
end

Name: equilibriumFee Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: providedLiquidity Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
lnorm: u rnorm: 6
init
end
_______________

Name: providedLiquidity Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_235 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_235

Name: TMP_235 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_236(uint256) = maxFee_1 (c)- equilibriumFee_1
init
end
init
end
init
end
_______________

Name: equilibriumFee Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_236 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_236

Name: TMP_236 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_237(uint256) = TMP_236 (c)* resultingLiquidity_1
testing mul...
init
end
init
end

Name: TMP_236 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: resultingLiquidity Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: resultingLiquidity Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_237 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_237

Name: TMP_237 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_238(uint256) = TMP_235 (c)+ TMP_237
init
end
init
end
init
end
_______________

Name: TMP_235 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_238 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_238

Name: TMP_238 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
denominator_1(uint256) := TMP_238(uint256)
asgn
init
end
_______________

Name: TMP_238 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: denominator Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for denominator

Name: denominator Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_239(bool) = denominator_1 == 0
[i]Type for TMP_239

Name: TMP_239 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: fee, Num: 1
Globalname: fee
End popogation
fee_1(uint256) := 0(uint256)
asgn
init
end
_______________

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef

Name: fee Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for fee

Name: fee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: fee, Num: 2
Globalname: fee
End popogation
TMP_240(uint256) = numerator_1 (c)/ denominator_1
init
end
init
end
lnorm: 6 rnorm: u
Source address: u
init
end
_______________

Name: PIC_110 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_240 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
init
end
init
end
lnorm: 6 rnorm: u
Source address: u
init
end
_______________

Name: PIC_111 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_240 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_240

Name: TMP_240 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
fee_2(uint256) := TMP_240(uint256)
asgn
init
end
_______________

Name: TMP_240 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef

Name: fee Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for fee

Name: fee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Source address: -982

Name: tokenAddress_1 Function: getTransferFee
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
Phid
Source address: u
Name: amount, Num: 1
Globalname: amount

Name: amount_1 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getTransferFee
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid
tokenAddress_1(address) := ϕ(['tokenAddress_1'])
Phi
[i]Type for tokenAddress

Name: tokenAddress Function: getTransferFee
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount_1'])
Phi

Name: amount_1 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for amount

Name: amount Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tokenManager_27(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_0', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_41(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getTransferFee
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: currentLiquidity, Num: 1
Globalname: currentLiquidity
End popogation

Name: liquidityProviders Function: getTransferFee
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid
TMP_228(uint256) = INTERNAL_CALL, LiquidityPool.getCurrentLiquidity(address)(tokenAddress_1)
init
end
[[], [], 6, 'tokenAddress', [], -1, -982, 'u']

Name: tokenAddress Function: getCurrentLiquidity
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
Source address: -982

Name: tokenAddress_1 Function: getCurrentLiquidity
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
tokenAddress_1(address) := ϕ(['tokenAddress_1', 'tokenAddress_1'])
Phi
[i]Type for tokenAddress

Name: tokenAddress Function: getCurrentLiquidity
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_3(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_1(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_0', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_1(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_0'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: liquidityPoolBalance, Num: 1
Globalname: liquidityPoolBalance
End popogation

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_99(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_3(ILiquidityProviders), function:getCurrentLiquidity, arguments:['tokenAddress_1']  
High Call: getCurrentLiquidity
Running querryfc
Written func info: LiquidityProviders, getCurrentLiquidity
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-982], [-1], 6, "'u'", 'u', -1)
[i]Type for TMP_99

Name: TMP_99 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
liquidityProviders_4(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_3', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_2(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_1', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_2(mapping(address => uint256)) := ϕ(['incentivePool_1', 'incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityPoolBalance_1(uint256) := TMP_99(uint256)
asgn
init
end
_______________

Name: TMP_99 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for liquidityPoolBalance

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: currentLiquidity, Num: 1
Globalname: currentLiquidity
End popogation

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_100(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_4(ILiquidityProviders), function:totalLPFees, arguments:['tokenAddress_1']  
High Call: totalLPFees
Running querryfc
Written func info: LiquidityProviders, totalLPFees
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-982], [-1], 6, "'u'", 'u', -1)
[i]Type for TMP_100

Name: TMP_100 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
liquidityProviders_5(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_4', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_3(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_2', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_3(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_2', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_101(uint256) = liquidityPoolBalance_1 (c)- TMP_100
init
end
init
end
-982
-1
lnorm: 6 rnorm: 6
init
end
_______________

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_101 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_101

Name: TMP_101 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_2(uint256) -> gasFeeAccumulatedByToken_3[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_2

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_102(uint256) = TMP_101 (c)- REF_2
init
end
init
end
init
end
_______________

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_102 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_102

Name: TMP_102 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_3(uint256) -> incentivePool_3[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_3

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_103(uint256) = TMP_102 (c)- REF_3
init
end
init
end
init
end
_______________

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_103 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_103

Name: TMP_103 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
currentLiquidity_1(uint256) := TMP_103(uint256)
asgn
init
end
_______________

Name: TMP_103 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: currentLiquidity Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for currentLiquidity

Name: currentLiquidity Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Source address: -982

Name: tokenAddress_1 Function: getCurrentLiquidity
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
tokenAddress_1(address) := ϕ(['tokenAddress_1', 'tokenAddress_1'])
Phi
[i]Type for tokenAddress

Name: tokenAddress Function: getCurrentLiquidity
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_3(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_1(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_0', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_1(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_0'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: liquidityPoolBalance, Num: 1
Globalname: liquidityPoolBalance
End popogation

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_99(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_3(ILiquidityProviders), function:getCurrentLiquidity, arguments:['tokenAddress_1']  
High Call: getCurrentLiquidity
Running querryfc
Written func info: LiquidityProviders, getCurrentLiquidity
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-982], [-1], 6, "'u'", 'u', -1)
[i]Type for TMP_99

Name: TMP_99 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
liquidityProviders_4(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_3', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_2(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_1', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_2(mapping(address => uint256)) := ϕ(['incentivePool_1', 'incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityPoolBalance_1(uint256) := TMP_99(uint256)
asgn
init
end
_______________

Name: TMP_99 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for liquidityPoolBalance

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: currentLiquidity, Num: 1
Globalname: currentLiquidity
End popogation

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_100(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_4(ILiquidityProviders), function:totalLPFees, arguments:['tokenAddress_1']  
High Call: totalLPFees
Running querryfc
Written func info: LiquidityProviders, totalLPFees
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-982], [-1], 6, "'u'", 'u', -1)
[i]Type for TMP_100

Name: TMP_100 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
liquidityProviders_5(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_4', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_3(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_2', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_3(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_2', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_101(uint256) = liquidityPoolBalance_1 (c)- TMP_100
init
end
init
end
-982
-1
lnorm: 6 rnorm: 6
init
end
_______________

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_101 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_101

Name: TMP_101 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_2(uint256) -> gasFeeAccumulatedByToken_3[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_2

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_102(uint256) = TMP_101 (c)- REF_2
init
end
init
end
init
end
_______________

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_102 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_102

Name: TMP_102 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_3(uint256) -> incentivePool_3[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_3

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_103(uint256) = TMP_102 (c)- REF_3
init
end
init
end
init
end
_______________

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_103 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_103

Name: TMP_103 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
currentLiquidity_1(uint256) := TMP_103(uint256)
asgn
init
end
_______________

Name: TMP_103 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: currentLiquidity Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for currentLiquidity

Name: currentLiquidity Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_228

Name: TMP_228 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_42(ILiquidityProviders) := ϕ(['liquidityProviders_5'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getTransferFee
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
currentLiquidity_1(uint256) := TMP_228(uint256)
asgn
init
end
_______________

Name: TMP_228 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: currentLiquidity Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for currentLiquidity

Name: currentLiquidity Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: providedLiquidity, Num: 1
Globalname: providedLiquidity
End popogation

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getTransferFee
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid
TMP_229(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_42(ILiquidityProviders), function:getSuppliedLiquidityByToken, arguments:['tokenAddress_1']  
High Call: getSuppliedLiquidityByToken
Running querryfc
Written func info: LiquidityProviders, getSuppliedLiquidityByToken
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-982], [-1], 6, "'u'", 'u', -1)
[i]Type for TMP_229

Name: TMP_229 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
tokenManager_29(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_28', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_43(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_42', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getTransferFee
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
providedLiquidity_1(uint256) := TMP_229(uint256)
asgn
init
end
_______________

Name: TMP_229 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: providedLiquidity Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for providedLiquidity

Name: providedLiquidity Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Source address: u
Name: amount, Num: 1
Globalname: amount
Name: currentLiquidity, Num: 1
Globalname: currentLiquidity
Name: resultingLiquidity, Num: 1
Globalname: resultingLiquidity
End popogation
TMP_230(uint256) = currentLiquidity_1 (c)- amount_1
init
end
init
end
init
end
_______________

Name: amount_1 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_230 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_230

Name: TMP_230 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
resultingLiquidity_1(uint256) := TMP_230(uint256)
asgn
init
end
_______________

Name: TMP_230 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: resultingLiquidity Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for resultingLiquidity

Name: resultingLiquidity Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: equilibriumFee, Num: 1
Globalname: equilibriumFee
End popogation

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid
TMP_231(ITokenManager.TokenInfo) = HIGH_LEVEL_CALL, dest:tokenManager_29(ITokenManager), function:getTokensInfo, arguments:['tokenAddress_1']  
High Call: getTokensInfo
Running querryfc
Written func info: TokenManager, getTokensInfo
[i]Type for TMP_231

Name: TMP_231 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: equilibriumFee
Finance Type: undef
XXXX
tokenManager_30(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_29', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
REF_62(uint256) -> TMP_231.equilibriumFee
MEMBER
init
end
init
end
Source address: u
[i]Type for REF_62

Name: TMP_231.equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: TMP_231, Field: equilibriumFee
#################
Member: 
Name: TMP_231 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: equilibriumFee
Finance Type: undef
Fieldf: 
Name: equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: TMP_231.equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
equilibriumFee_1(uint256) := REF_62(uint256)
asgn
init
end
_______________

Name: TMP_231.equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: equilibriumFee Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for equilibriumFee

Name: equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: maxFee, Num: 1
Globalname: maxFee
End popogation

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid
TMP_232(ITokenManager.TokenInfo) = HIGH_LEVEL_CALL, dest:tokenManager_30(ITokenManager), function:getTokensInfo, arguments:['tokenAddress_1']  
High Call: getTokensInfo
Running querryfc
Written func info: TokenManager, getTokensInfo
[i]Type for TMP_232

Name: TMP_232 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: maxFee
Finance Type: undef
XXXX
tokenManager_31(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_30', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
REF_64(uint256) -> TMP_232.maxFee
MEMBER
init
end
init
end
Source address: u
[i]Type for REF_64

Name: TMP_232.maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: TMP_232, Field: maxFee
#################
Member: 
Name: TMP_232 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: maxFee
Finance Type: undef
Fieldf: 
Name: maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: TMP_232.maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
maxFee_1(uint256) := REF_64(uint256)
asgn
init
end
_______________

Name: TMP_232.maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: maxFee Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for maxFee

Name: maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: numerator, Num: 1
Globalname: numerator
End popogation
TMP_233(uint256) = providedLiquidity_1 (c)* equilibriumFee_1
testing mul...
init
end
init
end

Name: providedLiquidity Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: 6 rnorm: u
init
end
_______________

Name: providedLiquidity Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_233 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_233

Name: TMP_233 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_234(uint256) = TMP_233 (c)* maxFee_1
testing mul...
init
end
init
end

Name: TMP_233 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef

Name: maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: 6 rnorm: u
init
end
_______________

Name: TMP_233 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_234 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_234

Name: TMP_234 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
numerator_1(uint256) := TMP_234(uint256)
asgn
init
end
_______________

Name: TMP_234 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef

Name: numerator Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for numerator

Name: numerator Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: resultingLiquidity, Num: 1
Globalname: resultingLiquidity
Name: denominator, Num: 1
Globalname: denominator
End popogation
TMP_235(uint256) = equilibriumFee_1 (c)* providedLiquidity_1
testing mul...
init
end
init
end

Name: equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: providedLiquidity Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
lnorm: u rnorm: 6
init
end
_______________

Name: providedLiquidity Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_235 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_235

Name: TMP_235 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_236(uint256) = maxFee_1 (c)- equilibriumFee_1
init
end
init
end
init
end
_______________

Name: equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_236 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_236

Name: TMP_236 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_237(uint256) = TMP_236 (c)* resultingLiquidity_1
testing mul...
init
end
init
end

Name: TMP_236 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: resultingLiquidity Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: TMP_236 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_237 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_237

Name: TMP_237 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_238(uint256) = TMP_235 (c)+ TMP_237
init
end
init
end
init
end
_______________

Name: TMP_235 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_238 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_238

Name: TMP_238 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
denominator_1(uint256) := TMP_238(uint256)
asgn
init
end
_______________

Name: TMP_238 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: denominator Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for denominator

Name: denominator Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_239(bool) = denominator_1 == 0
[i]Type for TMP_239

Name: TMP_239 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: fee, Num: 1
Globalname: fee
End popogation
fee_1(uint256) := 0(uint256)
asgn
init
end
_______________

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef

Name: fee Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for fee

Name: fee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: fee, Num: 2
Globalname: fee
End popogation
TMP_240(uint256) = numerator_1 (c)/ denominator_1
init
end
init
end
lnorm: 6 rnorm: u
Source address: u
init
end
_______________

Name: PIC_113 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_240 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
init
end
init
end
lnorm: 6 rnorm: u
Source address: u
init
end
_______________

Name: PIC_114 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_240 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_240

Name: TMP_240 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
fee_2(uint256) := TMP_240(uint256)
asgn
init
end
_______________

Name: TMP_240 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef

Name: fee Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for fee

Name: fee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation

Name: tokenAddress Function: getTransferFee
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
Phid
Source address: u
Name: amount, Num: 1
Globalname: amount

Name: amount_1 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getTransferFee
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid
tokenAddress_1(address) := ϕ(['tokenAddress_1'])
Phi
[i]Type for tokenAddress

Name: tokenAddress Function: getTransferFee
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount_1'])
Phi

Name: amount_1 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for amount

Name: amount Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tokenManager_27(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_0', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_41(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getTransferFee
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: currentLiquidity, Num: 1
Globalname: currentLiquidity
End popogation

Name: liquidityProviders Function: getTransferFee
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid
TMP_228(uint256) = INTERNAL_CALL, LiquidityPool.getCurrentLiquidity(address)(tokenAddress_1)
init
end
[[], [], 6, 'tokenAddress', [], -1, -982, 'u']

Name: tokenAddress Function: getCurrentLiquidity
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
Source address: -982

Name: tokenAddress_1 Function: getCurrentLiquidity
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
tokenAddress_1(address) := ϕ(['tokenAddress_1', 'tokenAddress_1'])
Phi
[i]Type for tokenAddress

Name: tokenAddress Function: getCurrentLiquidity
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_3(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_1(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_0', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_1(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_0'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: liquidityPoolBalance, Num: 1
Globalname: liquidityPoolBalance
End popogation

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_99(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_3(ILiquidityProviders), function:getCurrentLiquidity, arguments:['tokenAddress_1']  
High Call: getCurrentLiquidity
Running querryfc
Written func info: LiquidityProviders, getCurrentLiquidity
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-982], [-1], 6, "'u'", 'u', -1)
[i]Type for TMP_99

Name: TMP_99 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
liquidityProviders_4(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_3', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_2(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_1', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_2(mapping(address => uint256)) := ϕ(['incentivePool_1', 'incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityPoolBalance_1(uint256) := TMP_99(uint256)
asgn
init
end
_______________

Name: TMP_99 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for liquidityPoolBalance

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: currentLiquidity, Num: 1
Globalname: currentLiquidity
End popogation

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_100(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_4(ILiquidityProviders), function:totalLPFees, arguments:['tokenAddress_1']  
High Call: totalLPFees
Running querryfc
Written func info: LiquidityProviders, totalLPFees
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-982], [-1], 6, "'u'", 'u', -1)
[i]Type for TMP_100

Name: TMP_100 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
liquidityProviders_5(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_4', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_3(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_2', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_3(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_2', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_101(uint256) = liquidityPoolBalance_1 (c)- TMP_100
init
end
init
end
-982
-1
lnorm: 6 rnorm: 6
init
end
_______________

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_101 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_101

Name: TMP_101 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_2(uint256) -> gasFeeAccumulatedByToken_3[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_2

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_102(uint256) = TMP_101 (c)- REF_2
init
end
init
end
init
end
_______________

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_102 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_102

Name: TMP_102 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_3(uint256) -> incentivePool_3[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_3

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_103(uint256) = TMP_102 (c)- REF_3
init
end
init
end
init
end
_______________

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_103 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_103

Name: TMP_103 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
currentLiquidity_1(uint256) := TMP_103(uint256)
asgn
init
end
_______________

Name: TMP_103 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: currentLiquidity Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for currentLiquidity

Name: currentLiquidity Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Source address: -982

Name: tokenAddress_1 Function: getCurrentLiquidity
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
tokenAddress_1(address) := ϕ(['tokenAddress_1', 'tokenAddress_1'])
Phi
[i]Type for tokenAddress

Name: tokenAddress Function: getCurrentLiquidity
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_3(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_1(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_0', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_1(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_0'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: liquidityPoolBalance, Num: 1
Globalname: liquidityPoolBalance
End popogation

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_99(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_3(ILiquidityProviders), function:getCurrentLiquidity, arguments:['tokenAddress_1']  
High Call: getCurrentLiquidity
Running querryfc
Written func info: LiquidityProviders, getCurrentLiquidity
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-982], [-1], 6, "'u'", 'u', -1)
[i]Type for TMP_99

Name: TMP_99 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
liquidityProviders_4(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_3', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_2(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_1', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_2(mapping(address => uint256)) := ϕ(['incentivePool_1', 'incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityPoolBalance_1(uint256) := TMP_99(uint256)
asgn
init
end
_______________

Name: TMP_99 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for liquidityPoolBalance

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: currentLiquidity, Num: 1
Globalname: currentLiquidity
End popogation

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_100(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_4(ILiquidityProviders), function:totalLPFees, arguments:['tokenAddress_1']  
High Call: totalLPFees
Running querryfc
Written func info: LiquidityProviders, totalLPFees
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-982], [-1], 6, "'u'", 'u', -1)
[i]Type for TMP_100

Name: TMP_100 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
liquidityProviders_5(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_4', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_3(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_2', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_3(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_2', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_101(uint256) = liquidityPoolBalance_1 (c)- TMP_100
init
end
init
end
-982
-1
lnorm: 6 rnorm: 6
init
end
_______________

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_101 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_101

Name: TMP_101 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_2(uint256) -> gasFeeAccumulatedByToken_3[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_2

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_102(uint256) = TMP_101 (c)- REF_2
init
end
init
end
init
end
_______________

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_102 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_102

Name: TMP_102 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_3(uint256) -> incentivePool_3[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_3

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_103(uint256) = TMP_102 (c)- REF_3
init
end
init
end
init
end
_______________

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_103 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_103

Name: TMP_103 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
currentLiquidity_1(uint256) := TMP_103(uint256)
asgn
init
end
_______________

Name: TMP_103 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: currentLiquidity Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for currentLiquidity

Name: currentLiquidity Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_228

Name: TMP_228 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_42(ILiquidityProviders) := ϕ(['liquidityProviders_5'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getTransferFee
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
currentLiquidity_1(uint256) := TMP_228(uint256)
asgn
init
end
_______________

Name: TMP_228 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: currentLiquidity Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for currentLiquidity

Name: currentLiquidity Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getTransferFee
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid
TMP_229(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_42(ILiquidityProviders), function:getSuppliedLiquidityByToken, arguments:['tokenAddress_1']  
High Call: getSuppliedLiquidityByToken
Running querryfc
Written func info: LiquidityProviders, getSuppliedLiquidityByToken
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-982], [-1], 6, "'u'", 'u', -1)
[i]Type for TMP_229

Name: TMP_229 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
tokenManager_29(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_28', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_43(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_42', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getTransferFee
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
providedLiquidity_1(uint256) := TMP_229(uint256)
asgn
init
end
_______________

Name: TMP_229 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: providedLiquidity Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
-982
-1
Finance type key: (-1, -1)
[i]Type for providedLiquidity

Name: providedLiquidity Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Source address: u
Name: amount, Num: 1
Globalname: amount
Name: currentLiquidity, Num: 1
Globalname: currentLiquidity
Name: resultingLiquidity, Num: 1
Globalname: resultingLiquidity
End popogation
TMP_230(uint256) = currentLiquidity_1 (c)- amount_1
init
end
init
end
init
end
_______________

Name: amount_1 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_230 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_230

Name: TMP_230 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
resultingLiquidity_1(uint256) := TMP_230(uint256)
asgn
init
end
_______________

Name: TMP_230 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: resultingLiquidity Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for resultingLiquidity

Name: resultingLiquidity Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid
TMP_231(ITokenManager.TokenInfo) = HIGH_LEVEL_CALL, dest:tokenManager_29(ITokenManager), function:getTokensInfo, arguments:['tokenAddress_1']  
High Call: getTokensInfo
Running querryfc
Written func info: TokenManager, getTokensInfo
[i]Type for TMP_231

Name: TMP_231 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: equilibriumFee
Finance Type: undef
XXXX
tokenManager_30(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_29', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
REF_62(uint256) -> TMP_231.equilibriumFee
MEMBER
init
end
init
end
init
end
_______________

Name: TMP_231.equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for REF_62

Name: TMP_231.equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: TMP_231, Field: equilibriumFee
#################
Member: 
Name: TMP_231 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: equilibriumFee
Finance Type: undef
Fieldf: 
Name: equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: TMP_231.equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
equilibriumFee_1(uint256) := REF_62(uint256)
asgn
init
end
_______________

Name: TMP_231.equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for equilibriumFee

Name: equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid
TMP_232(ITokenManager.TokenInfo) = HIGH_LEVEL_CALL, dest:tokenManager_30(ITokenManager), function:getTokensInfo, arguments:['tokenAddress_1']  
High Call: getTokensInfo
Running querryfc
Written func info: TokenManager, getTokensInfo
[i]Type for TMP_232

Name: TMP_232 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: maxFee
Finance Type: undef
XXXX
tokenManager_31(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_30', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
REF_64(uint256) -> TMP_232.maxFee
MEMBER
init
end
init
end
init
end
_______________

Name: TMP_232.maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for REF_64

Name: TMP_232.maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: TMP_232, Field: maxFee
#################
Member: 
Name: TMP_232 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: maxFee
Finance Type: undef
Fieldf: 
Name: maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: TMP_232.maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
maxFee_1(uint256) := REF_64(uint256)
asgn
init
end
_______________

Name: TMP_232.maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for maxFee

Name: maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_233(uint256) = providedLiquidity_1 (c)* equilibriumFee_1
testing mul...
init
end
init
end

Name: providedLiquidity Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: 6 rnorm: u
init
end
_______________

Name: providedLiquidity Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_233 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
-982
-1
[i]Type for TMP_233

Name: TMP_233 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_234(uint256) = TMP_233 (c)* maxFee_1
testing mul...
init
end
init
end

Name: TMP_233 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef

Name: maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: 6 rnorm: u
init
end
_______________

Name: TMP_233 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_234 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
-982
-1
[i]Type for TMP_234

Name: TMP_234 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
numerator_1(uint256) := TMP_234(uint256)
asgn
init
end
_______________

Name: TMP_234 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef

Name: numerator Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
-982
-1
Finance type key: (-1, -1)
[i]Type for numerator

Name: numerator Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: resultingLiquidity, Num: 1
Globalname: resultingLiquidity
End popogation
TMP_235(uint256) = equilibriumFee_1 (c)* providedLiquidity_1
testing mul...
init
end
init
end

Name: equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: providedLiquidity Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
lnorm: u rnorm: 6
init
end
_______________

Name: providedLiquidity Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_235 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
-982
-1
[i]Type for TMP_235

Name: TMP_235 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_236(uint256) = maxFee_1 (c)- equilibriumFee_1
init
end
init
end
init
end
_______________

Name: equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_236 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_236

Name: TMP_236 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_237(uint256) = TMP_236 (c)* resultingLiquidity_1
testing mul...
init
end
init
end

Name: TMP_236 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: resultingLiquidity Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
[i]Type for TMP_237

Name: TMP_237 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_238(uint256) = TMP_235 (c)+ TMP_237
init
end
init
end
init
end
_______________

Name: TMP_235 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_238 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
-982
-1
[i]Type for TMP_238

Name: TMP_238 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
denominator_1(uint256) := TMP_238(uint256)
asgn
init
end
_______________

Name: TMP_238 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: denominator Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
-982
-1
Finance type key: (-1, -1)
[i]Type for denominator

Name: denominator Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_239(bool) = denominator_1 == 0
[i]Type for TMP_239

Name: TMP_239 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
fee_1(uint256) := 0(uint256)
asgn
init
end
_______________

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef

Name: fee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for fee

Name: fee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
TMP_240(uint256) = numerator_1 (c)/ denominator_1
init
end
init
end
lnorm: 6 rnorm: u
Source address: u
init
end
_______________

Name: PIC_116 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_240 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
init
end
init
end
lnorm: 6 rnorm: u
Source address: u
init
end
_______________

Name: PIC_117 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_240 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_240

Name: TMP_240 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
fee_2(uint256) := TMP_240(uint256)
asgn
init
end
_______________

Name: TMP_240 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef

Name: fee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for fee

Name: fee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation

Name: tokenAddress Function: getTransferFee
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
Phid
Source address: u
Name: amount, Num: 1
Globalname: amount

Name: amount_1 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getTransferFee
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid
tokenAddress_1(address) := ϕ(['tokenAddress_1'])
Phi
[i]Type for tokenAddress

Name: tokenAddress Function: getTransferFee
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount_1'])
Phi

Name: amount_1 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for amount

Name: amount Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tokenManager_27(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_0', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_41(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getTransferFee
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: currentLiquidity, Num: 1
Globalname: currentLiquidity
End popogation

Name: liquidityProviders Function: getTransferFee
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid
TMP_228(uint256) = INTERNAL_CALL, LiquidityPool.getCurrentLiquidity(address)(tokenAddress_1)
init
end
[[], [], 6, 'tokenAddress', [], -1, -982, 'u']

Name: tokenAddress Function: getCurrentLiquidity
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
Source address: -982

Name: tokenAddress_1 Function: getCurrentLiquidity
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
tokenAddress_1(address) := ϕ(['tokenAddress_1', 'tokenAddress_1'])
Phi
[i]Type for tokenAddress

Name: tokenAddress Function: getCurrentLiquidity
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_3(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_1(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_0', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_1(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_0'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: liquidityPoolBalance, Num: 1
Globalname: liquidityPoolBalance
End popogation

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_99(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_3(ILiquidityProviders), function:getCurrentLiquidity, arguments:['tokenAddress_1']  
High Call: getCurrentLiquidity
Running querryfc
Written func info: LiquidityProviders, getCurrentLiquidity
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-982], [-1], 6, "'u'", 'u', -1)
[i]Type for TMP_99

Name: TMP_99 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
liquidityProviders_4(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_3', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_2(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_1', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_2(mapping(address => uint256)) := ϕ(['incentivePool_1', 'incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityPoolBalance_1(uint256) := TMP_99(uint256)
asgn
init
end
_______________

Name: TMP_99 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for liquidityPoolBalance

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: currentLiquidity, Num: 1
Globalname: currentLiquidity
End popogation

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_100(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_4(ILiquidityProviders), function:totalLPFees, arguments:['tokenAddress_1']  
High Call: totalLPFees
Running querryfc
Written func info: LiquidityProviders, totalLPFees
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-982], [-1], 6, "'u'", 'u', -1)
[i]Type for TMP_100

Name: TMP_100 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
liquidityProviders_5(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_4', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_3(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_2', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_3(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_2', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_101(uint256) = liquidityPoolBalance_1 (c)- TMP_100
init
end
init
end
-982
-1
lnorm: 6 rnorm: 6
init
end
_______________

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_101 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_101

Name: TMP_101 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_2(uint256) -> gasFeeAccumulatedByToken_3[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_2

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_102(uint256) = TMP_101 (c)- REF_2
init
end
init
end
init
end
_______________

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_102 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_102

Name: TMP_102 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_3(uint256) -> incentivePool_3[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_3

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_103(uint256) = TMP_102 (c)- REF_3
init
end
init
end
init
end
_______________

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_103 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_103

Name: TMP_103 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
currentLiquidity_1(uint256) := TMP_103(uint256)
asgn
init
end
_______________

Name: TMP_103 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: currentLiquidity Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for currentLiquidity

Name: currentLiquidity Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Source address: -982

Name: tokenAddress_1 Function: getCurrentLiquidity
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
tokenAddress_1(address) := ϕ(['tokenAddress_1', 'tokenAddress_1'])
Phi
[i]Type for tokenAddress

Name: tokenAddress Function: getCurrentLiquidity
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_3(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_1(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_0', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_1(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_0'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: liquidityPoolBalance, Num: 1
Globalname: liquidityPoolBalance
End popogation

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_99(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_3(ILiquidityProviders), function:getCurrentLiquidity, arguments:['tokenAddress_1']  
High Call: getCurrentLiquidity
Running querryfc
Written func info: LiquidityProviders, getCurrentLiquidity
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-982], [-1], 6, "'u'", 'u', -1)
[i]Type for TMP_99

Name: TMP_99 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
liquidityProviders_4(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_3', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_2(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_1', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_2(mapping(address => uint256)) := ϕ(['incentivePool_1', 'incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityPoolBalance_1(uint256) := TMP_99(uint256)
asgn
init
end
_______________

Name: TMP_99 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for liquidityPoolBalance

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: currentLiquidity, Num: 1
Globalname: currentLiquidity
End popogation

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_100(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_4(ILiquidityProviders), function:totalLPFees, arguments:['tokenAddress_1']  
High Call: totalLPFees
Running querryfc
Written func info: LiquidityProviders, totalLPFees
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-982], [-1], 6, "'u'", 'u', -1)
[i]Type for TMP_100

Name: TMP_100 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
liquidityProviders_5(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_4', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_3(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_2', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_3(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_2', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_101(uint256) = liquidityPoolBalance_1 (c)- TMP_100
init
end
init
end
-982
-1
lnorm: 6 rnorm: 6
init
end
_______________

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_101 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_101

Name: TMP_101 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_2(uint256) -> gasFeeAccumulatedByToken_3[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_2

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_102(uint256) = TMP_101 (c)- REF_2
init
end
init
end
init
end
_______________

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_102 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_102

Name: TMP_102 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_3(uint256) -> incentivePool_3[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_3

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_103(uint256) = TMP_102 (c)- REF_3
init
end
init
end
init
end
_______________

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_103 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_103

Name: TMP_103 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
currentLiquidity_1(uint256) := TMP_103(uint256)
asgn
init
end
_______________

Name: TMP_103 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: currentLiquidity Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for currentLiquidity

Name: currentLiquidity Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_228

Name: TMP_228 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_42(ILiquidityProviders) := ϕ(['liquidityProviders_5'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getTransferFee
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
currentLiquidity_1(uint256) := TMP_228(uint256)
asgn
init
end
_______________

Name: TMP_228 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: currentLiquidity Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for currentLiquidity

Name: currentLiquidity Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getTransferFee
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid
TMP_229(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_42(ILiquidityProviders), function:getSuppliedLiquidityByToken, arguments:['tokenAddress_1']  
High Call: getSuppliedLiquidityByToken
Running querryfc
Written func info: LiquidityProviders, getSuppliedLiquidityByToken
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-982], [-1], 6, "'u'", 'u', -1)
[i]Type for TMP_229

Name: TMP_229 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
tokenManager_29(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_28', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_43(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_42', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getTransferFee
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
providedLiquidity_1(uint256) := TMP_229(uint256)
asgn
init
end
_______________

Name: TMP_229 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: providedLiquidity Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
-982
-1
Finance type key: (-1, -1)
[i]Type for providedLiquidity

Name: providedLiquidity Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Source address: u
Name: amount, Num: 1
Globalname: amount
Name: currentLiquidity, Num: 1
Globalname: currentLiquidity
Name: resultingLiquidity, Num: 1
Globalname: resultingLiquidity
End popogation
TMP_230(uint256) = currentLiquidity_1 (c)- amount_1
init
end
init
end
init
end
_______________

Name: amount_1 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_230 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_230

Name: TMP_230 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
resultingLiquidity_1(uint256) := TMP_230(uint256)
asgn
init
end
_______________

Name: TMP_230 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: resultingLiquidity Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for resultingLiquidity

Name: resultingLiquidity Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid
TMP_231(ITokenManager.TokenInfo) = HIGH_LEVEL_CALL, dest:tokenManager_29(ITokenManager), function:getTokensInfo, arguments:['tokenAddress_1']  
High Call: getTokensInfo
Running querryfc
Written func info: TokenManager, getTokensInfo
[i]Type for TMP_231

Name: TMP_231 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: equilibriumFee
Finance Type: undef
XXXX
tokenManager_30(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_29', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
REF_62(uint256) -> TMP_231.equilibriumFee
MEMBER
init
end
init
end
init
end
_______________

Name: TMP_231.equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for REF_62

Name: TMP_231.equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: TMP_231, Field: equilibriumFee
#################
Member: 
Name: TMP_231 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: equilibriumFee
Finance Type: undef
Fieldf: 
Name: equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: TMP_231.equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
equilibriumFee_1(uint256) := REF_62(uint256)
asgn
init
end
_______________

Name: TMP_231.equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for equilibriumFee

Name: equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid
TMP_232(ITokenManager.TokenInfo) = HIGH_LEVEL_CALL, dest:tokenManager_30(ITokenManager), function:getTokensInfo, arguments:['tokenAddress_1']  
High Call: getTokensInfo
Running querryfc
Written func info: TokenManager, getTokensInfo
[i]Type for TMP_232

Name: TMP_232 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: maxFee
Finance Type: undef
XXXX
tokenManager_31(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_30', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
REF_64(uint256) -> TMP_232.maxFee
MEMBER
init
end
init
end
init
end
_______________

Name: TMP_232.maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for REF_64

Name: TMP_232.maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: TMP_232, Field: maxFee
#################
Member: 
Name: TMP_232 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: maxFee
Finance Type: undef
Fieldf: 
Name: maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: TMP_232.maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
maxFee_1(uint256) := REF_64(uint256)
asgn
init
end
_______________

Name: TMP_232.maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for maxFee

Name: maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_233(uint256) = providedLiquidity_1 (c)* equilibriumFee_1
testing mul...
init
end
init
end

Name: providedLiquidity Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: 6 rnorm: u
init
end
_______________

Name: providedLiquidity Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_233 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
-982
-1
[i]Type for TMP_233

Name: TMP_233 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_234(uint256) = TMP_233 (c)* maxFee_1
testing mul...
init
end
init
end

Name: TMP_233 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef

Name: maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: 6 rnorm: u
init
end
_______________

Name: TMP_233 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_234 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
-982
-1
[i]Type for TMP_234

Name: TMP_234 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
numerator_1(uint256) := TMP_234(uint256)
asgn
init
end
_______________

Name: TMP_234 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef

Name: numerator Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
-982
-1
Finance type key: (-1, -1)
[i]Type for numerator

Name: numerator Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: resultingLiquidity, Num: 1
Globalname: resultingLiquidity
End popogation
TMP_235(uint256) = equilibriumFee_1 (c)* providedLiquidity_1
testing mul...
init
end
init
end

Name: equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: providedLiquidity Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
lnorm: u rnorm: 6
init
end
_______________

Name: providedLiquidity Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_235 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
-982
-1
[i]Type for TMP_235

Name: TMP_235 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_236(uint256) = maxFee_1 (c)- equilibriumFee_1
init
end
init
end
init
end
_______________

Name: equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_236 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_236

Name: TMP_236 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_237(uint256) = TMP_236 (c)* resultingLiquidity_1
testing mul...
init
end
init
end

Name: TMP_236 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: resultingLiquidity Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
[i]Type for TMP_237

Name: TMP_237 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_238(uint256) = TMP_235 (c)+ TMP_237
init
end
init
end
init
end
_______________

Name: TMP_235 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_238 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
-982
-1
[i]Type for TMP_238

Name: TMP_238 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
denominator_1(uint256) := TMP_238(uint256)
asgn
init
end
_______________

Name: TMP_238 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: denominator Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
-982
-1
Finance type key: (-1, -1)
[i]Type for denominator

Name: denominator Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_239(bool) = denominator_1 == 0
[i]Type for TMP_239

Name: TMP_239 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
fee_1(uint256) := 0(uint256)
asgn
init
end
_______________

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef

Name: fee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for fee

Name: fee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
TMP_240(uint256) = numerator_1 (c)/ denominator_1
init
end
init
end
lnorm: 6 rnorm: u
Source address: u
init
end
_______________

Name: PIC_119 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_240 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
init
end
init
end
lnorm: 6 rnorm: u
Source address: u
init
end
_______________

Name: PIC_120 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_240 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_240

Name: TMP_240 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
fee_2(uint256) := TMP_240(uint256)
asgn
init
end
_______________

Name: TMP_240 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef

Name: fee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for fee

Name: fee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_199

Name: TMP_199 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tokenManager_21(ITokenManager) := ϕ(['tokenManager_31'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getAmountToTransfer
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_36(ILiquidityProviders) := ϕ(['liquidityProviders_43'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getAmountToTransfer
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
transferFeePerc_1(uint256) := TMP_199(uint256)
asgn
init
end
_______________

Name: TMP_199 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: transferFeePerc Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for transferFeePerc

Name: transferFeePerc Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: transferFeePerc, Num: 1
Globalname: transferFeePerc
End popogation
Name: BASE_DIVISOR, Num: 3
Globalname: BASE_DIVISOR
global...

Name: PIC_4 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: baseGas, Num: 5
Globalname: baseGas
global...

Name: baseGas Function: setBaseGas
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: tokenManager, Num: 22
Globalname: tokenManager
global...

Name: tokenManager Function: initialize
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Source address: -996

Name: None Function: None
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid
Name: liquidityProviders, Num: 37
Globalname: liquidityProviders
global...

Name: liquidityProviders Function: setLiquidityProviders
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Source address: -993

Name: None Function: None
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid
Name: gasFeeAccumulatedByToken, Num: 6
Globalname: gasFeeAccumulatedByToken
global...

Name: PIC_1 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: gasFeeAccumulated, Num: 3
Globalname: gasFeeAccumulated
global...

Name: PIC_6 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: incentivePool, Num: 25
Globalname: incentivePool
global...

Name: incentivePool Function: depositNative
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_200(ITokenManager.TokenInfo) = HIGH_LEVEL_CALL, dest:tokenManager_21(ITokenManager), function:getTokensInfo, arguments:['tokenAddress_1']  
High Call: getTokensInfo
Running querryfc
Written func info: TokenManager, getTokensInfo
[i]Type for TMP_200

Name: TMP_200 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
BASE_DIVISOR_3(uint256) := ϕ(['BASE_DIVISOR_3', 'BASE_DIVISOR_5', 'BASE_DIVISOR_2'])
Phi
[i]Type for BASE_DIVISOR

Name: BASE_DIVISOR Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
baseGas_5(uint256) := ϕ(['baseGas_2', 'baseGas_1', 'baseGas_4', 'baseGas_9'])
Phi
[i]Type for baseGas

Name: baseGas Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tokenManager_22(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_7', 'tokenManager_1', 'tokenManager_21', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getAmountToTransfer
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_37(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_36', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getAmountToTransfer
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_6(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_5', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulated_3(mapping(address => mapping(address => uint256))) := ϕ(['gasFeeAccumulated_16', 'gasFeeAccumulated_10', 'gasFeeAccumulated_22', 'gasFeeAccumulated_2'])
Phi
[i]Type for gasFeeAccumulated

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_25(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_24'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_44(uint256) -> TMP_200.equilibriumFee
MEMBER
init
end
init
end
OUT KEY: getAmountToTransfer_TMP_200_equilibriumFee
OUT KEY: getAmountToTransfer_TMP_equilibriumFee
FTT: None
No field found
[i]Type for REF_44

Name: TMP_200.equilibriumFee Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: TMP_200, Field: equilibriumFee
#################
Member: 
Name: TMP_200 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Fieldf: 
Name: equilibriumFee Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: TMP_200.equilibriumFee Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: False
Source address: u
Finance type key: (-1, -1)
Add new member...
XXXX
TMP_201(bool) = transferFeePerc_1 > REF_44
init
end
init
end
lnorm: u rnorm: u
init
end
_______________

Name: TMP_200.equilibriumFee Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: transferFeePerc Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
_______________

Name: TMP_200.equilibriumFee Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_201 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_201

Name: TMP_201 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Source address: u
Name: amount, Num: 1
Globalname: amount
Name: BASE_DIVISOR, Num: 4
Globalname: BASE_DIVISOR
global...

Name: PIC_4 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Name: lpFee, Num: 1
Globalname: lpFee
End popogation

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: baseGas, Num: 6
Globalname: baseGas
global...

Name: baseGas Function: setBaseGas
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: tokenManager, Num: 23
Globalname: tokenManager
global...

Name: tokenManager Function: initialize
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Source address: -996

Name: None Function: None
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid
Name: liquidityProviders, Num: 38
Globalname: liquidityProviders
global...

Name: liquidityProviders Function: setLiquidityProviders
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Source address: -993

Name: None Function: None
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid
Name: gasFeeAccumulatedByToken, Num: 7
Globalname: gasFeeAccumulatedByToken
global...

Name: PIC_1 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: gasFeeAccumulated, Num: 4
Globalname: gasFeeAccumulated
global...

Name: PIC_6 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: incentivePool, Num: 26
Globalname: incentivePool
global...

Name: incentivePool Function: depositNative
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_202(ITokenManager.TokenInfo) = HIGH_LEVEL_CALL, dest:tokenManager_22(ITokenManager), function:getTokensInfo, arguments:['tokenAddress_1']  
High Call: getTokensInfo
Running querryfc
Written func info: TokenManager, getTokensInfo
[i]Type for TMP_202

Name: TMP_202 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
BASE_DIVISOR_4(uint256) := ϕ(['BASE_DIVISOR_3', 'BASE_DIVISOR_5'])
Phi
[i]Type for BASE_DIVISOR

Name: BASE_DIVISOR Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
baseGas_6(uint256) := ϕ(['baseGas_2', 'baseGas_1', 'baseGas_5', 'baseGas_9'])
Phi
[i]Type for baseGas

Name: baseGas Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tokenManager_23(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_7', 'tokenManager_1', 'tokenManager_22', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getAmountToTransfer
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_38(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_37', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getAmountToTransfer
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_7(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_6', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulated_4(mapping(address => mapping(address => uint256))) := ϕ(['gasFeeAccumulated_16', 'gasFeeAccumulated_10', 'gasFeeAccumulated_3', 'gasFeeAccumulated_22'])
Phi
[i]Type for gasFeeAccumulated

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_26(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_46(uint256) -> TMP_202.equilibriumFee
MEMBER
init
end
init
end
OUT KEY: getAmountToTransfer_TMP_202_equilibriumFee
OUT KEY: getAmountToTransfer_TMP_equilibriumFee
FTT: None
No field found
[i]Type for REF_46

Name: TMP_202.equilibriumFee Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: TMP_202, Field: equilibriumFee
#################
Member: 
Name: TMP_202 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Fieldf: 
Name: equilibriumFee Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: TMP_202.equilibriumFee Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: False
Source address: u
Finance type key: (-1, -1)
Add new member...
XXXX
TMP_203(uint256) = amount_1 (c)* REF_46
testing mul...
init
end
init
end

Name: amount_1 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_202.equilibriumFee Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: TMP_202.equilibriumFee Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_203 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_203

Name: TMP_203 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_204(uint256) = TMP_203 (c)/ BASE_DIVISOR_4
init
end
init
end
lnorm: u rnorm: u
init
end
init
end
init
end
lnorm: u rnorm: u
[i]Type for TMP_204

Name: TMP_204 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
lpFee_1(uint256) := TMP_204(uint256)
asgn
init
end
_______________

Name: TMP_204 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: lpFee Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for lpFee

Name: lpFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Source address: u
Name: amount, Num: 1
Globalname: amount
Name: transferFeePerc, Num: 1
Globalname: transferFeePerc
Name: lpFee, Num: 2
Globalname: lpFee
End popogation
TMP_210(uint256) = amount_1 (c)* transferFeePerc_1
testing mul...
init
end
init
end

Name: amount_1 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: transferFeePerc Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: transferFeePerc Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_210 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_210

Name: TMP_210 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_211(uint256) = TMP_210 (c)/ BASE_DIVISOR_3
init
end
init
end
lnorm: u rnorm: u
init
end
init
end
init
end
lnorm: u rnorm: u
[i]Type for TMP_211

Name: TMP_211 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
lpFee_2(uint256) := TMP_211(uint256)
asgn
init
end
_______________

Name: TMP_211 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: lpFee Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for lpFee

Name: lpFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: BASE_DIVISOR, Num: 5
Globalname: BASE_DIVISOR
global...

Name: PIC_4 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Name: transferFeePerc, Num: 1
Globalname: transferFeePerc
Source address: u
Name: amount, Num: 1
Globalname: amount
Name: incentivePool, Num: 28
Globalname: incentivePool
global...

Name: incentivePool Function: depositNative
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
End popogation

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: baseGas, Num: 7
Globalname: baseGas
global...

Name: baseGas Function: setBaseGas
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: tokenManager, Num: 24
Globalname: tokenManager
global...

Name: tokenManager Function: initialize
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Source address: -996

Name: None Function: None
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid
Name: liquidityProviders, Num: 39
Globalname: liquidityProviders
global...

Name: liquidityProviders Function: setLiquidityProviders
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Source address: -993

Name: None Function: None
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid
Name: gasFeeAccumulatedByToken, Num: 8
Globalname: gasFeeAccumulatedByToken
global...

Name: PIC_1 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: gasFeeAccumulated, Num: 5
Globalname: gasFeeAccumulated
global...

Name: PIC_6 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: incentivePool, Num: 27
Globalname: incentivePool
global...

Name: incentivePool Function: depositNative
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
REF_47(uint256) -> incentivePool_26[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_47

Name: incentivePool Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_48(uint256) -> incentivePool_26[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_48

Name: incentivePool Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_205(ITokenManager.TokenInfo) = HIGH_LEVEL_CALL, dest:tokenManager_23(ITokenManager), function:getTokensInfo, arguments:['tokenAddress_1']  
High Call: getTokensInfo
Running querryfc
Written func info: TokenManager, getTokensInfo
[i]Type for TMP_205

Name: TMP_205 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
BASE_DIVISOR_5(uint256) := ϕ(['BASE_DIVISOR_3', 'BASE_DIVISOR_5', 'BASE_DIVISOR_4'])
Phi
[i]Type for BASE_DIVISOR

Name: BASE_DIVISOR Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
baseGas_7(uint256) := ϕ(['baseGas_2', 'baseGas_1', 'baseGas_6', 'baseGas_9'])
Phi
[i]Type for baseGas

Name: baseGas Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tokenManager_24(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_23', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getAmountToTransfer
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_39(ILiquidityProviders) := ϕ(['liquidityProviders_38', 'liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getAmountToTransfer
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_8(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_7', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulated_5(mapping(address => mapping(address => uint256))) := ϕ(['gasFeeAccumulated_16', 'gasFeeAccumulated_10', 'gasFeeAccumulated_4', 'gasFeeAccumulated_22'])
Phi
[i]Type for gasFeeAccumulated

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_27(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_26', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_50(uint256) -> TMP_205.equilibriumFee
MEMBER
init
end
init
end
OUT KEY: getAmountToTransfer_TMP_205_equilibriumFee
OUT KEY: getAmountToTransfer_TMP_equilibriumFee
FTT: None
No field found
[i]Type for REF_50

Name: TMP_205.equilibriumFee Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: TMP_205, Field: equilibriumFee
#################
Member: 
Name: TMP_205 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Fieldf: 
Name: equilibriumFee Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: TMP_205.equilibriumFee Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: False
Source address: u
Finance type key: (-1, -1)
Add new member...
XXXX
TMP_206(uint256) = transferFeePerc_1 (c)- REF_50
init
end
init
end
init
end
_______________

Name: TMP_205.equilibriumFee Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_206 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_206

Name: TMP_206 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_207(uint256) = amount_1 (c)* TMP_206
testing mul...
init
end
init
end

Name: amount_1 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_206 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: TMP_206 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_207 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_207

Name: TMP_207 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_208(uint256) = REF_48 (c)+ TMP_207
init
end
init
end
init
end
_______________

Name: incentivePool Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_208 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_208

Name: TMP_208 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_209(uint256) = TMP_208 (c)/ BASE_DIVISOR_5
init
end
init
end
lnorm: u rnorm: u
init
end
init
end
init
end
lnorm: u rnorm: u
init
end
[i]Type for TMP_209

Name: TMP_209 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_28(mapping(address => uint256)) := ϕ(['incentivePool_26'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_47 (->incentivePool_28) := TMP_209(uint256)
asgn
init
end
_______________

Name: TMP_209 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: REF_47 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_47

Name: REF_47 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
Source address: u
Propogating parameters and globals to SSA variables...
End popogation
Name: lpFee, Num: 3
Globalname: lpFee

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
lpFee_3(uint256) := ϕ(['lpFee_1', 'lpFee_2'])
Phi

Name: lpFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: lpFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
init
end
_______________

Name: lpFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: lpFee Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for lpFee

Name: lpFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Source address: u
Name: amount, Num: 1
Globalname: amount
Name: transferFeePerc, Num: 1
Globalname: transferFeePerc
Name: transferFeeAmount, Num: 1
Globalname: transferFeeAmount
End popogation
TMP_212(uint256) = amount_1 (c)* transferFeePerc_1
testing mul...
init
end
init
end

Name: amount_1 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: transferFeePerc Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: transferFeePerc Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_212 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_212

Name: TMP_212 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_213(uint256) = TMP_212 (c)/ BASE_DIVISOR_3
init
end
init
end
lnorm: u rnorm: u
init
end
init
end
init
end
lnorm: u rnorm: u
[i]Type for TMP_213

Name: TMP_213 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
transferFeeAmount_1(uint256) := TMP_213(uint256)
asgn
init
end
_______________

Name: TMP_213 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: transferFeeAmount Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for transferFeeAmount

Name: transferFeeAmount Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Name: baseGas, Num: 8
Globalname: baseGas
global...

Name: baseGas Function: setBaseGas
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: tokenManager, Num: 25
Globalname: tokenManager
global...

Name: tokenManager Function: initialize
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Source address: -996

Name: None Function: None
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid
Name: liquidityProviders, Num: 40
Globalname: liquidityProviders
global...

Name: liquidityProviders Function: setLiquidityProviders
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Source address: -993

Name: None Function: None
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid
Name: gasFeeAccumulatedByToken, Num: 9
Globalname: gasFeeAccumulatedByToken
global...

Name: PIC_1 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: gasFeeAccumulated, Num: 6
Globalname: gasFeeAccumulated
global...

Name: PIC_6 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
HIGH_LEVEL_CALL, dest:liquidityProviders_37(ILiquidityProviders), function:addLPFee, arguments:['tokenAddress_1', 'lpFee_3']  
High Call: addLPFee
baseGas_8(uint256) := ϕ(['baseGas_2', 'baseGas_1', 'baseGas_7', 'baseGas_9'])
Phi
[i]Type for baseGas

Name: baseGas Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tokenManager_25(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_24', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getAmountToTransfer
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_40(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_39', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getAmountToTransfer
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_9(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_8', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulated_6(mapping(address => mapping(address => uint256))) := ϕ(['gasFeeAccumulated_16', 'gasFeeAccumulated_10', 'gasFeeAccumulated_22', 'gasFeeAccumulated_5'])
Phi
[i]Type for gasFeeAccumulated

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Source address: u
Name: initialGas, Num: 1
Globalname: initialGas
Name: totalGasUsed, Num: 1
Globalname: totalGasUsed
End popogation
TMP_215(uint256) = SOLIDITY_CALL gasleft()()
[i]Type for TMP_215

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_216(uint256) = initialGas_1 (c)- TMP_215
init
end
init
end
init
end
_______________

Name: TMP_215 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_216 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_216

Name: TMP_216 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
totalGasUsed_1(uint256) := TMP_216(uint256)
asgn
init
end
_______________

Name: TMP_216 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: totalGasUsed Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for totalGasUsed

Name: totalGasUsed Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: totalGasUsed, Num: 1
Globalname: totalGasUsed
Name: totalGasUsed, Num: 2
Globalname: totalGasUsed
End popogation
Name: baseGas, Num: 9
Globalname: baseGas
global...

Name: baseGas Function: setBaseGas
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: tokenManager, Num: 26
Globalname: tokenManager
global...

Name: tokenManager Function: initialize
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Source address: -996

Name: None Function: None
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid
Name: gasFeeAccumulatedByToken, Num: 10
Globalname: gasFeeAccumulatedByToken
global...

Name: PIC_1 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: gasFeeAccumulated, Num: 7
Globalname: gasFeeAccumulated
global...

Name: PIC_6 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_217(ITokenManager.TokenInfo) = HIGH_LEVEL_CALL, dest:tokenManager_25(ITokenManager), function:getTokensInfo, arguments:['tokenAddress_1']  
High Call: getTokensInfo
Running querryfc
Written func info: TokenManager, getTokensInfo
[i]Type for TMP_217

Name: TMP_217 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
baseGas_9(uint256) := ϕ(['baseGas_2', 'baseGas_1', 'baseGas_8', 'baseGas_9'])
Phi
[i]Type for baseGas

Name: baseGas Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tokenManager_26(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_25', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getAmountToTransfer
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_10(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_9', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulated_7(mapping(address => mapping(address => uint256))) := ϕ(['gasFeeAccumulated_16', 'gasFeeAccumulated_10', 'gasFeeAccumulated_22', 'gasFeeAccumulated_6'])
Phi
[i]Type for gasFeeAccumulated

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_53(uint256) -> TMP_217.transferOverhead
MEMBER
init
end
init
end
OUT KEY: getAmountToTransfer_TMP_217_transferOverhead
OUT KEY: getAmountToTransfer_TMP_transferOverhead
FTT: None
No field found
[i]Type for REF_53

Name: TMP_217.transferOverhead Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: TMP_217, Field: transferOverhead
#################
Member: 
Name: TMP_217 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Fieldf: 
Name: transferOverhead Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: TMP_217.transferOverhead Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: False
Source address: u
Finance type key: (-1, -1)
Add new member...
XXXX
TMP_218(uint256) = totalGasUsed_1 (c)+ REF_53
init
end
init
end
init
end
_______________

Name: TMP_217.transferOverhead Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_218 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_218

Name: TMP_218 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
totalGasUsed_2(uint256) := TMP_218(uint256)
asgn
init
end
_______________

Name: TMP_218 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: totalGasUsed Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for totalGasUsed

Name: totalGasUsed Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: totalGasUsed, Num: 2
Globalname: totalGasUsed
Name: totalGasUsed, Num: 3
Globalname: totalGasUsed
End popogation
TMP_219(uint256) = totalGasUsed_2 (c)+ baseGas_9
init
end
init
end
init
end
_______________

Name: baseGas Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_219 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_219

Name: TMP_219 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
totalGasUsed_3(uint256) := TMP_219(uint256)
asgn
init
end
_______________

Name: TMP_219 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: totalGasUsed Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for totalGasUsed

Name: totalGasUsed Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Source address: u
Name: tokenGasPrice, Num: 1
Globalname: tokenGasPrice
Name: gasFee, Num: 1
Globalname: gasFee
End popogation
TMP_220(uint256) = totalGasUsed_3 (c)* tokenGasPrice_1
testing mul...
init
end
init
end

Name: totalGasUsed Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: tokenGasPrice_1 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: totalGasUsed Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_220 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_220

Name: TMP_220 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
gasFee_1(uint256) := TMP_220(uint256)
asgn
init
end
_______________

Name: TMP_220 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: gasFee Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for gasFee

Name: gasFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: gasFeeAccumulatedByToken, Num: 11
Globalname: gasFeeAccumulatedByToken
global...

Name: PIC_1 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
End popogation

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
REF_54(uint256) -> gasFeeAccumulatedByToken_10[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_54

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_55(uint256) -> gasFeeAccumulatedByToken_10[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_55

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_221(uint256) = REF_55 (c)+ gasFee_1
init
end
init
end
init
end
_______________

Name: gasFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_221 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_221

Name: TMP_221 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_11(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_10'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_54 (->gasFeeAccumulatedByToken_11) := TMP_221(uint256)
asgn
init
end
_______________

Name: TMP_221 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: REF_54 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_54

Name: REF_54 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
Source address: u
Propogating parameters and globals to SSA variables...
Name: gasFeeAccumulated, Num: 8
Globalname: gasFeeAccumulated
global...

Name: PIC_6 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Name: gasFeeAccumulated, Num: 10
Globalname: gasFeeAccumulated
global...

Name: PIC_6 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
End popogation

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
REF_56(mapping(address => uint256)) -> gasFeeAccumulated_7[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_56

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_222(address) = INTERNAL_CALL, LiquidityPool._msgSender()()
init
end
_______________

Name: PIC_33 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_222 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_222

Name: TMP_222 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_57(uint256) -> REF_56[TMP_222]
INDEX
Source address: u
[i]Type for REF_57

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_58(mapping(address => uint256)) -> gasFeeAccumulated_8[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_58

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_223(address) = INTERNAL_CALL, LiquidityPool._msgSender()()
init
end
_______________

Name: PIC_33 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_223 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_223

Name: TMP_223 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_59(uint256) -> REF_58[TMP_223]
INDEX
Source address: u
[i]Type for REF_59

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_224(uint256) = REF_59 (c)+ gasFee_1
init
end
init
end
init
end
_______________

Name: gasFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_224 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_224

Name: TMP_224 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulated_10(mapping(address => mapping(address => uint256))) := ϕ(['gasFeeAccumulated_7'])
Phi
[i]Type for gasFeeAccumulated

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_57 (->gasFeeAccumulated_10) := TMP_224(uint256)
asgn
init
end
_______________

Name: TMP_224 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: REF_57 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_57

Name: REF_57 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
Source address: u
Propogating parameters and globals to SSA variables...
Source address: u
Name: amount, Num: 1
Globalname: amount
Name: amountToTransfer, Num: 1
Globalname: amountToTransfer
End popogation
TMP_225(uint256) = transferFeeAmount_1 (c)+ gasFee_1
init
end
init
end
init
end
_______________

Name: gasFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_225 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_225

Name: TMP_225 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_226(uint256) = amount_1 (c)- TMP_225
init
end
init
end
init
end
_______________

Name: TMP_225 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_226 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_226

Name: TMP_226 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
amountToTransfer_1(uint256) := TMP_226(uint256)
asgn
init
end
_______________

Name: TMP_226 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amountToTransfer Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for amountToTransfer

Name: amountToTransfer Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Source address: u
Name: initialGas, Num: 1
Globalname: initialGas

Name: initialGas_1 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Source address: -982

Name: tokenAddress_1 Function: getAmountToTransfer
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
Phid
Source address: u
Name: amount, Num: 1
Globalname: amount

Name: amount_1 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Source address: u
Name: tokenGasPrice, Num: 1
Globalname: tokenGasPrice

Name: tokenGasPrice_1 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: BASE_DIVISOR Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: baseGas Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: tokenManager Function: getAmountToTransfer
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getAmountToTransfer
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
initialGas_1(uint256) := ϕ(['initialGas_1'])
Phi

Name: initialGas Function: sendFundsToUser
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for initialGas

Name: initialGas Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tokenAddress_1(address) := ϕ(['tokenAddress_1'])
Phi
[i]Type for tokenAddress

Name: tokenAddress Function: getAmountToTransfer
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount_1'])
Phi

Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for amount

Name: amount Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tokenGasPrice_1(uint256) := ϕ(['tokenGasPrice_1'])
Phi

Name: tokenGasPrice Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for tokenGasPrice

Name: tokenGasPrice Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
BASE_DIVISOR_1(uint256) := ϕ(['BASE_DIVISOR_3', 'BASE_DIVISOR_5', 'BASE_DIVISOR_0'])
Phi
[i]Type for BASE_DIVISOR

Name: BASE_DIVISOR Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
baseGas_3(uint256) := ϕ(['baseGas_2', 'baseGas_1', 'baseGas_0', 'baseGas_9'])
Phi
[i]Type for baseGas

Name: baseGas Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tokenManager_20(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_0', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getAmountToTransfer
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_35(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getAmountToTransfer
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_4(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_0', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulated_1(mapping(address => mapping(address => uint256))) := ϕ(['gasFeeAccumulated_0', 'gasFeeAccumulated_10', 'gasFeeAccumulated_16', 'gasFeeAccumulated_22'])
Phi
[i]Type for gasFeeAccumulated

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_23(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_0'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Source address: u
Name: amount, Num: 1
Globalname: amount
Name: transferFeePerc, Num: 1
Globalname: transferFeePerc
End popogation

Name: tokenManager Function: getAmountToTransfer
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getAmountToTransfer
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid
TMP_199(uint256) = INTERNAL_CALL, LiquidityPool.getTransferFee(address,uint256)(tokenAddress_1,amount_1)
init
end
init
end
init
end
_______________

Name: PIC_121 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_199 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_199

Name: TMP_199 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tokenManager_21(ITokenManager) := ϕ(['tokenManager_31'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getAmountToTransfer
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_36(ILiquidityProviders) := ϕ(['liquidityProviders_43'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getAmountToTransfer
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
transferFeePerc_1(uint256) := TMP_199(uint256)
asgn
init
end
_______________

Name: TMP_199 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: transferFeePerc Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for transferFeePerc

Name: transferFeePerc Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: transferFeePerc, Num: 1
Globalname: transferFeePerc
End popogation

Name: BASE_DIVISOR Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: baseGas Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: tokenManager Function: getAmountToTransfer
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getAmountToTransfer
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_200(ITokenManager.TokenInfo) = HIGH_LEVEL_CALL, dest:tokenManager_21(ITokenManager), function:getTokensInfo, arguments:['tokenAddress_1']  
High Call: getTokensInfo
Running querryfc
Written func info: TokenManager, getTokensInfo
[i]Type for TMP_200

Name: TMP_200 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: equilibriumFee
Finance Type: undef
XXXX
BASE_DIVISOR_3(uint256) := ϕ(['BASE_DIVISOR_3', 'BASE_DIVISOR_5', 'BASE_DIVISOR_2'])
Phi
[i]Type for BASE_DIVISOR

Name: BASE_DIVISOR Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
baseGas_5(uint256) := ϕ(['baseGas_2', 'baseGas_1', 'baseGas_4', 'baseGas_9'])
Phi
[i]Type for baseGas

Name: baseGas Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tokenManager_22(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_7', 'tokenManager_1', 'tokenManager_21', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getAmountToTransfer
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_37(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_36', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getAmountToTransfer
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_6(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_5', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulated_3(mapping(address => mapping(address => uint256))) := ϕ(['gasFeeAccumulated_16', 'gasFeeAccumulated_10', 'gasFeeAccumulated_22', 'gasFeeAccumulated_2'])
Phi
[i]Type for gasFeeAccumulated

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_25(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_24'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_44(uint256) -> TMP_200.equilibriumFee
MEMBER
init
end
init
end
Source address: u
[i]Type for REF_44

Name: TMP_200.equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: TMP_200, Field: equilibriumFee
#################
Member: 
Name: TMP_200 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: equilibriumFee
Finance Type: undef
Fieldf: 
Name: equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: TMP_200.equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_201(bool) = transferFeePerc_1 > REF_44
init
end
init
end
lnorm: u rnorm: u
init
end
_______________

Name: TMP_200.equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: transferFeePerc Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
init
end
_______________

Name: TMP_200.equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_201 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_201

Name: TMP_201 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Source address: u
Name: amount, Num: 1
Globalname: amount
Name: lpFee, Num: 1
Globalname: lpFee
End popogation

Name: BASE_DIVISOR Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: baseGas Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: tokenManager Function: getAmountToTransfer
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getAmountToTransfer
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_202(ITokenManager.TokenInfo) = HIGH_LEVEL_CALL, dest:tokenManager_22(ITokenManager), function:getTokensInfo, arguments:['tokenAddress_1']  
High Call: getTokensInfo
Running querryfc
Written func info: TokenManager, getTokensInfo
[i]Type for TMP_202

Name: TMP_202 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: equilibriumFee
Finance Type: undef
XXXX
BASE_DIVISOR_4(uint256) := ϕ(['BASE_DIVISOR_3', 'BASE_DIVISOR_5'])
Phi
[i]Type for BASE_DIVISOR

Name: BASE_DIVISOR Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
baseGas_6(uint256) := ϕ(['baseGas_2', 'baseGas_1', 'baseGas_5', 'baseGas_9'])
Phi
[i]Type for baseGas

Name: baseGas Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tokenManager_23(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_7', 'tokenManager_1', 'tokenManager_22', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getAmountToTransfer
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_38(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_37', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getAmountToTransfer
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_7(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_6', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulated_4(mapping(address => mapping(address => uint256))) := ϕ(['gasFeeAccumulated_16', 'gasFeeAccumulated_10', 'gasFeeAccumulated_3', 'gasFeeAccumulated_22'])
Phi
[i]Type for gasFeeAccumulated

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_26(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_46(uint256) -> TMP_202.equilibriumFee
MEMBER
init
end
init
end
Source address: u
[i]Type for REF_46

Name: TMP_202.equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: TMP_202, Field: equilibriumFee
#################
Member: 
Name: TMP_202 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: equilibriumFee
Finance Type: undef
Fieldf: 
Name: equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: TMP_202.equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_203(uint256) = amount_1 (c)* REF_46
testing mul...
init
end
init
end

Name: amount_1 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_202.equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: TMP_202.equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_203 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_203

Name: TMP_203 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_204(uint256) = TMP_203 (c)/ BASE_DIVISOR_4
init
end
init
end
lnorm: u rnorm: u
init
end
init
end
init
end
lnorm: u rnorm: u
init
end
[i]Type for TMP_204

Name: TMP_204 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
lpFee_1(uint256) := TMP_204(uint256)
asgn
init
end
_______________

Name: TMP_204 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: lpFee Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for lpFee

Name: lpFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Source address: u
Name: amount, Num: 1
Globalname: amount
Name: lpFee, Num: 2
Globalname: lpFee
End popogation
TMP_210(uint256) = amount_1 (c)* transferFeePerc_1
testing mul...
init
end
init
end

Name: amount_1 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: transferFeePerc Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: transferFeePerc Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_210 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_210

Name: TMP_210 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_211(uint256) = TMP_210 (c)/ BASE_DIVISOR_3
init
end
init
end
lnorm: u rnorm: u
init
end
init
end
init
end
lnorm: u rnorm: u
init
end
[i]Type for TMP_211

Name: TMP_211 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
lpFee_2(uint256) := TMP_211(uint256)
asgn
init
end
_______________

Name: TMP_211 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: lpFee Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for lpFee

Name: lpFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Source address: u
Name: amount, Num: 1
Globalname: amount
End popogation

Name: BASE_DIVISOR Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: baseGas Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: tokenManager Function: getAmountToTransfer
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getAmountToTransfer
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
REF_47(uint256) -> incentivePool_26[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_47

Name: incentivePool Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_48(uint256) -> incentivePool_26[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_48

Name: incentivePool Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_205(ITokenManager.TokenInfo) = HIGH_LEVEL_CALL, dest:tokenManager_23(ITokenManager), function:getTokensInfo, arguments:['tokenAddress_1']  
High Call: getTokensInfo
Running querryfc
Written func info: TokenManager, getTokensInfo
[i]Type for TMP_205

Name: TMP_205 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: equilibriumFee
Finance Type: undef
XXXX
BASE_DIVISOR_5(uint256) := ϕ(['BASE_DIVISOR_3', 'BASE_DIVISOR_5', 'BASE_DIVISOR_4'])
Phi
[i]Type for BASE_DIVISOR

Name: BASE_DIVISOR Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
baseGas_7(uint256) := ϕ(['baseGas_2', 'baseGas_1', 'baseGas_6', 'baseGas_9'])
Phi
[i]Type for baseGas

Name: baseGas Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tokenManager_24(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_23', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getAmountToTransfer
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_39(ILiquidityProviders) := ϕ(['liquidityProviders_38', 'liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getAmountToTransfer
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_8(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_7', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulated_5(mapping(address => mapping(address => uint256))) := ϕ(['gasFeeAccumulated_16', 'gasFeeAccumulated_10', 'gasFeeAccumulated_4', 'gasFeeAccumulated_22'])
Phi
[i]Type for gasFeeAccumulated

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_27(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_26', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_50(uint256) -> TMP_205.equilibriumFee
MEMBER
init
end
init
end
Source address: u
[i]Type for REF_50

Name: TMP_205.equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: TMP_205, Field: equilibriumFee
#################
Member: 
Name: TMP_205 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: equilibriumFee
Finance Type: undef
Fieldf: 
Name: equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: TMP_205.equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_206(uint256) = transferFeePerc_1 (c)- REF_50
init
end
init
end
init
end
_______________

Name: TMP_205.equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_206 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_206

Name: TMP_206 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_207(uint256) = amount_1 (c)* TMP_206
testing mul...
init
end
init
end

Name: amount_1 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_206 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: TMP_206 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_207 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_207

Name: TMP_207 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_208(uint256) = REF_48 (c)+ TMP_207
init
end
init
end
init
end
_______________

Name: TMP_207 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_208 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_208

Name: TMP_208 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_209(uint256) = TMP_208 (c)/ BASE_DIVISOR_5
init
end
init
end
lnorm: u rnorm: u
init
end
init
end
init
end
lnorm: u rnorm: u
init
end
[i]Type for TMP_209

Name: TMP_209 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_28(mapping(address => uint256)) := ϕ(['incentivePool_26'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_47 (->incentivePool_28) := TMP_209(uint256)
asgn
init
end
_______________

Name: TMP_209 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: REF_47 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_47

Name: REF_47 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
Source address: u
Propogating parameters and globals to SSA variables...
End popogation
Name: lpFee, Num: 3
Globalname: lpFee

Name: lpFee Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
lpFee_3(uint256) := ϕ(['lpFee_1', 'lpFee_2'])
Phi

Name: lpFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: lpFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
init
end
_______________

Name: lpFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: lpFee Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for lpFee

Name: lpFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Source address: u
Name: amount, Num: 1
Globalname: amount
Name: transferFeeAmount, Num: 1
Globalname: transferFeeAmount
End popogation
TMP_212(uint256) = amount_1 (c)* transferFeePerc_1
testing mul...
init
end
init
end

Name: amount_1 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: transferFeePerc Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: transferFeePerc Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_212 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_212

Name: TMP_212 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_213(uint256) = TMP_212 (c)/ BASE_DIVISOR_3
init
end
init
end
lnorm: u rnorm: u
init
end
init
end
init
end
lnorm: u rnorm: u
init
end
[i]Type for TMP_213

Name: TMP_213 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
transferFeeAmount_1(uint256) := TMP_213(uint256)
asgn
init
end
_______________

Name: TMP_213 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: transferFeeAmount Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for transferFeeAmount

Name: transferFeeAmount Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation

Name: baseGas Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: tokenManager Function: getAmountToTransfer
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getAmountToTransfer
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
HIGH_LEVEL_CALL, dest:liquidityProviders_37(ILiquidityProviders), function:addLPFee, arguments:['tokenAddress_1', 'lpFee_3']  
High Call: addLPFee
baseGas_8(uint256) := ϕ(['baseGas_2', 'baseGas_1', 'baseGas_7', 'baseGas_9'])
Phi
[i]Type for baseGas

Name: baseGas Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tokenManager_25(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_24', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getAmountToTransfer
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_40(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_39', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getAmountToTransfer
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_9(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_8', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulated_6(mapping(address => mapping(address => uint256))) := ϕ(['gasFeeAccumulated_16', 'gasFeeAccumulated_10', 'gasFeeAccumulated_22', 'gasFeeAccumulated_5'])
Phi
[i]Type for gasFeeAccumulated

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Source address: u
Name: initialGas, Num: 1
Globalname: initialGas
Name: totalGasUsed, Num: 1
Globalname: totalGasUsed
End popogation
TMP_215(uint256) = SOLIDITY_CALL gasleft()()
[i]Type for TMP_215

Name: TMP_215 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_216(uint256) = initialGas_1 (c)- TMP_215
init
end
init
end
init
end
_______________

Name: TMP_215 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_216 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_216

Name: TMP_216 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
totalGasUsed_1(uint256) := TMP_216(uint256)
asgn
init
end
_______________

Name: TMP_216 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: totalGasUsed Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for totalGasUsed

Name: totalGasUsed Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: totalGasUsed, Num: 1
Globalname: totalGasUsed
Name: totalGasUsed, Num: 2
Globalname: totalGasUsed
End popogation

Name: baseGas Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: tokenManager Function: getAmountToTransfer
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_217(ITokenManager.TokenInfo) = HIGH_LEVEL_CALL, dest:tokenManager_25(ITokenManager), function:getTokensInfo, arguments:['tokenAddress_1']  
High Call: getTokensInfo
Running querryfc
Written func info: TokenManager, getTokensInfo
[i]Type for TMP_217

Name: TMP_217 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: transferOverhead
Finance Type: undef
XXXX
baseGas_9(uint256) := ϕ(['baseGas_2', 'baseGas_1', 'baseGas_8', 'baseGas_9'])
Phi
[i]Type for baseGas

Name: baseGas Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tokenManager_26(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_25', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getAmountToTransfer
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_10(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_9', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulated_7(mapping(address => mapping(address => uint256))) := ϕ(['gasFeeAccumulated_16', 'gasFeeAccumulated_10', 'gasFeeAccumulated_22', 'gasFeeAccumulated_6'])
Phi
[i]Type for gasFeeAccumulated

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_53(uint256) -> TMP_217.transferOverhead
MEMBER
init
end
init
end
Source address: u
[i]Type for REF_53

Name: TMP_217.transferOverhead Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: TMP_217, Field: transferOverhead
#################
Member: 
Name: TMP_217 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: transferOverhead
Finance Type: undef
Fieldf: 
Name: transferOverhead Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: TMP_217.transferOverhead Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: transferOverhead Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_218(uint256) = totalGasUsed_1 (c)+ REF_53
init
end
init
end
init
end
_______________

Name: TMP_217.transferOverhead Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_218 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_218

Name: TMP_218 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
totalGasUsed_2(uint256) := TMP_218(uint256)
asgn
init
end
_______________

Name: TMP_218 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: totalGasUsed Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for totalGasUsed

Name: totalGasUsed Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: totalGasUsed, Num: 3
Globalname: totalGasUsed
End popogation
TMP_219(uint256) = totalGasUsed_2 (c)+ baseGas_9
init
end
init
end
init
end
_______________

Name: baseGas Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_219 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_219

Name: TMP_219 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
totalGasUsed_3(uint256) := TMP_219(uint256)
asgn
init
end
_______________

Name: TMP_219 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: totalGasUsed Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for totalGasUsed

Name: totalGasUsed Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Source address: u
Name: tokenGasPrice, Num: 1
Globalname: tokenGasPrice
Name: gasFee, Num: 1
Globalname: gasFee
End popogation
TMP_220(uint256) = totalGasUsed_3 (c)* tokenGasPrice_1
testing mul...
init
end
init
end

Name: totalGasUsed Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: tokenGasPrice_1 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: totalGasUsed Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_220 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_220

Name: TMP_220 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
gasFee_1(uint256) := TMP_220(uint256)
asgn
init
end
_______________

Name: TMP_220 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: gasFee Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for gasFee

Name: gasFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
REF_54(uint256) -> gasFeeAccumulatedByToken_10[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_54

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_55(uint256) -> gasFeeAccumulatedByToken_10[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_55

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_221(uint256) = REF_55 (c)+ gasFee_1
init
end
init
end
init
end
_______________

Name: gasFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_221 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_221

Name: TMP_221 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_11(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_10'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_54 (->gasFeeAccumulatedByToken_11) := TMP_221(uint256)
asgn
init
end
_______________

Name: TMP_221 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: REF_54 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_54

Name: REF_54 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
Source address: u
Propogating parameters and globals to SSA variables...
End popogation

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
REF_56(mapping(address => uint256)) -> gasFeeAccumulated_7[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_56

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_222(address) = INTERNAL_CALL, LiquidityPool._msgSender()()
init
end
_______________

Name: PIC_33 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_222 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_222

Name: TMP_222 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_57(uint256) -> REF_56[TMP_222]
INDEX
Source address: u
[i]Type for REF_57

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_58(mapping(address => uint256)) -> gasFeeAccumulated_8[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_58

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_223(address) = INTERNAL_CALL, LiquidityPool._msgSender()()
init
end
_______________

Name: PIC_33 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_223 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_223

Name: TMP_223 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_59(uint256) -> REF_58[TMP_223]
INDEX
Source address: u
[i]Type for REF_59

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_224(uint256) = REF_59 (c)+ gasFee_1
init
end
init
end
init
end
_______________

Name: gasFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_224 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_224

Name: TMP_224 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulated_10(mapping(address => mapping(address => uint256))) := ϕ(['gasFeeAccumulated_7'])
Phi
[i]Type for gasFeeAccumulated

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_57 (->gasFeeAccumulated_10) := TMP_224(uint256)
asgn
init
end
_______________

Name: TMP_224 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: REF_57 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_57

Name: REF_57 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
Source address: u
Propogating parameters and globals to SSA variables...
Source address: u
Name: amount, Num: 1
Globalname: amount
Name: amountToTransfer, Num: 1
Globalname: amountToTransfer
End popogation
TMP_225(uint256) = transferFeeAmount_1 (c)+ gasFee_1
init
end
init
end
init
end
_______________

Name: gasFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_225 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_225

Name: TMP_225 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_226(uint256) = amount_1 (c)- TMP_225
init
end
init
end
init
end
_______________

Name: TMP_225 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_226 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_226

Name: TMP_226 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
amountToTransfer_1(uint256) := TMP_226(uint256)
asgn
init
end
_______________

Name: TMP_226 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amountToTransfer Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for amountToTransfer

Name: amountToTransfer Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Source address: u
Name: initialGas, Num: 1
Globalname: initialGas

Name: initialGas_1 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: tokenAddress Function: getAmountToTransfer
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
Phid
Source address: u
Name: amount, Num: 1
Globalname: amount

Name: amount_1 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Source address: u
Name: tokenGasPrice, Num: 1
Globalname: tokenGasPrice

Name: tokenGasPrice_1 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: BASE_DIVISOR Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: baseGas Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: tokenManager Function: getAmountToTransfer
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getAmountToTransfer
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
initialGas_1(uint256) := ϕ(['initialGas_1'])
Phi

Name: initialGas Function: sendFundsToUser
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for initialGas

Name: initialGas Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tokenAddress_1(address) := ϕ(['tokenAddress_1'])
Phi
[i]Type for tokenAddress

Name: tokenAddress Function: getAmountToTransfer
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount_1'])
Phi

Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for amount

Name: amount Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tokenGasPrice_1(uint256) := ϕ(['tokenGasPrice_1'])
Phi

Name: tokenGasPrice Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for tokenGasPrice

Name: tokenGasPrice Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
BASE_DIVISOR_1(uint256) := ϕ(['BASE_DIVISOR_3', 'BASE_DIVISOR_5', 'BASE_DIVISOR_0'])
Phi
[i]Type for BASE_DIVISOR

Name: BASE_DIVISOR Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
baseGas_3(uint256) := ϕ(['baseGas_2', 'baseGas_1', 'baseGas_0', 'baseGas_9'])
Phi
[i]Type for baseGas

Name: baseGas Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tokenManager_20(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_0', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getAmountToTransfer
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_35(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getAmountToTransfer
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_4(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_0', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulated_1(mapping(address => mapping(address => uint256))) := ϕ(['gasFeeAccumulated_0', 'gasFeeAccumulated_10', 'gasFeeAccumulated_16', 'gasFeeAccumulated_22'])
Phi
[i]Type for gasFeeAccumulated

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_23(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_0'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Source address: u
Name: amount, Num: 1
Globalname: amount
End popogation

Name: tokenManager Function: getAmountToTransfer
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getAmountToTransfer
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid
TMP_199(uint256) = INTERNAL_CALL, LiquidityPool.getTransferFee(address,uint256)(tokenAddress_1,amount_1)
init
end
init
end
init
end
_______________

Name: PIC_121 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_199 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_199

Name: TMP_199 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tokenManager_21(ITokenManager) := ϕ(['tokenManager_31'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getAmountToTransfer
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_36(ILiquidityProviders) := ϕ(['liquidityProviders_43'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getAmountToTransfer
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
transferFeePerc_1(uint256) := TMP_199(uint256)
asgn
init
end
_______________

Name: TMP_199 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: transferFeePerc Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for transferFeePerc

Name: transferFeePerc Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation

Name: BASE_DIVISOR Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: baseGas Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: tokenManager Function: getAmountToTransfer
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getAmountToTransfer
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_200(ITokenManager.TokenInfo) = HIGH_LEVEL_CALL, dest:tokenManager_21(ITokenManager), function:getTokensInfo, arguments:['tokenAddress_1']  
High Call: getTokensInfo
Running querryfc
Written func info: TokenManager, getTokensInfo
[i]Type for TMP_200

Name: TMP_200 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: equilibriumFee
Finance Type: undef
XXXX
BASE_DIVISOR_3(uint256) := ϕ(['BASE_DIVISOR_3', 'BASE_DIVISOR_5', 'BASE_DIVISOR_2'])
Phi
[i]Type for BASE_DIVISOR

Name: BASE_DIVISOR Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
baseGas_5(uint256) := ϕ(['baseGas_2', 'baseGas_1', 'baseGas_4', 'baseGas_9'])
Phi
[i]Type for baseGas

Name: baseGas Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tokenManager_22(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_7', 'tokenManager_1', 'tokenManager_21', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getAmountToTransfer
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_37(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_36', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getAmountToTransfer
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_6(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_5', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulated_3(mapping(address => mapping(address => uint256))) := ϕ(['gasFeeAccumulated_16', 'gasFeeAccumulated_10', 'gasFeeAccumulated_22', 'gasFeeAccumulated_2'])
Phi
[i]Type for gasFeeAccumulated

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_25(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_24'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_44(uint256) -> TMP_200.equilibriumFee
MEMBER
init
end
init
end
init
end
_______________

Name: TMP_200.equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for REF_44

Name: TMP_200.equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: TMP_200, Field: equilibriumFee
#################
Member: 
Name: TMP_200 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: equilibriumFee
Finance Type: undef
Fieldf: 
Name: equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: TMP_200.equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_201(bool) = transferFeePerc_1 > REF_44
init
end
init
end
lnorm: u rnorm: u
[i]Type for TMP_201

Name: TMP_201 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Source address: u
Name: amount, Num: 1
Globalname: amount
End popogation

Name: BASE_DIVISOR Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: baseGas Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: tokenManager Function: getAmountToTransfer
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getAmountToTransfer
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_202(ITokenManager.TokenInfo) = HIGH_LEVEL_CALL, dest:tokenManager_22(ITokenManager), function:getTokensInfo, arguments:['tokenAddress_1']  
High Call: getTokensInfo
Running querryfc
Written func info: TokenManager, getTokensInfo
[i]Type for TMP_202

Name: TMP_202 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: equilibriumFee
Finance Type: undef
XXXX
BASE_DIVISOR_4(uint256) := ϕ(['BASE_DIVISOR_3', 'BASE_DIVISOR_5'])
Phi
[i]Type for BASE_DIVISOR

Name: BASE_DIVISOR Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
baseGas_6(uint256) := ϕ(['baseGas_2', 'baseGas_1', 'baseGas_5', 'baseGas_9'])
Phi
[i]Type for baseGas

Name: baseGas Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tokenManager_23(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_7', 'tokenManager_1', 'tokenManager_22', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getAmountToTransfer
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_38(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_37', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getAmountToTransfer
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_7(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_6', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulated_4(mapping(address => mapping(address => uint256))) := ϕ(['gasFeeAccumulated_16', 'gasFeeAccumulated_10', 'gasFeeAccumulated_3', 'gasFeeAccumulated_22'])
Phi
[i]Type for gasFeeAccumulated

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_26(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_46(uint256) -> TMP_202.equilibriumFee
MEMBER
init
end
init
end
init
end
_______________

Name: TMP_202.equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for REF_46

Name: TMP_202.equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: TMP_202, Field: equilibriumFee
#################
Member: 
Name: TMP_202 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: equilibriumFee
Finance Type: undef
Fieldf: 
Name: equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: TMP_202.equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_203(uint256) = amount_1 (c)* REF_46
testing mul...
init
end
init
end

Name: amount_1 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_202.equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
[i]Type for TMP_203

Name: TMP_203 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_204(uint256) = TMP_203 (c)/ BASE_DIVISOR_4
init
end
init
end
lnorm: u rnorm: u
init
end
init
end
init
end
lnorm: u rnorm: u
init
end
[i]Type for TMP_204

Name: TMP_204 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
lpFee_1(uint256) := TMP_204(uint256)
asgn
init
end
_______________

Name: TMP_204 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: lpFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for lpFee

Name: lpFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Source address: u
Name: amount, Num: 1
Globalname: amount
End popogation
TMP_210(uint256) = amount_1 (c)* transferFeePerc_1
testing mul...
init
end
init
end

Name: amount_1 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: transferFeePerc Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
[i]Type for TMP_210

Name: TMP_210 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_211(uint256) = TMP_210 (c)/ BASE_DIVISOR_3
init
end
init
end
lnorm: u rnorm: u
init
end
init
end
init
end
lnorm: u rnorm: u
init
end
[i]Type for TMP_211

Name: TMP_211 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
lpFee_2(uint256) := TMP_211(uint256)
asgn
init
end
_______________

Name: TMP_211 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: lpFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for lpFee

Name: lpFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Source address: u
Name: amount, Num: 1
Globalname: amount
End popogation

Name: BASE_DIVISOR Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: baseGas Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: tokenManager Function: getAmountToTransfer
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getAmountToTransfer
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
REF_47(uint256) -> incentivePool_26[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_47

Name: incentivePool Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_48(uint256) -> incentivePool_26[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_48

Name: incentivePool Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_205(ITokenManager.TokenInfo) = HIGH_LEVEL_CALL, dest:tokenManager_23(ITokenManager), function:getTokensInfo, arguments:['tokenAddress_1']  
High Call: getTokensInfo
Running querryfc
Written func info: TokenManager, getTokensInfo
[i]Type for TMP_205

Name: TMP_205 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: equilibriumFee
Finance Type: undef
XXXX
BASE_DIVISOR_5(uint256) := ϕ(['BASE_DIVISOR_3', 'BASE_DIVISOR_5', 'BASE_DIVISOR_4'])
Phi
[i]Type for BASE_DIVISOR

Name: BASE_DIVISOR Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
baseGas_7(uint256) := ϕ(['baseGas_2', 'baseGas_1', 'baseGas_6', 'baseGas_9'])
Phi
[i]Type for baseGas

Name: baseGas Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tokenManager_24(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_23', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getAmountToTransfer
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_39(ILiquidityProviders) := ϕ(['liquidityProviders_38', 'liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getAmountToTransfer
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_8(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_7', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulated_5(mapping(address => mapping(address => uint256))) := ϕ(['gasFeeAccumulated_16', 'gasFeeAccumulated_10', 'gasFeeAccumulated_4', 'gasFeeAccumulated_22'])
Phi
[i]Type for gasFeeAccumulated

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_27(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_26', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_50(uint256) -> TMP_205.equilibriumFee
MEMBER
init
end
init
end
init
end
_______________

Name: TMP_205.equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for REF_50

Name: TMP_205.equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: TMP_205, Field: equilibriumFee
#################
Member: 
Name: TMP_205 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: equilibriumFee
Finance Type: undef
Fieldf: 
Name: equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: TMP_205.equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_206(uint256) = transferFeePerc_1 (c)- REF_50
init
end
init
end
init
end
_______________

Name: TMP_205.equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_206 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_206

Name: TMP_206 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_207(uint256) = amount_1 (c)* TMP_206
testing mul...
init
end
init
end

Name: amount_1 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_206 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
[i]Type for TMP_207

Name: TMP_207 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_208(uint256) = REF_48 (c)+ TMP_207
init
end
init
end
init
end
_______________

Name: TMP_207 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_208 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_208

Name: TMP_208 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_209(uint256) = TMP_208 (c)/ BASE_DIVISOR_5
init
end
init
end
lnorm: u rnorm: u
init
end
init
end
init
end
lnorm: u rnorm: u
init
end
[i]Type for TMP_209

Name: TMP_209 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_28(mapping(address => uint256)) := ϕ(['incentivePool_26'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_47 (->incentivePool_28) := TMP_209(uint256)
asgn
init
end
_______________

Name: TMP_209 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: REF_47 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_47

Name: REF_47 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
Source address: u
Propogating parameters and globals to SSA variables...
End popogation

Name: lpFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
lpFee_3(uint256) := ϕ(['lpFee_1', 'lpFee_2'])
Phi
[i]Type for lpFee

Name: lpFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Source address: u
Name: amount, Num: 1
Globalname: amount
End popogation
TMP_212(uint256) = amount_1 (c)* transferFeePerc_1
testing mul...
init
end
init
end

Name: amount_1 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: transferFeePerc Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
[i]Type for TMP_212

Name: TMP_212 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_213(uint256) = TMP_212 (c)/ BASE_DIVISOR_3
init
end
init
end
lnorm: u rnorm: u
init
end
init
end
init
end
lnorm: u rnorm: u
init
end
[i]Type for TMP_213

Name: TMP_213 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
transferFeeAmount_1(uint256) := TMP_213(uint256)
asgn
init
end
_______________

Name: TMP_213 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: transferFeeAmount Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for transferFeeAmount

Name: transferFeeAmount Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation

Name: baseGas Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: tokenManager Function: getAmountToTransfer
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getAmountToTransfer
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
HIGH_LEVEL_CALL, dest:liquidityProviders_37(ILiquidityProviders), function:addLPFee, arguments:['tokenAddress_1', 'lpFee_3']  
High Call: addLPFee
baseGas_8(uint256) := ϕ(['baseGas_2', 'baseGas_1', 'baseGas_7', 'baseGas_9'])
Phi
[i]Type for baseGas

Name: baseGas Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tokenManager_25(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_24', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getAmountToTransfer
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_40(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_39', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getAmountToTransfer
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_9(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_8', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulated_6(mapping(address => mapping(address => uint256))) := ϕ(['gasFeeAccumulated_16', 'gasFeeAccumulated_10', 'gasFeeAccumulated_22', 'gasFeeAccumulated_5'])
Phi
[i]Type for gasFeeAccumulated

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Source address: u
Name: initialGas, Num: 1
Globalname: initialGas
Name: totalGasUsed, Num: 1
Globalname: totalGasUsed
End popogation
TMP_215(uint256) = SOLIDITY_CALL gasleft()()
[i]Type for TMP_215

Name: TMP_215 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_216(uint256) = initialGas_1 (c)- TMP_215
init
end
init
end
init
end
_______________

Name: TMP_215 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_216 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_216

Name: TMP_216 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
totalGasUsed_1(uint256) := TMP_216(uint256)
asgn
init
end
_______________

Name: TMP_216 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: totalGasUsed Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for totalGasUsed

Name: totalGasUsed Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: totalGasUsed, Num: 1
Globalname: totalGasUsed
End popogation

Name: baseGas Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: tokenManager Function: getAmountToTransfer
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_217(ITokenManager.TokenInfo) = HIGH_LEVEL_CALL, dest:tokenManager_25(ITokenManager), function:getTokensInfo, arguments:['tokenAddress_1']  
High Call: getTokensInfo
Running querryfc
Written func info: TokenManager, getTokensInfo
[i]Type for TMP_217

Name: TMP_217 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: transferOverhead
Finance Type: undef
XXXX
baseGas_9(uint256) := ϕ(['baseGas_2', 'baseGas_1', 'baseGas_8', 'baseGas_9'])
Phi
[i]Type for baseGas

Name: baseGas Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tokenManager_26(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_25', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getAmountToTransfer
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_10(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_9', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulated_7(mapping(address => mapping(address => uint256))) := ϕ(['gasFeeAccumulated_16', 'gasFeeAccumulated_10', 'gasFeeAccumulated_22', 'gasFeeAccumulated_6'])
Phi
[i]Type for gasFeeAccumulated

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_53(uint256) -> TMP_217.transferOverhead
MEMBER
init
end
init
end
init
end
_______________

Name: TMP_217.transferOverhead Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: transferOverhead Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for REF_53

Name: TMP_217.transferOverhead Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: TMP_217, Field: transferOverhead
#################
Member: 
Name: TMP_217 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: transferOverhead
Finance Type: undef
Fieldf: 
Name: transferOverhead Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: TMP_217.transferOverhead Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: transferOverhead Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_218(uint256) = totalGasUsed_1 (c)+ REF_53
init
end
init
end
init
end
_______________

Name: TMP_217.transferOverhead Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_218 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_218

Name: TMP_218 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
totalGasUsed_2(uint256) := TMP_218(uint256)
asgn
init
end
_______________

Name: TMP_218 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: totalGasUsed Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for totalGasUsed

Name: totalGasUsed Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_219(uint256) = totalGasUsed_2 (c)+ baseGas_9
init
end
init
end
init
end
_______________

Name: baseGas Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_219 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_219

Name: TMP_219 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
totalGasUsed_3(uint256) := TMP_219(uint256)
asgn
init
end
_______________

Name: TMP_219 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: totalGasUsed Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for totalGasUsed

Name: totalGasUsed Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Source address: u
Name: tokenGasPrice, Num: 1
Globalname: tokenGasPrice
End popogation
TMP_220(uint256) = totalGasUsed_3 (c)* tokenGasPrice_1
testing mul...
init
end
init
end

Name: totalGasUsed Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: tokenGasPrice_1 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
[i]Type for TMP_220

Name: TMP_220 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
gasFee_1(uint256) := TMP_220(uint256)
asgn
init
end
_______________

Name: TMP_220 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: gasFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for gasFee

Name: gasFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
REF_54(uint256) -> gasFeeAccumulatedByToken_10[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_54

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_55(uint256) -> gasFeeAccumulatedByToken_10[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_55

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_221(uint256) = REF_55 (c)+ gasFee_1
init
end
init
end
init
end
_______________

Name: gasFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_221 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_221

Name: TMP_221 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_11(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_10'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_54 (->gasFeeAccumulatedByToken_11) := TMP_221(uint256)
asgn
init
end
_______________

Name: TMP_221 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: REF_54 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_54

Name: REF_54 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
Source address: u
Propogating parameters and globals to SSA variables...
End popogation

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
REF_56(mapping(address => uint256)) -> gasFeeAccumulated_7[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_56

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_222(address) = INTERNAL_CALL, LiquidityPool._msgSender()()
init
end
_______________

Name: PIC_33 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_222 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_222

Name: TMP_222 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_57(uint256) -> REF_56[TMP_222]
INDEX
Source address: u
[i]Type for REF_57

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_58(mapping(address => uint256)) -> gasFeeAccumulated_8[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_58

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_223(address) = INTERNAL_CALL, LiquidityPool._msgSender()()
init
end
_______________

Name: PIC_33 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_223 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_223

Name: TMP_223 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_59(uint256) -> REF_58[TMP_223]
INDEX
Source address: u
[i]Type for REF_59

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_224(uint256) = REF_59 (c)+ gasFee_1
init
end
init
end
init
end
_______________

Name: gasFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_224 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_224

Name: TMP_224 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulated_10(mapping(address => mapping(address => uint256))) := ϕ(['gasFeeAccumulated_7'])
Phi
[i]Type for gasFeeAccumulated

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_57 (->gasFeeAccumulated_10) := TMP_224(uint256)
asgn
init
end
_______________

Name: TMP_224 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: REF_57 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_57

Name: REF_57 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
Source address: u
Propogating parameters and globals to SSA variables...
Source address: u
Name: amount, Num: 1
Globalname: amount
End popogation
TMP_225(uint256) = transferFeeAmount_1 (c)+ gasFee_1
init
end
init
end
init
end
_______________

Name: gasFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_225 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_225

Name: TMP_225 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_226(uint256) = amount_1 (c)- TMP_225
init
end
init
end
init
end
_______________

Name: TMP_225 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_226 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_226

Name: TMP_226 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
amountToTransfer_1(uint256) := TMP_226(uint256)
asgn
init
end
_______________

Name: TMP_226 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amountToTransfer Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for amountToTransfer

Name: amountToTransfer Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Source address: u
Name: initialGas, Num: 1
Globalname: initialGas

Name: initialGas_1 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: tokenAddress Function: getAmountToTransfer
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
Phid
Source address: u
Name: amount, Num: 1
Globalname: amount

Name: amount_1 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Source address: u
Name: tokenGasPrice, Num: 1
Globalname: tokenGasPrice

Name: tokenGasPrice_1 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: BASE_DIVISOR Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: baseGas Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: tokenManager Function: getAmountToTransfer
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getAmountToTransfer
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
initialGas_1(uint256) := ϕ(['initialGas_1'])
Phi

Name: initialGas Function: sendFundsToUser
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for initialGas

Name: initialGas Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tokenAddress_1(address) := ϕ(['tokenAddress_1'])
Phi
[i]Type for tokenAddress

Name: tokenAddress Function: getAmountToTransfer
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount_1'])
Phi

Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for amount

Name: amount Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tokenGasPrice_1(uint256) := ϕ(['tokenGasPrice_1'])
Phi

Name: tokenGasPrice Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for tokenGasPrice

Name: tokenGasPrice Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
BASE_DIVISOR_1(uint256) := ϕ(['BASE_DIVISOR_3', 'BASE_DIVISOR_5', 'BASE_DIVISOR_0'])
Phi
[i]Type for BASE_DIVISOR

Name: BASE_DIVISOR Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
baseGas_3(uint256) := ϕ(['baseGas_2', 'baseGas_1', 'baseGas_0', 'baseGas_9'])
Phi
[i]Type for baseGas

Name: baseGas Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tokenManager_20(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_0', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getAmountToTransfer
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_35(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getAmountToTransfer
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_4(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_0', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulated_1(mapping(address => mapping(address => uint256))) := ϕ(['gasFeeAccumulated_0', 'gasFeeAccumulated_10', 'gasFeeAccumulated_16', 'gasFeeAccumulated_22'])
Phi
[i]Type for gasFeeAccumulated

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_23(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_0'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Source address: u
Name: amount, Num: 1
Globalname: amount
End popogation

Name: tokenManager Function: getAmountToTransfer
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getAmountToTransfer
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid
TMP_199(uint256) = INTERNAL_CALL, LiquidityPool.getTransferFee(address,uint256)(tokenAddress_1,amount_1)
init
end
init
end
init
end
_______________

Name: PIC_121 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_199 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_199

Name: TMP_199 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tokenManager_21(ITokenManager) := ϕ(['tokenManager_31'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getAmountToTransfer
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_36(ILiquidityProviders) := ϕ(['liquidityProviders_43'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getAmountToTransfer
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
transferFeePerc_1(uint256) := TMP_199(uint256)
asgn
init
end
_______________

Name: TMP_199 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: transferFeePerc Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for transferFeePerc

Name: transferFeePerc Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation

Name: BASE_DIVISOR Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: baseGas Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: tokenManager Function: getAmountToTransfer
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getAmountToTransfer
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_200(ITokenManager.TokenInfo) = HIGH_LEVEL_CALL, dest:tokenManager_21(ITokenManager), function:getTokensInfo, arguments:['tokenAddress_1']  
High Call: getTokensInfo
Running querryfc
Written func info: TokenManager, getTokensInfo
[i]Type for TMP_200

Name: TMP_200 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: equilibriumFee
Finance Type: undef
XXXX
BASE_DIVISOR_3(uint256) := ϕ(['BASE_DIVISOR_3', 'BASE_DIVISOR_5', 'BASE_DIVISOR_2'])
Phi
[i]Type for BASE_DIVISOR

Name: BASE_DIVISOR Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
baseGas_5(uint256) := ϕ(['baseGas_2', 'baseGas_1', 'baseGas_4', 'baseGas_9'])
Phi
[i]Type for baseGas

Name: baseGas Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tokenManager_22(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_7', 'tokenManager_1', 'tokenManager_21', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getAmountToTransfer
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_37(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_36', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getAmountToTransfer
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_6(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_5', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulated_3(mapping(address => mapping(address => uint256))) := ϕ(['gasFeeAccumulated_16', 'gasFeeAccumulated_10', 'gasFeeAccumulated_22', 'gasFeeAccumulated_2'])
Phi
[i]Type for gasFeeAccumulated

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_25(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_24'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_44(uint256) -> TMP_200.equilibriumFee
MEMBER
init
end
init
end
init
end
_______________

Name: TMP_200.equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for REF_44

Name: TMP_200.equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: TMP_200, Field: equilibriumFee
#################
Member: 
Name: TMP_200 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: equilibriumFee
Finance Type: undef
Fieldf: 
Name: equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: TMP_200.equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_201(bool) = transferFeePerc_1 > REF_44
init
end
init
end
lnorm: u rnorm: u
[i]Type for TMP_201

Name: TMP_201 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Source address: u
Name: amount, Num: 1
Globalname: amount
End popogation

Name: BASE_DIVISOR Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: baseGas Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: tokenManager Function: getAmountToTransfer
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getAmountToTransfer
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_202(ITokenManager.TokenInfo) = HIGH_LEVEL_CALL, dest:tokenManager_22(ITokenManager), function:getTokensInfo, arguments:['tokenAddress_1']  
High Call: getTokensInfo
Running querryfc
Written func info: TokenManager, getTokensInfo
[i]Type for TMP_202

Name: TMP_202 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: equilibriumFee
Finance Type: undef
XXXX
BASE_DIVISOR_4(uint256) := ϕ(['BASE_DIVISOR_3', 'BASE_DIVISOR_5'])
Phi
[i]Type for BASE_DIVISOR

Name: BASE_DIVISOR Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
baseGas_6(uint256) := ϕ(['baseGas_2', 'baseGas_1', 'baseGas_5', 'baseGas_9'])
Phi
[i]Type for baseGas

Name: baseGas Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tokenManager_23(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_7', 'tokenManager_1', 'tokenManager_22', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getAmountToTransfer
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_38(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_37', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getAmountToTransfer
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_7(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_6', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulated_4(mapping(address => mapping(address => uint256))) := ϕ(['gasFeeAccumulated_16', 'gasFeeAccumulated_10', 'gasFeeAccumulated_3', 'gasFeeAccumulated_22'])
Phi
[i]Type for gasFeeAccumulated

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_26(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_46(uint256) -> TMP_202.equilibriumFee
MEMBER
init
end
init
end
init
end
_______________

Name: TMP_202.equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for REF_46

Name: TMP_202.equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: TMP_202, Field: equilibriumFee
#################
Member: 
Name: TMP_202 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: equilibriumFee
Finance Type: undef
Fieldf: 
Name: equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: TMP_202.equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_203(uint256) = amount_1 (c)* REF_46
testing mul...
init
end
init
end

Name: amount_1 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_202.equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
[i]Type for TMP_203

Name: TMP_203 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_204(uint256) = TMP_203 (c)/ BASE_DIVISOR_4
init
end
init
end
lnorm: u rnorm: u
init
end
init
end
init
end
lnorm: u rnorm: u
init
end
[i]Type for TMP_204

Name: TMP_204 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
lpFee_1(uint256) := TMP_204(uint256)
asgn
init
end
_______________

Name: TMP_204 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: lpFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for lpFee

Name: lpFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Source address: u
Name: amount, Num: 1
Globalname: amount
End popogation
TMP_210(uint256) = amount_1 (c)* transferFeePerc_1
testing mul...
init
end
init
end

Name: amount_1 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: transferFeePerc Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
[i]Type for TMP_210

Name: TMP_210 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_211(uint256) = TMP_210 (c)/ BASE_DIVISOR_3
init
end
init
end
lnorm: u rnorm: u
init
end
init
end
init
end
lnorm: u rnorm: u
init
end
[i]Type for TMP_211

Name: TMP_211 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
lpFee_2(uint256) := TMP_211(uint256)
asgn
init
end
_______________

Name: TMP_211 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: lpFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for lpFee

Name: lpFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Source address: u
Name: amount, Num: 1
Globalname: amount
End popogation

Name: BASE_DIVISOR Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: baseGas Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: tokenManager Function: getAmountToTransfer
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getAmountToTransfer
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
REF_47(uint256) -> incentivePool_26[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_47

Name: incentivePool Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_48(uint256) -> incentivePool_26[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_48

Name: incentivePool Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_205(ITokenManager.TokenInfo) = HIGH_LEVEL_CALL, dest:tokenManager_23(ITokenManager), function:getTokensInfo, arguments:['tokenAddress_1']  
High Call: getTokensInfo
Running querryfc
Written func info: TokenManager, getTokensInfo
[i]Type for TMP_205

Name: TMP_205 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: equilibriumFee
Finance Type: undef
XXXX
BASE_DIVISOR_5(uint256) := ϕ(['BASE_DIVISOR_3', 'BASE_DIVISOR_5', 'BASE_DIVISOR_4'])
Phi
[i]Type for BASE_DIVISOR

Name: BASE_DIVISOR Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
baseGas_7(uint256) := ϕ(['baseGas_2', 'baseGas_1', 'baseGas_6', 'baseGas_9'])
Phi
[i]Type for baseGas

Name: baseGas Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tokenManager_24(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_23', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getAmountToTransfer
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_39(ILiquidityProviders) := ϕ(['liquidityProviders_38', 'liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getAmountToTransfer
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_8(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_7', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulated_5(mapping(address => mapping(address => uint256))) := ϕ(['gasFeeAccumulated_16', 'gasFeeAccumulated_10', 'gasFeeAccumulated_4', 'gasFeeAccumulated_22'])
Phi
[i]Type for gasFeeAccumulated

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_27(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_26', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_50(uint256) -> TMP_205.equilibriumFee
MEMBER
init
end
init
end
init
end
_______________

Name: TMP_205.equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for REF_50

Name: TMP_205.equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: TMP_205, Field: equilibriumFee
#################
Member: 
Name: TMP_205 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: equilibriumFee
Finance Type: undef
Fieldf: 
Name: equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: TMP_205.equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_206(uint256) = transferFeePerc_1 (c)- REF_50
init
end
init
end
init
end
_______________

Name: TMP_205.equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_206 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_206

Name: TMP_206 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_207(uint256) = amount_1 (c)* TMP_206
testing mul...
init
end
init
end

Name: amount_1 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_206 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
[i]Type for TMP_207

Name: TMP_207 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_208(uint256) = REF_48 (c)+ TMP_207
init
end
init
end
init
end
_______________

Name: TMP_207 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_208 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_208

Name: TMP_208 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_209(uint256) = TMP_208 (c)/ BASE_DIVISOR_5
init
end
init
end
lnorm: u rnorm: u
init
end
init
end
init
end
lnorm: u rnorm: u
init
end
[i]Type for TMP_209

Name: TMP_209 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_28(mapping(address => uint256)) := ϕ(['incentivePool_26'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_47 (->incentivePool_28) := TMP_209(uint256)
asgn
init
end
_______________

Name: TMP_209 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: REF_47 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_47

Name: REF_47 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
Source address: u
Propogating parameters and globals to SSA variables...
End popogation

Name: lpFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
lpFee_3(uint256) := ϕ(['lpFee_1', 'lpFee_2'])
Phi
[i]Type for lpFee

Name: lpFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Source address: u
Name: amount, Num: 1
Globalname: amount
End popogation
TMP_212(uint256) = amount_1 (c)* transferFeePerc_1
testing mul...
init
end
init
end

Name: amount_1 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: transferFeePerc Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
[i]Type for TMP_212

Name: TMP_212 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_213(uint256) = TMP_212 (c)/ BASE_DIVISOR_3
init
end
init
end
lnorm: u rnorm: u
init
end
init
end
init
end
lnorm: u rnorm: u
init
end
[i]Type for TMP_213

Name: TMP_213 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
transferFeeAmount_1(uint256) := TMP_213(uint256)
asgn
init
end
_______________

Name: TMP_213 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: transferFeeAmount Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for transferFeeAmount

Name: transferFeeAmount Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation

Name: baseGas Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: tokenManager Function: getAmountToTransfer
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getAmountToTransfer
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
HIGH_LEVEL_CALL, dest:liquidityProviders_37(ILiquidityProviders), function:addLPFee, arguments:['tokenAddress_1', 'lpFee_3']  
High Call: addLPFee
baseGas_8(uint256) := ϕ(['baseGas_2', 'baseGas_1', 'baseGas_7', 'baseGas_9'])
Phi
[i]Type for baseGas

Name: baseGas Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tokenManager_25(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_24', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getAmountToTransfer
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_40(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_39', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getAmountToTransfer
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_9(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_8', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulated_6(mapping(address => mapping(address => uint256))) := ϕ(['gasFeeAccumulated_16', 'gasFeeAccumulated_10', 'gasFeeAccumulated_22', 'gasFeeAccumulated_5'])
Phi
[i]Type for gasFeeAccumulated

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Source address: u
Name: initialGas, Num: 1
Globalname: initialGas
Name: totalGasUsed, Num: 1
Globalname: totalGasUsed
End popogation
TMP_215(uint256) = SOLIDITY_CALL gasleft()()
[i]Type for TMP_215

Name: TMP_215 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_216(uint256) = initialGas_1 (c)- TMP_215
init
end
init
end
init
end
_______________

Name: TMP_215 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_216 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_216

Name: TMP_216 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
totalGasUsed_1(uint256) := TMP_216(uint256)
asgn
init
end
_______________

Name: TMP_216 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: totalGasUsed Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for totalGasUsed

Name: totalGasUsed Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: totalGasUsed, Num: 1
Globalname: totalGasUsed
End popogation

Name: baseGas Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: tokenManager Function: getAmountToTransfer
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_217(ITokenManager.TokenInfo) = HIGH_LEVEL_CALL, dest:tokenManager_25(ITokenManager), function:getTokensInfo, arguments:['tokenAddress_1']  
High Call: getTokensInfo
Running querryfc
Written func info: TokenManager, getTokensInfo
[i]Type for TMP_217

Name: TMP_217 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: transferOverhead
Finance Type: undef
XXXX
baseGas_9(uint256) := ϕ(['baseGas_2', 'baseGas_1', 'baseGas_8', 'baseGas_9'])
Phi
[i]Type for baseGas

Name: baseGas Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tokenManager_26(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_25', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getAmountToTransfer
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_10(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_9', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulated_7(mapping(address => mapping(address => uint256))) := ϕ(['gasFeeAccumulated_16', 'gasFeeAccumulated_10', 'gasFeeAccumulated_22', 'gasFeeAccumulated_6'])
Phi
[i]Type for gasFeeAccumulated

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_53(uint256) -> TMP_217.transferOverhead
MEMBER
init
end
init
end
init
end
_______________

Name: TMP_217.transferOverhead Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: transferOverhead Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for REF_53

Name: TMP_217.transferOverhead Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: TMP_217, Field: transferOverhead
#################
Member: 
Name: TMP_217 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: transferOverhead
Finance Type: undef
Fieldf: 
Name: transferOverhead Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: TMP_217.transferOverhead Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: transferOverhead Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_218(uint256) = totalGasUsed_1 (c)+ REF_53
init
end
init
end
init
end
_______________

Name: TMP_217.transferOverhead Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_218 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_218

Name: TMP_218 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
totalGasUsed_2(uint256) := TMP_218(uint256)
asgn
init
end
_______________

Name: TMP_218 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: totalGasUsed Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for totalGasUsed

Name: totalGasUsed Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_219(uint256) = totalGasUsed_2 (c)+ baseGas_9
init
end
init
end
init
end
_______________

Name: baseGas Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_219 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_219

Name: TMP_219 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
totalGasUsed_3(uint256) := TMP_219(uint256)
asgn
init
end
_______________

Name: TMP_219 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: totalGasUsed Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for totalGasUsed

Name: totalGasUsed Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Source address: u
Name: tokenGasPrice, Num: 1
Globalname: tokenGasPrice
End popogation
TMP_220(uint256) = totalGasUsed_3 (c)* tokenGasPrice_1
testing mul...
init
end
init
end

Name: totalGasUsed Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: tokenGasPrice_1 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
[i]Type for TMP_220

Name: TMP_220 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
gasFee_1(uint256) := TMP_220(uint256)
asgn
init
end
_______________

Name: TMP_220 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: gasFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for gasFee

Name: gasFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
REF_54(uint256) -> gasFeeAccumulatedByToken_10[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_54

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_55(uint256) -> gasFeeAccumulatedByToken_10[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_55

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_221(uint256) = REF_55 (c)+ gasFee_1
init
end
init
end
init
end
_______________

Name: gasFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_221 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_221

Name: TMP_221 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_11(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_10'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_54 (->gasFeeAccumulatedByToken_11) := TMP_221(uint256)
asgn
init
end
_______________

Name: TMP_221 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: REF_54 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_54

Name: REF_54 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
Source address: u
Propogating parameters and globals to SSA variables...
End popogation

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
REF_56(mapping(address => uint256)) -> gasFeeAccumulated_7[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_56

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_222(address) = INTERNAL_CALL, LiquidityPool._msgSender()()
init
end
_______________

Name: PIC_33 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_222 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_222

Name: TMP_222 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_57(uint256) -> REF_56[TMP_222]
INDEX
Source address: u
[i]Type for REF_57

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_58(mapping(address => uint256)) -> gasFeeAccumulated_8[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_58

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_223(address) = INTERNAL_CALL, LiquidityPool._msgSender()()
init
end
_______________

Name: PIC_33 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_223 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_223

Name: TMP_223 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_59(uint256) -> REF_58[TMP_223]
INDEX
Source address: u
[i]Type for REF_59

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_224(uint256) = REF_59 (c)+ gasFee_1
init
end
init
end
init
end
_______________

Name: gasFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_224 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_224

Name: TMP_224 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulated_10(mapping(address => mapping(address => uint256))) := ϕ(['gasFeeAccumulated_7'])
Phi
[i]Type for gasFeeAccumulated

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_57 (->gasFeeAccumulated_10) := TMP_224(uint256)
asgn
init
end
_______________

Name: TMP_224 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: REF_57 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_57

Name: REF_57 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
Source address: u
Propogating parameters and globals to SSA variables...
Source address: u
Name: amount, Num: 1
Globalname: amount
End popogation
TMP_225(uint256) = transferFeeAmount_1 (c)+ gasFee_1
init
end
init
end
init
end
_______________

Name: gasFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_225 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_225

Name: TMP_225 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_226(uint256) = amount_1 (c)- TMP_225
init
end
init
end
init
end
_______________

Name: TMP_225 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_226 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_226

Name: TMP_226 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
amountToTransfer_1(uint256) := TMP_226(uint256)
asgn
init
end
_______________

Name: TMP_226 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amountToTransfer Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for amountToTransfer

Name: amountToTransfer Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Source address: u
Source address: u
[i]Type for TMP_179

Name: TMP_179 Function: sendFundsToUser
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_33(ILiquidityProviders) := ϕ(['liquidityProviders_40'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: sendFundsToUser
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
amountToTransfer_1(uint256) := TMP_179(uint256)
asgn
init
end
_______________

Name: TMP_179 Function: sendFundsToUser
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amountToTransfer Function: sendFundsToUser
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for amountToTransfer

Name: amountToTransfer Function: sendFundsToUser
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: amountToTransfer, Num: 1
Globalname: amountToTransfer
End popogation
Name: NATIVE, Num: 18
Globalname: NATIVE
global...

Name: PIC_13 Function: None
Num: -1
Den: -1
Address: 3
Norm: 6
LF: NATIVE
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: None Function: None
Num: -1
Den: -1
Address: 3
Norm: 6
LF: NATIVE
Value: u
Fields: 
Finance Type: undef
Phid
Name: liquidityProviders, Num: 34
Globalname: liquidityProviders
global...

Name: liquidityProviders Function: setLiquidityProviders
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Source address: -993

Name: None Function: None
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid
HIGH_LEVEL_CALL, dest:liquidityProviders_33(ILiquidityProviders), function:decreaseCurrentLiquidity, arguments:['tokenAddress_1', 'amountToTransfer_1']  
High Call: decreaseCurrentLiquidity
NATIVE_18(address) := ϕ(['NATIVE_17', 'NATIVE_28', 'NATIVE_8', 'NATIVE_22', 'NATIVE_18', 'NATIVE_32'])
Phi
[i]Type for NATIVE

Name: NATIVE Function: sendFundsToUser
Num: -1
Den: -1
Address: 3
Norm: 6
LF: NATIVE
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_34(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_33', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: sendFundsToUser
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_181(bool) = tokenAddress_1 == NATIVE_18
[i]Type for TMP_181

Name: TMP_181 Function: sendFundsToUser
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: amountToTransfer, Num: 1
Globalname: amountToTransfer
End popogation
TMP_187 = CONVERT tokenAddress_1 to IERC20Upgradeable
Converting tokenAddress_1

Name: tokenAddress Function: None
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
init
end
_______________

Name: tokenAddress Function: None
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef

Name: TMP_187 Function: sendFundsToUser
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: -982
ERC20Upgradeable
[i]Type for TMP_187

Name: TMP_187 Function: sendFundsToUser
Num: 
Den: 
Address: -982
Norm: 6
LF: ERC20Upgradeable
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_188 = CONVERT this to address
Converting this
5
[i]Type for TMP_188

Name: TMP_188 Function: sendFundsToUser
Num: -1
Den: -1
Address: 5
Norm: u
LF: LiquidityPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_189(uint256) = HIGH_LEVEL_CALL, dest:TMP_187(IERC20Upgradeable), function:balanceOf, arguments:['TMP_188']  
High Call: balanceOf
Running querryfc
Written func info: ERC20Upgradeable, balanceOf
Handling balance function!
-982
[i]Type for TMP_189

Name: TMP_189 Function: sendFundsToUser
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
TMP_190(bool) = TMP_189 >= amountToTransfer_1
init
end
init
end
lnorm: 6 rnorm: u
init
end
_______________

Name: TMP_189 Function: sendFundsToUser
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance

Name: TMP_190 Function: sendFundsToUser
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Source address: u
init
end
_______________

Name: TMP_189 Function: sendFundsToUser
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance

Name: amountToTransfer Function: sendFundsToUser
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_190

Name: TMP_190 Function: sendFundsToUser
Num: -982
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
TMP_191(None) = SOLIDITY_CALL require(bool,string)(TMP_190,Not Enough Balance)
[i]Type for TMP_191

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_192 = CONVERT tokenAddress_1 to IERC20Upgradeable
Converting tokenAddress_1

Name: tokenAddress Function: None
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
init
end
_______________

Name: tokenAddress Function: None
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef

Name: TMP_192 Function: sendFundsToUser
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: -982
ERC20Upgradeable
[i]Type for TMP_192

Name: TMP_192 Function: sendFundsToUser
Num: 
Den: 
Address: -982
Norm: 6
LF: ERC20Upgradeable
Value: u
Fields: 
Finance Type: undef
XXXX
LIBRARY_CALL, dest:SafeERC20Upgradeable, function:SafeERC20Upgradeable.safeTransfer(IERC20Upgradeable,address,uint256), arguments:['TMP_192', 'receiver_1', 'amountToTransfer_1'] 
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Source address: u
Name: amount, Num: 1
Globalname: amount
Source address: u
Name: depositHash, Num: 1
Globalname: depositHash
Source address: u
Name: fromChainId, Num: 1
Globalname: fromChainId
End popogation
Propogating parameters and globals to SSA variables...
End popogation
TMP_182 = CONVERT this to address
Converting this
5
[i]Type for TMP_182

Name: TMP_182 Function: sendFundsToUser
Num: -1
Den: -1
Address: 5
Norm: u
LF: LiquidityPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_183(uint256) = SOLIDITY_CALL balance(address)(TMP_182)
[i]Type for TMP_183

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_184(bool) = TMP_183 >= amountToTransfer_1
init
end
init
end
lnorm: u rnorm: u
init
end
_______________

Name: amountToTransfer Function: sendFundsToUser
Num: -982
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_184 Function: sendFundsToUser
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
init
end
_______________

Name: amountToTransfer Function: sendFundsToUser
Num: -982
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_183 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_184

Name: TMP_184 Function: sendFundsToUser
Num: -982
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_185(None) = SOLIDITY_CALL require(bool,string)(TMP_184,Not Enough Balance)
[i]Type for TMP_185

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: success, Num: 1
Globalname: success
End popogation
TUPLE_1(bool,bytes) = LOW_LEVEL_CALL, dest:receiver_1, function:call, arguments:[''] value:amountToTransfer_1 
[i]Type for TUPLE_1

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
success_1(bool)= UNPACK TUPLE_1 index: 0 
Finding type for success(bool ... )
[i]Type for success

Name: success Function: sendFundsToUser
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_186(None) = SOLIDITY_CALL require(bool,string)(success_1,Native Transfer Failed)
[i]Type for TMP_186

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX


NATIVE_9(address) := ϕ(['NATIVE_28', 'NATIVE_0', 'NATIVE_8', 'NATIVE_22', 'NATIVE_18', 'NATIVE_32'])
tokenManager_13(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_0', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
liquidityProviders_25(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
MODIFIER_CALL, ReentrancyGuardUpgradeable.nonReentrant()()
MODIFIER_CALL, LiquidityPool.onlyExecutor()()
MODIFIER_CALL, LiquidityPool.tokenChecks(address)(tokenAddress_1)
tokenManager_16(ITokenManager) := ϕ(['tokenManager_33'])
MODIFIER_CALL, PausableUpgradeable.whenNotPaused()()
TMP_167(uint256) = SOLIDITY_CALL gasleft()()
initialGas_1(uint256) := TMP_167(uint256)
TMP_168(ITokenManager.TokenConfig) = HIGH_LEVEL_CALL, dest:tokenManager_17(ITokenManager), function:getTransferConfig, arguments:['tokenAddress_1']  
NATIVE_14(address) := ϕ(['NATIVE_28', 'NATIVE_8', 'NATIVE_13', 'NATIVE_22', 'NATIVE_18', 'NATIVE_32'])
tokenManager_18(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_17', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
liquidityProviders_30(ILiquidityProviders) := ϕ(['liquidityProviders_29', 'liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
REF_35(uint256) -> TMP_168.min
TMP_169(bool) = REF_35 <= amount_1
TMP_170(ITokenManager.TokenConfig) = HIGH_LEVEL_CALL, dest:tokenManager_18(ITokenManager), function:getTransferConfig, arguments:['tokenAddress_1']  
NATIVE_15(address) := ϕ(['NATIVE_14', 'NATIVE_28', 'NATIVE_8', 'NATIVE_22', 'NATIVE_18', 'NATIVE_32'])
tokenManager_19(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_18', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
liquidityProviders_31(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_30', 'liquidityProviders_40', 'liquidityProviders_1'])
REF_37(uint256) -> TMP_170.max
TMP_171(bool) = REF_37 >= amount_1
TMP_172(bool) = TMP_169 && TMP_171
TMP_173(None) = SOLIDITY_CALL require(bool,string)(TMP_172,Withdraw amnt not in Cap limits)
TMP_174 = CONVERT 0 to address
TMP_175(bool) = receiver_1 != TMP_174
TMP_176(None) = SOLIDITY_CALL require(bool,string)(TMP_175,Bad receiver address)
TUPLE_0(bytes32,bool) = INTERNAL_CALL, LiquidityPool.checkHashStatus(address,uint256,address,bytes)(tokenAddress_1,amount_1,receiver_1,depositHash_1)
hashSendTransaction_1(bytes32)= UNPACK TUPLE_0 index: 0 
status_1(bool)= UNPACK TUPLE_0 index: 1 
TMP_177 = ! status_1 
TMP_178(None) = SOLIDITY_CALL require(bool,string)(TMP_177,Already Processed)
REF_38(bool) -> processedHash_0[hashSendTransaction_1]
processedHash_1(mapping(bytes32 => bool)) := ϕ(['processedHash_0'])
REF_38 (->processedHash_1) := True(bool)
TMP_179(uint256) = INTERNAL_CALL, LiquidityPool.getAmountToTransfer(uint256,address,uint256,uint256)(initialGas_1,tokenAddress_1,amount_1,tokenGasPrice_1)
liquidityProviders_33(ILiquidityProviders) := ϕ(['liquidityProviders_40'])
amountToTransfer_1(uint256) := TMP_179(uint256)
HIGH_LEVEL_CALL, dest:liquidityProviders_33(ILiquidityProviders), function:decreaseCurrentLiquidity, arguments:['tokenAddress_1', 'amountToTransfer_1']  
NATIVE_18(address) := ϕ(['NATIVE_17', 'NATIVE_28', 'NATIVE_8', 'NATIVE_22', 'NATIVE_18', 'NATIVE_32'])
liquidityProviders_34(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_33', 'liquidityProviders_40', 'liquidityProviders_1'])
TMP_181(bool) = tokenAddress_1 == NATIVE_18
CONDITION TMP_181
TMP_187 = CONVERT tokenAddress_1 to IERC20Upgradeable
TMP_188 = CONVERT this to address
TMP_189(uint256) = HIGH_LEVEL_CALL, dest:TMP_187(IERC20Upgradeable), function:balanceOf, arguments:['TMP_188']  
TMP_190(bool) = TMP_189 >= amountToTransfer_1
TMP_191(None) = SOLIDITY_CALL require(bool,string)(TMP_190,Not Enough Balance)
TMP_192 = CONVERT tokenAddress_1 to IERC20Upgradeable
LIBRARY_CALL, dest:SafeERC20Upgradeable, function:SafeERC20Upgradeable.safeTransfer(IERC20Upgradeable,address,uint256), arguments:['TMP_192', 'receiver_1', 'amountToTransfer_1'] 
Emit AssetSent(tokenAddress_1,amount_1,amountToTransfer_1,receiver_1,depositHash_1,fromChainId_1)
TMP_182 = CONVERT this to address
TMP_183(uint256) = SOLIDITY_CALL balance(address)(TMP_182)
TMP_184(bool) = TMP_183 >= amountToTransfer_1
TMP_185(None) = SOLIDITY_CALL require(bool,string)(TMP_184,Not Enough Balance)
TUPLE_1(bool,bytes) = LOW_LEVEL_CALL, dest:receiver_1, function:call, arguments:[''] value:amountToTransfer_1 
success_1(bool)= UNPACK TUPLE_1 index: 0 
TMP_186(None) = SOLIDITY_CALL require(bool,string)(success_1,Native Transfer Failed)


Propogating parameters and globals to SSA variables...
End popogation

Name: NATIVE Function: sendFundsToUser
Num: -1
Den: -1
Address: 3
Norm: 6
LF: NATIVE
Value: u
Fields: 
Finance Type: undef
Phid

Name: tokenManager Function: sendFundsToUser
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: sendFundsToUser
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid
NATIVE_9(address) := ϕ(['NATIVE_28', 'NATIVE_0', 'NATIVE_8', 'NATIVE_22', 'NATIVE_18', 'NATIVE_32'])
Phi
[i]Type for NATIVE

Name: NATIVE Function: sendFundsToUser
Num: -1
Den: -1
Address: 3
Norm: 6
LF: NATIVE
Value: u
Fields: 
Finance Type: undef
XXXX
tokenManager_13(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_0', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: sendFundsToUser
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_25(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: sendFundsToUser
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, ReentrancyGuardUpgradeable.nonReentrant()()
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, LiquidityPool.onlyExecutor()()
Propogating parameters and globals to SSA variables...
End popogation

Name: tokenManager Function: sendFundsToUser
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid
MODIFIER_CALL, LiquidityPool.tokenChecks(address)(tokenAddress_1)
init
end
[[], [], 6, 'tokenAddress', [], -1, -982, 'u']

Name: tokenAddress Function: None
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
Source address: -982

Name: tokenAddress_1 Function: tokenChecks
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
Phid

Name: tokenManager Function: tokenChecks
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid
tokenAddress_1(address) := ϕ(['tokenAddress_1', 'tokenAddress_1'])
Phi
[i]Type for tokenAddress

Name: tokenAddress Function: tokenChecks
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
XXXX
tokenManager_32(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_0', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: tokenChecks
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_319 = CONVERT 0 to address
Converting 0

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
_______________

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_319 Function: tokenChecks
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_319

Name: TMP_319 Function: tokenChecks
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_320(bool) = tokenAddress_1 != TMP_319
[i]Type for TMP_320

Name: TMP_320 Function: tokenChecks
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_321(None) = SOLIDITY_CALL require(bool,string)(TMP_320,Token address cannot be 0)
[i]Type for TMP_321

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation

Name: tokenManager Function: tokenChecks
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid
TMP_322(ITokenManager.TokenInfo) = HIGH_LEVEL_CALL, dest:tokenManager_32(ITokenManager), function:getTokensInfo, arguments:['tokenAddress_1']  
High Call: getTokensInfo
Running querryfc
Written func info: TokenManager, getTokensInfo
[i]Type for TMP_322

Name: TMP_322 Function: tokenChecks
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: supportedToken
Finance Type: undef
XXXX
tokenManager_33(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_7', 'tokenManager_1', 'tokenManager_32', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: tokenChecks
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
REF_88(bool) -> TMP_322.supportedToken
MEMBER
init
end
init
end
init
end
_______________

Name: TMP_322.supportedToken Function: tokenChecks
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: supportedToken Function: tokenChecks
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for REF_88

Name: TMP_322.supportedToken Function: tokenChecks
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: TMP_322, Field: supportedToken
#################
Member: 
Name: TMP_322 Function: tokenChecks
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: supportedToken
Finance Type: undef
Fieldf: 
Name: supportedToken Function: tokenChecks
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: TMP_322.supportedToken Function: tokenChecks
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: supportedToken Function: tokenChecks
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_323(None) = SOLIDITY_CALL require(bool,string)(REF_88,Token not supported)
[i]Type for TMP_323

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Source address: -982

Name: tokenAddress_1 Function: tokenChecks
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
Phid

Name: tokenManager Function: tokenChecks
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid
tokenAddress_1(address) := ϕ(['tokenAddress_1', 'tokenAddress_1'])
Phi
[i]Type for tokenAddress

Name: tokenAddress Function: tokenChecks
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
XXXX
tokenManager_32(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_0', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: tokenChecks
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_319 = CONVERT 0 to address
Converting 0

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
_______________

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_319 Function: tokenChecks
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_319

Name: TMP_319 Function: tokenChecks
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_320(bool) = tokenAddress_1 != TMP_319
[i]Type for TMP_320

Name: TMP_320 Function: tokenChecks
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_321(None) = SOLIDITY_CALL require(bool,string)(TMP_320,Token address cannot be 0)
[i]Type for TMP_321

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation

Name: tokenManager Function: tokenChecks
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid
TMP_322(ITokenManager.TokenInfo) = HIGH_LEVEL_CALL, dest:tokenManager_32(ITokenManager), function:getTokensInfo, arguments:['tokenAddress_1']  
High Call: getTokensInfo
Running querryfc
Written func info: TokenManager, getTokensInfo
[i]Type for TMP_322

Name: TMP_322 Function: tokenChecks
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: supportedToken
Finance Type: undef
XXXX
tokenManager_33(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_7', 'tokenManager_1', 'tokenManager_32', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: tokenChecks
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
REF_88(bool) -> TMP_322.supportedToken
MEMBER
init
end
init
end
init
end
_______________

Name: TMP_322.supportedToken Function: tokenChecks
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: supportedToken Function: tokenChecks
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for REF_88

Name: TMP_322.supportedToken Function: tokenChecks
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: TMP_322, Field: supportedToken
#################
Member: 
Name: TMP_322 Function: tokenChecks
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: supportedToken
Finance Type: undef
Fieldf: 
Name: supportedToken Function: tokenChecks
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: TMP_322.supportedToken Function: tokenChecks
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: supportedToken Function: tokenChecks
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_323(None) = SOLIDITY_CALL require(bool,string)(REF_88,Token not supported)
[i]Type for TMP_323

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
tokenManager_16(ITokenManager) := ϕ(['tokenManager_33'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: sendFundsToUser
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, PausableUpgradeable.whenNotPaused()()
Propogating parameters and globals to SSA variables...
Name: initialGas, Num: 1
Globalname: initialGas
End popogation
TMP_167(uint256) = SOLIDITY_CALL gasleft()()
[i]Type for TMP_167

Name: TMP_167 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
initialGas_1(uint256) := TMP_167(uint256)
asgn
init
end
_______________

Name: TMP_167 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: initialGas Function: sendFundsToUser
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for initialGas

Name: initialGas Function: sendFundsToUser
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Source address: u
Name: amount, Num: 1
Globalname: amount
End popogation

Name: NATIVE Function: sendFundsToUser
Num: -1
Den: -1
Address: 3
Norm: 6
LF: NATIVE
Value: u
Fields: 
Finance Type: undef
Phid

Name: tokenManager Function: sendFundsToUser
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: sendFundsToUser
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: NATIVE Function: sendFundsToUser
Num: -1
Den: -1
Address: 3
Norm: 6
LF: NATIVE
Value: u
Fields: 
Finance Type: undef
Phid

Name: tokenManager Function: sendFundsToUser
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: sendFundsToUser
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid
TMP_168(ITokenManager.TokenConfig) = HIGH_LEVEL_CALL, dest:tokenManager_17(ITokenManager), function:getTransferConfig, arguments:['tokenAddress_1']  
High Call: getTransferConfig
Running querryfc
Written func info: TokenManager, getTransferConfig
[i]Type for TMP_168

Name: TMP_168 Function: sendFundsToUser
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: min
Finance Type: undef
XXXX
NATIVE_14(address) := ϕ(['NATIVE_28', 'NATIVE_8', 'NATIVE_13', 'NATIVE_22', 'NATIVE_18', 'NATIVE_32'])
Phi
[i]Type for NATIVE

Name: NATIVE Function: sendFundsToUser
Num: -1
Den: -1
Address: 3
Norm: 6
LF: NATIVE
Value: u
Fields: 
Finance Type: undef
XXXX
tokenManager_18(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_17', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: sendFundsToUser
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_30(ILiquidityProviders) := ϕ(['liquidityProviders_29', 'liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: sendFundsToUser
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
REF_35(uint256) -> TMP_168.min
MEMBER
init
end
init
end
Source address: u
[i]Type for REF_35

Name: TMP_168.min Function: sendFundsToUser
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: TMP_168, Field: min
#################
Member: 
Name: TMP_168 Function: sendFundsToUser
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: min
Finance Type: undef
Fieldf: 
Name: min Function: sendFundsToUser
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: TMP_168.min Function: sendFundsToUser
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: min Function: sendFundsToUser
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_169(bool) = REF_35 <= amount_1
init
end
init
end
lnorm: u rnorm: u
init
end
_______________

Name: TMP_168.min Function: sendFundsToUser
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_169 Function: sendFundsToUser
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
init
end
_______________

Name: TMP_168.min Function: sendFundsToUser
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_169

Name: TMP_169 Function: sendFundsToUser
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_170(ITokenManager.TokenConfig) = HIGH_LEVEL_CALL, dest:tokenManager_18(ITokenManager), function:getTransferConfig, arguments:['tokenAddress_1']  
High Call: getTransferConfig
Running querryfc
Written func info: TokenManager, getTransferConfig
[i]Type for TMP_170

Name: TMP_170 Function: sendFundsToUser
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: max
Finance Type: undef
XXXX
NATIVE_15(address) := ϕ(['NATIVE_14', 'NATIVE_28', 'NATIVE_8', 'NATIVE_22', 'NATIVE_18', 'NATIVE_32'])
Phi
[i]Type for NATIVE

Name: NATIVE Function: sendFundsToUser
Num: -1
Den: -1
Address: 3
Norm: 6
LF: NATIVE
Value: u
Fields: 
Finance Type: undef
XXXX
tokenManager_19(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_18', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: sendFundsToUser
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_31(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_30', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: sendFundsToUser
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
REF_37(uint256) -> TMP_170.max
MEMBER
init
end
init
end
Source address: u
[i]Type for REF_37

Name: TMP_170.max Function: sendFundsToUser
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: TMP_170, Field: max
#################
Member: 
Name: TMP_170 Function: sendFundsToUser
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: max
Finance Type: undef
Fieldf: 
Name: max Function: sendFundsToUser
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: TMP_170.max Function: sendFundsToUser
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: max Function: sendFundsToUser
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_171(bool) = REF_37 >= amount_1
init
end
init
end
lnorm: u rnorm: u
[i]Type for TMP_171

Name: TMP_171 Function: sendFundsToUser
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_172(bool) = TMP_169 && TMP_171
[i]Type for TMP_172

Name: TMP_172 Function: sendFundsToUser
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_173(None) = SOLIDITY_CALL require(bool,string)(TMP_172,Withdraw amnt not in Cap limits)
[i]Type for TMP_173

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_174 = CONVERT 0 to address
Converting 0

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
_______________

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_174 Function: sendFundsToUser
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_174

Name: TMP_174 Function: sendFundsToUser
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_175(bool) = receiver_1 != TMP_174
[i]Type for TMP_175

Name: TMP_175 Function: sendFundsToUser
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_176(None) = SOLIDITY_CALL require(bool,string)(TMP_175,Bad receiver address)
[i]Type for TMP_176

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Source address: u
Name: depositHash, Num: 1
Globalname: depositHash
Name: status, Num: 1
Globalname: status
Name: hashSendTransaction, Num: 1
Globalname: hashSendTransaction
End popogation
TUPLE_0(bytes32,bool) = INTERNAL_CALL, LiquidityPool.checkHashStatus(address,uint256,address,bytes)(tokenAddress_1,amount_1,receiver_1,depositHash_1)
init
end
init
end
init
end
init
end
[[], [], 6, 'tokenAddress', [], -1, -982, 'u']

Name: tokenAddress Function: None
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[], [], 0, 'receiver', [], -1, -981, 'u']

Name: receiver Function: None
Num: 
Den: 
Address: -981
Norm: 0
LF: receiver
Value: u
Fields: 
Finance Type: undef
[[], [], 'u', None, [], -1, 'u', 'u']

Name: depositHash Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
Source address: -982

Name: tokenAddress_1 Function: checkHashStatus
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
Phid
Source address: u

Name: amount_1 Function: checkHashStatus
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Source address: -981

Name: receiver_1 Function: checkHashStatus
Num: 
Den: 
Address: -981
Norm: 0
LF: receiver
Value: u
Fields: 
Finance Type: undef
Phid
Source address: u
Name: depositHash, Num: 1
Globalname: depositHash

Name: depositHash_1 Function: checkHashStatus
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: processedHash Function: checkHashStatus
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
tokenAddress_1(address) := ϕ(['tokenAddress_1'])
Phi
[i]Type for tokenAddress

Name: tokenAddress Function: checkHashStatus
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount_1'])
Phi
[i]Type for amount

Name: amount Function: checkHashStatus
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
receiver_1(address) := ϕ(['receiver_1'])
Phi
[i]Type for receiver

Name: receiver Function: checkHashStatus
Num: 
Den: 
Address: -981
Norm: 0
LF: receiver
Value: u
Fields: 
Finance Type: undef
XXXX
depositHash_1(bytes) := ϕ(['depositHash_1'])
Phi

Name: depositHash Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for depositHash

Name: depositHash Function: checkHashStatus
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
processedHash_2(mapping(bytes32 => bool)) := ϕ(['processedHash_0', 'processedHash_2', 'processedHash_1'])
Phi
[i]Type for processedHash

Name: processedHash Function: checkHashStatus
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Source address: u
Name: depositHash, Num: 1
Globalname: depositHash
Name: hashSendTransaction, Num: 1
Globalname: hashSendTransaction
End popogation
TMP_241(bytes32) = SOLIDITY_CALL keccak256(bytes)(depositHash_1)
[i]Type for TMP_241

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_242(bytes) = SOLIDITY_CALL abi.encode()(tokenAddress_1,amount_1,receiver_1,TMP_241)
[i]Type for TMP_242

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_243(bytes32) = SOLIDITY_CALL keccak256(bytes)(TMP_242)
[i]Type for TMP_243

Name: TMP_243 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
hashSendTransaction_1(bytes32) := TMP_243(bytes32)
asgn
init
end
_______________

Name: TMP_243 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: hashSendTransaction Function: checkHashStatus
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for hashSendTransaction

Name: hashSendTransaction Function: checkHashStatus
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: hashSendTransaction, Num: 1
Globalname: hashSendTransaction
Name: status, Num: 1
Globalname: status
End popogation
REF_66(bool) -> processedHash_2[hashSendTransaction_1]
INDEX
[i]Type for REF_66

Name: processedHash Function: checkHashStatus
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
status_1(bool) := REF_66(bool)
asgn
init
end
_______________

Name: processedHash Function: checkHashStatus
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: status Function: checkHashStatus
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for status

Name: status Function: checkHashStatus
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: hashSendTransaction, Num: 1
Globalname: hashSendTransaction
End popogation
RETURN hashSendTransaction_1,status_1
RETURN
init
end

Name: hashSendTransaction Function: checkHashStatus
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
init
end

Name: status Function: checkHashStatus
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
Source address: -982

Name: tokenAddress_1 Function: checkHashStatus
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
Phid
Source address: u

Name: amount_1 Function: checkHashStatus
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Source address: -981

Name: receiver_1 Function: checkHashStatus
Num: 
Den: 
Address: -981
Norm: 0
LF: receiver
Value: u
Fields: 
Finance Type: undef
Phid
Source address: u
Name: depositHash, Num: 1
Globalname: depositHash

Name: depositHash_1 Function: checkHashStatus
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: processedHash Function: checkHashStatus
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
tokenAddress_1(address) := ϕ(['tokenAddress_1'])
Phi
[i]Type for tokenAddress

Name: tokenAddress Function: checkHashStatus
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount_1'])
Phi
[i]Type for amount

Name: amount Function: checkHashStatus
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
receiver_1(address) := ϕ(['receiver_1'])
Phi
[i]Type for receiver

Name: receiver Function: checkHashStatus
Num: 
Den: 
Address: -981
Norm: 0
LF: receiver
Value: u
Fields: 
Finance Type: undef
XXXX
depositHash_1(bytes) := ϕ(['depositHash_1'])
Phi

Name: depositHash Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for depositHash

Name: depositHash Function: checkHashStatus
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
processedHash_2(mapping(bytes32 => bool)) := ϕ(['processedHash_0', 'processedHash_2', 'processedHash_1'])
Phi
[i]Type for processedHash

Name: processedHash Function: checkHashStatus
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Source address: u
Name: depositHash, Num: 1
Globalname: depositHash
Name: hashSendTransaction, Num: 1
Globalname: hashSendTransaction
End popogation
TMP_241(bytes32) = SOLIDITY_CALL keccak256(bytes)(depositHash_1)
[i]Type for TMP_241

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_242(bytes) = SOLIDITY_CALL abi.encode()(tokenAddress_1,amount_1,receiver_1,TMP_241)
[i]Type for TMP_242

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_243(bytes32) = SOLIDITY_CALL keccak256(bytes)(TMP_242)
[i]Type for TMP_243

Name: TMP_243 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
hashSendTransaction_1(bytes32) := TMP_243(bytes32)
asgn
init
end
_______________

Name: TMP_243 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: hashSendTransaction Function: checkHashStatus
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for hashSendTransaction

Name: hashSendTransaction Function: checkHashStatus
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: hashSendTransaction, Num: 1
Globalname: hashSendTransaction
Name: status, Num: 1
Globalname: status
End popogation
REF_66(bool) -> processedHash_2[hashSendTransaction_1]
INDEX
[i]Type for REF_66

Name: processedHash Function: checkHashStatus
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
status_1(bool) := REF_66(bool)
asgn
init
end
_______________

Name: processedHash Function: checkHashStatus
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: status Function: checkHashStatus
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for status

Name: status Function: checkHashStatus
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: hashSendTransaction, Num: 1
Globalname: hashSendTransaction
End popogation
RETURN hashSendTransaction_1,status_1
RETURN
init
end

Name: hashSendTransaction Function: checkHashStatus
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
init
end

Name: status Function: checkHashStatus
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TUPLE_0

Name: TUPLE_0 Function: sendFundsToUser
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
hashSendTransaction_1(bytes32)= UNPACK TUPLE_0 index: 0 
([], [], 'u', 'u', 'u', -1)
[i]Type for hashSendTransaction

Name: hashSendTransaction Function: sendFundsToUser
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
status_1(bool)= UNPACK TUPLE_0 index: 1 
([-1], [-1], 'u', 'u', 'u', -1)
[i]Type for status

Name: status Function: sendFundsToUser
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_177 = ! status_1 
[i]Type for TMP_177

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_178(None) = SOLIDITY_CALL require(bool,string)(TMP_177,Already Processed)
[i]Type for TMP_178

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: hashSendTransaction, Num: 1
Globalname: hashSendTransaction
End popogation

Name: processedHash Function: sendFundsToUser
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
REF_38(bool) -> processedHash_0[hashSendTransaction_1]
INDEX
[i]Type for REF_38

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: True
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
processedHash_1(mapping(bytes32 => bool)) := ϕ(['processedHash_0'])
Phi
[i]Type for processedHash

Name: processedHash Function: sendFundsToUser
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_38 (->processedHash_1) := True(bool)
asgn
init
end
_______________

Name: True Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef

Name: REF_38 Function: sendFundsToUser
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: True
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_38

Name: REF_38 Function: sendFundsToUser
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: True
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
Source address: u
Propogating parameters and globals to SSA variables...
Name: initialGas, Num: 1
Globalname: initialGas
Source address: u
Name: tokenGasPrice, Num: 1
Globalname: tokenGasPrice
Name: amountToTransfer, Num: 1
Globalname: amountToTransfer
End popogation

Name: liquidityProviders Function: sendFundsToUser
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid
TMP_179(uint256) = INTERNAL_CALL, LiquidityPool.getAmountToTransfer(uint256,address,uint256,uint256)(initialGas_1,tokenAddress_1,amount_1,tokenGasPrice_1)
init
end
init
end
init
end
init
end
[[], [], 'u', None, [], -1, 'u', 'u']

Name: initialGas Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[], [], 6, 'tokenAddress', [], -1, -982, 'u']

Name: tokenAddress Function: None
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[], [], 'u', None, [], -1, 'u', 'u']

Name: tokenGasPrice Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
Source address: u
Name: initialGas, Num: 1
Globalname: initialGas

Name: initialGas_1 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Source address: -982

Name: tokenAddress_1 Function: getAmountToTransfer
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
Phid
Source address: u

Name: amount_1 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Source address: u
Name: tokenGasPrice, Num: 1
Globalname: tokenGasPrice

Name: tokenGasPrice_1 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: BASE_DIVISOR Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: baseGas Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: tokenManager Function: getAmountToTransfer
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getAmountToTransfer
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
initialGas_1(uint256) := ϕ(['initialGas_1'])
Phi

Name: initialGas Function: sendFundsToUser
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for initialGas

Name: initialGas Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tokenAddress_1(address) := ϕ(['tokenAddress_1'])
Phi
[i]Type for tokenAddress

Name: tokenAddress Function: getAmountToTransfer
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount_1'])
Phi
[i]Type for amount

Name: amount Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tokenGasPrice_1(uint256) := ϕ(['tokenGasPrice_1'])
Phi

Name: tokenGasPrice Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for tokenGasPrice

Name: tokenGasPrice Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
BASE_DIVISOR_1(uint256) := ϕ(['BASE_DIVISOR_3', 'BASE_DIVISOR_5', 'BASE_DIVISOR_0'])
Phi
[i]Type for BASE_DIVISOR

Name: BASE_DIVISOR Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
baseGas_3(uint256) := ϕ(['baseGas_2', 'baseGas_1', 'baseGas_0', 'baseGas_9'])
Phi
[i]Type for baseGas

Name: baseGas Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tokenManager_20(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_0', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getAmountToTransfer
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_35(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getAmountToTransfer
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_4(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_0', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulated_1(mapping(address => mapping(address => uint256))) := ϕ(['gasFeeAccumulated_0', 'gasFeeAccumulated_10', 'gasFeeAccumulated_16', 'gasFeeAccumulated_22'])
Phi
[i]Type for gasFeeAccumulated

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_23(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_0'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: transferFeePerc, Num: 1
Globalname: transferFeePerc
End popogation

Name: tokenManager Function: getAmountToTransfer
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getAmountToTransfer
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid
TMP_199(uint256) = INTERNAL_CALL, LiquidityPool.getTransferFee(address,uint256)(tokenAddress_1,amount_1)
init
end
init
end
[[], [], 6, 'tokenAddress', [], -1, -982, 'u']

Name: tokenAddress Function: None
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
Source address: -982

Name: tokenAddress_1 Function: getTransferFee
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
Phid
Source address: u

Name: amount_1 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getTransferFee
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid
tokenAddress_1(address) := ϕ(['tokenAddress_1'])
Phi
[i]Type for tokenAddress

Name: tokenAddress Function: getTransferFee
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount_1'])
Phi
[i]Type for amount

Name: amount Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tokenManager_27(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_0', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_41(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getTransferFee
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: currentLiquidity, Num: 1
Globalname: currentLiquidity
End popogation

Name: liquidityProviders Function: getTransferFee
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid
TMP_228(uint256) = INTERNAL_CALL, LiquidityPool.getCurrentLiquidity(address)(tokenAddress_1)
init
end
[[], [], 6, 'tokenAddress', [], -1, -982, 'u']

Name: tokenAddress Function: getCurrentLiquidity
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
Source address: -982

Name: tokenAddress_1 Function: getCurrentLiquidity
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
tokenAddress_1(address) := ϕ(['tokenAddress_1', 'tokenAddress_1'])
Phi
[i]Type for tokenAddress

Name: tokenAddress Function: getCurrentLiquidity
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_3(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_1(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_0', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_1(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_0'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: liquidityPoolBalance, Num: 1
Globalname: liquidityPoolBalance
End popogation

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_99(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_3(ILiquidityProviders), function:getCurrentLiquidity, arguments:['tokenAddress_1']  
High Call: getCurrentLiquidity
Running querryfc
Written func info: LiquidityProviders, getCurrentLiquidity
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-982], [-1], 6, "'u'", 'u', -1)
[i]Type for TMP_99

Name: TMP_99 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
liquidityProviders_4(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_3', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_2(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_1', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_2(mapping(address => uint256)) := ϕ(['incentivePool_1', 'incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityPoolBalance_1(uint256) := TMP_99(uint256)
asgn
init
end
_______________

Name: TMP_99 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for liquidityPoolBalance

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: currentLiquidity, Num: 1
Globalname: currentLiquidity
End popogation

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_100(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_4(ILiquidityProviders), function:totalLPFees, arguments:['tokenAddress_1']  
High Call: totalLPFees
Running querryfc
Written func info: LiquidityProviders, totalLPFees
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-982], [-1], 6, "'u'", 'u', -1)
[i]Type for TMP_100

Name: TMP_100 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
liquidityProviders_5(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_4', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_3(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_2', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_3(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_2', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_101(uint256) = liquidityPoolBalance_1 (c)- TMP_100
init
end
init
end
-982
-1
lnorm: 6 rnorm: 6
init
end
_______________

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_101 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_101

Name: TMP_101 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_2(uint256) -> gasFeeAccumulatedByToken_3[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_2

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_102(uint256) = TMP_101 (c)- REF_2
init
end
init
end
init
end
_______________

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_102 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_102

Name: TMP_102 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_3(uint256) -> incentivePool_3[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_3

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_103(uint256) = TMP_102 (c)- REF_3
init
end
init
end
init
end
_______________

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_103 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_103

Name: TMP_103 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
currentLiquidity_1(uint256) := TMP_103(uint256)
asgn
init
end
_______________

Name: TMP_103 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: currentLiquidity Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for currentLiquidity

Name: currentLiquidity Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Source address: -982

Name: tokenAddress_1 Function: getCurrentLiquidity
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
tokenAddress_1(address) := ϕ(['tokenAddress_1', 'tokenAddress_1'])
Phi
[i]Type for tokenAddress

Name: tokenAddress Function: getCurrentLiquidity
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_3(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_1(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_0', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_1(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_0'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: liquidityPoolBalance, Num: 1
Globalname: liquidityPoolBalance
End popogation

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_99(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_3(ILiquidityProviders), function:getCurrentLiquidity, arguments:['tokenAddress_1']  
High Call: getCurrentLiquidity
Running querryfc
Written func info: LiquidityProviders, getCurrentLiquidity
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-982], [-1], 6, "'u'", 'u', -1)
[i]Type for TMP_99

Name: TMP_99 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
liquidityProviders_4(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_3', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_2(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_1', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_2(mapping(address => uint256)) := ϕ(['incentivePool_1', 'incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityPoolBalance_1(uint256) := TMP_99(uint256)
asgn
init
end
_______________

Name: TMP_99 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for liquidityPoolBalance

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: currentLiquidity, Num: 1
Globalname: currentLiquidity
End popogation

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_100(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_4(ILiquidityProviders), function:totalLPFees, arguments:['tokenAddress_1']  
High Call: totalLPFees
Running querryfc
Written func info: LiquidityProviders, totalLPFees
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-982], [-1], 6, "'u'", 'u', -1)
[i]Type for TMP_100

Name: TMP_100 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
liquidityProviders_5(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_4', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_3(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_2', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_3(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_2', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_101(uint256) = liquidityPoolBalance_1 (c)- TMP_100
init
end
init
end
-982
-1
lnorm: 6 rnorm: 6
init
end
_______________

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_101 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_101

Name: TMP_101 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_2(uint256) -> gasFeeAccumulatedByToken_3[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_2

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_102(uint256) = TMP_101 (c)- REF_2
init
end
init
end
init
end
_______________

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_102 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_102

Name: TMP_102 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_3(uint256) -> incentivePool_3[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_3

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_103(uint256) = TMP_102 (c)- REF_3
init
end
init
end
init
end
_______________

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_103 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_103

Name: TMP_103 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
currentLiquidity_1(uint256) := TMP_103(uint256)
asgn
init
end
_______________

Name: TMP_103 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: currentLiquidity Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for currentLiquidity

Name: currentLiquidity Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_228

Name: TMP_228 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_42(ILiquidityProviders) := ϕ(['liquidityProviders_5'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getTransferFee
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
currentLiquidity_1(uint256) := TMP_228(uint256)
asgn
init
end
_______________

Name: TMP_228 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: currentLiquidity Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for currentLiquidity

Name: currentLiquidity Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: providedLiquidity, Num: 1
Globalname: providedLiquidity
End popogation

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getTransferFee
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid
TMP_229(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_42(ILiquidityProviders), function:getSuppliedLiquidityByToken, arguments:['tokenAddress_1']  
High Call: getSuppliedLiquidityByToken
Running querryfc
Written func info: LiquidityProviders, getSuppliedLiquidityByToken
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-982], [-1], 6, "'u'", 'u', -1)
[i]Type for TMP_229

Name: TMP_229 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
tokenManager_29(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_28', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_43(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_42', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getTransferFee
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
providedLiquidity_1(uint256) := TMP_229(uint256)
asgn
init
end
_______________

Name: TMP_229 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: providedLiquidity Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for providedLiquidity

Name: providedLiquidity Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: currentLiquidity, Num: 1
Globalname: currentLiquidity
Name: resultingLiquidity, Num: 1
Globalname: resultingLiquidity
End popogation
TMP_230(uint256) = currentLiquidity_1 (c)- amount_1
init
end
init
end
init
end
_______________

Name: amount Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_230 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_230

Name: TMP_230 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
resultingLiquidity_1(uint256) := TMP_230(uint256)
asgn
init
end
_______________

Name: TMP_230 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: resultingLiquidity Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for resultingLiquidity

Name: resultingLiquidity Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: equilibriumFee, Num: 1
Globalname: equilibriumFee
End popogation

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid
TMP_231(ITokenManager.TokenInfo) = HIGH_LEVEL_CALL, dest:tokenManager_29(ITokenManager), function:getTokensInfo, arguments:['tokenAddress_1']  
High Call: getTokensInfo
Running querryfc
Written func info: TokenManager, getTokensInfo
[i]Type for TMP_231

Name: TMP_231 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: equilibriumFee
Finance Type: undef
XXXX
tokenManager_30(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_29', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
REF_62(uint256) -> TMP_231.equilibriumFee
MEMBER
init
end
init
end
init
end
_______________

Name: TMP_231.equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for REF_62

Name: TMP_231.equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: TMP_231, Field: equilibriumFee
#################
Member: 
Name: TMP_231 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: equilibriumFee
Finance Type: undef
Fieldf: 
Name: equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: TMP_231.equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
equilibriumFee_1(uint256) := REF_62(uint256)
asgn
init
end
_______________

Name: TMP_231.equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: equilibriumFee Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for equilibriumFee

Name: equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: maxFee, Num: 1
Globalname: maxFee
End popogation

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid
TMP_232(ITokenManager.TokenInfo) = HIGH_LEVEL_CALL, dest:tokenManager_30(ITokenManager), function:getTokensInfo, arguments:['tokenAddress_1']  
High Call: getTokensInfo
Running querryfc
Written func info: TokenManager, getTokensInfo
[i]Type for TMP_232

Name: TMP_232 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: maxFee
Finance Type: undef
XXXX
tokenManager_31(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_30', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
REF_64(uint256) -> TMP_232.maxFee
MEMBER
init
end
init
end
init
end
_______________

Name: TMP_232.maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for REF_64

Name: TMP_232.maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: TMP_232, Field: maxFee
#################
Member: 
Name: TMP_232 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: maxFee
Finance Type: undef
Fieldf: 
Name: maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: TMP_232.maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
maxFee_1(uint256) := REF_64(uint256)
asgn
init
end
_______________

Name: TMP_232.maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: maxFee Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for maxFee

Name: maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: numerator, Num: 1
Globalname: numerator
End popogation
TMP_233(uint256) = providedLiquidity_1 (c)* equilibriumFee_1
testing mul...
init
end
init
end

Name: providedLiquidity Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: 6 rnorm: u
init
end
_______________

Name: providedLiquidity Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_233 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_233

Name: TMP_233 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_234(uint256) = TMP_233 (c)* maxFee_1
testing mul...
init
end
init
end

Name: TMP_233 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef

Name: maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: 6 rnorm: u
init
end
_______________

Name: TMP_233 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_234 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_234

Name: TMP_234 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
numerator_1(uint256) := TMP_234(uint256)
asgn
init
end
_______________

Name: TMP_234 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef

Name: numerator Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for numerator

Name: numerator Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: denominator, Num: 1
Globalname: denominator
End popogation
TMP_235(uint256) = equilibriumFee_1 (c)* providedLiquidity_1
testing mul...
init
end
init
end

Name: equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: providedLiquidity Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
lnorm: u rnorm: 6
init
end
_______________

Name: providedLiquidity Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_235 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_235

Name: TMP_235 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_236(uint256) = maxFee_1 (c)- equilibriumFee_1
init
end
init
end
init
end
_______________

Name: equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_236 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_236

Name: TMP_236 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_237(uint256) = TMP_236 (c)* resultingLiquidity_1
testing mul...
init
end
init
end

Name: TMP_236 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: resultingLiquidity Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: resultingLiquidity Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_237 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_237

Name: TMP_237 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_238(uint256) = TMP_235 (c)+ TMP_237
init
end
init
end
init
end
_______________

Name: TMP_235 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_238 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_238

Name: TMP_238 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
denominator_1(uint256) := TMP_238(uint256)
asgn
init
end
_______________

Name: TMP_238 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: denominator Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for denominator

Name: denominator Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_239(bool) = denominator_1 == 0
[i]Type for TMP_239

Name: TMP_239 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: fee, Num: 1
Globalname: fee
End popogation
fee_1(uint256) := 0(uint256)
asgn
init
end
_______________

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef

Name: fee Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for fee

Name: fee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: fee, Num: 2
Globalname: fee
End popogation
TMP_240(uint256) = numerator_1 (c)/ denominator_1
init
end
init
end
lnorm: 6 rnorm: u
Source address: u
init
end
_______________

Name: PIC_126 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_240 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
init
end
init
end
lnorm: 6 rnorm: u
Source address: u
init
end
_______________

Name: PIC_127 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_240 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_240

Name: TMP_240 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
fee_2(uint256) := TMP_240(uint256)
asgn
init
end
_______________

Name: TMP_240 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef

Name: fee Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for fee

Name: fee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Source address: -982

Name: tokenAddress_1 Function: getTransferFee
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
Phid
Source address: u

Name: amount_1 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getTransferFee
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid
tokenAddress_1(address) := ϕ(['tokenAddress_1'])
Phi
[i]Type for tokenAddress

Name: tokenAddress Function: getTransferFee
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount_1'])
Phi
[i]Type for amount

Name: amount Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tokenManager_27(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_0', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_41(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getTransferFee
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: currentLiquidity, Num: 1
Globalname: currentLiquidity
End popogation

Name: liquidityProviders Function: getTransferFee
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid
TMP_228(uint256) = INTERNAL_CALL, LiquidityPool.getCurrentLiquidity(address)(tokenAddress_1)
init
end
[[], [], 6, 'tokenAddress', [], -1, -982, 'u']

Name: tokenAddress Function: getCurrentLiquidity
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
Source address: -982

Name: tokenAddress_1 Function: getCurrentLiquidity
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
tokenAddress_1(address) := ϕ(['tokenAddress_1', 'tokenAddress_1'])
Phi
[i]Type for tokenAddress

Name: tokenAddress Function: getCurrentLiquidity
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_3(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_1(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_0', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_1(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_0'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: liquidityPoolBalance, Num: 1
Globalname: liquidityPoolBalance
End popogation

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_99(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_3(ILiquidityProviders), function:getCurrentLiquidity, arguments:['tokenAddress_1']  
High Call: getCurrentLiquidity
Running querryfc
Written func info: LiquidityProviders, getCurrentLiquidity
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-982], [-1], 6, "'u'", 'u', -1)
[i]Type for TMP_99

Name: TMP_99 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
liquidityProviders_4(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_3', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_2(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_1', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_2(mapping(address => uint256)) := ϕ(['incentivePool_1', 'incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityPoolBalance_1(uint256) := TMP_99(uint256)
asgn
init
end
_______________

Name: TMP_99 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for liquidityPoolBalance

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: currentLiquidity, Num: 1
Globalname: currentLiquidity
End popogation

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_100(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_4(ILiquidityProviders), function:totalLPFees, arguments:['tokenAddress_1']  
High Call: totalLPFees
Running querryfc
Written func info: LiquidityProviders, totalLPFees
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-982], [-1], 6, "'u'", 'u', -1)
[i]Type for TMP_100

Name: TMP_100 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
liquidityProviders_5(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_4', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_3(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_2', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_3(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_2', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_101(uint256) = liquidityPoolBalance_1 (c)- TMP_100
init
end
init
end
-982
-1
lnorm: 6 rnorm: 6
init
end
_______________

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_101 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_101

Name: TMP_101 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_2(uint256) -> gasFeeAccumulatedByToken_3[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_2

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_102(uint256) = TMP_101 (c)- REF_2
init
end
init
end
init
end
_______________

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_102 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_102

Name: TMP_102 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_3(uint256) -> incentivePool_3[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_3

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_103(uint256) = TMP_102 (c)- REF_3
init
end
init
end
init
end
_______________

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_103 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_103

Name: TMP_103 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
currentLiquidity_1(uint256) := TMP_103(uint256)
asgn
init
end
_______________

Name: TMP_103 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: currentLiquidity Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for currentLiquidity

Name: currentLiquidity Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Source address: -982

Name: tokenAddress_1 Function: getCurrentLiquidity
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
tokenAddress_1(address) := ϕ(['tokenAddress_1', 'tokenAddress_1'])
Phi
[i]Type for tokenAddress

Name: tokenAddress Function: getCurrentLiquidity
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_3(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_1(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_0', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_1(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_0'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: liquidityPoolBalance, Num: 1
Globalname: liquidityPoolBalance
End popogation

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_99(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_3(ILiquidityProviders), function:getCurrentLiquidity, arguments:['tokenAddress_1']  
High Call: getCurrentLiquidity
Running querryfc
Written func info: LiquidityProviders, getCurrentLiquidity
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-982], [-1], 6, "'u'", 'u', -1)
[i]Type for TMP_99

Name: TMP_99 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
liquidityProviders_4(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_3', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_2(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_1', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_2(mapping(address => uint256)) := ϕ(['incentivePool_1', 'incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityPoolBalance_1(uint256) := TMP_99(uint256)
asgn
init
end
_______________

Name: TMP_99 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for liquidityPoolBalance

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: currentLiquidity, Num: 1
Globalname: currentLiquidity
End popogation

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_100(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_4(ILiquidityProviders), function:totalLPFees, arguments:['tokenAddress_1']  
High Call: totalLPFees
Running querryfc
Written func info: LiquidityProviders, totalLPFees
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-982], [-1], 6, "'u'", 'u', -1)
[i]Type for TMP_100

Name: TMP_100 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
liquidityProviders_5(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_4', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_3(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_2', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_3(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_2', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_101(uint256) = liquidityPoolBalance_1 (c)- TMP_100
init
end
init
end
-982
-1
lnorm: 6 rnorm: 6
init
end
_______________

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_101 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_101

Name: TMP_101 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_2(uint256) -> gasFeeAccumulatedByToken_3[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_2

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_102(uint256) = TMP_101 (c)- REF_2
init
end
init
end
init
end
_______________

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_102 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_102

Name: TMP_102 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_3(uint256) -> incentivePool_3[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_3

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_103(uint256) = TMP_102 (c)- REF_3
init
end
init
end
init
end
_______________

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_103 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_103

Name: TMP_103 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
currentLiquidity_1(uint256) := TMP_103(uint256)
asgn
init
end
_______________

Name: TMP_103 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: currentLiquidity Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for currentLiquidity

Name: currentLiquidity Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_228

Name: TMP_228 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_42(ILiquidityProviders) := ϕ(['liquidityProviders_5'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getTransferFee
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
currentLiquidity_1(uint256) := TMP_228(uint256)
asgn
init
end
_______________

Name: TMP_228 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: currentLiquidity Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for currentLiquidity

Name: currentLiquidity Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: providedLiquidity, Num: 1
Globalname: providedLiquidity
End popogation

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getTransferFee
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid
TMP_229(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_42(ILiquidityProviders), function:getSuppliedLiquidityByToken, arguments:['tokenAddress_1']  
High Call: getSuppliedLiquidityByToken
Running querryfc
Written func info: LiquidityProviders, getSuppliedLiquidityByToken
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-982], [-1], 6, "'u'", 'u', -1)
[i]Type for TMP_229

Name: TMP_229 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
tokenManager_29(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_28', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_43(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_42', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getTransferFee
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
providedLiquidity_1(uint256) := TMP_229(uint256)
asgn
init
end
_______________

Name: TMP_229 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: providedLiquidity Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for providedLiquidity

Name: providedLiquidity Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: currentLiquidity, Num: 1
Globalname: currentLiquidity
Name: resultingLiquidity, Num: 1
Globalname: resultingLiquidity
End popogation
TMP_230(uint256) = currentLiquidity_1 (c)- amount_1
init
end
init
end
init
end
_______________

Name: amount Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_230 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_230

Name: TMP_230 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
resultingLiquidity_1(uint256) := TMP_230(uint256)
asgn
init
end
_______________

Name: TMP_230 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: resultingLiquidity Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for resultingLiquidity

Name: resultingLiquidity Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: equilibriumFee, Num: 1
Globalname: equilibriumFee
End popogation

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid
TMP_231(ITokenManager.TokenInfo) = HIGH_LEVEL_CALL, dest:tokenManager_29(ITokenManager), function:getTokensInfo, arguments:['tokenAddress_1']  
High Call: getTokensInfo
Running querryfc
Written func info: TokenManager, getTokensInfo
[i]Type for TMP_231

Name: TMP_231 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: equilibriumFee
Finance Type: undef
XXXX
tokenManager_30(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_29', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
REF_62(uint256) -> TMP_231.equilibriumFee
MEMBER
init
end
init
end
init
end
_______________

Name: TMP_231.equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for REF_62

Name: TMP_231.equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: TMP_231, Field: equilibriumFee
#################
Member: 
Name: TMP_231 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: equilibriumFee
Finance Type: undef
Fieldf: 
Name: equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: TMP_231.equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
equilibriumFee_1(uint256) := REF_62(uint256)
asgn
init
end
_______________

Name: TMP_231.equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: equilibriumFee Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for equilibriumFee

Name: equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: maxFee, Num: 1
Globalname: maxFee
End popogation

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid
TMP_232(ITokenManager.TokenInfo) = HIGH_LEVEL_CALL, dest:tokenManager_30(ITokenManager), function:getTokensInfo, arguments:['tokenAddress_1']  
High Call: getTokensInfo
Running querryfc
Written func info: TokenManager, getTokensInfo
[i]Type for TMP_232

Name: TMP_232 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: maxFee
Finance Type: undef
XXXX
tokenManager_31(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_30', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
REF_64(uint256) -> TMP_232.maxFee
MEMBER
init
end
init
end
init
end
_______________

Name: TMP_232.maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for REF_64

Name: TMP_232.maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: TMP_232, Field: maxFee
#################
Member: 
Name: TMP_232 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: maxFee
Finance Type: undef
Fieldf: 
Name: maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: TMP_232.maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
maxFee_1(uint256) := REF_64(uint256)
asgn
init
end
_______________

Name: TMP_232.maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: maxFee Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for maxFee

Name: maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: numerator, Num: 1
Globalname: numerator
End popogation
TMP_233(uint256) = providedLiquidity_1 (c)* equilibriumFee_1
testing mul...
init
end
init
end

Name: providedLiquidity Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: 6 rnorm: u
init
end
_______________

Name: providedLiquidity Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_233 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_233

Name: TMP_233 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_234(uint256) = TMP_233 (c)* maxFee_1
testing mul...
init
end
init
end

Name: TMP_233 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef

Name: maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: 6 rnorm: u
init
end
_______________

Name: TMP_233 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_234 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_234

Name: TMP_234 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
numerator_1(uint256) := TMP_234(uint256)
asgn
init
end
_______________

Name: TMP_234 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef

Name: numerator Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for numerator

Name: numerator Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: denominator, Num: 1
Globalname: denominator
End popogation
TMP_235(uint256) = equilibriumFee_1 (c)* providedLiquidity_1
testing mul...
init
end
init
end

Name: equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: providedLiquidity Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
lnorm: u rnorm: 6
init
end
_______________

Name: providedLiquidity Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_235 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_235

Name: TMP_235 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_236(uint256) = maxFee_1 (c)- equilibriumFee_1
init
end
init
end
init
end
_______________

Name: equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_236 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_236

Name: TMP_236 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_237(uint256) = TMP_236 (c)* resultingLiquidity_1
testing mul...
init
end
init
end

Name: TMP_236 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: resultingLiquidity Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: resultingLiquidity Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_237 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_237

Name: TMP_237 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_238(uint256) = TMP_235 (c)+ TMP_237
init
end
init
end
init
end
_______________

Name: TMP_235 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_238 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_238

Name: TMP_238 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
denominator_1(uint256) := TMP_238(uint256)
asgn
init
end
_______________

Name: TMP_238 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: denominator Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for denominator

Name: denominator Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_239(bool) = denominator_1 == 0
[i]Type for TMP_239

Name: TMP_239 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: fee, Num: 1
Globalname: fee
End popogation
fee_1(uint256) := 0(uint256)
asgn
init
end
_______________

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef

Name: fee Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for fee

Name: fee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: fee, Num: 2
Globalname: fee
End popogation
TMP_240(uint256) = numerator_1 (c)/ denominator_1
init
end
init
end
lnorm: 6 rnorm: u
Source address: u
init
end
_______________

Name: PIC_129 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_240 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
init
end
init
end
lnorm: 6 rnorm: u
Source address: u
init
end
_______________

Name: PIC_130 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_240 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_240

Name: TMP_240 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
fee_2(uint256) := TMP_240(uint256)
asgn
init
end
_______________

Name: TMP_240 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef

Name: fee Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for fee

Name: fee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_199

Name: TMP_199 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tokenManager_21(ITokenManager) := ϕ(['tokenManager_31'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getAmountToTransfer
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_36(ILiquidityProviders) := ϕ(['liquidityProviders_43'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getAmountToTransfer
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
transferFeePerc_1(uint256) := TMP_199(uint256)
asgn
init
end
_______________

Name: TMP_199 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: transferFeePerc Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for transferFeePerc

Name: transferFeePerc Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: transferFeePerc, Num: 1
Globalname: transferFeePerc
End popogation

Name: BASE_DIVISOR Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: baseGas Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: tokenManager Function: getAmountToTransfer
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getAmountToTransfer
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_200(ITokenManager.TokenInfo) = HIGH_LEVEL_CALL, dest:tokenManager_21(ITokenManager), function:getTokensInfo, arguments:['tokenAddress_1']  
High Call: getTokensInfo
Running querryfc
Written func info: TokenManager, getTokensInfo
[i]Type for TMP_200

Name: TMP_200 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: equilibriumFee
Finance Type: undef
XXXX
BASE_DIVISOR_3(uint256) := ϕ(['BASE_DIVISOR_3', 'BASE_DIVISOR_5', 'BASE_DIVISOR_2'])
Phi
[i]Type for BASE_DIVISOR

Name: BASE_DIVISOR Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
baseGas_5(uint256) := ϕ(['baseGas_2', 'baseGas_1', 'baseGas_4', 'baseGas_9'])
Phi
[i]Type for baseGas

Name: baseGas Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tokenManager_22(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_7', 'tokenManager_1', 'tokenManager_21', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getAmountToTransfer
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_37(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_36', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getAmountToTransfer
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_6(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_5', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulated_3(mapping(address => mapping(address => uint256))) := ϕ(['gasFeeAccumulated_16', 'gasFeeAccumulated_10', 'gasFeeAccumulated_22', 'gasFeeAccumulated_2'])
Phi
[i]Type for gasFeeAccumulated

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_25(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_24'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_44(uint256) -> TMP_200.equilibriumFee
MEMBER
init
end
init
end
init
end
_______________

Name: TMP_200.equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for REF_44

Name: TMP_200.equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: TMP_200, Field: equilibriumFee
#################
Member: 
Name: TMP_200 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: equilibriumFee
Finance Type: undef
Fieldf: 
Name: equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: TMP_200.equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_201(bool) = transferFeePerc_1 > REF_44
init
end
init
end
lnorm: u rnorm: u
init
end
_______________

Name: TMP_200.equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: transferFeePerc Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
init
end
_______________

Name: TMP_200.equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_201 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_201

Name: TMP_201 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: lpFee, Num: 1
Globalname: lpFee
End popogation

Name: BASE_DIVISOR Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: baseGas Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: tokenManager Function: getAmountToTransfer
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getAmountToTransfer
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_202(ITokenManager.TokenInfo) = HIGH_LEVEL_CALL, dest:tokenManager_22(ITokenManager), function:getTokensInfo, arguments:['tokenAddress_1']  
High Call: getTokensInfo
Running querryfc
Written func info: TokenManager, getTokensInfo
[i]Type for TMP_202

Name: TMP_202 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: equilibriumFee
Finance Type: undef
XXXX
BASE_DIVISOR_4(uint256) := ϕ(['BASE_DIVISOR_3', 'BASE_DIVISOR_5'])
Phi
[i]Type for BASE_DIVISOR

Name: BASE_DIVISOR Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
baseGas_6(uint256) := ϕ(['baseGas_2', 'baseGas_1', 'baseGas_5', 'baseGas_9'])
Phi
[i]Type for baseGas

Name: baseGas Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tokenManager_23(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_7', 'tokenManager_1', 'tokenManager_22', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getAmountToTransfer
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_38(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_37', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getAmountToTransfer
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_7(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_6', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulated_4(mapping(address => mapping(address => uint256))) := ϕ(['gasFeeAccumulated_16', 'gasFeeAccumulated_10', 'gasFeeAccumulated_3', 'gasFeeAccumulated_22'])
Phi
[i]Type for gasFeeAccumulated

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_26(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_46(uint256) -> TMP_202.equilibriumFee
MEMBER
init
end
init
end
init
end
_______________

Name: TMP_202.equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for REF_46

Name: TMP_202.equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: TMP_202, Field: equilibriumFee
#################
Member: 
Name: TMP_202 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: equilibriumFee
Finance Type: undef
Fieldf: 
Name: equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: TMP_202.equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_203(uint256) = amount_1 (c)* REF_46
testing mul...
init
end
init
end

Name: amount Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_202.equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: TMP_202.equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_203 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_203

Name: TMP_203 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_204(uint256) = TMP_203 (c)/ BASE_DIVISOR_4
init
end
init
end
lnorm: u rnorm: u
init
end
init
end
init
end
lnorm: u rnorm: u
init
end
[i]Type for TMP_204

Name: TMP_204 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
lpFee_1(uint256) := TMP_204(uint256)
asgn
init
end
_______________

Name: TMP_204 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: lpFee Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for lpFee

Name: lpFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: lpFee, Num: 2
Globalname: lpFee
End popogation
TMP_210(uint256) = amount_1 (c)* transferFeePerc_1
testing mul...
init
end
init
end

Name: amount Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: transferFeePerc Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: transferFeePerc Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_210 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_210

Name: TMP_210 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_211(uint256) = TMP_210 (c)/ BASE_DIVISOR_3
init
end
init
end
lnorm: u rnorm: u
init
end
init
end
init
end
lnorm: u rnorm: u
init
end
[i]Type for TMP_211

Name: TMP_211 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
lpFee_2(uint256) := TMP_211(uint256)
asgn
init
end
_______________

Name: TMP_211 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: lpFee Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for lpFee

Name: lpFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation

Name: BASE_DIVISOR Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: baseGas Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: tokenManager Function: getAmountToTransfer
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getAmountToTransfer
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
REF_47(uint256) -> incentivePool_26[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_47

Name: incentivePool Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_48(uint256) -> incentivePool_26[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_48

Name: incentivePool Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_205(ITokenManager.TokenInfo) = HIGH_LEVEL_CALL, dest:tokenManager_23(ITokenManager), function:getTokensInfo, arguments:['tokenAddress_1']  
High Call: getTokensInfo
Running querryfc
Written func info: TokenManager, getTokensInfo
[i]Type for TMP_205

Name: TMP_205 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: equilibriumFee
Finance Type: undef
XXXX
BASE_DIVISOR_5(uint256) := ϕ(['BASE_DIVISOR_3', 'BASE_DIVISOR_5', 'BASE_DIVISOR_4'])
Phi
[i]Type for BASE_DIVISOR

Name: BASE_DIVISOR Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
baseGas_7(uint256) := ϕ(['baseGas_2', 'baseGas_1', 'baseGas_6', 'baseGas_9'])
Phi
[i]Type for baseGas

Name: baseGas Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tokenManager_24(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_23', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getAmountToTransfer
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_39(ILiquidityProviders) := ϕ(['liquidityProviders_38', 'liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getAmountToTransfer
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_8(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_7', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulated_5(mapping(address => mapping(address => uint256))) := ϕ(['gasFeeAccumulated_16', 'gasFeeAccumulated_10', 'gasFeeAccumulated_4', 'gasFeeAccumulated_22'])
Phi
[i]Type for gasFeeAccumulated

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_27(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_26', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_50(uint256) -> TMP_205.equilibriumFee
MEMBER
init
end
init
end
init
end
_______________

Name: TMP_205.equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for REF_50

Name: TMP_205.equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: TMP_205, Field: equilibriumFee
#################
Member: 
Name: TMP_205 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: equilibriumFee
Finance Type: undef
Fieldf: 
Name: equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: TMP_205.equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_206(uint256) = transferFeePerc_1 (c)- REF_50
init
end
init
end
init
end
_______________

Name: TMP_205.equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_206 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_206

Name: TMP_206 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_207(uint256) = amount_1 (c)* TMP_206
testing mul...
init
end
init
end

Name: amount Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_206 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: TMP_206 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_207 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_207

Name: TMP_207 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_208(uint256) = REF_48 (c)+ TMP_207
init
end
init
end
init
end
_______________

Name: TMP_207 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_208 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_208

Name: TMP_208 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_209(uint256) = TMP_208 (c)/ BASE_DIVISOR_5
init
end
init
end
lnorm: u rnorm: u
init
end
init
end
init
end
lnorm: u rnorm: u
init
end
[i]Type for TMP_209

Name: TMP_209 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_28(mapping(address => uint256)) := ϕ(['incentivePool_26'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_47 (->incentivePool_28) := TMP_209(uint256)
asgn
init
end
_______________

Name: TMP_209 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: REF_47 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_47

Name: REF_47 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
Source address: u
Propogating parameters and globals to SSA variables...
End popogation
Name: lpFee, Num: 3
Globalname: lpFee

Name: lpFee Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
lpFee_3(uint256) := ϕ(['lpFee_1', 'lpFee_2'])
Phi

Name: lpFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: lpFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
init
end
_______________

Name: lpFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: lpFee Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for lpFee

Name: lpFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: transferFeeAmount, Num: 1
Globalname: transferFeeAmount
End popogation
TMP_212(uint256) = amount_1 (c)* transferFeePerc_1
testing mul...
init
end
init
end

Name: amount Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: transferFeePerc Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: transferFeePerc Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_212 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_212

Name: TMP_212 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_213(uint256) = TMP_212 (c)/ BASE_DIVISOR_3
init
end
init
end
lnorm: u rnorm: u
init
end
init
end
init
end
lnorm: u rnorm: u
init
end
[i]Type for TMP_213

Name: TMP_213 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
transferFeeAmount_1(uint256) := TMP_213(uint256)
asgn
init
end
_______________

Name: TMP_213 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: transferFeeAmount Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for transferFeeAmount

Name: transferFeeAmount Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation

Name: baseGas Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: tokenManager Function: getAmountToTransfer
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getAmountToTransfer
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
HIGH_LEVEL_CALL, dest:liquidityProviders_37(ILiquidityProviders), function:addLPFee, arguments:['tokenAddress_1', 'lpFee_3']  
High Call: addLPFee
baseGas_8(uint256) := ϕ(['baseGas_2', 'baseGas_1', 'baseGas_7', 'baseGas_9'])
Phi
[i]Type for baseGas

Name: baseGas Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tokenManager_25(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_24', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getAmountToTransfer
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_40(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_39', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getAmountToTransfer
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_9(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_8', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulated_6(mapping(address => mapping(address => uint256))) := ϕ(['gasFeeAccumulated_16', 'gasFeeAccumulated_10', 'gasFeeAccumulated_22', 'gasFeeAccumulated_5'])
Phi
[i]Type for gasFeeAccumulated

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Source address: u
Name: initialGas, Num: 1
Globalname: initialGas
Name: totalGasUsed, Num: 1
Globalname: totalGasUsed
End popogation
TMP_215(uint256) = SOLIDITY_CALL gasleft()()
[i]Type for TMP_215

Name: TMP_215 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_216(uint256) = initialGas_1 (c)- TMP_215
init
end
init
end
init
end
_______________

Name: TMP_215 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_216 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_216

Name: TMP_216 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
totalGasUsed_1(uint256) := TMP_216(uint256)
asgn
init
end
_______________

Name: TMP_216 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: totalGasUsed Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for totalGasUsed

Name: totalGasUsed Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: totalGasUsed, Num: 1
Globalname: totalGasUsed
Name: totalGasUsed, Num: 2
Globalname: totalGasUsed
End popogation

Name: baseGas Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: tokenManager Function: getAmountToTransfer
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_217(ITokenManager.TokenInfo) = HIGH_LEVEL_CALL, dest:tokenManager_25(ITokenManager), function:getTokensInfo, arguments:['tokenAddress_1']  
High Call: getTokensInfo
Running querryfc
Written func info: TokenManager, getTokensInfo
[i]Type for TMP_217

Name: TMP_217 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: transferOverhead
Finance Type: undef
XXXX
baseGas_9(uint256) := ϕ(['baseGas_2', 'baseGas_1', 'baseGas_8', 'baseGas_9'])
Phi
[i]Type for baseGas

Name: baseGas Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tokenManager_26(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_25', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getAmountToTransfer
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_10(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_9', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulated_7(mapping(address => mapping(address => uint256))) := ϕ(['gasFeeAccumulated_16', 'gasFeeAccumulated_10', 'gasFeeAccumulated_22', 'gasFeeAccumulated_6'])
Phi
[i]Type for gasFeeAccumulated

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_53(uint256) -> TMP_217.transferOverhead
MEMBER
init
end
init
end
init
end
_______________

Name: TMP_217.transferOverhead Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: transferOverhead Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for REF_53

Name: TMP_217.transferOverhead Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: TMP_217, Field: transferOverhead
#################
Member: 
Name: TMP_217 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: transferOverhead
Finance Type: undef
Fieldf: 
Name: transferOverhead Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: TMP_217.transferOverhead Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: transferOverhead Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_218(uint256) = totalGasUsed_1 (c)+ REF_53
init
end
init
end
init
end
_______________

Name: TMP_217.transferOverhead Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_218 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_218

Name: TMP_218 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
totalGasUsed_2(uint256) := TMP_218(uint256)
asgn
init
end
_______________

Name: TMP_218 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: totalGasUsed Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for totalGasUsed

Name: totalGasUsed Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: totalGasUsed, Num: 3
Globalname: totalGasUsed
End popogation
TMP_219(uint256) = totalGasUsed_2 (c)+ baseGas_9
init
end
init
end
init
end
_______________

Name: baseGas Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_219 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_219

Name: TMP_219 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
totalGasUsed_3(uint256) := TMP_219(uint256)
asgn
init
end
_______________

Name: TMP_219 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: totalGasUsed Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for totalGasUsed

Name: totalGasUsed Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Source address: u
Name: tokenGasPrice, Num: 1
Globalname: tokenGasPrice
Name: gasFee, Num: 1
Globalname: gasFee
End popogation
TMP_220(uint256) = totalGasUsed_3 (c)* tokenGasPrice_1
testing mul...
init
end
init
end

Name: totalGasUsed Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: tokenGasPrice_1 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: totalGasUsed Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_220 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_220

Name: TMP_220 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
gasFee_1(uint256) := TMP_220(uint256)
asgn
init
end
_______________

Name: TMP_220 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: gasFee Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for gasFee

Name: gasFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
REF_54(uint256) -> gasFeeAccumulatedByToken_10[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_54

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_55(uint256) -> gasFeeAccumulatedByToken_10[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_55

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_221(uint256) = REF_55 (c)+ gasFee_1
init
end
init
end
init
end
_______________

Name: gasFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_221 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_221

Name: TMP_221 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_11(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_10'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_54 (->gasFeeAccumulatedByToken_11) := TMP_221(uint256)
asgn
init
end
_______________

Name: TMP_221 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: REF_54 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_54

Name: REF_54 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
Source address: u
Propogating parameters and globals to SSA variables...
End popogation

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
REF_56(mapping(address => uint256)) -> gasFeeAccumulated_7[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_56

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_222(address) = INTERNAL_CALL, LiquidityPool._msgSender()()
init
end
_______________

Name: PIC_33 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_222 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_222

Name: TMP_222 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_57(uint256) -> REF_56[TMP_222]
INDEX
Source address: u
[i]Type for REF_57

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_58(mapping(address => uint256)) -> gasFeeAccumulated_8[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_58

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_223(address) = INTERNAL_CALL, LiquidityPool._msgSender()()
init
end
_______________

Name: PIC_33 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_223 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_223

Name: TMP_223 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_59(uint256) -> REF_58[TMP_223]
INDEX
Source address: u
[i]Type for REF_59

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_224(uint256) = REF_59 (c)+ gasFee_1
init
end
init
end
init
end
_______________

Name: gasFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_224 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_224

Name: TMP_224 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulated_10(mapping(address => mapping(address => uint256))) := ϕ(['gasFeeAccumulated_7'])
Phi
[i]Type for gasFeeAccumulated

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_57 (->gasFeeAccumulated_10) := TMP_224(uint256)
asgn
init
end
_______________

Name: TMP_224 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: REF_57 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_57

Name: REF_57 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
Source address: u
Propogating parameters and globals to SSA variables...
Name: amountToTransfer, Num: 1
Globalname: amountToTransfer
End popogation
TMP_225(uint256) = transferFeeAmount_1 (c)+ gasFee_1
init
end
init
end
init
end
_______________

Name: gasFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_225 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_225

Name: TMP_225 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_226(uint256) = amount_1 (c)- TMP_225
init
end
init
end
init
end
_______________

Name: TMP_225 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_226 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_226

Name: TMP_226 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
amountToTransfer_1(uint256) := TMP_226(uint256)
asgn
init
end
_______________

Name: TMP_226 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amountToTransfer Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for amountToTransfer

Name: amountToTransfer Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Source address: u
Name: initialGas, Num: 1
Globalname: initialGas

Name: initialGas_1 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Source address: -982

Name: tokenAddress_1 Function: getAmountToTransfer
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
Phid
Source address: u

Name: amount_1 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Source address: u
Name: tokenGasPrice, Num: 1
Globalname: tokenGasPrice

Name: tokenGasPrice_1 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: BASE_DIVISOR Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: baseGas Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: tokenManager Function: getAmountToTransfer
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getAmountToTransfer
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
initialGas_1(uint256) := ϕ(['initialGas_1'])
Phi

Name: initialGas Function: sendFundsToUser
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for initialGas

Name: initialGas Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tokenAddress_1(address) := ϕ(['tokenAddress_1'])
Phi
[i]Type for tokenAddress

Name: tokenAddress Function: getAmountToTransfer
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount_1'])
Phi
[i]Type for amount

Name: amount Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tokenGasPrice_1(uint256) := ϕ(['tokenGasPrice_1'])
Phi

Name: tokenGasPrice Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for tokenGasPrice

Name: tokenGasPrice Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
BASE_DIVISOR_1(uint256) := ϕ(['BASE_DIVISOR_3', 'BASE_DIVISOR_5', 'BASE_DIVISOR_0'])
Phi
[i]Type for BASE_DIVISOR

Name: BASE_DIVISOR Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
baseGas_3(uint256) := ϕ(['baseGas_2', 'baseGas_1', 'baseGas_0', 'baseGas_9'])
Phi
[i]Type for baseGas

Name: baseGas Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tokenManager_20(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_0', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getAmountToTransfer
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_35(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getAmountToTransfer
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_4(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_0', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulated_1(mapping(address => mapping(address => uint256))) := ϕ(['gasFeeAccumulated_0', 'gasFeeAccumulated_10', 'gasFeeAccumulated_16', 'gasFeeAccumulated_22'])
Phi
[i]Type for gasFeeAccumulated

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_23(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_0'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: transferFeePerc, Num: 1
Globalname: transferFeePerc
End popogation

Name: tokenManager Function: getAmountToTransfer
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getAmountToTransfer
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid
TMP_199(uint256) = INTERNAL_CALL, LiquidityPool.getTransferFee(address,uint256)(tokenAddress_1,amount_1)
init
end
init
end
[[], [], 6, 'tokenAddress', [], -1, -982, 'u']

Name: tokenAddress Function: None
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
Source address: -982

Name: tokenAddress_1 Function: getTransferFee
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
Phid
Source address: u

Name: amount_1 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getTransferFee
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid
tokenAddress_1(address) := ϕ(['tokenAddress_1'])
Phi
[i]Type for tokenAddress

Name: tokenAddress Function: getTransferFee
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount_1'])
Phi
[i]Type for amount

Name: amount Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tokenManager_27(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_0', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_41(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getTransferFee
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: currentLiquidity, Num: 1
Globalname: currentLiquidity
End popogation

Name: liquidityProviders Function: getTransferFee
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid
TMP_228(uint256) = INTERNAL_CALL, LiquidityPool.getCurrentLiquidity(address)(tokenAddress_1)
init
end
[[], [], 6, 'tokenAddress', [], -1, -982, 'u']

Name: tokenAddress Function: getCurrentLiquidity
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
Source address: -982

Name: tokenAddress_1 Function: getCurrentLiquidity
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
tokenAddress_1(address) := ϕ(['tokenAddress_1', 'tokenAddress_1'])
Phi
[i]Type for tokenAddress

Name: tokenAddress Function: getCurrentLiquidity
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_3(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_1(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_0', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_1(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_0'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: liquidityPoolBalance, Num: 1
Globalname: liquidityPoolBalance
End popogation

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_99(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_3(ILiquidityProviders), function:getCurrentLiquidity, arguments:['tokenAddress_1']  
High Call: getCurrentLiquidity
Running querryfc
Written func info: LiquidityProviders, getCurrentLiquidity
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-982], [-1], 6, "'u'", 'u', -1)
[i]Type for TMP_99

Name: TMP_99 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
liquidityProviders_4(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_3', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_2(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_1', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_2(mapping(address => uint256)) := ϕ(['incentivePool_1', 'incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityPoolBalance_1(uint256) := TMP_99(uint256)
asgn
init
end
_______________

Name: TMP_99 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for liquidityPoolBalance

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: currentLiquidity, Num: 1
Globalname: currentLiquidity
End popogation

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_100(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_4(ILiquidityProviders), function:totalLPFees, arguments:['tokenAddress_1']  
High Call: totalLPFees
Running querryfc
Written func info: LiquidityProviders, totalLPFees
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-982], [-1], 6, "'u'", 'u', -1)
[i]Type for TMP_100

Name: TMP_100 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
liquidityProviders_5(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_4', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_3(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_2', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_3(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_2', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_101(uint256) = liquidityPoolBalance_1 (c)- TMP_100
init
end
init
end
-982
-1
lnorm: 6 rnorm: 6
init
end
_______________

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_101 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_101

Name: TMP_101 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_2(uint256) -> gasFeeAccumulatedByToken_3[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_2

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_102(uint256) = TMP_101 (c)- REF_2
init
end
init
end
init
end
_______________

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_102 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_102

Name: TMP_102 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_3(uint256) -> incentivePool_3[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_3

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_103(uint256) = TMP_102 (c)- REF_3
init
end
init
end
init
end
_______________

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_103 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_103

Name: TMP_103 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
currentLiquidity_1(uint256) := TMP_103(uint256)
asgn
init
end
_______________

Name: TMP_103 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: currentLiquidity Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for currentLiquidity

Name: currentLiquidity Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Source address: -982

Name: tokenAddress_1 Function: getCurrentLiquidity
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
tokenAddress_1(address) := ϕ(['tokenAddress_1', 'tokenAddress_1'])
Phi
[i]Type for tokenAddress

Name: tokenAddress Function: getCurrentLiquidity
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_3(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_1(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_0', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_1(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_0'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: liquidityPoolBalance, Num: 1
Globalname: liquidityPoolBalance
End popogation

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_99(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_3(ILiquidityProviders), function:getCurrentLiquidity, arguments:['tokenAddress_1']  
High Call: getCurrentLiquidity
Running querryfc
Written func info: LiquidityProviders, getCurrentLiquidity
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-982], [-1], 6, "'u'", 'u', -1)
[i]Type for TMP_99

Name: TMP_99 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
liquidityProviders_4(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_3', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_2(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_1', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_2(mapping(address => uint256)) := ϕ(['incentivePool_1', 'incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityPoolBalance_1(uint256) := TMP_99(uint256)
asgn
init
end
_______________

Name: TMP_99 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for liquidityPoolBalance

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: currentLiquidity, Num: 1
Globalname: currentLiquidity
End popogation

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_100(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_4(ILiquidityProviders), function:totalLPFees, arguments:['tokenAddress_1']  
High Call: totalLPFees
Running querryfc
Written func info: LiquidityProviders, totalLPFees
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-982], [-1], 6, "'u'", 'u', -1)
[i]Type for TMP_100

Name: TMP_100 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
liquidityProviders_5(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_4', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_3(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_2', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_3(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_2', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_101(uint256) = liquidityPoolBalance_1 (c)- TMP_100
init
end
init
end
-982
-1
lnorm: 6 rnorm: 6
init
end
_______________

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_101 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_101

Name: TMP_101 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_2(uint256) -> gasFeeAccumulatedByToken_3[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_2

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_102(uint256) = TMP_101 (c)- REF_2
init
end
init
end
init
end
_______________

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_102 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_102

Name: TMP_102 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_3(uint256) -> incentivePool_3[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_3

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_103(uint256) = TMP_102 (c)- REF_3
init
end
init
end
init
end
_______________

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_103 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_103

Name: TMP_103 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
currentLiquidity_1(uint256) := TMP_103(uint256)
asgn
init
end
_______________

Name: TMP_103 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: currentLiquidity Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for currentLiquidity

Name: currentLiquidity Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_228

Name: TMP_228 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_42(ILiquidityProviders) := ϕ(['liquidityProviders_5'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getTransferFee
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
currentLiquidity_1(uint256) := TMP_228(uint256)
asgn
init
end
_______________

Name: TMP_228 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: currentLiquidity Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for currentLiquidity

Name: currentLiquidity Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: providedLiquidity, Num: 1
Globalname: providedLiquidity
End popogation

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getTransferFee
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid
TMP_229(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_42(ILiquidityProviders), function:getSuppliedLiquidityByToken, arguments:['tokenAddress_1']  
High Call: getSuppliedLiquidityByToken
Running querryfc
Written func info: LiquidityProviders, getSuppliedLiquidityByToken
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-982], [-1], 6, "'u'", 'u', -1)
[i]Type for TMP_229

Name: TMP_229 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
tokenManager_29(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_28', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_43(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_42', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getTransferFee
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
providedLiquidity_1(uint256) := TMP_229(uint256)
asgn
init
end
_______________

Name: TMP_229 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: providedLiquidity Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for providedLiquidity

Name: providedLiquidity Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: currentLiquidity, Num: 1
Globalname: currentLiquidity
Name: resultingLiquidity, Num: 1
Globalname: resultingLiquidity
End popogation
TMP_230(uint256) = currentLiquidity_1 (c)- amount_1
init
end
init
end
init
end
_______________

Name: amount Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_230 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_230

Name: TMP_230 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
resultingLiquidity_1(uint256) := TMP_230(uint256)
asgn
init
end
_______________

Name: TMP_230 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: resultingLiquidity Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for resultingLiquidity

Name: resultingLiquidity Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: equilibriumFee, Num: 1
Globalname: equilibriumFee
End popogation

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid
TMP_231(ITokenManager.TokenInfo) = HIGH_LEVEL_CALL, dest:tokenManager_29(ITokenManager), function:getTokensInfo, arguments:['tokenAddress_1']  
High Call: getTokensInfo
Running querryfc
Written func info: TokenManager, getTokensInfo
[i]Type for TMP_231

Name: TMP_231 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: equilibriumFee
Finance Type: undef
XXXX
tokenManager_30(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_29', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
REF_62(uint256) -> TMP_231.equilibriumFee
MEMBER
init
end
init
end
init
end
_______________

Name: TMP_231.equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for REF_62

Name: TMP_231.equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: TMP_231, Field: equilibriumFee
#################
Member: 
Name: TMP_231 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: equilibriumFee
Finance Type: undef
Fieldf: 
Name: equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: TMP_231.equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
equilibriumFee_1(uint256) := REF_62(uint256)
asgn
init
end
_______________

Name: TMP_231.equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: equilibriumFee Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for equilibriumFee

Name: equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: maxFee, Num: 1
Globalname: maxFee
End popogation

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid
TMP_232(ITokenManager.TokenInfo) = HIGH_LEVEL_CALL, dest:tokenManager_30(ITokenManager), function:getTokensInfo, arguments:['tokenAddress_1']  
High Call: getTokensInfo
Running querryfc
Written func info: TokenManager, getTokensInfo
[i]Type for TMP_232

Name: TMP_232 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: maxFee
Finance Type: undef
XXXX
tokenManager_31(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_30', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
REF_64(uint256) -> TMP_232.maxFee
MEMBER
init
end
init
end
init
end
_______________

Name: TMP_232.maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for REF_64

Name: TMP_232.maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: TMP_232, Field: maxFee
#################
Member: 
Name: TMP_232 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: maxFee
Finance Type: undef
Fieldf: 
Name: maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: TMP_232.maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
maxFee_1(uint256) := REF_64(uint256)
asgn
init
end
_______________

Name: TMP_232.maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: maxFee Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for maxFee

Name: maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: numerator, Num: 1
Globalname: numerator
End popogation
TMP_233(uint256) = providedLiquidity_1 (c)* equilibriumFee_1
testing mul...
init
end
init
end

Name: providedLiquidity Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: 6 rnorm: u
init
end
_______________

Name: providedLiquidity Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_233 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_233

Name: TMP_233 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_234(uint256) = TMP_233 (c)* maxFee_1
testing mul...
init
end
init
end

Name: TMP_233 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef

Name: maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: 6 rnorm: u
init
end
_______________

Name: TMP_233 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_234 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_234

Name: TMP_234 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
numerator_1(uint256) := TMP_234(uint256)
asgn
init
end
_______________

Name: TMP_234 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef

Name: numerator Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for numerator

Name: numerator Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: denominator, Num: 1
Globalname: denominator
End popogation
TMP_235(uint256) = equilibriumFee_1 (c)* providedLiquidity_1
testing mul...
init
end
init
end

Name: equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: providedLiquidity Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
lnorm: u rnorm: 6
init
end
_______________

Name: providedLiquidity Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_235 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_235

Name: TMP_235 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_236(uint256) = maxFee_1 (c)- equilibriumFee_1
init
end
init
end
init
end
_______________

Name: equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_236 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_236

Name: TMP_236 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_237(uint256) = TMP_236 (c)* resultingLiquidity_1
testing mul...
init
end
init
end

Name: TMP_236 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: resultingLiquidity Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: resultingLiquidity Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_237 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_237

Name: TMP_237 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_238(uint256) = TMP_235 (c)+ TMP_237
init
end
init
end
init
end
_______________

Name: TMP_235 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_238 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_238

Name: TMP_238 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
denominator_1(uint256) := TMP_238(uint256)
asgn
init
end
_______________

Name: TMP_238 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: denominator Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for denominator

Name: denominator Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_239(bool) = denominator_1 == 0
[i]Type for TMP_239

Name: TMP_239 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: fee, Num: 1
Globalname: fee
End popogation
fee_1(uint256) := 0(uint256)
asgn
init
end
_______________

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef

Name: fee Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for fee

Name: fee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: fee, Num: 2
Globalname: fee
End popogation
TMP_240(uint256) = numerator_1 (c)/ denominator_1
init
end
init
end
lnorm: 6 rnorm: u
Source address: u
init
end
_______________

Name: PIC_133 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_240 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
init
end
init
end
lnorm: 6 rnorm: u
Source address: u
init
end
_______________

Name: PIC_134 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_240 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_240

Name: TMP_240 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
fee_2(uint256) := TMP_240(uint256)
asgn
init
end
_______________

Name: TMP_240 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef

Name: fee Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for fee

Name: fee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Source address: -982

Name: tokenAddress_1 Function: getTransferFee
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
Phid
Source address: u

Name: amount_1 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getTransferFee
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid
tokenAddress_1(address) := ϕ(['tokenAddress_1'])
Phi
[i]Type for tokenAddress

Name: tokenAddress Function: getTransferFee
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount_1'])
Phi
[i]Type for amount

Name: amount Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tokenManager_27(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_0', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_41(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getTransferFee
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: currentLiquidity, Num: 1
Globalname: currentLiquidity
End popogation

Name: liquidityProviders Function: getTransferFee
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid
TMP_228(uint256) = INTERNAL_CALL, LiquidityPool.getCurrentLiquidity(address)(tokenAddress_1)
init
end
[[], [], 6, 'tokenAddress', [], -1, -982, 'u']

Name: tokenAddress Function: getCurrentLiquidity
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
Source address: -982

Name: tokenAddress_1 Function: getCurrentLiquidity
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
tokenAddress_1(address) := ϕ(['tokenAddress_1', 'tokenAddress_1'])
Phi
[i]Type for tokenAddress

Name: tokenAddress Function: getCurrentLiquidity
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_3(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_1(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_0', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_1(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_0'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: liquidityPoolBalance, Num: 1
Globalname: liquidityPoolBalance
End popogation

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_99(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_3(ILiquidityProviders), function:getCurrentLiquidity, arguments:['tokenAddress_1']  
High Call: getCurrentLiquidity
Running querryfc
Written func info: LiquidityProviders, getCurrentLiquidity
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-982], [-1], 6, "'u'", 'u', -1)
[i]Type for TMP_99

Name: TMP_99 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
liquidityProviders_4(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_3', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_2(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_1', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_2(mapping(address => uint256)) := ϕ(['incentivePool_1', 'incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityPoolBalance_1(uint256) := TMP_99(uint256)
asgn
init
end
_______________

Name: TMP_99 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for liquidityPoolBalance

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: currentLiquidity, Num: 1
Globalname: currentLiquidity
End popogation

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_100(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_4(ILiquidityProviders), function:totalLPFees, arguments:['tokenAddress_1']  
High Call: totalLPFees
Running querryfc
Written func info: LiquidityProviders, totalLPFees
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-982], [-1], 6, "'u'", 'u', -1)
[i]Type for TMP_100

Name: TMP_100 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
liquidityProviders_5(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_4', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_3(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_2', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_3(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_2', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_101(uint256) = liquidityPoolBalance_1 (c)- TMP_100
init
end
init
end
-982
-1
lnorm: 6 rnorm: 6
init
end
_______________

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_101 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_101

Name: TMP_101 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_2(uint256) -> gasFeeAccumulatedByToken_3[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_2

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_102(uint256) = TMP_101 (c)- REF_2
init
end
init
end
init
end
_______________

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_102 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_102

Name: TMP_102 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_3(uint256) -> incentivePool_3[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_3

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_103(uint256) = TMP_102 (c)- REF_3
init
end
init
end
init
end
_______________

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_103 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_103

Name: TMP_103 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
currentLiquidity_1(uint256) := TMP_103(uint256)
asgn
init
end
_______________

Name: TMP_103 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: currentLiquidity Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for currentLiquidity

Name: currentLiquidity Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Source address: -982

Name: tokenAddress_1 Function: getCurrentLiquidity
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
tokenAddress_1(address) := ϕ(['tokenAddress_1', 'tokenAddress_1'])
Phi
[i]Type for tokenAddress

Name: tokenAddress Function: getCurrentLiquidity
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_3(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_1(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_0', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_1(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_0'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: liquidityPoolBalance, Num: 1
Globalname: liquidityPoolBalance
End popogation

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_99(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_3(ILiquidityProviders), function:getCurrentLiquidity, arguments:['tokenAddress_1']  
High Call: getCurrentLiquidity
Running querryfc
Written func info: LiquidityProviders, getCurrentLiquidity
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-982], [-1], 6, "'u'", 'u', -1)
[i]Type for TMP_99

Name: TMP_99 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
liquidityProviders_4(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_3', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_2(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_1', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_2(mapping(address => uint256)) := ϕ(['incentivePool_1', 'incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityPoolBalance_1(uint256) := TMP_99(uint256)
asgn
init
end
_______________

Name: TMP_99 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for liquidityPoolBalance

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: currentLiquidity, Num: 1
Globalname: currentLiquidity
End popogation

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_100(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_4(ILiquidityProviders), function:totalLPFees, arguments:['tokenAddress_1']  
High Call: totalLPFees
Running querryfc
Written func info: LiquidityProviders, totalLPFees
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-982], [-1], 6, "'u'", 'u', -1)
[i]Type for TMP_100

Name: TMP_100 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
liquidityProviders_5(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_4', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_3(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_2', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_3(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_2', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_101(uint256) = liquidityPoolBalance_1 (c)- TMP_100
init
end
init
end
-982
-1
lnorm: 6 rnorm: 6
init
end
_______________

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_101 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_101

Name: TMP_101 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_2(uint256) -> gasFeeAccumulatedByToken_3[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_2

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_102(uint256) = TMP_101 (c)- REF_2
init
end
init
end
init
end
_______________

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_102 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_102

Name: TMP_102 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_3(uint256) -> incentivePool_3[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_3

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_103(uint256) = TMP_102 (c)- REF_3
init
end
init
end
init
end
_______________

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_103 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_103

Name: TMP_103 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
currentLiquidity_1(uint256) := TMP_103(uint256)
asgn
init
end
_______________

Name: TMP_103 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: currentLiquidity Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for currentLiquidity

Name: currentLiquidity Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_228

Name: TMP_228 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_42(ILiquidityProviders) := ϕ(['liquidityProviders_5'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getTransferFee
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
currentLiquidity_1(uint256) := TMP_228(uint256)
asgn
init
end
_______________

Name: TMP_228 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: currentLiquidity Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for currentLiquidity

Name: currentLiquidity Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: providedLiquidity, Num: 1
Globalname: providedLiquidity
End popogation

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getTransferFee
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid
TMP_229(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_42(ILiquidityProviders), function:getSuppliedLiquidityByToken, arguments:['tokenAddress_1']  
High Call: getSuppliedLiquidityByToken
Running querryfc
Written func info: LiquidityProviders, getSuppliedLiquidityByToken
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-982], [-1], 6, "'u'", 'u', -1)
[i]Type for TMP_229

Name: TMP_229 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
tokenManager_29(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_28', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_43(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_42', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getTransferFee
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
providedLiquidity_1(uint256) := TMP_229(uint256)
asgn
init
end
_______________

Name: TMP_229 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: providedLiquidity Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for providedLiquidity

Name: providedLiquidity Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: currentLiquidity, Num: 1
Globalname: currentLiquidity
Name: resultingLiquidity, Num: 1
Globalname: resultingLiquidity
End popogation
TMP_230(uint256) = currentLiquidity_1 (c)- amount_1
init
end
init
end
init
end
_______________

Name: amount Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_230 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_230

Name: TMP_230 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
resultingLiquidity_1(uint256) := TMP_230(uint256)
asgn
init
end
_______________

Name: TMP_230 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: resultingLiquidity Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for resultingLiquidity

Name: resultingLiquidity Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: equilibriumFee, Num: 1
Globalname: equilibriumFee
End popogation

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid
TMP_231(ITokenManager.TokenInfo) = HIGH_LEVEL_CALL, dest:tokenManager_29(ITokenManager), function:getTokensInfo, arguments:['tokenAddress_1']  
High Call: getTokensInfo
Running querryfc
Written func info: TokenManager, getTokensInfo
[i]Type for TMP_231

Name: TMP_231 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: equilibriumFee
Finance Type: undef
XXXX
tokenManager_30(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_29', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
REF_62(uint256) -> TMP_231.equilibriumFee
MEMBER
init
end
init
end
init
end
_______________

Name: TMP_231.equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for REF_62

Name: TMP_231.equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: TMP_231, Field: equilibriumFee
#################
Member: 
Name: TMP_231 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: equilibriumFee
Finance Type: undef
Fieldf: 
Name: equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: TMP_231.equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
equilibriumFee_1(uint256) := REF_62(uint256)
asgn
init
end
_______________

Name: TMP_231.equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: equilibriumFee Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for equilibriumFee

Name: equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: maxFee, Num: 1
Globalname: maxFee
End popogation

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid
TMP_232(ITokenManager.TokenInfo) = HIGH_LEVEL_CALL, dest:tokenManager_30(ITokenManager), function:getTokensInfo, arguments:['tokenAddress_1']  
High Call: getTokensInfo
Running querryfc
Written func info: TokenManager, getTokensInfo
[i]Type for TMP_232

Name: TMP_232 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: maxFee
Finance Type: undef
XXXX
tokenManager_31(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_30', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
REF_64(uint256) -> TMP_232.maxFee
MEMBER
init
end
init
end
init
end
_______________

Name: TMP_232.maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for REF_64

Name: TMP_232.maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: TMP_232, Field: maxFee
#################
Member: 
Name: TMP_232 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: maxFee
Finance Type: undef
Fieldf: 
Name: maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: TMP_232.maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
maxFee_1(uint256) := REF_64(uint256)
asgn
init
end
_______________

Name: TMP_232.maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: maxFee Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for maxFee

Name: maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: numerator, Num: 1
Globalname: numerator
End popogation
TMP_233(uint256) = providedLiquidity_1 (c)* equilibriumFee_1
testing mul...
init
end
init
end

Name: providedLiquidity Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: 6 rnorm: u
init
end
_______________

Name: providedLiquidity Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_233 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_233

Name: TMP_233 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_234(uint256) = TMP_233 (c)* maxFee_1
testing mul...
init
end
init
end

Name: TMP_233 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef

Name: maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: 6 rnorm: u
init
end
_______________

Name: TMP_233 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_234 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_234

Name: TMP_234 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
numerator_1(uint256) := TMP_234(uint256)
asgn
init
end
_______________

Name: TMP_234 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef

Name: numerator Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for numerator

Name: numerator Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: denominator, Num: 1
Globalname: denominator
End popogation
TMP_235(uint256) = equilibriumFee_1 (c)* providedLiquidity_1
testing mul...
init
end
init
end

Name: equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: providedLiquidity Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
lnorm: u rnorm: 6
init
end
_______________

Name: providedLiquidity Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_235 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_235

Name: TMP_235 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_236(uint256) = maxFee_1 (c)- equilibriumFee_1
init
end
init
end
init
end
_______________

Name: equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_236 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_236

Name: TMP_236 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_237(uint256) = TMP_236 (c)* resultingLiquidity_1
testing mul...
init
end
init
end

Name: TMP_236 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: resultingLiquidity Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: resultingLiquidity Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_237 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_237

Name: TMP_237 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_238(uint256) = TMP_235 (c)+ TMP_237
init
end
init
end
init
end
_______________

Name: TMP_235 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_238 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_238

Name: TMP_238 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
denominator_1(uint256) := TMP_238(uint256)
asgn
init
end
_______________

Name: TMP_238 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: denominator Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for denominator

Name: denominator Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_239(bool) = denominator_1 == 0
[i]Type for TMP_239

Name: TMP_239 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: fee, Num: 1
Globalname: fee
End popogation
fee_1(uint256) := 0(uint256)
asgn
init
end
_______________

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef

Name: fee Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for fee

Name: fee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: fee, Num: 2
Globalname: fee
End popogation
TMP_240(uint256) = numerator_1 (c)/ denominator_1
init
end
init
end
lnorm: 6 rnorm: u
Source address: u
init
end
_______________

Name: PIC_136 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_240 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
init
end
init
end
lnorm: 6 rnorm: u
Source address: u
init
end
_______________

Name: PIC_137 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_240 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_240

Name: TMP_240 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
fee_2(uint256) := TMP_240(uint256)
asgn
init
end
_______________

Name: TMP_240 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef

Name: fee Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for fee

Name: fee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_199

Name: TMP_199 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tokenManager_21(ITokenManager) := ϕ(['tokenManager_31'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getAmountToTransfer
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_36(ILiquidityProviders) := ϕ(['liquidityProviders_43'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getAmountToTransfer
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
transferFeePerc_1(uint256) := TMP_199(uint256)
asgn
init
end
_______________

Name: TMP_199 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: transferFeePerc Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for transferFeePerc

Name: transferFeePerc Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: transferFeePerc, Num: 1
Globalname: transferFeePerc
End popogation

Name: BASE_DIVISOR Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: baseGas Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: tokenManager Function: getAmountToTransfer
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getAmountToTransfer
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_200(ITokenManager.TokenInfo) = HIGH_LEVEL_CALL, dest:tokenManager_21(ITokenManager), function:getTokensInfo, arguments:['tokenAddress_1']  
High Call: getTokensInfo
Running querryfc
Written func info: TokenManager, getTokensInfo
[i]Type for TMP_200

Name: TMP_200 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: equilibriumFee
Finance Type: undef
XXXX
BASE_DIVISOR_3(uint256) := ϕ(['BASE_DIVISOR_3', 'BASE_DIVISOR_5', 'BASE_DIVISOR_2'])
Phi
[i]Type for BASE_DIVISOR

Name: BASE_DIVISOR Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
baseGas_5(uint256) := ϕ(['baseGas_2', 'baseGas_1', 'baseGas_4', 'baseGas_9'])
Phi
[i]Type for baseGas

Name: baseGas Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tokenManager_22(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_7', 'tokenManager_1', 'tokenManager_21', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getAmountToTransfer
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_37(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_36', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getAmountToTransfer
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_6(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_5', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulated_3(mapping(address => mapping(address => uint256))) := ϕ(['gasFeeAccumulated_16', 'gasFeeAccumulated_10', 'gasFeeAccumulated_22', 'gasFeeAccumulated_2'])
Phi
[i]Type for gasFeeAccumulated

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_25(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_24'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_44(uint256) -> TMP_200.equilibriumFee
MEMBER
init
end
init
end
init
end
_______________

Name: TMP_200.equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for REF_44

Name: TMP_200.equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: TMP_200, Field: equilibriumFee
#################
Member: 
Name: TMP_200 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: equilibriumFee
Finance Type: undef
Fieldf: 
Name: equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: TMP_200.equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_201(bool) = transferFeePerc_1 > REF_44
init
end
init
end
lnorm: u rnorm: u
init
end
_______________

Name: TMP_200.equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: transferFeePerc Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
init
end
_______________

Name: TMP_200.equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_201 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_201

Name: TMP_201 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: lpFee, Num: 1
Globalname: lpFee
End popogation

Name: BASE_DIVISOR Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: baseGas Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: tokenManager Function: getAmountToTransfer
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getAmountToTransfer
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_202(ITokenManager.TokenInfo) = HIGH_LEVEL_CALL, dest:tokenManager_22(ITokenManager), function:getTokensInfo, arguments:['tokenAddress_1']  
High Call: getTokensInfo
Running querryfc
Written func info: TokenManager, getTokensInfo
[i]Type for TMP_202

Name: TMP_202 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: equilibriumFee
Finance Type: undef
XXXX
BASE_DIVISOR_4(uint256) := ϕ(['BASE_DIVISOR_3', 'BASE_DIVISOR_5'])
Phi
[i]Type for BASE_DIVISOR

Name: BASE_DIVISOR Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
baseGas_6(uint256) := ϕ(['baseGas_2', 'baseGas_1', 'baseGas_5', 'baseGas_9'])
Phi
[i]Type for baseGas

Name: baseGas Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tokenManager_23(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_7', 'tokenManager_1', 'tokenManager_22', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getAmountToTransfer
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_38(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_37', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getAmountToTransfer
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_7(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_6', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulated_4(mapping(address => mapping(address => uint256))) := ϕ(['gasFeeAccumulated_16', 'gasFeeAccumulated_10', 'gasFeeAccumulated_3', 'gasFeeAccumulated_22'])
Phi
[i]Type for gasFeeAccumulated

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_26(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_46(uint256) -> TMP_202.equilibriumFee
MEMBER
init
end
init
end
init
end
_______________

Name: TMP_202.equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for REF_46

Name: TMP_202.equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: TMP_202, Field: equilibriumFee
#################
Member: 
Name: TMP_202 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: equilibriumFee
Finance Type: undef
Fieldf: 
Name: equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: TMP_202.equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_203(uint256) = amount_1 (c)* REF_46
testing mul...
init
end
init
end

Name: amount Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_202.equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: TMP_202.equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_203 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_203

Name: TMP_203 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_204(uint256) = TMP_203 (c)/ BASE_DIVISOR_4
init
end
init
end
lnorm: u rnorm: u
init
end
init
end
init
end
lnorm: u rnorm: u
init
end
[i]Type for TMP_204

Name: TMP_204 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
lpFee_1(uint256) := TMP_204(uint256)
asgn
init
end
_______________

Name: TMP_204 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: lpFee Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for lpFee

Name: lpFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: lpFee, Num: 2
Globalname: lpFee
End popogation
TMP_210(uint256) = amount_1 (c)* transferFeePerc_1
testing mul...
init
end
init
end

Name: amount Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: transferFeePerc Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: transferFeePerc Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_210 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_210

Name: TMP_210 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_211(uint256) = TMP_210 (c)/ BASE_DIVISOR_3
init
end
init
end
lnorm: u rnorm: u
init
end
init
end
init
end
lnorm: u rnorm: u
init
end
[i]Type for TMP_211

Name: TMP_211 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
lpFee_2(uint256) := TMP_211(uint256)
asgn
init
end
_______________

Name: TMP_211 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: lpFee Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for lpFee

Name: lpFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation

Name: BASE_DIVISOR Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: baseGas Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: tokenManager Function: getAmountToTransfer
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getAmountToTransfer
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
REF_47(uint256) -> incentivePool_26[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_47

Name: incentivePool Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_48(uint256) -> incentivePool_26[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_48

Name: incentivePool Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_205(ITokenManager.TokenInfo) = HIGH_LEVEL_CALL, dest:tokenManager_23(ITokenManager), function:getTokensInfo, arguments:['tokenAddress_1']  
High Call: getTokensInfo
Running querryfc
Written func info: TokenManager, getTokensInfo
[i]Type for TMP_205

Name: TMP_205 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: equilibriumFee
Finance Type: undef
XXXX
BASE_DIVISOR_5(uint256) := ϕ(['BASE_DIVISOR_3', 'BASE_DIVISOR_5', 'BASE_DIVISOR_4'])
Phi
[i]Type for BASE_DIVISOR

Name: BASE_DIVISOR Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
baseGas_7(uint256) := ϕ(['baseGas_2', 'baseGas_1', 'baseGas_6', 'baseGas_9'])
Phi
[i]Type for baseGas

Name: baseGas Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tokenManager_24(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_23', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getAmountToTransfer
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_39(ILiquidityProviders) := ϕ(['liquidityProviders_38', 'liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getAmountToTransfer
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_8(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_7', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulated_5(mapping(address => mapping(address => uint256))) := ϕ(['gasFeeAccumulated_16', 'gasFeeAccumulated_10', 'gasFeeAccumulated_4', 'gasFeeAccumulated_22'])
Phi
[i]Type for gasFeeAccumulated

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_27(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_26', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_50(uint256) -> TMP_205.equilibriumFee
MEMBER
init
end
init
end
init
end
_______________

Name: TMP_205.equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for REF_50

Name: TMP_205.equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: TMP_205, Field: equilibriumFee
#################
Member: 
Name: TMP_205 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: equilibriumFee
Finance Type: undef
Fieldf: 
Name: equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: TMP_205.equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_206(uint256) = transferFeePerc_1 (c)- REF_50
init
end
init
end
init
end
_______________

Name: TMP_205.equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_206 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_206

Name: TMP_206 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_207(uint256) = amount_1 (c)* TMP_206
testing mul...
init
end
init
end

Name: amount Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_206 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: TMP_206 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_207 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_207

Name: TMP_207 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_208(uint256) = REF_48 (c)+ TMP_207
init
end
init
end
init
end
_______________

Name: TMP_207 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_208 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_208

Name: TMP_208 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_209(uint256) = TMP_208 (c)/ BASE_DIVISOR_5
init
end
init
end
lnorm: u rnorm: u
init
end
init
end
init
end
lnorm: u rnorm: u
init
end
[i]Type for TMP_209

Name: TMP_209 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_28(mapping(address => uint256)) := ϕ(['incentivePool_26'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_47 (->incentivePool_28) := TMP_209(uint256)
asgn
init
end
_______________

Name: TMP_209 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: REF_47 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_47

Name: REF_47 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
Source address: u
Propogating parameters and globals to SSA variables...
End popogation
Name: lpFee, Num: 3
Globalname: lpFee

Name: lpFee Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
lpFee_3(uint256) := ϕ(['lpFee_1', 'lpFee_2'])
Phi

Name: lpFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: lpFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
init
end
_______________

Name: lpFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: lpFee Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for lpFee

Name: lpFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: transferFeeAmount, Num: 1
Globalname: transferFeeAmount
End popogation
TMP_212(uint256) = amount_1 (c)* transferFeePerc_1
testing mul...
init
end
init
end

Name: amount Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: transferFeePerc Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: transferFeePerc Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_212 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_212

Name: TMP_212 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_213(uint256) = TMP_212 (c)/ BASE_DIVISOR_3
init
end
init
end
lnorm: u rnorm: u
init
end
init
end
init
end
lnorm: u rnorm: u
init
end
[i]Type for TMP_213

Name: TMP_213 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
transferFeeAmount_1(uint256) := TMP_213(uint256)
asgn
init
end
_______________

Name: TMP_213 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: transferFeeAmount Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for transferFeeAmount

Name: transferFeeAmount Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation

Name: baseGas Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: tokenManager Function: getAmountToTransfer
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getAmountToTransfer
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
HIGH_LEVEL_CALL, dest:liquidityProviders_37(ILiquidityProviders), function:addLPFee, arguments:['tokenAddress_1', 'lpFee_3']  
High Call: addLPFee
baseGas_8(uint256) := ϕ(['baseGas_2', 'baseGas_1', 'baseGas_7', 'baseGas_9'])
Phi
[i]Type for baseGas

Name: baseGas Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tokenManager_25(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_24', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getAmountToTransfer
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_40(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_39', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getAmountToTransfer
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_9(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_8', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulated_6(mapping(address => mapping(address => uint256))) := ϕ(['gasFeeAccumulated_16', 'gasFeeAccumulated_10', 'gasFeeAccumulated_22', 'gasFeeAccumulated_5'])
Phi
[i]Type for gasFeeAccumulated

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Source address: u
Name: initialGas, Num: 1
Globalname: initialGas
Name: totalGasUsed, Num: 1
Globalname: totalGasUsed
End popogation
TMP_215(uint256) = SOLIDITY_CALL gasleft()()
[i]Type for TMP_215

Name: TMP_215 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_216(uint256) = initialGas_1 (c)- TMP_215
init
end
init
end
init
end
_______________

Name: TMP_215 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_216 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_216

Name: TMP_216 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
totalGasUsed_1(uint256) := TMP_216(uint256)
asgn
init
end
_______________

Name: TMP_216 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: totalGasUsed Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for totalGasUsed

Name: totalGasUsed Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: totalGasUsed, Num: 1
Globalname: totalGasUsed
Name: totalGasUsed, Num: 2
Globalname: totalGasUsed
End popogation

Name: baseGas Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: tokenManager Function: getAmountToTransfer
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_217(ITokenManager.TokenInfo) = HIGH_LEVEL_CALL, dest:tokenManager_25(ITokenManager), function:getTokensInfo, arguments:['tokenAddress_1']  
High Call: getTokensInfo
Running querryfc
Written func info: TokenManager, getTokensInfo
[i]Type for TMP_217

Name: TMP_217 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: transferOverhead
Finance Type: undef
XXXX
baseGas_9(uint256) := ϕ(['baseGas_2', 'baseGas_1', 'baseGas_8', 'baseGas_9'])
Phi
[i]Type for baseGas

Name: baseGas Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tokenManager_26(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_25', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getAmountToTransfer
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_10(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_9', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulated_7(mapping(address => mapping(address => uint256))) := ϕ(['gasFeeAccumulated_16', 'gasFeeAccumulated_10', 'gasFeeAccumulated_22', 'gasFeeAccumulated_6'])
Phi
[i]Type for gasFeeAccumulated

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_53(uint256) -> TMP_217.transferOverhead
MEMBER
init
end
init
end
init
end
_______________

Name: TMP_217.transferOverhead Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: transferOverhead Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for REF_53

Name: TMP_217.transferOverhead Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: TMP_217, Field: transferOverhead
#################
Member: 
Name: TMP_217 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: transferOverhead
Finance Type: undef
Fieldf: 
Name: transferOverhead Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: TMP_217.transferOverhead Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: transferOverhead Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_218(uint256) = totalGasUsed_1 (c)+ REF_53
init
end
init
end
init
end
_______________

Name: TMP_217.transferOverhead Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_218 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_218

Name: TMP_218 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
totalGasUsed_2(uint256) := TMP_218(uint256)
asgn
init
end
_______________

Name: TMP_218 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: totalGasUsed Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for totalGasUsed

Name: totalGasUsed Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: totalGasUsed, Num: 3
Globalname: totalGasUsed
End popogation
TMP_219(uint256) = totalGasUsed_2 (c)+ baseGas_9
init
end
init
end
init
end
_______________

Name: baseGas Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_219 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_219

Name: TMP_219 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
totalGasUsed_3(uint256) := TMP_219(uint256)
asgn
init
end
_______________

Name: TMP_219 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: totalGasUsed Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for totalGasUsed

Name: totalGasUsed Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Source address: u
Name: tokenGasPrice, Num: 1
Globalname: tokenGasPrice
Name: gasFee, Num: 1
Globalname: gasFee
End popogation
TMP_220(uint256) = totalGasUsed_3 (c)* tokenGasPrice_1
testing mul...
init
end
init
end

Name: totalGasUsed Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: tokenGasPrice_1 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: totalGasUsed Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_220 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_220

Name: TMP_220 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
gasFee_1(uint256) := TMP_220(uint256)
asgn
init
end
_______________

Name: TMP_220 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: gasFee Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for gasFee

Name: gasFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
REF_54(uint256) -> gasFeeAccumulatedByToken_10[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_54

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_55(uint256) -> gasFeeAccumulatedByToken_10[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_55

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_221(uint256) = REF_55 (c)+ gasFee_1
init
end
init
end
init
end
_______________

Name: gasFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_221 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_221

Name: TMP_221 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_11(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_10'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_54 (->gasFeeAccumulatedByToken_11) := TMP_221(uint256)
asgn
init
end
_______________

Name: TMP_221 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: REF_54 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_54

Name: REF_54 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
Source address: u
Propogating parameters and globals to SSA variables...
End popogation

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
REF_56(mapping(address => uint256)) -> gasFeeAccumulated_7[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_56

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_222(address) = INTERNAL_CALL, LiquidityPool._msgSender()()
init
end
_______________

Name: PIC_33 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_222 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_222

Name: TMP_222 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_57(uint256) -> REF_56[TMP_222]
INDEX
Source address: u
[i]Type for REF_57

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_58(mapping(address => uint256)) -> gasFeeAccumulated_8[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_58

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_223(address) = INTERNAL_CALL, LiquidityPool._msgSender()()
init
end
_______________

Name: PIC_33 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_223 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_223

Name: TMP_223 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_59(uint256) -> REF_58[TMP_223]
INDEX
Source address: u
[i]Type for REF_59

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_224(uint256) = REF_59 (c)+ gasFee_1
init
end
init
end
init
end
_______________

Name: gasFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_224 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_224

Name: TMP_224 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulated_10(mapping(address => mapping(address => uint256))) := ϕ(['gasFeeAccumulated_7'])
Phi
[i]Type for gasFeeAccumulated

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_57 (->gasFeeAccumulated_10) := TMP_224(uint256)
asgn
init
end
_______________

Name: TMP_224 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: REF_57 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_57

Name: REF_57 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
Source address: u
Propogating parameters and globals to SSA variables...
Name: amountToTransfer, Num: 1
Globalname: amountToTransfer
End popogation
TMP_225(uint256) = transferFeeAmount_1 (c)+ gasFee_1
init
end
init
end
init
end
_______________

Name: gasFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_225 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_225

Name: TMP_225 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_226(uint256) = amount_1 (c)- TMP_225
init
end
init
end
init
end
_______________

Name: TMP_225 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_226 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_226

Name: TMP_226 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
amountToTransfer_1(uint256) := TMP_226(uint256)
asgn
init
end
_______________

Name: TMP_226 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amountToTransfer Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for amountToTransfer

Name: amountToTransfer Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Source address: u
Source address: u
[i]Type for TMP_179

Name: TMP_179 Function: sendFundsToUser
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_33(ILiquidityProviders) := ϕ(['liquidityProviders_40'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: sendFundsToUser
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
amountToTransfer_1(uint256) := TMP_179(uint256)
asgn
init
end
_______________

Name: TMP_179 Function: sendFundsToUser
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amountToTransfer Function: sendFundsToUser
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for amountToTransfer

Name: amountToTransfer Function: sendFundsToUser
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: amountToTransfer, Num: 1
Globalname: amountToTransfer
End popogation

Name: NATIVE Function: sendFundsToUser
Num: -1
Den: -1
Address: 3
Norm: 6
LF: NATIVE
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: sendFundsToUser
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid
HIGH_LEVEL_CALL, dest:liquidityProviders_33(ILiquidityProviders), function:decreaseCurrentLiquidity, arguments:['tokenAddress_1', 'amountToTransfer_1']  
High Call: decreaseCurrentLiquidity
NATIVE_18(address) := ϕ(['NATIVE_17', 'NATIVE_28', 'NATIVE_8', 'NATIVE_22', 'NATIVE_18', 'NATIVE_32'])
Phi
[i]Type for NATIVE

Name: NATIVE Function: sendFundsToUser
Num: -1
Den: -1
Address: 3
Norm: 6
LF: NATIVE
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_34(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_33', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: sendFundsToUser
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_181(bool) = tokenAddress_1 == NATIVE_18
[i]Type for TMP_181

Name: TMP_181 Function: sendFundsToUser
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: amountToTransfer, Num: 1
Globalname: amountToTransfer
End popogation
TMP_187 = CONVERT tokenAddress_1 to IERC20Upgradeable
Converting tokenAddress_1

Name: tokenAddress Function: None
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
init
end
_______________

Name: tokenAddress Function: None
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef

Name: TMP_187 Function: sendFundsToUser
Num: 
Den: 
Address: u
Norm: u
LF: ERC20Upgradeable
Value: u
Fields: 
Finance Type: undef
Source address: -982
ERC20Upgradeable
[i]Type for TMP_187

Name: TMP_187 Function: sendFundsToUser
Num: 
Den: 
Address: -982
Norm: 6
LF: ERC20Upgradeable
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_188 = CONVERT this to address
Converting this
5
[i]Type for TMP_188

Name: TMP_188 Function: sendFundsToUser
Num: 
Den: 
Address: 5
Norm: u
LF: LiquidityPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_189(uint256) = HIGH_LEVEL_CALL, dest:TMP_187(IERC20Upgradeable), function:balanceOf, arguments:['TMP_188']  
High Call: balanceOf
Running querryfc
Written func info: ERC20Upgradeable, balanceOf
Handling balance function!
-982
[i]Type for TMP_189

Name: TMP_189 Function: sendFundsToUser
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
TMP_190(bool) = TMP_189 >= amountToTransfer_1
init
end
init
end
lnorm: 6 rnorm: u
init
end
_______________

Name: TMP_189 Function: sendFundsToUser
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance

Name: TMP_190 Function: sendFundsToUser
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Source address: u
init
end
_______________

Name: TMP_189 Function: sendFundsToUser
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance

Name: amountToTransfer Function: sendFundsToUser
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_190

Name: TMP_190 Function: sendFundsToUser
Num: -982
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
TMP_191(None) = SOLIDITY_CALL require(bool,string)(TMP_190,Not Enough Balance)
[i]Type for TMP_191

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_192 = CONVERT tokenAddress_1 to IERC20Upgradeable
Converting tokenAddress_1

Name: tokenAddress Function: None
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
init
end
_______________

Name: tokenAddress Function: None
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef

Name: TMP_192 Function: sendFundsToUser
Num: 
Den: 
Address: u
Norm: u
LF: ERC20Upgradeable
Value: u
Fields: 
Finance Type: undef
Source address: -982
ERC20Upgradeable
[i]Type for TMP_192

Name: TMP_192 Function: sendFundsToUser
Num: 
Den: 
Address: -982
Norm: 6
LF: ERC20Upgradeable
Value: u
Fields: 
Finance Type: undef
XXXX
LIBRARY_CALL, dest:SafeERC20Upgradeable, function:SafeERC20Upgradeable.safeTransfer(IERC20Upgradeable,address,uint256), arguments:['TMP_192', 'receiver_1', 'amountToTransfer_1'] 
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Source address: u
Name: depositHash, Num: 1
Globalname: depositHash
Source address: u
Name: fromChainId, Num: 1
Globalname: fromChainId
End popogation
Propogating parameters and globals to SSA variables...
End popogation
TMP_182 = CONVERT this to address
Converting this
5
[i]Type for TMP_182

Name: TMP_182 Function: sendFundsToUser
Num: 
Den: 
Address: 5
Norm: u
LF: LiquidityPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_183(uint256) = SOLIDITY_CALL balance(address)(TMP_182)
[i]Type for TMP_183

Name: TMP_183 Function: None
Num: -982
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_184(bool) = TMP_183 >= amountToTransfer_1
init
end
init
end
lnorm: u rnorm: u
-982
-1
[i]Type for TMP_184

Name: TMP_184 Function: sendFundsToUser
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_185(None) = SOLIDITY_CALL require(bool,string)(TMP_184,Not Enough Balance)
[i]Type for TMP_185

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: success, Num: 1
Globalname: success
End popogation
TUPLE_1(bool,bytes) = LOW_LEVEL_CALL, dest:receiver_1, function:call, arguments:[''] value:amountToTransfer_1 
[i]Type for TUPLE_1

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
success_1(bool)= UNPACK TUPLE_1 index: 0 
Finding type for success(bool ... )
[i]Type for success

Name: success Function: sendFundsToUser
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: success, Num: 1
Globalname: success
End popogation
TMP_186(None) = SOLIDITY_CALL require(bool,string)(success_1,Native Transfer Failed)
[i]Type for TMP_186

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX


NATIVE_9(address) := ϕ(['NATIVE_28', 'NATIVE_0', 'NATIVE_8', 'NATIVE_22', 'NATIVE_18', 'NATIVE_32'])
tokenManager_13(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_0', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
liquidityProviders_25(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
MODIFIER_CALL, ReentrancyGuardUpgradeable.nonReentrant()()
MODIFIER_CALL, LiquidityPool.onlyExecutor()()
MODIFIER_CALL, LiquidityPool.tokenChecks(address)(tokenAddress_1)
tokenManager_16(ITokenManager) := ϕ(['tokenManager_33'])
MODIFIER_CALL, PausableUpgradeable.whenNotPaused()()
TMP_167(uint256) = SOLIDITY_CALL gasleft()()
initialGas_1(uint256) := TMP_167(uint256)
TMP_168(ITokenManager.TokenConfig) = HIGH_LEVEL_CALL, dest:tokenManager_17(ITokenManager), function:getTransferConfig, arguments:['tokenAddress_1']  
NATIVE_14(address) := ϕ(['NATIVE_28', 'NATIVE_8', 'NATIVE_13', 'NATIVE_22', 'NATIVE_18', 'NATIVE_32'])
tokenManager_18(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_17', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
liquidityProviders_30(ILiquidityProviders) := ϕ(['liquidityProviders_29', 'liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
REF_35(uint256) -> TMP_168.min
TMP_169(bool) = REF_35 <= amount_1
TMP_170(ITokenManager.TokenConfig) = HIGH_LEVEL_CALL, dest:tokenManager_18(ITokenManager), function:getTransferConfig, arguments:['tokenAddress_1']  
NATIVE_15(address) := ϕ(['NATIVE_14', 'NATIVE_28', 'NATIVE_8', 'NATIVE_22', 'NATIVE_18', 'NATIVE_32'])
tokenManager_19(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_18', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
liquidityProviders_31(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_30', 'liquidityProviders_40', 'liquidityProviders_1'])
REF_37(uint256) -> TMP_170.max
TMP_171(bool) = REF_37 >= amount_1
TMP_172(bool) = TMP_169 && TMP_171
TMP_173(None) = SOLIDITY_CALL require(bool,string)(TMP_172,Withdraw amnt not in Cap limits)
TMP_174 = CONVERT 0 to address
TMP_175(bool) = receiver_1 != TMP_174
TMP_176(None) = SOLIDITY_CALL require(bool,string)(TMP_175,Bad receiver address)
TUPLE_0(bytes32,bool) = INTERNAL_CALL, LiquidityPool.checkHashStatus(address,uint256,address,bytes)(tokenAddress_1,amount_1,receiver_1,depositHash_1)
hashSendTransaction_1(bytes32)= UNPACK TUPLE_0 index: 0 
status_1(bool)= UNPACK TUPLE_0 index: 1 
TMP_177 = ! status_1 
TMP_178(None) = SOLIDITY_CALL require(bool,string)(TMP_177,Already Processed)
REF_38(bool) -> processedHash_0[hashSendTransaction_1]
processedHash_1(mapping(bytes32 => bool)) := ϕ(['processedHash_0'])
REF_38 (->processedHash_1) := True(bool)
TMP_179(uint256) = INTERNAL_CALL, LiquidityPool.getAmountToTransfer(uint256,address,uint256,uint256)(initialGas_1,tokenAddress_1,amount_1,tokenGasPrice_1)
liquidityProviders_33(ILiquidityProviders) := ϕ(['liquidityProviders_40'])
amountToTransfer_1(uint256) := TMP_179(uint256)
HIGH_LEVEL_CALL, dest:liquidityProviders_33(ILiquidityProviders), function:decreaseCurrentLiquidity, arguments:['tokenAddress_1', 'amountToTransfer_1']  
NATIVE_18(address) := ϕ(['NATIVE_17', 'NATIVE_28', 'NATIVE_8', 'NATIVE_22', 'NATIVE_18', 'NATIVE_32'])
liquidityProviders_34(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_33', 'liquidityProviders_40', 'liquidityProviders_1'])
TMP_181(bool) = tokenAddress_1 == NATIVE_18
CONDITION TMP_181
TMP_187 = CONVERT tokenAddress_1 to IERC20Upgradeable
TMP_188 = CONVERT this to address
TMP_189(uint256) = HIGH_LEVEL_CALL, dest:TMP_187(IERC20Upgradeable), function:balanceOf, arguments:['TMP_188']  
TMP_190(bool) = TMP_189 >= amountToTransfer_1
TMP_191(None) = SOLIDITY_CALL require(bool,string)(TMP_190,Not Enough Balance)
TMP_192 = CONVERT tokenAddress_1 to IERC20Upgradeable
LIBRARY_CALL, dest:SafeERC20Upgradeable, function:SafeERC20Upgradeable.safeTransfer(IERC20Upgradeable,address,uint256), arguments:['TMP_192', 'receiver_1', 'amountToTransfer_1'] 
Emit AssetSent(tokenAddress_1,amount_1,amountToTransfer_1,receiver_1,depositHash_1,fromChainId_1)
TMP_182 = CONVERT this to address
TMP_183(uint256) = SOLIDITY_CALL balance(address)(TMP_182)
TMP_184(bool) = TMP_183 >= amountToTransfer_1
TMP_185(None) = SOLIDITY_CALL require(bool,string)(TMP_184,Not Enough Balance)
TUPLE_1(bool,bytes) = LOW_LEVEL_CALL, dest:receiver_1, function:call, arguments:[''] value:amountToTransfer_1 
success_1(bool)= UNPACK TUPLE_1 index: 0 
TMP_186(None) = SOLIDITY_CALL require(bool,string)(success_1,Native Transfer Failed)


Propogating parameters and globals to SSA variables...
End popogation

Name: NATIVE Function: sendFundsToUser
Num: -1
Den: -1
Address: 3
Norm: 6
LF: NATIVE
Value: u
Fields: 
Finance Type: undef
Phid

Name: tokenManager Function: sendFundsToUser
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: sendFundsToUser
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid
NATIVE_9(address) := ϕ(['NATIVE_28', 'NATIVE_0', 'NATIVE_8', 'NATIVE_22', 'NATIVE_18', 'NATIVE_32'])
Phi
[i]Type for NATIVE

Name: NATIVE Function: sendFundsToUser
Num: -1
Den: -1
Address: 3
Norm: 6
LF: NATIVE
Value: u
Fields: 
Finance Type: undef
XXXX
tokenManager_13(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_0', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: sendFundsToUser
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_25(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: sendFundsToUser
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, ReentrancyGuardUpgradeable.nonReentrant()()
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, LiquidityPool.onlyExecutor()()
Propogating parameters and globals to SSA variables...
End popogation

Name: tokenManager Function: sendFundsToUser
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid
MODIFIER_CALL, LiquidityPool.tokenChecks(address)(tokenAddress_1)
init
end
[[], [], 6, 'tokenAddress', [], -1, -982, 'u']

Name: tokenAddress Function: None
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
Source address: -982

Name: tokenAddress_1 Function: tokenChecks
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
Phid

Name: tokenManager Function: tokenChecks
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid
tokenAddress_1(address) := ϕ(['tokenAddress_1', 'tokenAddress_1'])
Phi
[i]Type for tokenAddress

Name: tokenAddress Function: tokenChecks
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
XXXX
tokenManager_32(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_0', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: tokenChecks
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_319 = CONVERT 0 to address
Converting 0

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
_______________

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_319 Function: tokenChecks
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_319

Name: TMP_319 Function: tokenChecks
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_320(bool) = tokenAddress_1 != TMP_319
[i]Type for TMP_320

Name: TMP_320 Function: tokenChecks
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_321(None) = SOLIDITY_CALL require(bool,string)(TMP_320,Token address cannot be 0)
[i]Type for TMP_321

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation

Name: tokenManager Function: tokenChecks
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid
TMP_322(ITokenManager.TokenInfo) = HIGH_LEVEL_CALL, dest:tokenManager_32(ITokenManager), function:getTokensInfo, arguments:['tokenAddress_1']  
High Call: getTokensInfo
Running querryfc
Written func info: TokenManager, getTokensInfo
[i]Type for TMP_322

Name: TMP_322 Function: tokenChecks
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: supportedToken
Finance Type: undef
XXXX
tokenManager_33(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_7', 'tokenManager_1', 'tokenManager_32', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: tokenChecks
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
REF_88(bool) -> TMP_322.supportedToken
MEMBER
init
end
init
end
init
end
_______________

Name: TMP_322.supportedToken Function: tokenChecks
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: supportedToken Function: tokenChecks
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for REF_88

Name: TMP_322.supportedToken Function: tokenChecks
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: TMP_322, Field: supportedToken
#################
Member: 
Name: TMP_322 Function: tokenChecks
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: supportedToken
Finance Type: undef
Fieldf: 
Name: supportedToken Function: tokenChecks
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: TMP_322.supportedToken Function: tokenChecks
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: supportedToken Function: tokenChecks
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_323(None) = SOLIDITY_CALL require(bool,string)(REF_88,Token not supported)
[i]Type for TMP_323

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Source address: -982

Name: tokenAddress_1 Function: tokenChecks
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
Phid

Name: tokenManager Function: tokenChecks
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid
tokenAddress_1(address) := ϕ(['tokenAddress_1', 'tokenAddress_1'])
Phi
[i]Type for tokenAddress

Name: tokenAddress Function: tokenChecks
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
XXXX
tokenManager_32(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_0', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: tokenChecks
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_319 = CONVERT 0 to address
Converting 0

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
_______________

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_319 Function: tokenChecks
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_319

Name: TMP_319 Function: tokenChecks
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_320(bool) = tokenAddress_1 != TMP_319
[i]Type for TMP_320

Name: TMP_320 Function: tokenChecks
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_321(None) = SOLIDITY_CALL require(bool,string)(TMP_320,Token address cannot be 0)
[i]Type for TMP_321

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation

Name: tokenManager Function: tokenChecks
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid
TMP_322(ITokenManager.TokenInfo) = HIGH_LEVEL_CALL, dest:tokenManager_32(ITokenManager), function:getTokensInfo, arguments:['tokenAddress_1']  
High Call: getTokensInfo
Running querryfc
Written func info: TokenManager, getTokensInfo
[i]Type for TMP_322

Name: TMP_322 Function: tokenChecks
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: supportedToken
Finance Type: undef
XXXX
tokenManager_33(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_7', 'tokenManager_1', 'tokenManager_32', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: tokenChecks
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
REF_88(bool) -> TMP_322.supportedToken
MEMBER
init
end
init
end
init
end
_______________

Name: TMP_322.supportedToken Function: tokenChecks
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: supportedToken Function: tokenChecks
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for REF_88

Name: TMP_322.supportedToken Function: tokenChecks
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: TMP_322, Field: supportedToken
#################
Member: 
Name: TMP_322 Function: tokenChecks
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: supportedToken
Finance Type: undef
Fieldf: 
Name: supportedToken Function: tokenChecks
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: TMP_322.supportedToken Function: tokenChecks
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: supportedToken Function: tokenChecks
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_323(None) = SOLIDITY_CALL require(bool,string)(REF_88,Token not supported)
[i]Type for TMP_323

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
tokenManager_16(ITokenManager) := ϕ(['tokenManager_33'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: sendFundsToUser
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, PausableUpgradeable.whenNotPaused()()
Propogating parameters and globals to SSA variables...
Name: initialGas, Num: 1
Globalname: initialGas
End popogation
TMP_167(uint256) = SOLIDITY_CALL gasleft()()
[i]Type for TMP_167

Name: TMP_167 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
initialGas_1(uint256) := TMP_167(uint256)
asgn
init
end
_______________

Name: TMP_167 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: initialGas Function: sendFundsToUser
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for initialGas

Name: initialGas Function: sendFundsToUser
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation

Name: NATIVE Function: sendFundsToUser
Num: -1
Den: -1
Address: 3
Norm: 6
LF: NATIVE
Value: u
Fields: 
Finance Type: undef
Phid

Name: tokenManager Function: sendFundsToUser
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: sendFundsToUser
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: NATIVE Function: sendFundsToUser
Num: -1
Den: -1
Address: 3
Norm: 6
LF: NATIVE
Value: u
Fields: 
Finance Type: undef
Phid

Name: tokenManager Function: sendFundsToUser
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: sendFundsToUser
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid
TMP_168(ITokenManager.TokenConfig) = HIGH_LEVEL_CALL, dest:tokenManager_17(ITokenManager), function:getTransferConfig, arguments:['tokenAddress_1']  
High Call: getTransferConfig
Running querryfc
Written func info: TokenManager, getTransferConfig
[i]Type for TMP_168

Name: TMP_168 Function: sendFundsToUser
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: min
Finance Type: undef
XXXX
NATIVE_14(address) := ϕ(['NATIVE_28', 'NATIVE_8', 'NATIVE_13', 'NATIVE_22', 'NATIVE_18', 'NATIVE_32'])
Phi
[i]Type for NATIVE

Name: NATIVE Function: sendFundsToUser
Num: -1
Den: -1
Address: 3
Norm: 6
LF: NATIVE
Value: u
Fields: 
Finance Type: undef
XXXX
tokenManager_18(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_17', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: sendFundsToUser
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_30(ILiquidityProviders) := ϕ(['liquidityProviders_29', 'liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: sendFundsToUser
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
REF_35(uint256) -> TMP_168.min
MEMBER
init
end
init
end
init
end
_______________

Name: TMP_168.min Function: sendFundsToUser
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: min Function: sendFundsToUser
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for REF_35

Name: TMP_168.min Function: sendFundsToUser
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: TMP_168, Field: min
#################
Member: 
Name: TMP_168 Function: sendFundsToUser
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: min
Finance Type: undef
Fieldf: 
Name: min Function: sendFundsToUser
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: TMP_168.min Function: sendFundsToUser
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: min Function: sendFundsToUser
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_169(bool) = REF_35 <= amount_1
init
end
init
end
lnorm: u rnorm: u
[i]Type for TMP_169

Name: TMP_169 Function: sendFundsToUser
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_170(ITokenManager.TokenConfig) = HIGH_LEVEL_CALL, dest:tokenManager_18(ITokenManager), function:getTransferConfig, arguments:['tokenAddress_1']  
High Call: getTransferConfig
Running querryfc
Written func info: TokenManager, getTransferConfig
[i]Type for TMP_170

Name: TMP_170 Function: sendFundsToUser
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: max
Finance Type: undef
XXXX
NATIVE_15(address) := ϕ(['NATIVE_14', 'NATIVE_28', 'NATIVE_8', 'NATIVE_22', 'NATIVE_18', 'NATIVE_32'])
Phi
[i]Type for NATIVE

Name: NATIVE Function: sendFundsToUser
Num: -1
Den: -1
Address: 3
Norm: 6
LF: NATIVE
Value: u
Fields: 
Finance Type: undef
XXXX
tokenManager_19(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_18', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: sendFundsToUser
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_31(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_30', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: sendFundsToUser
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
REF_37(uint256) -> TMP_170.max
MEMBER
init
end
init
end
init
end
_______________

Name: TMP_170.max Function: sendFundsToUser
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: max Function: sendFundsToUser
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for REF_37

Name: TMP_170.max Function: sendFundsToUser
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: TMP_170, Field: max
#################
Member: 
Name: TMP_170 Function: sendFundsToUser
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: max
Finance Type: undef
Fieldf: 
Name: max Function: sendFundsToUser
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: TMP_170.max Function: sendFundsToUser
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: max Function: sendFundsToUser
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_171(bool) = REF_37 >= amount_1
init
end
init
end
lnorm: u rnorm: u
[i]Type for TMP_171

Name: TMP_171 Function: sendFundsToUser
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_172(bool) = TMP_169 && TMP_171
[i]Type for TMP_172

Name: TMP_172 Function: sendFundsToUser
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_173(None) = SOLIDITY_CALL require(bool,string)(TMP_172,Withdraw amnt not in Cap limits)
[i]Type for TMP_173

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_174 = CONVERT 0 to address
Converting 0

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
_______________

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_174 Function: sendFundsToUser
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_174

Name: TMP_174 Function: sendFundsToUser
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_175(bool) = receiver_1 != TMP_174
[i]Type for TMP_175

Name: TMP_175 Function: sendFundsToUser
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_176(None) = SOLIDITY_CALL require(bool,string)(TMP_175,Bad receiver address)
[i]Type for TMP_176

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Source address: u
Name: depositHash, Num: 1
Globalname: depositHash
Name: hashSendTransaction, Num: 1
Globalname: hashSendTransaction
End popogation
TUPLE_0(bytes32,bool) = INTERNAL_CALL, LiquidityPool.checkHashStatus(address,uint256,address,bytes)(tokenAddress_1,amount_1,receiver_1,depositHash_1)
init
end
init
end
init
end
init
end
[[], [], 6, 'tokenAddress', [], -1, -982, 'u']

Name: tokenAddress Function: None
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[], [], 0, 'receiver', [], -1, -981, 'u']

Name: receiver Function: None
Num: 
Den: 
Address: -981
Norm: 0
LF: receiver
Value: u
Fields: 
Finance Type: undef
[[], [], 'u', None, [], -1, 'u', 'u']

Name: depositHash Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
Source address: -982

Name: tokenAddress_1 Function: checkHashStatus
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
Phid
Source address: u

Name: amount_1 Function: checkHashStatus
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Source address: -981

Name: receiver_1 Function: checkHashStatus
Num: 
Den: 
Address: -981
Norm: 0
LF: receiver
Value: u
Fields: 
Finance Type: undef
Phid
Source address: u
Name: depositHash, Num: 1
Globalname: depositHash

Name: depositHash_1 Function: checkHashStatus
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: processedHash Function: checkHashStatus
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
tokenAddress_1(address) := ϕ(['tokenAddress_1'])
Phi
[i]Type for tokenAddress

Name: tokenAddress Function: checkHashStatus
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount_1'])
Phi
[i]Type for amount

Name: amount Function: checkHashStatus
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
receiver_1(address) := ϕ(['receiver_1'])
Phi
[i]Type for receiver

Name: receiver Function: checkHashStatus
Num: 
Den: 
Address: -981
Norm: 0
LF: receiver
Value: u
Fields: 
Finance Type: undef
XXXX
depositHash_1(bytes) := ϕ(['depositHash_1'])
Phi

Name: depositHash Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for depositHash

Name: depositHash Function: checkHashStatus
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
processedHash_2(mapping(bytes32 => bool)) := ϕ(['processedHash_0', 'processedHash_2', 'processedHash_1'])
Phi
[i]Type for processedHash

Name: processedHash Function: checkHashStatus
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Source address: u
Name: depositHash, Num: 1
Globalname: depositHash
Name: hashSendTransaction, Num: 1
Globalname: hashSendTransaction
End popogation
TMP_241(bytes32) = SOLIDITY_CALL keccak256(bytes)(depositHash_1)
[i]Type for TMP_241

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_242(bytes) = SOLIDITY_CALL abi.encode()(tokenAddress_1,amount_1,receiver_1,TMP_241)
[i]Type for TMP_242

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_243(bytes32) = SOLIDITY_CALL keccak256(bytes)(TMP_242)
[i]Type for TMP_243

Name: TMP_243 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
hashSendTransaction_1(bytes32) := TMP_243(bytes32)
asgn
init
end
_______________

Name: TMP_243 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: hashSendTransaction Function: checkHashStatus
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for hashSendTransaction

Name: hashSendTransaction Function: checkHashStatus
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: hashSendTransaction, Num: 1
Globalname: hashSendTransaction
Name: status, Num: 1
Globalname: status
End popogation
REF_66(bool) -> processedHash_2[hashSendTransaction_1]
INDEX
[i]Type for REF_66

Name: processedHash Function: checkHashStatus
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
status_1(bool) := REF_66(bool)
asgn
init
end
_______________

Name: processedHash Function: checkHashStatus
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: status Function: checkHashStatus
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for status

Name: status Function: checkHashStatus
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: hashSendTransaction, Num: 1
Globalname: hashSendTransaction
End popogation
RETURN hashSendTransaction_1,status_1
RETURN
init
end

Name: hashSendTransaction Function: checkHashStatus
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
init
end

Name: status Function: checkHashStatus
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
Source address: -982

Name: tokenAddress_1 Function: checkHashStatus
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
Phid
Source address: u

Name: amount_1 Function: checkHashStatus
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Source address: -981

Name: receiver_1 Function: checkHashStatus
Num: 
Den: 
Address: -981
Norm: 0
LF: receiver
Value: u
Fields: 
Finance Type: undef
Phid
Source address: u
Name: depositHash, Num: 1
Globalname: depositHash

Name: depositHash_1 Function: checkHashStatus
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: processedHash Function: checkHashStatus
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
tokenAddress_1(address) := ϕ(['tokenAddress_1'])
Phi
[i]Type for tokenAddress

Name: tokenAddress Function: checkHashStatus
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount_1'])
Phi
[i]Type for amount

Name: amount Function: checkHashStatus
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
receiver_1(address) := ϕ(['receiver_1'])
Phi
[i]Type for receiver

Name: receiver Function: checkHashStatus
Num: 
Den: 
Address: -981
Norm: 0
LF: receiver
Value: u
Fields: 
Finance Type: undef
XXXX
depositHash_1(bytes) := ϕ(['depositHash_1'])
Phi

Name: depositHash Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for depositHash

Name: depositHash Function: checkHashStatus
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
processedHash_2(mapping(bytes32 => bool)) := ϕ(['processedHash_0', 'processedHash_2', 'processedHash_1'])
Phi
[i]Type for processedHash

Name: processedHash Function: checkHashStatus
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Source address: u
Name: depositHash, Num: 1
Globalname: depositHash
Name: hashSendTransaction, Num: 1
Globalname: hashSendTransaction
End popogation
TMP_241(bytes32) = SOLIDITY_CALL keccak256(bytes)(depositHash_1)
[i]Type for TMP_241

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_242(bytes) = SOLIDITY_CALL abi.encode()(tokenAddress_1,amount_1,receiver_1,TMP_241)
[i]Type for TMP_242

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_243(bytes32) = SOLIDITY_CALL keccak256(bytes)(TMP_242)
[i]Type for TMP_243

Name: TMP_243 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
hashSendTransaction_1(bytes32) := TMP_243(bytes32)
asgn
init
end
_______________

Name: TMP_243 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: hashSendTransaction Function: checkHashStatus
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for hashSendTransaction

Name: hashSendTransaction Function: checkHashStatus
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: hashSendTransaction, Num: 1
Globalname: hashSendTransaction
Name: status, Num: 1
Globalname: status
End popogation
REF_66(bool) -> processedHash_2[hashSendTransaction_1]
INDEX
[i]Type for REF_66

Name: processedHash Function: checkHashStatus
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
status_1(bool) := REF_66(bool)
asgn
init
end
_______________

Name: processedHash Function: checkHashStatus
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: status Function: checkHashStatus
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for status

Name: status Function: checkHashStatus
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: hashSendTransaction, Num: 1
Globalname: hashSendTransaction
End popogation
RETURN hashSendTransaction_1,status_1
RETURN
init
end

Name: hashSendTransaction Function: checkHashStatus
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
init
end

Name: status Function: checkHashStatus
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TUPLE_0

Name: TUPLE_0 Function: sendFundsToUser
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
hashSendTransaction_1(bytes32)= UNPACK TUPLE_0 index: 0 
([], [], 'u', 'u', 'u', -1)
[i]Type for hashSendTransaction

Name: hashSendTransaction Function: sendFundsToUser
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
status_1(bool)= UNPACK TUPLE_0 index: 1 
([-1], [-1], 'u', 'u', 'u', -1)
[i]Type for status

Name: status Function: sendFundsToUser
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_177 = ! status_1 
[i]Type for TMP_177

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_178(None) = SOLIDITY_CALL require(bool,string)(TMP_177,Already Processed)
[i]Type for TMP_178

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: hashSendTransaction, Num: 1
Globalname: hashSendTransaction
End popogation

Name: processedHash Function: sendFundsToUser
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
REF_38(bool) -> processedHash_0[hashSendTransaction_1]
INDEX
[i]Type for REF_38

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: True
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
processedHash_1(mapping(bytes32 => bool)) := ϕ(['processedHash_0'])
Phi
[i]Type for processedHash

Name: processedHash Function: sendFundsToUser
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_38 (->processedHash_1) := True(bool)
asgn
init
end
_______________

Name: True Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef

Name: REF_38 Function: sendFundsToUser
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: True
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_38

Name: REF_38 Function: sendFundsToUser
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: True
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
Source address: u
Propogating parameters and globals to SSA variables...
Name: initialGas, Num: 1
Globalname: initialGas
Source address: u
Name: tokenGasPrice, Num: 1
Globalname: tokenGasPrice
End popogation

Name: liquidityProviders Function: sendFundsToUser
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid
TMP_179(uint256) = INTERNAL_CALL, LiquidityPool.getAmountToTransfer(uint256,address,uint256,uint256)(initialGas_1,tokenAddress_1,amount_1,tokenGasPrice_1)
init
end
init
end
init
end
init
end
[[], [], 'u', None, [], -1, 'u', 'u']

Name: initialGas Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[], [], 6, 'tokenAddress', [], -1, -982, 'u']

Name: tokenAddress Function: None
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[], [], 'u', None, [], -1, 'u', 'u']

Name: tokenGasPrice Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
Source address: u
Name: initialGas, Num: 1
Globalname: initialGas

Name: initialGas_1 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Source address: -982

Name: tokenAddress_1 Function: getAmountToTransfer
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
Phid
Source address: u

Name: amount_1 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Source address: u
Name: tokenGasPrice, Num: 1
Globalname: tokenGasPrice

Name: tokenGasPrice_1 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: BASE_DIVISOR Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: baseGas Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: tokenManager Function: getAmountToTransfer
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getAmountToTransfer
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
initialGas_1(uint256) := ϕ(['initialGas_1'])
Phi

Name: initialGas Function: sendFundsToUser
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for initialGas

Name: initialGas Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tokenAddress_1(address) := ϕ(['tokenAddress_1'])
Phi
[i]Type for tokenAddress

Name: tokenAddress Function: getAmountToTransfer
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount_1'])
Phi
[i]Type for amount

Name: amount Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tokenGasPrice_1(uint256) := ϕ(['tokenGasPrice_1'])
Phi

Name: tokenGasPrice Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for tokenGasPrice

Name: tokenGasPrice Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
BASE_DIVISOR_1(uint256) := ϕ(['BASE_DIVISOR_3', 'BASE_DIVISOR_5', 'BASE_DIVISOR_0'])
Phi
[i]Type for BASE_DIVISOR

Name: BASE_DIVISOR Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
baseGas_3(uint256) := ϕ(['baseGas_2', 'baseGas_1', 'baseGas_0', 'baseGas_9'])
Phi
[i]Type for baseGas

Name: baseGas Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tokenManager_20(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_0', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getAmountToTransfer
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_35(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getAmountToTransfer
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_4(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_0', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulated_1(mapping(address => mapping(address => uint256))) := ϕ(['gasFeeAccumulated_0', 'gasFeeAccumulated_10', 'gasFeeAccumulated_16', 'gasFeeAccumulated_22'])
Phi
[i]Type for gasFeeAccumulated

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_23(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_0'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: transferFeePerc, Num: 1
Globalname: transferFeePerc
End popogation

Name: tokenManager Function: getAmountToTransfer
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getAmountToTransfer
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid
TMP_199(uint256) = INTERNAL_CALL, LiquidityPool.getTransferFee(address,uint256)(tokenAddress_1,amount_1)
init
end
init
end
[[], [], 6, 'tokenAddress', [], -1, -982, 'u']

Name: tokenAddress Function: None
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
Source address: -982

Name: tokenAddress_1 Function: getTransferFee
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
Phid
Source address: u

Name: amount_1 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getTransferFee
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid
tokenAddress_1(address) := ϕ(['tokenAddress_1'])
Phi
[i]Type for tokenAddress

Name: tokenAddress Function: getTransferFee
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount_1'])
Phi
[i]Type for amount

Name: amount Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tokenManager_27(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_0', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_41(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getTransferFee
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: currentLiquidity, Num: 1
Globalname: currentLiquidity
End popogation

Name: liquidityProviders Function: getTransferFee
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid
TMP_228(uint256) = INTERNAL_CALL, LiquidityPool.getCurrentLiquidity(address)(tokenAddress_1)
init
end
[[], [], 6, 'tokenAddress', [], -1, -982, 'u']

Name: tokenAddress Function: getCurrentLiquidity
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
Source address: -982

Name: tokenAddress_1 Function: getCurrentLiquidity
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
tokenAddress_1(address) := ϕ(['tokenAddress_1', 'tokenAddress_1'])
Phi
[i]Type for tokenAddress

Name: tokenAddress Function: getCurrentLiquidity
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_3(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_1(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_0', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_1(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_0'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: liquidityPoolBalance, Num: 1
Globalname: liquidityPoolBalance
End popogation

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_99(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_3(ILiquidityProviders), function:getCurrentLiquidity, arguments:['tokenAddress_1']  
High Call: getCurrentLiquidity
Running querryfc
Written func info: LiquidityProviders, getCurrentLiquidity
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-982], [-1], 6, "'u'", 'u', -1)
[i]Type for TMP_99

Name: TMP_99 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
liquidityProviders_4(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_3', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_2(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_1', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_2(mapping(address => uint256)) := ϕ(['incentivePool_1', 'incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityPoolBalance_1(uint256) := TMP_99(uint256)
asgn
init
end
_______________

Name: TMP_99 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for liquidityPoolBalance

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: currentLiquidity, Num: 1
Globalname: currentLiquidity
End popogation

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_100(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_4(ILiquidityProviders), function:totalLPFees, arguments:['tokenAddress_1']  
High Call: totalLPFees
Running querryfc
Written func info: LiquidityProviders, totalLPFees
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-982], [-1], 6, "'u'", 'u', -1)
[i]Type for TMP_100

Name: TMP_100 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
liquidityProviders_5(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_4', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_3(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_2', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_3(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_2', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_101(uint256) = liquidityPoolBalance_1 (c)- TMP_100
init
end
init
end
-982
-1
lnorm: 6 rnorm: 6
init
end
_______________

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_101 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_101

Name: TMP_101 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_2(uint256) -> gasFeeAccumulatedByToken_3[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_2

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_102(uint256) = TMP_101 (c)- REF_2
init
end
init
end
init
end
_______________

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_102 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_102

Name: TMP_102 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_3(uint256) -> incentivePool_3[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_3

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_103(uint256) = TMP_102 (c)- REF_3
init
end
init
end
init
end
_______________

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_103 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_103

Name: TMP_103 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
currentLiquidity_1(uint256) := TMP_103(uint256)
asgn
init
end
_______________

Name: TMP_103 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: currentLiquidity Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for currentLiquidity

Name: currentLiquidity Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Source address: -982

Name: tokenAddress_1 Function: getCurrentLiquidity
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
tokenAddress_1(address) := ϕ(['tokenAddress_1', 'tokenAddress_1'])
Phi
[i]Type for tokenAddress

Name: tokenAddress Function: getCurrentLiquidity
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_3(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_1(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_0', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_1(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_0'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: liquidityPoolBalance, Num: 1
Globalname: liquidityPoolBalance
End popogation

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_99(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_3(ILiquidityProviders), function:getCurrentLiquidity, arguments:['tokenAddress_1']  
High Call: getCurrentLiquidity
Running querryfc
Written func info: LiquidityProviders, getCurrentLiquidity
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-982], [-1], 6, "'u'", 'u', -1)
[i]Type for TMP_99

Name: TMP_99 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
liquidityProviders_4(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_3', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_2(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_1', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_2(mapping(address => uint256)) := ϕ(['incentivePool_1', 'incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityPoolBalance_1(uint256) := TMP_99(uint256)
asgn
init
end
_______________

Name: TMP_99 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for liquidityPoolBalance

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: currentLiquidity, Num: 1
Globalname: currentLiquidity
End popogation

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_100(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_4(ILiquidityProviders), function:totalLPFees, arguments:['tokenAddress_1']  
High Call: totalLPFees
Running querryfc
Written func info: LiquidityProviders, totalLPFees
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-982], [-1], 6, "'u'", 'u', -1)
[i]Type for TMP_100

Name: TMP_100 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
liquidityProviders_5(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_4', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_3(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_2', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_3(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_2', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_101(uint256) = liquidityPoolBalance_1 (c)- TMP_100
init
end
init
end
-982
-1
lnorm: 6 rnorm: 6
init
end
_______________

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_101 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_101

Name: TMP_101 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_2(uint256) -> gasFeeAccumulatedByToken_3[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_2

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_102(uint256) = TMP_101 (c)- REF_2
init
end
init
end
init
end
_______________

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_102 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_102

Name: TMP_102 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_3(uint256) -> incentivePool_3[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_3

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_103(uint256) = TMP_102 (c)- REF_3
init
end
init
end
init
end
_______________

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_103 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_103

Name: TMP_103 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
currentLiquidity_1(uint256) := TMP_103(uint256)
asgn
init
end
_______________

Name: TMP_103 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: currentLiquidity Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for currentLiquidity

Name: currentLiquidity Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_228

Name: TMP_228 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_42(ILiquidityProviders) := ϕ(['liquidityProviders_5'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getTransferFee
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
currentLiquidity_1(uint256) := TMP_228(uint256)
asgn
init
end
_______________

Name: TMP_228 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: currentLiquidity Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for currentLiquidity

Name: currentLiquidity Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: providedLiquidity, Num: 1
Globalname: providedLiquidity
End popogation

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getTransferFee
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid
TMP_229(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_42(ILiquidityProviders), function:getSuppliedLiquidityByToken, arguments:['tokenAddress_1']  
High Call: getSuppliedLiquidityByToken
Running querryfc
Written func info: LiquidityProviders, getSuppliedLiquidityByToken
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-982], [-1], 6, "'u'", 'u', -1)
[i]Type for TMP_229

Name: TMP_229 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
tokenManager_29(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_28', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_43(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_42', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getTransferFee
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
providedLiquidity_1(uint256) := TMP_229(uint256)
asgn
init
end
_______________

Name: TMP_229 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: providedLiquidity Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for providedLiquidity

Name: providedLiquidity Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: currentLiquidity, Num: 1
Globalname: currentLiquidity
Name: resultingLiquidity, Num: 1
Globalname: resultingLiquidity
End popogation
TMP_230(uint256) = currentLiquidity_1 (c)- amount_1
init
end
init
end
init
end
_______________

Name: amount Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_230 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_230

Name: TMP_230 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
resultingLiquidity_1(uint256) := TMP_230(uint256)
asgn
init
end
_______________

Name: TMP_230 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: resultingLiquidity Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for resultingLiquidity

Name: resultingLiquidity Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: equilibriumFee, Num: 1
Globalname: equilibriumFee
End popogation

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid
TMP_231(ITokenManager.TokenInfo) = HIGH_LEVEL_CALL, dest:tokenManager_29(ITokenManager), function:getTokensInfo, arguments:['tokenAddress_1']  
High Call: getTokensInfo
Running querryfc
Written func info: TokenManager, getTokensInfo
[i]Type for TMP_231

Name: TMP_231 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: equilibriumFee
Finance Type: undef
XXXX
tokenManager_30(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_29', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
REF_62(uint256) -> TMP_231.equilibriumFee
MEMBER
init
end
init
end
init
end
_______________

Name: TMP_231.equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for REF_62

Name: TMP_231.equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: TMP_231, Field: equilibriumFee
#################
Member: 
Name: TMP_231 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: equilibriumFee
Finance Type: undef
Fieldf: 
Name: equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: TMP_231.equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
equilibriumFee_1(uint256) := REF_62(uint256)
asgn
init
end
_______________

Name: TMP_231.equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: equilibriumFee Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for equilibriumFee

Name: equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: maxFee, Num: 1
Globalname: maxFee
End popogation

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid
TMP_232(ITokenManager.TokenInfo) = HIGH_LEVEL_CALL, dest:tokenManager_30(ITokenManager), function:getTokensInfo, arguments:['tokenAddress_1']  
High Call: getTokensInfo
Running querryfc
Written func info: TokenManager, getTokensInfo
[i]Type for TMP_232

Name: TMP_232 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: maxFee
Finance Type: undef
XXXX
tokenManager_31(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_30', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
REF_64(uint256) -> TMP_232.maxFee
MEMBER
init
end
init
end
init
end
_______________

Name: TMP_232.maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for REF_64

Name: TMP_232.maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: TMP_232, Field: maxFee
#################
Member: 
Name: TMP_232 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: maxFee
Finance Type: undef
Fieldf: 
Name: maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: TMP_232.maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
maxFee_1(uint256) := REF_64(uint256)
asgn
init
end
_______________

Name: TMP_232.maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: maxFee Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for maxFee

Name: maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: numerator, Num: 1
Globalname: numerator
End popogation
TMP_233(uint256) = providedLiquidity_1 (c)* equilibriumFee_1
testing mul...
init
end
init
end

Name: providedLiquidity Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: 6 rnorm: u
init
end
_______________

Name: providedLiquidity Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_233 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_233

Name: TMP_233 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_234(uint256) = TMP_233 (c)* maxFee_1
testing mul...
init
end
init
end

Name: TMP_233 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef

Name: maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: 6 rnorm: u
init
end
_______________

Name: TMP_233 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_234 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_234

Name: TMP_234 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
numerator_1(uint256) := TMP_234(uint256)
asgn
init
end
_______________

Name: TMP_234 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef

Name: numerator Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for numerator

Name: numerator Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: denominator, Num: 1
Globalname: denominator
End popogation
TMP_235(uint256) = equilibriumFee_1 (c)* providedLiquidity_1
testing mul...
init
end
init
end

Name: equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: providedLiquidity Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
lnorm: u rnorm: 6
init
end
_______________

Name: providedLiquidity Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_235 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_235

Name: TMP_235 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_236(uint256) = maxFee_1 (c)- equilibriumFee_1
init
end
init
end
init
end
_______________

Name: equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_236 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_236

Name: TMP_236 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_237(uint256) = TMP_236 (c)* resultingLiquidity_1
testing mul...
init
end
init
end

Name: TMP_236 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: resultingLiquidity Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: resultingLiquidity Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_237 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_237

Name: TMP_237 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_238(uint256) = TMP_235 (c)+ TMP_237
init
end
init
end
init
end
_______________

Name: TMP_235 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_238 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_238

Name: TMP_238 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
denominator_1(uint256) := TMP_238(uint256)
asgn
init
end
_______________

Name: TMP_238 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: denominator Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for denominator

Name: denominator Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_239(bool) = denominator_1 == 0
[i]Type for TMP_239

Name: TMP_239 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: fee, Num: 1
Globalname: fee
End popogation
fee_1(uint256) := 0(uint256)
asgn
init
end
_______________

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef

Name: fee Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for fee

Name: fee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: fee, Num: 2
Globalname: fee
End popogation
TMP_240(uint256) = numerator_1 (c)/ denominator_1
init
end
init
end
lnorm: 6 rnorm: u
Source address: u
init
end
_______________

Name: PIC_143 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_240 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
init
end
init
end
lnorm: 6 rnorm: u
Source address: u
init
end
_______________

Name: PIC_144 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_240 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_240

Name: TMP_240 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
fee_2(uint256) := TMP_240(uint256)
asgn
init
end
_______________

Name: TMP_240 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef

Name: fee Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for fee

Name: fee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Source address: -982

Name: tokenAddress_1 Function: getTransferFee
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
Phid
Source address: u

Name: amount_1 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getTransferFee
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid
tokenAddress_1(address) := ϕ(['tokenAddress_1'])
Phi
[i]Type for tokenAddress

Name: tokenAddress Function: getTransferFee
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount_1'])
Phi
[i]Type for amount

Name: amount Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tokenManager_27(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_0', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_41(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getTransferFee
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: currentLiquidity, Num: 1
Globalname: currentLiquidity
End popogation

Name: liquidityProviders Function: getTransferFee
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid
TMP_228(uint256) = INTERNAL_CALL, LiquidityPool.getCurrentLiquidity(address)(tokenAddress_1)
init
end
[[], [], 6, 'tokenAddress', [], -1, -982, 'u']

Name: tokenAddress Function: getCurrentLiquidity
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
Source address: -982

Name: tokenAddress_1 Function: getCurrentLiquidity
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
tokenAddress_1(address) := ϕ(['tokenAddress_1', 'tokenAddress_1'])
Phi
[i]Type for tokenAddress

Name: tokenAddress Function: getCurrentLiquidity
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_3(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_1(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_0', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_1(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_0'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: liquidityPoolBalance, Num: 1
Globalname: liquidityPoolBalance
End popogation

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_99(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_3(ILiquidityProviders), function:getCurrentLiquidity, arguments:['tokenAddress_1']  
High Call: getCurrentLiquidity
Running querryfc
Written func info: LiquidityProviders, getCurrentLiquidity
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-982], [-1], 6, "'u'", 'u', -1)
[i]Type for TMP_99

Name: TMP_99 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
liquidityProviders_4(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_3', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_2(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_1', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_2(mapping(address => uint256)) := ϕ(['incentivePool_1', 'incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityPoolBalance_1(uint256) := TMP_99(uint256)
asgn
init
end
_______________

Name: TMP_99 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for liquidityPoolBalance

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: currentLiquidity, Num: 1
Globalname: currentLiquidity
End popogation

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_100(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_4(ILiquidityProviders), function:totalLPFees, arguments:['tokenAddress_1']  
High Call: totalLPFees
Running querryfc
Written func info: LiquidityProviders, totalLPFees
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-982], [-1], 6, "'u'", 'u', -1)
[i]Type for TMP_100

Name: TMP_100 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
liquidityProviders_5(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_4', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_3(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_2', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_3(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_2', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_101(uint256) = liquidityPoolBalance_1 (c)- TMP_100
init
end
init
end
-982
-1
lnorm: 6 rnorm: 6
init
end
_______________

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_101 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_101

Name: TMP_101 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_2(uint256) -> gasFeeAccumulatedByToken_3[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_2

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_102(uint256) = TMP_101 (c)- REF_2
init
end
init
end
init
end
_______________

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_102 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_102

Name: TMP_102 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_3(uint256) -> incentivePool_3[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_3

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_103(uint256) = TMP_102 (c)- REF_3
init
end
init
end
init
end
_______________

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_103 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_103

Name: TMP_103 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
currentLiquidity_1(uint256) := TMP_103(uint256)
asgn
init
end
_______________

Name: TMP_103 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: currentLiquidity Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for currentLiquidity

Name: currentLiquidity Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Source address: -982

Name: tokenAddress_1 Function: getCurrentLiquidity
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
tokenAddress_1(address) := ϕ(['tokenAddress_1', 'tokenAddress_1'])
Phi
[i]Type for tokenAddress

Name: tokenAddress Function: getCurrentLiquidity
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_3(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_1(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_0', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_1(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_0'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: liquidityPoolBalance, Num: 1
Globalname: liquidityPoolBalance
End popogation

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_99(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_3(ILiquidityProviders), function:getCurrentLiquidity, arguments:['tokenAddress_1']  
High Call: getCurrentLiquidity
Running querryfc
Written func info: LiquidityProviders, getCurrentLiquidity
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-982], [-1], 6, "'u'", 'u', -1)
[i]Type for TMP_99

Name: TMP_99 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
liquidityProviders_4(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_3', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_2(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_1', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_2(mapping(address => uint256)) := ϕ(['incentivePool_1', 'incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityPoolBalance_1(uint256) := TMP_99(uint256)
asgn
init
end
_______________

Name: TMP_99 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for liquidityPoolBalance

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: currentLiquidity, Num: 1
Globalname: currentLiquidity
End popogation

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_100(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_4(ILiquidityProviders), function:totalLPFees, arguments:['tokenAddress_1']  
High Call: totalLPFees
Running querryfc
Written func info: LiquidityProviders, totalLPFees
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-982], [-1], 6, "'u'", 'u', -1)
[i]Type for TMP_100

Name: TMP_100 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
liquidityProviders_5(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_4', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_3(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_2', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_3(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_2', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_101(uint256) = liquidityPoolBalance_1 (c)- TMP_100
init
end
init
end
-982
-1
lnorm: 6 rnorm: 6
init
end
_______________

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_101 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_101

Name: TMP_101 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_2(uint256) -> gasFeeAccumulatedByToken_3[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_2

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_102(uint256) = TMP_101 (c)- REF_2
init
end
init
end
init
end
_______________

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_102 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_102

Name: TMP_102 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_3(uint256) -> incentivePool_3[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_3

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_103(uint256) = TMP_102 (c)- REF_3
init
end
init
end
init
end
_______________

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_103 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_103

Name: TMP_103 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
currentLiquidity_1(uint256) := TMP_103(uint256)
asgn
init
end
_______________

Name: TMP_103 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: currentLiquidity Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for currentLiquidity

Name: currentLiquidity Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_228

Name: TMP_228 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_42(ILiquidityProviders) := ϕ(['liquidityProviders_5'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getTransferFee
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
currentLiquidity_1(uint256) := TMP_228(uint256)
asgn
init
end
_______________

Name: TMP_228 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: currentLiquidity Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for currentLiquidity

Name: currentLiquidity Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: providedLiquidity, Num: 1
Globalname: providedLiquidity
End popogation

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getTransferFee
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid
TMP_229(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_42(ILiquidityProviders), function:getSuppliedLiquidityByToken, arguments:['tokenAddress_1']  
High Call: getSuppliedLiquidityByToken
Running querryfc
Written func info: LiquidityProviders, getSuppliedLiquidityByToken
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-982], [-1], 6, "'u'", 'u', -1)
[i]Type for TMP_229

Name: TMP_229 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
tokenManager_29(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_28', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_43(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_42', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getTransferFee
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
providedLiquidity_1(uint256) := TMP_229(uint256)
asgn
init
end
_______________

Name: TMP_229 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: providedLiquidity Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for providedLiquidity

Name: providedLiquidity Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: currentLiquidity, Num: 1
Globalname: currentLiquidity
Name: resultingLiquidity, Num: 1
Globalname: resultingLiquidity
End popogation
TMP_230(uint256) = currentLiquidity_1 (c)- amount_1
init
end
init
end
init
end
_______________

Name: amount Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_230 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_230

Name: TMP_230 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
resultingLiquidity_1(uint256) := TMP_230(uint256)
asgn
init
end
_______________

Name: TMP_230 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: resultingLiquidity Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for resultingLiquidity

Name: resultingLiquidity Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: equilibriumFee, Num: 1
Globalname: equilibriumFee
End popogation

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid
TMP_231(ITokenManager.TokenInfo) = HIGH_LEVEL_CALL, dest:tokenManager_29(ITokenManager), function:getTokensInfo, arguments:['tokenAddress_1']  
High Call: getTokensInfo
Running querryfc
Written func info: TokenManager, getTokensInfo
[i]Type for TMP_231

Name: TMP_231 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: equilibriumFee
Finance Type: undef
XXXX
tokenManager_30(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_29', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
REF_62(uint256) -> TMP_231.equilibriumFee
MEMBER
init
end
init
end
init
end
_______________

Name: TMP_231.equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for REF_62

Name: TMP_231.equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: TMP_231, Field: equilibriumFee
#################
Member: 
Name: TMP_231 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: equilibriumFee
Finance Type: undef
Fieldf: 
Name: equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: TMP_231.equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
equilibriumFee_1(uint256) := REF_62(uint256)
asgn
init
end
_______________

Name: TMP_231.equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: equilibriumFee Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for equilibriumFee

Name: equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: maxFee, Num: 1
Globalname: maxFee
End popogation

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid
TMP_232(ITokenManager.TokenInfo) = HIGH_LEVEL_CALL, dest:tokenManager_30(ITokenManager), function:getTokensInfo, arguments:['tokenAddress_1']  
High Call: getTokensInfo
Running querryfc
Written func info: TokenManager, getTokensInfo
[i]Type for TMP_232

Name: TMP_232 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: maxFee
Finance Type: undef
XXXX
tokenManager_31(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_30', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
REF_64(uint256) -> TMP_232.maxFee
MEMBER
init
end
init
end
init
end
_______________

Name: TMP_232.maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for REF_64

Name: TMP_232.maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: TMP_232, Field: maxFee
#################
Member: 
Name: TMP_232 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: maxFee
Finance Type: undef
Fieldf: 
Name: maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: TMP_232.maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
maxFee_1(uint256) := REF_64(uint256)
asgn
init
end
_______________

Name: TMP_232.maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: maxFee Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for maxFee

Name: maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: numerator, Num: 1
Globalname: numerator
End popogation
TMP_233(uint256) = providedLiquidity_1 (c)* equilibriumFee_1
testing mul...
init
end
init
end

Name: providedLiquidity Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: 6 rnorm: u
init
end
_______________

Name: providedLiquidity Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_233 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_233

Name: TMP_233 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_234(uint256) = TMP_233 (c)* maxFee_1
testing mul...
init
end
init
end

Name: TMP_233 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef

Name: maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: 6 rnorm: u
init
end
_______________

Name: TMP_233 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_234 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_234

Name: TMP_234 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
numerator_1(uint256) := TMP_234(uint256)
asgn
init
end
_______________

Name: TMP_234 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef

Name: numerator Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for numerator

Name: numerator Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: denominator, Num: 1
Globalname: denominator
End popogation
TMP_235(uint256) = equilibriumFee_1 (c)* providedLiquidity_1
testing mul...
init
end
init
end

Name: equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: providedLiquidity Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
lnorm: u rnorm: 6
init
end
_______________

Name: providedLiquidity Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_235 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_235

Name: TMP_235 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_236(uint256) = maxFee_1 (c)- equilibriumFee_1
init
end
init
end
init
end
_______________

Name: equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_236 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_236

Name: TMP_236 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_237(uint256) = TMP_236 (c)* resultingLiquidity_1
testing mul...
init
end
init
end

Name: TMP_236 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: resultingLiquidity Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: resultingLiquidity Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_237 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_237

Name: TMP_237 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_238(uint256) = TMP_235 (c)+ TMP_237
init
end
init
end
init
end
_______________

Name: TMP_235 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_238 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_238

Name: TMP_238 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
denominator_1(uint256) := TMP_238(uint256)
asgn
init
end
_______________

Name: TMP_238 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: denominator Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for denominator

Name: denominator Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_239(bool) = denominator_1 == 0
[i]Type for TMP_239

Name: TMP_239 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: fee, Num: 1
Globalname: fee
End popogation
fee_1(uint256) := 0(uint256)
asgn
init
end
_______________

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef

Name: fee Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for fee

Name: fee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: fee, Num: 2
Globalname: fee
End popogation
TMP_240(uint256) = numerator_1 (c)/ denominator_1
init
end
init
end
lnorm: 6 rnorm: u
Source address: u
init
end
_______________

Name: PIC_146 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_240 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
init
end
init
end
lnorm: 6 rnorm: u
Source address: u
init
end
_______________

Name: PIC_147 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_240 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_240

Name: TMP_240 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
fee_2(uint256) := TMP_240(uint256)
asgn
init
end
_______________

Name: TMP_240 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef

Name: fee Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for fee

Name: fee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_199

Name: TMP_199 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tokenManager_21(ITokenManager) := ϕ(['tokenManager_31'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getAmountToTransfer
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_36(ILiquidityProviders) := ϕ(['liquidityProviders_43'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getAmountToTransfer
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
transferFeePerc_1(uint256) := TMP_199(uint256)
asgn
init
end
_______________

Name: TMP_199 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: transferFeePerc Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for transferFeePerc

Name: transferFeePerc Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: transferFeePerc, Num: 1
Globalname: transferFeePerc
End popogation

Name: BASE_DIVISOR Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: baseGas Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: tokenManager Function: getAmountToTransfer
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getAmountToTransfer
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_200(ITokenManager.TokenInfo) = HIGH_LEVEL_CALL, dest:tokenManager_21(ITokenManager), function:getTokensInfo, arguments:['tokenAddress_1']  
High Call: getTokensInfo
Running querryfc
Written func info: TokenManager, getTokensInfo
[i]Type for TMP_200

Name: TMP_200 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: equilibriumFee
Finance Type: undef
XXXX
BASE_DIVISOR_3(uint256) := ϕ(['BASE_DIVISOR_3', 'BASE_DIVISOR_5', 'BASE_DIVISOR_2'])
Phi
[i]Type for BASE_DIVISOR

Name: BASE_DIVISOR Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
baseGas_5(uint256) := ϕ(['baseGas_2', 'baseGas_1', 'baseGas_4', 'baseGas_9'])
Phi
[i]Type for baseGas

Name: baseGas Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tokenManager_22(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_7', 'tokenManager_1', 'tokenManager_21', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getAmountToTransfer
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_37(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_36', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getAmountToTransfer
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_6(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_5', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulated_3(mapping(address => mapping(address => uint256))) := ϕ(['gasFeeAccumulated_16', 'gasFeeAccumulated_10', 'gasFeeAccumulated_22', 'gasFeeAccumulated_2'])
Phi
[i]Type for gasFeeAccumulated

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_25(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_24'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_44(uint256) -> TMP_200.equilibriumFee
MEMBER
init
end
init
end
init
end
_______________

Name: TMP_200.equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for REF_44

Name: TMP_200.equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: TMP_200, Field: equilibriumFee
#################
Member: 
Name: TMP_200 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: equilibriumFee
Finance Type: undef
Fieldf: 
Name: equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: TMP_200.equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_201(bool) = transferFeePerc_1 > REF_44
init
end
init
end
lnorm: u rnorm: u
init
end
_______________

Name: TMP_200.equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: transferFeePerc Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
init
end
_______________

Name: TMP_200.equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_201 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_201

Name: TMP_201 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: lpFee, Num: 1
Globalname: lpFee
End popogation

Name: BASE_DIVISOR Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: baseGas Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: tokenManager Function: getAmountToTransfer
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getAmountToTransfer
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_202(ITokenManager.TokenInfo) = HIGH_LEVEL_CALL, dest:tokenManager_22(ITokenManager), function:getTokensInfo, arguments:['tokenAddress_1']  
High Call: getTokensInfo
Running querryfc
Written func info: TokenManager, getTokensInfo
[i]Type for TMP_202

Name: TMP_202 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: equilibriumFee
Finance Type: undef
XXXX
BASE_DIVISOR_4(uint256) := ϕ(['BASE_DIVISOR_3', 'BASE_DIVISOR_5'])
Phi
[i]Type for BASE_DIVISOR

Name: BASE_DIVISOR Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
baseGas_6(uint256) := ϕ(['baseGas_2', 'baseGas_1', 'baseGas_5', 'baseGas_9'])
Phi
[i]Type for baseGas

Name: baseGas Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tokenManager_23(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_7', 'tokenManager_1', 'tokenManager_22', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getAmountToTransfer
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_38(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_37', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getAmountToTransfer
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_7(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_6', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulated_4(mapping(address => mapping(address => uint256))) := ϕ(['gasFeeAccumulated_16', 'gasFeeAccumulated_10', 'gasFeeAccumulated_3', 'gasFeeAccumulated_22'])
Phi
[i]Type for gasFeeAccumulated

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_26(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_46(uint256) -> TMP_202.equilibriumFee
MEMBER
init
end
init
end
init
end
_______________

Name: TMP_202.equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for REF_46

Name: TMP_202.equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: TMP_202, Field: equilibriumFee
#################
Member: 
Name: TMP_202 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: equilibriumFee
Finance Type: undef
Fieldf: 
Name: equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: TMP_202.equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_203(uint256) = amount_1 (c)* REF_46
testing mul...
init
end
init
end

Name: amount Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_202.equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: TMP_202.equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_203 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_203

Name: TMP_203 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_204(uint256) = TMP_203 (c)/ BASE_DIVISOR_4
init
end
init
end
lnorm: u rnorm: u
init
end
init
end
init
end
lnorm: u rnorm: u
init
end
[i]Type for TMP_204

Name: TMP_204 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
lpFee_1(uint256) := TMP_204(uint256)
asgn
init
end
_______________

Name: TMP_204 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: lpFee Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for lpFee

Name: lpFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: lpFee, Num: 2
Globalname: lpFee
End popogation
TMP_210(uint256) = amount_1 (c)* transferFeePerc_1
testing mul...
init
end
init
end

Name: amount Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: transferFeePerc Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: transferFeePerc Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_210 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_210

Name: TMP_210 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_211(uint256) = TMP_210 (c)/ BASE_DIVISOR_3
init
end
init
end
lnorm: u rnorm: u
init
end
init
end
init
end
lnorm: u rnorm: u
init
end
[i]Type for TMP_211

Name: TMP_211 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
lpFee_2(uint256) := TMP_211(uint256)
asgn
init
end
_______________

Name: TMP_211 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: lpFee Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for lpFee

Name: lpFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation

Name: BASE_DIVISOR Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: baseGas Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: tokenManager Function: getAmountToTransfer
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getAmountToTransfer
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
REF_47(uint256) -> incentivePool_26[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_47

Name: incentivePool Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_48(uint256) -> incentivePool_26[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_48

Name: incentivePool Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_205(ITokenManager.TokenInfo) = HIGH_LEVEL_CALL, dest:tokenManager_23(ITokenManager), function:getTokensInfo, arguments:['tokenAddress_1']  
High Call: getTokensInfo
Running querryfc
Written func info: TokenManager, getTokensInfo
[i]Type for TMP_205

Name: TMP_205 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: equilibriumFee
Finance Type: undef
XXXX
BASE_DIVISOR_5(uint256) := ϕ(['BASE_DIVISOR_3', 'BASE_DIVISOR_5', 'BASE_DIVISOR_4'])
Phi
[i]Type for BASE_DIVISOR

Name: BASE_DIVISOR Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
baseGas_7(uint256) := ϕ(['baseGas_2', 'baseGas_1', 'baseGas_6', 'baseGas_9'])
Phi
[i]Type for baseGas

Name: baseGas Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tokenManager_24(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_23', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getAmountToTransfer
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_39(ILiquidityProviders) := ϕ(['liquidityProviders_38', 'liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getAmountToTransfer
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_8(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_7', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulated_5(mapping(address => mapping(address => uint256))) := ϕ(['gasFeeAccumulated_16', 'gasFeeAccumulated_10', 'gasFeeAccumulated_4', 'gasFeeAccumulated_22'])
Phi
[i]Type for gasFeeAccumulated

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_27(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_26', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_50(uint256) -> TMP_205.equilibriumFee
MEMBER
init
end
init
end
init
end
_______________

Name: TMP_205.equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for REF_50

Name: TMP_205.equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: TMP_205, Field: equilibriumFee
#################
Member: 
Name: TMP_205 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: equilibriumFee
Finance Type: undef
Fieldf: 
Name: equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: TMP_205.equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_206(uint256) = transferFeePerc_1 (c)- REF_50
init
end
init
end
init
end
_______________

Name: TMP_205.equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_206 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_206

Name: TMP_206 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_207(uint256) = amount_1 (c)* TMP_206
testing mul...
init
end
init
end

Name: amount Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_206 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: TMP_206 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_207 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_207

Name: TMP_207 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_208(uint256) = REF_48 (c)+ TMP_207
init
end
init
end
init
end
_______________

Name: TMP_207 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_208 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_208

Name: TMP_208 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_209(uint256) = TMP_208 (c)/ BASE_DIVISOR_5
init
end
init
end
lnorm: u rnorm: u
init
end
init
end
init
end
lnorm: u rnorm: u
init
end
[i]Type for TMP_209

Name: TMP_209 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_28(mapping(address => uint256)) := ϕ(['incentivePool_26'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_47 (->incentivePool_28) := TMP_209(uint256)
asgn
init
end
_______________

Name: TMP_209 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: REF_47 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_47

Name: REF_47 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
Source address: u
Propogating parameters and globals to SSA variables...
End popogation
Name: lpFee, Num: 3
Globalname: lpFee

Name: lpFee Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
lpFee_3(uint256) := ϕ(['lpFee_1', 'lpFee_2'])
Phi

Name: lpFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: lpFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
init
end
_______________

Name: lpFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: lpFee Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for lpFee

Name: lpFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: transferFeeAmount, Num: 1
Globalname: transferFeeAmount
End popogation
TMP_212(uint256) = amount_1 (c)* transferFeePerc_1
testing mul...
init
end
init
end

Name: amount Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: transferFeePerc Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: transferFeePerc Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_212 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_212

Name: TMP_212 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_213(uint256) = TMP_212 (c)/ BASE_DIVISOR_3
init
end
init
end
lnorm: u rnorm: u
init
end
init
end
init
end
lnorm: u rnorm: u
init
end
[i]Type for TMP_213

Name: TMP_213 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
transferFeeAmount_1(uint256) := TMP_213(uint256)
asgn
init
end
_______________

Name: TMP_213 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: transferFeeAmount Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for transferFeeAmount

Name: transferFeeAmount Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation

Name: baseGas Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: tokenManager Function: getAmountToTransfer
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getAmountToTransfer
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
HIGH_LEVEL_CALL, dest:liquidityProviders_37(ILiquidityProviders), function:addLPFee, arguments:['tokenAddress_1', 'lpFee_3']  
High Call: addLPFee
baseGas_8(uint256) := ϕ(['baseGas_2', 'baseGas_1', 'baseGas_7', 'baseGas_9'])
Phi
[i]Type for baseGas

Name: baseGas Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tokenManager_25(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_24', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getAmountToTransfer
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_40(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_39', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getAmountToTransfer
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_9(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_8', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulated_6(mapping(address => mapping(address => uint256))) := ϕ(['gasFeeAccumulated_16', 'gasFeeAccumulated_10', 'gasFeeAccumulated_22', 'gasFeeAccumulated_5'])
Phi
[i]Type for gasFeeAccumulated

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Source address: u
Name: initialGas, Num: 1
Globalname: initialGas
Name: totalGasUsed, Num: 1
Globalname: totalGasUsed
End popogation
TMP_215(uint256) = SOLIDITY_CALL gasleft()()
[i]Type for TMP_215

Name: TMP_215 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_216(uint256) = initialGas_1 (c)- TMP_215
init
end
init
end
init
end
_______________

Name: TMP_215 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_216 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_216

Name: TMP_216 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
totalGasUsed_1(uint256) := TMP_216(uint256)
asgn
init
end
_______________

Name: TMP_216 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: totalGasUsed Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for totalGasUsed

Name: totalGasUsed Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: totalGasUsed, Num: 1
Globalname: totalGasUsed
Name: totalGasUsed, Num: 2
Globalname: totalGasUsed
End popogation

Name: baseGas Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: tokenManager Function: getAmountToTransfer
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_217(ITokenManager.TokenInfo) = HIGH_LEVEL_CALL, dest:tokenManager_25(ITokenManager), function:getTokensInfo, arguments:['tokenAddress_1']  
High Call: getTokensInfo
Running querryfc
Written func info: TokenManager, getTokensInfo
[i]Type for TMP_217

Name: TMP_217 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: transferOverhead
Finance Type: undef
XXXX
baseGas_9(uint256) := ϕ(['baseGas_2', 'baseGas_1', 'baseGas_8', 'baseGas_9'])
Phi
[i]Type for baseGas

Name: baseGas Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tokenManager_26(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_25', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getAmountToTransfer
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_10(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_9', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulated_7(mapping(address => mapping(address => uint256))) := ϕ(['gasFeeAccumulated_16', 'gasFeeAccumulated_10', 'gasFeeAccumulated_22', 'gasFeeAccumulated_6'])
Phi
[i]Type for gasFeeAccumulated

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_53(uint256) -> TMP_217.transferOverhead
MEMBER
init
end
init
end
init
end
_______________

Name: TMP_217.transferOverhead Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: transferOverhead Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for REF_53

Name: TMP_217.transferOverhead Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: TMP_217, Field: transferOverhead
#################
Member: 
Name: TMP_217 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: transferOverhead
Finance Type: undef
Fieldf: 
Name: transferOverhead Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: TMP_217.transferOverhead Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: transferOverhead Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_218(uint256) = totalGasUsed_1 (c)+ REF_53
init
end
init
end
init
end
_______________

Name: TMP_217.transferOverhead Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_218 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_218

Name: TMP_218 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
totalGasUsed_2(uint256) := TMP_218(uint256)
asgn
init
end
_______________

Name: TMP_218 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: totalGasUsed Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for totalGasUsed

Name: totalGasUsed Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: totalGasUsed, Num: 3
Globalname: totalGasUsed
End popogation
TMP_219(uint256) = totalGasUsed_2 (c)+ baseGas_9
init
end
init
end
init
end
_______________

Name: baseGas Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_219 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_219

Name: TMP_219 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
totalGasUsed_3(uint256) := TMP_219(uint256)
asgn
init
end
_______________

Name: TMP_219 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: totalGasUsed Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for totalGasUsed

Name: totalGasUsed Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Source address: u
Name: tokenGasPrice, Num: 1
Globalname: tokenGasPrice
Name: gasFee, Num: 1
Globalname: gasFee
End popogation
TMP_220(uint256) = totalGasUsed_3 (c)* tokenGasPrice_1
testing mul...
init
end
init
end

Name: totalGasUsed Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: tokenGasPrice_1 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: totalGasUsed Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_220 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_220

Name: TMP_220 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
gasFee_1(uint256) := TMP_220(uint256)
asgn
init
end
_______________

Name: TMP_220 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: gasFee Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for gasFee

Name: gasFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
REF_54(uint256) -> gasFeeAccumulatedByToken_10[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_54

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_55(uint256) -> gasFeeAccumulatedByToken_10[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_55

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_221(uint256) = REF_55 (c)+ gasFee_1
init
end
init
end
init
end
_______________

Name: gasFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_221 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_221

Name: TMP_221 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_11(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_10'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_54 (->gasFeeAccumulatedByToken_11) := TMP_221(uint256)
asgn
init
end
_______________

Name: TMP_221 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: REF_54 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_54

Name: REF_54 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
Source address: u
Propogating parameters and globals to SSA variables...
End popogation

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
REF_56(mapping(address => uint256)) -> gasFeeAccumulated_7[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_56

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_222(address) = INTERNAL_CALL, LiquidityPool._msgSender()()
init
end
_______________

Name: PIC_33 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_222 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_222

Name: TMP_222 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_57(uint256) -> REF_56[TMP_222]
INDEX
Source address: u
[i]Type for REF_57

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_58(mapping(address => uint256)) -> gasFeeAccumulated_8[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_58

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_223(address) = INTERNAL_CALL, LiquidityPool._msgSender()()
init
end
_______________

Name: PIC_33 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_223 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_223

Name: TMP_223 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_59(uint256) -> REF_58[TMP_223]
INDEX
Source address: u
[i]Type for REF_59

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_224(uint256) = REF_59 (c)+ gasFee_1
init
end
init
end
init
end
_______________

Name: gasFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_224 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_224

Name: TMP_224 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulated_10(mapping(address => mapping(address => uint256))) := ϕ(['gasFeeAccumulated_7'])
Phi
[i]Type for gasFeeAccumulated

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_57 (->gasFeeAccumulated_10) := TMP_224(uint256)
asgn
init
end
_______________

Name: TMP_224 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: REF_57 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_57

Name: REF_57 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
Source address: u
Propogating parameters and globals to SSA variables...
Name: amountToTransfer, Num: 1
Globalname: amountToTransfer
End popogation
TMP_225(uint256) = transferFeeAmount_1 (c)+ gasFee_1
init
end
init
end
init
end
_______________

Name: gasFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_225 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_225

Name: TMP_225 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_226(uint256) = amount_1 (c)- TMP_225
init
end
init
end
init
end
_______________

Name: TMP_225 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_226 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_226

Name: TMP_226 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
amountToTransfer_1(uint256) := TMP_226(uint256)
asgn
init
end
_______________

Name: TMP_226 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amountToTransfer Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for amountToTransfer

Name: amountToTransfer Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Source address: u
Name: initialGas, Num: 1
Globalname: initialGas

Name: initialGas_1 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Source address: -982

Name: tokenAddress_1 Function: getAmountToTransfer
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
Phid
Source address: u

Name: amount_1 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Source address: u
Name: tokenGasPrice, Num: 1
Globalname: tokenGasPrice

Name: tokenGasPrice_1 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: BASE_DIVISOR Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: baseGas Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: tokenManager Function: getAmountToTransfer
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getAmountToTransfer
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
initialGas_1(uint256) := ϕ(['initialGas_1'])
Phi

Name: initialGas Function: sendFundsToUser
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for initialGas

Name: initialGas Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tokenAddress_1(address) := ϕ(['tokenAddress_1'])
Phi
[i]Type for tokenAddress

Name: tokenAddress Function: getAmountToTransfer
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount_1'])
Phi
[i]Type for amount

Name: amount Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tokenGasPrice_1(uint256) := ϕ(['tokenGasPrice_1'])
Phi

Name: tokenGasPrice Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for tokenGasPrice

Name: tokenGasPrice Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
BASE_DIVISOR_1(uint256) := ϕ(['BASE_DIVISOR_3', 'BASE_DIVISOR_5', 'BASE_DIVISOR_0'])
Phi
[i]Type for BASE_DIVISOR

Name: BASE_DIVISOR Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
baseGas_3(uint256) := ϕ(['baseGas_2', 'baseGas_1', 'baseGas_0', 'baseGas_9'])
Phi
[i]Type for baseGas

Name: baseGas Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tokenManager_20(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_0', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getAmountToTransfer
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_35(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getAmountToTransfer
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_4(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_0', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulated_1(mapping(address => mapping(address => uint256))) := ϕ(['gasFeeAccumulated_0', 'gasFeeAccumulated_10', 'gasFeeAccumulated_16', 'gasFeeAccumulated_22'])
Phi
[i]Type for gasFeeAccumulated

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_23(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_0'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: transferFeePerc, Num: 1
Globalname: transferFeePerc
End popogation

Name: tokenManager Function: getAmountToTransfer
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getAmountToTransfer
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid
TMP_199(uint256) = INTERNAL_CALL, LiquidityPool.getTransferFee(address,uint256)(tokenAddress_1,amount_1)
init
end
init
end
[[], [], 6, 'tokenAddress', [], -1, -982, 'u']

Name: tokenAddress Function: None
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
Source address: -982

Name: tokenAddress_1 Function: getTransferFee
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
Phid
Source address: u

Name: amount_1 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getTransferFee
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid
tokenAddress_1(address) := ϕ(['tokenAddress_1'])
Phi
[i]Type for tokenAddress

Name: tokenAddress Function: getTransferFee
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount_1'])
Phi
[i]Type for amount

Name: amount Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tokenManager_27(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_0', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_41(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getTransferFee
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: currentLiquidity, Num: 1
Globalname: currentLiquidity
End popogation

Name: liquidityProviders Function: getTransferFee
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid
TMP_228(uint256) = INTERNAL_CALL, LiquidityPool.getCurrentLiquidity(address)(tokenAddress_1)
init
end
[[], [], 6, 'tokenAddress', [], -1, -982, 'u']

Name: tokenAddress Function: getCurrentLiquidity
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
Source address: -982

Name: tokenAddress_1 Function: getCurrentLiquidity
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
tokenAddress_1(address) := ϕ(['tokenAddress_1', 'tokenAddress_1'])
Phi
[i]Type for tokenAddress

Name: tokenAddress Function: getCurrentLiquidity
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_3(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_1(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_0', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_1(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_0'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: liquidityPoolBalance, Num: 1
Globalname: liquidityPoolBalance
End popogation

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_99(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_3(ILiquidityProviders), function:getCurrentLiquidity, arguments:['tokenAddress_1']  
High Call: getCurrentLiquidity
Running querryfc
Written func info: LiquidityProviders, getCurrentLiquidity
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-982], [-1], 6, "'u'", 'u', -1)
[i]Type for TMP_99

Name: TMP_99 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
liquidityProviders_4(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_3', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_2(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_1', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_2(mapping(address => uint256)) := ϕ(['incentivePool_1', 'incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityPoolBalance_1(uint256) := TMP_99(uint256)
asgn
init
end
_______________

Name: TMP_99 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for liquidityPoolBalance

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: currentLiquidity, Num: 1
Globalname: currentLiquidity
End popogation

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_100(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_4(ILiquidityProviders), function:totalLPFees, arguments:['tokenAddress_1']  
High Call: totalLPFees
Running querryfc
Written func info: LiquidityProviders, totalLPFees
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-982], [-1], 6, "'u'", 'u', -1)
[i]Type for TMP_100

Name: TMP_100 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
liquidityProviders_5(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_4', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_3(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_2', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_3(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_2', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_101(uint256) = liquidityPoolBalance_1 (c)- TMP_100
init
end
init
end
-982
-1
lnorm: 6 rnorm: 6
init
end
_______________

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_101 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_101

Name: TMP_101 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_2(uint256) -> gasFeeAccumulatedByToken_3[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_2

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_102(uint256) = TMP_101 (c)- REF_2
init
end
init
end
init
end
_______________

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_102 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_102

Name: TMP_102 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_3(uint256) -> incentivePool_3[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_3

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_103(uint256) = TMP_102 (c)- REF_3
init
end
init
end
init
end
_______________

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_103 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_103

Name: TMP_103 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
currentLiquidity_1(uint256) := TMP_103(uint256)
asgn
init
end
_______________

Name: TMP_103 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: currentLiquidity Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for currentLiquidity

Name: currentLiquidity Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Source address: -982

Name: tokenAddress_1 Function: getCurrentLiquidity
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
tokenAddress_1(address) := ϕ(['tokenAddress_1', 'tokenAddress_1'])
Phi
[i]Type for tokenAddress

Name: tokenAddress Function: getCurrentLiquidity
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_3(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_1(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_0', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_1(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_0'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: liquidityPoolBalance, Num: 1
Globalname: liquidityPoolBalance
End popogation

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_99(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_3(ILiquidityProviders), function:getCurrentLiquidity, arguments:['tokenAddress_1']  
High Call: getCurrentLiquidity
Running querryfc
Written func info: LiquidityProviders, getCurrentLiquidity
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-982], [-1], 6, "'u'", 'u', -1)
[i]Type for TMP_99

Name: TMP_99 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
liquidityProviders_4(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_3', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_2(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_1', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_2(mapping(address => uint256)) := ϕ(['incentivePool_1', 'incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityPoolBalance_1(uint256) := TMP_99(uint256)
asgn
init
end
_______________

Name: TMP_99 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for liquidityPoolBalance

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: currentLiquidity, Num: 1
Globalname: currentLiquidity
End popogation

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_100(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_4(ILiquidityProviders), function:totalLPFees, arguments:['tokenAddress_1']  
High Call: totalLPFees
Running querryfc
Written func info: LiquidityProviders, totalLPFees
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-982], [-1], 6, "'u'", 'u', -1)
[i]Type for TMP_100

Name: TMP_100 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
liquidityProviders_5(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_4', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_3(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_2', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_3(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_2', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_101(uint256) = liquidityPoolBalance_1 (c)- TMP_100
init
end
init
end
-982
-1
lnorm: 6 rnorm: 6
init
end
_______________

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_101 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_101

Name: TMP_101 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_2(uint256) -> gasFeeAccumulatedByToken_3[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_2

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_102(uint256) = TMP_101 (c)- REF_2
init
end
init
end
init
end
_______________

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_102 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_102

Name: TMP_102 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_3(uint256) -> incentivePool_3[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_3

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_103(uint256) = TMP_102 (c)- REF_3
init
end
init
end
init
end
_______________

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_103 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_103

Name: TMP_103 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
currentLiquidity_1(uint256) := TMP_103(uint256)
asgn
init
end
_______________

Name: TMP_103 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: currentLiquidity Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for currentLiquidity

Name: currentLiquidity Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_228

Name: TMP_228 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_42(ILiquidityProviders) := ϕ(['liquidityProviders_5'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getTransferFee
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
currentLiquidity_1(uint256) := TMP_228(uint256)
asgn
init
end
_______________

Name: TMP_228 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: currentLiquidity Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for currentLiquidity

Name: currentLiquidity Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: providedLiquidity, Num: 1
Globalname: providedLiquidity
End popogation

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getTransferFee
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid
TMP_229(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_42(ILiquidityProviders), function:getSuppliedLiquidityByToken, arguments:['tokenAddress_1']  
High Call: getSuppliedLiquidityByToken
Running querryfc
Written func info: LiquidityProviders, getSuppliedLiquidityByToken
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-982], [-1], 6, "'u'", 'u', -1)
[i]Type for TMP_229

Name: TMP_229 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
tokenManager_29(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_28', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_43(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_42', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getTransferFee
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
providedLiquidity_1(uint256) := TMP_229(uint256)
asgn
init
end
_______________

Name: TMP_229 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: providedLiquidity Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for providedLiquidity

Name: providedLiquidity Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: currentLiquidity, Num: 1
Globalname: currentLiquidity
Name: resultingLiquidity, Num: 1
Globalname: resultingLiquidity
End popogation
TMP_230(uint256) = currentLiquidity_1 (c)- amount_1
init
end
init
end
init
end
_______________

Name: amount Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_230 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_230

Name: TMP_230 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
resultingLiquidity_1(uint256) := TMP_230(uint256)
asgn
init
end
_______________

Name: TMP_230 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: resultingLiquidity Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for resultingLiquidity

Name: resultingLiquidity Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: equilibriumFee, Num: 1
Globalname: equilibriumFee
End popogation

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid
TMP_231(ITokenManager.TokenInfo) = HIGH_LEVEL_CALL, dest:tokenManager_29(ITokenManager), function:getTokensInfo, arguments:['tokenAddress_1']  
High Call: getTokensInfo
Running querryfc
Written func info: TokenManager, getTokensInfo
[i]Type for TMP_231

Name: TMP_231 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: equilibriumFee
Finance Type: undef
XXXX
tokenManager_30(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_29', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
REF_62(uint256) -> TMP_231.equilibriumFee
MEMBER
init
end
init
end
init
end
_______________

Name: TMP_231.equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for REF_62

Name: TMP_231.equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: TMP_231, Field: equilibriumFee
#################
Member: 
Name: TMP_231 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: equilibriumFee
Finance Type: undef
Fieldf: 
Name: equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: TMP_231.equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
equilibriumFee_1(uint256) := REF_62(uint256)
asgn
init
end
_______________

Name: TMP_231.equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: equilibriumFee Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for equilibriumFee

Name: equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: maxFee, Num: 1
Globalname: maxFee
End popogation

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid
TMP_232(ITokenManager.TokenInfo) = HIGH_LEVEL_CALL, dest:tokenManager_30(ITokenManager), function:getTokensInfo, arguments:['tokenAddress_1']  
High Call: getTokensInfo
Running querryfc
Written func info: TokenManager, getTokensInfo
[i]Type for TMP_232

Name: TMP_232 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: maxFee
Finance Type: undef
XXXX
tokenManager_31(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_30', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
REF_64(uint256) -> TMP_232.maxFee
MEMBER
init
end
init
end
init
end
_______________

Name: TMP_232.maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for REF_64

Name: TMP_232.maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: TMP_232, Field: maxFee
#################
Member: 
Name: TMP_232 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: maxFee
Finance Type: undef
Fieldf: 
Name: maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: TMP_232.maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
maxFee_1(uint256) := REF_64(uint256)
asgn
init
end
_______________

Name: TMP_232.maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: maxFee Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for maxFee

Name: maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: numerator, Num: 1
Globalname: numerator
End popogation
TMP_233(uint256) = providedLiquidity_1 (c)* equilibriumFee_1
testing mul...
init
end
init
end

Name: providedLiquidity Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: 6 rnorm: u
init
end
_______________

Name: providedLiquidity Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_233 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_233

Name: TMP_233 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_234(uint256) = TMP_233 (c)* maxFee_1
testing mul...
init
end
init
end

Name: TMP_233 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef

Name: maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: 6 rnorm: u
init
end
_______________

Name: TMP_233 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_234 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_234

Name: TMP_234 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
numerator_1(uint256) := TMP_234(uint256)
asgn
init
end
_______________

Name: TMP_234 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef

Name: numerator Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for numerator

Name: numerator Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: denominator, Num: 1
Globalname: denominator
End popogation
TMP_235(uint256) = equilibriumFee_1 (c)* providedLiquidity_1
testing mul...
init
end
init
end

Name: equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: providedLiquidity Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
lnorm: u rnorm: 6
init
end
_______________

Name: providedLiquidity Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_235 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_235

Name: TMP_235 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_236(uint256) = maxFee_1 (c)- equilibriumFee_1
init
end
init
end
init
end
_______________

Name: equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_236 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_236

Name: TMP_236 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_237(uint256) = TMP_236 (c)* resultingLiquidity_1
testing mul...
init
end
init
end

Name: TMP_236 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: resultingLiquidity Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: resultingLiquidity Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_237 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_237

Name: TMP_237 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_238(uint256) = TMP_235 (c)+ TMP_237
init
end
init
end
init
end
_______________

Name: TMP_235 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_238 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_238

Name: TMP_238 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
denominator_1(uint256) := TMP_238(uint256)
asgn
init
end
_______________

Name: TMP_238 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: denominator Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for denominator

Name: denominator Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_239(bool) = denominator_1 == 0
[i]Type for TMP_239

Name: TMP_239 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: fee, Num: 1
Globalname: fee
End popogation
fee_1(uint256) := 0(uint256)
asgn
init
end
_______________

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef

Name: fee Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for fee

Name: fee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: fee, Num: 2
Globalname: fee
End popogation
TMP_240(uint256) = numerator_1 (c)/ denominator_1
init
end
init
end
lnorm: 6 rnorm: u
Source address: u
init
end
_______________

Name: PIC_150 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_240 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
init
end
init
end
lnorm: 6 rnorm: u
Source address: u
init
end
_______________

Name: PIC_151 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_240 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_240

Name: TMP_240 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
fee_2(uint256) := TMP_240(uint256)
asgn
init
end
_______________

Name: TMP_240 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef

Name: fee Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for fee

Name: fee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Source address: -982

Name: tokenAddress_1 Function: getTransferFee
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
Phid
Source address: u

Name: amount_1 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getTransferFee
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid
tokenAddress_1(address) := ϕ(['tokenAddress_1'])
Phi
[i]Type for tokenAddress

Name: tokenAddress Function: getTransferFee
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount_1'])
Phi
[i]Type for amount

Name: amount Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tokenManager_27(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_0', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_41(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getTransferFee
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: currentLiquidity, Num: 1
Globalname: currentLiquidity
End popogation

Name: liquidityProviders Function: getTransferFee
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid
TMP_228(uint256) = INTERNAL_CALL, LiquidityPool.getCurrentLiquidity(address)(tokenAddress_1)
init
end
[[], [], 6, 'tokenAddress', [], -1, -982, 'u']

Name: tokenAddress Function: getCurrentLiquidity
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
Source address: -982

Name: tokenAddress_1 Function: getCurrentLiquidity
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
tokenAddress_1(address) := ϕ(['tokenAddress_1', 'tokenAddress_1'])
Phi
[i]Type for tokenAddress

Name: tokenAddress Function: getCurrentLiquidity
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_3(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_1(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_0', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_1(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_0'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: liquidityPoolBalance, Num: 1
Globalname: liquidityPoolBalance
End popogation

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_99(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_3(ILiquidityProviders), function:getCurrentLiquidity, arguments:['tokenAddress_1']  
High Call: getCurrentLiquidity
Running querryfc
Written func info: LiquidityProviders, getCurrentLiquidity
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-982], [-1], 6, "'u'", 'u', -1)
[i]Type for TMP_99

Name: TMP_99 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
liquidityProviders_4(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_3', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_2(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_1', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_2(mapping(address => uint256)) := ϕ(['incentivePool_1', 'incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityPoolBalance_1(uint256) := TMP_99(uint256)
asgn
init
end
_______________

Name: TMP_99 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for liquidityPoolBalance

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: currentLiquidity, Num: 1
Globalname: currentLiquidity
End popogation

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_100(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_4(ILiquidityProviders), function:totalLPFees, arguments:['tokenAddress_1']  
High Call: totalLPFees
Running querryfc
Written func info: LiquidityProviders, totalLPFees
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-982], [-1], 6, "'u'", 'u', -1)
[i]Type for TMP_100

Name: TMP_100 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
liquidityProviders_5(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_4', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_3(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_2', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_3(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_2', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_101(uint256) = liquidityPoolBalance_1 (c)- TMP_100
init
end
init
end
-982
-1
lnorm: 6 rnorm: 6
init
end
_______________

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_101 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_101

Name: TMP_101 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_2(uint256) -> gasFeeAccumulatedByToken_3[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_2

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_102(uint256) = TMP_101 (c)- REF_2
init
end
init
end
init
end
_______________

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_102 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_102

Name: TMP_102 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_3(uint256) -> incentivePool_3[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_3

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_103(uint256) = TMP_102 (c)- REF_3
init
end
init
end
init
end
_______________

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_103 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_103

Name: TMP_103 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
currentLiquidity_1(uint256) := TMP_103(uint256)
asgn
init
end
_______________

Name: TMP_103 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: currentLiquidity Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for currentLiquidity

Name: currentLiquidity Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Source address: -982

Name: tokenAddress_1 Function: getCurrentLiquidity
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
tokenAddress_1(address) := ϕ(['tokenAddress_1', 'tokenAddress_1'])
Phi
[i]Type for tokenAddress

Name: tokenAddress Function: getCurrentLiquidity
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_3(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_1(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_0', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_1(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_0'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: liquidityPoolBalance, Num: 1
Globalname: liquidityPoolBalance
End popogation

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_99(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_3(ILiquidityProviders), function:getCurrentLiquidity, arguments:['tokenAddress_1']  
High Call: getCurrentLiquidity
Running querryfc
Written func info: LiquidityProviders, getCurrentLiquidity
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-982], [-1], 6, "'u'", 'u', -1)
[i]Type for TMP_99

Name: TMP_99 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
liquidityProviders_4(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_3', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_2(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_1', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_2(mapping(address => uint256)) := ϕ(['incentivePool_1', 'incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityPoolBalance_1(uint256) := TMP_99(uint256)
asgn
init
end
_______________

Name: TMP_99 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for liquidityPoolBalance

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: currentLiquidity, Num: 1
Globalname: currentLiquidity
End popogation

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_100(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_4(ILiquidityProviders), function:totalLPFees, arguments:['tokenAddress_1']  
High Call: totalLPFees
Running querryfc
Written func info: LiquidityProviders, totalLPFees
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-982], [-1], 6, "'u'", 'u', -1)
[i]Type for TMP_100

Name: TMP_100 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
liquidityProviders_5(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_4', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_3(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_2', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_3(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_2', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_101(uint256) = liquidityPoolBalance_1 (c)- TMP_100
init
end
init
end
-982
-1
lnorm: 6 rnorm: 6
init
end
_______________

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_101 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_101

Name: TMP_101 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_2(uint256) -> gasFeeAccumulatedByToken_3[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_2

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_102(uint256) = TMP_101 (c)- REF_2
init
end
init
end
init
end
_______________

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_102 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_102

Name: TMP_102 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_3(uint256) -> incentivePool_3[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_3

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_103(uint256) = TMP_102 (c)- REF_3
init
end
init
end
init
end
_______________

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_103 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_103

Name: TMP_103 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
currentLiquidity_1(uint256) := TMP_103(uint256)
asgn
init
end
_______________

Name: TMP_103 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: currentLiquidity Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for currentLiquidity

Name: currentLiquidity Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_228

Name: TMP_228 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_42(ILiquidityProviders) := ϕ(['liquidityProviders_5'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getTransferFee
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
currentLiquidity_1(uint256) := TMP_228(uint256)
asgn
init
end
_______________

Name: TMP_228 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: currentLiquidity Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for currentLiquidity

Name: currentLiquidity Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: providedLiquidity, Num: 1
Globalname: providedLiquidity
End popogation

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getTransferFee
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid
TMP_229(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_42(ILiquidityProviders), function:getSuppliedLiquidityByToken, arguments:['tokenAddress_1']  
High Call: getSuppliedLiquidityByToken
Running querryfc
Written func info: LiquidityProviders, getSuppliedLiquidityByToken
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-982], [-1], 6, "'u'", 'u', -1)
[i]Type for TMP_229

Name: TMP_229 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
tokenManager_29(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_28', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_43(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_42', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getTransferFee
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
providedLiquidity_1(uint256) := TMP_229(uint256)
asgn
init
end
_______________

Name: TMP_229 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: providedLiquidity Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for providedLiquidity

Name: providedLiquidity Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: currentLiquidity, Num: 1
Globalname: currentLiquidity
Name: resultingLiquidity, Num: 1
Globalname: resultingLiquidity
End popogation
TMP_230(uint256) = currentLiquidity_1 (c)- amount_1
init
end
init
end
init
end
_______________

Name: amount Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_230 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_230

Name: TMP_230 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
resultingLiquidity_1(uint256) := TMP_230(uint256)
asgn
init
end
_______________

Name: TMP_230 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: resultingLiquidity Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for resultingLiquidity

Name: resultingLiquidity Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: equilibriumFee, Num: 1
Globalname: equilibriumFee
End popogation

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid
TMP_231(ITokenManager.TokenInfo) = HIGH_LEVEL_CALL, dest:tokenManager_29(ITokenManager), function:getTokensInfo, arguments:['tokenAddress_1']  
High Call: getTokensInfo
Running querryfc
Written func info: TokenManager, getTokensInfo
[i]Type for TMP_231

Name: TMP_231 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: equilibriumFee
Finance Type: undef
XXXX
tokenManager_30(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_29', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
REF_62(uint256) -> TMP_231.equilibriumFee
MEMBER
init
end
init
end
init
end
_______________

Name: TMP_231.equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for REF_62

Name: TMP_231.equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: TMP_231, Field: equilibriumFee
#################
Member: 
Name: TMP_231 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: equilibriumFee
Finance Type: undef
Fieldf: 
Name: equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: TMP_231.equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
equilibriumFee_1(uint256) := REF_62(uint256)
asgn
init
end
_______________

Name: TMP_231.equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: equilibriumFee Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for equilibriumFee

Name: equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: maxFee, Num: 1
Globalname: maxFee
End popogation

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid
TMP_232(ITokenManager.TokenInfo) = HIGH_LEVEL_CALL, dest:tokenManager_30(ITokenManager), function:getTokensInfo, arguments:['tokenAddress_1']  
High Call: getTokensInfo
Running querryfc
Written func info: TokenManager, getTokensInfo
[i]Type for TMP_232

Name: TMP_232 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: maxFee
Finance Type: undef
XXXX
tokenManager_31(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_30', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
REF_64(uint256) -> TMP_232.maxFee
MEMBER
init
end
init
end
init
end
_______________

Name: TMP_232.maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for REF_64

Name: TMP_232.maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: TMP_232, Field: maxFee
#################
Member: 
Name: TMP_232 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: maxFee
Finance Type: undef
Fieldf: 
Name: maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: TMP_232.maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
maxFee_1(uint256) := REF_64(uint256)
asgn
init
end
_______________

Name: TMP_232.maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: maxFee Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for maxFee

Name: maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: numerator, Num: 1
Globalname: numerator
End popogation
TMP_233(uint256) = providedLiquidity_1 (c)* equilibriumFee_1
testing mul...
init
end
init
end

Name: providedLiquidity Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: 6 rnorm: u
init
end
_______________

Name: providedLiquidity Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_233 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_233

Name: TMP_233 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_234(uint256) = TMP_233 (c)* maxFee_1
testing mul...
init
end
init
end

Name: TMP_233 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef

Name: maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: 6 rnorm: u
init
end
_______________

Name: TMP_233 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_234 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_234

Name: TMP_234 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
numerator_1(uint256) := TMP_234(uint256)
asgn
init
end
_______________

Name: TMP_234 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef

Name: numerator Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for numerator

Name: numerator Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: denominator, Num: 1
Globalname: denominator
End popogation
TMP_235(uint256) = equilibriumFee_1 (c)* providedLiquidity_1
testing mul...
init
end
init
end

Name: equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: providedLiquidity Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
lnorm: u rnorm: 6
init
end
_______________

Name: providedLiquidity Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_235 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_235

Name: TMP_235 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_236(uint256) = maxFee_1 (c)- equilibriumFee_1
init
end
init
end
init
end
_______________

Name: equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_236 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_236

Name: TMP_236 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_237(uint256) = TMP_236 (c)* resultingLiquidity_1
testing mul...
init
end
init
end

Name: TMP_236 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: resultingLiquidity Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: resultingLiquidity Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_237 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_237

Name: TMP_237 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_238(uint256) = TMP_235 (c)+ TMP_237
init
end
init
end
init
end
_______________

Name: TMP_235 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_238 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_238

Name: TMP_238 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
denominator_1(uint256) := TMP_238(uint256)
asgn
init
end
_______________

Name: TMP_238 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: denominator Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for denominator

Name: denominator Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_239(bool) = denominator_1 == 0
[i]Type for TMP_239

Name: TMP_239 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: fee, Num: 1
Globalname: fee
End popogation
fee_1(uint256) := 0(uint256)
asgn
init
end
_______________

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef

Name: fee Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for fee

Name: fee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: fee, Num: 2
Globalname: fee
End popogation
TMP_240(uint256) = numerator_1 (c)/ denominator_1
init
end
init
end
lnorm: 6 rnorm: u
Source address: u
init
end
_______________

Name: PIC_153 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_240 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
init
end
init
end
lnorm: 6 rnorm: u
Source address: u
init
end
_______________

Name: PIC_154 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_240 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_240

Name: TMP_240 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
fee_2(uint256) := TMP_240(uint256)
asgn
init
end
_______________

Name: TMP_240 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef

Name: fee Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for fee

Name: fee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_199

Name: TMP_199 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tokenManager_21(ITokenManager) := ϕ(['tokenManager_31'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getAmountToTransfer
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_36(ILiquidityProviders) := ϕ(['liquidityProviders_43'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getAmountToTransfer
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
transferFeePerc_1(uint256) := TMP_199(uint256)
asgn
init
end
_______________

Name: TMP_199 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: transferFeePerc Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for transferFeePerc

Name: transferFeePerc Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: transferFeePerc, Num: 1
Globalname: transferFeePerc
End popogation

Name: BASE_DIVISOR Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: baseGas Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: tokenManager Function: getAmountToTransfer
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getAmountToTransfer
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_200(ITokenManager.TokenInfo) = HIGH_LEVEL_CALL, dest:tokenManager_21(ITokenManager), function:getTokensInfo, arguments:['tokenAddress_1']  
High Call: getTokensInfo
Running querryfc
Written func info: TokenManager, getTokensInfo
[i]Type for TMP_200

Name: TMP_200 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: equilibriumFee
Finance Type: undef
XXXX
BASE_DIVISOR_3(uint256) := ϕ(['BASE_DIVISOR_3', 'BASE_DIVISOR_5', 'BASE_DIVISOR_2'])
Phi
[i]Type for BASE_DIVISOR

Name: BASE_DIVISOR Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
baseGas_5(uint256) := ϕ(['baseGas_2', 'baseGas_1', 'baseGas_4', 'baseGas_9'])
Phi
[i]Type for baseGas

Name: baseGas Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tokenManager_22(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_7', 'tokenManager_1', 'tokenManager_21', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getAmountToTransfer
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_37(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_36', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getAmountToTransfer
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_6(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_5', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulated_3(mapping(address => mapping(address => uint256))) := ϕ(['gasFeeAccumulated_16', 'gasFeeAccumulated_10', 'gasFeeAccumulated_22', 'gasFeeAccumulated_2'])
Phi
[i]Type for gasFeeAccumulated

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_25(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_24'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_44(uint256) -> TMP_200.equilibriumFee
MEMBER
init
end
init
end
init
end
_______________

Name: TMP_200.equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for REF_44

Name: TMP_200.equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: TMP_200, Field: equilibriumFee
#################
Member: 
Name: TMP_200 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: equilibriumFee
Finance Type: undef
Fieldf: 
Name: equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: TMP_200.equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_201(bool) = transferFeePerc_1 > REF_44
init
end
init
end
lnorm: u rnorm: u
init
end
_______________

Name: TMP_200.equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: transferFeePerc Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
init
end
_______________

Name: TMP_200.equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_201 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_201

Name: TMP_201 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: lpFee, Num: 1
Globalname: lpFee
End popogation

Name: BASE_DIVISOR Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: baseGas Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: tokenManager Function: getAmountToTransfer
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getAmountToTransfer
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_202(ITokenManager.TokenInfo) = HIGH_LEVEL_CALL, dest:tokenManager_22(ITokenManager), function:getTokensInfo, arguments:['tokenAddress_1']  
High Call: getTokensInfo
Running querryfc
Written func info: TokenManager, getTokensInfo
[i]Type for TMP_202

Name: TMP_202 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: equilibriumFee
Finance Type: undef
XXXX
BASE_DIVISOR_4(uint256) := ϕ(['BASE_DIVISOR_3', 'BASE_DIVISOR_5'])
Phi
[i]Type for BASE_DIVISOR

Name: BASE_DIVISOR Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
baseGas_6(uint256) := ϕ(['baseGas_2', 'baseGas_1', 'baseGas_5', 'baseGas_9'])
Phi
[i]Type for baseGas

Name: baseGas Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tokenManager_23(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_7', 'tokenManager_1', 'tokenManager_22', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getAmountToTransfer
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_38(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_37', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getAmountToTransfer
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_7(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_6', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulated_4(mapping(address => mapping(address => uint256))) := ϕ(['gasFeeAccumulated_16', 'gasFeeAccumulated_10', 'gasFeeAccumulated_3', 'gasFeeAccumulated_22'])
Phi
[i]Type for gasFeeAccumulated

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_26(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_46(uint256) -> TMP_202.equilibriumFee
MEMBER
init
end
init
end
init
end
_______________

Name: TMP_202.equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for REF_46

Name: TMP_202.equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: TMP_202, Field: equilibriumFee
#################
Member: 
Name: TMP_202 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: equilibriumFee
Finance Type: undef
Fieldf: 
Name: equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: TMP_202.equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_203(uint256) = amount_1 (c)* REF_46
testing mul...
init
end
init
end

Name: amount Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_202.equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: TMP_202.equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_203 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_203

Name: TMP_203 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_204(uint256) = TMP_203 (c)/ BASE_DIVISOR_4
init
end
init
end
lnorm: u rnorm: u
init
end
init
end
init
end
lnorm: u rnorm: u
init
end
[i]Type for TMP_204

Name: TMP_204 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
lpFee_1(uint256) := TMP_204(uint256)
asgn
init
end
_______________

Name: TMP_204 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: lpFee Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for lpFee

Name: lpFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: lpFee, Num: 2
Globalname: lpFee
End popogation
TMP_210(uint256) = amount_1 (c)* transferFeePerc_1
testing mul...
init
end
init
end

Name: amount Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: transferFeePerc Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: transferFeePerc Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_210 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_210

Name: TMP_210 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_211(uint256) = TMP_210 (c)/ BASE_DIVISOR_3
init
end
init
end
lnorm: u rnorm: u
init
end
init
end
init
end
lnorm: u rnorm: u
init
end
[i]Type for TMP_211

Name: TMP_211 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
lpFee_2(uint256) := TMP_211(uint256)
asgn
init
end
_______________

Name: TMP_211 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: lpFee Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for lpFee

Name: lpFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation

Name: BASE_DIVISOR Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: baseGas Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: tokenManager Function: getAmountToTransfer
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getAmountToTransfer
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
REF_47(uint256) -> incentivePool_26[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_47

Name: incentivePool Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_48(uint256) -> incentivePool_26[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_48

Name: incentivePool Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_205(ITokenManager.TokenInfo) = HIGH_LEVEL_CALL, dest:tokenManager_23(ITokenManager), function:getTokensInfo, arguments:['tokenAddress_1']  
High Call: getTokensInfo
Running querryfc
Written func info: TokenManager, getTokensInfo
[i]Type for TMP_205

Name: TMP_205 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: equilibriumFee
Finance Type: undef
XXXX
BASE_DIVISOR_5(uint256) := ϕ(['BASE_DIVISOR_3', 'BASE_DIVISOR_5', 'BASE_DIVISOR_4'])
Phi
[i]Type for BASE_DIVISOR

Name: BASE_DIVISOR Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
baseGas_7(uint256) := ϕ(['baseGas_2', 'baseGas_1', 'baseGas_6', 'baseGas_9'])
Phi
[i]Type for baseGas

Name: baseGas Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tokenManager_24(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_23', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getAmountToTransfer
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_39(ILiquidityProviders) := ϕ(['liquidityProviders_38', 'liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getAmountToTransfer
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_8(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_7', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulated_5(mapping(address => mapping(address => uint256))) := ϕ(['gasFeeAccumulated_16', 'gasFeeAccumulated_10', 'gasFeeAccumulated_4', 'gasFeeAccumulated_22'])
Phi
[i]Type for gasFeeAccumulated

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_27(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_26', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_50(uint256) -> TMP_205.equilibriumFee
MEMBER
init
end
init
end
init
end
_______________

Name: TMP_205.equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for REF_50

Name: TMP_205.equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: TMP_205, Field: equilibriumFee
#################
Member: 
Name: TMP_205 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: equilibriumFee
Finance Type: undef
Fieldf: 
Name: equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: TMP_205.equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_206(uint256) = transferFeePerc_1 (c)- REF_50
init
end
init
end
init
end
_______________

Name: TMP_205.equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_206 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_206

Name: TMP_206 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_207(uint256) = amount_1 (c)* TMP_206
testing mul...
init
end
init
end

Name: amount Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_206 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: TMP_206 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_207 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_207

Name: TMP_207 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_208(uint256) = REF_48 (c)+ TMP_207
init
end
init
end
init
end
_______________

Name: TMP_207 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_208 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_208

Name: TMP_208 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_209(uint256) = TMP_208 (c)/ BASE_DIVISOR_5
init
end
init
end
lnorm: u rnorm: u
init
end
init
end
init
end
lnorm: u rnorm: u
init
end
[i]Type for TMP_209

Name: TMP_209 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_28(mapping(address => uint256)) := ϕ(['incentivePool_26'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_47 (->incentivePool_28) := TMP_209(uint256)
asgn
init
end
_______________

Name: TMP_209 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: REF_47 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_47

Name: REF_47 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
Source address: u
Propogating parameters and globals to SSA variables...
End popogation
Name: lpFee, Num: 3
Globalname: lpFee

Name: lpFee Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
lpFee_3(uint256) := ϕ(['lpFee_1', 'lpFee_2'])
Phi

Name: lpFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: lpFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
init
end
_______________

Name: lpFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: lpFee Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for lpFee

Name: lpFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: transferFeeAmount, Num: 1
Globalname: transferFeeAmount
End popogation
TMP_212(uint256) = amount_1 (c)* transferFeePerc_1
testing mul...
init
end
init
end

Name: amount Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: transferFeePerc Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: transferFeePerc Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_212 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_212

Name: TMP_212 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_213(uint256) = TMP_212 (c)/ BASE_DIVISOR_3
init
end
init
end
lnorm: u rnorm: u
init
end
init
end
init
end
lnorm: u rnorm: u
init
end
[i]Type for TMP_213

Name: TMP_213 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
transferFeeAmount_1(uint256) := TMP_213(uint256)
asgn
init
end
_______________

Name: TMP_213 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: transferFeeAmount Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for transferFeeAmount

Name: transferFeeAmount Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation

Name: baseGas Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: tokenManager Function: getAmountToTransfer
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getAmountToTransfer
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
HIGH_LEVEL_CALL, dest:liquidityProviders_37(ILiquidityProviders), function:addLPFee, arguments:['tokenAddress_1', 'lpFee_3']  
High Call: addLPFee
baseGas_8(uint256) := ϕ(['baseGas_2', 'baseGas_1', 'baseGas_7', 'baseGas_9'])
Phi
[i]Type for baseGas

Name: baseGas Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tokenManager_25(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_24', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getAmountToTransfer
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_40(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_39', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getAmountToTransfer
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_9(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_8', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulated_6(mapping(address => mapping(address => uint256))) := ϕ(['gasFeeAccumulated_16', 'gasFeeAccumulated_10', 'gasFeeAccumulated_22', 'gasFeeAccumulated_5'])
Phi
[i]Type for gasFeeAccumulated

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Source address: u
Name: initialGas, Num: 1
Globalname: initialGas
Name: totalGasUsed, Num: 1
Globalname: totalGasUsed
End popogation
TMP_215(uint256) = SOLIDITY_CALL gasleft()()
[i]Type for TMP_215

Name: TMP_215 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_216(uint256) = initialGas_1 (c)- TMP_215
init
end
init
end
init
end
_______________

Name: TMP_215 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_216 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_216

Name: TMP_216 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
totalGasUsed_1(uint256) := TMP_216(uint256)
asgn
init
end
_______________

Name: TMP_216 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: totalGasUsed Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for totalGasUsed

Name: totalGasUsed Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: totalGasUsed, Num: 1
Globalname: totalGasUsed
Name: totalGasUsed, Num: 2
Globalname: totalGasUsed
End popogation

Name: baseGas Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: tokenManager Function: getAmountToTransfer
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_217(ITokenManager.TokenInfo) = HIGH_LEVEL_CALL, dest:tokenManager_25(ITokenManager), function:getTokensInfo, arguments:['tokenAddress_1']  
High Call: getTokensInfo
Running querryfc
Written func info: TokenManager, getTokensInfo
[i]Type for TMP_217

Name: TMP_217 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: transferOverhead
Finance Type: undef
XXXX
baseGas_9(uint256) := ϕ(['baseGas_2', 'baseGas_1', 'baseGas_8', 'baseGas_9'])
Phi
[i]Type for baseGas

Name: baseGas Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tokenManager_26(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_25', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getAmountToTransfer
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_10(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_9', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulated_7(mapping(address => mapping(address => uint256))) := ϕ(['gasFeeAccumulated_16', 'gasFeeAccumulated_10', 'gasFeeAccumulated_22', 'gasFeeAccumulated_6'])
Phi
[i]Type for gasFeeAccumulated

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_53(uint256) -> TMP_217.transferOverhead
MEMBER
init
end
init
end
init
end
_______________

Name: TMP_217.transferOverhead Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: transferOverhead Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for REF_53

Name: TMP_217.transferOverhead Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: TMP_217, Field: transferOverhead
#################
Member: 
Name: TMP_217 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: transferOverhead
Finance Type: undef
Fieldf: 
Name: transferOverhead Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: TMP_217.transferOverhead Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: transferOverhead Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_218(uint256) = totalGasUsed_1 (c)+ REF_53
init
end
init
end
init
end
_______________

Name: TMP_217.transferOverhead Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_218 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_218

Name: TMP_218 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
totalGasUsed_2(uint256) := TMP_218(uint256)
asgn
init
end
_______________

Name: TMP_218 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: totalGasUsed Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for totalGasUsed

Name: totalGasUsed Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: totalGasUsed, Num: 3
Globalname: totalGasUsed
End popogation
TMP_219(uint256) = totalGasUsed_2 (c)+ baseGas_9
init
end
init
end
init
end
_______________

Name: baseGas Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_219 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_219

Name: TMP_219 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
totalGasUsed_3(uint256) := TMP_219(uint256)
asgn
init
end
_______________

Name: TMP_219 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: totalGasUsed Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for totalGasUsed

Name: totalGasUsed Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Source address: u
Name: tokenGasPrice, Num: 1
Globalname: tokenGasPrice
Name: gasFee, Num: 1
Globalname: gasFee
End popogation
TMP_220(uint256) = totalGasUsed_3 (c)* tokenGasPrice_1
testing mul...
init
end
init
end

Name: totalGasUsed Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: tokenGasPrice_1 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: totalGasUsed Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_220 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_220

Name: TMP_220 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
gasFee_1(uint256) := TMP_220(uint256)
asgn
init
end
_______________

Name: TMP_220 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: gasFee Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for gasFee

Name: gasFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
REF_54(uint256) -> gasFeeAccumulatedByToken_10[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_54

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_55(uint256) -> gasFeeAccumulatedByToken_10[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_55

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_221(uint256) = REF_55 (c)+ gasFee_1
init
end
init
end
init
end
_______________

Name: gasFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_221 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_221

Name: TMP_221 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_11(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_10'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_54 (->gasFeeAccumulatedByToken_11) := TMP_221(uint256)
asgn
init
end
_______________

Name: TMP_221 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: REF_54 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_54

Name: REF_54 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
Source address: u
Propogating parameters and globals to SSA variables...
End popogation

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
REF_56(mapping(address => uint256)) -> gasFeeAccumulated_7[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_56

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_222(address) = INTERNAL_CALL, LiquidityPool._msgSender()()
init
end
_______________

Name: PIC_33 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_222 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_222

Name: TMP_222 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_57(uint256) -> REF_56[TMP_222]
INDEX
Source address: u
[i]Type for REF_57

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_58(mapping(address => uint256)) -> gasFeeAccumulated_8[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_58

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_223(address) = INTERNAL_CALL, LiquidityPool._msgSender()()
init
end
_______________

Name: PIC_33 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_223 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_223

Name: TMP_223 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_59(uint256) -> REF_58[TMP_223]
INDEX
Source address: u
[i]Type for REF_59

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_224(uint256) = REF_59 (c)+ gasFee_1
init
end
init
end
init
end
_______________

Name: gasFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_224 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_224

Name: TMP_224 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulated_10(mapping(address => mapping(address => uint256))) := ϕ(['gasFeeAccumulated_7'])
Phi
[i]Type for gasFeeAccumulated

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_57 (->gasFeeAccumulated_10) := TMP_224(uint256)
asgn
init
end
_______________

Name: TMP_224 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: REF_57 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_57

Name: REF_57 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
Source address: u
Propogating parameters and globals to SSA variables...
Name: amountToTransfer, Num: 1
Globalname: amountToTransfer
End popogation
TMP_225(uint256) = transferFeeAmount_1 (c)+ gasFee_1
init
end
init
end
init
end
_______________

Name: gasFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_225 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_225

Name: TMP_225 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_226(uint256) = amount_1 (c)- TMP_225
init
end
init
end
init
end
_______________

Name: TMP_225 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_226 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_226

Name: TMP_226 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
amountToTransfer_1(uint256) := TMP_226(uint256)
asgn
init
end
_______________

Name: TMP_226 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amountToTransfer Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for amountToTransfer

Name: amountToTransfer Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Source address: u
Source address: u
[i]Type for TMP_179

Name: TMP_179 Function: sendFundsToUser
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_33(ILiquidityProviders) := ϕ(['liquidityProviders_40'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: sendFundsToUser
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
amountToTransfer_1(uint256) := TMP_179(uint256)
asgn
init
end
_______________

Name: TMP_179 Function: sendFundsToUser
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amountToTransfer Function: sendFundsToUser
Num: -982
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for amountToTransfer

Name: amountToTransfer Function: sendFundsToUser
Num: -982
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation

Name: NATIVE Function: sendFundsToUser
Num: -1
Den: -1
Address: 3
Norm: 6
LF: NATIVE
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: sendFundsToUser
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid
HIGH_LEVEL_CALL, dest:liquidityProviders_33(ILiquidityProviders), function:decreaseCurrentLiquidity, arguments:['tokenAddress_1', 'amountToTransfer_1']  
High Call: decreaseCurrentLiquidity
NATIVE_18(address) := ϕ(['NATIVE_17', 'NATIVE_28', 'NATIVE_8', 'NATIVE_22', 'NATIVE_18', 'NATIVE_32'])
Phi
[i]Type for NATIVE

Name: NATIVE Function: sendFundsToUser
Num: -1
Den: -1
Address: 3
Norm: 6
LF: NATIVE
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_34(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_33', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: sendFundsToUser
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_181(bool) = tokenAddress_1 == NATIVE_18
[i]Type for TMP_181

Name: TMP_181 Function: sendFundsToUser
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_187 = CONVERT tokenAddress_1 to IERC20Upgradeable
Converting tokenAddress_1

Name: tokenAddress Function: None
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
init
end
_______________

Name: tokenAddress Function: None
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef

Name: TMP_187 Function: sendFundsToUser
Num: 
Den: 
Address: -982
Norm: 6
LF: ERC20Upgradeable
Value: u
Fields: 
Finance Type: undef
ERC20Upgradeable
[i]Type for TMP_187

Name: TMP_187 Function: sendFundsToUser
Num: 
Den: 
Address: -982
Norm: 6
LF: ERC20Upgradeable
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_188 = CONVERT this to address
Converting this
5
[i]Type for TMP_188

Name: TMP_188 Function: sendFundsToUser
Num: 
Den: 
Address: 5
Norm: u
LF: LiquidityPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_189(uint256) = HIGH_LEVEL_CALL, dest:TMP_187(IERC20Upgradeable), function:balanceOf, arguments:['TMP_188']  
High Call: balanceOf
Running querryfc
Written func info: ERC20Upgradeable, balanceOf
Handling balance function!
-982
[i]Type for TMP_189

Name: TMP_189 Function: sendFundsToUser
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
TMP_190(bool) = TMP_189 >= amountToTransfer_1
init
end
init
end
lnorm: 6 rnorm: u
-982
-1
[i]Type for TMP_190

Name: TMP_190 Function: sendFundsToUser
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
TMP_191(None) = SOLIDITY_CALL require(bool,string)(TMP_190,Not Enough Balance)
[i]Type for TMP_191

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_192 = CONVERT tokenAddress_1 to IERC20Upgradeable
Converting tokenAddress_1

Name: tokenAddress Function: None
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
init
end
_______________

Name: tokenAddress Function: None
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef

Name: TMP_192 Function: sendFundsToUser
Num: 
Den: 
Address: -982
Norm: 6
LF: ERC20Upgradeable
Value: u
Fields: 
Finance Type: undef
ERC20Upgradeable
[i]Type for TMP_192

Name: TMP_192 Function: sendFundsToUser
Num: 
Den: 
Address: -982
Norm: 6
LF: ERC20Upgradeable
Value: u
Fields: 
Finance Type: undef
XXXX
LIBRARY_CALL, dest:SafeERC20Upgradeable, function:SafeERC20Upgradeable.safeTransfer(IERC20Upgradeable,address,uint256), arguments:['TMP_192', 'receiver_1', 'amountToTransfer_1'] 
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Source address: u
Name: depositHash, Num: 1
Globalname: depositHash
Source address: u
Name: fromChainId, Num: 1
Globalname: fromChainId
End popogation
Propogating parameters and globals to SSA variables...
End popogation
TMP_182 = CONVERT this to address
Converting this
5
[i]Type for TMP_182

Name: TMP_182 Function: sendFundsToUser
Num: 
Den: 
Address: 5
Norm: u
LF: LiquidityPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_183(uint256) = SOLIDITY_CALL balance(address)(TMP_182)
[i]Type for TMP_183

Name: TMP_183 Function: None
Num: -982
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_184(bool) = TMP_183 >= amountToTransfer_1
init
end
init
end
lnorm: u rnorm: u
-982
-1
[i]Type for TMP_184

Name: TMP_184 Function: sendFundsToUser
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_185(None) = SOLIDITY_CALL require(bool,string)(TMP_184,Not Enough Balance)
[i]Type for TMP_185

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: success, Num: 1
Globalname: success
End popogation
TUPLE_1(bool,bytes) = LOW_LEVEL_CALL, dest:receiver_1, function:call, arguments:[''] value:amountToTransfer_1 
[i]Type for TUPLE_1

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
success_1(bool)= UNPACK TUPLE_1 index: 0 
Finding type for success(bool ... )
[i]Type for success

Name: success Function: sendFundsToUser
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: success, Num: 1
Globalname: success
End popogation
TMP_186(None) = SOLIDITY_CALL require(bool,string)(success_1,Native Transfer Failed)
[i]Type for TMP_186

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX


NATIVE_9(address) := ϕ(['NATIVE_28', 'NATIVE_0', 'NATIVE_8', 'NATIVE_22', 'NATIVE_18', 'NATIVE_32'])
tokenManager_13(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_0', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
liquidityProviders_25(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
MODIFIER_CALL, ReentrancyGuardUpgradeable.nonReentrant()()
MODIFIER_CALL, LiquidityPool.onlyExecutor()()
MODIFIER_CALL, LiquidityPool.tokenChecks(address)(tokenAddress_1)
tokenManager_16(ITokenManager) := ϕ(['tokenManager_33'])
MODIFIER_CALL, PausableUpgradeable.whenNotPaused()()
TMP_167(uint256) = SOLIDITY_CALL gasleft()()
initialGas_1(uint256) := TMP_167(uint256)
TMP_168(ITokenManager.TokenConfig) = HIGH_LEVEL_CALL, dest:tokenManager_17(ITokenManager), function:getTransferConfig, arguments:['tokenAddress_1']  
NATIVE_14(address) := ϕ(['NATIVE_28', 'NATIVE_8', 'NATIVE_13', 'NATIVE_22', 'NATIVE_18', 'NATIVE_32'])
tokenManager_18(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_17', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
liquidityProviders_30(ILiquidityProviders) := ϕ(['liquidityProviders_29', 'liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
REF_35(uint256) -> TMP_168.min
TMP_169(bool) = REF_35 <= amount_1
TMP_170(ITokenManager.TokenConfig) = HIGH_LEVEL_CALL, dest:tokenManager_18(ITokenManager), function:getTransferConfig, arguments:['tokenAddress_1']  
NATIVE_15(address) := ϕ(['NATIVE_14', 'NATIVE_28', 'NATIVE_8', 'NATIVE_22', 'NATIVE_18', 'NATIVE_32'])
tokenManager_19(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_18', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
liquidityProviders_31(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_30', 'liquidityProviders_40', 'liquidityProviders_1'])
REF_37(uint256) -> TMP_170.max
TMP_171(bool) = REF_37 >= amount_1
TMP_172(bool) = TMP_169 && TMP_171
TMP_173(None) = SOLIDITY_CALL require(bool,string)(TMP_172,Withdraw amnt not in Cap limits)
TMP_174 = CONVERT 0 to address
TMP_175(bool) = receiver_1 != TMP_174
TMP_176(None) = SOLIDITY_CALL require(bool,string)(TMP_175,Bad receiver address)
TUPLE_0(bytes32,bool) = INTERNAL_CALL, LiquidityPool.checkHashStatus(address,uint256,address,bytes)(tokenAddress_1,amount_1,receiver_1,depositHash_1)
hashSendTransaction_1(bytes32)= UNPACK TUPLE_0 index: 0 
status_1(bool)= UNPACK TUPLE_0 index: 1 
TMP_177 = ! status_1 
TMP_178(None) = SOLIDITY_CALL require(bool,string)(TMP_177,Already Processed)
REF_38(bool) -> processedHash_0[hashSendTransaction_1]
processedHash_1(mapping(bytes32 => bool)) := ϕ(['processedHash_0'])
REF_38 (->processedHash_1) := True(bool)
TMP_179(uint256) = INTERNAL_CALL, LiquidityPool.getAmountToTransfer(uint256,address,uint256,uint256)(initialGas_1,tokenAddress_1,amount_1,tokenGasPrice_1)
liquidityProviders_33(ILiquidityProviders) := ϕ(['liquidityProviders_40'])
amountToTransfer_1(uint256) := TMP_179(uint256)
HIGH_LEVEL_CALL, dest:liquidityProviders_33(ILiquidityProviders), function:decreaseCurrentLiquidity, arguments:['tokenAddress_1', 'amountToTransfer_1']  
NATIVE_18(address) := ϕ(['NATIVE_17', 'NATIVE_28', 'NATIVE_8', 'NATIVE_22', 'NATIVE_18', 'NATIVE_32'])
liquidityProviders_34(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_33', 'liquidityProviders_40', 'liquidityProviders_1'])
TMP_181(bool) = tokenAddress_1 == NATIVE_18
CONDITION TMP_181
TMP_187 = CONVERT tokenAddress_1 to IERC20Upgradeable
TMP_188 = CONVERT this to address
TMP_189(uint256) = HIGH_LEVEL_CALL, dest:TMP_187(IERC20Upgradeable), function:balanceOf, arguments:['TMP_188']  
TMP_190(bool) = TMP_189 >= amountToTransfer_1
TMP_191(None) = SOLIDITY_CALL require(bool,string)(TMP_190,Not Enough Balance)
TMP_192 = CONVERT tokenAddress_1 to IERC20Upgradeable
LIBRARY_CALL, dest:SafeERC20Upgradeable, function:SafeERC20Upgradeable.safeTransfer(IERC20Upgradeable,address,uint256), arguments:['TMP_192', 'receiver_1', 'amountToTransfer_1'] 
Emit AssetSent(tokenAddress_1,amount_1,amountToTransfer_1,receiver_1,depositHash_1,fromChainId_1)
TMP_182 = CONVERT this to address
TMP_183(uint256) = SOLIDITY_CALL balance(address)(TMP_182)
TMP_184(bool) = TMP_183 >= amountToTransfer_1
TMP_185(None) = SOLIDITY_CALL require(bool,string)(TMP_184,Not Enough Balance)
TUPLE_1(bool,bytes) = LOW_LEVEL_CALL, dest:receiver_1, function:call, arguments:[''] value:amountToTransfer_1 
success_1(bool)= UNPACK TUPLE_1 index: 0 
TMP_186(None) = SOLIDITY_CALL require(bool,string)(success_1,Native Transfer Failed)


Propogating parameters and globals to SSA variables...
End popogation

Name: NATIVE Function: sendFundsToUser
Num: -1
Den: -1
Address: 3
Norm: 6
LF: NATIVE
Value: u
Fields: 
Finance Type: undef
Phid

Name: tokenManager Function: sendFundsToUser
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: sendFundsToUser
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid
NATIVE_9(address) := ϕ(['NATIVE_28', 'NATIVE_0', 'NATIVE_8', 'NATIVE_22', 'NATIVE_18', 'NATIVE_32'])
Phi
[i]Type for NATIVE

Name: NATIVE Function: sendFundsToUser
Num: -1
Den: -1
Address: 3
Norm: 6
LF: NATIVE
Value: u
Fields: 
Finance Type: undef
XXXX
tokenManager_13(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_0', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: sendFundsToUser
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_25(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: sendFundsToUser
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, ReentrancyGuardUpgradeable.nonReentrant()()
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, LiquidityPool.onlyExecutor()()
Propogating parameters and globals to SSA variables...
End popogation

Name: tokenManager Function: sendFundsToUser
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid
MODIFIER_CALL, LiquidityPool.tokenChecks(address)(tokenAddress_1)
init
end
[[], [], 6, 'tokenAddress', [], -1, -982, 'u']

Name: tokenAddress Function: None
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
Source address: -982

Name: tokenAddress_1 Function: tokenChecks
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
Phid

Name: tokenManager Function: tokenChecks
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid
tokenAddress_1(address) := ϕ(['tokenAddress_1', 'tokenAddress_1'])
Phi
[i]Type for tokenAddress

Name: tokenAddress Function: tokenChecks
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
XXXX
tokenManager_32(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_0', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: tokenChecks
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_319 = CONVERT 0 to address
Converting 0

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
_______________

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_319 Function: tokenChecks
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_319

Name: TMP_319 Function: tokenChecks
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_320(bool) = tokenAddress_1 != TMP_319
[i]Type for TMP_320

Name: TMP_320 Function: tokenChecks
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_321(None) = SOLIDITY_CALL require(bool,string)(TMP_320,Token address cannot be 0)
[i]Type for TMP_321

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation

Name: tokenManager Function: tokenChecks
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid
TMP_322(ITokenManager.TokenInfo) = HIGH_LEVEL_CALL, dest:tokenManager_32(ITokenManager), function:getTokensInfo, arguments:['tokenAddress_1']  
High Call: getTokensInfo
Running querryfc
Written func info: TokenManager, getTokensInfo
[i]Type for TMP_322

Name: TMP_322 Function: tokenChecks
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: supportedToken
Finance Type: undef
XXXX
tokenManager_33(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_7', 'tokenManager_1', 'tokenManager_32', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: tokenChecks
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
REF_88(bool) -> TMP_322.supportedToken
MEMBER
init
end
init
end
init
end
_______________

Name: TMP_322.supportedToken Function: tokenChecks
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: supportedToken Function: tokenChecks
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for REF_88

Name: TMP_322.supportedToken Function: tokenChecks
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: TMP_322, Field: supportedToken
#################
Member: 
Name: TMP_322 Function: tokenChecks
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: supportedToken
Finance Type: undef
Fieldf: 
Name: supportedToken Function: tokenChecks
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: TMP_322.supportedToken Function: tokenChecks
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: supportedToken Function: tokenChecks
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_323(None) = SOLIDITY_CALL require(bool,string)(REF_88,Token not supported)
[i]Type for TMP_323

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Source address: -982

Name: tokenAddress_1 Function: tokenChecks
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
Phid

Name: tokenManager Function: tokenChecks
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid
tokenAddress_1(address) := ϕ(['tokenAddress_1', 'tokenAddress_1'])
Phi
[i]Type for tokenAddress

Name: tokenAddress Function: tokenChecks
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
XXXX
tokenManager_32(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_0', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: tokenChecks
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_319 = CONVERT 0 to address
Converting 0

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
_______________

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_319 Function: tokenChecks
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_319

Name: TMP_319 Function: tokenChecks
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_320(bool) = tokenAddress_1 != TMP_319
[i]Type for TMP_320

Name: TMP_320 Function: tokenChecks
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_321(None) = SOLIDITY_CALL require(bool,string)(TMP_320,Token address cannot be 0)
[i]Type for TMP_321

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation

Name: tokenManager Function: tokenChecks
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid
TMP_322(ITokenManager.TokenInfo) = HIGH_LEVEL_CALL, dest:tokenManager_32(ITokenManager), function:getTokensInfo, arguments:['tokenAddress_1']  
High Call: getTokensInfo
Running querryfc
Written func info: TokenManager, getTokensInfo
[i]Type for TMP_322

Name: TMP_322 Function: tokenChecks
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: supportedToken
Finance Type: undef
XXXX
tokenManager_33(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_7', 'tokenManager_1', 'tokenManager_32', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: tokenChecks
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
REF_88(bool) -> TMP_322.supportedToken
MEMBER
init
end
init
end
init
end
_______________

Name: TMP_322.supportedToken Function: tokenChecks
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: supportedToken Function: tokenChecks
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for REF_88

Name: TMP_322.supportedToken Function: tokenChecks
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: TMP_322, Field: supportedToken
#################
Member: 
Name: TMP_322 Function: tokenChecks
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: supportedToken
Finance Type: undef
Fieldf: 
Name: supportedToken Function: tokenChecks
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: TMP_322.supportedToken Function: tokenChecks
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: supportedToken Function: tokenChecks
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_323(None) = SOLIDITY_CALL require(bool,string)(REF_88,Token not supported)
[i]Type for TMP_323

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
tokenManager_16(ITokenManager) := ϕ(['tokenManager_33'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: sendFundsToUser
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, PausableUpgradeable.whenNotPaused()()
Propogating parameters and globals to SSA variables...
Name: initialGas, Num: 1
Globalname: initialGas
End popogation
TMP_167(uint256) = SOLIDITY_CALL gasleft()()
[i]Type for TMP_167

Name: TMP_167 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
initialGas_1(uint256) := TMP_167(uint256)
asgn
init
end
_______________

Name: TMP_167 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: initialGas Function: sendFundsToUser
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for initialGas

Name: initialGas Function: sendFundsToUser
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation

Name: NATIVE Function: sendFundsToUser
Num: -1
Den: -1
Address: 3
Norm: 6
LF: NATIVE
Value: u
Fields: 
Finance Type: undef
Phid

Name: tokenManager Function: sendFundsToUser
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: sendFundsToUser
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: NATIVE Function: sendFundsToUser
Num: -1
Den: -1
Address: 3
Norm: 6
LF: NATIVE
Value: u
Fields: 
Finance Type: undef
Phid

Name: tokenManager Function: sendFundsToUser
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: sendFundsToUser
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid
TMP_168(ITokenManager.TokenConfig) = HIGH_LEVEL_CALL, dest:tokenManager_17(ITokenManager), function:getTransferConfig, arguments:['tokenAddress_1']  
High Call: getTransferConfig
Running querryfc
Written func info: TokenManager, getTransferConfig
[i]Type for TMP_168

Name: TMP_168 Function: sendFundsToUser
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: min
Finance Type: undef
XXXX
NATIVE_14(address) := ϕ(['NATIVE_28', 'NATIVE_8', 'NATIVE_13', 'NATIVE_22', 'NATIVE_18', 'NATIVE_32'])
Phi
[i]Type for NATIVE

Name: NATIVE Function: sendFundsToUser
Num: -1
Den: -1
Address: 3
Norm: 6
LF: NATIVE
Value: u
Fields: 
Finance Type: undef
XXXX
tokenManager_18(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_17', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: sendFundsToUser
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_30(ILiquidityProviders) := ϕ(['liquidityProviders_29', 'liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: sendFundsToUser
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
REF_35(uint256) -> TMP_168.min
MEMBER
init
end
init
end
init
end
_______________

Name: TMP_168.min Function: sendFundsToUser
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: min Function: sendFundsToUser
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for REF_35

Name: TMP_168.min Function: sendFundsToUser
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: TMP_168, Field: min
#################
Member: 
Name: TMP_168 Function: sendFundsToUser
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: min
Finance Type: undef
Fieldf: 
Name: min Function: sendFundsToUser
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: TMP_168.min Function: sendFundsToUser
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: min Function: sendFundsToUser
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_169(bool) = REF_35 <= amount_1
init
end
init
end
lnorm: u rnorm: u
[i]Type for TMP_169

Name: TMP_169 Function: sendFundsToUser
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_170(ITokenManager.TokenConfig) = HIGH_LEVEL_CALL, dest:tokenManager_18(ITokenManager), function:getTransferConfig, arguments:['tokenAddress_1']  
High Call: getTransferConfig
Running querryfc
Written func info: TokenManager, getTransferConfig
[i]Type for TMP_170

Name: TMP_170 Function: sendFundsToUser
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: max
Finance Type: undef
XXXX
NATIVE_15(address) := ϕ(['NATIVE_14', 'NATIVE_28', 'NATIVE_8', 'NATIVE_22', 'NATIVE_18', 'NATIVE_32'])
Phi
[i]Type for NATIVE

Name: NATIVE Function: sendFundsToUser
Num: -1
Den: -1
Address: 3
Norm: 6
LF: NATIVE
Value: u
Fields: 
Finance Type: undef
XXXX
tokenManager_19(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_18', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: sendFundsToUser
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_31(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_30', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: sendFundsToUser
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
REF_37(uint256) -> TMP_170.max
MEMBER
init
end
init
end
init
end
_______________

Name: TMP_170.max Function: sendFundsToUser
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: max Function: sendFundsToUser
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for REF_37

Name: TMP_170.max Function: sendFundsToUser
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: TMP_170, Field: max
#################
Member: 
Name: TMP_170 Function: sendFundsToUser
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: max
Finance Type: undef
Fieldf: 
Name: max Function: sendFundsToUser
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: TMP_170.max Function: sendFundsToUser
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: max Function: sendFundsToUser
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_171(bool) = REF_37 >= amount_1
init
end
init
end
lnorm: u rnorm: u
[i]Type for TMP_171

Name: TMP_171 Function: sendFundsToUser
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_172(bool) = TMP_169 && TMP_171
[i]Type for TMP_172

Name: TMP_172 Function: sendFundsToUser
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_173(None) = SOLIDITY_CALL require(bool,string)(TMP_172,Withdraw amnt not in Cap limits)
[i]Type for TMP_173

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_174 = CONVERT 0 to address
Converting 0

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
_______________

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_174 Function: sendFundsToUser
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_174

Name: TMP_174 Function: sendFundsToUser
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_175(bool) = receiver_1 != TMP_174
[i]Type for TMP_175

Name: TMP_175 Function: sendFundsToUser
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_176(None) = SOLIDITY_CALL require(bool,string)(TMP_175,Bad receiver address)
[i]Type for TMP_176

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Source address: u
Name: depositHash, Num: 1
Globalname: depositHash
Name: hashSendTransaction, Num: 1
Globalname: hashSendTransaction
End popogation
TUPLE_0(bytes32,bool) = INTERNAL_CALL, LiquidityPool.checkHashStatus(address,uint256,address,bytes)(tokenAddress_1,amount_1,receiver_1,depositHash_1)
init
end
init
end
init
end
init
end
[[], [], 6, 'tokenAddress', [], -1, -982, 'u']

Name: tokenAddress Function: None
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[], [], 0, 'receiver', [], -1, -981, 'u']

Name: receiver Function: None
Num: 
Den: 
Address: -981
Norm: 0
LF: receiver
Value: u
Fields: 
Finance Type: undef
[[], [], 'u', None, [], -1, 'u', 'u']

Name: depositHash Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
Source address: -982

Name: tokenAddress_1 Function: checkHashStatus
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
Phid
Source address: u

Name: amount_1 Function: checkHashStatus
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Source address: -981

Name: receiver_1 Function: checkHashStatus
Num: 
Den: 
Address: -981
Norm: 0
LF: receiver
Value: u
Fields: 
Finance Type: undef
Phid
Source address: u
Name: depositHash, Num: 1
Globalname: depositHash

Name: depositHash_1 Function: checkHashStatus
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: processedHash Function: checkHashStatus
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
tokenAddress_1(address) := ϕ(['tokenAddress_1'])
Phi
[i]Type for tokenAddress

Name: tokenAddress Function: checkHashStatus
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount_1'])
Phi
[i]Type for amount

Name: amount Function: checkHashStatus
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
receiver_1(address) := ϕ(['receiver_1'])
Phi
[i]Type for receiver

Name: receiver Function: checkHashStatus
Num: 
Den: 
Address: -981
Norm: 0
LF: receiver
Value: u
Fields: 
Finance Type: undef
XXXX
depositHash_1(bytes) := ϕ(['depositHash_1'])
Phi

Name: depositHash Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for depositHash

Name: depositHash Function: checkHashStatus
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
processedHash_2(mapping(bytes32 => bool)) := ϕ(['processedHash_0', 'processedHash_2', 'processedHash_1'])
Phi
[i]Type for processedHash

Name: processedHash Function: checkHashStatus
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Source address: u
Name: depositHash, Num: 1
Globalname: depositHash
Name: hashSendTransaction, Num: 1
Globalname: hashSendTransaction
End popogation
TMP_241(bytes32) = SOLIDITY_CALL keccak256(bytes)(depositHash_1)
[i]Type for TMP_241

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_242(bytes) = SOLIDITY_CALL abi.encode()(tokenAddress_1,amount_1,receiver_1,TMP_241)
[i]Type for TMP_242

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_243(bytes32) = SOLIDITY_CALL keccak256(bytes)(TMP_242)
[i]Type for TMP_243

Name: TMP_243 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
hashSendTransaction_1(bytes32) := TMP_243(bytes32)
asgn
init
end
_______________

Name: TMP_243 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: hashSendTransaction Function: checkHashStatus
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for hashSendTransaction

Name: hashSendTransaction Function: checkHashStatus
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: hashSendTransaction, Num: 1
Globalname: hashSendTransaction
Name: status, Num: 1
Globalname: status
End popogation
REF_66(bool) -> processedHash_2[hashSendTransaction_1]
INDEX
[i]Type for REF_66

Name: processedHash Function: checkHashStatus
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
status_1(bool) := REF_66(bool)
asgn
init
end
_______________

Name: processedHash Function: checkHashStatus
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: status Function: checkHashStatus
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for status

Name: status Function: checkHashStatus
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: hashSendTransaction, Num: 1
Globalname: hashSendTransaction
End popogation
RETURN hashSendTransaction_1,status_1
RETURN
init
end

Name: hashSendTransaction Function: checkHashStatus
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
init
end

Name: status Function: checkHashStatus
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
Source address: -982

Name: tokenAddress_1 Function: checkHashStatus
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
Phid
Source address: u

Name: amount_1 Function: checkHashStatus
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Source address: -981

Name: receiver_1 Function: checkHashStatus
Num: 
Den: 
Address: -981
Norm: 0
LF: receiver
Value: u
Fields: 
Finance Type: undef
Phid
Source address: u
Name: depositHash, Num: 1
Globalname: depositHash

Name: depositHash_1 Function: checkHashStatus
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: processedHash Function: checkHashStatus
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
tokenAddress_1(address) := ϕ(['tokenAddress_1'])
Phi
[i]Type for tokenAddress

Name: tokenAddress Function: checkHashStatus
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount_1'])
Phi
[i]Type for amount

Name: amount Function: checkHashStatus
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
receiver_1(address) := ϕ(['receiver_1'])
Phi
[i]Type for receiver

Name: receiver Function: checkHashStatus
Num: 
Den: 
Address: -981
Norm: 0
LF: receiver
Value: u
Fields: 
Finance Type: undef
XXXX
depositHash_1(bytes) := ϕ(['depositHash_1'])
Phi

Name: depositHash Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for depositHash

Name: depositHash Function: checkHashStatus
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
processedHash_2(mapping(bytes32 => bool)) := ϕ(['processedHash_0', 'processedHash_2', 'processedHash_1'])
Phi
[i]Type for processedHash

Name: processedHash Function: checkHashStatus
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Source address: u
Name: depositHash, Num: 1
Globalname: depositHash
Name: hashSendTransaction, Num: 1
Globalname: hashSendTransaction
End popogation
TMP_241(bytes32) = SOLIDITY_CALL keccak256(bytes)(depositHash_1)
[i]Type for TMP_241

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_242(bytes) = SOLIDITY_CALL abi.encode()(tokenAddress_1,amount_1,receiver_1,TMP_241)
[i]Type for TMP_242

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_243(bytes32) = SOLIDITY_CALL keccak256(bytes)(TMP_242)
[i]Type for TMP_243

Name: TMP_243 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
hashSendTransaction_1(bytes32) := TMP_243(bytes32)
asgn
init
end
_______________

Name: TMP_243 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: hashSendTransaction Function: checkHashStatus
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for hashSendTransaction

Name: hashSendTransaction Function: checkHashStatus
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: hashSendTransaction, Num: 1
Globalname: hashSendTransaction
Name: status, Num: 1
Globalname: status
End popogation
REF_66(bool) -> processedHash_2[hashSendTransaction_1]
INDEX
[i]Type for REF_66

Name: processedHash Function: checkHashStatus
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
status_1(bool) := REF_66(bool)
asgn
init
end
_______________

Name: processedHash Function: checkHashStatus
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: status Function: checkHashStatus
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for status

Name: status Function: checkHashStatus
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: hashSendTransaction, Num: 1
Globalname: hashSendTransaction
End popogation
RETURN hashSendTransaction_1,status_1
RETURN
init
end

Name: hashSendTransaction Function: checkHashStatus
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
init
end

Name: status Function: checkHashStatus
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TUPLE_0

Name: TUPLE_0 Function: sendFundsToUser
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
hashSendTransaction_1(bytes32)= UNPACK TUPLE_0 index: 0 
([], [], 'u', 'u', 'u', -1)
[i]Type for hashSendTransaction

Name: hashSendTransaction Function: sendFundsToUser
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
status_1(bool)= UNPACK TUPLE_0 index: 1 
([-1], [-1], 'u', 'u', 'u', -1)
[i]Type for status

Name: status Function: sendFundsToUser
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_177 = ! status_1 
[i]Type for TMP_177

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_178(None) = SOLIDITY_CALL require(bool,string)(TMP_177,Already Processed)
[i]Type for TMP_178

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: hashSendTransaction, Num: 1
Globalname: hashSendTransaction
End popogation

Name: processedHash Function: sendFundsToUser
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
REF_38(bool) -> processedHash_0[hashSendTransaction_1]
INDEX
[i]Type for REF_38

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: True
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
processedHash_1(mapping(bytes32 => bool)) := ϕ(['processedHash_0'])
Phi
[i]Type for processedHash

Name: processedHash Function: sendFundsToUser
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_38 (->processedHash_1) := True(bool)
asgn
init
end
_______________

Name: True Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef

Name: REF_38 Function: sendFundsToUser
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: True
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_38

Name: REF_38 Function: sendFundsToUser
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: True
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
Source address: u
Propogating parameters and globals to SSA variables...
Name: initialGas, Num: 1
Globalname: initialGas
Source address: u
Name: tokenGasPrice, Num: 1
Globalname: tokenGasPrice
End popogation

Name: liquidityProviders Function: sendFundsToUser
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid
TMP_179(uint256) = INTERNAL_CALL, LiquidityPool.getAmountToTransfer(uint256,address,uint256,uint256)(initialGas_1,tokenAddress_1,amount_1,tokenGasPrice_1)
init
end
init
end
init
end
init
end
[[], [], 'u', None, [], -1, 'u', 'u']

Name: initialGas Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[], [], 6, 'tokenAddress', [], -1, -982, 'u']

Name: tokenAddress Function: None
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[], [], 'u', None, [], -1, 'u', 'u']

Name: tokenGasPrice Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
Source address: u
Name: initialGas, Num: 1
Globalname: initialGas

Name: initialGas_1 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Source address: -982

Name: tokenAddress_1 Function: getAmountToTransfer
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
Phid
Source address: u

Name: amount_1 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Source address: u
Name: tokenGasPrice, Num: 1
Globalname: tokenGasPrice

Name: tokenGasPrice_1 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: BASE_DIVISOR Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: baseGas Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: tokenManager Function: getAmountToTransfer
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getAmountToTransfer
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
initialGas_1(uint256) := ϕ(['initialGas_1'])
Phi

Name: initialGas Function: sendFundsToUser
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for initialGas

Name: initialGas Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tokenAddress_1(address) := ϕ(['tokenAddress_1'])
Phi
[i]Type for tokenAddress

Name: tokenAddress Function: getAmountToTransfer
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount_1'])
Phi
[i]Type for amount

Name: amount Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tokenGasPrice_1(uint256) := ϕ(['tokenGasPrice_1'])
Phi

Name: tokenGasPrice Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for tokenGasPrice

Name: tokenGasPrice Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
BASE_DIVISOR_1(uint256) := ϕ(['BASE_DIVISOR_3', 'BASE_DIVISOR_5', 'BASE_DIVISOR_0'])
Phi
[i]Type for BASE_DIVISOR

Name: BASE_DIVISOR Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
baseGas_3(uint256) := ϕ(['baseGas_2', 'baseGas_1', 'baseGas_0', 'baseGas_9'])
Phi
[i]Type for baseGas

Name: baseGas Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tokenManager_20(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_0', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getAmountToTransfer
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_35(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getAmountToTransfer
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_4(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_0', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulated_1(mapping(address => mapping(address => uint256))) := ϕ(['gasFeeAccumulated_0', 'gasFeeAccumulated_10', 'gasFeeAccumulated_16', 'gasFeeAccumulated_22'])
Phi
[i]Type for gasFeeAccumulated

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_23(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_0'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: transferFeePerc, Num: 1
Globalname: transferFeePerc
End popogation

Name: tokenManager Function: getAmountToTransfer
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getAmountToTransfer
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid
TMP_199(uint256) = INTERNAL_CALL, LiquidityPool.getTransferFee(address,uint256)(tokenAddress_1,amount_1)
init
end
init
end
[[], [], 6, 'tokenAddress', [], -1, -982, 'u']

Name: tokenAddress Function: None
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
Source address: -982

Name: tokenAddress_1 Function: getTransferFee
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
Phid
Source address: u

Name: amount_1 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getTransferFee
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid
tokenAddress_1(address) := ϕ(['tokenAddress_1'])
Phi
[i]Type for tokenAddress

Name: tokenAddress Function: getTransferFee
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount_1'])
Phi
[i]Type for amount

Name: amount Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tokenManager_27(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_0', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_41(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getTransferFee
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: currentLiquidity, Num: 1
Globalname: currentLiquidity
End popogation

Name: liquidityProviders Function: getTransferFee
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid
TMP_228(uint256) = INTERNAL_CALL, LiquidityPool.getCurrentLiquidity(address)(tokenAddress_1)
init
end
[[], [], 6, 'tokenAddress', [], -1, -982, 'u']

Name: tokenAddress Function: getCurrentLiquidity
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
Source address: -982

Name: tokenAddress_1 Function: getCurrentLiquidity
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
tokenAddress_1(address) := ϕ(['tokenAddress_1', 'tokenAddress_1'])
Phi
[i]Type for tokenAddress

Name: tokenAddress Function: getCurrentLiquidity
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_3(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_1(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_0', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_1(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_0'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: liquidityPoolBalance, Num: 1
Globalname: liquidityPoolBalance
End popogation

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_99(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_3(ILiquidityProviders), function:getCurrentLiquidity, arguments:['tokenAddress_1']  
High Call: getCurrentLiquidity
Running querryfc
Written func info: LiquidityProviders, getCurrentLiquidity
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-982], [-1], 6, "'u'", 'u', -1)
[i]Type for TMP_99

Name: TMP_99 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
liquidityProviders_4(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_3', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_2(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_1', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_2(mapping(address => uint256)) := ϕ(['incentivePool_1', 'incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityPoolBalance_1(uint256) := TMP_99(uint256)
asgn
init
end
_______________

Name: TMP_99 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for liquidityPoolBalance

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: currentLiquidity, Num: 1
Globalname: currentLiquidity
End popogation

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_100(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_4(ILiquidityProviders), function:totalLPFees, arguments:['tokenAddress_1']  
High Call: totalLPFees
Running querryfc
Written func info: LiquidityProviders, totalLPFees
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-982], [-1], 6, "'u'", 'u', -1)
[i]Type for TMP_100

Name: TMP_100 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
liquidityProviders_5(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_4', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_3(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_2', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_3(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_2', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_101(uint256) = liquidityPoolBalance_1 (c)- TMP_100
init
end
init
end
-982
-1
lnorm: 6 rnorm: 6
init
end
_______________

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_101 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_101

Name: TMP_101 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_2(uint256) -> gasFeeAccumulatedByToken_3[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_2

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_102(uint256) = TMP_101 (c)- REF_2
init
end
init
end
init
end
_______________

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_102 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_102

Name: TMP_102 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_3(uint256) -> incentivePool_3[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_3

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_103(uint256) = TMP_102 (c)- REF_3
init
end
init
end
init
end
_______________

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_103 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_103

Name: TMP_103 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
currentLiquidity_1(uint256) := TMP_103(uint256)
asgn
init
end
_______________

Name: TMP_103 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: currentLiquidity Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for currentLiquidity

Name: currentLiquidity Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Source address: -982

Name: tokenAddress_1 Function: getCurrentLiquidity
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
tokenAddress_1(address) := ϕ(['tokenAddress_1', 'tokenAddress_1'])
Phi
[i]Type for tokenAddress

Name: tokenAddress Function: getCurrentLiquidity
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_3(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_1(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_0', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_1(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_0'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: liquidityPoolBalance, Num: 1
Globalname: liquidityPoolBalance
End popogation

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_99(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_3(ILiquidityProviders), function:getCurrentLiquidity, arguments:['tokenAddress_1']  
High Call: getCurrentLiquidity
Running querryfc
Written func info: LiquidityProviders, getCurrentLiquidity
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-982], [-1], 6, "'u'", 'u', -1)
[i]Type for TMP_99

Name: TMP_99 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
liquidityProviders_4(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_3', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_2(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_1', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_2(mapping(address => uint256)) := ϕ(['incentivePool_1', 'incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityPoolBalance_1(uint256) := TMP_99(uint256)
asgn
init
end
_______________

Name: TMP_99 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for liquidityPoolBalance

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: currentLiquidity, Num: 1
Globalname: currentLiquidity
End popogation

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_100(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_4(ILiquidityProviders), function:totalLPFees, arguments:['tokenAddress_1']  
High Call: totalLPFees
Running querryfc
Written func info: LiquidityProviders, totalLPFees
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-982], [-1], 6, "'u'", 'u', -1)
[i]Type for TMP_100

Name: TMP_100 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
liquidityProviders_5(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_4', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_3(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_2', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_3(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_2', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_101(uint256) = liquidityPoolBalance_1 (c)- TMP_100
init
end
init
end
-982
-1
lnorm: 6 rnorm: 6
init
end
_______________

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_101 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_101

Name: TMP_101 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_2(uint256) -> gasFeeAccumulatedByToken_3[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_2

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_102(uint256) = TMP_101 (c)- REF_2
init
end
init
end
init
end
_______________

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_102 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_102

Name: TMP_102 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_3(uint256) -> incentivePool_3[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_3

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_103(uint256) = TMP_102 (c)- REF_3
init
end
init
end
init
end
_______________

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_103 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_103

Name: TMP_103 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
currentLiquidity_1(uint256) := TMP_103(uint256)
asgn
init
end
_______________

Name: TMP_103 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: currentLiquidity Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for currentLiquidity

Name: currentLiquidity Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_228

Name: TMP_228 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_42(ILiquidityProviders) := ϕ(['liquidityProviders_5'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getTransferFee
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
currentLiquidity_1(uint256) := TMP_228(uint256)
asgn
init
end
_______________

Name: TMP_228 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: currentLiquidity Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for currentLiquidity

Name: currentLiquidity Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: providedLiquidity, Num: 1
Globalname: providedLiquidity
End popogation

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getTransferFee
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid
TMP_229(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_42(ILiquidityProviders), function:getSuppliedLiquidityByToken, arguments:['tokenAddress_1']  
High Call: getSuppliedLiquidityByToken
Running querryfc
Written func info: LiquidityProviders, getSuppliedLiquidityByToken
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-982], [-1], 6, "'u'", 'u', -1)
[i]Type for TMP_229

Name: TMP_229 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
tokenManager_29(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_28', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_43(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_42', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getTransferFee
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
providedLiquidity_1(uint256) := TMP_229(uint256)
asgn
init
end
_______________

Name: TMP_229 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: providedLiquidity Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for providedLiquidity

Name: providedLiquidity Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: currentLiquidity, Num: 1
Globalname: currentLiquidity
Name: resultingLiquidity, Num: 1
Globalname: resultingLiquidity
End popogation
TMP_230(uint256) = currentLiquidity_1 (c)- amount_1
init
end
init
end
init
end
_______________

Name: amount Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_230 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_230

Name: TMP_230 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
resultingLiquidity_1(uint256) := TMP_230(uint256)
asgn
init
end
_______________

Name: TMP_230 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: resultingLiquidity Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for resultingLiquidity

Name: resultingLiquidity Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: equilibriumFee, Num: 1
Globalname: equilibriumFee
End popogation

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid
TMP_231(ITokenManager.TokenInfo) = HIGH_LEVEL_CALL, dest:tokenManager_29(ITokenManager), function:getTokensInfo, arguments:['tokenAddress_1']  
High Call: getTokensInfo
Running querryfc
Written func info: TokenManager, getTokensInfo
[i]Type for TMP_231

Name: TMP_231 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: equilibriumFee
Finance Type: undef
XXXX
tokenManager_30(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_29', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
REF_62(uint256) -> TMP_231.equilibriumFee
MEMBER
init
end
init
end
init
end
_______________

Name: TMP_231.equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for REF_62

Name: TMP_231.equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: TMP_231, Field: equilibriumFee
#################
Member: 
Name: TMP_231 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: equilibriumFee
Finance Type: undef
Fieldf: 
Name: equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: TMP_231.equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
equilibriumFee_1(uint256) := REF_62(uint256)
asgn
init
end
_______________

Name: TMP_231.equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: equilibriumFee Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for equilibriumFee

Name: equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: maxFee, Num: 1
Globalname: maxFee
End popogation

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid
TMP_232(ITokenManager.TokenInfo) = HIGH_LEVEL_CALL, dest:tokenManager_30(ITokenManager), function:getTokensInfo, arguments:['tokenAddress_1']  
High Call: getTokensInfo
Running querryfc
Written func info: TokenManager, getTokensInfo
[i]Type for TMP_232

Name: TMP_232 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: maxFee
Finance Type: undef
XXXX
tokenManager_31(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_30', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
REF_64(uint256) -> TMP_232.maxFee
MEMBER
init
end
init
end
init
end
_______________

Name: TMP_232.maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for REF_64

Name: TMP_232.maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: TMP_232, Field: maxFee
#################
Member: 
Name: TMP_232 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: maxFee
Finance Type: undef
Fieldf: 
Name: maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: TMP_232.maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
maxFee_1(uint256) := REF_64(uint256)
asgn
init
end
_______________

Name: TMP_232.maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: maxFee Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for maxFee

Name: maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: numerator, Num: 1
Globalname: numerator
End popogation
TMP_233(uint256) = providedLiquidity_1 (c)* equilibriumFee_1
testing mul...
init
end
init
end

Name: providedLiquidity Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: 6 rnorm: u
init
end
_______________

Name: providedLiquidity Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_233 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_233

Name: TMP_233 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_234(uint256) = TMP_233 (c)* maxFee_1
testing mul...
init
end
init
end

Name: TMP_233 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef

Name: maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: 6 rnorm: u
init
end
_______________

Name: TMP_233 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_234 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_234

Name: TMP_234 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
numerator_1(uint256) := TMP_234(uint256)
asgn
init
end
_______________

Name: TMP_234 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef

Name: numerator Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for numerator

Name: numerator Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: denominator, Num: 1
Globalname: denominator
End popogation
TMP_235(uint256) = equilibriumFee_1 (c)* providedLiquidity_1
testing mul...
init
end
init
end

Name: equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: providedLiquidity Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
lnorm: u rnorm: 6
init
end
_______________

Name: providedLiquidity Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_235 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_235

Name: TMP_235 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_236(uint256) = maxFee_1 (c)- equilibriumFee_1
init
end
init
end
init
end
_______________

Name: equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_236 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_236

Name: TMP_236 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_237(uint256) = TMP_236 (c)* resultingLiquidity_1
testing mul...
init
end
init
end

Name: TMP_236 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: resultingLiquidity Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: resultingLiquidity Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_237 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_237

Name: TMP_237 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_238(uint256) = TMP_235 (c)+ TMP_237
init
end
init
end
init
end
_______________

Name: TMP_235 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_238 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_238

Name: TMP_238 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
denominator_1(uint256) := TMP_238(uint256)
asgn
init
end
_______________

Name: TMP_238 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: denominator Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for denominator

Name: denominator Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_239(bool) = denominator_1 == 0
[i]Type for TMP_239

Name: TMP_239 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: fee, Num: 1
Globalname: fee
End popogation
fee_1(uint256) := 0(uint256)
asgn
init
end
_______________

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef

Name: fee Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for fee

Name: fee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: fee, Num: 2
Globalname: fee
End popogation
TMP_240(uint256) = numerator_1 (c)/ denominator_1
init
end
init
end
lnorm: 6 rnorm: u
Source address: u
init
end
_______________

Name: PIC_160 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_240 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
init
end
init
end
lnorm: 6 rnorm: u
Source address: u
init
end
_______________

Name: PIC_161 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_240 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_240

Name: TMP_240 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
fee_2(uint256) := TMP_240(uint256)
asgn
init
end
_______________

Name: TMP_240 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef

Name: fee Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for fee

Name: fee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Source address: -982

Name: tokenAddress_1 Function: getTransferFee
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
Phid
Source address: u

Name: amount_1 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getTransferFee
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid
tokenAddress_1(address) := ϕ(['tokenAddress_1'])
Phi
[i]Type for tokenAddress

Name: tokenAddress Function: getTransferFee
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount_1'])
Phi
[i]Type for amount

Name: amount Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tokenManager_27(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_0', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_41(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getTransferFee
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: currentLiquidity, Num: 1
Globalname: currentLiquidity
End popogation

Name: liquidityProviders Function: getTransferFee
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid
TMP_228(uint256) = INTERNAL_CALL, LiquidityPool.getCurrentLiquidity(address)(tokenAddress_1)
init
end
[[], [], 6, 'tokenAddress', [], -1, -982, 'u']

Name: tokenAddress Function: getCurrentLiquidity
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
Source address: -982

Name: tokenAddress_1 Function: getCurrentLiquidity
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
tokenAddress_1(address) := ϕ(['tokenAddress_1', 'tokenAddress_1'])
Phi
[i]Type for tokenAddress

Name: tokenAddress Function: getCurrentLiquidity
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_3(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_1(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_0', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_1(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_0'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: liquidityPoolBalance, Num: 1
Globalname: liquidityPoolBalance
End popogation

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_99(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_3(ILiquidityProviders), function:getCurrentLiquidity, arguments:['tokenAddress_1']  
High Call: getCurrentLiquidity
Running querryfc
Written func info: LiquidityProviders, getCurrentLiquidity
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-982], [-1], 6, "'u'", 'u', -1)
[i]Type for TMP_99

Name: TMP_99 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
liquidityProviders_4(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_3', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_2(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_1', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_2(mapping(address => uint256)) := ϕ(['incentivePool_1', 'incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityPoolBalance_1(uint256) := TMP_99(uint256)
asgn
init
end
_______________

Name: TMP_99 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for liquidityPoolBalance

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: currentLiquidity, Num: 1
Globalname: currentLiquidity
End popogation

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_100(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_4(ILiquidityProviders), function:totalLPFees, arguments:['tokenAddress_1']  
High Call: totalLPFees
Running querryfc
Written func info: LiquidityProviders, totalLPFees
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-982], [-1], 6, "'u'", 'u', -1)
[i]Type for TMP_100

Name: TMP_100 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
liquidityProviders_5(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_4', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_3(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_2', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_3(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_2', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_101(uint256) = liquidityPoolBalance_1 (c)- TMP_100
init
end
init
end
-982
-1
lnorm: 6 rnorm: 6
init
end
_______________

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_101 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_101

Name: TMP_101 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_2(uint256) -> gasFeeAccumulatedByToken_3[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_2

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_102(uint256) = TMP_101 (c)- REF_2
init
end
init
end
init
end
_______________

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_102 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_102

Name: TMP_102 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_3(uint256) -> incentivePool_3[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_3

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_103(uint256) = TMP_102 (c)- REF_3
init
end
init
end
init
end
_______________

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_103 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_103

Name: TMP_103 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
currentLiquidity_1(uint256) := TMP_103(uint256)
asgn
init
end
_______________

Name: TMP_103 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: currentLiquidity Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for currentLiquidity

Name: currentLiquidity Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Source address: -982

Name: tokenAddress_1 Function: getCurrentLiquidity
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
tokenAddress_1(address) := ϕ(['tokenAddress_1', 'tokenAddress_1'])
Phi
[i]Type for tokenAddress

Name: tokenAddress Function: getCurrentLiquidity
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_3(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_1(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_0', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_1(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_0'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: liquidityPoolBalance, Num: 1
Globalname: liquidityPoolBalance
End popogation

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_99(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_3(ILiquidityProviders), function:getCurrentLiquidity, arguments:['tokenAddress_1']  
High Call: getCurrentLiquidity
Running querryfc
Written func info: LiquidityProviders, getCurrentLiquidity
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-982], [-1], 6, "'u'", 'u', -1)
[i]Type for TMP_99

Name: TMP_99 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
liquidityProviders_4(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_3', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_2(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_1', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_2(mapping(address => uint256)) := ϕ(['incentivePool_1', 'incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityPoolBalance_1(uint256) := TMP_99(uint256)
asgn
init
end
_______________

Name: TMP_99 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for liquidityPoolBalance

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: currentLiquidity, Num: 1
Globalname: currentLiquidity
End popogation

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_100(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_4(ILiquidityProviders), function:totalLPFees, arguments:['tokenAddress_1']  
High Call: totalLPFees
Running querryfc
Written func info: LiquidityProviders, totalLPFees
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-982], [-1], 6, "'u'", 'u', -1)
[i]Type for TMP_100

Name: TMP_100 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
liquidityProviders_5(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_4', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_3(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_2', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_3(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_2', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_101(uint256) = liquidityPoolBalance_1 (c)- TMP_100
init
end
init
end
-982
-1
lnorm: 6 rnorm: 6
init
end
_______________

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_101 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_101

Name: TMP_101 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_2(uint256) -> gasFeeAccumulatedByToken_3[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_2

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_102(uint256) = TMP_101 (c)- REF_2
init
end
init
end
init
end
_______________

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_102 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_102

Name: TMP_102 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_3(uint256) -> incentivePool_3[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_3

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_103(uint256) = TMP_102 (c)- REF_3
init
end
init
end
init
end
_______________

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_103 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_103

Name: TMP_103 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
currentLiquidity_1(uint256) := TMP_103(uint256)
asgn
init
end
_______________

Name: TMP_103 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: currentLiquidity Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for currentLiquidity

Name: currentLiquidity Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_228

Name: TMP_228 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_42(ILiquidityProviders) := ϕ(['liquidityProviders_5'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getTransferFee
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
currentLiquidity_1(uint256) := TMP_228(uint256)
asgn
init
end
_______________

Name: TMP_228 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: currentLiquidity Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for currentLiquidity

Name: currentLiquidity Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: providedLiquidity, Num: 1
Globalname: providedLiquidity
End popogation

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getTransferFee
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid
TMP_229(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_42(ILiquidityProviders), function:getSuppliedLiquidityByToken, arguments:['tokenAddress_1']  
High Call: getSuppliedLiquidityByToken
Running querryfc
Written func info: LiquidityProviders, getSuppliedLiquidityByToken
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-982], [-1], 6, "'u'", 'u', -1)
[i]Type for TMP_229

Name: TMP_229 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
tokenManager_29(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_28', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_43(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_42', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getTransferFee
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
providedLiquidity_1(uint256) := TMP_229(uint256)
asgn
init
end
_______________

Name: TMP_229 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: providedLiquidity Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for providedLiquidity

Name: providedLiquidity Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: currentLiquidity, Num: 1
Globalname: currentLiquidity
Name: resultingLiquidity, Num: 1
Globalname: resultingLiquidity
End popogation
TMP_230(uint256) = currentLiquidity_1 (c)- amount_1
init
end
init
end
init
end
_______________

Name: amount Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_230 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_230

Name: TMP_230 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
resultingLiquidity_1(uint256) := TMP_230(uint256)
asgn
init
end
_______________

Name: TMP_230 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: resultingLiquidity Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for resultingLiquidity

Name: resultingLiquidity Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: equilibriumFee, Num: 1
Globalname: equilibriumFee
End popogation

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid
TMP_231(ITokenManager.TokenInfo) = HIGH_LEVEL_CALL, dest:tokenManager_29(ITokenManager), function:getTokensInfo, arguments:['tokenAddress_1']  
High Call: getTokensInfo
Running querryfc
Written func info: TokenManager, getTokensInfo
[i]Type for TMP_231

Name: TMP_231 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: equilibriumFee
Finance Type: undef
XXXX
tokenManager_30(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_29', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
REF_62(uint256) -> TMP_231.equilibriumFee
MEMBER
init
end
init
end
init
end
_______________

Name: TMP_231.equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for REF_62

Name: TMP_231.equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: TMP_231, Field: equilibriumFee
#################
Member: 
Name: TMP_231 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: equilibriumFee
Finance Type: undef
Fieldf: 
Name: equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: TMP_231.equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
equilibriumFee_1(uint256) := REF_62(uint256)
asgn
init
end
_______________

Name: TMP_231.equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: equilibriumFee Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for equilibriumFee

Name: equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: maxFee, Num: 1
Globalname: maxFee
End popogation

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid
TMP_232(ITokenManager.TokenInfo) = HIGH_LEVEL_CALL, dest:tokenManager_30(ITokenManager), function:getTokensInfo, arguments:['tokenAddress_1']  
High Call: getTokensInfo
Running querryfc
Written func info: TokenManager, getTokensInfo
[i]Type for TMP_232

Name: TMP_232 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: maxFee
Finance Type: undef
XXXX
tokenManager_31(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_30', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
REF_64(uint256) -> TMP_232.maxFee
MEMBER
init
end
init
end
init
end
_______________

Name: TMP_232.maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for REF_64

Name: TMP_232.maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: TMP_232, Field: maxFee
#################
Member: 
Name: TMP_232 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: maxFee
Finance Type: undef
Fieldf: 
Name: maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: TMP_232.maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
maxFee_1(uint256) := REF_64(uint256)
asgn
init
end
_______________

Name: TMP_232.maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: maxFee Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for maxFee

Name: maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: numerator, Num: 1
Globalname: numerator
End popogation
TMP_233(uint256) = providedLiquidity_1 (c)* equilibriumFee_1
testing mul...
init
end
init
end

Name: providedLiquidity Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: 6 rnorm: u
init
end
_______________

Name: providedLiquidity Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_233 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_233

Name: TMP_233 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_234(uint256) = TMP_233 (c)* maxFee_1
testing mul...
init
end
init
end

Name: TMP_233 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef

Name: maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: 6 rnorm: u
init
end
_______________

Name: TMP_233 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_234 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_234

Name: TMP_234 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
numerator_1(uint256) := TMP_234(uint256)
asgn
init
end
_______________

Name: TMP_234 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef

Name: numerator Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for numerator

Name: numerator Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: denominator, Num: 1
Globalname: denominator
End popogation
TMP_235(uint256) = equilibriumFee_1 (c)* providedLiquidity_1
testing mul...
init
end
init
end

Name: equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: providedLiquidity Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
lnorm: u rnorm: 6
init
end
_______________

Name: providedLiquidity Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_235 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_235

Name: TMP_235 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_236(uint256) = maxFee_1 (c)- equilibriumFee_1
init
end
init
end
init
end
_______________

Name: equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_236 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_236

Name: TMP_236 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_237(uint256) = TMP_236 (c)* resultingLiquidity_1
testing mul...
init
end
init
end

Name: TMP_236 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: resultingLiquidity Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: resultingLiquidity Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_237 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_237

Name: TMP_237 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_238(uint256) = TMP_235 (c)+ TMP_237
init
end
init
end
init
end
_______________

Name: TMP_235 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_238 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_238

Name: TMP_238 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
denominator_1(uint256) := TMP_238(uint256)
asgn
init
end
_______________

Name: TMP_238 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: denominator Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for denominator

Name: denominator Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_239(bool) = denominator_1 == 0
[i]Type for TMP_239

Name: TMP_239 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: fee, Num: 1
Globalname: fee
End popogation
fee_1(uint256) := 0(uint256)
asgn
init
end
_______________

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef

Name: fee Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for fee

Name: fee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: fee, Num: 2
Globalname: fee
End popogation
TMP_240(uint256) = numerator_1 (c)/ denominator_1
init
end
init
end
lnorm: 6 rnorm: u
Source address: u
init
end
_______________

Name: PIC_163 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_240 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
init
end
init
end
lnorm: 6 rnorm: u
Source address: u
init
end
_______________

Name: PIC_164 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_240 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_240

Name: TMP_240 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
fee_2(uint256) := TMP_240(uint256)
asgn
init
end
_______________

Name: TMP_240 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef

Name: fee Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for fee

Name: fee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_199

Name: TMP_199 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tokenManager_21(ITokenManager) := ϕ(['tokenManager_31'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getAmountToTransfer
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_36(ILiquidityProviders) := ϕ(['liquidityProviders_43'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getAmountToTransfer
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
transferFeePerc_1(uint256) := TMP_199(uint256)
asgn
init
end
_______________

Name: TMP_199 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: transferFeePerc Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for transferFeePerc

Name: transferFeePerc Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: transferFeePerc, Num: 1
Globalname: transferFeePerc
End popogation

Name: BASE_DIVISOR Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: baseGas Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: tokenManager Function: getAmountToTransfer
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getAmountToTransfer
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_200(ITokenManager.TokenInfo) = HIGH_LEVEL_CALL, dest:tokenManager_21(ITokenManager), function:getTokensInfo, arguments:['tokenAddress_1']  
High Call: getTokensInfo
Running querryfc
Written func info: TokenManager, getTokensInfo
[i]Type for TMP_200

Name: TMP_200 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: equilibriumFee
Finance Type: undef
XXXX
BASE_DIVISOR_3(uint256) := ϕ(['BASE_DIVISOR_3', 'BASE_DIVISOR_5', 'BASE_DIVISOR_2'])
Phi
[i]Type for BASE_DIVISOR

Name: BASE_DIVISOR Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
baseGas_5(uint256) := ϕ(['baseGas_2', 'baseGas_1', 'baseGas_4', 'baseGas_9'])
Phi
[i]Type for baseGas

Name: baseGas Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tokenManager_22(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_7', 'tokenManager_1', 'tokenManager_21', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getAmountToTransfer
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_37(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_36', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getAmountToTransfer
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_6(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_5', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulated_3(mapping(address => mapping(address => uint256))) := ϕ(['gasFeeAccumulated_16', 'gasFeeAccumulated_10', 'gasFeeAccumulated_22', 'gasFeeAccumulated_2'])
Phi
[i]Type for gasFeeAccumulated

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_25(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_24'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_44(uint256) -> TMP_200.equilibriumFee
MEMBER
init
end
init
end
init
end
_______________

Name: TMP_200.equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for REF_44

Name: TMP_200.equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: TMP_200, Field: equilibriumFee
#################
Member: 
Name: TMP_200 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: equilibriumFee
Finance Type: undef
Fieldf: 
Name: equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: TMP_200.equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_201(bool) = transferFeePerc_1 > REF_44
init
end
init
end
lnorm: u rnorm: u
init
end
_______________

Name: TMP_200.equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: transferFeePerc Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
init
end
_______________

Name: TMP_200.equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_201 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_201

Name: TMP_201 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: lpFee, Num: 1
Globalname: lpFee
End popogation

Name: BASE_DIVISOR Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: baseGas Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: tokenManager Function: getAmountToTransfer
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getAmountToTransfer
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_202(ITokenManager.TokenInfo) = HIGH_LEVEL_CALL, dest:tokenManager_22(ITokenManager), function:getTokensInfo, arguments:['tokenAddress_1']  
High Call: getTokensInfo
Running querryfc
Written func info: TokenManager, getTokensInfo
[i]Type for TMP_202

Name: TMP_202 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: equilibriumFee
Finance Type: undef
XXXX
BASE_DIVISOR_4(uint256) := ϕ(['BASE_DIVISOR_3', 'BASE_DIVISOR_5'])
Phi
[i]Type for BASE_DIVISOR

Name: BASE_DIVISOR Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
baseGas_6(uint256) := ϕ(['baseGas_2', 'baseGas_1', 'baseGas_5', 'baseGas_9'])
Phi
[i]Type for baseGas

Name: baseGas Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tokenManager_23(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_7', 'tokenManager_1', 'tokenManager_22', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getAmountToTransfer
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_38(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_37', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getAmountToTransfer
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_7(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_6', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulated_4(mapping(address => mapping(address => uint256))) := ϕ(['gasFeeAccumulated_16', 'gasFeeAccumulated_10', 'gasFeeAccumulated_3', 'gasFeeAccumulated_22'])
Phi
[i]Type for gasFeeAccumulated

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_26(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_46(uint256) -> TMP_202.equilibriumFee
MEMBER
init
end
init
end
init
end
_______________

Name: TMP_202.equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for REF_46

Name: TMP_202.equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: TMP_202, Field: equilibriumFee
#################
Member: 
Name: TMP_202 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: equilibriumFee
Finance Type: undef
Fieldf: 
Name: equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: TMP_202.equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_203(uint256) = amount_1 (c)* REF_46
testing mul...
init
end
init
end

Name: amount Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_202.equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: TMP_202.equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_203 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_203

Name: TMP_203 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_204(uint256) = TMP_203 (c)/ BASE_DIVISOR_4
init
end
init
end
lnorm: u rnorm: u
init
end
init
end
init
end
lnorm: u rnorm: u
init
end
[i]Type for TMP_204

Name: TMP_204 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
lpFee_1(uint256) := TMP_204(uint256)
asgn
init
end
_______________

Name: TMP_204 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: lpFee Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for lpFee

Name: lpFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: lpFee, Num: 2
Globalname: lpFee
End popogation
TMP_210(uint256) = amount_1 (c)* transferFeePerc_1
testing mul...
init
end
init
end

Name: amount Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: transferFeePerc Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: transferFeePerc Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_210 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_210

Name: TMP_210 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_211(uint256) = TMP_210 (c)/ BASE_DIVISOR_3
init
end
init
end
lnorm: u rnorm: u
init
end
init
end
init
end
lnorm: u rnorm: u
init
end
[i]Type for TMP_211

Name: TMP_211 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
lpFee_2(uint256) := TMP_211(uint256)
asgn
init
end
_______________

Name: TMP_211 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: lpFee Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for lpFee

Name: lpFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation

Name: BASE_DIVISOR Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: baseGas Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: tokenManager Function: getAmountToTransfer
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getAmountToTransfer
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
REF_47(uint256) -> incentivePool_26[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_47

Name: incentivePool Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_48(uint256) -> incentivePool_26[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_48

Name: incentivePool Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_205(ITokenManager.TokenInfo) = HIGH_LEVEL_CALL, dest:tokenManager_23(ITokenManager), function:getTokensInfo, arguments:['tokenAddress_1']  
High Call: getTokensInfo
Running querryfc
Written func info: TokenManager, getTokensInfo
[i]Type for TMP_205

Name: TMP_205 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: equilibriumFee
Finance Type: undef
XXXX
BASE_DIVISOR_5(uint256) := ϕ(['BASE_DIVISOR_3', 'BASE_DIVISOR_5', 'BASE_DIVISOR_4'])
Phi
[i]Type for BASE_DIVISOR

Name: BASE_DIVISOR Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
baseGas_7(uint256) := ϕ(['baseGas_2', 'baseGas_1', 'baseGas_6', 'baseGas_9'])
Phi
[i]Type for baseGas

Name: baseGas Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tokenManager_24(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_23', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getAmountToTransfer
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_39(ILiquidityProviders) := ϕ(['liquidityProviders_38', 'liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getAmountToTransfer
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_8(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_7', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulated_5(mapping(address => mapping(address => uint256))) := ϕ(['gasFeeAccumulated_16', 'gasFeeAccumulated_10', 'gasFeeAccumulated_4', 'gasFeeAccumulated_22'])
Phi
[i]Type for gasFeeAccumulated

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_27(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_26', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_50(uint256) -> TMP_205.equilibriumFee
MEMBER
init
end
init
end
init
end
_______________

Name: TMP_205.equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for REF_50

Name: TMP_205.equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: TMP_205, Field: equilibriumFee
#################
Member: 
Name: TMP_205 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: equilibriumFee
Finance Type: undef
Fieldf: 
Name: equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: TMP_205.equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_206(uint256) = transferFeePerc_1 (c)- REF_50
init
end
init
end
init
end
_______________

Name: TMP_205.equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_206 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_206

Name: TMP_206 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_207(uint256) = amount_1 (c)* TMP_206
testing mul...
init
end
init
end

Name: amount Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_206 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: TMP_206 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_207 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_207

Name: TMP_207 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_208(uint256) = REF_48 (c)+ TMP_207
init
end
init
end
init
end
_______________

Name: TMP_207 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_208 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_208

Name: TMP_208 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_209(uint256) = TMP_208 (c)/ BASE_DIVISOR_5
init
end
init
end
lnorm: u rnorm: u
init
end
init
end
init
end
lnorm: u rnorm: u
init
end
[i]Type for TMP_209

Name: TMP_209 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_28(mapping(address => uint256)) := ϕ(['incentivePool_26'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_47 (->incentivePool_28) := TMP_209(uint256)
asgn
init
end
_______________

Name: TMP_209 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: REF_47 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_47

Name: REF_47 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
Source address: u
Propogating parameters and globals to SSA variables...
End popogation
Name: lpFee, Num: 3
Globalname: lpFee

Name: lpFee Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
lpFee_3(uint256) := ϕ(['lpFee_1', 'lpFee_2'])
Phi

Name: lpFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: lpFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
init
end
_______________

Name: lpFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: lpFee Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for lpFee

Name: lpFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: transferFeeAmount, Num: 1
Globalname: transferFeeAmount
End popogation
TMP_212(uint256) = amount_1 (c)* transferFeePerc_1
testing mul...
init
end
init
end

Name: amount Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: transferFeePerc Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: transferFeePerc Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_212 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_212

Name: TMP_212 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_213(uint256) = TMP_212 (c)/ BASE_DIVISOR_3
init
end
init
end
lnorm: u rnorm: u
init
end
init
end
init
end
lnorm: u rnorm: u
init
end
[i]Type for TMP_213

Name: TMP_213 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
transferFeeAmount_1(uint256) := TMP_213(uint256)
asgn
init
end
_______________

Name: TMP_213 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: transferFeeAmount Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for transferFeeAmount

Name: transferFeeAmount Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation

Name: baseGas Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: tokenManager Function: getAmountToTransfer
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getAmountToTransfer
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
HIGH_LEVEL_CALL, dest:liquidityProviders_37(ILiquidityProviders), function:addLPFee, arguments:['tokenAddress_1', 'lpFee_3']  
High Call: addLPFee
baseGas_8(uint256) := ϕ(['baseGas_2', 'baseGas_1', 'baseGas_7', 'baseGas_9'])
Phi
[i]Type for baseGas

Name: baseGas Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tokenManager_25(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_24', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getAmountToTransfer
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_40(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_39', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getAmountToTransfer
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_9(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_8', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulated_6(mapping(address => mapping(address => uint256))) := ϕ(['gasFeeAccumulated_16', 'gasFeeAccumulated_10', 'gasFeeAccumulated_22', 'gasFeeAccumulated_5'])
Phi
[i]Type for gasFeeAccumulated

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Source address: u
Name: initialGas, Num: 1
Globalname: initialGas
Name: totalGasUsed, Num: 1
Globalname: totalGasUsed
End popogation
TMP_215(uint256) = SOLIDITY_CALL gasleft()()
[i]Type for TMP_215

Name: TMP_215 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_216(uint256) = initialGas_1 (c)- TMP_215
init
end
init
end
init
end
_______________

Name: TMP_215 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_216 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_216

Name: TMP_216 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
totalGasUsed_1(uint256) := TMP_216(uint256)
asgn
init
end
_______________

Name: TMP_216 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: totalGasUsed Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for totalGasUsed

Name: totalGasUsed Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: totalGasUsed, Num: 1
Globalname: totalGasUsed
Name: totalGasUsed, Num: 2
Globalname: totalGasUsed
End popogation

Name: baseGas Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: tokenManager Function: getAmountToTransfer
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_217(ITokenManager.TokenInfo) = HIGH_LEVEL_CALL, dest:tokenManager_25(ITokenManager), function:getTokensInfo, arguments:['tokenAddress_1']  
High Call: getTokensInfo
Running querryfc
Written func info: TokenManager, getTokensInfo
[i]Type for TMP_217

Name: TMP_217 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: transferOverhead
Finance Type: undef
XXXX
baseGas_9(uint256) := ϕ(['baseGas_2', 'baseGas_1', 'baseGas_8', 'baseGas_9'])
Phi
[i]Type for baseGas

Name: baseGas Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tokenManager_26(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_25', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getAmountToTransfer
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_10(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_9', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulated_7(mapping(address => mapping(address => uint256))) := ϕ(['gasFeeAccumulated_16', 'gasFeeAccumulated_10', 'gasFeeAccumulated_22', 'gasFeeAccumulated_6'])
Phi
[i]Type for gasFeeAccumulated

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_53(uint256) -> TMP_217.transferOverhead
MEMBER
init
end
init
end
init
end
_______________

Name: TMP_217.transferOverhead Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: transferOverhead Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for REF_53

Name: TMP_217.transferOverhead Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: TMP_217, Field: transferOverhead
#################
Member: 
Name: TMP_217 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: transferOverhead
Finance Type: undef
Fieldf: 
Name: transferOverhead Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: TMP_217.transferOverhead Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: transferOverhead Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_218(uint256) = totalGasUsed_1 (c)+ REF_53
init
end
init
end
init
end
_______________

Name: TMP_217.transferOverhead Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_218 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_218

Name: TMP_218 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
totalGasUsed_2(uint256) := TMP_218(uint256)
asgn
init
end
_______________

Name: TMP_218 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: totalGasUsed Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for totalGasUsed

Name: totalGasUsed Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: totalGasUsed, Num: 3
Globalname: totalGasUsed
End popogation
TMP_219(uint256) = totalGasUsed_2 (c)+ baseGas_9
init
end
init
end
init
end
_______________

Name: baseGas Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_219 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_219

Name: TMP_219 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
totalGasUsed_3(uint256) := TMP_219(uint256)
asgn
init
end
_______________

Name: TMP_219 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: totalGasUsed Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for totalGasUsed

Name: totalGasUsed Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Source address: u
Name: tokenGasPrice, Num: 1
Globalname: tokenGasPrice
Name: gasFee, Num: 1
Globalname: gasFee
End popogation
TMP_220(uint256) = totalGasUsed_3 (c)* tokenGasPrice_1
testing mul...
init
end
init
end

Name: totalGasUsed Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: tokenGasPrice_1 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: totalGasUsed Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_220 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_220

Name: TMP_220 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
gasFee_1(uint256) := TMP_220(uint256)
asgn
init
end
_______________

Name: TMP_220 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: gasFee Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for gasFee

Name: gasFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
REF_54(uint256) -> gasFeeAccumulatedByToken_10[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_54

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_55(uint256) -> gasFeeAccumulatedByToken_10[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_55

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_221(uint256) = REF_55 (c)+ gasFee_1
init
end
init
end
init
end
_______________

Name: gasFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_221 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_221

Name: TMP_221 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_11(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_10'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_54 (->gasFeeAccumulatedByToken_11) := TMP_221(uint256)
asgn
init
end
_______________

Name: TMP_221 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: REF_54 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_54

Name: REF_54 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
Source address: u
Propogating parameters and globals to SSA variables...
End popogation

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
REF_56(mapping(address => uint256)) -> gasFeeAccumulated_7[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_56

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_222(address) = INTERNAL_CALL, LiquidityPool._msgSender()()
init
end
_______________

Name: PIC_33 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_222 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_222

Name: TMP_222 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_57(uint256) -> REF_56[TMP_222]
INDEX
Source address: u
[i]Type for REF_57

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_58(mapping(address => uint256)) -> gasFeeAccumulated_8[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_58

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_223(address) = INTERNAL_CALL, LiquidityPool._msgSender()()
init
end
_______________

Name: PIC_33 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_223 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_223

Name: TMP_223 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_59(uint256) -> REF_58[TMP_223]
INDEX
Source address: u
[i]Type for REF_59

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_224(uint256) = REF_59 (c)+ gasFee_1
init
end
init
end
init
end
_______________

Name: gasFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_224 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_224

Name: TMP_224 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulated_10(mapping(address => mapping(address => uint256))) := ϕ(['gasFeeAccumulated_7'])
Phi
[i]Type for gasFeeAccumulated

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_57 (->gasFeeAccumulated_10) := TMP_224(uint256)
asgn
init
end
_______________

Name: TMP_224 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: REF_57 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_57

Name: REF_57 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
Source address: u
Propogating parameters and globals to SSA variables...
Name: amountToTransfer, Num: 1
Globalname: amountToTransfer
End popogation
TMP_225(uint256) = transferFeeAmount_1 (c)+ gasFee_1
init
end
init
end
init
end
_______________

Name: gasFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_225 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_225

Name: TMP_225 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_226(uint256) = amount_1 (c)- TMP_225
init
end
init
end
init
end
_______________

Name: TMP_225 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_226 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_226

Name: TMP_226 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
amountToTransfer_1(uint256) := TMP_226(uint256)
asgn
init
end
_______________

Name: TMP_226 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amountToTransfer Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for amountToTransfer

Name: amountToTransfer Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Source address: u
Name: initialGas, Num: 1
Globalname: initialGas

Name: initialGas_1 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Source address: -982

Name: tokenAddress_1 Function: getAmountToTransfer
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
Phid
Source address: u

Name: amount_1 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Source address: u
Name: tokenGasPrice, Num: 1
Globalname: tokenGasPrice

Name: tokenGasPrice_1 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: BASE_DIVISOR Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: baseGas Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: tokenManager Function: getAmountToTransfer
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getAmountToTransfer
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
initialGas_1(uint256) := ϕ(['initialGas_1'])
Phi

Name: initialGas Function: sendFundsToUser
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for initialGas

Name: initialGas Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tokenAddress_1(address) := ϕ(['tokenAddress_1'])
Phi
[i]Type for tokenAddress

Name: tokenAddress Function: getAmountToTransfer
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount_1'])
Phi
[i]Type for amount

Name: amount Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tokenGasPrice_1(uint256) := ϕ(['tokenGasPrice_1'])
Phi

Name: tokenGasPrice Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for tokenGasPrice

Name: tokenGasPrice Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
BASE_DIVISOR_1(uint256) := ϕ(['BASE_DIVISOR_3', 'BASE_DIVISOR_5', 'BASE_DIVISOR_0'])
Phi
[i]Type for BASE_DIVISOR

Name: BASE_DIVISOR Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
baseGas_3(uint256) := ϕ(['baseGas_2', 'baseGas_1', 'baseGas_0', 'baseGas_9'])
Phi
[i]Type for baseGas

Name: baseGas Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tokenManager_20(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_0', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getAmountToTransfer
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_35(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getAmountToTransfer
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_4(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_0', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulated_1(mapping(address => mapping(address => uint256))) := ϕ(['gasFeeAccumulated_0', 'gasFeeAccumulated_10', 'gasFeeAccumulated_16', 'gasFeeAccumulated_22'])
Phi
[i]Type for gasFeeAccumulated

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_23(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_0'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: transferFeePerc, Num: 1
Globalname: transferFeePerc
End popogation

Name: tokenManager Function: getAmountToTransfer
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getAmountToTransfer
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid
TMP_199(uint256) = INTERNAL_CALL, LiquidityPool.getTransferFee(address,uint256)(tokenAddress_1,amount_1)
init
end
init
end
[[], [], 6, 'tokenAddress', [], -1, -982, 'u']

Name: tokenAddress Function: None
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
Source address: -982

Name: tokenAddress_1 Function: getTransferFee
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
Phid
Source address: u

Name: amount_1 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getTransferFee
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid
tokenAddress_1(address) := ϕ(['tokenAddress_1'])
Phi
[i]Type for tokenAddress

Name: tokenAddress Function: getTransferFee
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount_1'])
Phi
[i]Type for amount

Name: amount Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tokenManager_27(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_0', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_41(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getTransferFee
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: currentLiquidity, Num: 1
Globalname: currentLiquidity
End popogation

Name: liquidityProviders Function: getTransferFee
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid
TMP_228(uint256) = INTERNAL_CALL, LiquidityPool.getCurrentLiquidity(address)(tokenAddress_1)
init
end
[[], [], 6, 'tokenAddress', [], -1, -982, 'u']

Name: tokenAddress Function: getCurrentLiquidity
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
Source address: -982

Name: tokenAddress_1 Function: getCurrentLiquidity
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
tokenAddress_1(address) := ϕ(['tokenAddress_1', 'tokenAddress_1'])
Phi
[i]Type for tokenAddress

Name: tokenAddress Function: getCurrentLiquidity
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_3(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_1(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_0', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_1(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_0'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: liquidityPoolBalance, Num: 1
Globalname: liquidityPoolBalance
End popogation

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_99(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_3(ILiquidityProviders), function:getCurrentLiquidity, arguments:['tokenAddress_1']  
High Call: getCurrentLiquidity
Running querryfc
Written func info: LiquidityProviders, getCurrentLiquidity
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-982], [-1], 6, "'u'", 'u', -1)
[i]Type for TMP_99

Name: TMP_99 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
liquidityProviders_4(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_3', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_2(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_1', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_2(mapping(address => uint256)) := ϕ(['incentivePool_1', 'incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityPoolBalance_1(uint256) := TMP_99(uint256)
asgn
init
end
_______________

Name: TMP_99 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for liquidityPoolBalance

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: currentLiquidity, Num: 1
Globalname: currentLiquidity
End popogation

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_100(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_4(ILiquidityProviders), function:totalLPFees, arguments:['tokenAddress_1']  
High Call: totalLPFees
Running querryfc
Written func info: LiquidityProviders, totalLPFees
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-982], [-1], 6, "'u'", 'u', -1)
[i]Type for TMP_100

Name: TMP_100 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
liquidityProviders_5(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_4', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_3(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_2', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_3(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_2', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_101(uint256) = liquidityPoolBalance_1 (c)- TMP_100
init
end
init
end
-982
-1
lnorm: 6 rnorm: 6
init
end
_______________

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_101 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_101

Name: TMP_101 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_2(uint256) -> gasFeeAccumulatedByToken_3[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_2

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_102(uint256) = TMP_101 (c)- REF_2
init
end
init
end
init
end
_______________

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_102 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_102

Name: TMP_102 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_3(uint256) -> incentivePool_3[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_3

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_103(uint256) = TMP_102 (c)- REF_3
init
end
init
end
init
end
_______________

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_103 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_103

Name: TMP_103 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
currentLiquidity_1(uint256) := TMP_103(uint256)
asgn
init
end
_______________

Name: TMP_103 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: currentLiquidity Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for currentLiquidity

Name: currentLiquidity Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Source address: -982

Name: tokenAddress_1 Function: getCurrentLiquidity
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
tokenAddress_1(address) := ϕ(['tokenAddress_1', 'tokenAddress_1'])
Phi
[i]Type for tokenAddress

Name: tokenAddress Function: getCurrentLiquidity
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_3(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_1(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_0', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_1(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_0'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: liquidityPoolBalance, Num: 1
Globalname: liquidityPoolBalance
End popogation

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_99(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_3(ILiquidityProviders), function:getCurrentLiquidity, arguments:['tokenAddress_1']  
High Call: getCurrentLiquidity
Running querryfc
Written func info: LiquidityProviders, getCurrentLiquidity
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-982], [-1], 6, "'u'", 'u', -1)
[i]Type for TMP_99

Name: TMP_99 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
liquidityProviders_4(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_3', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_2(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_1', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_2(mapping(address => uint256)) := ϕ(['incentivePool_1', 'incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityPoolBalance_1(uint256) := TMP_99(uint256)
asgn
init
end
_______________

Name: TMP_99 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for liquidityPoolBalance

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: currentLiquidity, Num: 1
Globalname: currentLiquidity
End popogation

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_100(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_4(ILiquidityProviders), function:totalLPFees, arguments:['tokenAddress_1']  
High Call: totalLPFees
Running querryfc
Written func info: LiquidityProviders, totalLPFees
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-982], [-1], 6, "'u'", 'u', -1)
[i]Type for TMP_100

Name: TMP_100 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
liquidityProviders_5(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_4', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_3(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_2', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_3(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_2', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_101(uint256) = liquidityPoolBalance_1 (c)- TMP_100
init
end
init
end
-982
-1
lnorm: 6 rnorm: 6
init
end
_______________

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_101 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_101

Name: TMP_101 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_2(uint256) -> gasFeeAccumulatedByToken_3[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_2

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_102(uint256) = TMP_101 (c)- REF_2
init
end
init
end
init
end
_______________

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_102 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_102

Name: TMP_102 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_3(uint256) -> incentivePool_3[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_3

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_103(uint256) = TMP_102 (c)- REF_3
init
end
init
end
init
end
_______________

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_103 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_103

Name: TMP_103 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
currentLiquidity_1(uint256) := TMP_103(uint256)
asgn
init
end
_______________

Name: TMP_103 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: currentLiquidity Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for currentLiquidity

Name: currentLiquidity Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_228

Name: TMP_228 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_42(ILiquidityProviders) := ϕ(['liquidityProviders_5'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getTransferFee
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
currentLiquidity_1(uint256) := TMP_228(uint256)
asgn
init
end
_______________

Name: TMP_228 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: currentLiquidity Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for currentLiquidity

Name: currentLiquidity Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: providedLiquidity, Num: 1
Globalname: providedLiquidity
End popogation

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getTransferFee
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid
TMP_229(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_42(ILiquidityProviders), function:getSuppliedLiquidityByToken, arguments:['tokenAddress_1']  
High Call: getSuppliedLiquidityByToken
Running querryfc
Written func info: LiquidityProviders, getSuppliedLiquidityByToken
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-982], [-1], 6, "'u'", 'u', -1)
[i]Type for TMP_229

Name: TMP_229 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
tokenManager_29(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_28', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_43(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_42', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getTransferFee
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
providedLiquidity_1(uint256) := TMP_229(uint256)
asgn
init
end
_______________

Name: TMP_229 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: providedLiquidity Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for providedLiquidity

Name: providedLiquidity Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: currentLiquidity, Num: 1
Globalname: currentLiquidity
Name: resultingLiquidity, Num: 1
Globalname: resultingLiquidity
End popogation
TMP_230(uint256) = currentLiquidity_1 (c)- amount_1
init
end
init
end
init
end
_______________

Name: amount Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_230 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_230

Name: TMP_230 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
resultingLiquidity_1(uint256) := TMP_230(uint256)
asgn
init
end
_______________

Name: TMP_230 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: resultingLiquidity Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for resultingLiquidity

Name: resultingLiquidity Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: equilibriumFee, Num: 1
Globalname: equilibriumFee
End popogation

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid
TMP_231(ITokenManager.TokenInfo) = HIGH_LEVEL_CALL, dest:tokenManager_29(ITokenManager), function:getTokensInfo, arguments:['tokenAddress_1']  
High Call: getTokensInfo
Running querryfc
Written func info: TokenManager, getTokensInfo
[i]Type for TMP_231

Name: TMP_231 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: equilibriumFee
Finance Type: undef
XXXX
tokenManager_30(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_29', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
REF_62(uint256) -> TMP_231.equilibriumFee
MEMBER
init
end
init
end
init
end
_______________

Name: TMP_231.equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for REF_62

Name: TMP_231.equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: TMP_231, Field: equilibriumFee
#################
Member: 
Name: TMP_231 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: equilibriumFee
Finance Type: undef
Fieldf: 
Name: equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: TMP_231.equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
equilibriumFee_1(uint256) := REF_62(uint256)
asgn
init
end
_______________

Name: TMP_231.equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: equilibriumFee Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for equilibriumFee

Name: equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: maxFee, Num: 1
Globalname: maxFee
End popogation

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid
TMP_232(ITokenManager.TokenInfo) = HIGH_LEVEL_CALL, dest:tokenManager_30(ITokenManager), function:getTokensInfo, arguments:['tokenAddress_1']  
High Call: getTokensInfo
Running querryfc
Written func info: TokenManager, getTokensInfo
[i]Type for TMP_232

Name: TMP_232 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: maxFee
Finance Type: undef
XXXX
tokenManager_31(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_30', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
REF_64(uint256) -> TMP_232.maxFee
MEMBER
init
end
init
end
init
end
_______________

Name: TMP_232.maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for REF_64

Name: TMP_232.maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: TMP_232, Field: maxFee
#################
Member: 
Name: TMP_232 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: maxFee
Finance Type: undef
Fieldf: 
Name: maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: TMP_232.maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
maxFee_1(uint256) := REF_64(uint256)
asgn
init
end
_______________

Name: TMP_232.maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: maxFee Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for maxFee

Name: maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: numerator, Num: 1
Globalname: numerator
End popogation
TMP_233(uint256) = providedLiquidity_1 (c)* equilibriumFee_1
testing mul...
init
end
init
end

Name: providedLiquidity Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: 6 rnorm: u
init
end
_______________

Name: providedLiquidity Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_233 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_233

Name: TMP_233 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_234(uint256) = TMP_233 (c)* maxFee_1
testing mul...
init
end
init
end

Name: TMP_233 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef

Name: maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: 6 rnorm: u
init
end
_______________

Name: TMP_233 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_234 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_234

Name: TMP_234 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
numerator_1(uint256) := TMP_234(uint256)
asgn
init
end
_______________

Name: TMP_234 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef

Name: numerator Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for numerator

Name: numerator Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: denominator, Num: 1
Globalname: denominator
End popogation
TMP_235(uint256) = equilibriumFee_1 (c)* providedLiquidity_1
testing mul...
init
end
init
end

Name: equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: providedLiquidity Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
lnorm: u rnorm: 6
init
end
_______________

Name: providedLiquidity Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_235 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_235

Name: TMP_235 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_236(uint256) = maxFee_1 (c)- equilibriumFee_1
init
end
init
end
init
end
_______________

Name: equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_236 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_236

Name: TMP_236 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_237(uint256) = TMP_236 (c)* resultingLiquidity_1
testing mul...
init
end
init
end

Name: TMP_236 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: resultingLiquidity Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: resultingLiquidity Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_237 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_237

Name: TMP_237 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_238(uint256) = TMP_235 (c)+ TMP_237
init
end
init
end
init
end
_______________

Name: TMP_235 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_238 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_238

Name: TMP_238 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
denominator_1(uint256) := TMP_238(uint256)
asgn
init
end
_______________

Name: TMP_238 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: denominator Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for denominator

Name: denominator Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_239(bool) = denominator_1 == 0
[i]Type for TMP_239

Name: TMP_239 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: fee, Num: 1
Globalname: fee
End popogation
fee_1(uint256) := 0(uint256)
asgn
init
end
_______________

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef

Name: fee Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for fee

Name: fee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: fee, Num: 2
Globalname: fee
End popogation
TMP_240(uint256) = numerator_1 (c)/ denominator_1
init
end
init
end
lnorm: 6 rnorm: u
Source address: u
init
end
_______________

Name: PIC_167 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_240 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
init
end
init
end
lnorm: 6 rnorm: u
Source address: u
init
end
_______________

Name: PIC_168 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_240 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_240

Name: TMP_240 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
fee_2(uint256) := TMP_240(uint256)
asgn
init
end
_______________

Name: TMP_240 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef

Name: fee Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for fee

Name: fee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Source address: -982

Name: tokenAddress_1 Function: getTransferFee
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
Phid
Source address: u

Name: amount_1 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getTransferFee
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid
tokenAddress_1(address) := ϕ(['tokenAddress_1'])
Phi
[i]Type for tokenAddress

Name: tokenAddress Function: getTransferFee
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount_1'])
Phi
[i]Type for amount

Name: amount Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tokenManager_27(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_0', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_41(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getTransferFee
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: currentLiquidity, Num: 1
Globalname: currentLiquidity
End popogation

Name: liquidityProviders Function: getTransferFee
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid
TMP_228(uint256) = INTERNAL_CALL, LiquidityPool.getCurrentLiquidity(address)(tokenAddress_1)
init
end
[[], [], 6, 'tokenAddress', [], -1, -982, 'u']

Name: tokenAddress Function: getCurrentLiquidity
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
Source address: -982

Name: tokenAddress_1 Function: getCurrentLiquidity
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
tokenAddress_1(address) := ϕ(['tokenAddress_1', 'tokenAddress_1'])
Phi
[i]Type for tokenAddress

Name: tokenAddress Function: getCurrentLiquidity
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_3(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_1(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_0', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_1(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_0'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: liquidityPoolBalance, Num: 1
Globalname: liquidityPoolBalance
End popogation

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_99(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_3(ILiquidityProviders), function:getCurrentLiquidity, arguments:['tokenAddress_1']  
High Call: getCurrentLiquidity
Running querryfc
Written func info: LiquidityProviders, getCurrentLiquidity
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-982], [-1], 6, "'u'", 'u', -1)
[i]Type for TMP_99

Name: TMP_99 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
liquidityProviders_4(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_3', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_2(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_1', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_2(mapping(address => uint256)) := ϕ(['incentivePool_1', 'incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityPoolBalance_1(uint256) := TMP_99(uint256)
asgn
init
end
_______________

Name: TMP_99 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for liquidityPoolBalance

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: currentLiquidity, Num: 1
Globalname: currentLiquidity
End popogation

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_100(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_4(ILiquidityProviders), function:totalLPFees, arguments:['tokenAddress_1']  
High Call: totalLPFees
Running querryfc
Written func info: LiquidityProviders, totalLPFees
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-982], [-1], 6, "'u'", 'u', -1)
[i]Type for TMP_100

Name: TMP_100 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
liquidityProviders_5(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_4', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_3(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_2', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_3(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_2', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_101(uint256) = liquidityPoolBalance_1 (c)- TMP_100
init
end
init
end
-982
-1
lnorm: 6 rnorm: 6
init
end
_______________

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_101 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_101

Name: TMP_101 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_2(uint256) -> gasFeeAccumulatedByToken_3[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_2

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_102(uint256) = TMP_101 (c)- REF_2
init
end
init
end
init
end
_______________

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_102 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_102

Name: TMP_102 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_3(uint256) -> incentivePool_3[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_3

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_103(uint256) = TMP_102 (c)- REF_3
init
end
init
end
init
end
_______________

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_103 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_103

Name: TMP_103 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
currentLiquidity_1(uint256) := TMP_103(uint256)
asgn
init
end
_______________

Name: TMP_103 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: currentLiquidity Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for currentLiquidity

Name: currentLiquidity Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Source address: -982

Name: tokenAddress_1 Function: getCurrentLiquidity
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
tokenAddress_1(address) := ϕ(['tokenAddress_1', 'tokenAddress_1'])
Phi
[i]Type for tokenAddress

Name: tokenAddress Function: getCurrentLiquidity
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_3(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_1(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_0', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_1(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_0'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: liquidityPoolBalance, Num: 1
Globalname: liquidityPoolBalance
End popogation

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_99(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_3(ILiquidityProviders), function:getCurrentLiquidity, arguments:['tokenAddress_1']  
High Call: getCurrentLiquidity
Running querryfc
Written func info: LiquidityProviders, getCurrentLiquidity
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-982], [-1], 6, "'u'", 'u', -1)
[i]Type for TMP_99

Name: TMP_99 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
liquidityProviders_4(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_3', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_2(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_1', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_2(mapping(address => uint256)) := ϕ(['incentivePool_1', 'incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityPoolBalance_1(uint256) := TMP_99(uint256)
asgn
init
end
_______________

Name: TMP_99 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for liquidityPoolBalance

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: currentLiquidity, Num: 1
Globalname: currentLiquidity
End popogation

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_100(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_4(ILiquidityProviders), function:totalLPFees, arguments:['tokenAddress_1']  
High Call: totalLPFees
Running querryfc
Written func info: LiquidityProviders, totalLPFees
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-982], [-1], 6, "'u'", 'u', -1)
[i]Type for TMP_100

Name: TMP_100 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
liquidityProviders_5(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_4', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_3(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_2', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_3(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_2', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_101(uint256) = liquidityPoolBalance_1 (c)- TMP_100
init
end
init
end
-982
-1
lnorm: 6 rnorm: 6
init
end
_______________

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_101 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_101

Name: TMP_101 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_2(uint256) -> gasFeeAccumulatedByToken_3[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_2

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_102(uint256) = TMP_101 (c)- REF_2
init
end
init
end
init
end
_______________

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_102 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_102

Name: TMP_102 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_3(uint256) -> incentivePool_3[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_3

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_103(uint256) = TMP_102 (c)- REF_3
init
end
init
end
init
end
_______________

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_103 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_103

Name: TMP_103 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
currentLiquidity_1(uint256) := TMP_103(uint256)
asgn
init
end
_______________

Name: TMP_103 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: currentLiquidity Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for currentLiquidity

Name: currentLiquidity Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_228

Name: TMP_228 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_42(ILiquidityProviders) := ϕ(['liquidityProviders_5'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getTransferFee
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
currentLiquidity_1(uint256) := TMP_228(uint256)
asgn
init
end
_______________

Name: TMP_228 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: currentLiquidity Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for currentLiquidity

Name: currentLiquidity Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: providedLiquidity, Num: 1
Globalname: providedLiquidity
End popogation

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getTransferFee
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid
TMP_229(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_42(ILiquidityProviders), function:getSuppliedLiquidityByToken, arguments:['tokenAddress_1']  
High Call: getSuppliedLiquidityByToken
Running querryfc
Written func info: LiquidityProviders, getSuppliedLiquidityByToken
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-982], [-1], 6, "'u'", 'u', -1)
[i]Type for TMP_229

Name: TMP_229 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
tokenManager_29(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_28', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_43(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_42', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getTransferFee
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
providedLiquidity_1(uint256) := TMP_229(uint256)
asgn
init
end
_______________

Name: TMP_229 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: providedLiquidity Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for providedLiquidity

Name: providedLiquidity Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: currentLiquidity, Num: 1
Globalname: currentLiquidity
Name: resultingLiquidity, Num: 1
Globalname: resultingLiquidity
End popogation
TMP_230(uint256) = currentLiquidity_1 (c)- amount_1
init
end
init
end
init
end
_______________

Name: amount Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_230 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_230

Name: TMP_230 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
resultingLiquidity_1(uint256) := TMP_230(uint256)
asgn
init
end
_______________

Name: TMP_230 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: resultingLiquidity Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for resultingLiquidity

Name: resultingLiquidity Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: equilibriumFee, Num: 1
Globalname: equilibriumFee
End popogation

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid
TMP_231(ITokenManager.TokenInfo) = HIGH_LEVEL_CALL, dest:tokenManager_29(ITokenManager), function:getTokensInfo, arguments:['tokenAddress_1']  
High Call: getTokensInfo
Running querryfc
Written func info: TokenManager, getTokensInfo
[i]Type for TMP_231

Name: TMP_231 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: equilibriumFee
Finance Type: undef
XXXX
tokenManager_30(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_29', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
REF_62(uint256) -> TMP_231.equilibriumFee
MEMBER
init
end
init
end
init
end
_______________

Name: TMP_231.equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for REF_62

Name: TMP_231.equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: TMP_231, Field: equilibriumFee
#################
Member: 
Name: TMP_231 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: equilibriumFee
Finance Type: undef
Fieldf: 
Name: equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: TMP_231.equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
equilibriumFee_1(uint256) := REF_62(uint256)
asgn
init
end
_______________

Name: TMP_231.equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: equilibriumFee Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for equilibriumFee

Name: equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: maxFee, Num: 1
Globalname: maxFee
End popogation

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid
TMP_232(ITokenManager.TokenInfo) = HIGH_LEVEL_CALL, dest:tokenManager_30(ITokenManager), function:getTokensInfo, arguments:['tokenAddress_1']  
High Call: getTokensInfo
Running querryfc
Written func info: TokenManager, getTokensInfo
[i]Type for TMP_232

Name: TMP_232 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: maxFee
Finance Type: undef
XXXX
tokenManager_31(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_30', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
REF_64(uint256) -> TMP_232.maxFee
MEMBER
init
end
init
end
init
end
_______________

Name: TMP_232.maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for REF_64

Name: TMP_232.maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: TMP_232, Field: maxFee
#################
Member: 
Name: TMP_232 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: maxFee
Finance Type: undef
Fieldf: 
Name: maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: TMP_232.maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
maxFee_1(uint256) := REF_64(uint256)
asgn
init
end
_______________

Name: TMP_232.maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: maxFee Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for maxFee

Name: maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: numerator, Num: 1
Globalname: numerator
End popogation
TMP_233(uint256) = providedLiquidity_1 (c)* equilibriumFee_1
testing mul...
init
end
init
end

Name: providedLiquidity Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: 6 rnorm: u
init
end
_______________

Name: providedLiquidity Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_233 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_233

Name: TMP_233 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_234(uint256) = TMP_233 (c)* maxFee_1
testing mul...
init
end
init
end

Name: TMP_233 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef

Name: maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: 6 rnorm: u
init
end
_______________

Name: TMP_233 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_234 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_234

Name: TMP_234 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
numerator_1(uint256) := TMP_234(uint256)
asgn
init
end
_______________

Name: TMP_234 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef

Name: numerator Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for numerator

Name: numerator Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: denominator, Num: 1
Globalname: denominator
End popogation
TMP_235(uint256) = equilibriumFee_1 (c)* providedLiquidity_1
testing mul...
init
end
init
end

Name: equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: providedLiquidity Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
lnorm: u rnorm: 6
init
end
_______________

Name: providedLiquidity Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_235 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_235

Name: TMP_235 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_236(uint256) = maxFee_1 (c)- equilibriumFee_1
init
end
init
end
init
end
_______________

Name: equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_236 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_236

Name: TMP_236 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_237(uint256) = TMP_236 (c)* resultingLiquidity_1
testing mul...
init
end
init
end

Name: TMP_236 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: resultingLiquidity Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: resultingLiquidity Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_237 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_237

Name: TMP_237 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_238(uint256) = TMP_235 (c)+ TMP_237
init
end
init
end
init
end
_______________

Name: TMP_235 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_238 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_238

Name: TMP_238 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
denominator_1(uint256) := TMP_238(uint256)
asgn
init
end
_______________

Name: TMP_238 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: denominator Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for denominator

Name: denominator Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_239(bool) = denominator_1 == 0
[i]Type for TMP_239

Name: TMP_239 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: fee, Num: 1
Globalname: fee
End popogation
fee_1(uint256) := 0(uint256)
asgn
init
end
_______________

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef

Name: fee Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for fee

Name: fee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: fee, Num: 2
Globalname: fee
End popogation
TMP_240(uint256) = numerator_1 (c)/ denominator_1
init
end
init
end
lnorm: 6 rnorm: u
Source address: u
init
end
_______________

Name: PIC_170 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_240 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
init
end
init
end
lnorm: 6 rnorm: u
Source address: u
init
end
_______________

Name: PIC_171 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_240 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_240

Name: TMP_240 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
fee_2(uint256) := TMP_240(uint256)
asgn
init
end
_______________

Name: TMP_240 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef

Name: fee Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for fee

Name: fee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_199

Name: TMP_199 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tokenManager_21(ITokenManager) := ϕ(['tokenManager_31'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getAmountToTransfer
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_36(ILiquidityProviders) := ϕ(['liquidityProviders_43'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getAmountToTransfer
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
transferFeePerc_1(uint256) := TMP_199(uint256)
asgn
init
end
_______________

Name: TMP_199 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: transferFeePerc Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for transferFeePerc

Name: transferFeePerc Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: transferFeePerc, Num: 1
Globalname: transferFeePerc
End popogation

Name: BASE_DIVISOR Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: baseGas Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: tokenManager Function: getAmountToTransfer
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getAmountToTransfer
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_200(ITokenManager.TokenInfo) = HIGH_LEVEL_CALL, dest:tokenManager_21(ITokenManager), function:getTokensInfo, arguments:['tokenAddress_1']  
High Call: getTokensInfo
Running querryfc
Written func info: TokenManager, getTokensInfo
[i]Type for TMP_200

Name: TMP_200 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: equilibriumFee
Finance Type: undef
XXXX
BASE_DIVISOR_3(uint256) := ϕ(['BASE_DIVISOR_3', 'BASE_DIVISOR_5', 'BASE_DIVISOR_2'])
Phi
[i]Type for BASE_DIVISOR

Name: BASE_DIVISOR Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
baseGas_5(uint256) := ϕ(['baseGas_2', 'baseGas_1', 'baseGas_4', 'baseGas_9'])
Phi
[i]Type for baseGas

Name: baseGas Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tokenManager_22(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_7', 'tokenManager_1', 'tokenManager_21', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getAmountToTransfer
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_37(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_36', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getAmountToTransfer
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_6(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_5', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulated_3(mapping(address => mapping(address => uint256))) := ϕ(['gasFeeAccumulated_16', 'gasFeeAccumulated_10', 'gasFeeAccumulated_22', 'gasFeeAccumulated_2'])
Phi
[i]Type for gasFeeAccumulated

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_25(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_24'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_44(uint256) -> TMP_200.equilibriumFee
MEMBER
init
end
init
end
init
end
_______________

Name: TMP_200.equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for REF_44

Name: TMP_200.equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: TMP_200, Field: equilibriumFee
#################
Member: 
Name: TMP_200 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: equilibriumFee
Finance Type: undef
Fieldf: 
Name: equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: TMP_200.equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_201(bool) = transferFeePerc_1 > REF_44
init
end
init
end
lnorm: u rnorm: u
init
end
_______________

Name: TMP_200.equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: transferFeePerc Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
init
end
_______________

Name: TMP_200.equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_201 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_201

Name: TMP_201 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: lpFee, Num: 1
Globalname: lpFee
End popogation

Name: BASE_DIVISOR Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: baseGas Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: tokenManager Function: getAmountToTransfer
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getAmountToTransfer
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_202(ITokenManager.TokenInfo) = HIGH_LEVEL_CALL, dest:tokenManager_22(ITokenManager), function:getTokensInfo, arguments:['tokenAddress_1']  
High Call: getTokensInfo
Running querryfc
Written func info: TokenManager, getTokensInfo
[i]Type for TMP_202

Name: TMP_202 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: equilibriumFee
Finance Type: undef
XXXX
BASE_DIVISOR_4(uint256) := ϕ(['BASE_DIVISOR_3', 'BASE_DIVISOR_5'])
Phi
[i]Type for BASE_DIVISOR

Name: BASE_DIVISOR Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
baseGas_6(uint256) := ϕ(['baseGas_2', 'baseGas_1', 'baseGas_5', 'baseGas_9'])
Phi
[i]Type for baseGas

Name: baseGas Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tokenManager_23(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_7', 'tokenManager_1', 'tokenManager_22', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getAmountToTransfer
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_38(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_37', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getAmountToTransfer
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_7(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_6', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulated_4(mapping(address => mapping(address => uint256))) := ϕ(['gasFeeAccumulated_16', 'gasFeeAccumulated_10', 'gasFeeAccumulated_3', 'gasFeeAccumulated_22'])
Phi
[i]Type for gasFeeAccumulated

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_26(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_46(uint256) -> TMP_202.equilibriumFee
MEMBER
init
end
init
end
init
end
_______________

Name: TMP_202.equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for REF_46

Name: TMP_202.equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: TMP_202, Field: equilibriumFee
#################
Member: 
Name: TMP_202 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: equilibriumFee
Finance Type: undef
Fieldf: 
Name: equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: TMP_202.equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_203(uint256) = amount_1 (c)* REF_46
testing mul...
init
end
init
end

Name: amount Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_202.equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: TMP_202.equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_203 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_203

Name: TMP_203 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_204(uint256) = TMP_203 (c)/ BASE_DIVISOR_4
init
end
init
end
lnorm: u rnorm: u
init
end
init
end
init
end
lnorm: u rnorm: u
init
end
[i]Type for TMP_204

Name: TMP_204 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
lpFee_1(uint256) := TMP_204(uint256)
asgn
init
end
_______________

Name: TMP_204 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: lpFee Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for lpFee

Name: lpFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: lpFee, Num: 2
Globalname: lpFee
End popogation
TMP_210(uint256) = amount_1 (c)* transferFeePerc_1
testing mul...
init
end
init
end

Name: amount Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: transferFeePerc Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: transferFeePerc Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_210 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_210

Name: TMP_210 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_211(uint256) = TMP_210 (c)/ BASE_DIVISOR_3
init
end
init
end
lnorm: u rnorm: u
init
end
init
end
init
end
lnorm: u rnorm: u
init
end
[i]Type for TMP_211

Name: TMP_211 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
lpFee_2(uint256) := TMP_211(uint256)
asgn
init
end
_______________

Name: TMP_211 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: lpFee Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for lpFee

Name: lpFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation

Name: BASE_DIVISOR Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: baseGas Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: tokenManager Function: getAmountToTransfer
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getAmountToTransfer
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
REF_47(uint256) -> incentivePool_26[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_47

Name: incentivePool Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_48(uint256) -> incentivePool_26[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_48

Name: incentivePool Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_205(ITokenManager.TokenInfo) = HIGH_LEVEL_CALL, dest:tokenManager_23(ITokenManager), function:getTokensInfo, arguments:['tokenAddress_1']  
High Call: getTokensInfo
Running querryfc
Written func info: TokenManager, getTokensInfo
[i]Type for TMP_205

Name: TMP_205 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: equilibriumFee
Finance Type: undef
XXXX
BASE_DIVISOR_5(uint256) := ϕ(['BASE_DIVISOR_3', 'BASE_DIVISOR_5', 'BASE_DIVISOR_4'])
Phi
[i]Type for BASE_DIVISOR

Name: BASE_DIVISOR Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
baseGas_7(uint256) := ϕ(['baseGas_2', 'baseGas_1', 'baseGas_6', 'baseGas_9'])
Phi
[i]Type for baseGas

Name: baseGas Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tokenManager_24(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_23', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getAmountToTransfer
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_39(ILiquidityProviders) := ϕ(['liquidityProviders_38', 'liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getAmountToTransfer
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_8(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_7', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulated_5(mapping(address => mapping(address => uint256))) := ϕ(['gasFeeAccumulated_16', 'gasFeeAccumulated_10', 'gasFeeAccumulated_4', 'gasFeeAccumulated_22'])
Phi
[i]Type for gasFeeAccumulated

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_27(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_26', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_50(uint256) -> TMP_205.equilibriumFee
MEMBER
init
end
init
end
init
end
_______________

Name: TMP_205.equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for REF_50

Name: TMP_205.equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: TMP_205, Field: equilibriumFee
#################
Member: 
Name: TMP_205 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: equilibriumFee
Finance Type: undef
Fieldf: 
Name: equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: TMP_205.equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_206(uint256) = transferFeePerc_1 (c)- REF_50
init
end
init
end
init
end
_______________

Name: TMP_205.equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_206 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_206

Name: TMP_206 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_207(uint256) = amount_1 (c)* TMP_206
testing mul...
init
end
init
end

Name: amount Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_206 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: TMP_206 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_207 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_207

Name: TMP_207 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_208(uint256) = REF_48 (c)+ TMP_207
init
end
init
end
init
end
_______________

Name: TMP_207 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_208 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_208

Name: TMP_208 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_209(uint256) = TMP_208 (c)/ BASE_DIVISOR_5
init
end
init
end
lnorm: u rnorm: u
init
end
init
end
init
end
lnorm: u rnorm: u
init
end
[i]Type for TMP_209

Name: TMP_209 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_28(mapping(address => uint256)) := ϕ(['incentivePool_26'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_47 (->incentivePool_28) := TMP_209(uint256)
asgn
init
end
_______________

Name: TMP_209 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: REF_47 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_47

Name: REF_47 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
Source address: u
Propogating parameters and globals to SSA variables...
End popogation
Name: lpFee, Num: 3
Globalname: lpFee

Name: lpFee Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
lpFee_3(uint256) := ϕ(['lpFee_1', 'lpFee_2'])
Phi

Name: lpFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: lpFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
init
end
_______________

Name: lpFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: lpFee Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for lpFee

Name: lpFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: transferFeeAmount, Num: 1
Globalname: transferFeeAmount
End popogation
TMP_212(uint256) = amount_1 (c)* transferFeePerc_1
testing mul...
init
end
init
end

Name: amount Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: transferFeePerc Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: transferFeePerc Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_212 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_212

Name: TMP_212 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_213(uint256) = TMP_212 (c)/ BASE_DIVISOR_3
init
end
init
end
lnorm: u rnorm: u
init
end
init
end
init
end
lnorm: u rnorm: u
init
end
[i]Type for TMP_213

Name: TMP_213 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
transferFeeAmount_1(uint256) := TMP_213(uint256)
asgn
init
end
_______________

Name: TMP_213 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: transferFeeAmount Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for transferFeeAmount

Name: transferFeeAmount Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation

Name: baseGas Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: tokenManager Function: getAmountToTransfer
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getAmountToTransfer
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
HIGH_LEVEL_CALL, dest:liquidityProviders_37(ILiquidityProviders), function:addLPFee, arguments:['tokenAddress_1', 'lpFee_3']  
High Call: addLPFee
baseGas_8(uint256) := ϕ(['baseGas_2', 'baseGas_1', 'baseGas_7', 'baseGas_9'])
Phi
[i]Type for baseGas

Name: baseGas Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tokenManager_25(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_24', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getAmountToTransfer
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_40(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_39', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getAmountToTransfer
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_9(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_8', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulated_6(mapping(address => mapping(address => uint256))) := ϕ(['gasFeeAccumulated_16', 'gasFeeAccumulated_10', 'gasFeeAccumulated_22', 'gasFeeAccumulated_5'])
Phi
[i]Type for gasFeeAccumulated

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Source address: u
Name: initialGas, Num: 1
Globalname: initialGas
Name: totalGasUsed, Num: 1
Globalname: totalGasUsed
End popogation
TMP_215(uint256) = SOLIDITY_CALL gasleft()()
[i]Type for TMP_215

Name: TMP_215 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_216(uint256) = initialGas_1 (c)- TMP_215
init
end
init
end
init
end
_______________

Name: TMP_215 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_216 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_216

Name: TMP_216 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
totalGasUsed_1(uint256) := TMP_216(uint256)
asgn
init
end
_______________

Name: TMP_216 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: totalGasUsed Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for totalGasUsed

Name: totalGasUsed Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: totalGasUsed, Num: 1
Globalname: totalGasUsed
Name: totalGasUsed, Num: 2
Globalname: totalGasUsed
End popogation

Name: baseGas Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: tokenManager Function: getAmountToTransfer
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_217(ITokenManager.TokenInfo) = HIGH_LEVEL_CALL, dest:tokenManager_25(ITokenManager), function:getTokensInfo, arguments:['tokenAddress_1']  
High Call: getTokensInfo
Running querryfc
Written func info: TokenManager, getTokensInfo
[i]Type for TMP_217

Name: TMP_217 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: transferOverhead
Finance Type: undef
XXXX
baseGas_9(uint256) := ϕ(['baseGas_2', 'baseGas_1', 'baseGas_8', 'baseGas_9'])
Phi
[i]Type for baseGas

Name: baseGas Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tokenManager_26(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_25', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getAmountToTransfer
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_10(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_9', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulated_7(mapping(address => mapping(address => uint256))) := ϕ(['gasFeeAccumulated_16', 'gasFeeAccumulated_10', 'gasFeeAccumulated_22', 'gasFeeAccumulated_6'])
Phi
[i]Type for gasFeeAccumulated

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_53(uint256) -> TMP_217.transferOverhead
MEMBER
init
end
init
end
init
end
_______________

Name: TMP_217.transferOverhead Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: transferOverhead Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for REF_53

Name: TMP_217.transferOverhead Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: TMP_217, Field: transferOverhead
#################
Member: 
Name: TMP_217 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: transferOverhead
Finance Type: undef
Fieldf: 
Name: transferOverhead Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: TMP_217.transferOverhead Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: transferOverhead Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_218(uint256) = totalGasUsed_1 (c)+ REF_53
init
end
init
end
init
end
_______________

Name: TMP_217.transferOverhead Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_218 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_218

Name: TMP_218 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
totalGasUsed_2(uint256) := TMP_218(uint256)
asgn
init
end
_______________

Name: TMP_218 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: totalGasUsed Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for totalGasUsed

Name: totalGasUsed Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: totalGasUsed, Num: 3
Globalname: totalGasUsed
End popogation
TMP_219(uint256) = totalGasUsed_2 (c)+ baseGas_9
init
end
init
end
init
end
_______________

Name: baseGas Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_219 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_219

Name: TMP_219 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
totalGasUsed_3(uint256) := TMP_219(uint256)
asgn
init
end
_______________

Name: TMP_219 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: totalGasUsed Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for totalGasUsed

Name: totalGasUsed Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Source address: u
Name: tokenGasPrice, Num: 1
Globalname: tokenGasPrice
Name: gasFee, Num: 1
Globalname: gasFee
End popogation
TMP_220(uint256) = totalGasUsed_3 (c)* tokenGasPrice_1
testing mul...
init
end
init
end

Name: totalGasUsed Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: tokenGasPrice_1 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: totalGasUsed Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_220 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_220

Name: TMP_220 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
gasFee_1(uint256) := TMP_220(uint256)
asgn
init
end
_______________

Name: TMP_220 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: gasFee Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for gasFee

Name: gasFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
REF_54(uint256) -> gasFeeAccumulatedByToken_10[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_54

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_55(uint256) -> gasFeeAccumulatedByToken_10[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_55

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_221(uint256) = REF_55 (c)+ gasFee_1
init
end
init
end
init
end
_______________

Name: gasFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_221 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_221

Name: TMP_221 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_11(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_10'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_54 (->gasFeeAccumulatedByToken_11) := TMP_221(uint256)
asgn
init
end
_______________

Name: TMP_221 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: REF_54 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_54

Name: REF_54 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
Source address: u
Propogating parameters and globals to SSA variables...
End popogation

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
REF_56(mapping(address => uint256)) -> gasFeeAccumulated_7[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_56

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_222(address) = INTERNAL_CALL, LiquidityPool._msgSender()()
init
end
_______________

Name: PIC_33 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_222 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_222

Name: TMP_222 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_57(uint256) -> REF_56[TMP_222]
INDEX
Source address: u
[i]Type for REF_57

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_58(mapping(address => uint256)) -> gasFeeAccumulated_8[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_58

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_223(address) = INTERNAL_CALL, LiquidityPool._msgSender()()
init
end
_______________

Name: PIC_33 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_223 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_223

Name: TMP_223 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_59(uint256) -> REF_58[TMP_223]
INDEX
Source address: u
[i]Type for REF_59

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_224(uint256) = REF_59 (c)+ gasFee_1
init
end
init
end
init
end
_______________

Name: gasFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_224 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_224

Name: TMP_224 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulated_10(mapping(address => mapping(address => uint256))) := ϕ(['gasFeeAccumulated_7'])
Phi
[i]Type for gasFeeAccumulated

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_57 (->gasFeeAccumulated_10) := TMP_224(uint256)
asgn
init
end
_______________

Name: TMP_224 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: REF_57 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_57

Name: REF_57 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
Source address: u
Propogating parameters and globals to SSA variables...
Name: amountToTransfer, Num: 1
Globalname: amountToTransfer
End popogation
TMP_225(uint256) = transferFeeAmount_1 (c)+ gasFee_1
init
end
init
end
init
end
_______________

Name: gasFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_225 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_225

Name: TMP_225 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_226(uint256) = amount_1 (c)- TMP_225
init
end
init
end
init
end
_______________

Name: TMP_225 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_226 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_226

Name: TMP_226 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
amountToTransfer_1(uint256) := TMP_226(uint256)
asgn
init
end
_______________

Name: TMP_226 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amountToTransfer Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for amountToTransfer

Name: amountToTransfer Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Source address: u
Source address: u
[i]Type for TMP_179

Name: TMP_179 Function: sendFundsToUser
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_33(ILiquidityProviders) := ϕ(['liquidityProviders_40'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: sendFundsToUser
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
amountToTransfer_1(uint256) := TMP_179(uint256)
asgn
init
end
_______________

Name: TMP_179 Function: sendFundsToUser
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amountToTransfer Function: sendFundsToUser
Num: -982
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for amountToTransfer

Name: amountToTransfer Function: sendFundsToUser
Num: -982
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation

Name: NATIVE Function: sendFundsToUser
Num: -1
Den: -1
Address: 3
Norm: 6
LF: NATIVE
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: sendFundsToUser
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid
HIGH_LEVEL_CALL, dest:liquidityProviders_33(ILiquidityProviders), function:decreaseCurrentLiquidity, arguments:['tokenAddress_1', 'amountToTransfer_1']  
High Call: decreaseCurrentLiquidity
NATIVE_18(address) := ϕ(['NATIVE_17', 'NATIVE_28', 'NATIVE_8', 'NATIVE_22', 'NATIVE_18', 'NATIVE_32'])
Phi
[i]Type for NATIVE

Name: NATIVE Function: sendFundsToUser
Num: -1
Den: -1
Address: 3
Norm: 6
LF: NATIVE
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_34(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_33', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: sendFundsToUser
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_181(bool) = tokenAddress_1 == NATIVE_18
[i]Type for TMP_181

Name: TMP_181 Function: sendFundsToUser
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_187 = CONVERT tokenAddress_1 to IERC20Upgradeable
Converting tokenAddress_1

Name: tokenAddress Function: None
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
init
end
_______________

Name: tokenAddress Function: None
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef

Name: TMP_187 Function: sendFundsToUser
Num: 
Den: 
Address: -982
Norm: 6
LF: ERC20Upgradeable
Value: u
Fields: 
Finance Type: undef
ERC20Upgradeable
[i]Type for TMP_187

Name: TMP_187 Function: sendFundsToUser
Num: 
Den: 
Address: -982
Norm: 6
LF: ERC20Upgradeable
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_188 = CONVERT this to address
Converting this
5
[i]Type for TMP_188

Name: TMP_188 Function: sendFundsToUser
Num: 
Den: 
Address: 5
Norm: u
LF: LiquidityPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_189(uint256) = HIGH_LEVEL_CALL, dest:TMP_187(IERC20Upgradeable), function:balanceOf, arguments:['TMP_188']  
High Call: balanceOf
Running querryfc
Written func info: ERC20Upgradeable, balanceOf
Handling balance function!
-982
[i]Type for TMP_189

Name: TMP_189 Function: sendFundsToUser
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
TMP_190(bool) = TMP_189 >= amountToTransfer_1
init
end
init
end
lnorm: 6 rnorm: u
-982
-1
[i]Type for TMP_190

Name: TMP_190 Function: sendFundsToUser
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
TMP_191(None) = SOLIDITY_CALL require(bool,string)(TMP_190,Not Enough Balance)
[i]Type for TMP_191

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_192 = CONVERT tokenAddress_1 to IERC20Upgradeable
Converting tokenAddress_1

Name: tokenAddress Function: None
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
init
end
_______________

Name: tokenAddress Function: None
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef

Name: TMP_192 Function: sendFundsToUser
Num: 
Den: 
Address: -982
Norm: 6
LF: ERC20Upgradeable
Value: u
Fields: 
Finance Type: undef
ERC20Upgradeable
[i]Type for TMP_192

Name: TMP_192 Function: sendFundsToUser
Num: 
Den: 
Address: -982
Norm: 6
LF: ERC20Upgradeable
Value: u
Fields: 
Finance Type: undef
XXXX
LIBRARY_CALL, dest:SafeERC20Upgradeable, function:SafeERC20Upgradeable.safeTransfer(IERC20Upgradeable,address,uint256), arguments:['TMP_192', 'receiver_1', 'amountToTransfer_1'] 
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Source address: u
Name: depositHash, Num: 1
Globalname: depositHash
Source address: u
Name: fromChainId, Num: 1
Globalname: fromChainId
End popogation
Propogating parameters and globals to SSA variables...
End popogation
TMP_182 = CONVERT this to address
Converting this
5
[i]Type for TMP_182

Name: TMP_182 Function: sendFundsToUser
Num: 
Den: 
Address: 5
Norm: u
LF: LiquidityPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_183(uint256) = SOLIDITY_CALL balance(address)(TMP_182)
[i]Type for TMP_183

Name: TMP_183 Function: None
Num: -982
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_184(bool) = TMP_183 >= amountToTransfer_1
init
end
init
end
lnorm: u rnorm: u
-982
-1
[i]Type for TMP_184

Name: TMP_184 Function: sendFundsToUser
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_185(None) = SOLIDITY_CALL require(bool,string)(TMP_184,Not Enough Balance)
[i]Type for TMP_185

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: success, Num: 1
Globalname: success
End popogation
TUPLE_1(bool,bytes) = LOW_LEVEL_CALL, dest:receiver_1, function:call, arguments:[''] value:amountToTransfer_1 
[i]Type for TUPLE_1

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
success_1(bool)= UNPACK TUPLE_1 index: 0 
Finding type for success(bool ... )
[i]Type for success

Name: success Function: sendFundsToUser
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: success, Num: 1
Globalname: success
End popogation
TMP_186(None) = SOLIDITY_CALL require(bool,string)(success_1,Native Transfer Failed)
[i]Type for TMP_186

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX



getAmountToTransfer
Finding type for initialGas(uint256 ... )
Finding type for tokenAddress(address ... )
prev address? -982
Head Addr: -982
    Norm: 6
    Set: {-982}
    Fin: NULL
Finding type for amount(uint256 ... )
Finding type for tokenGasPrice(uint256 ... )
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: []
    den: []
    norm: 6
    link: tokenAddress
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 3
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1


initialGas_1(uint256) := ϕ(['initialGas_1'])
tokenAddress_1(address) := ϕ(['tokenAddress_1'])
amount_1(uint256) := ϕ(['amount_1'])
tokenGasPrice_1(uint256) := ϕ(['tokenGasPrice_1'])
BASE_DIVISOR_1(uint256) := ϕ(['BASE_DIVISOR_3', 'BASE_DIVISOR_5', 'BASE_DIVISOR_0'])
baseGas_3(uint256) := ϕ(['baseGas_2', 'baseGas_1', 'baseGas_0', 'baseGas_9'])
tokenManager_20(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_0', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
liquidityProviders_35(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
gasFeeAccumulatedByToken_4(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_0', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
gasFeeAccumulated_1(mapping(address => mapping(address => uint256))) := ϕ(['gasFeeAccumulated_0', 'gasFeeAccumulated_10', 'gasFeeAccumulated_16', 'gasFeeAccumulated_22'])
incentivePool_23(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_0'])
TMP_199(uint256) = INTERNAL_CALL, LiquidityPool.getTransferFee(address,uint256)(tokenAddress_1,amount_1)
tokenManager_21(ITokenManager) := ϕ(['tokenManager_31'])
liquidityProviders_36(ILiquidityProviders) := ϕ(['liquidityProviders_43'])
transferFeePerc_1(uint256) := TMP_199(uint256)
TMP_200(ITokenManager.TokenInfo) = HIGH_LEVEL_CALL, dest:tokenManager_21(ITokenManager), function:getTokensInfo, arguments:['tokenAddress_1']  
BASE_DIVISOR_3(uint256) := ϕ(['BASE_DIVISOR_3', 'BASE_DIVISOR_5', 'BASE_DIVISOR_2'])
baseGas_5(uint256) := ϕ(['baseGas_2', 'baseGas_1', 'baseGas_4', 'baseGas_9'])
tokenManager_22(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_7', 'tokenManager_1', 'tokenManager_21', 'tokenManager_19'])
liquidityProviders_37(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_36', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
gasFeeAccumulatedByToken_6(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_5', 'gasFeeAccumulatedByToken_23'])
gasFeeAccumulated_3(mapping(address => mapping(address => uint256))) := ϕ(['gasFeeAccumulated_16', 'gasFeeAccumulated_10', 'gasFeeAccumulated_22', 'gasFeeAccumulated_2'])
incentivePool_25(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_24'])
REF_44(uint256) -> TMP_200.equilibriumFee
TMP_201(bool) = transferFeePerc_1 > REF_44
CONDITION TMP_201
TMP_202(ITokenManager.TokenInfo) = HIGH_LEVEL_CALL, dest:tokenManager_22(ITokenManager), function:getTokensInfo, arguments:['tokenAddress_1']  
BASE_DIVISOR_4(uint256) := ϕ(['BASE_DIVISOR_3', 'BASE_DIVISOR_5'])
baseGas_6(uint256) := ϕ(['baseGas_2', 'baseGas_1', 'baseGas_5', 'baseGas_9'])
tokenManager_23(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_7', 'tokenManager_1', 'tokenManager_22', 'tokenManager_19'])
liquidityProviders_38(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_37', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
gasFeeAccumulatedByToken_7(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_6', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
gasFeeAccumulated_4(mapping(address => mapping(address => uint256))) := ϕ(['gasFeeAccumulated_16', 'gasFeeAccumulated_10', 'gasFeeAccumulated_3', 'gasFeeAccumulated_22'])
incentivePool_26(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21'])
REF_46(uint256) -> TMP_202.equilibriumFee
TMP_203(uint256) = amount_1 (c)* REF_46
TMP_204(uint256) = TMP_203 (c)/ BASE_DIVISOR_4
lpFee_1(uint256) := TMP_204(uint256)
TMP_210(uint256) = amount_1 (c)* transferFeePerc_1
TMP_211(uint256) = TMP_210 (c)/ BASE_DIVISOR_3
lpFee_2(uint256) := TMP_211(uint256)
REF_47(uint256) -> incentivePool_26[tokenAddress_1]
REF_48(uint256) -> incentivePool_26[tokenAddress_1]
TMP_205(ITokenManager.TokenInfo) = HIGH_LEVEL_CALL, dest:tokenManager_23(ITokenManager), function:getTokensInfo, arguments:['tokenAddress_1']  
BASE_DIVISOR_5(uint256) := ϕ(['BASE_DIVISOR_3', 'BASE_DIVISOR_5', 'BASE_DIVISOR_4'])
baseGas_7(uint256) := ϕ(['baseGas_2', 'baseGas_1', 'baseGas_6', 'baseGas_9'])
tokenManager_24(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_23', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
liquidityProviders_39(ILiquidityProviders) := ϕ(['liquidityProviders_38', 'liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
gasFeeAccumulatedByToken_8(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_7', 'gasFeeAccumulatedByToken_23'])
gasFeeAccumulated_5(mapping(address => mapping(address => uint256))) := ϕ(['gasFeeAccumulated_16', 'gasFeeAccumulated_10', 'gasFeeAccumulated_4', 'gasFeeAccumulated_22'])
incentivePool_27(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_26', 'incentivePool_21'])
REF_50(uint256) -> TMP_205.equilibriumFee
TMP_206(uint256) = transferFeePerc_1 (c)- REF_50
TMP_207(uint256) = amount_1 (c)* TMP_206
TMP_208(uint256) = REF_48 (c)+ TMP_207
TMP_209(uint256) = TMP_208 (c)/ BASE_DIVISOR_5
incentivePool_28(mapping(address => uint256)) := ϕ(['incentivePool_26'])
REF_47 (->incentivePool_28) := TMP_209(uint256)
lpFee_3(uint256) := ϕ(['lpFee_1', 'lpFee_2'])
TMP_212(uint256) = amount_1 (c)* transferFeePerc_1
TMP_213(uint256) = TMP_212 (c)/ BASE_DIVISOR_3
transferFeeAmount_1(uint256) := TMP_213(uint256)
HIGH_LEVEL_CALL, dest:liquidityProviders_37(ILiquidityProviders), function:addLPFee, arguments:['tokenAddress_1', 'lpFee_3']  
baseGas_8(uint256) := ϕ(['baseGas_2', 'baseGas_1', 'baseGas_7', 'baseGas_9'])
tokenManager_25(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_24', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
liquidityProviders_40(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_39', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
gasFeeAccumulatedByToken_9(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_8', 'gasFeeAccumulatedByToken_23'])
gasFeeAccumulated_6(mapping(address => mapping(address => uint256))) := ϕ(['gasFeeAccumulated_16', 'gasFeeAccumulated_10', 'gasFeeAccumulated_22', 'gasFeeAccumulated_5'])
TMP_215(uint256) = SOLIDITY_CALL gasleft()()
TMP_216(uint256) = initialGas_1 (c)- TMP_215
totalGasUsed_1(uint256) := TMP_216(uint256)
TMP_217(ITokenManager.TokenInfo) = HIGH_LEVEL_CALL, dest:tokenManager_25(ITokenManager), function:getTokensInfo, arguments:['tokenAddress_1']  
baseGas_9(uint256) := ϕ(['baseGas_2', 'baseGas_1', 'baseGas_8', 'baseGas_9'])
tokenManager_26(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_25', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
gasFeeAccumulatedByToken_10(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_9', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
gasFeeAccumulated_7(mapping(address => mapping(address => uint256))) := ϕ(['gasFeeAccumulated_16', 'gasFeeAccumulated_10', 'gasFeeAccumulated_22', 'gasFeeAccumulated_6'])
REF_53(uint256) -> TMP_217.transferOverhead
TMP_218(uint256) = totalGasUsed_1 (c)+ REF_53
totalGasUsed_2(uint256) := TMP_218(uint256)
TMP_219(uint256) = totalGasUsed_2 (c)+ baseGas_9
totalGasUsed_3(uint256) := TMP_219(uint256)
TMP_220(uint256) = totalGasUsed_3 (c)* tokenGasPrice_1
gasFee_1(uint256) := TMP_220(uint256)
REF_54(uint256) -> gasFeeAccumulatedByToken_10[tokenAddress_1]
REF_55(uint256) -> gasFeeAccumulatedByToken_10[tokenAddress_1]
TMP_221(uint256) = REF_55 (c)+ gasFee_1
gasFeeAccumulatedByToken_11(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_10'])
REF_54 (->gasFeeAccumulatedByToken_11) := TMP_221(uint256)
REF_56(mapping(address => uint256)) -> gasFeeAccumulated_7[tokenAddress_1]
TMP_222(address) = INTERNAL_CALL, LiquidityPool._msgSender()()
REF_57(uint256) -> REF_56[TMP_222]
REF_58(mapping(address => uint256)) -> gasFeeAccumulated_8[tokenAddress_1]
TMP_223(address) = INTERNAL_CALL, LiquidityPool._msgSender()()
REF_59(uint256) -> REF_58[TMP_223]
TMP_224(uint256) = REF_59 (c)+ gasFee_1
gasFeeAccumulated_10(mapping(address => mapping(address => uint256))) := ϕ(['gasFeeAccumulated_7'])
REF_57 (->gasFeeAccumulated_10) := TMP_224(uint256)
TMP_225(uint256) = transferFeeAmount_1 (c)+ gasFee_1
TMP_226(uint256) = amount_1 (c)- TMP_225
amountToTransfer_1(uint256) := TMP_226(uint256)
Emit FeeDetails(lpFee_3,transferFeeAmount_1,gasFee_1)


Propogating parameters and globals to SSA variables...
End popogation
Source address: u
Name: initialGas, Num: 1
Globalname: initialGas

Name: initialGas_1 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Source address: -982

Name: tokenAddress_1 Function: getAmountToTransfer
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
Phid
Source address: u
Name: amount, Num: 1
Globalname: amount

Name: amount_1 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Source address: u
Name: tokenGasPrice, Num: 1
Globalname: tokenGasPrice

Name: tokenGasPrice_1 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: BASE_DIVISOR Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: baseGas Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: tokenManager Function: getAmountToTransfer
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getAmountToTransfer
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
initialGas_1(uint256) := ϕ(['initialGas_1'])
Phi

Name: initialGas Function: sendFundsToUser
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for initialGas

Name: initialGas Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tokenAddress_1(address) := ϕ(['tokenAddress_1'])
Phi
[i]Type for tokenAddress

Name: tokenAddress Function: getAmountToTransfer
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount_1'])
Phi

Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
init
end
_______________

Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for amount

Name: amount Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tokenGasPrice_1(uint256) := ϕ(['tokenGasPrice_1'])
Phi

Name: tokenGasPrice Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for tokenGasPrice

Name: tokenGasPrice Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
BASE_DIVISOR_1(uint256) := ϕ(['BASE_DIVISOR_3', 'BASE_DIVISOR_5', 'BASE_DIVISOR_0'])
Phi
[i]Type for BASE_DIVISOR

Name: BASE_DIVISOR Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
baseGas_3(uint256) := ϕ(['baseGas_2', 'baseGas_1', 'baseGas_0', 'baseGas_9'])
Phi
[i]Type for baseGas

Name: baseGas Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tokenManager_20(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_0', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getAmountToTransfer
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_35(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getAmountToTransfer
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_4(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_0', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulated_1(mapping(address => mapping(address => uint256))) := ϕ(['gasFeeAccumulated_0', 'gasFeeAccumulated_10', 'gasFeeAccumulated_16', 'gasFeeAccumulated_22'])
Phi
[i]Type for gasFeeAccumulated

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_23(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_0'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: transferFeePerc, Num: 1
Globalname: transferFeePerc
End popogation

Name: tokenManager Function: getAmountToTransfer
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getAmountToTransfer
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid
TMP_199(uint256) = INTERNAL_CALL, LiquidityPool.getTransferFee(address,uint256)(tokenAddress_1,amount_1)
init
end
init
end
[[], [], 6, 'tokenAddress', [], -1, -982, 'u']

Name: tokenAddress Function: None
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
Source address: -982

Name: tokenAddress_1 Function: getTransferFee
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
Phid
Source address: u

Name: amount_1 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getTransferFee
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid
tokenAddress_1(address) := ϕ(['tokenAddress_1'])
Phi
[i]Type for tokenAddress

Name: tokenAddress Function: getTransferFee
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount_1'])
Phi
[i]Type for amount

Name: amount Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tokenManager_27(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_0', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_41(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getTransferFee
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: currentLiquidity, Num: 1
Globalname: currentLiquidity
End popogation

Name: liquidityProviders Function: getTransferFee
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid
TMP_228(uint256) = INTERNAL_CALL, LiquidityPool.getCurrentLiquidity(address)(tokenAddress_1)
init
end
[[], [], 6, 'tokenAddress', [], -1, -982, 'u']

Name: tokenAddress Function: getCurrentLiquidity
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
Source address: -982

Name: tokenAddress_1 Function: getCurrentLiquidity
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
tokenAddress_1(address) := ϕ(['tokenAddress_1', 'tokenAddress_1'])
Phi
[i]Type for tokenAddress

Name: tokenAddress Function: getCurrentLiquidity
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_3(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_1(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_0', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_1(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_0'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: liquidityPoolBalance, Num: 1
Globalname: liquidityPoolBalance
End popogation

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_99(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_3(ILiquidityProviders), function:getCurrentLiquidity, arguments:['tokenAddress_1']  
High Call: getCurrentLiquidity
Running querryfc
Written func info: LiquidityProviders, getCurrentLiquidity
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-982], [-1], 6, "'u'", 'u', -1)
[i]Type for TMP_99

Name: TMP_99 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
liquidityProviders_4(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_3', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_2(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_1', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_2(mapping(address => uint256)) := ϕ(['incentivePool_1', 'incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityPoolBalance_1(uint256) := TMP_99(uint256)
asgn
init
end
_______________

Name: TMP_99 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for liquidityPoolBalance

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: currentLiquidity, Num: 1
Globalname: currentLiquidity
End popogation

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_100(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_4(ILiquidityProviders), function:totalLPFees, arguments:['tokenAddress_1']  
High Call: totalLPFees
Running querryfc
Written func info: LiquidityProviders, totalLPFees
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-982], [-1], 6, "'u'", 'u', -1)
[i]Type for TMP_100

Name: TMP_100 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
liquidityProviders_5(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_4', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_3(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_2', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_3(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_2', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_101(uint256) = liquidityPoolBalance_1 (c)- TMP_100
init
end
init
end
-982
-1
lnorm: 6 rnorm: 6
init
end
_______________

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_101 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_101

Name: TMP_101 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_2(uint256) -> gasFeeAccumulatedByToken_3[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_2

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_102(uint256) = TMP_101 (c)- REF_2
init
end
init
end
init
end
_______________

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_102 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_102

Name: TMP_102 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_3(uint256) -> incentivePool_3[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_3

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_103(uint256) = TMP_102 (c)- REF_3
init
end
init
end
init
end
_______________

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_103 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_103

Name: TMP_103 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
currentLiquidity_1(uint256) := TMP_103(uint256)
asgn
init
end
_______________

Name: TMP_103 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: currentLiquidity Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for currentLiquidity

Name: currentLiquidity Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Source address: -982

Name: tokenAddress_1 Function: getCurrentLiquidity
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
tokenAddress_1(address) := ϕ(['tokenAddress_1', 'tokenAddress_1'])
Phi
[i]Type for tokenAddress

Name: tokenAddress Function: getCurrentLiquidity
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_3(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_1(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_0', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_1(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_0'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: liquidityPoolBalance, Num: 1
Globalname: liquidityPoolBalance
End popogation

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_99(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_3(ILiquidityProviders), function:getCurrentLiquidity, arguments:['tokenAddress_1']  
High Call: getCurrentLiquidity
Running querryfc
Written func info: LiquidityProviders, getCurrentLiquidity
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-982], [-1], 6, "'u'", 'u', -1)
[i]Type for TMP_99

Name: TMP_99 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
liquidityProviders_4(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_3', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_2(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_1', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_2(mapping(address => uint256)) := ϕ(['incentivePool_1', 'incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityPoolBalance_1(uint256) := TMP_99(uint256)
asgn
init
end
_______________

Name: TMP_99 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for liquidityPoolBalance

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: currentLiquidity, Num: 1
Globalname: currentLiquidity
End popogation

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_100(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_4(ILiquidityProviders), function:totalLPFees, arguments:['tokenAddress_1']  
High Call: totalLPFees
Running querryfc
Written func info: LiquidityProviders, totalLPFees
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-982], [-1], 6, "'u'", 'u', -1)
[i]Type for TMP_100

Name: TMP_100 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
liquidityProviders_5(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_4', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_3(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_2', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_3(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_2', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_101(uint256) = liquidityPoolBalance_1 (c)- TMP_100
init
end
init
end
-982
-1
lnorm: 6 rnorm: 6
init
end
_______________

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_101 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_101

Name: TMP_101 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_2(uint256) -> gasFeeAccumulatedByToken_3[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_2

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_102(uint256) = TMP_101 (c)- REF_2
init
end
init
end
init
end
_______________

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_102 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_102

Name: TMP_102 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_3(uint256) -> incentivePool_3[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_3

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_103(uint256) = TMP_102 (c)- REF_3
init
end
init
end
init
end
_______________

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_103 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_103

Name: TMP_103 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
currentLiquidity_1(uint256) := TMP_103(uint256)
asgn
init
end
_______________

Name: TMP_103 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: currentLiquidity Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for currentLiquidity

Name: currentLiquidity Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_228

Name: TMP_228 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_42(ILiquidityProviders) := ϕ(['liquidityProviders_5'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getTransferFee
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
currentLiquidity_1(uint256) := TMP_228(uint256)
asgn
init
end
_______________

Name: TMP_228 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: currentLiquidity Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for currentLiquidity

Name: currentLiquidity Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: providedLiquidity, Num: 1
Globalname: providedLiquidity
End popogation

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getTransferFee
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid
TMP_229(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_42(ILiquidityProviders), function:getSuppliedLiquidityByToken, arguments:['tokenAddress_1']  
High Call: getSuppliedLiquidityByToken
Running querryfc
Written func info: LiquidityProviders, getSuppliedLiquidityByToken
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-982], [-1], 6, "'u'", 'u', -1)
[i]Type for TMP_229

Name: TMP_229 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
tokenManager_29(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_28', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_43(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_42', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getTransferFee
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
providedLiquidity_1(uint256) := TMP_229(uint256)
asgn
init
end
_______________

Name: TMP_229 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: providedLiquidity Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for providedLiquidity

Name: providedLiquidity Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: currentLiquidity, Num: 1
Globalname: currentLiquidity
Name: resultingLiquidity, Num: 1
Globalname: resultingLiquidity
End popogation
TMP_230(uint256) = currentLiquidity_1 (c)- amount_1
init
end
init
end
init
end
_______________

Name: amount Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_230 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_230

Name: TMP_230 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
resultingLiquidity_1(uint256) := TMP_230(uint256)
asgn
init
end
_______________

Name: TMP_230 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: resultingLiquidity Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for resultingLiquidity

Name: resultingLiquidity Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: equilibriumFee, Num: 1
Globalname: equilibriumFee
End popogation

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid
TMP_231(ITokenManager.TokenInfo) = HIGH_LEVEL_CALL, dest:tokenManager_29(ITokenManager), function:getTokensInfo, arguments:['tokenAddress_1']  
High Call: getTokensInfo
Running querryfc
Written func info: TokenManager, getTokensInfo
[i]Type for TMP_231

Name: TMP_231 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: equilibriumFee
Finance Type: undef
XXXX
tokenManager_30(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_29', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
REF_62(uint256) -> TMP_231.equilibriumFee
MEMBER
init
end
init
end
init
end
_______________

Name: TMP_231.equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for REF_62

Name: TMP_231.equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: TMP_231, Field: equilibriumFee
#################
Member: 
Name: TMP_231 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: equilibriumFee
Finance Type: undef
Fieldf: 
Name: equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: TMP_231.equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
equilibriumFee_1(uint256) := REF_62(uint256)
asgn
init
end
_______________

Name: TMP_231.equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: equilibriumFee Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for equilibriumFee

Name: equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: maxFee, Num: 1
Globalname: maxFee
End popogation

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid
TMP_232(ITokenManager.TokenInfo) = HIGH_LEVEL_CALL, dest:tokenManager_30(ITokenManager), function:getTokensInfo, arguments:['tokenAddress_1']  
High Call: getTokensInfo
Running querryfc
Written func info: TokenManager, getTokensInfo
[i]Type for TMP_232

Name: TMP_232 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: maxFee
Finance Type: undef
XXXX
tokenManager_31(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_30', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
REF_64(uint256) -> TMP_232.maxFee
MEMBER
init
end
init
end
init
end
_______________

Name: TMP_232.maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for REF_64

Name: TMP_232.maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: TMP_232, Field: maxFee
#################
Member: 
Name: TMP_232 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: maxFee
Finance Type: undef
Fieldf: 
Name: maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: TMP_232.maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
maxFee_1(uint256) := REF_64(uint256)
asgn
init
end
_______________

Name: TMP_232.maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: maxFee Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for maxFee

Name: maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: numerator, Num: 1
Globalname: numerator
End popogation
TMP_233(uint256) = providedLiquidity_1 (c)* equilibriumFee_1
testing mul...
init
end
init
end

Name: providedLiquidity Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: 6 rnorm: u
init
end
_______________

Name: providedLiquidity Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_233 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_233

Name: TMP_233 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_234(uint256) = TMP_233 (c)* maxFee_1
testing mul...
init
end
init
end

Name: TMP_233 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef

Name: maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: 6 rnorm: u
init
end
_______________

Name: TMP_233 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_234 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_234

Name: TMP_234 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
numerator_1(uint256) := TMP_234(uint256)
asgn
init
end
_______________

Name: TMP_234 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef

Name: numerator Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for numerator

Name: numerator Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: denominator, Num: 1
Globalname: denominator
End popogation
TMP_235(uint256) = equilibriumFee_1 (c)* providedLiquidity_1
testing mul...
init
end
init
end

Name: equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: providedLiquidity Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
lnorm: u rnorm: 6
init
end
_______________

Name: providedLiquidity Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_235 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_235

Name: TMP_235 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_236(uint256) = maxFee_1 (c)- equilibriumFee_1
init
end
init
end
init
end
_______________

Name: equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_236 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_236

Name: TMP_236 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_237(uint256) = TMP_236 (c)* resultingLiquidity_1
testing mul...
init
end
init
end

Name: TMP_236 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: resultingLiquidity Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: resultingLiquidity Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_237 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_237

Name: TMP_237 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_238(uint256) = TMP_235 (c)+ TMP_237
init
end
init
end
init
end
_______________

Name: TMP_235 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_238 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_238

Name: TMP_238 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
denominator_1(uint256) := TMP_238(uint256)
asgn
init
end
_______________

Name: TMP_238 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: denominator Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for denominator

Name: denominator Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_239(bool) = denominator_1 == 0
[i]Type for TMP_239

Name: TMP_239 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: fee, Num: 1
Globalname: fee
End popogation
fee_1(uint256) := 0(uint256)
asgn
init
end
_______________

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef

Name: fee Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for fee

Name: fee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: fee, Num: 2
Globalname: fee
End popogation
TMP_240(uint256) = numerator_1 (c)/ denominator_1
init
end
init
end
lnorm: 6 rnorm: u
Source address: u
init
end
_______________

Name: PIC_176 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_240 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
init
end
init
end
lnorm: 6 rnorm: u
Source address: u
init
end
_______________

Name: PIC_177 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_240 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_240

Name: TMP_240 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
fee_2(uint256) := TMP_240(uint256)
asgn
init
end
_______________

Name: TMP_240 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef

Name: fee Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for fee

Name: fee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Source address: -982

Name: tokenAddress_1 Function: getTransferFee
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
Phid
Source address: u

Name: amount_1 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getTransferFee
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid
tokenAddress_1(address) := ϕ(['tokenAddress_1'])
Phi
[i]Type for tokenAddress

Name: tokenAddress Function: getTransferFee
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount_1'])
Phi
[i]Type for amount

Name: amount Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tokenManager_27(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_0', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_41(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getTransferFee
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: currentLiquidity, Num: 1
Globalname: currentLiquidity
End popogation

Name: liquidityProviders Function: getTransferFee
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid
TMP_228(uint256) = INTERNAL_CALL, LiquidityPool.getCurrentLiquidity(address)(tokenAddress_1)
init
end
[[], [], 6, 'tokenAddress', [], -1, -982, 'u']

Name: tokenAddress Function: getCurrentLiquidity
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
Source address: -982

Name: tokenAddress_1 Function: getCurrentLiquidity
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
tokenAddress_1(address) := ϕ(['tokenAddress_1', 'tokenAddress_1'])
Phi
[i]Type for tokenAddress

Name: tokenAddress Function: getCurrentLiquidity
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_3(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_1(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_0', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_1(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_0'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: liquidityPoolBalance, Num: 1
Globalname: liquidityPoolBalance
End popogation

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_99(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_3(ILiquidityProviders), function:getCurrentLiquidity, arguments:['tokenAddress_1']  
High Call: getCurrentLiquidity
Running querryfc
Written func info: LiquidityProviders, getCurrentLiquidity
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-982], [-1], 6, "'u'", 'u', -1)
[i]Type for TMP_99

Name: TMP_99 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
liquidityProviders_4(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_3', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_2(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_1', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_2(mapping(address => uint256)) := ϕ(['incentivePool_1', 'incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityPoolBalance_1(uint256) := TMP_99(uint256)
asgn
init
end
_______________

Name: TMP_99 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for liquidityPoolBalance

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: currentLiquidity, Num: 1
Globalname: currentLiquidity
End popogation

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_100(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_4(ILiquidityProviders), function:totalLPFees, arguments:['tokenAddress_1']  
High Call: totalLPFees
Running querryfc
Written func info: LiquidityProviders, totalLPFees
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-982], [-1], 6, "'u'", 'u', -1)
[i]Type for TMP_100

Name: TMP_100 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
liquidityProviders_5(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_4', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_3(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_2', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_3(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_2', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_101(uint256) = liquidityPoolBalance_1 (c)- TMP_100
init
end
init
end
-982
-1
lnorm: 6 rnorm: 6
init
end
_______________

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_101 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_101

Name: TMP_101 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_2(uint256) -> gasFeeAccumulatedByToken_3[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_2

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_102(uint256) = TMP_101 (c)- REF_2
init
end
init
end
init
end
_______________

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_102 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_102

Name: TMP_102 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_3(uint256) -> incentivePool_3[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_3

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_103(uint256) = TMP_102 (c)- REF_3
init
end
init
end
init
end
_______________

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_103 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_103

Name: TMP_103 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
currentLiquidity_1(uint256) := TMP_103(uint256)
asgn
init
end
_______________

Name: TMP_103 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: currentLiquidity Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for currentLiquidity

Name: currentLiquidity Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Source address: -982

Name: tokenAddress_1 Function: getCurrentLiquidity
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
tokenAddress_1(address) := ϕ(['tokenAddress_1', 'tokenAddress_1'])
Phi
[i]Type for tokenAddress

Name: tokenAddress Function: getCurrentLiquidity
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_3(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_1(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_0', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_1(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_0'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: liquidityPoolBalance, Num: 1
Globalname: liquidityPoolBalance
End popogation

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_99(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_3(ILiquidityProviders), function:getCurrentLiquidity, arguments:['tokenAddress_1']  
High Call: getCurrentLiquidity
Running querryfc
Written func info: LiquidityProviders, getCurrentLiquidity
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-982], [-1], 6, "'u'", 'u', -1)
[i]Type for TMP_99

Name: TMP_99 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
liquidityProviders_4(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_3', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_2(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_1', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_2(mapping(address => uint256)) := ϕ(['incentivePool_1', 'incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityPoolBalance_1(uint256) := TMP_99(uint256)
asgn
init
end
_______________

Name: TMP_99 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for liquidityPoolBalance

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: currentLiquidity, Num: 1
Globalname: currentLiquidity
End popogation

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_100(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_4(ILiquidityProviders), function:totalLPFees, arguments:['tokenAddress_1']  
High Call: totalLPFees
Running querryfc
Written func info: LiquidityProviders, totalLPFees
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-982], [-1], 6, "'u'", 'u', -1)
[i]Type for TMP_100

Name: TMP_100 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
liquidityProviders_5(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_4', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_3(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_2', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_3(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_2', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_101(uint256) = liquidityPoolBalance_1 (c)- TMP_100
init
end
init
end
-982
-1
lnorm: 6 rnorm: 6
init
end
_______________

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_101 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_101

Name: TMP_101 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_2(uint256) -> gasFeeAccumulatedByToken_3[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_2

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_102(uint256) = TMP_101 (c)- REF_2
init
end
init
end
init
end
_______________

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_102 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_102

Name: TMP_102 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_3(uint256) -> incentivePool_3[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_3

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_103(uint256) = TMP_102 (c)- REF_3
init
end
init
end
init
end
_______________

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_103 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_103

Name: TMP_103 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
currentLiquidity_1(uint256) := TMP_103(uint256)
asgn
init
end
_______________

Name: TMP_103 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: currentLiquidity Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for currentLiquidity

Name: currentLiquidity Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_228

Name: TMP_228 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_42(ILiquidityProviders) := ϕ(['liquidityProviders_5'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getTransferFee
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
currentLiquidity_1(uint256) := TMP_228(uint256)
asgn
init
end
_______________

Name: TMP_228 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: currentLiquidity Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for currentLiquidity

Name: currentLiquidity Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: providedLiquidity, Num: 1
Globalname: providedLiquidity
End popogation

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getTransferFee
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid
TMP_229(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_42(ILiquidityProviders), function:getSuppliedLiquidityByToken, arguments:['tokenAddress_1']  
High Call: getSuppliedLiquidityByToken
Running querryfc
Written func info: LiquidityProviders, getSuppliedLiquidityByToken
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-982], [-1], 6, "'u'", 'u', -1)
[i]Type for TMP_229

Name: TMP_229 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
tokenManager_29(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_28', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_43(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_42', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getTransferFee
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
providedLiquidity_1(uint256) := TMP_229(uint256)
asgn
init
end
_______________

Name: TMP_229 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: providedLiquidity Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for providedLiquidity

Name: providedLiquidity Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: currentLiquidity, Num: 1
Globalname: currentLiquidity
Name: resultingLiquidity, Num: 1
Globalname: resultingLiquidity
End popogation
TMP_230(uint256) = currentLiquidity_1 (c)- amount_1
init
end
init
end
init
end
_______________

Name: amount Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_230 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_230

Name: TMP_230 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
resultingLiquidity_1(uint256) := TMP_230(uint256)
asgn
init
end
_______________

Name: TMP_230 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: resultingLiquidity Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for resultingLiquidity

Name: resultingLiquidity Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: equilibriumFee, Num: 1
Globalname: equilibriumFee
End popogation

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid
TMP_231(ITokenManager.TokenInfo) = HIGH_LEVEL_CALL, dest:tokenManager_29(ITokenManager), function:getTokensInfo, arguments:['tokenAddress_1']  
High Call: getTokensInfo
Running querryfc
Written func info: TokenManager, getTokensInfo
[i]Type for TMP_231

Name: TMP_231 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: equilibriumFee
Finance Type: undef
XXXX
tokenManager_30(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_29', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
REF_62(uint256) -> TMP_231.equilibriumFee
MEMBER
init
end
init
end
init
end
_______________

Name: TMP_231.equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for REF_62

Name: TMP_231.equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: TMP_231, Field: equilibriumFee
#################
Member: 
Name: TMP_231 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: equilibriumFee
Finance Type: undef
Fieldf: 
Name: equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: TMP_231.equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
equilibriumFee_1(uint256) := REF_62(uint256)
asgn
init
end
_______________

Name: TMP_231.equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: equilibriumFee Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for equilibriumFee

Name: equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: maxFee, Num: 1
Globalname: maxFee
End popogation

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid
TMP_232(ITokenManager.TokenInfo) = HIGH_LEVEL_CALL, dest:tokenManager_30(ITokenManager), function:getTokensInfo, arguments:['tokenAddress_1']  
High Call: getTokensInfo
Running querryfc
Written func info: TokenManager, getTokensInfo
[i]Type for TMP_232

Name: TMP_232 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: maxFee
Finance Type: undef
XXXX
tokenManager_31(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_30', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
REF_64(uint256) -> TMP_232.maxFee
MEMBER
init
end
init
end
init
end
_______________

Name: TMP_232.maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for REF_64

Name: TMP_232.maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: TMP_232, Field: maxFee
#################
Member: 
Name: TMP_232 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: maxFee
Finance Type: undef
Fieldf: 
Name: maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: TMP_232.maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
maxFee_1(uint256) := REF_64(uint256)
asgn
init
end
_______________

Name: TMP_232.maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: maxFee Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for maxFee

Name: maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: numerator, Num: 1
Globalname: numerator
End popogation
TMP_233(uint256) = providedLiquidity_1 (c)* equilibriumFee_1
testing mul...
init
end
init
end

Name: providedLiquidity Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: 6 rnorm: u
init
end
_______________

Name: providedLiquidity Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_233 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_233

Name: TMP_233 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_234(uint256) = TMP_233 (c)* maxFee_1
testing mul...
init
end
init
end

Name: TMP_233 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef

Name: maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: 6 rnorm: u
init
end
_______________

Name: TMP_233 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_234 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_234

Name: TMP_234 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
numerator_1(uint256) := TMP_234(uint256)
asgn
init
end
_______________

Name: TMP_234 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef

Name: numerator Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for numerator

Name: numerator Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: denominator, Num: 1
Globalname: denominator
End popogation
TMP_235(uint256) = equilibriumFee_1 (c)* providedLiquidity_1
testing mul...
init
end
init
end

Name: equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: providedLiquidity Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
lnorm: u rnorm: 6
init
end
_______________

Name: providedLiquidity Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_235 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_235

Name: TMP_235 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_236(uint256) = maxFee_1 (c)- equilibriumFee_1
init
end
init
end
init
end
_______________

Name: equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_236 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_236

Name: TMP_236 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_237(uint256) = TMP_236 (c)* resultingLiquidity_1
testing mul...
init
end
init
end

Name: TMP_236 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: resultingLiquidity Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: resultingLiquidity Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_237 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_237

Name: TMP_237 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_238(uint256) = TMP_235 (c)+ TMP_237
init
end
init
end
init
end
_______________

Name: TMP_235 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_238 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_238

Name: TMP_238 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
denominator_1(uint256) := TMP_238(uint256)
asgn
init
end
_______________

Name: TMP_238 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: denominator Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for denominator

Name: denominator Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_239(bool) = denominator_1 == 0
[i]Type for TMP_239

Name: TMP_239 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: fee, Num: 1
Globalname: fee
End popogation
fee_1(uint256) := 0(uint256)
asgn
init
end
_______________

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef

Name: fee Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for fee

Name: fee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: fee, Num: 2
Globalname: fee
End popogation
TMP_240(uint256) = numerator_1 (c)/ denominator_1
init
end
init
end
lnorm: 6 rnorm: u
Source address: u
init
end
_______________

Name: PIC_179 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_240 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
init
end
init
end
lnorm: 6 rnorm: u
Source address: u
init
end
_______________

Name: PIC_180 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_240 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_240

Name: TMP_240 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
fee_2(uint256) := TMP_240(uint256)
asgn
init
end
_______________

Name: TMP_240 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef

Name: fee Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for fee

Name: fee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_199

Name: TMP_199 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tokenManager_21(ITokenManager) := ϕ(['tokenManager_31'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getAmountToTransfer
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_36(ILiquidityProviders) := ϕ(['liquidityProviders_43'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getAmountToTransfer
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
transferFeePerc_1(uint256) := TMP_199(uint256)
asgn
init
end
_______________

Name: TMP_199 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: transferFeePerc Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for transferFeePerc

Name: transferFeePerc Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: transferFeePerc, Num: 1
Globalname: transferFeePerc
End popogation

Name: BASE_DIVISOR Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: baseGas Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: tokenManager Function: getAmountToTransfer
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getAmountToTransfer
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_200(ITokenManager.TokenInfo) = HIGH_LEVEL_CALL, dest:tokenManager_21(ITokenManager), function:getTokensInfo, arguments:['tokenAddress_1']  
High Call: getTokensInfo
Running querryfc
Written func info: TokenManager, getTokensInfo
[i]Type for TMP_200

Name: TMP_200 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: equilibriumFee
Finance Type: undef
XXXX
BASE_DIVISOR_3(uint256) := ϕ(['BASE_DIVISOR_3', 'BASE_DIVISOR_5', 'BASE_DIVISOR_2'])
Phi
[i]Type for BASE_DIVISOR

Name: BASE_DIVISOR Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
baseGas_5(uint256) := ϕ(['baseGas_2', 'baseGas_1', 'baseGas_4', 'baseGas_9'])
Phi
[i]Type for baseGas

Name: baseGas Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tokenManager_22(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_7', 'tokenManager_1', 'tokenManager_21', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getAmountToTransfer
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_37(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_36', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getAmountToTransfer
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_6(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_5', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulated_3(mapping(address => mapping(address => uint256))) := ϕ(['gasFeeAccumulated_16', 'gasFeeAccumulated_10', 'gasFeeAccumulated_22', 'gasFeeAccumulated_2'])
Phi
[i]Type for gasFeeAccumulated

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_25(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_24'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_44(uint256) -> TMP_200.equilibriumFee
MEMBER
init
end
init
end
init
end
_______________

Name: TMP_200.equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for REF_44

Name: TMP_200.equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: TMP_200, Field: equilibriumFee
#################
Member: 
Name: TMP_200 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: equilibriumFee
Finance Type: undef
Fieldf: 
Name: equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: TMP_200.equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_201(bool) = transferFeePerc_1 > REF_44
init
end
init
end
lnorm: u rnorm: u
init
end
_______________

Name: TMP_200.equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: transferFeePerc Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
init
end
_______________

Name: TMP_200.equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_201 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_201

Name: TMP_201 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: lpFee, Num: 1
Globalname: lpFee
End popogation

Name: BASE_DIVISOR Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: baseGas Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: tokenManager Function: getAmountToTransfer
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getAmountToTransfer
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_202(ITokenManager.TokenInfo) = HIGH_LEVEL_CALL, dest:tokenManager_22(ITokenManager), function:getTokensInfo, arguments:['tokenAddress_1']  
High Call: getTokensInfo
Running querryfc
Written func info: TokenManager, getTokensInfo
[i]Type for TMP_202

Name: TMP_202 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: equilibriumFee
Finance Type: undef
XXXX
BASE_DIVISOR_4(uint256) := ϕ(['BASE_DIVISOR_3', 'BASE_DIVISOR_5'])
Phi
[i]Type for BASE_DIVISOR

Name: BASE_DIVISOR Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
baseGas_6(uint256) := ϕ(['baseGas_2', 'baseGas_1', 'baseGas_5', 'baseGas_9'])
Phi
[i]Type for baseGas

Name: baseGas Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tokenManager_23(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_7', 'tokenManager_1', 'tokenManager_22', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getAmountToTransfer
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_38(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_37', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getAmountToTransfer
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_7(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_6', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulated_4(mapping(address => mapping(address => uint256))) := ϕ(['gasFeeAccumulated_16', 'gasFeeAccumulated_10', 'gasFeeAccumulated_3', 'gasFeeAccumulated_22'])
Phi
[i]Type for gasFeeAccumulated

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_26(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_46(uint256) -> TMP_202.equilibriumFee
MEMBER
init
end
init
end
init
end
_______________

Name: TMP_202.equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for REF_46

Name: TMP_202.equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: TMP_202, Field: equilibriumFee
#################
Member: 
Name: TMP_202 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: equilibriumFee
Finance Type: undef
Fieldf: 
Name: equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: TMP_202.equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_203(uint256) = amount_1 (c)* REF_46
testing mul...
init
end
init
end

Name: amount Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_202.equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: TMP_202.equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_203 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_203

Name: TMP_203 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_204(uint256) = TMP_203 (c)/ BASE_DIVISOR_4
init
end
init
end
lnorm: u rnorm: u
init
end
init
end
init
end
lnorm: u rnorm: u
init
end
[i]Type for TMP_204

Name: TMP_204 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
lpFee_1(uint256) := TMP_204(uint256)
asgn
init
end
_______________

Name: TMP_204 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: lpFee Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for lpFee

Name: lpFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: lpFee, Num: 2
Globalname: lpFee
End popogation
TMP_210(uint256) = amount_1 (c)* transferFeePerc_1
testing mul...
init
end
init
end

Name: amount Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: transferFeePerc Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: transferFeePerc Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_210 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_210

Name: TMP_210 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_211(uint256) = TMP_210 (c)/ BASE_DIVISOR_3
init
end
init
end
lnorm: u rnorm: u
init
end
init
end
init
end
lnorm: u rnorm: u
init
end
[i]Type for TMP_211

Name: TMP_211 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
lpFee_2(uint256) := TMP_211(uint256)
asgn
init
end
_______________

Name: TMP_211 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: lpFee Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for lpFee

Name: lpFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation

Name: BASE_DIVISOR Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: baseGas Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: tokenManager Function: getAmountToTransfer
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getAmountToTransfer
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
REF_47(uint256) -> incentivePool_26[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_47

Name: incentivePool Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_48(uint256) -> incentivePool_26[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_48

Name: incentivePool Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_205(ITokenManager.TokenInfo) = HIGH_LEVEL_CALL, dest:tokenManager_23(ITokenManager), function:getTokensInfo, arguments:['tokenAddress_1']  
High Call: getTokensInfo
Running querryfc
Written func info: TokenManager, getTokensInfo
[i]Type for TMP_205

Name: TMP_205 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: equilibriumFee
Finance Type: undef
XXXX
BASE_DIVISOR_5(uint256) := ϕ(['BASE_DIVISOR_3', 'BASE_DIVISOR_5', 'BASE_DIVISOR_4'])
Phi
[i]Type for BASE_DIVISOR

Name: BASE_DIVISOR Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
baseGas_7(uint256) := ϕ(['baseGas_2', 'baseGas_1', 'baseGas_6', 'baseGas_9'])
Phi
[i]Type for baseGas

Name: baseGas Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tokenManager_24(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_23', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getAmountToTransfer
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_39(ILiquidityProviders) := ϕ(['liquidityProviders_38', 'liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getAmountToTransfer
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_8(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_7', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulated_5(mapping(address => mapping(address => uint256))) := ϕ(['gasFeeAccumulated_16', 'gasFeeAccumulated_10', 'gasFeeAccumulated_4', 'gasFeeAccumulated_22'])
Phi
[i]Type for gasFeeAccumulated

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_27(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_26', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_50(uint256) -> TMP_205.equilibriumFee
MEMBER
init
end
init
end
init
end
_______________

Name: TMP_205.equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for REF_50

Name: TMP_205.equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: TMP_205, Field: equilibriumFee
#################
Member: 
Name: TMP_205 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: equilibriumFee
Finance Type: undef
Fieldf: 
Name: equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: TMP_205.equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_206(uint256) = transferFeePerc_1 (c)- REF_50
init
end
init
end
init
end
_______________

Name: TMP_205.equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_206 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_206

Name: TMP_206 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_207(uint256) = amount_1 (c)* TMP_206
testing mul...
init
end
init
end

Name: amount Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_206 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: TMP_206 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_207 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_207

Name: TMP_207 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_208(uint256) = REF_48 (c)+ TMP_207
init
end
init
end
init
end
_______________

Name: TMP_207 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_208 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_208

Name: TMP_208 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_209(uint256) = TMP_208 (c)/ BASE_DIVISOR_5
init
end
init
end
lnorm: u rnorm: u
init
end
init
end
init
end
lnorm: u rnorm: u
init
end
[i]Type for TMP_209

Name: TMP_209 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_28(mapping(address => uint256)) := ϕ(['incentivePool_26'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_47 (->incentivePool_28) := TMP_209(uint256)
asgn
init
end
_______________

Name: TMP_209 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: REF_47 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_47

Name: REF_47 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
Source address: u
Propogating parameters and globals to SSA variables...
End popogation
Name: lpFee, Num: 3
Globalname: lpFee

Name: lpFee Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
lpFee_3(uint256) := ϕ(['lpFee_1', 'lpFee_2'])
Phi

Name: lpFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: lpFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
init
end
_______________

Name: lpFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: lpFee Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for lpFee

Name: lpFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: transferFeeAmount, Num: 1
Globalname: transferFeeAmount
End popogation
TMP_212(uint256) = amount_1 (c)* transferFeePerc_1
testing mul...
init
end
init
end

Name: amount Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: transferFeePerc Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: transferFeePerc Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_212 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_212

Name: TMP_212 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_213(uint256) = TMP_212 (c)/ BASE_DIVISOR_3
init
end
init
end
lnorm: u rnorm: u
init
end
init
end
init
end
lnorm: u rnorm: u
init
end
[i]Type for TMP_213

Name: TMP_213 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
transferFeeAmount_1(uint256) := TMP_213(uint256)
asgn
init
end
_______________

Name: TMP_213 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: transferFeeAmount Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for transferFeeAmount

Name: transferFeeAmount Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation

Name: baseGas Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: tokenManager Function: getAmountToTransfer
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getAmountToTransfer
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
HIGH_LEVEL_CALL, dest:liquidityProviders_37(ILiquidityProviders), function:addLPFee, arguments:['tokenAddress_1', 'lpFee_3']  
High Call: addLPFee
baseGas_8(uint256) := ϕ(['baseGas_2', 'baseGas_1', 'baseGas_7', 'baseGas_9'])
Phi
[i]Type for baseGas

Name: baseGas Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tokenManager_25(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_24', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getAmountToTransfer
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_40(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_39', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getAmountToTransfer
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_9(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_8', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulated_6(mapping(address => mapping(address => uint256))) := ϕ(['gasFeeAccumulated_16', 'gasFeeAccumulated_10', 'gasFeeAccumulated_22', 'gasFeeAccumulated_5'])
Phi
[i]Type for gasFeeAccumulated

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Source address: u
Name: initialGas, Num: 1
Globalname: initialGas
Name: totalGasUsed, Num: 1
Globalname: totalGasUsed
End popogation
TMP_215(uint256) = SOLIDITY_CALL gasleft()()
[i]Type for TMP_215

Name: TMP_215 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_216(uint256) = initialGas_1 (c)- TMP_215
init
end
init
end
init
end
_______________

Name: TMP_215 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_216 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_216

Name: TMP_216 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
totalGasUsed_1(uint256) := TMP_216(uint256)
asgn
init
end
_______________

Name: TMP_216 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: totalGasUsed Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for totalGasUsed

Name: totalGasUsed Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: totalGasUsed, Num: 1
Globalname: totalGasUsed
Name: totalGasUsed, Num: 2
Globalname: totalGasUsed
End popogation

Name: baseGas Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: tokenManager Function: getAmountToTransfer
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_217(ITokenManager.TokenInfo) = HIGH_LEVEL_CALL, dest:tokenManager_25(ITokenManager), function:getTokensInfo, arguments:['tokenAddress_1']  
High Call: getTokensInfo
Running querryfc
Written func info: TokenManager, getTokensInfo
[i]Type for TMP_217

Name: TMP_217 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: transferOverhead
Finance Type: undef
XXXX
baseGas_9(uint256) := ϕ(['baseGas_2', 'baseGas_1', 'baseGas_8', 'baseGas_9'])
Phi
[i]Type for baseGas

Name: baseGas Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tokenManager_26(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_25', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getAmountToTransfer
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_10(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_9', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulated_7(mapping(address => mapping(address => uint256))) := ϕ(['gasFeeAccumulated_16', 'gasFeeAccumulated_10', 'gasFeeAccumulated_22', 'gasFeeAccumulated_6'])
Phi
[i]Type for gasFeeAccumulated

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_53(uint256) -> TMP_217.transferOverhead
MEMBER
init
end
init
end
init
end
_______________

Name: TMP_217.transferOverhead Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: transferOverhead Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for REF_53

Name: TMP_217.transferOverhead Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: TMP_217, Field: transferOverhead
#################
Member: 
Name: TMP_217 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: transferOverhead
Finance Type: undef
Fieldf: 
Name: transferOverhead Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: TMP_217.transferOverhead Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: transferOverhead Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_218(uint256) = totalGasUsed_1 (c)+ REF_53
init
end
init
end
init
end
_______________

Name: TMP_217.transferOverhead Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_218 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_218

Name: TMP_218 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
totalGasUsed_2(uint256) := TMP_218(uint256)
asgn
init
end
_______________

Name: TMP_218 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: totalGasUsed Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for totalGasUsed

Name: totalGasUsed Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: totalGasUsed, Num: 3
Globalname: totalGasUsed
End popogation
TMP_219(uint256) = totalGasUsed_2 (c)+ baseGas_9
init
end
init
end
init
end
_______________

Name: baseGas Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_219 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_219

Name: TMP_219 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
totalGasUsed_3(uint256) := TMP_219(uint256)
asgn
init
end
_______________

Name: TMP_219 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: totalGasUsed Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for totalGasUsed

Name: totalGasUsed Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Source address: u
Name: tokenGasPrice, Num: 1
Globalname: tokenGasPrice
Name: gasFee, Num: 1
Globalname: gasFee
End popogation
TMP_220(uint256) = totalGasUsed_3 (c)* tokenGasPrice_1
testing mul...
init
end
init
end

Name: totalGasUsed Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: tokenGasPrice_1 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: totalGasUsed Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_220 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_220

Name: TMP_220 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
gasFee_1(uint256) := TMP_220(uint256)
asgn
init
end
_______________

Name: TMP_220 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: gasFee Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for gasFee

Name: gasFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
REF_54(uint256) -> gasFeeAccumulatedByToken_10[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_54

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_55(uint256) -> gasFeeAccumulatedByToken_10[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_55

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_221(uint256) = REF_55 (c)+ gasFee_1
init
end
init
end
init
end
_______________

Name: gasFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_221 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_221

Name: TMP_221 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_11(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_10'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_54 (->gasFeeAccumulatedByToken_11) := TMP_221(uint256)
asgn
init
end
_______________

Name: TMP_221 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: REF_54 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_54

Name: REF_54 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
Source address: u
Propogating parameters and globals to SSA variables...
End popogation

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
REF_56(mapping(address => uint256)) -> gasFeeAccumulated_7[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_56

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_222(address) = INTERNAL_CALL, LiquidityPool._msgSender()()
init
end
_______________

Name: PIC_33 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_222 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_222

Name: TMP_222 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_57(uint256) -> REF_56[TMP_222]
INDEX
Source address: u
[i]Type for REF_57

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_58(mapping(address => uint256)) -> gasFeeAccumulated_8[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_58

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_223(address) = INTERNAL_CALL, LiquidityPool._msgSender()()
init
end
_______________

Name: PIC_33 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_223 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_223

Name: TMP_223 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_59(uint256) -> REF_58[TMP_223]
INDEX
Source address: u
[i]Type for REF_59

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_224(uint256) = REF_59 (c)+ gasFee_1
init
end
init
end
init
end
_______________

Name: gasFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_224 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_224

Name: TMP_224 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulated_10(mapping(address => mapping(address => uint256))) := ϕ(['gasFeeAccumulated_7'])
Phi
[i]Type for gasFeeAccumulated

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_57 (->gasFeeAccumulated_10) := TMP_224(uint256)
asgn
init
end
_______________

Name: TMP_224 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: REF_57 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_57

Name: REF_57 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
Source address: u
Propogating parameters and globals to SSA variables...
Name: amountToTransfer, Num: 1
Globalname: amountToTransfer
End popogation
TMP_225(uint256) = transferFeeAmount_1 (c)+ gasFee_1
init
end
init
end
init
end
_______________

Name: gasFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_225 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_225

Name: TMP_225 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_226(uint256) = amount_1 (c)- TMP_225
init
end
init
end
init
end
_______________

Name: TMP_225 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_226 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_226

Name: TMP_226 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
amountToTransfer_1(uint256) := TMP_226(uint256)
asgn
init
end
_______________

Name: TMP_226 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amountToTransfer Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for amountToTransfer

Name: amountToTransfer Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation


initialGas_1(uint256) := ϕ(['initialGas_1'])
tokenAddress_1(address) := ϕ(['tokenAddress_1'])
amount_1(uint256) := ϕ(['amount_1'])
tokenGasPrice_1(uint256) := ϕ(['tokenGasPrice_1'])
BASE_DIVISOR_1(uint256) := ϕ(['BASE_DIVISOR_3', 'BASE_DIVISOR_5', 'BASE_DIVISOR_0'])
baseGas_3(uint256) := ϕ(['baseGas_2', 'baseGas_1', 'baseGas_0', 'baseGas_9'])
tokenManager_20(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_0', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
liquidityProviders_35(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
gasFeeAccumulatedByToken_4(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_0', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
gasFeeAccumulated_1(mapping(address => mapping(address => uint256))) := ϕ(['gasFeeAccumulated_0', 'gasFeeAccumulated_10', 'gasFeeAccumulated_16', 'gasFeeAccumulated_22'])
incentivePool_23(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_0'])
TMP_199(uint256) = INTERNAL_CALL, LiquidityPool.getTransferFee(address,uint256)(tokenAddress_1,amount_1)
tokenManager_21(ITokenManager) := ϕ(['tokenManager_31'])
liquidityProviders_36(ILiquidityProviders) := ϕ(['liquidityProviders_43'])
transferFeePerc_1(uint256) := TMP_199(uint256)
TMP_200(ITokenManager.TokenInfo) = HIGH_LEVEL_CALL, dest:tokenManager_21(ITokenManager), function:getTokensInfo, arguments:['tokenAddress_1']  
BASE_DIVISOR_3(uint256) := ϕ(['BASE_DIVISOR_3', 'BASE_DIVISOR_5', 'BASE_DIVISOR_2'])
baseGas_5(uint256) := ϕ(['baseGas_2', 'baseGas_1', 'baseGas_4', 'baseGas_9'])
tokenManager_22(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_7', 'tokenManager_1', 'tokenManager_21', 'tokenManager_19'])
liquidityProviders_37(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_36', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
gasFeeAccumulatedByToken_6(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_5', 'gasFeeAccumulatedByToken_23'])
gasFeeAccumulated_3(mapping(address => mapping(address => uint256))) := ϕ(['gasFeeAccumulated_16', 'gasFeeAccumulated_10', 'gasFeeAccumulated_22', 'gasFeeAccumulated_2'])
incentivePool_25(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_24'])
REF_44(uint256) -> TMP_200.equilibriumFee
TMP_201(bool) = transferFeePerc_1 > REF_44
CONDITION TMP_201
TMP_202(ITokenManager.TokenInfo) = HIGH_LEVEL_CALL, dest:tokenManager_22(ITokenManager), function:getTokensInfo, arguments:['tokenAddress_1']  
BASE_DIVISOR_4(uint256) := ϕ(['BASE_DIVISOR_3', 'BASE_DIVISOR_5'])
baseGas_6(uint256) := ϕ(['baseGas_2', 'baseGas_1', 'baseGas_5', 'baseGas_9'])
tokenManager_23(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_7', 'tokenManager_1', 'tokenManager_22', 'tokenManager_19'])
liquidityProviders_38(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_37', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
gasFeeAccumulatedByToken_7(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_6', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
gasFeeAccumulated_4(mapping(address => mapping(address => uint256))) := ϕ(['gasFeeAccumulated_16', 'gasFeeAccumulated_10', 'gasFeeAccumulated_3', 'gasFeeAccumulated_22'])
incentivePool_26(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21'])
REF_46(uint256) -> TMP_202.equilibriumFee
TMP_203(uint256) = amount_1 (c)* REF_46
TMP_204(uint256) = TMP_203 (c)/ BASE_DIVISOR_4
lpFee_1(uint256) := TMP_204(uint256)
TMP_210(uint256) = amount_1 (c)* transferFeePerc_1
TMP_211(uint256) = TMP_210 (c)/ BASE_DIVISOR_3
lpFee_2(uint256) := TMP_211(uint256)
REF_47(uint256) -> incentivePool_26[tokenAddress_1]
REF_48(uint256) -> incentivePool_26[tokenAddress_1]
TMP_205(ITokenManager.TokenInfo) = HIGH_LEVEL_CALL, dest:tokenManager_23(ITokenManager), function:getTokensInfo, arguments:['tokenAddress_1']  
BASE_DIVISOR_5(uint256) := ϕ(['BASE_DIVISOR_3', 'BASE_DIVISOR_5', 'BASE_DIVISOR_4'])
baseGas_7(uint256) := ϕ(['baseGas_2', 'baseGas_1', 'baseGas_6', 'baseGas_9'])
tokenManager_24(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_23', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
liquidityProviders_39(ILiquidityProviders) := ϕ(['liquidityProviders_38', 'liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
gasFeeAccumulatedByToken_8(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_7', 'gasFeeAccumulatedByToken_23'])
gasFeeAccumulated_5(mapping(address => mapping(address => uint256))) := ϕ(['gasFeeAccumulated_16', 'gasFeeAccumulated_10', 'gasFeeAccumulated_4', 'gasFeeAccumulated_22'])
incentivePool_27(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_26', 'incentivePool_21'])
REF_50(uint256) -> TMP_205.equilibriumFee
TMP_206(uint256) = transferFeePerc_1 (c)- REF_50
TMP_207(uint256) = amount_1 (c)* TMP_206
TMP_208(uint256) = REF_48 (c)+ TMP_207
TMP_209(uint256) = TMP_208 (c)/ BASE_DIVISOR_5
incentivePool_28(mapping(address => uint256)) := ϕ(['incentivePool_26'])
REF_47 (->incentivePool_28) := TMP_209(uint256)
lpFee_3(uint256) := ϕ(['lpFee_1', 'lpFee_2'])
TMP_212(uint256) = amount_1 (c)* transferFeePerc_1
TMP_213(uint256) = TMP_212 (c)/ BASE_DIVISOR_3
transferFeeAmount_1(uint256) := TMP_213(uint256)
HIGH_LEVEL_CALL, dest:liquidityProviders_37(ILiquidityProviders), function:addLPFee, arguments:['tokenAddress_1', 'lpFee_3']  
baseGas_8(uint256) := ϕ(['baseGas_2', 'baseGas_1', 'baseGas_7', 'baseGas_9'])
tokenManager_25(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_24', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
liquidityProviders_40(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_39', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
gasFeeAccumulatedByToken_9(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_8', 'gasFeeAccumulatedByToken_23'])
gasFeeAccumulated_6(mapping(address => mapping(address => uint256))) := ϕ(['gasFeeAccumulated_16', 'gasFeeAccumulated_10', 'gasFeeAccumulated_22', 'gasFeeAccumulated_5'])
TMP_215(uint256) = SOLIDITY_CALL gasleft()()
TMP_216(uint256) = initialGas_1 (c)- TMP_215
totalGasUsed_1(uint256) := TMP_216(uint256)
TMP_217(ITokenManager.TokenInfo) = HIGH_LEVEL_CALL, dest:tokenManager_25(ITokenManager), function:getTokensInfo, arguments:['tokenAddress_1']  
baseGas_9(uint256) := ϕ(['baseGas_2', 'baseGas_1', 'baseGas_8', 'baseGas_9'])
tokenManager_26(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_25', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
gasFeeAccumulatedByToken_10(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_9', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
gasFeeAccumulated_7(mapping(address => mapping(address => uint256))) := ϕ(['gasFeeAccumulated_16', 'gasFeeAccumulated_10', 'gasFeeAccumulated_22', 'gasFeeAccumulated_6'])
REF_53(uint256) -> TMP_217.transferOverhead
TMP_218(uint256) = totalGasUsed_1 (c)+ REF_53
totalGasUsed_2(uint256) := TMP_218(uint256)
TMP_219(uint256) = totalGasUsed_2 (c)+ baseGas_9
totalGasUsed_3(uint256) := TMP_219(uint256)
TMP_220(uint256) = totalGasUsed_3 (c)* tokenGasPrice_1
gasFee_1(uint256) := TMP_220(uint256)
REF_54(uint256) -> gasFeeAccumulatedByToken_10[tokenAddress_1]
REF_55(uint256) -> gasFeeAccumulatedByToken_10[tokenAddress_1]
TMP_221(uint256) = REF_55 (c)+ gasFee_1
gasFeeAccumulatedByToken_11(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_10'])
REF_54 (->gasFeeAccumulatedByToken_11) := TMP_221(uint256)
REF_56(mapping(address => uint256)) -> gasFeeAccumulated_7[tokenAddress_1]
TMP_222(address) = INTERNAL_CALL, LiquidityPool._msgSender()()
REF_57(uint256) -> REF_56[TMP_222]
REF_58(mapping(address => uint256)) -> gasFeeAccumulated_8[tokenAddress_1]
TMP_223(address) = INTERNAL_CALL, LiquidityPool._msgSender()()
REF_59(uint256) -> REF_58[TMP_223]
TMP_224(uint256) = REF_59 (c)+ gasFee_1
gasFeeAccumulated_10(mapping(address => mapping(address => uint256))) := ϕ(['gasFeeAccumulated_7'])
REF_57 (->gasFeeAccumulated_10) := TMP_224(uint256)
TMP_225(uint256) = transferFeeAmount_1 (c)+ gasFee_1
TMP_226(uint256) = amount_1 (c)- TMP_225
amountToTransfer_1(uint256) := TMP_226(uint256)
Emit FeeDetails(lpFee_3,transferFeeAmount_1,gasFee_1)


Propogating parameters and globals to SSA variables...
End popogation
Source address: u
Name: initialGas, Num: 1
Globalname: initialGas

Name: initialGas_1 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Source address: -982

Name: tokenAddress_1 Function: getAmountToTransfer
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
Phid
Source address: u
Name: amount, Num: 1
Globalname: amount

Name: amount_1 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Source address: u
Name: tokenGasPrice, Num: 1
Globalname: tokenGasPrice

Name: tokenGasPrice_1 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: BASE_DIVISOR Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: baseGas Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: tokenManager Function: getAmountToTransfer
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getAmountToTransfer
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
initialGas_1(uint256) := ϕ(['initialGas_1'])
Phi

Name: initialGas Function: sendFundsToUser
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for initialGas

Name: initialGas Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tokenAddress_1(address) := ϕ(['tokenAddress_1'])
Phi
[i]Type for tokenAddress

Name: tokenAddress Function: getAmountToTransfer
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount_1'])
Phi

Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
init
end
_______________

Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for amount

Name: amount Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tokenGasPrice_1(uint256) := ϕ(['tokenGasPrice_1'])
Phi

Name: tokenGasPrice Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for tokenGasPrice

Name: tokenGasPrice Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
BASE_DIVISOR_1(uint256) := ϕ(['BASE_DIVISOR_3', 'BASE_DIVISOR_5', 'BASE_DIVISOR_0'])
Phi
[i]Type for BASE_DIVISOR

Name: BASE_DIVISOR Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
baseGas_3(uint256) := ϕ(['baseGas_2', 'baseGas_1', 'baseGas_0', 'baseGas_9'])
Phi
[i]Type for baseGas

Name: baseGas Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tokenManager_20(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_0', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getAmountToTransfer
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_35(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getAmountToTransfer
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_4(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_0', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulated_1(mapping(address => mapping(address => uint256))) := ϕ(['gasFeeAccumulated_0', 'gasFeeAccumulated_10', 'gasFeeAccumulated_16', 'gasFeeAccumulated_22'])
Phi
[i]Type for gasFeeAccumulated

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_23(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_0'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: transferFeePerc, Num: 1
Globalname: transferFeePerc
End popogation

Name: tokenManager Function: getAmountToTransfer
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getAmountToTransfer
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid
TMP_199(uint256) = INTERNAL_CALL, LiquidityPool.getTransferFee(address,uint256)(tokenAddress_1,amount_1)
init
end
init
end
[[], [], 6, 'tokenAddress', [], -1, -982, 'u']

Name: tokenAddress Function: None
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
Source address: -982

Name: tokenAddress_1 Function: getTransferFee
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
Phid
Source address: u

Name: amount_1 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getTransferFee
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid
tokenAddress_1(address) := ϕ(['tokenAddress_1'])
Phi
[i]Type for tokenAddress

Name: tokenAddress Function: getTransferFee
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount_1'])
Phi
[i]Type for amount

Name: amount Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tokenManager_27(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_0', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_41(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getTransferFee
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: currentLiquidity, Num: 1
Globalname: currentLiquidity
End popogation

Name: liquidityProviders Function: getTransferFee
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid
TMP_228(uint256) = INTERNAL_CALL, LiquidityPool.getCurrentLiquidity(address)(tokenAddress_1)
init
end
[[], [], 6, 'tokenAddress', [], -1, -982, 'u']

Name: tokenAddress Function: getCurrentLiquidity
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
Source address: -982

Name: tokenAddress_1 Function: getCurrentLiquidity
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
tokenAddress_1(address) := ϕ(['tokenAddress_1', 'tokenAddress_1'])
Phi
[i]Type for tokenAddress

Name: tokenAddress Function: getCurrentLiquidity
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_3(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_1(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_0', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_1(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_0'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: liquidityPoolBalance, Num: 1
Globalname: liquidityPoolBalance
End popogation

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_99(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_3(ILiquidityProviders), function:getCurrentLiquidity, arguments:['tokenAddress_1']  
High Call: getCurrentLiquidity
Running querryfc
Written func info: LiquidityProviders, getCurrentLiquidity
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-982], [-1], 6, "'u'", 'u', -1)
[i]Type for TMP_99

Name: TMP_99 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
liquidityProviders_4(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_3', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_2(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_1', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_2(mapping(address => uint256)) := ϕ(['incentivePool_1', 'incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityPoolBalance_1(uint256) := TMP_99(uint256)
asgn
init
end
_______________

Name: TMP_99 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for liquidityPoolBalance

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: currentLiquidity, Num: 1
Globalname: currentLiquidity
End popogation

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_100(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_4(ILiquidityProviders), function:totalLPFees, arguments:['tokenAddress_1']  
High Call: totalLPFees
Running querryfc
Written func info: LiquidityProviders, totalLPFees
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-982], [-1], 6, "'u'", 'u', -1)
[i]Type for TMP_100

Name: TMP_100 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
liquidityProviders_5(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_4', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_3(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_2', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_3(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_2', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_101(uint256) = liquidityPoolBalance_1 (c)- TMP_100
init
end
init
end
-982
-1
lnorm: 6 rnorm: 6
init
end
_______________

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_101 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_101

Name: TMP_101 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_2(uint256) -> gasFeeAccumulatedByToken_3[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_2

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_102(uint256) = TMP_101 (c)- REF_2
init
end
init
end
init
end
_______________

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_102 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_102

Name: TMP_102 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_3(uint256) -> incentivePool_3[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_3

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_103(uint256) = TMP_102 (c)- REF_3
init
end
init
end
init
end
_______________

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_103 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_103

Name: TMP_103 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
currentLiquidity_1(uint256) := TMP_103(uint256)
asgn
init
end
_______________

Name: TMP_103 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: currentLiquidity Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for currentLiquidity

Name: currentLiquidity Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Source address: -982

Name: tokenAddress_1 Function: getCurrentLiquidity
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
tokenAddress_1(address) := ϕ(['tokenAddress_1', 'tokenAddress_1'])
Phi
[i]Type for tokenAddress

Name: tokenAddress Function: getCurrentLiquidity
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_3(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_1(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_0', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_1(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_0'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: liquidityPoolBalance, Num: 1
Globalname: liquidityPoolBalance
End popogation

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_99(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_3(ILiquidityProviders), function:getCurrentLiquidity, arguments:['tokenAddress_1']  
High Call: getCurrentLiquidity
Running querryfc
Written func info: LiquidityProviders, getCurrentLiquidity
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-982], [-1], 6, "'u'", 'u', -1)
[i]Type for TMP_99

Name: TMP_99 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
liquidityProviders_4(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_3', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_2(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_1', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_2(mapping(address => uint256)) := ϕ(['incentivePool_1', 'incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityPoolBalance_1(uint256) := TMP_99(uint256)
asgn
init
end
_______________

Name: TMP_99 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for liquidityPoolBalance

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: currentLiquidity, Num: 1
Globalname: currentLiquidity
End popogation

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_100(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_4(ILiquidityProviders), function:totalLPFees, arguments:['tokenAddress_1']  
High Call: totalLPFees
Running querryfc
Written func info: LiquidityProviders, totalLPFees
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-982], [-1], 6, "'u'", 'u', -1)
[i]Type for TMP_100

Name: TMP_100 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
liquidityProviders_5(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_4', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_3(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_2', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_3(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_2', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_101(uint256) = liquidityPoolBalance_1 (c)- TMP_100
init
end
init
end
-982
-1
lnorm: 6 rnorm: 6
init
end
_______________

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_101 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_101

Name: TMP_101 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_2(uint256) -> gasFeeAccumulatedByToken_3[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_2

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_102(uint256) = TMP_101 (c)- REF_2
init
end
init
end
init
end
_______________

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_102 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_102

Name: TMP_102 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_3(uint256) -> incentivePool_3[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_3

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_103(uint256) = TMP_102 (c)- REF_3
init
end
init
end
init
end
_______________

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_103 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_103

Name: TMP_103 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
currentLiquidity_1(uint256) := TMP_103(uint256)
asgn
init
end
_______________

Name: TMP_103 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: currentLiquidity Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for currentLiquidity

Name: currentLiquidity Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_228

Name: TMP_228 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_42(ILiquidityProviders) := ϕ(['liquidityProviders_5'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getTransferFee
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
currentLiquidity_1(uint256) := TMP_228(uint256)
asgn
init
end
_______________

Name: TMP_228 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: currentLiquidity Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for currentLiquidity

Name: currentLiquidity Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: providedLiquidity, Num: 1
Globalname: providedLiquidity
End popogation

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getTransferFee
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid
TMP_229(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_42(ILiquidityProviders), function:getSuppliedLiquidityByToken, arguments:['tokenAddress_1']  
High Call: getSuppliedLiquidityByToken
Running querryfc
Written func info: LiquidityProviders, getSuppliedLiquidityByToken
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-982], [-1], 6, "'u'", 'u', -1)
[i]Type for TMP_229

Name: TMP_229 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
tokenManager_29(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_28', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_43(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_42', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getTransferFee
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
providedLiquidity_1(uint256) := TMP_229(uint256)
asgn
init
end
_______________

Name: TMP_229 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: providedLiquidity Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for providedLiquidity

Name: providedLiquidity Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: currentLiquidity, Num: 1
Globalname: currentLiquidity
Name: resultingLiquidity, Num: 1
Globalname: resultingLiquidity
End popogation
TMP_230(uint256) = currentLiquidity_1 (c)- amount_1
init
end
init
end
init
end
_______________

Name: amount Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_230 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_230

Name: TMP_230 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
resultingLiquidity_1(uint256) := TMP_230(uint256)
asgn
init
end
_______________

Name: TMP_230 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: resultingLiquidity Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for resultingLiquidity

Name: resultingLiquidity Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: equilibriumFee, Num: 1
Globalname: equilibriumFee
End popogation

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid
TMP_231(ITokenManager.TokenInfo) = HIGH_LEVEL_CALL, dest:tokenManager_29(ITokenManager), function:getTokensInfo, arguments:['tokenAddress_1']  
High Call: getTokensInfo
Running querryfc
Written func info: TokenManager, getTokensInfo
[i]Type for TMP_231

Name: TMP_231 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: equilibriumFee
Finance Type: undef
XXXX
tokenManager_30(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_29', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
REF_62(uint256) -> TMP_231.equilibriumFee
MEMBER
init
end
init
end
init
end
_______________

Name: TMP_231.equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for REF_62

Name: TMP_231.equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: TMP_231, Field: equilibriumFee
#################
Member: 
Name: TMP_231 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: equilibriumFee
Finance Type: undef
Fieldf: 
Name: equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: TMP_231.equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
equilibriumFee_1(uint256) := REF_62(uint256)
asgn
init
end
_______________

Name: TMP_231.equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: equilibriumFee Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for equilibriumFee

Name: equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: maxFee, Num: 1
Globalname: maxFee
End popogation

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid
TMP_232(ITokenManager.TokenInfo) = HIGH_LEVEL_CALL, dest:tokenManager_30(ITokenManager), function:getTokensInfo, arguments:['tokenAddress_1']  
High Call: getTokensInfo
Running querryfc
Written func info: TokenManager, getTokensInfo
[i]Type for TMP_232

Name: TMP_232 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: maxFee
Finance Type: undef
XXXX
tokenManager_31(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_30', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
REF_64(uint256) -> TMP_232.maxFee
MEMBER
init
end
init
end
init
end
_______________

Name: TMP_232.maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for REF_64

Name: TMP_232.maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: TMP_232, Field: maxFee
#################
Member: 
Name: TMP_232 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: maxFee
Finance Type: undef
Fieldf: 
Name: maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: TMP_232.maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
maxFee_1(uint256) := REF_64(uint256)
asgn
init
end
_______________

Name: TMP_232.maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: maxFee Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for maxFee

Name: maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: numerator, Num: 1
Globalname: numerator
End popogation
TMP_233(uint256) = providedLiquidity_1 (c)* equilibriumFee_1
testing mul...
init
end
init
end

Name: providedLiquidity Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: 6 rnorm: u
init
end
_______________

Name: providedLiquidity Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_233 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_233

Name: TMP_233 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_234(uint256) = TMP_233 (c)* maxFee_1
testing mul...
init
end
init
end

Name: TMP_233 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef

Name: maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: 6 rnorm: u
init
end
_______________

Name: TMP_233 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_234 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_234

Name: TMP_234 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
numerator_1(uint256) := TMP_234(uint256)
asgn
init
end
_______________

Name: TMP_234 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef

Name: numerator Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for numerator

Name: numerator Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: denominator, Num: 1
Globalname: denominator
End popogation
TMP_235(uint256) = equilibriumFee_1 (c)* providedLiquidity_1
testing mul...
init
end
init
end

Name: equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: providedLiquidity Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
lnorm: u rnorm: 6
init
end
_______________

Name: providedLiquidity Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_235 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_235

Name: TMP_235 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_236(uint256) = maxFee_1 (c)- equilibriumFee_1
init
end
init
end
init
end
_______________

Name: equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_236 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_236

Name: TMP_236 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_237(uint256) = TMP_236 (c)* resultingLiquidity_1
testing mul...
init
end
init
end

Name: TMP_236 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: resultingLiquidity Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: resultingLiquidity Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_237 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_237

Name: TMP_237 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_238(uint256) = TMP_235 (c)+ TMP_237
init
end
init
end
init
end
_______________

Name: TMP_235 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_238 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_238

Name: TMP_238 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
denominator_1(uint256) := TMP_238(uint256)
asgn
init
end
_______________

Name: TMP_238 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: denominator Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for denominator

Name: denominator Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_239(bool) = denominator_1 == 0
[i]Type for TMP_239

Name: TMP_239 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: fee, Num: 1
Globalname: fee
End popogation
fee_1(uint256) := 0(uint256)
asgn
init
end
_______________

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef

Name: fee Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for fee

Name: fee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: fee, Num: 2
Globalname: fee
End popogation
TMP_240(uint256) = numerator_1 (c)/ denominator_1
init
end
init
end
lnorm: 6 rnorm: u
Source address: u
init
end
_______________

Name: PIC_183 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_240 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
init
end
init
end
lnorm: 6 rnorm: u
Source address: u
init
end
_______________

Name: PIC_184 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_240 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_240

Name: TMP_240 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
fee_2(uint256) := TMP_240(uint256)
asgn
init
end
_______________

Name: TMP_240 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef

Name: fee Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for fee

Name: fee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Source address: -982

Name: tokenAddress_1 Function: getTransferFee
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
Phid
Source address: u

Name: amount_1 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getTransferFee
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid
tokenAddress_1(address) := ϕ(['tokenAddress_1'])
Phi
[i]Type for tokenAddress

Name: tokenAddress Function: getTransferFee
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount_1'])
Phi
[i]Type for amount

Name: amount Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tokenManager_27(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_0', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_41(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getTransferFee
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: currentLiquidity, Num: 1
Globalname: currentLiquidity
End popogation

Name: liquidityProviders Function: getTransferFee
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid
TMP_228(uint256) = INTERNAL_CALL, LiquidityPool.getCurrentLiquidity(address)(tokenAddress_1)
init
end
[[], [], 6, 'tokenAddress', [], -1, -982, 'u']

Name: tokenAddress Function: getCurrentLiquidity
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
Source address: -982

Name: tokenAddress_1 Function: getCurrentLiquidity
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
tokenAddress_1(address) := ϕ(['tokenAddress_1', 'tokenAddress_1'])
Phi
[i]Type for tokenAddress

Name: tokenAddress Function: getCurrentLiquidity
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_3(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_1(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_0', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_1(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_0'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: liquidityPoolBalance, Num: 1
Globalname: liquidityPoolBalance
End popogation

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_99(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_3(ILiquidityProviders), function:getCurrentLiquidity, arguments:['tokenAddress_1']  
High Call: getCurrentLiquidity
Running querryfc
Written func info: LiquidityProviders, getCurrentLiquidity
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-982], [-1], 6, "'u'", 'u', -1)
[i]Type for TMP_99

Name: TMP_99 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
liquidityProviders_4(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_3', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_2(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_1', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_2(mapping(address => uint256)) := ϕ(['incentivePool_1', 'incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityPoolBalance_1(uint256) := TMP_99(uint256)
asgn
init
end
_______________

Name: TMP_99 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for liquidityPoolBalance

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: currentLiquidity, Num: 1
Globalname: currentLiquidity
End popogation

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_100(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_4(ILiquidityProviders), function:totalLPFees, arguments:['tokenAddress_1']  
High Call: totalLPFees
Running querryfc
Written func info: LiquidityProviders, totalLPFees
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-982], [-1], 6, "'u'", 'u', -1)
[i]Type for TMP_100

Name: TMP_100 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
liquidityProviders_5(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_4', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_3(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_2', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_3(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_2', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_101(uint256) = liquidityPoolBalance_1 (c)- TMP_100
init
end
init
end
-982
-1
lnorm: 6 rnorm: 6
init
end
_______________

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_101 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_101

Name: TMP_101 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_2(uint256) -> gasFeeAccumulatedByToken_3[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_2

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_102(uint256) = TMP_101 (c)- REF_2
init
end
init
end
init
end
_______________

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_102 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_102

Name: TMP_102 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_3(uint256) -> incentivePool_3[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_3

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_103(uint256) = TMP_102 (c)- REF_3
init
end
init
end
init
end
_______________

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_103 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_103

Name: TMP_103 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
currentLiquidity_1(uint256) := TMP_103(uint256)
asgn
init
end
_______________

Name: TMP_103 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: currentLiquidity Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for currentLiquidity

Name: currentLiquidity Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Source address: -982

Name: tokenAddress_1 Function: getCurrentLiquidity
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
tokenAddress_1(address) := ϕ(['tokenAddress_1', 'tokenAddress_1'])
Phi
[i]Type for tokenAddress

Name: tokenAddress Function: getCurrentLiquidity
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_3(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_1(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_0', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_1(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_0'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: liquidityPoolBalance, Num: 1
Globalname: liquidityPoolBalance
End popogation

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_99(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_3(ILiquidityProviders), function:getCurrentLiquidity, arguments:['tokenAddress_1']  
High Call: getCurrentLiquidity
Running querryfc
Written func info: LiquidityProviders, getCurrentLiquidity
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-982], [-1], 6, "'u'", 'u', -1)
[i]Type for TMP_99

Name: TMP_99 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
liquidityProviders_4(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_3', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_2(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_1', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_2(mapping(address => uint256)) := ϕ(['incentivePool_1', 'incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityPoolBalance_1(uint256) := TMP_99(uint256)
asgn
init
end
_______________

Name: TMP_99 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for liquidityPoolBalance

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: currentLiquidity, Num: 1
Globalname: currentLiquidity
End popogation

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_100(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_4(ILiquidityProviders), function:totalLPFees, arguments:['tokenAddress_1']  
High Call: totalLPFees
Running querryfc
Written func info: LiquidityProviders, totalLPFees
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-982], [-1], 6, "'u'", 'u', -1)
[i]Type for TMP_100

Name: TMP_100 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
liquidityProviders_5(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_4', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_3(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_2', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_3(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_2', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_101(uint256) = liquidityPoolBalance_1 (c)- TMP_100
init
end
init
end
-982
-1
lnorm: 6 rnorm: 6
init
end
_______________

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_101 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_101

Name: TMP_101 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_2(uint256) -> gasFeeAccumulatedByToken_3[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_2

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_102(uint256) = TMP_101 (c)- REF_2
init
end
init
end
init
end
_______________

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_102 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_102

Name: TMP_102 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_3(uint256) -> incentivePool_3[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_3

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_103(uint256) = TMP_102 (c)- REF_3
init
end
init
end
init
end
_______________

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_103 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_103

Name: TMP_103 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
currentLiquidity_1(uint256) := TMP_103(uint256)
asgn
init
end
_______________

Name: TMP_103 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: currentLiquidity Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for currentLiquidity

Name: currentLiquidity Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_228

Name: TMP_228 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_42(ILiquidityProviders) := ϕ(['liquidityProviders_5'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getTransferFee
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
currentLiquidity_1(uint256) := TMP_228(uint256)
asgn
init
end
_______________

Name: TMP_228 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: currentLiquidity Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for currentLiquidity

Name: currentLiquidity Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: providedLiquidity, Num: 1
Globalname: providedLiquidity
End popogation

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getTransferFee
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid
TMP_229(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_42(ILiquidityProviders), function:getSuppliedLiquidityByToken, arguments:['tokenAddress_1']  
High Call: getSuppliedLiquidityByToken
Running querryfc
Written func info: LiquidityProviders, getSuppliedLiquidityByToken
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-982], [-1], 6, "'u'", 'u', -1)
[i]Type for TMP_229

Name: TMP_229 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
tokenManager_29(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_28', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_43(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_42', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getTransferFee
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
providedLiquidity_1(uint256) := TMP_229(uint256)
asgn
init
end
_______________

Name: TMP_229 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: providedLiquidity Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for providedLiquidity

Name: providedLiquidity Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: currentLiquidity, Num: 1
Globalname: currentLiquidity
Name: resultingLiquidity, Num: 1
Globalname: resultingLiquidity
End popogation
TMP_230(uint256) = currentLiquidity_1 (c)- amount_1
init
end
init
end
init
end
_______________

Name: amount Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_230 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_230

Name: TMP_230 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
resultingLiquidity_1(uint256) := TMP_230(uint256)
asgn
init
end
_______________

Name: TMP_230 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: resultingLiquidity Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for resultingLiquidity

Name: resultingLiquidity Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: equilibriumFee, Num: 1
Globalname: equilibriumFee
End popogation

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid
TMP_231(ITokenManager.TokenInfo) = HIGH_LEVEL_CALL, dest:tokenManager_29(ITokenManager), function:getTokensInfo, arguments:['tokenAddress_1']  
High Call: getTokensInfo
Running querryfc
Written func info: TokenManager, getTokensInfo
[i]Type for TMP_231

Name: TMP_231 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: equilibriumFee
Finance Type: undef
XXXX
tokenManager_30(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_29', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
REF_62(uint256) -> TMP_231.equilibriumFee
MEMBER
init
end
init
end
init
end
_______________

Name: TMP_231.equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for REF_62

Name: TMP_231.equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: TMP_231, Field: equilibriumFee
#################
Member: 
Name: TMP_231 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: equilibriumFee
Finance Type: undef
Fieldf: 
Name: equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: TMP_231.equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
equilibriumFee_1(uint256) := REF_62(uint256)
asgn
init
end
_______________

Name: TMP_231.equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: equilibriumFee Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for equilibriumFee

Name: equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: maxFee, Num: 1
Globalname: maxFee
End popogation

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid
TMP_232(ITokenManager.TokenInfo) = HIGH_LEVEL_CALL, dest:tokenManager_30(ITokenManager), function:getTokensInfo, arguments:['tokenAddress_1']  
High Call: getTokensInfo
Running querryfc
Written func info: TokenManager, getTokensInfo
[i]Type for TMP_232

Name: TMP_232 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: maxFee
Finance Type: undef
XXXX
tokenManager_31(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_30', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
REF_64(uint256) -> TMP_232.maxFee
MEMBER
init
end
init
end
init
end
_______________

Name: TMP_232.maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for REF_64

Name: TMP_232.maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: TMP_232, Field: maxFee
#################
Member: 
Name: TMP_232 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: maxFee
Finance Type: undef
Fieldf: 
Name: maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: TMP_232.maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
maxFee_1(uint256) := REF_64(uint256)
asgn
init
end
_______________

Name: TMP_232.maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: maxFee Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for maxFee

Name: maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: numerator, Num: 1
Globalname: numerator
End popogation
TMP_233(uint256) = providedLiquidity_1 (c)* equilibriumFee_1
testing mul...
init
end
init
end

Name: providedLiquidity Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: 6 rnorm: u
init
end
_______________

Name: providedLiquidity Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_233 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_233

Name: TMP_233 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_234(uint256) = TMP_233 (c)* maxFee_1
testing mul...
init
end
init
end

Name: TMP_233 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef

Name: maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: 6 rnorm: u
init
end
_______________

Name: TMP_233 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_234 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_234

Name: TMP_234 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
numerator_1(uint256) := TMP_234(uint256)
asgn
init
end
_______________

Name: TMP_234 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef

Name: numerator Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for numerator

Name: numerator Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: denominator, Num: 1
Globalname: denominator
End popogation
TMP_235(uint256) = equilibriumFee_1 (c)* providedLiquidity_1
testing mul...
init
end
init
end

Name: equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: providedLiquidity Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
lnorm: u rnorm: 6
init
end
_______________

Name: providedLiquidity Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_235 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_235

Name: TMP_235 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_236(uint256) = maxFee_1 (c)- equilibriumFee_1
init
end
init
end
init
end
_______________

Name: equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_236 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_236

Name: TMP_236 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_237(uint256) = TMP_236 (c)* resultingLiquidity_1
testing mul...
init
end
init
end

Name: TMP_236 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: resultingLiquidity Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: resultingLiquidity Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_237 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_237

Name: TMP_237 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_238(uint256) = TMP_235 (c)+ TMP_237
init
end
init
end
init
end
_______________

Name: TMP_235 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_238 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_238

Name: TMP_238 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
denominator_1(uint256) := TMP_238(uint256)
asgn
init
end
_______________

Name: TMP_238 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: denominator Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for denominator

Name: denominator Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_239(bool) = denominator_1 == 0
[i]Type for TMP_239

Name: TMP_239 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: fee, Num: 1
Globalname: fee
End popogation
fee_1(uint256) := 0(uint256)
asgn
init
end
_______________

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef

Name: fee Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for fee

Name: fee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: fee, Num: 2
Globalname: fee
End popogation
TMP_240(uint256) = numerator_1 (c)/ denominator_1
init
end
init
end
lnorm: 6 rnorm: u
Source address: u
init
end
_______________

Name: PIC_186 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_240 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
init
end
init
end
lnorm: 6 rnorm: u
Source address: u
init
end
_______________

Name: PIC_187 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_240 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_240

Name: TMP_240 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
fee_2(uint256) := TMP_240(uint256)
asgn
init
end
_______________

Name: TMP_240 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef

Name: fee Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for fee

Name: fee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_199

Name: TMP_199 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tokenManager_21(ITokenManager) := ϕ(['tokenManager_31'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getAmountToTransfer
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_36(ILiquidityProviders) := ϕ(['liquidityProviders_43'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getAmountToTransfer
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
transferFeePerc_1(uint256) := TMP_199(uint256)
asgn
init
end
_______________

Name: TMP_199 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: transferFeePerc Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for transferFeePerc

Name: transferFeePerc Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: transferFeePerc, Num: 1
Globalname: transferFeePerc
End popogation

Name: BASE_DIVISOR Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: baseGas Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: tokenManager Function: getAmountToTransfer
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getAmountToTransfer
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_200(ITokenManager.TokenInfo) = HIGH_LEVEL_CALL, dest:tokenManager_21(ITokenManager), function:getTokensInfo, arguments:['tokenAddress_1']  
High Call: getTokensInfo
Running querryfc
Written func info: TokenManager, getTokensInfo
[i]Type for TMP_200

Name: TMP_200 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: equilibriumFee
Finance Type: undef
XXXX
BASE_DIVISOR_3(uint256) := ϕ(['BASE_DIVISOR_3', 'BASE_DIVISOR_5', 'BASE_DIVISOR_2'])
Phi
[i]Type for BASE_DIVISOR

Name: BASE_DIVISOR Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
baseGas_5(uint256) := ϕ(['baseGas_2', 'baseGas_1', 'baseGas_4', 'baseGas_9'])
Phi
[i]Type for baseGas

Name: baseGas Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tokenManager_22(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_7', 'tokenManager_1', 'tokenManager_21', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getAmountToTransfer
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_37(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_36', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getAmountToTransfer
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_6(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_5', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulated_3(mapping(address => mapping(address => uint256))) := ϕ(['gasFeeAccumulated_16', 'gasFeeAccumulated_10', 'gasFeeAccumulated_22', 'gasFeeAccumulated_2'])
Phi
[i]Type for gasFeeAccumulated

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_25(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_24'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_44(uint256) -> TMP_200.equilibriumFee
MEMBER
init
end
init
end
init
end
_______________

Name: TMP_200.equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for REF_44

Name: TMP_200.equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: TMP_200, Field: equilibriumFee
#################
Member: 
Name: TMP_200 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: equilibriumFee
Finance Type: undef
Fieldf: 
Name: equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: TMP_200.equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_201(bool) = transferFeePerc_1 > REF_44
init
end
init
end
lnorm: u rnorm: u
init
end
_______________

Name: TMP_200.equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: transferFeePerc Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
init
end
_______________

Name: TMP_200.equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_201 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_201

Name: TMP_201 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: lpFee, Num: 1
Globalname: lpFee
End popogation

Name: BASE_DIVISOR Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: baseGas Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: tokenManager Function: getAmountToTransfer
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getAmountToTransfer
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_202(ITokenManager.TokenInfo) = HIGH_LEVEL_CALL, dest:tokenManager_22(ITokenManager), function:getTokensInfo, arguments:['tokenAddress_1']  
High Call: getTokensInfo
Running querryfc
Written func info: TokenManager, getTokensInfo
[i]Type for TMP_202

Name: TMP_202 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: equilibriumFee
Finance Type: undef
XXXX
BASE_DIVISOR_4(uint256) := ϕ(['BASE_DIVISOR_3', 'BASE_DIVISOR_5'])
Phi
[i]Type for BASE_DIVISOR

Name: BASE_DIVISOR Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
baseGas_6(uint256) := ϕ(['baseGas_2', 'baseGas_1', 'baseGas_5', 'baseGas_9'])
Phi
[i]Type for baseGas

Name: baseGas Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tokenManager_23(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_7', 'tokenManager_1', 'tokenManager_22', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getAmountToTransfer
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_38(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_37', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getAmountToTransfer
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_7(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_6', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulated_4(mapping(address => mapping(address => uint256))) := ϕ(['gasFeeAccumulated_16', 'gasFeeAccumulated_10', 'gasFeeAccumulated_3', 'gasFeeAccumulated_22'])
Phi
[i]Type for gasFeeAccumulated

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_26(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_46(uint256) -> TMP_202.equilibriumFee
MEMBER
init
end
init
end
init
end
_______________

Name: TMP_202.equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for REF_46

Name: TMP_202.equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: TMP_202, Field: equilibriumFee
#################
Member: 
Name: TMP_202 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: equilibriumFee
Finance Type: undef
Fieldf: 
Name: equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: TMP_202.equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_203(uint256) = amount_1 (c)* REF_46
testing mul...
init
end
init
end

Name: amount Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_202.equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: TMP_202.equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_203 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_203

Name: TMP_203 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_204(uint256) = TMP_203 (c)/ BASE_DIVISOR_4
init
end
init
end
lnorm: u rnorm: u
init
end
init
end
init
end
lnorm: u rnorm: u
init
end
[i]Type for TMP_204

Name: TMP_204 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
lpFee_1(uint256) := TMP_204(uint256)
asgn
init
end
_______________

Name: TMP_204 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: lpFee Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for lpFee

Name: lpFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: lpFee, Num: 2
Globalname: lpFee
End popogation
TMP_210(uint256) = amount_1 (c)* transferFeePerc_1
testing mul...
init
end
init
end

Name: amount Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: transferFeePerc Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: transferFeePerc Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_210 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_210

Name: TMP_210 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_211(uint256) = TMP_210 (c)/ BASE_DIVISOR_3
init
end
init
end
lnorm: u rnorm: u
init
end
init
end
init
end
lnorm: u rnorm: u
init
end
[i]Type for TMP_211

Name: TMP_211 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
lpFee_2(uint256) := TMP_211(uint256)
asgn
init
end
_______________

Name: TMP_211 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: lpFee Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for lpFee

Name: lpFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation

Name: BASE_DIVISOR Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: baseGas Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: tokenManager Function: getAmountToTransfer
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getAmountToTransfer
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
REF_47(uint256) -> incentivePool_26[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_47

Name: incentivePool Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_48(uint256) -> incentivePool_26[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_48

Name: incentivePool Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_205(ITokenManager.TokenInfo) = HIGH_LEVEL_CALL, dest:tokenManager_23(ITokenManager), function:getTokensInfo, arguments:['tokenAddress_1']  
High Call: getTokensInfo
Running querryfc
Written func info: TokenManager, getTokensInfo
[i]Type for TMP_205

Name: TMP_205 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: equilibriumFee
Finance Type: undef
XXXX
BASE_DIVISOR_5(uint256) := ϕ(['BASE_DIVISOR_3', 'BASE_DIVISOR_5', 'BASE_DIVISOR_4'])
Phi
[i]Type for BASE_DIVISOR

Name: BASE_DIVISOR Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
baseGas_7(uint256) := ϕ(['baseGas_2', 'baseGas_1', 'baseGas_6', 'baseGas_9'])
Phi
[i]Type for baseGas

Name: baseGas Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tokenManager_24(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_23', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getAmountToTransfer
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_39(ILiquidityProviders) := ϕ(['liquidityProviders_38', 'liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getAmountToTransfer
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_8(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_7', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulated_5(mapping(address => mapping(address => uint256))) := ϕ(['gasFeeAccumulated_16', 'gasFeeAccumulated_10', 'gasFeeAccumulated_4', 'gasFeeAccumulated_22'])
Phi
[i]Type for gasFeeAccumulated

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_27(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_26', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_50(uint256) -> TMP_205.equilibriumFee
MEMBER
init
end
init
end
init
end
_______________

Name: TMP_205.equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for REF_50

Name: TMP_205.equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: TMP_205, Field: equilibriumFee
#################
Member: 
Name: TMP_205 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: equilibriumFee
Finance Type: undef
Fieldf: 
Name: equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: TMP_205.equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_206(uint256) = transferFeePerc_1 (c)- REF_50
init
end
init
end
init
end
_______________

Name: TMP_205.equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_206 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_206

Name: TMP_206 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_207(uint256) = amount_1 (c)* TMP_206
testing mul...
init
end
init
end

Name: amount Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_206 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: TMP_206 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_207 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_207

Name: TMP_207 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_208(uint256) = REF_48 (c)+ TMP_207
init
end
init
end
init
end
_______________

Name: TMP_207 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_208 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_208

Name: TMP_208 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_209(uint256) = TMP_208 (c)/ BASE_DIVISOR_5
init
end
init
end
lnorm: u rnorm: u
init
end
init
end
init
end
lnorm: u rnorm: u
init
end
[i]Type for TMP_209

Name: TMP_209 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_28(mapping(address => uint256)) := ϕ(['incentivePool_26'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_47 (->incentivePool_28) := TMP_209(uint256)
asgn
init
end
_______________

Name: TMP_209 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: REF_47 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_47

Name: REF_47 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
Source address: u
Propogating parameters and globals to SSA variables...
End popogation
Name: lpFee, Num: 3
Globalname: lpFee

Name: lpFee Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
lpFee_3(uint256) := ϕ(['lpFee_1', 'lpFee_2'])
Phi

Name: lpFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: lpFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
init
end
_______________

Name: lpFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: lpFee Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for lpFee

Name: lpFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: transferFeeAmount, Num: 1
Globalname: transferFeeAmount
End popogation
TMP_212(uint256) = amount_1 (c)* transferFeePerc_1
testing mul...
init
end
init
end

Name: amount Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: transferFeePerc Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: transferFeePerc Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_212 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_212

Name: TMP_212 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_213(uint256) = TMP_212 (c)/ BASE_DIVISOR_3
init
end
init
end
lnorm: u rnorm: u
init
end
init
end
init
end
lnorm: u rnorm: u
init
end
[i]Type for TMP_213

Name: TMP_213 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
transferFeeAmount_1(uint256) := TMP_213(uint256)
asgn
init
end
_______________

Name: TMP_213 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: transferFeeAmount Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for transferFeeAmount

Name: transferFeeAmount Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation

Name: baseGas Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: tokenManager Function: getAmountToTransfer
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getAmountToTransfer
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
HIGH_LEVEL_CALL, dest:liquidityProviders_37(ILiquidityProviders), function:addLPFee, arguments:['tokenAddress_1', 'lpFee_3']  
High Call: addLPFee
baseGas_8(uint256) := ϕ(['baseGas_2', 'baseGas_1', 'baseGas_7', 'baseGas_9'])
Phi
[i]Type for baseGas

Name: baseGas Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tokenManager_25(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_24', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getAmountToTransfer
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_40(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_39', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getAmountToTransfer
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_9(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_8', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulated_6(mapping(address => mapping(address => uint256))) := ϕ(['gasFeeAccumulated_16', 'gasFeeAccumulated_10', 'gasFeeAccumulated_22', 'gasFeeAccumulated_5'])
Phi
[i]Type for gasFeeAccumulated

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Source address: u
Name: initialGas, Num: 1
Globalname: initialGas
Name: totalGasUsed, Num: 1
Globalname: totalGasUsed
End popogation
TMP_215(uint256) = SOLIDITY_CALL gasleft()()
[i]Type for TMP_215

Name: TMP_215 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_216(uint256) = initialGas_1 (c)- TMP_215
init
end
init
end
init
end
_______________

Name: TMP_215 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_216 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_216

Name: TMP_216 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
totalGasUsed_1(uint256) := TMP_216(uint256)
asgn
init
end
_______________

Name: TMP_216 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: totalGasUsed Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for totalGasUsed

Name: totalGasUsed Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: totalGasUsed, Num: 1
Globalname: totalGasUsed
Name: totalGasUsed, Num: 2
Globalname: totalGasUsed
End popogation

Name: baseGas Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: tokenManager Function: getAmountToTransfer
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_217(ITokenManager.TokenInfo) = HIGH_LEVEL_CALL, dest:tokenManager_25(ITokenManager), function:getTokensInfo, arguments:['tokenAddress_1']  
High Call: getTokensInfo
Running querryfc
Written func info: TokenManager, getTokensInfo
[i]Type for TMP_217

Name: TMP_217 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: transferOverhead
Finance Type: undef
XXXX
baseGas_9(uint256) := ϕ(['baseGas_2', 'baseGas_1', 'baseGas_8', 'baseGas_9'])
Phi
[i]Type for baseGas

Name: baseGas Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tokenManager_26(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_25', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getAmountToTransfer
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_10(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_9', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulated_7(mapping(address => mapping(address => uint256))) := ϕ(['gasFeeAccumulated_16', 'gasFeeAccumulated_10', 'gasFeeAccumulated_22', 'gasFeeAccumulated_6'])
Phi
[i]Type for gasFeeAccumulated

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_53(uint256) -> TMP_217.transferOverhead
MEMBER
init
end
init
end
init
end
_______________

Name: TMP_217.transferOverhead Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: transferOverhead Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for REF_53

Name: TMP_217.transferOverhead Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: TMP_217, Field: transferOverhead
#################
Member: 
Name: TMP_217 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: transferOverhead
Finance Type: undef
Fieldf: 
Name: transferOverhead Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: TMP_217.transferOverhead Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: transferOverhead Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_218(uint256) = totalGasUsed_1 (c)+ REF_53
init
end
init
end
init
end
_______________

Name: TMP_217.transferOverhead Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_218 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_218

Name: TMP_218 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
totalGasUsed_2(uint256) := TMP_218(uint256)
asgn
init
end
_______________

Name: TMP_218 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: totalGasUsed Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for totalGasUsed

Name: totalGasUsed Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: totalGasUsed, Num: 3
Globalname: totalGasUsed
End popogation
TMP_219(uint256) = totalGasUsed_2 (c)+ baseGas_9
init
end
init
end
init
end
_______________

Name: baseGas Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_219 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_219

Name: TMP_219 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
totalGasUsed_3(uint256) := TMP_219(uint256)
asgn
init
end
_______________

Name: TMP_219 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: totalGasUsed Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for totalGasUsed

Name: totalGasUsed Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Source address: u
Name: tokenGasPrice, Num: 1
Globalname: tokenGasPrice
Name: gasFee, Num: 1
Globalname: gasFee
End popogation
TMP_220(uint256) = totalGasUsed_3 (c)* tokenGasPrice_1
testing mul...
init
end
init
end

Name: totalGasUsed Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: tokenGasPrice_1 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: totalGasUsed Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_220 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_220

Name: TMP_220 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
gasFee_1(uint256) := TMP_220(uint256)
asgn
init
end
_______________

Name: TMP_220 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: gasFee Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for gasFee

Name: gasFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
REF_54(uint256) -> gasFeeAccumulatedByToken_10[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_54

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_55(uint256) -> gasFeeAccumulatedByToken_10[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_55

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_221(uint256) = REF_55 (c)+ gasFee_1
init
end
init
end
init
end
_______________

Name: gasFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_221 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_221

Name: TMP_221 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_11(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_10'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_54 (->gasFeeAccumulatedByToken_11) := TMP_221(uint256)
asgn
init
end
_______________

Name: TMP_221 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: REF_54 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_54

Name: REF_54 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
Source address: u
Propogating parameters and globals to SSA variables...
End popogation

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
REF_56(mapping(address => uint256)) -> gasFeeAccumulated_7[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_56

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_222(address) = INTERNAL_CALL, LiquidityPool._msgSender()()
init
end
_______________

Name: PIC_33 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_222 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_222

Name: TMP_222 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_57(uint256) -> REF_56[TMP_222]
INDEX
Source address: u
[i]Type for REF_57

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_58(mapping(address => uint256)) -> gasFeeAccumulated_8[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_58

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_223(address) = INTERNAL_CALL, LiquidityPool._msgSender()()
init
end
_______________

Name: PIC_33 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_223 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_223

Name: TMP_223 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_59(uint256) -> REF_58[TMP_223]
INDEX
Source address: u
[i]Type for REF_59

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_224(uint256) = REF_59 (c)+ gasFee_1
init
end
init
end
init
end
_______________

Name: gasFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_224 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_224

Name: TMP_224 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulated_10(mapping(address => mapping(address => uint256))) := ϕ(['gasFeeAccumulated_7'])
Phi
[i]Type for gasFeeAccumulated

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_57 (->gasFeeAccumulated_10) := TMP_224(uint256)
asgn
init
end
_______________

Name: TMP_224 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: REF_57 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_57

Name: REF_57 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
Source address: u
Propogating parameters and globals to SSA variables...
Name: amountToTransfer, Num: 1
Globalname: amountToTransfer
End popogation
TMP_225(uint256) = transferFeeAmount_1 (c)+ gasFee_1
init
end
init
end
init
end
_______________

Name: gasFee Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_225 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_225

Name: TMP_225 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_226(uint256) = amount_1 (c)- TMP_225
init
end
init
end
init
end
_______________

Name: TMP_225 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_226 Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_226

Name: TMP_226 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
amountToTransfer_1(uint256) := TMP_226(uint256)
asgn
init
end
_______________

Name: TMP_226 Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amountToTransfer Function: getAmountToTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for amountToTransfer

Name: amountToTransfer Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Source address: u



getTransferFee
Finding type for tokenAddress(address ... )
prev address? -982
Head Addr: -982
    Norm: 6
    Set: {-982}
    Fin: NULL
Finding type for amount(uint256 ... )
Param: 0
    num: []
    den: []
    norm: 6
    link: tokenAddress
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1


tokenAddress_1(address) := ϕ(['tokenAddress_1'])
amount_1(uint256) := ϕ(['amount_1'])
tokenManager_27(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_0', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
liquidityProviders_41(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
TMP_228(uint256) = INTERNAL_CALL, LiquidityPool.getCurrentLiquidity(address)(tokenAddress_1)
liquidityProviders_42(ILiquidityProviders) := ϕ(['liquidityProviders_5'])
currentLiquidity_1(uint256) := TMP_228(uint256)
TMP_229(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_42(ILiquidityProviders), function:getSuppliedLiquidityByToken, arguments:['tokenAddress_1']  
tokenManager_29(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_28', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
liquidityProviders_43(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_42', 'liquidityProviders_1'])
providedLiquidity_1(uint256) := TMP_229(uint256)
TMP_230(uint256) = currentLiquidity_1 (c)- amount_1
resultingLiquidity_1(uint256) := TMP_230(uint256)
TMP_231(ITokenManager.TokenInfo) = HIGH_LEVEL_CALL, dest:tokenManager_29(ITokenManager), function:getTokensInfo, arguments:['tokenAddress_1']  
tokenManager_30(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_29', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
REF_62(uint256) -> TMP_231.equilibriumFee
equilibriumFee_1(uint256) := REF_62(uint256)
TMP_232(ITokenManager.TokenInfo) = HIGH_LEVEL_CALL, dest:tokenManager_30(ITokenManager), function:getTokensInfo, arguments:['tokenAddress_1']  
tokenManager_31(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_30', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
REF_64(uint256) -> TMP_232.maxFee
maxFee_1(uint256) := REF_64(uint256)
TMP_233(uint256) = providedLiquidity_1 (c)* equilibriumFee_1
TMP_234(uint256) = TMP_233 (c)* maxFee_1
numerator_1(uint256) := TMP_234(uint256)
TMP_235(uint256) = equilibriumFee_1 (c)* providedLiquidity_1
TMP_236(uint256) = maxFee_1 (c)- equilibriumFee_1
TMP_237(uint256) = TMP_236 (c)* resultingLiquidity_1
TMP_238(uint256) = TMP_235 (c)+ TMP_237
denominator_1(uint256) := TMP_238(uint256)
TMP_239(bool) = denominator_1 == 0
CONDITION TMP_239
fee_1(uint256) := 0(uint256)
TMP_240(uint256) = numerator_1 (c)/ denominator_1
fee_2(uint256) := TMP_240(uint256)


Propogating parameters and globals to SSA variables...
End popogation
Source address: -982

Name: tokenAddress_1 Function: getTransferFee
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
Phid
Source address: u
Name: amount, Num: 1
Globalname: amount

Name: amount_1 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getTransferFee
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid
tokenAddress_1(address) := ϕ(['tokenAddress_1'])
Phi
[i]Type for tokenAddress

Name: tokenAddress Function: getTransferFee
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount_1'])
Phi

Name: amount Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
init
end
_______________

Name: amount Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for amount

Name: amount Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tokenManager_27(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_0', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_41(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getTransferFee
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: currentLiquidity, Num: 1
Globalname: currentLiquidity
End popogation

Name: liquidityProviders Function: getTransferFee
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid
TMP_228(uint256) = INTERNAL_CALL, LiquidityPool.getCurrentLiquidity(address)(tokenAddress_1)
init
end
[[], [], 6, 'tokenAddress', [], -1, -982, 'u']

Name: tokenAddress Function: getCurrentLiquidity
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
Source address: -982

Name: tokenAddress_1 Function: getCurrentLiquidity
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
tokenAddress_1(address) := ϕ(['tokenAddress_1', 'tokenAddress_1'])
Phi
[i]Type for tokenAddress

Name: tokenAddress Function: getCurrentLiquidity
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_3(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_1(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_0', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_1(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_0'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: liquidityPoolBalance, Num: 1
Globalname: liquidityPoolBalance
End popogation

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_99(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_3(ILiquidityProviders), function:getCurrentLiquidity, arguments:['tokenAddress_1']  
High Call: getCurrentLiquidity
Running querryfc
Written func info: LiquidityProviders, getCurrentLiquidity
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-982], [-1], 6, "'u'", 'u', -1)
[i]Type for TMP_99

Name: TMP_99 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
liquidityProviders_4(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_3', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_2(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_1', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_2(mapping(address => uint256)) := ϕ(['incentivePool_1', 'incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityPoolBalance_1(uint256) := TMP_99(uint256)
asgn
init
end
_______________

Name: TMP_99 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for liquidityPoolBalance

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: currentLiquidity, Num: 1
Globalname: currentLiquidity
End popogation

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_100(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_4(ILiquidityProviders), function:totalLPFees, arguments:['tokenAddress_1']  
High Call: totalLPFees
Running querryfc
Written func info: LiquidityProviders, totalLPFees
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-982], [-1], 6, "'u'", 'u', -1)
[i]Type for TMP_100

Name: TMP_100 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
liquidityProviders_5(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_4', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_3(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_2', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_3(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_2', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_101(uint256) = liquidityPoolBalance_1 (c)- TMP_100
init
end
init
end
-982
-1
lnorm: 6 rnorm: 6
init
end
_______________

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_101 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_101

Name: TMP_101 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_2(uint256) -> gasFeeAccumulatedByToken_3[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_2

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_102(uint256) = TMP_101 (c)- REF_2
init
end
init
end
init
end
_______________

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_102 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_102

Name: TMP_102 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_3(uint256) -> incentivePool_3[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_3

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_103(uint256) = TMP_102 (c)- REF_3
init
end
init
end
init
end
_______________

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_103 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_103

Name: TMP_103 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
currentLiquidity_1(uint256) := TMP_103(uint256)
asgn
init
end
_______________

Name: TMP_103 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: currentLiquidity Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for currentLiquidity

Name: currentLiquidity Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Source address: -982

Name: tokenAddress_1 Function: getCurrentLiquidity
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
tokenAddress_1(address) := ϕ(['tokenAddress_1', 'tokenAddress_1'])
Phi
[i]Type for tokenAddress

Name: tokenAddress Function: getCurrentLiquidity
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_3(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_1(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_0', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_1(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_0'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: liquidityPoolBalance, Num: 1
Globalname: liquidityPoolBalance
End popogation

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_99(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_3(ILiquidityProviders), function:getCurrentLiquidity, arguments:['tokenAddress_1']  
High Call: getCurrentLiquidity
Running querryfc
Written func info: LiquidityProviders, getCurrentLiquidity
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-982], [-1], 6, "'u'", 'u', -1)
[i]Type for TMP_99

Name: TMP_99 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
liquidityProviders_4(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_3', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_2(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_1', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_2(mapping(address => uint256)) := ϕ(['incentivePool_1', 'incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityPoolBalance_1(uint256) := TMP_99(uint256)
asgn
init
end
_______________

Name: TMP_99 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for liquidityPoolBalance

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: currentLiquidity, Num: 1
Globalname: currentLiquidity
End popogation

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_100(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_4(ILiquidityProviders), function:totalLPFees, arguments:['tokenAddress_1']  
High Call: totalLPFees
Running querryfc
Written func info: LiquidityProviders, totalLPFees
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-982], [-1], 6, "'u'", 'u', -1)
[i]Type for TMP_100

Name: TMP_100 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
liquidityProviders_5(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_4', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_3(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_2', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_3(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_2', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_101(uint256) = liquidityPoolBalance_1 (c)- TMP_100
init
end
init
end
-982
-1
lnorm: 6 rnorm: 6
init
end
_______________

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_101 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_101

Name: TMP_101 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_2(uint256) -> gasFeeAccumulatedByToken_3[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_2

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_102(uint256) = TMP_101 (c)- REF_2
init
end
init
end
init
end
_______________

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_102 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_102

Name: TMP_102 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_3(uint256) -> incentivePool_3[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_3

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_103(uint256) = TMP_102 (c)- REF_3
init
end
init
end
init
end
_______________

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_103 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_103

Name: TMP_103 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
currentLiquidity_1(uint256) := TMP_103(uint256)
asgn
init
end
_______________

Name: TMP_103 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: currentLiquidity Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for currentLiquidity

Name: currentLiquidity Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_228

Name: TMP_228 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_42(ILiquidityProviders) := ϕ(['liquidityProviders_5'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getTransferFee
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
currentLiquidity_1(uint256) := TMP_228(uint256)
asgn
init
end
_______________

Name: TMP_228 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: currentLiquidity Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for currentLiquidity

Name: currentLiquidity Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: providedLiquidity, Num: 1
Globalname: providedLiquidity
End popogation

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getTransferFee
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid
TMP_229(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_42(ILiquidityProviders), function:getSuppliedLiquidityByToken, arguments:['tokenAddress_1']  
High Call: getSuppliedLiquidityByToken
Running querryfc
Written func info: LiquidityProviders, getSuppliedLiquidityByToken
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-982], [-1], 6, "'u'", 'u', -1)
[i]Type for TMP_229

Name: TMP_229 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
tokenManager_29(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_28', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_43(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_42', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getTransferFee
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
providedLiquidity_1(uint256) := TMP_229(uint256)
asgn
init
end
_______________

Name: TMP_229 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: providedLiquidity Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for providedLiquidity

Name: providedLiquidity Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: currentLiquidity, Num: 1
Globalname: currentLiquidity
Name: resultingLiquidity, Num: 1
Globalname: resultingLiquidity
End popogation
TMP_230(uint256) = currentLiquidity_1 (c)- amount_1
init
end
init
end
init
end
_______________

Name: amount Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_230 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_230

Name: TMP_230 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
resultingLiquidity_1(uint256) := TMP_230(uint256)
asgn
init
end
_______________

Name: TMP_230 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: resultingLiquidity Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for resultingLiquidity

Name: resultingLiquidity Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: equilibriumFee, Num: 1
Globalname: equilibriumFee
End popogation

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid
TMP_231(ITokenManager.TokenInfo) = HIGH_LEVEL_CALL, dest:tokenManager_29(ITokenManager), function:getTokensInfo, arguments:['tokenAddress_1']  
High Call: getTokensInfo
Running querryfc
Written func info: TokenManager, getTokensInfo
[i]Type for TMP_231

Name: TMP_231 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: equilibriumFee
Finance Type: undef
XXXX
tokenManager_30(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_29', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
REF_62(uint256) -> TMP_231.equilibriumFee
MEMBER
init
end
init
end
init
end
_______________

Name: TMP_231.equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for REF_62

Name: TMP_231.equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: TMP_231, Field: equilibriumFee
#################
Member: 
Name: TMP_231 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: equilibriumFee
Finance Type: undef
Fieldf: 
Name: equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: TMP_231.equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
equilibriumFee_1(uint256) := REF_62(uint256)
asgn
init
end
_______________

Name: TMP_231.equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: equilibriumFee Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for equilibriumFee

Name: equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: maxFee, Num: 1
Globalname: maxFee
End popogation

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid
TMP_232(ITokenManager.TokenInfo) = HIGH_LEVEL_CALL, dest:tokenManager_30(ITokenManager), function:getTokensInfo, arguments:['tokenAddress_1']  
High Call: getTokensInfo
Running querryfc
Written func info: TokenManager, getTokensInfo
[i]Type for TMP_232

Name: TMP_232 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: maxFee
Finance Type: undef
XXXX
tokenManager_31(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_30', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
REF_64(uint256) -> TMP_232.maxFee
MEMBER
init
end
init
end
init
end
_______________

Name: TMP_232.maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for REF_64

Name: TMP_232.maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: TMP_232, Field: maxFee
#################
Member: 
Name: TMP_232 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: maxFee
Finance Type: undef
Fieldf: 
Name: maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: TMP_232.maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
maxFee_1(uint256) := REF_64(uint256)
asgn
init
end
_______________

Name: TMP_232.maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: maxFee Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for maxFee

Name: maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: numerator, Num: 1
Globalname: numerator
End popogation
TMP_233(uint256) = providedLiquidity_1 (c)* equilibriumFee_1
testing mul...
init
end
init
end

Name: providedLiquidity Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: 6 rnorm: u
init
end
_______________

Name: providedLiquidity Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_233 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_233

Name: TMP_233 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_234(uint256) = TMP_233 (c)* maxFee_1
testing mul...
init
end
init
end

Name: TMP_233 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef

Name: maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: 6 rnorm: u
init
end
_______________

Name: TMP_233 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_234 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_234

Name: TMP_234 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
numerator_1(uint256) := TMP_234(uint256)
asgn
init
end
_______________

Name: TMP_234 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef

Name: numerator Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for numerator

Name: numerator Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: denominator, Num: 1
Globalname: denominator
End popogation
TMP_235(uint256) = equilibriumFee_1 (c)* providedLiquidity_1
testing mul...
init
end
init
end

Name: equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: providedLiquidity Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
lnorm: u rnorm: 6
init
end
_______________

Name: providedLiquidity Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_235 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_235

Name: TMP_235 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_236(uint256) = maxFee_1 (c)- equilibriumFee_1
init
end
init
end
init
end
_______________

Name: equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_236 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_236

Name: TMP_236 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_237(uint256) = TMP_236 (c)* resultingLiquidity_1
testing mul...
init
end
init
end

Name: TMP_236 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: resultingLiquidity Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: resultingLiquidity Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_237 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_237

Name: TMP_237 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_238(uint256) = TMP_235 (c)+ TMP_237
init
end
init
end
init
end
_______________

Name: TMP_235 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_238 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_238

Name: TMP_238 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
denominator_1(uint256) := TMP_238(uint256)
asgn
init
end
_______________

Name: TMP_238 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: denominator Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for denominator

Name: denominator Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_239(bool) = denominator_1 == 0
[i]Type for TMP_239

Name: TMP_239 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: fee, Num: 1
Globalname: fee
End popogation
fee_1(uint256) := 0(uint256)
asgn
init
end
_______________

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef

Name: fee Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for fee

Name: fee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: fee, Num: 2
Globalname: fee
End popogation
TMP_240(uint256) = numerator_1 (c)/ denominator_1
init
end
init
end
lnorm: 6 rnorm: u
Source address: u
init
end
_______________

Name: PIC_191 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_240 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
init
end
init
end
lnorm: 6 rnorm: u
Source address: u
init
end
_______________

Name: PIC_192 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_240 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_240

Name: TMP_240 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
fee_2(uint256) := TMP_240(uint256)
asgn
init
end
_______________

Name: TMP_240 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef

Name: fee Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for fee

Name: fee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX


tokenAddress_1(address) := ϕ(['tokenAddress_1'])
amount_1(uint256) := ϕ(['amount_1'])
tokenManager_27(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_0', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
liquidityProviders_41(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
TMP_228(uint256) = INTERNAL_CALL, LiquidityPool.getCurrentLiquidity(address)(tokenAddress_1)
liquidityProviders_42(ILiquidityProviders) := ϕ(['liquidityProviders_5'])
currentLiquidity_1(uint256) := TMP_228(uint256)
TMP_229(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_42(ILiquidityProviders), function:getSuppliedLiquidityByToken, arguments:['tokenAddress_1']  
tokenManager_29(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_28', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
liquidityProviders_43(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_42', 'liquidityProviders_1'])
providedLiquidity_1(uint256) := TMP_229(uint256)
TMP_230(uint256) = currentLiquidity_1 (c)- amount_1
resultingLiquidity_1(uint256) := TMP_230(uint256)
TMP_231(ITokenManager.TokenInfo) = HIGH_LEVEL_CALL, dest:tokenManager_29(ITokenManager), function:getTokensInfo, arguments:['tokenAddress_1']  
tokenManager_30(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_29', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
REF_62(uint256) -> TMP_231.equilibriumFee
equilibriumFee_1(uint256) := REF_62(uint256)
TMP_232(ITokenManager.TokenInfo) = HIGH_LEVEL_CALL, dest:tokenManager_30(ITokenManager), function:getTokensInfo, arguments:['tokenAddress_1']  
tokenManager_31(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_30', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
REF_64(uint256) -> TMP_232.maxFee
maxFee_1(uint256) := REF_64(uint256)
TMP_233(uint256) = providedLiquidity_1 (c)* equilibriumFee_1
TMP_234(uint256) = TMP_233 (c)* maxFee_1
numerator_1(uint256) := TMP_234(uint256)
TMP_235(uint256) = equilibriumFee_1 (c)* providedLiquidity_1
TMP_236(uint256) = maxFee_1 (c)- equilibriumFee_1
TMP_237(uint256) = TMP_236 (c)* resultingLiquidity_1
TMP_238(uint256) = TMP_235 (c)+ TMP_237
denominator_1(uint256) := TMP_238(uint256)
TMP_239(bool) = denominator_1 == 0
CONDITION TMP_239
fee_1(uint256) := 0(uint256)
TMP_240(uint256) = numerator_1 (c)/ denominator_1
fee_2(uint256) := TMP_240(uint256)


Propogating parameters and globals to SSA variables...
End popogation
Source address: -982

Name: tokenAddress_1 Function: getTransferFee
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
Phid
Source address: u
Name: amount, Num: 1
Globalname: amount

Name: amount_1 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getTransferFee
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid
tokenAddress_1(address) := ϕ(['tokenAddress_1'])
Phi
[i]Type for tokenAddress

Name: tokenAddress Function: getTransferFee
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount_1'])
Phi

Name: amount Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
init
end
_______________

Name: amount Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for amount

Name: amount Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tokenManager_27(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_0', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_41(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getTransferFee
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: currentLiquidity, Num: 1
Globalname: currentLiquidity
End popogation

Name: liquidityProviders Function: getTransferFee
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid
TMP_228(uint256) = INTERNAL_CALL, LiquidityPool.getCurrentLiquidity(address)(tokenAddress_1)
init
end
[[], [], 6, 'tokenAddress', [], -1, -982, 'u']

Name: tokenAddress Function: getCurrentLiquidity
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
Source address: -982

Name: tokenAddress_1 Function: getCurrentLiquidity
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
tokenAddress_1(address) := ϕ(['tokenAddress_1', 'tokenAddress_1'])
Phi
[i]Type for tokenAddress

Name: tokenAddress Function: getCurrentLiquidity
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_3(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_1(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_0', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_1(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_0'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: liquidityPoolBalance, Num: 1
Globalname: liquidityPoolBalance
End popogation

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_99(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_3(ILiquidityProviders), function:getCurrentLiquidity, arguments:['tokenAddress_1']  
High Call: getCurrentLiquidity
Running querryfc
Written func info: LiquidityProviders, getCurrentLiquidity
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-982], [-1], 6, "'u'", 'u', -1)
[i]Type for TMP_99

Name: TMP_99 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
liquidityProviders_4(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_3', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_2(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_1', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_2(mapping(address => uint256)) := ϕ(['incentivePool_1', 'incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityPoolBalance_1(uint256) := TMP_99(uint256)
asgn
init
end
_______________

Name: TMP_99 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for liquidityPoolBalance

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: currentLiquidity, Num: 1
Globalname: currentLiquidity
End popogation

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_100(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_4(ILiquidityProviders), function:totalLPFees, arguments:['tokenAddress_1']  
High Call: totalLPFees
Running querryfc
Written func info: LiquidityProviders, totalLPFees
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-982], [-1], 6, "'u'", 'u', -1)
[i]Type for TMP_100

Name: TMP_100 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
liquidityProviders_5(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_4', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_3(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_2', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_3(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_2', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_101(uint256) = liquidityPoolBalance_1 (c)- TMP_100
init
end
init
end
-982
-1
lnorm: 6 rnorm: 6
init
end
_______________

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_101 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_101

Name: TMP_101 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_2(uint256) -> gasFeeAccumulatedByToken_3[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_2

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_102(uint256) = TMP_101 (c)- REF_2
init
end
init
end
init
end
_______________

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_102 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_102

Name: TMP_102 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_3(uint256) -> incentivePool_3[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_3

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_103(uint256) = TMP_102 (c)- REF_3
init
end
init
end
init
end
_______________

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_103 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_103

Name: TMP_103 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
currentLiquidity_1(uint256) := TMP_103(uint256)
asgn
init
end
_______________

Name: TMP_103 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: currentLiquidity Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for currentLiquidity

Name: currentLiquidity Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Source address: -982

Name: tokenAddress_1 Function: getCurrentLiquidity
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
tokenAddress_1(address) := ϕ(['tokenAddress_1', 'tokenAddress_1'])
Phi
[i]Type for tokenAddress

Name: tokenAddress Function: getCurrentLiquidity
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_3(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_1(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_0', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_1(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_0'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: liquidityPoolBalance, Num: 1
Globalname: liquidityPoolBalance
End popogation

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_99(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_3(ILiquidityProviders), function:getCurrentLiquidity, arguments:['tokenAddress_1']  
High Call: getCurrentLiquidity
Running querryfc
Written func info: LiquidityProviders, getCurrentLiquidity
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-982], [-1], 6, "'u'", 'u', -1)
[i]Type for TMP_99

Name: TMP_99 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
liquidityProviders_4(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_3', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_2(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_1', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_2(mapping(address => uint256)) := ϕ(['incentivePool_1', 'incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityPoolBalance_1(uint256) := TMP_99(uint256)
asgn
init
end
_______________

Name: TMP_99 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for liquidityPoolBalance

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: currentLiquidity, Num: 1
Globalname: currentLiquidity
End popogation

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_100(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_4(ILiquidityProviders), function:totalLPFees, arguments:['tokenAddress_1']  
High Call: totalLPFees
Running querryfc
Written func info: LiquidityProviders, totalLPFees
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-982], [-1], 6, "'u'", 'u', -1)
[i]Type for TMP_100

Name: TMP_100 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
liquidityProviders_5(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_4', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getCurrentLiquidity
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_3(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_2', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
incentivePool_3(mapping(address => uint256)) := ϕ(['incentivePool_22', 'incentivePool_11', 'incentivePool_25', 'incentivePool_28', 'incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_2', 'incentivePool_21'])
Phi
[i]Type for incentivePool

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_101(uint256) = liquidityPoolBalance_1 (c)- TMP_100
init
end
init
end
-982
-1
lnorm: 6 rnorm: 6
init
end
_______________

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_101 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_101

Name: TMP_101 Function: getCurrentLiquidity
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_2(uint256) -> gasFeeAccumulatedByToken_3[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_2

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_102(uint256) = TMP_101 (c)- REF_2
init
end
init
end
init
end
_______________

Name: gasFeeAccumulatedByToken Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_102 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_102

Name: TMP_102 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_3(uint256) -> incentivePool_3[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_3

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_103(uint256) = TMP_102 (c)- REF_3
init
end
init
end
init
end
_______________

Name: incentivePool Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_103 Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_103

Name: TMP_103 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
currentLiquidity_1(uint256) := TMP_103(uint256)
asgn
init
end
_______________

Name: TMP_103 Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: currentLiquidity Function: getCurrentLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for currentLiquidity

Name: currentLiquidity Function: getCurrentLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_228

Name: TMP_228 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_42(ILiquidityProviders) := ϕ(['liquidityProviders_5'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getTransferFee
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
currentLiquidity_1(uint256) := TMP_228(uint256)
asgn
init
end
_______________

Name: TMP_228 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: currentLiquidity Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for currentLiquidity

Name: currentLiquidity Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: providedLiquidity, Num: 1
Globalname: providedLiquidity
End popogation

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid

Name: liquidityProviders Function: getTransferFee
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid
TMP_229(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_42(ILiquidityProviders), function:getSuppliedLiquidityByToken, arguments:['tokenAddress_1']  
High Call: getSuppliedLiquidityByToken
Running querryfc
Written func info: LiquidityProviders, getSuppliedLiquidityByToken
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-982], [-1], 6, "'u'", 'u', -1)
[i]Type for TMP_229

Name: TMP_229 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
tokenManager_29(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_28', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
liquidityProviders_43(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_42', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: getTransferFee
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
providedLiquidity_1(uint256) := TMP_229(uint256)
asgn
init
end
_______________

Name: TMP_229 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: providedLiquidity Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for providedLiquidity

Name: providedLiquidity Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: currentLiquidity, Num: 1
Globalname: currentLiquidity
Name: resultingLiquidity, Num: 1
Globalname: resultingLiquidity
End popogation
TMP_230(uint256) = currentLiquidity_1 (c)- amount_1
init
end
init
end
init
end
_______________

Name: amount Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_230 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_230

Name: TMP_230 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
resultingLiquidity_1(uint256) := TMP_230(uint256)
asgn
init
end
_______________

Name: TMP_230 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: resultingLiquidity Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for resultingLiquidity

Name: resultingLiquidity Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: equilibriumFee, Num: 1
Globalname: equilibriumFee
End popogation

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid
TMP_231(ITokenManager.TokenInfo) = HIGH_LEVEL_CALL, dest:tokenManager_29(ITokenManager), function:getTokensInfo, arguments:['tokenAddress_1']  
High Call: getTokensInfo
Running querryfc
Written func info: TokenManager, getTokensInfo
[i]Type for TMP_231

Name: TMP_231 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: equilibriumFee
Finance Type: undef
XXXX
tokenManager_30(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_29', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
REF_62(uint256) -> TMP_231.equilibriumFee
MEMBER
init
end
init
end
init
end
_______________

Name: TMP_231.equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for REF_62

Name: TMP_231.equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: TMP_231, Field: equilibriumFee
#################
Member: 
Name: TMP_231 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: equilibriumFee
Finance Type: undef
Fieldf: 
Name: equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: TMP_231.equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
equilibriumFee_1(uint256) := REF_62(uint256)
asgn
init
end
_______________

Name: TMP_231.equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: equilibriumFee Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for equilibriumFee

Name: equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: maxFee, Num: 1
Globalname: maxFee
End popogation

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
Phid
TMP_232(ITokenManager.TokenInfo) = HIGH_LEVEL_CALL, dest:tokenManager_30(ITokenManager), function:getTokensInfo, arguments:['tokenAddress_1']  
High Call: getTokensInfo
Running querryfc
Written func info: TokenManager, getTokensInfo
[i]Type for TMP_232

Name: TMP_232 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: maxFee
Finance Type: undef
XXXX
tokenManager_31(ITokenManager) := ϕ(['tokenManager_12', 'tokenManager_30', 'tokenManager_26', 'tokenManager_33', 'tokenManager_31', 'tokenManager_7', 'tokenManager_1', 'tokenManager_19'])
Phi
[i]Type for tokenManager

Name: tokenManager Function: getTransferFee
Num: -1
Den: -1
Address: -996
Norm: 0
LF: TokenManager
Value: u
Fields: 
Finance Type: undef
XXXX
REF_64(uint256) -> TMP_232.maxFee
MEMBER
init
end
init
end
init
end
_______________

Name: TMP_232.maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for REF_64

Name: TMP_232.maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: TMP_232, Field: maxFee
#################
Member: 
Name: TMP_232 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: maxFee
Finance Type: undef
Fieldf: 
Name: maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: TMP_232.maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
maxFee_1(uint256) := REF_64(uint256)
asgn
init
end
_______________

Name: TMP_232.maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: maxFee Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for maxFee

Name: maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: numerator, Num: 1
Globalname: numerator
End popogation
TMP_233(uint256) = providedLiquidity_1 (c)* equilibriumFee_1
testing mul...
init
end
init
end

Name: providedLiquidity Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: 6 rnorm: u
init
end
_______________

Name: providedLiquidity Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_233 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_233

Name: TMP_233 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_234(uint256) = TMP_233 (c)* maxFee_1
testing mul...
init
end
init
end

Name: TMP_233 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef

Name: maxFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: 6 rnorm: u
init
end
_______________

Name: TMP_233 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_234 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_234

Name: TMP_234 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
numerator_1(uint256) := TMP_234(uint256)
asgn
init
end
_______________

Name: TMP_234 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef

Name: numerator Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for numerator

Name: numerator Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: denominator, Num: 1
Globalname: denominator
End popogation
TMP_235(uint256) = equilibriumFee_1 (c)* providedLiquidity_1
testing mul...
init
end
init
end

Name: equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: providedLiquidity Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
lnorm: u rnorm: 6
init
end
_______________

Name: providedLiquidity Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_235 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_235

Name: TMP_235 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_236(uint256) = maxFee_1 (c)- equilibriumFee_1
init
end
init
end
init
end
_______________

Name: equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_236 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_236

Name: TMP_236 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_237(uint256) = TMP_236 (c)* resultingLiquidity_1
testing mul...
init
end
init
end

Name: TMP_236 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: resultingLiquidity Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: resultingLiquidity Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_237 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_237

Name: TMP_237 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_238(uint256) = TMP_235 (c)+ TMP_237
init
end
init
end
init
end
_______________

Name: TMP_235 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_238 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_238

Name: TMP_238 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
denominator_1(uint256) := TMP_238(uint256)
asgn
init
end
_______________

Name: TMP_238 Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: denominator Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for denominator

Name: denominator Function: getTransferFee
Num: -982
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_239(bool) = denominator_1 == 0
[i]Type for TMP_239

Name: TMP_239 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: fee, Num: 1
Globalname: fee
End popogation
fee_1(uint256) := 0(uint256)
asgn
init
end
_______________

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef

Name: fee Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for fee

Name: fee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: fee, Num: 2
Globalname: fee
End popogation
TMP_240(uint256) = numerator_1 (c)/ denominator_1
init
end
init
end
lnorm: 6 rnorm: u
Source address: u
init
end
_______________

Name: PIC_194 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_240 Function: getTransferFee
Num: 
Den: 
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
init
end
init
end
lnorm: 6 rnorm: u
Source address: u
init
end
_______________

Name: PIC_195 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_240 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_240

Name: TMP_240 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
fee_2(uint256) := TMP_240(uint256)
asgn
init
end
_______________

Name: TMP_240 Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef

Name: fee Function: getTransferFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for fee

Name: fee Function: getTransferFee
Num: -1
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u



checkHashStatus
Finding type for tokenAddress(address ... )
prev address? -982
Head Addr: -982
    Norm: 6
    Set: {-982}
    Fin: NULL
Finding type for amount(uint256 ... )
Finding type for receiver(address ... )
prev address? -981
Head Addr: -981
    Norm: 0
    Set: {-981}
    Fin: NULL
Finding type for depositHash(bytes ... )
Param: 0
    num: []
    den: []
    norm: 6
    link: tokenAddress
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: []
    den: []
    norm: 0
    link: receiver
    fields: []
    fintype: -1
Param: 3
    num: []
    den: []
    norm: u
    link: None
    fields: []
    fintype: -1


tokenAddress_1(address) := ϕ(['tokenAddress_1'])
amount_1(uint256) := ϕ(['amount_1'])
receiver_1(address) := ϕ(['receiver_1'])
depositHash_1(bytes) := ϕ(['depositHash_1'])
processedHash_2(mapping(bytes32 => bool)) := ϕ(['processedHash_0', 'processedHash_2', 'processedHash_1'])
TMP_241(bytes32) = SOLIDITY_CALL keccak256(bytes)(depositHash_1)
TMP_242(bytes) = SOLIDITY_CALL abi.encode()(tokenAddress_1,amount_1,receiver_1,TMP_241)
TMP_243(bytes32) = SOLIDITY_CALL keccak256(bytes)(TMP_242)
hashSendTransaction_1(bytes32) := TMP_243(bytes32)
REF_66(bool) -> processedHash_2[hashSendTransaction_1]
status_1(bool) := REF_66(bool)
RETURN hashSendTransaction_1,status_1


Propogating parameters and globals to SSA variables...
End popogation
Source address: -982

Name: tokenAddress_1 Function: checkHashStatus
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
Phid
Source address: u
Name: amount, Num: 1
Globalname: amount

Name: amount_1 Function: checkHashStatus
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Source address: -981

Name: receiver_1 Function: checkHashStatus
Num: 
Den: 
Address: -981
Norm: 0
LF: receiver
Value: u
Fields: 
Finance Type: undef
Phid
Source address: u
Name: depositHash, Num: 1
Globalname: depositHash

Name: depositHash_1 Function: checkHashStatus
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: processedHash Function: checkHashStatus
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
tokenAddress_1(address) := ϕ(['tokenAddress_1'])
Phi
[i]Type for tokenAddress

Name: tokenAddress Function: checkHashStatus
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount_1'])
Phi

Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
init
end
_______________

Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount Function: checkHashStatus
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for amount

Name: amount Function: checkHashStatus
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
receiver_1(address) := ϕ(['receiver_1'])
Phi
[i]Type for receiver

Name: receiver Function: checkHashStatus
Num: 
Den: 
Address: -981
Norm: 0
LF: receiver
Value: u
Fields: 
Finance Type: undef
XXXX
depositHash_1(bytes) := ϕ(['depositHash_1'])
Phi

Name: depositHash_1 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for depositHash

Name: depositHash Function: checkHashStatus
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
processedHash_2(mapping(bytes32 => bool)) := ϕ(['processedHash_0', 'processedHash_2', 'processedHash_1'])
Phi
[i]Type for processedHash

Name: processedHash Function: checkHashStatus
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Source address: u
Name: depositHash, Num: 1
Globalname: depositHash
Name: hashSendTransaction, Num: 1
Globalname: hashSendTransaction
End popogation
TMP_241(bytes32) = SOLIDITY_CALL keccak256(bytes)(depositHash_1)
[i]Type for TMP_241

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_242(bytes) = SOLIDITY_CALL abi.encode()(tokenAddress_1,amount_1,receiver_1,TMP_241)
[i]Type for TMP_242

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_243(bytes32) = SOLIDITY_CALL keccak256(bytes)(TMP_242)
[i]Type for TMP_243

Name: TMP_243 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
hashSendTransaction_1(bytes32) := TMP_243(bytes32)
asgn
init
end
_______________

Name: TMP_243 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: hashSendTransaction Function: checkHashStatus
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for hashSendTransaction

Name: hashSendTransaction Function: checkHashStatus
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: hashSendTransaction, Num: 1
Globalname: hashSendTransaction
Name: status, Num: 1
Globalname: status
End popogation
REF_66(bool) -> processedHash_2[hashSendTransaction_1]
INDEX
[i]Type for REF_66

Name: REF_66 Function: checkHashStatus
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
status_1(bool) := REF_66(bool)
asgn
init
end
_______________

Name: REF_66 Function: checkHashStatus
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: status Function: checkHashStatus
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for status

Name: status Function: checkHashStatus
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: hashSendTransaction, Num: 1
Globalname: hashSendTransaction
End popogation
RETURN hashSendTransaction_1,status_1
RETURN
init
end

Name: hashSendTransaction Function: checkHashStatus
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
init
end

Name: status Function: checkHashStatus
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


tokenAddress_1(address) := ϕ(['tokenAddress_1'])
amount_1(uint256) := ϕ(['amount_1'])
receiver_1(address) := ϕ(['receiver_1'])
depositHash_1(bytes) := ϕ(['depositHash_1'])
processedHash_2(mapping(bytes32 => bool)) := ϕ(['processedHash_0', 'processedHash_2', 'processedHash_1'])
TMP_241(bytes32) = SOLIDITY_CALL keccak256(bytes)(depositHash_1)
TMP_242(bytes) = SOLIDITY_CALL abi.encode()(tokenAddress_1,amount_1,receiver_1,TMP_241)
TMP_243(bytes32) = SOLIDITY_CALL keccak256(bytes)(TMP_242)
hashSendTransaction_1(bytes32) := TMP_243(bytes32)
REF_66(bool) -> processedHash_2[hashSendTransaction_1]
status_1(bool) := REF_66(bool)
RETURN hashSendTransaction_1,status_1


Propogating parameters and globals to SSA variables...
End popogation
Source address: -982

Name: tokenAddress_1 Function: checkHashStatus
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
Phid
Source address: u
Name: amount, Num: 1
Globalname: amount

Name: amount_1 Function: checkHashStatus
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Source address: -981

Name: receiver_1 Function: checkHashStatus
Num: 
Den: 
Address: -981
Norm: 0
LF: receiver
Value: u
Fields: 
Finance Type: undef
Phid
Source address: u
Name: depositHash, Num: 1
Globalname: depositHash

Name: depositHash_1 Function: checkHashStatus
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: processedHash Function: checkHashStatus
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
tokenAddress_1(address) := ϕ(['tokenAddress_1'])
Phi
[i]Type for tokenAddress

Name: tokenAddress Function: checkHashStatus
Num: 
Den: 
Address: -982
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount_1'])
Phi

Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
init
end
_______________

Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount Function: checkHashStatus
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for amount

Name: amount Function: checkHashStatus
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
receiver_1(address) := ϕ(['receiver_1'])
Phi
[i]Type for receiver

Name: receiver Function: checkHashStatus
Num: 
Den: 
Address: -981
Norm: 0
LF: receiver
Value: u
Fields: 
Finance Type: undef
XXXX
depositHash_1(bytes) := ϕ(['depositHash_1'])
Phi

Name: depositHash_1 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for depositHash

Name: depositHash Function: checkHashStatus
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
processedHash_2(mapping(bytes32 => bool)) := ϕ(['processedHash_0', 'processedHash_2', 'processedHash_1'])
Phi
[i]Type for processedHash

Name: processedHash Function: checkHashStatus
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Source address: u
Name: depositHash, Num: 1
Globalname: depositHash
Name: hashSendTransaction, Num: 1
Globalname: hashSendTransaction
End popogation
TMP_241(bytes32) = SOLIDITY_CALL keccak256(bytes)(depositHash_1)
[i]Type for TMP_241

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_242(bytes) = SOLIDITY_CALL abi.encode()(tokenAddress_1,amount_1,receiver_1,TMP_241)
[i]Type for TMP_242

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_243(bytes32) = SOLIDITY_CALL keccak256(bytes)(TMP_242)
[i]Type for TMP_243

Name: TMP_243 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
hashSendTransaction_1(bytes32) := TMP_243(bytes32)
asgn
init
end
_______________

Name: TMP_243 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: hashSendTransaction Function: checkHashStatus
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for hashSendTransaction

Name: hashSendTransaction Function: checkHashStatus
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: hashSendTransaction, Num: 1
Globalname: hashSendTransaction
Name: status, Num: 1
Globalname: status
End popogation
REF_66(bool) -> processedHash_2[hashSendTransaction_1]
INDEX
[i]Type for REF_66

Name: REF_66 Function: checkHashStatus
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
status_1(bool) := REF_66(bool)
asgn
init
end
_______________

Name: REF_66 Function: checkHashStatus
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: status Function: checkHashStatus
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for status

Name: status Function: checkHashStatus
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: hashSendTransaction, Num: 1
Globalname: hashSendTransaction
End popogation
RETURN hashSendTransaction_1,status_1
RETURN
init
end

Name: hashSendTransaction Function: checkHashStatus
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
init
end

Name: status Function: checkHashStatus
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef



withdrawErc20GasFee
Finding type for tokenAddress(address ... )
prev address? u
Head Addr: -976
    Norm: 6
    Set: {-976}
    Fin: NULL
Param: 0
    num: []
    den: []
    norm: 6
    link: tokenAddress
    fields: []
    fintype: -1


NATIVE_19(address) := ϕ(['NATIVE_28', 'NATIVE_0', 'NATIVE_8', 'NATIVE_22', 'NATIVE_18', 'NATIVE_32'])
gasFeeAccumulatedByToken_12(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_0', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
gasFeeAccumulated_11(mapping(address => mapping(address => uint256))) := ϕ(['gasFeeAccumulated_0', 'gasFeeAccumulated_10', 'gasFeeAccumulated_16', 'gasFeeAccumulated_22'])
MODIFIER_CALL, LiquidityPool.onlyExecutor()()
MODIFIER_CALL, PausableUpgradeable.whenNotPaused()()
MODIFIER_CALL, ReentrancyGuardUpgradeable.nonReentrant()()
TMP_244(bool) = tokenAddress_1 != NATIVE_22
TMP_245(None) = SOLIDITY_CALL require(bool,string)(TMP_244,Can't withdraw native token fee)
REF_67(mapping(address => uint256)) -> gasFeeAccumulated_14[tokenAddress_1]
TMP_246(address) = INTERNAL_CALL, LiquidityPool._msgSender()()
REF_68(uint256) -> REF_67[TMP_246]
_gasFeeAccumulated_1(uint256) := REF_68(uint256)
TMP_247(bool) = _gasFeeAccumulated_1 != 0
TMP_248(None) = SOLIDITY_CALL require(bool,string)(TMP_247,Gas Fee earned is 0)
REF_69(uint256) -> gasFeeAccumulatedByToken_16[tokenAddress_1]
REF_70(uint256) -> gasFeeAccumulatedByToken_16[tokenAddress_1]
TMP_249(uint256) = REF_70 (c)- _gasFeeAccumulated_1
gasFeeAccumulatedByToken_17(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_16'])
REF_69 (->gasFeeAccumulatedByToken_17) := TMP_249(uint256)
REF_71(mapping(address => uint256)) -> gasFeeAccumulated_15[tokenAddress_1]
TMP_250(address) = INTERNAL_CALL, LiquidityPool._msgSender()()
REF_72(uint256) -> REF_71[TMP_250]
gasFeeAccumulated_16(mapping(address => mapping(address => uint256))) := ϕ(['gasFeeAccumulated_15'])
REF_72 (->gasFeeAccumulated_16) := 0(uint256)
TMP_251 = CONVERT tokenAddress_1 to IERC20Upgradeable
TMP_252(address) = INTERNAL_CALL, LiquidityPool._msgSender()()
LIBRARY_CALL, dest:SafeERC20Upgradeable, function:SafeERC20Upgradeable.safeTransfer(IERC20Upgradeable,address,uint256), arguments:['TMP_251', 'TMP_252', '_gasFeeAccumulated_1'] 
TMP_254(address) = INTERNAL_CALL, LiquidityPool._msgSender()()
Emit GasFeeWithdraw(tokenAddress_1,TMP_254,_gasFeeAccumulated_1)


Propogating parameters and globals to SSA variables...
End popogation
Name: NATIVE, Num: 19
Globalname: NATIVE
global...

Name: PIC_13 Function: None
Num: -1
Den: -1
Address: 3
Norm: 6
LF: NATIVE
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: None Function: None
Num: -1
Den: -1
Address: 3
Norm: 6
LF: NATIVE
Value: u
Fields: 
Finance Type: undef
Phid
Name: gasFeeAccumulatedByToken, Num: 12
Globalname: gasFeeAccumulatedByToken
global...

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: gasFeeAccumulated, Num: 11
Globalname: gasFeeAccumulated
global...

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
NATIVE_19(address) := ϕ(['NATIVE_28', 'NATIVE_0', 'NATIVE_8', 'NATIVE_22', 'NATIVE_18', 'NATIVE_32'])
Phi
[i]Type for NATIVE

Name: NATIVE Function: withdrawErc20GasFee
Num: -1
Den: -1
Address: 3
Norm: 6
LF: NATIVE
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_12(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_0', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: withdrawErc20GasFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulated_11(mapping(address => mapping(address => uint256))) := ϕ(['gasFeeAccumulated_0', 'gasFeeAccumulated_10', 'gasFeeAccumulated_16', 'gasFeeAccumulated_22'])
Phi
[i]Type for gasFeeAccumulated

Name: gasFeeAccumulated Function: withdrawErc20GasFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, LiquidityPool.onlyExecutor()()
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, PausableUpgradeable.whenNotPaused()()
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, ReentrancyGuardUpgradeable.nonReentrant()()
Propogating parameters and globals to SSA variables...
Name: NATIVE, Num: 22
Globalname: NATIVE
global...

Name: PIC_13 Function: None
Num: -1
Den: -1
Address: 3
Norm: 6
LF: NATIVE
Value: u
Fields: 
Finance Type: undef
Source address: 3
Source address: -976
End popogation
TMP_244(bool) = tokenAddress_1 != NATIVE_22
[i]Type for TMP_244

Name: TMP_244 Function: withdrawErc20GasFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_245(None) = SOLIDITY_CALL require(bool,string)(TMP_244,Can't withdraw native token fee)
[i]Type for TMP_245

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: gasFeeAccumulated, Num: 14
Globalname: gasFeeAccumulated
global...

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Name: _gasFeeAccumulated, Num: 1
Globalname: _gasFeeAccumulated
End popogation
REF_67(mapping(address => uint256)) -> gasFeeAccumulated_14[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_67

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_246(address) = INTERNAL_CALL, LiquidityPool._msgSender()()
init
end
_______________

Name: PIC_33 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_246 Function: withdrawErc20GasFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_246

Name: TMP_246 Function: withdrawErc20GasFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_68(uint256) -> REF_67[TMP_246]
INDEX
Source address: u
[i]Type for REF_68

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
_gasFeeAccumulated_1(uint256) := REF_68(uint256)
asgn
init
end
_______________

Name: REF_68 Function: withdrawErc20GasFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _gasFeeAccumulated Function: withdrawErc20GasFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for _gasFeeAccumulated

Name: _gasFeeAccumulated Function: withdrawErc20GasFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_247(bool) = _gasFeeAccumulated_1 != 0
[i]Type for TMP_247

Name: TMP_247 Function: withdrawErc20GasFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_248(None) = SOLIDITY_CALL require(bool,string)(TMP_247,Gas Fee earned is 0)
[i]Type for TMP_248

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: gasFeeAccumulatedByToken, Num: 16
Globalname: gasFeeAccumulatedByToken
global...

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Name: gasFeeAccumulatedByToken, Num: 17
Globalname: gasFeeAccumulatedByToken
global...

Name: gasFeeAccumulatedByToken Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
End popogation

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
REF_69(uint256) -> gasFeeAccumulatedByToken_16[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_69

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_70(uint256) -> gasFeeAccumulatedByToken_16[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_70

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_249(uint256) = REF_70 (c)- _gasFeeAccumulated_1
init
end
init
end
init
end
_______________

Name: _gasFeeAccumulated Function: withdrawErc20GasFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_249 Function: withdrawErc20GasFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_249

Name: TMP_249 Function: withdrawErc20GasFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_17(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_16'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: withdrawErc20GasFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_69 (->gasFeeAccumulatedByToken_17) := TMP_249(uint256)
asgn
init
end
_______________

Name: TMP_249 Function: withdrawErc20GasFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: REF_69 Function: withdrawErc20GasFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_69

Name: REF_69 Function: withdrawErc20GasFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
Source address: u
Propogating parameters and globals to SSA variables...
Name: gasFeeAccumulated, Num: 16
Globalname: gasFeeAccumulated
global...

Name: gasFeeAccumulated Function: getAmountToTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
End popogation

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
REF_71(mapping(address => uint256)) -> gasFeeAccumulated_15[tokenAddress_1]
INDEX
Source address: -976
[i]Type for REF_71

Name: None Function: None
Num: 
Den: 
Address: -976
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_250(address) = INTERNAL_CALL, LiquidityPool._msgSender()()
init
end
_______________

Name: PIC_33 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_250 Function: withdrawErc20GasFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_250

Name: TMP_250 Function: withdrawErc20GasFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_72(uint256) -> REF_71[TMP_250]
INDEX
Source address: -976
[i]Type for REF_72

Name: None Function: None
Num: 
Den: 
Address: -976
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
gasFeeAccumulated_16(mapping(address => mapping(address => uint256))) := ϕ(['gasFeeAccumulated_15'])
Phi
[i]Type for gasFeeAccumulated

Name: gasFeeAccumulated Function: withdrawErc20GasFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_72 (->gasFeeAccumulated_16) := 0(uint256)
asgn
init
end
_______________

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef

Name: REF_72 Function: withdrawErc20GasFee
Num: 
Den: 
Address: -976
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for REF_72

Name: REF_72 Function: withdrawErc20GasFee
Num: 
Den: 
Address: -976
Norm: 6
LF: tokenAddress
Value: 0
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
Source address: u
Propogating parameters and globals to SSA variables...
End popogation
TMP_251 = CONVERT tokenAddress_1 to IERC20Upgradeable
Converting tokenAddress_1

Name: tokenAddress_1 Function: None
Num: 
Den: 
Address: -976
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
init
end
_______________

Name: tokenAddress Function: None
Num: 
Den: 
Address: -976
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef

Name: TMP_251 Function: withdrawErc20GasFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: -976
ERC20Upgradeable
[i]Type for TMP_251

Name: TMP_251 Function: withdrawErc20GasFee
Num: 
Den: 
Address: -976
Norm: 6
LF: ERC20Upgradeable
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_252(address) = INTERNAL_CALL, LiquidityPool._msgSender()()
init
end
_______________

Name: PIC_33 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_252 Function: withdrawErc20GasFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_252

Name: TMP_252 Function: withdrawErc20GasFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
LIBRARY_CALL, dest:SafeERC20Upgradeable, function:SafeERC20Upgradeable.safeTransfer(IERC20Upgradeable,address,uint256), arguments:['TMP_251', 'TMP_252', '_gasFeeAccumulated_1'] 
Propogating parameters and globals to SSA variables...
End popogation
TMP_254(address) = INTERNAL_CALL, LiquidityPool._msgSender()()
init
end
_______________

Name: PIC_33 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_254 Function: withdrawErc20GasFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_254

Name: TMP_254 Function: withdrawErc20GasFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX


NATIVE_19(address) := ϕ(['NATIVE_28', 'NATIVE_0', 'NATIVE_8', 'NATIVE_22', 'NATIVE_18', 'NATIVE_32'])
gasFeeAccumulatedByToken_12(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_0', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
gasFeeAccumulated_11(mapping(address => mapping(address => uint256))) := ϕ(['gasFeeAccumulated_0', 'gasFeeAccumulated_10', 'gasFeeAccumulated_16', 'gasFeeAccumulated_22'])
MODIFIER_CALL, LiquidityPool.onlyExecutor()()
MODIFIER_CALL, PausableUpgradeable.whenNotPaused()()
MODIFIER_CALL, ReentrancyGuardUpgradeable.nonReentrant()()
TMP_244(bool) = tokenAddress_1 != NATIVE_22
TMP_245(None) = SOLIDITY_CALL require(bool,string)(TMP_244,Can't withdraw native token fee)
REF_67(mapping(address => uint256)) -> gasFeeAccumulated_14[tokenAddress_1]
TMP_246(address) = INTERNAL_CALL, LiquidityPool._msgSender()()
REF_68(uint256) -> REF_67[TMP_246]
_gasFeeAccumulated_1(uint256) := REF_68(uint256)
TMP_247(bool) = _gasFeeAccumulated_1 != 0
TMP_248(None) = SOLIDITY_CALL require(bool,string)(TMP_247,Gas Fee earned is 0)
REF_69(uint256) -> gasFeeAccumulatedByToken_16[tokenAddress_1]
REF_70(uint256) -> gasFeeAccumulatedByToken_16[tokenAddress_1]
TMP_249(uint256) = REF_70 (c)- _gasFeeAccumulated_1
gasFeeAccumulatedByToken_17(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_16'])
REF_69 (->gasFeeAccumulatedByToken_17) := TMP_249(uint256)
REF_71(mapping(address => uint256)) -> gasFeeAccumulated_15[tokenAddress_1]
TMP_250(address) = INTERNAL_CALL, LiquidityPool._msgSender()()
REF_72(uint256) -> REF_71[TMP_250]
gasFeeAccumulated_16(mapping(address => mapping(address => uint256))) := ϕ(['gasFeeAccumulated_15'])
REF_72 (->gasFeeAccumulated_16) := 0(uint256)
TMP_251 = CONVERT tokenAddress_1 to IERC20Upgradeable
TMP_252(address) = INTERNAL_CALL, LiquidityPool._msgSender()()
LIBRARY_CALL, dest:SafeERC20Upgradeable, function:SafeERC20Upgradeable.safeTransfer(IERC20Upgradeable,address,uint256), arguments:['TMP_251', 'TMP_252', '_gasFeeAccumulated_1'] 
TMP_254(address) = INTERNAL_CALL, LiquidityPool._msgSender()()
Emit GasFeeWithdraw(tokenAddress_1,TMP_254,_gasFeeAccumulated_1)


Propogating parameters and globals to SSA variables...
End popogation

Name: NATIVE Function: withdrawErc20GasFee
Num: -1
Den: -1
Address: 3
Norm: 6
LF: NATIVE
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: withdrawErc20GasFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulated Function: withdrawErc20GasFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
NATIVE_19(address) := ϕ(['NATIVE_28', 'NATIVE_0', 'NATIVE_8', 'NATIVE_22', 'NATIVE_18', 'NATIVE_32'])
Phi
[i]Type for NATIVE

Name: NATIVE Function: withdrawErc20GasFee
Num: -1
Den: -1
Address: 3
Norm: 6
LF: NATIVE
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_12(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_0', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: withdrawErc20GasFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulated_11(mapping(address => mapping(address => uint256))) := ϕ(['gasFeeAccumulated_0', 'gasFeeAccumulated_10', 'gasFeeAccumulated_16', 'gasFeeAccumulated_22'])
Phi
[i]Type for gasFeeAccumulated

Name: gasFeeAccumulated Function: withdrawErc20GasFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, LiquidityPool.onlyExecutor()()
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, PausableUpgradeable.whenNotPaused()()
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, ReentrancyGuardUpgradeable.nonReentrant()()
Propogating parameters and globals to SSA variables...
End popogation
TMP_244(bool) = tokenAddress_1 != NATIVE_22
[i]Type for TMP_244

Name: TMP_244 Function: withdrawErc20GasFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_245(None) = SOLIDITY_CALL require(bool,string)(TMP_244,Can't withdraw native token fee)
[i]Type for TMP_245

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _gasFeeAccumulated, Num: 1
Globalname: _gasFeeAccumulated
End popogation
REF_67(mapping(address => uint256)) -> gasFeeAccumulated_14[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_67

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_246(address) = INTERNAL_CALL, LiquidityPool._msgSender()()
init
end
_______________

Name: PIC_33 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_246 Function: withdrawErc20GasFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_246

Name: TMP_246 Function: withdrawErc20GasFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_68(uint256) -> REF_67[TMP_246]
INDEX
Source address: u
[i]Type for REF_68

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
_gasFeeAccumulated_1(uint256) := REF_68(uint256)
asgn
init
end
_______________

Name: REF_68 Function: withdrawErc20GasFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _gasFeeAccumulated Function: withdrawErc20GasFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for _gasFeeAccumulated

Name: _gasFeeAccumulated Function: withdrawErc20GasFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_247(bool) = _gasFeeAccumulated_1 != 0
[i]Type for TMP_247

Name: TMP_247 Function: withdrawErc20GasFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_248(None) = SOLIDITY_CALL require(bool,string)(TMP_247,Gas Fee earned is 0)
[i]Type for TMP_248

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation

Name: gasFeeAccumulatedByToken Function: withdrawErc20GasFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
REF_69(uint256) -> gasFeeAccumulatedByToken_16[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_69

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_70(uint256) -> gasFeeAccumulatedByToken_16[tokenAddress_1]
INDEX
Source address: u
[i]Type for REF_70

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_249(uint256) = REF_70 (c)- _gasFeeAccumulated_1
init
end
init
end
init
end
_______________

Name: _gasFeeAccumulated Function: withdrawErc20GasFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_249 Function: withdrawErc20GasFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_249

Name: TMP_249 Function: withdrawErc20GasFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_17(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_16'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: withdrawErc20GasFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_69 (->gasFeeAccumulatedByToken_17) := TMP_249(uint256)
asgn
init
end
_______________

Name: TMP_249 Function: withdrawErc20GasFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: REF_69 Function: withdrawErc20GasFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_69

Name: REF_69 Function: withdrawErc20GasFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
Source address: u
Propogating parameters and globals to SSA variables...
End popogation

Name: gasFeeAccumulated Function: withdrawErc20GasFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
REF_71(mapping(address => uint256)) -> gasFeeAccumulated_15[tokenAddress_1]
INDEX
Source address: -976
[i]Type for REF_71

Name: None Function: None
Num: 
Den: 
Address: -976
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_250(address) = INTERNAL_CALL, LiquidityPool._msgSender()()
init
end
_______________

Name: PIC_33 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_250 Function: withdrawErc20GasFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_250

Name: TMP_250 Function: withdrawErc20GasFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_72(uint256) -> REF_71[TMP_250]
INDEX
Source address: -976
[i]Type for REF_72

Name: None Function: None
Num: 
Den: 
Address: -976
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
gasFeeAccumulated_16(mapping(address => mapping(address => uint256))) := ϕ(['gasFeeAccumulated_15'])
Phi
[i]Type for gasFeeAccumulated

Name: gasFeeAccumulated Function: withdrawErc20GasFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_72 (->gasFeeAccumulated_16) := 0(uint256)
asgn
init
end
_______________

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef

Name: REF_72 Function: withdrawErc20GasFee
Num: 
Den: 
Address: -976
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for REF_72

Name: REF_72 Function: withdrawErc20GasFee
Num: 
Den: 
Address: -976
Norm: 6
LF: tokenAddress
Value: 0
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
Source address: u
Propogating parameters and globals to SSA variables...
End popogation
TMP_251 = CONVERT tokenAddress_1 to IERC20Upgradeable
Converting tokenAddress_1

Name: tokenAddress Function: None
Num: 
Den: 
Address: -976
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef
init
end
_______________

Name: tokenAddress Function: None
Num: 
Den: 
Address: -976
Norm: 6
LF: tokenAddress
Value: u
Fields: 
Finance Type: undef

Name: TMP_251 Function: withdrawErc20GasFee
Num: 
Den: 
Address: u
Norm: u
LF: ERC20Upgradeable
Value: u
Fields: 
Finance Type: undef
Source address: -976
ERC20Upgradeable
[i]Type for TMP_251

Name: TMP_251 Function: withdrawErc20GasFee
Num: 
Den: 
Address: -976
Norm: 6
LF: ERC20Upgradeable
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_252(address) = INTERNAL_CALL, LiquidityPool._msgSender()()
init
end
_______________

Name: PIC_33 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_252 Function: withdrawErc20GasFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_252

Name: TMP_252 Function: withdrawErc20GasFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
LIBRARY_CALL, dest:SafeERC20Upgradeable, function:SafeERC20Upgradeable.safeTransfer(IERC20Upgradeable,address,uint256), arguments:['TMP_251', 'TMP_252', '_gasFeeAccumulated_1'] 
Propogating parameters and globals to SSA variables...
End popogation
TMP_254(address) = INTERNAL_CALL, LiquidityPool._msgSender()()
init
end
_______________

Name: PIC_33 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_254 Function: withdrawErc20GasFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_254

Name: TMP_254 Function: withdrawErc20GasFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX



withdrawNativeGasFee


NATIVE_23(address) := ϕ(['NATIVE_28', 'NATIVE_0', 'NATIVE_8', 'NATIVE_22', 'NATIVE_18', 'NATIVE_32'])
gasFeeAccumulatedByToken_18(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_0', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
gasFeeAccumulated_17(mapping(address => mapping(address => uint256))) := ϕ(['gasFeeAccumulated_0', 'gasFeeAccumulated_10', 'gasFeeAccumulated_16', 'gasFeeAccumulated_22'])
MODIFIER_CALL, LiquidityPool.onlyExecutor()()
MODIFIER_CALL, PausableUpgradeable.whenNotPaused()()
MODIFIER_CALL, ReentrancyGuardUpgradeable.nonReentrant()()
REF_74(mapping(address => uint256)) -> gasFeeAccumulated_20[NATIVE_26]
TMP_259(address) = INTERNAL_CALL, LiquidityPool._msgSender()()
REF_75(uint256) -> REF_74[TMP_259]
_gasFeeAccumulated_1(uint256) := REF_75(uint256)
TMP_260(bool) = _gasFeeAccumulated_1 != 0
TMP_261(None) = SOLIDITY_CALL require(bool,string)(TMP_260,Gas Fee earned is 0)
REF_76(uint256) -> gasFeeAccumulatedByToken_22[NATIVE_27]
REF_77(uint256) -> gasFeeAccumulatedByToken_22[NATIVE_27]
TMP_262(uint256) = REF_77 (c)- _gasFeeAccumulated_1
gasFeeAccumulatedByToken_23(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_22'])
REF_76 (->gasFeeAccumulatedByToken_23) := TMP_262(uint256)
REF_78(mapping(address => uint256)) -> gasFeeAccumulated_21[NATIVE_27]
TMP_263(address) = INTERNAL_CALL, LiquidityPool._msgSender()()
REF_79(uint256) -> REF_78[TMP_263]
gasFeeAccumulated_22(mapping(address => mapping(address => uint256))) := ϕ(['gasFeeAccumulated_21'])
REF_79 (->gasFeeAccumulated_22) := 0(uint256)
TMP_264(address) = INTERNAL_CALL, LiquidityPool._msgSender()()
TMP_265 = CONVERT TMP_264 to address
TUPLE_2(bool,bytes) = LOW_LEVEL_CALL, dest:TMP_265, function:call, arguments:[''] value:_gasFeeAccumulated_1 
success_1(bool)= UNPACK TUPLE_2 index: 0 
TMP_266(None) = SOLIDITY_CALL require(bool,string)(success_1,Native Transfer Failed)
TMP_267 = CONVERT this to address
TMP_268(address) = INTERNAL_CALL, LiquidityPool._msgSender()()
Emit GasFeeWithdraw(TMP_267,TMP_268,_gasFeeAccumulated_1)


Propogating parameters and globals to SSA variables...
End popogation
Name: NATIVE, Num: 23
Globalname: NATIVE
global...

Name: PIC_13 Function: None
Num: -1
Den: -1
Address: 3
Norm: 6
LF: NATIVE
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: None Function: None
Num: -1
Den: -1
Address: 3
Norm: 6
LF: NATIVE
Value: u
Fields: 
Finance Type: undef
Phid
Name: gasFeeAccumulatedByToken, Num: 18
Globalname: gasFeeAccumulatedByToken
global...

Name: gasFeeAccumulatedByToken Function: withdrawErc20GasFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: gasFeeAccumulated, Num: 17
Globalname: gasFeeAccumulated
global...

Name: gasFeeAccumulated Function: withdrawErc20GasFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
NATIVE_23(address) := ϕ(['NATIVE_28', 'NATIVE_0', 'NATIVE_8', 'NATIVE_22', 'NATIVE_18', 'NATIVE_32'])
Phi
[i]Type for NATIVE

Name: NATIVE Function: withdrawNativeGasFee
Num: -1
Den: -1
Address: 3
Norm: 6
LF: NATIVE
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_18(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_0', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: withdrawNativeGasFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulated_17(mapping(address => mapping(address => uint256))) := ϕ(['gasFeeAccumulated_0', 'gasFeeAccumulated_10', 'gasFeeAccumulated_16', 'gasFeeAccumulated_22'])
Phi
[i]Type for gasFeeAccumulated

Name: gasFeeAccumulated Function: withdrawNativeGasFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, LiquidityPool.onlyExecutor()()
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, PausableUpgradeable.whenNotPaused()()
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, ReentrancyGuardUpgradeable.nonReentrant()()
Propogating parameters and globals to SSA variables...
Name: gasFeeAccumulated, Num: 20
Globalname: gasFeeAccumulated
global...

Name: gasFeeAccumulated Function: withdrawErc20GasFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Name: NATIVE, Num: 26
Globalname: NATIVE
global...

Name: PIC_13 Function: None
Num: -1
Den: -1
Address: 3
Norm: 6
LF: NATIVE
Value: u
Fields: 
Finance Type: undef
Source address: 3
Name: _gasFeeAccumulated, Num: 1
Globalname: _gasFeeAccumulated
End popogation
REF_74(mapping(address => uint256)) -> gasFeeAccumulated_20[NATIVE_26]
INDEX
Source address: u
[i]Type for REF_74

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_259(address) = INTERNAL_CALL, LiquidityPool._msgSender()()
init
end
_______________

Name: PIC_33 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_259 Function: withdrawNativeGasFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_259

Name: TMP_259 Function: withdrawNativeGasFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_75(uint256) -> REF_74[TMP_259]
INDEX
Source address: u
[i]Type for REF_75

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
_gasFeeAccumulated_1(uint256) := REF_75(uint256)
asgn
init
end
_______________

Name: REF_75 Function: withdrawNativeGasFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _gasFeeAccumulated Function: withdrawNativeGasFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for _gasFeeAccumulated

Name: _gasFeeAccumulated Function: withdrawNativeGasFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_260(bool) = _gasFeeAccumulated_1 != 0
[i]Type for TMP_260

Name: TMP_260 Function: withdrawNativeGasFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_261(None) = SOLIDITY_CALL require(bool,string)(TMP_260,Gas Fee earned is 0)
[i]Type for TMP_261

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: NATIVE, Num: 27
Globalname: NATIVE
global...

Name: PIC_13 Function: None
Num: -1
Den: -1
Address: 3
Norm: 6
LF: NATIVE
Value: u
Fields: 
Finance Type: undef
Source address: 3
Name: gasFeeAccumulatedByToken, Num: 22
Globalname: gasFeeAccumulatedByToken
global...

Name: gasFeeAccumulatedByToken Function: withdrawErc20GasFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Name: gasFeeAccumulatedByToken, Num: 23
Globalname: gasFeeAccumulatedByToken
global...

Name: gasFeeAccumulatedByToken Function: withdrawErc20GasFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
End popogation

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
REF_76(uint256) -> gasFeeAccumulatedByToken_22[NATIVE_27]
INDEX
Source address: u
[i]Type for REF_76

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_77(uint256) -> gasFeeAccumulatedByToken_22[NATIVE_27]
INDEX
Source address: u
[i]Type for REF_77

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_262(uint256) = REF_77 (c)- _gasFeeAccumulated_1
init
end
init
end
init
end
_______________

Name: _gasFeeAccumulated Function: withdrawNativeGasFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_262 Function: withdrawNativeGasFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_262

Name: TMP_262 Function: withdrawNativeGasFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_23(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_22'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: withdrawNativeGasFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_76 (->gasFeeAccumulatedByToken_23) := TMP_262(uint256)
asgn
init
end
_______________

Name: TMP_262 Function: withdrawNativeGasFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: REF_76 Function: withdrawNativeGasFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_76

Name: REF_76 Function: withdrawNativeGasFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
Source address: u
Propogating parameters and globals to SSA variables...
Name: gasFeeAccumulated, Num: 22
Globalname: gasFeeAccumulated
global...

Name: gasFeeAccumulated Function: withdrawErc20GasFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
End popogation

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
REF_78(mapping(address => uint256)) -> gasFeeAccumulated_21[NATIVE_27]
INDEX
[i]Type for REF_78

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_263(address) = INTERNAL_CALL, LiquidityPool._msgSender()()
init
end
_______________

Name: PIC_33 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_263 Function: withdrawNativeGasFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_263

Name: TMP_263 Function: withdrawNativeGasFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_79(uint256) -> REF_78[TMP_263]
INDEX
Source address: u
[i]Type for REF_79

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
gasFeeAccumulated_22(mapping(address => mapping(address => uint256))) := ϕ(['gasFeeAccumulated_21'])
Phi
[i]Type for gasFeeAccumulated

Name: gasFeeAccumulated Function: withdrawNativeGasFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_79 (->gasFeeAccumulated_22) := 0(uint256)
asgn
init
end
_______________

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef

Name: REF_79 Function: withdrawNativeGasFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_79

Name: REF_79 Function: withdrawNativeGasFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
Source address: u
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: success, Num: 1
Globalname: success
End popogation
TMP_264(address) = INTERNAL_CALL, LiquidityPool._msgSender()()
init
end
_______________

Name: PIC_33 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_264 Function: withdrawNativeGasFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_264

Name: TMP_264 Function: withdrawNativeGasFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_265 = CONVERT TMP_264 to address
Converting TMP_264

Name: TMP_264 Function: withdrawNativeGasFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
_______________

Name: TMP_264 Function: withdrawNativeGasFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_265 Function: withdrawNativeGasFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
UNKNOWN
[i]Type for TMP_265

Name: TMP_265 Function: withdrawNativeGasFee
Num: -1
Den: -1
Address: u
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_2(bool,bytes) = LOW_LEVEL_CALL, dest:TMP_265, function:call, arguments:[''] value:_gasFeeAccumulated_1 
[i]Type for TUPLE_2

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
success_1(bool)= UNPACK TUPLE_2 index: 0 
Finding type for success(bool ... )
[i]Type for success

Name: success Function: withdrawNativeGasFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_266(None) = SOLIDITY_CALL require(bool,string)(success_1,Native Transfer Failed)
[i]Type for TMP_266

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_267 = CONVERT this to address
Converting this
5
[i]Type for TMP_267

Name: TMP_267 Function: withdrawNativeGasFee
Num: -1
Den: -1
Address: 5
Norm: u
LF: LiquidityPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_268(address) = INTERNAL_CALL, LiquidityPool._msgSender()()
init
end
_______________

Name: PIC_33 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_268 Function: withdrawNativeGasFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_268

Name: TMP_268 Function: withdrawNativeGasFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX


NATIVE_23(address) := ϕ(['NATIVE_28', 'NATIVE_0', 'NATIVE_8', 'NATIVE_22', 'NATIVE_18', 'NATIVE_32'])
gasFeeAccumulatedByToken_18(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_0', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
gasFeeAccumulated_17(mapping(address => mapping(address => uint256))) := ϕ(['gasFeeAccumulated_0', 'gasFeeAccumulated_10', 'gasFeeAccumulated_16', 'gasFeeAccumulated_22'])
MODIFIER_CALL, LiquidityPool.onlyExecutor()()
MODIFIER_CALL, PausableUpgradeable.whenNotPaused()()
MODIFIER_CALL, ReentrancyGuardUpgradeable.nonReentrant()()
REF_74(mapping(address => uint256)) -> gasFeeAccumulated_20[NATIVE_26]
TMP_259(address) = INTERNAL_CALL, LiquidityPool._msgSender()()
REF_75(uint256) -> REF_74[TMP_259]
_gasFeeAccumulated_1(uint256) := REF_75(uint256)
TMP_260(bool) = _gasFeeAccumulated_1 != 0
TMP_261(None) = SOLIDITY_CALL require(bool,string)(TMP_260,Gas Fee earned is 0)
REF_76(uint256) -> gasFeeAccumulatedByToken_22[NATIVE_27]
REF_77(uint256) -> gasFeeAccumulatedByToken_22[NATIVE_27]
TMP_262(uint256) = REF_77 (c)- _gasFeeAccumulated_1
gasFeeAccumulatedByToken_23(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_22'])
REF_76 (->gasFeeAccumulatedByToken_23) := TMP_262(uint256)
REF_78(mapping(address => uint256)) -> gasFeeAccumulated_21[NATIVE_27]
TMP_263(address) = INTERNAL_CALL, LiquidityPool._msgSender()()
REF_79(uint256) -> REF_78[TMP_263]
gasFeeAccumulated_22(mapping(address => mapping(address => uint256))) := ϕ(['gasFeeAccumulated_21'])
REF_79 (->gasFeeAccumulated_22) := 0(uint256)
TMP_264(address) = INTERNAL_CALL, LiquidityPool._msgSender()()
TMP_265 = CONVERT TMP_264 to address
TUPLE_2(bool,bytes) = LOW_LEVEL_CALL, dest:TMP_265, function:call, arguments:[''] value:_gasFeeAccumulated_1 
success_1(bool)= UNPACK TUPLE_2 index: 0 
TMP_266(None) = SOLIDITY_CALL require(bool,string)(success_1,Native Transfer Failed)
TMP_267 = CONVERT this to address
TMP_268(address) = INTERNAL_CALL, LiquidityPool._msgSender()()
Emit GasFeeWithdraw(TMP_267,TMP_268,_gasFeeAccumulated_1)


Propogating parameters and globals to SSA variables...
End popogation

Name: NATIVE Function: withdrawNativeGasFee
Num: -1
Den: -1
Address: 3
Norm: 6
LF: NATIVE
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulatedByToken Function: withdrawNativeGasFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: gasFeeAccumulated Function: withdrawNativeGasFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
NATIVE_23(address) := ϕ(['NATIVE_28', 'NATIVE_0', 'NATIVE_8', 'NATIVE_22', 'NATIVE_18', 'NATIVE_32'])
Phi
[i]Type for NATIVE

Name: NATIVE Function: withdrawNativeGasFee
Num: -1
Den: -1
Address: 3
Norm: 6
LF: NATIVE
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_18(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_0', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_23'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: withdrawNativeGasFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulated_17(mapping(address => mapping(address => uint256))) := ϕ(['gasFeeAccumulated_0', 'gasFeeAccumulated_10', 'gasFeeAccumulated_16', 'gasFeeAccumulated_22'])
Phi
[i]Type for gasFeeAccumulated

Name: gasFeeAccumulated Function: withdrawNativeGasFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, LiquidityPool.onlyExecutor()()
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, PausableUpgradeable.whenNotPaused()()
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, ReentrancyGuardUpgradeable.nonReentrant()()
Propogating parameters and globals to SSA variables...
Name: _gasFeeAccumulated, Num: 1
Globalname: _gasFeeAccumulated
End popogation
REF_74(mapping(address => uint256)) -> gasFeeAccumulated_20[NATIVE_26]
INDEX
Source address: u
[i]Type for REF_74

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_259(address) = INTERNAL_CALL, LiquidityPool._msgSender()()
init
end
_______________

Name: PIC_33 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_259 Function: withdrawNativeGasFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_259

Name: TMP_259 Function: withdrawNativeGasFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_75(uint256) -> REF_74[TMP_259]
INDEX
Source address: u
[i]Type for REF_75

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
_gasFeeAccumulated_1(uint256) := REF_75(uint256)
asgn
init
end
_______________

Name: REF_75 Function: withdrawNativeGasFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _gasFeeAccumulated Function: withdrawNativeGasFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for _gasFeeAccumulated

Name: _gasFeeAccumulated Function: withdrawNativeGasFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_260(bool) = _gasFeeAccumulated_1 != 0
[i]Type for TMP_260

Name: TMP_260 Function: withdrawNativeGasFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_261(None) = SOLIDITY_CALL require(bool,string)(TMP_260,Gas Fee earned is 0)
[i]Type for TMP_261

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation

Name: gasFeeAccumulatedByToken Function: withdrawNativeGasFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
REF_76(uint256) -> gasFeeAccumulatedByToken_22[NATIVE_27]
INDEX
Source address: u
[i]Type for REF_76

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_77(uint256) -> gasFeeAccumulatedByToken_22[NATIVE_27]
INDEX
Source address: u
[i]Type for REF_77

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_262(uint256) = REF_77 (c)- _gasFeeAccumulated_1
init
end
init
end
init
end
_______________

Name: _gasFeeAccumulated Function: withdrawNativeGasFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_262 Function: withdrawNativeGasFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_262

Name: TMP_262 Function: withdrawNativeGasFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
gasFeeAccumulatedByToken_23(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_22'])
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: withdrawNativeGasFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_76 (->gasFeeAccumulatedByToken_23) := TMP_262(uint256)
asgn
init
end
_______________

Name: TMP_262 Function: withdrawNativeGasFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: REF_76 Function: withdrawNativeGasFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_76

Name: REF_76 Function: withdrawNativeGasFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
Source address: u
Propogating parameters and globals to SSA variables...
End popogation

Name: gasFeeAccumulated Function: withdrawNativeGasFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
REF_78(mapping(address => uint256)) -> gasFeeAccumulated_21[NATIVE_27]
INDEX
[i]Type for REF_78

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_263(address) = INTERNAL_CALL, LiquidityPool._msgSender()()
init
end
_______________

Name: PIC_33 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_263 Function: withdrawNativeGasFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_263

Name: TMP_263 Function: withdrawNativeGasFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_79(uint256) -> REF_78[TMP_263]
INDEX
Source address: u
[i]Type for REF_79

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
gasFeeAccumulated_22(mapping(address => mapping(address => uint256))) := ϕ(['gasFeeAccumulated_21'])
Phi
[i]Type for gasFeeAccumulated

Name: gasFeeAccumulated Function: withdrawNativeGasFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_79 (->gasFeeAccumulated_22) := 0(uint256)
asgn
init
end
_______________

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef

Name: REF_79 Function: withdrawNativeGasFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_79

Name: REF_79 Function: withdrawNativeGasFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
Source address: u
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: success, Num: 1
Globalname: success
End popogation
TMP_264(address) = INTERNAL_CALL, LiquidityPool._msgSender()()
init
end
_______________

Name: PIC_33 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_264 Function: withdrawNativeGasFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_264

Name: TMP_264 Function: withdrawNativeGasFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_265 = CONVERT TMP_264 to address
Converting TMP_264

Name: TMP_264 Function: withdrawNativeGasFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
_______________

Name: TMP_264 Function: withdrawNativeGasFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_265 Function: withdrawNativeGasFee
Num: 
Den: 
Address: u
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
UNKNOWN
[i]Type for TMP_265

Name: TMP_265 Function: withdrawNativeGasFee
Num: -1
Den: -1
Address: u
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_2(bool,bytes) = LOW_LEVEL_CALL, dest:TMP_265, function:call, arguments:[''] value:_gasFeeAccumulated_1 
[i]Type for TUPLE_2

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
success_1(bool)= UNPACK TUPLE_2 index: 0 
Finding type for success(bool ... )
[i]Type for success

Name: success Function: withdrawNativeGasFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: success, Num: 1
Globalname: success
End popogation
TMP_266(None) = SOLIDITY_CALL require(bool,string)(success_1,Native Transfer Failed)
[i]Type for TMP_266

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_267 = CONVERT this to address
Converting this
5
[i]Type for TMP_267

Name: TMP_267 Function: withdrawNativeGasFee
Num: 
Den: 
Address: 5
Norm: u
LF: LiquidityPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_268(address) = INTERNAL_CALL, LiquidityPool._msgSender()()
init
end
_______________

Name: PIC_33 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_268 Function: withdrawNativeGasFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_268

Name: TMP_268 Function: withdrawNativeGasFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX



transfer
Finding type for _tokenAddress(address ... )
prev address? u
Head Addr: -975
    Norm: 6
    Set: {-975}
    Fin: NULL
Finding type for receiver(address ... )
prev address? u
Head Addr: -974
    Norm: 0
    Set: {-974}
    Fin: NULL
Finding type for _tokenAmount(uint256 ... )
Param: 0
    num: []
    den: []
    norm: 6
    link: _tokenAddress
    fields: []
    fintype: -1
Param: 1
    num: []
    den: []
    norm: 0
    link: receiver
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1


NATIVE_29(address) := ϕ(['NATIVE_28', 'NATIVE_0', 'NATIVE_8', 'NATIVE_22', 'NATIVE_18', 'NATIVE_32'])
MODIFIER_CALL, PausableUpgradeable.whenNotPaused()()
MODIFIER_CALL, LiquidityPool.onlyLiquidityProviders()()
MODIFIER_CALL, ReentrancyGuardUpgradeable.nonReentrant()()
TMP_273 = CONVERT 0 to address
TMP_274(bool) = receiver_1 != TMP_273
TMP_275(None) = SOLIDITY_CALL require(bool,string)(TMP_274,Invalid receiver)
TMP_276(bool) = _tokenAddress_1 == NATIVE_32
CONDITION TMP_276
TMP_282 = CONVERT _tokenAddress_1 to IERC20Upgradeable
baseToken_1(IERC20Upgradeable) := TMP_282(IERC20Upgradeable)
TMP_277 = CONVERT this to address
TMP_278(uint256) = SOLIDITY_CALL balance(address)(TMP_277)
TMP_279(bool) = TMP_278 >= _tokenAmount_1
TMP_280(None) = SOLIDITY_CALL require(bool,string)(TMP_279,ERR__INSUFFICIENT_BALANCE)
TUPLE_3(bool,bytes) = LOW_LEVEL_CALL, dest:receiver_1, function:call, arguments:[''] value:_tokenAmount_1 
success_1(bool)= UNPACK TUPLE_3 index: 0 
TMP_281(None) = SOLIDITY_CALL require(bool,string)(success_1,ERR__NATIVE_TRANSFER_FAILED)
TMP_283 = CONVERT this to address
TMP_284(uint256) = HIGH_LEVEL_CALL, dest:baseToken_1(IERC20Upgradeable), function:balanceOf, arguments:['TMP_283']  
TMP_285(bool) = TMP_284 >= _tokenAmount_1
TMP_286(None) = SOLIDITY_CALL require(bool,string)(TMP_285,ERR__INSUFFICIENT_BALANCE)
LIBRARY_CALL, dest:SafeERC20Upgradeable, function:SafeERC20Upgradeable.safeTransfer(IERC20Upgradeable,address,uint256), arguments:['baseToken_1', 'receiver_1', '_tokenAmount_1'] 


Propogating parameters and globals to SSA variables...
End popogation
Name: NATIVE, Num: 29
Globalname: NATIVE
global...

Name: PIC_13 Function: None
Num: -1
Den: -1
Address: 3
Norm: 6
LF: NATIVE
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: None Function: None
Num: -1
Den: -1
Address: 3
Norm: 6
LF: NATIVE
Value: u
Fields: 
Finance Type: undef
Phid
NATIVE_29(address) := ϕ(['NATIVE_28', 'NATIVE_0', 'NATIVE_8', 'NATIVE_22', 'NATIVE_18', 'NATIVE_32'])
Phi
[i]Type for NATIVE

Name: NATIVE Function: transfer
Num: -1
Den: -1
Address: 3
Norm: 6
LF: NATIVE
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, PausableUpgradeable.whenNotPaused()()
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, LiquidityPool.onlyLiquidityProviders()()
Propogating parameters and globals to SSA variables...
End popogation
Name: liquidityProviders, Num: 44
Globalname: liquidityProviders
global...

Name: liquidityProviders Function: setLiquidityProviders
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Source address: -993

Name: None Function: None
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid
liquidityProviders_44(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: onlyLiquidityProviders
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: liquidityProviders, Num: 45
Globalname: liquidityProviders
global...

Name: liquidityProviders Function: setLiquidityProviders
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Source address: -993
End popogation
TMP_315(address) = INTERNAL_CALL, LiquidityPool._msgSender()()
init
end
_______________

Name: PIC_33 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_315 Function: onlyLiquidityProviders
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_315

Name: TMP_315 Function: onlyLiquidityProviders
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_316 = CONVERT liquidityProviders_45 to address
Converting liquidityProviders_45

Name: None Function: None
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
init
end
_______________

Name: liquidityProviders Function: None
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef

Name: TMP_316 Function: onlyLiquidityProviders
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: -993
[i]Type for TMP_316

Name: TMP_316 Function: onlyLiquidityProviders
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_317(bool) = TMP_315 == TMP_316
[i]Type for TMP_317

Name: TMP_317 Function: onlyLiquidityProviders
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_318(None) = SOLIDITY_CALL require(bool,string)(TMP_317,Only liquidityProviders is allowed)
[i]Type for TMP_318

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation

Name: liquidityProviders Function: onlyLiquidityProviders
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
Phid
liquidityProviders_44(ILiquidityProviders) := ϕ(['liquidityProviders_17', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_2', 'liquidityProviders_45', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1'])
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: onlyLiquidityProviders
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_315(address) = INTERNAL_CALL, LiquidityPool._msgSender()()
init
end
_______________

Name: PIC_33 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_315 Function: onlyLiquidityProviders
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_315

Name: TMP_315 Function: onlyLiquidityProviders
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_316 = CONVERT liquidityProviders_45 to address
Converting liquidityProviders_45

Name: liquidityProviders Function: None
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
init
end
_______________

Name: liquidityProviders Function: None
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef

Name: TMP_316 Function: onlyLiquidityProviders
Num: 
Den: 
Address: u
Norm: u
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: -993
[i]Type for TMP_316

Name: TMP_316 Function: onlyLiquidityProviders
Num: -1
Den: -1
Address: -993
Norm: 0
LF: LiquidityProviders
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_317(bool) = TMP_315 == TMP_316
[i]Type for TMP_317

Name: TMP_317 Function: onlyLiquidityProviders
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_318(None) = SOLIDITY_CALL require(bool,string)(TMP_317,Only liquidityProviders is allowed)
[i]Type for TMP_318

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, ReentrancyGuardUpgradeable.nonReentrant()()
Propogating parameters and globals to SSA variables...
Source address: -974
End popogation
TMP_273 = CONVERT 0 to address
Converting 0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
_______________

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_273 Function: transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_273

Name: TMP_273 Function: transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_274(bool) = receiver_1 != TMP_273
[i]Type for TMP_274

Name: TMP_274 Function: transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_275(None) = SOLIDITY_CALL require(bool,string)(TMP_274,Invalid receiver)
[i]Type for TMP_275

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Source address: -975
Name: NATIVE, Num: 32
Globalname: NATIVE
global...

Name: PIC_13 Function: None
Num: -1
Den: -1
Address: 3
Norm: 6
LF: NATIVE
Value: u
Fields: 
Finance Type: undef
Source address: 3
End popogation
TMP_276(bool) = _tokenAddress_1 == NATIVE_32
[i]Type for TMP_276

Name: TMP_276 Function: transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: baseToken, Num: 1
Globalname: baseToken
End popogation
TMP_282 = CONVERT _tokenAddress_1 to IERC20Upgradeable
Converting _tokenAddress_1

Name: _tokenAddress_1 Function: None
Num: 
Den: 
Address: -975
Norm: 6
LF: _tokenAddress
Value: u
Fields: 
Finance Type: undef
init
end
_______________

Name: _tokenAddress Function: None
Num: 
Den: 
Address: -975
Norm: 6
LF: _tokenAddress
Value: u
Fields: 
Finance Type: undef

Name: TMP_282 Function: transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: -975
ERC20Upgradeable
[i]Type for TMP_282

Name: TMP_282 Function: transfer
Num: 
Den: 
Address: -975
Norm: 6
LF: ERC20Upgradeable
Value: u
Fields: 
Finance Type: undef
XXXX
baseToken_1(IERC20Upgradeable) := TMP_282(IERC20Upgradeable)
asgn
init
end
_______________

Name: TMP_282 Function: transfer
Num: 
Den: 
Address: -975
Norm: 6
LF: ERC20Upgradeable
Value: u
Fields: 
Finance Type: undef

Name: baseToken Function: transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: -975
Finance type key: (-1, -1)
[i]Type for baseToken

Name: baseToken Function: transfer
Num: 
Den: 
Address: -975
Norm: 6
LF: ERC20Upgradeable
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Source address: u
Name: _tokenAmount, Num: 1
Globalname: _tokenAmount
End popogation
TMP_277 = CONVERT this to address
Converting this
5
[i]Type for TMP_277

Name: TMP_277 Function: transfer
Num: -1
Den: -1
Address: 5
Norm: u
LF: LiquidityPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_278(uint256) = SOLIDITY_CALL balance(address)(TMP_277)
[i]Type for TMP_278

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_279(bool) = TMP_278 >= _tokenAmount_1
init
end
init
end
lnorm: u rnorm: u
init
end
_______________

Name: _tokenAmount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_279 Function: transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
_______________

Name: _tokenAmount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_278 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_279

Name: TMP_279 Function: transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_280(None) = SOLIDITY_CALL require(bool,string)(TMP_279,ERR__INSUFFICIENT_BALANCE)
[i]Type for TMP_280

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Source address: u
Name: _tokenAmount, Num: 1
Globalname: _tokenAmount
Name: success, Num: 1
Globalname: success
End popogation
TUPLE_3(bool,bytes) = LOW_LEVEL_CALL, dest:receiver_1, function:call, arguments:[''] value:_tokenAmount_1 
[i]Type for TUPLE_3

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
success_1(bool)= UNPACK TUPLE_3 index: 0 
Finding type for success(bool ... )
[i]Type for success

Name: success Function: transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_281(None) = SOLIDITY_CALL require(bool,string)(success_1,ERR__NATIVE_TRANSFER_FAILED)
[i]Type for TMP_281

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Source address: u
Name: _tokenAmount, Num: 1
Globalname: _tokenAmount
End popogation
TMP_283 = CONVERT this to address
Converting this
5
[i]Type for TMP_283

Name: TMP_283 Function: transfer
Num: -1
Den: -1
Address: 5
Norm: u
LF: LiquidityPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_284(uint256) = HIGH_LEVEL_CALL, dest:baseToken_1(IERC20Upgradeable), function:balanceOf, arguments:['TMP_283']  
High Call: balanceOf
Running querryfc
Written func info: ERC20Upgradeable, balanceOf
Handling balance function!
-975
[i]Type for TMP_284

Name: TMP_284 Function: transfer
Num: -975
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
TMP_285(bool) = TMP_284 >= _tokenAmount_1
init
end
init
end
lnorm: 6 rnorm: u
init
end
_______________

Name: TMP_284 Function: transfer
Num: -975
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance

Name: TMP_285 Function: transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Source address: u
init
end
_______________

Name: TMP_284 Function: transfer
Num: -975
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance

Name: _tokenAmount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_285

Name: TMP_285 Function: transfer
Num: -975
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
TMP_286(None) = SOLIDITY_CALL require(bool,string)(TMP_285,ERR__INSUFFICIENT_BALANCE)
[i]Type for TMP_286

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
LIBRARY_CALL, dest:SafeERC20Upgradeable, function:SafeERC20Upgradeable.safeTransfer(IERC20Upgradeable,address,uint256), arguments:['baseToken_1', 'receiver_1', '_tokenAmount_1'] 
Propogating parameters and globals to SSA variables...
End popogation


NATIVE_29(address) := ϕ(['NATIVE_28', 'NATIVE_0', 'NATIVE_8', 'NATIVE_22', 'NATIVE_18', 'NATIVE_32'])
MODIFIER_CALL, PausableUpgradeable.whenNotPaused()()
MODIFIER_CALL, LiquidityPool.onlyLiquidityProviders()()
MODIFIER_CALL, ReentrancyGuardUpgradeable.nonReentrant()()
TMP_273 = CONVERT 0 to address
TMP_274(bool) = receiver_1 != TMP_273
TMP_275(None) = SOLIDITY_CALL require(bool,string)(TMP_274,Invalid receiver)
TMP_276(bool) = _tokenAddress_1 == NATIVE_32
CONDITION TMP_276
TMP_282 = CONVERT _tokenAddress_1 to IERC20Upgradeable
baseToken_1(IERC20Upgradeable) := TMP_282(IERC20Upgradeable)
TMP_277 = CONVERT this to address
TMP_278(uint256) = SOLIDITY_CALL balance(address)(TMP_277)
TMP_279(bool) = TMP_278 >= _tokenAmount_1
TMP_280(None) = SOLIDITY_CALL require(bool,string)(TMP_279,ERR__INSUFFICIENT_BALANCE)
TUPLE_3(bool,bytes) = LOW_LEVEL_CALL, dest:receiver_1, function:call, arguments:[''] value:_tokenAmount_1 
success_1(bool)= UNPACK TUPLE_3 index: 0 
TMP_281(None) = SOLIDITY_CALL require(bool,string)(success_1,ERR__NATIVE_TRANSFER_FAILED)
TMP_283 = CONVERT this to address
TMP_284(uint256) = HIGH_LEVEL_CALL, dest:baseToken_1(IERC20Upgradeable), function:balanceOf, arguments:['TMP_283']  
TMP_285(bool) = TMP_284 >= _tokenAmount_1
TMP_286(None) = SOLIDITY_CALL require(bool,string)(TMP_285,ERR__INSUFFICIENT_BALANCE)
LIBRARY_CALL, dest:SafeERC20Upgradeable, function:SafeERC20Upgradeable.safeTransfer(IERC20Upgradeable,address,uint256), arguments:['baseToken_1', 'receiver_1', '_tokenAmount_1'] 


Propogating parameters and globals to SSA variables...
End popogation

Name: NATIVE Function: transfer
Num: -1
Den: -1
Address: 3
Norm: 6
LF: NATIVE
Value: u
Fields: 
Finance Type: undef
Phid
NATIVE_29(address) := ϕ(['NATIVE_28', 'NATIVE_0', 'NATIVE_8', 'NATIVE_22', 'NATIVE_18', 'NATIVE_32'])
Phi
[i]Type for NATIVE

Name: NATIVE Function: transfer
Num: -1
Den: -1
Address: 3
Norm: 6
LF: NATIVE
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, PausableUpgradeable.whenNotPaused()()
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, LiquidityPool.onlyLiquidityProviders()()
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, ReentrancyGuardUpgradeable.nonReentrant()()
Propogating parameters and globals to SSA variables...
End popogation
TMP_273 = CONVERT 0 to address
Converting 0

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
_______________

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_273 Function: transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_273

Name: TMP_273 Function: transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_274(bool) = receiver_1 != TMP_273
[i]Type for TMP_274

Name: TMP_274 Function: transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_275(None) = SOLIDITY_CALL require(bool,string)(TMP_274,Invalid receiver)
[i]Type for TMP_275

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_276(bool) = _tokenAddress_1 == NATIVE_32
[i]Type for TMP_276

Name: TMP_276 Function: transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: baseToken, Num: 1
Globalname: baseToken
End popogation
TMP_282 = CONVERT _tokenAddress_1 to IERC20Upgradeable
Converting _tokenAddress_1

Name: _tokenAddress Function: None
Num: 
Den: 
Address: -975
Norm: 6
LF: _tokenAddress
Value: u
Fields: 
Finance Type: undef
init
end
_______________

Name: _tokenAddress Function: None
Num: 
Den: 
Address: -975
Norm: 6
LF: _tokenAddress
Value: u
Fields: 
Finance Type: undef

Name: TMP_282 Function: transfer
Num: 
Den: 
Address: u
Norm: u
LF: ERC20Upgradeable
Value: u
Fields: 
Finance Type: undef
Source address: -975
ERC20Upgradeable
[i]Type for TMP_282

Name: TMP_282 Function: transfer
Num: 
Den: 
Address: -975
Norm: 6
LF: ERC20Upgradeable
Value: u
Fields: 
Finance Type: undef
XXXX
baseToken_1(IERC20Upgradeable) := TMP_282(IERC20Upgradeable)
asgn
init
end
_______________

Name: TMP_282 Function: transfer
Num: 
Den: 
Address: -975
Norm: 6
LF: ERC20Upgradeable
Value: u
Fields: 
Finance Type: undef

Name: baseToken Function: transfer
Num: 
Den: 
Address: u
Norm: u
LF: ERC20Upgradeable
Value: u
Fields: 
Finance Type: undef
Source address: -975
Finance type key: (-1, -1)
[i]Type for baseToken

Name: baseToken Function: transfer
Num: 
Den: 
Address: -975
Norm: 6
LF: ERC20Upgradeable
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_277 = CONVERT this to address
Converting this
5
[i]Type for TMP_277

Name: TMP_277 Function: transfer
Num: 
Den: 
Address: 5
Norm: u
LF: LiquidityPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_278(uint256) = SOLIDITY_CALL balance(address)(TMP_277)
[i]Type for TMP_278

Name: TMP_278 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_279(bool) = TMP_278 >= _tokenAmount_1
init
end
init
end
lnorm: u rnorm: u
init
end
_______________

Name: _tokenAmount Function: None
Num: -975
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_279 Function: transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
init
end
_______________

Name: _tokenAmount Function: None
Num: -975
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_278 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_279

Name: TMP_279 Function: transfer
Num: -975
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_280(None) = SOLIDITY_CALL require(bool,string)(TMP_279,ERR__INSUFFICIENT_BALANCE)
[i]Type for TMP_280

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: success, Num: 1
Globalname: success
End popogation
TUPLE_3(bool,bytes) = LOW_LEVEL_CALL, dest:receiver_1, function:call, arguments:[''] value:_tokenAmount_1 
[i]Type for TUPLE_3

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
success_1(bool)= UNPACK TUPLE_3 index: 0 
Finding type for success(bool ... )
[i]Type for success

Name: success Function: transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: success, Num: 1
Globalname: success
End popogation
TMP_281(None) = SOLIDITY_CALL require(bool,string)(success_1,ERR__NATIVE_TRANSFER_FAILED)
[i]Type for TMP_281

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_283 = CONVERT this to address
Converting this
5
[i]Type for TMP_283

Name: TMP_283 Function: transfer
Num: 
Den: 
Address: 5
Norm: u
LF: LiquidityPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_284(uint256) = HIGH_LEVEL_CALL, dest:baseToken_1(IERC20Upgradeable), function:balanceOf, arguments:['TMP_283']  
High Call: balanceOf
Running querryfc
Written func info: ERC20Upgradeable, balanceOf
Handling balance function!
-975
[i]Type for TMP_284

Name: TMP_284 Function: transfer
Num: -975
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
TMP_285(bool) = TMP_284 >= _tokenAmount_1
init
end
init
end
lnorm: 6 rnorm: u
-975
-1
[i]Type for TMP_285

Name: TMP_285 Function: transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
TMP_286(None) = SOLIDITY_CALL require(bool,string)(TMP_285,ERR__INSUFFICIENT_BALANCE)
[i]Type for TMP_286

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
LIBRARY_CALL, dest:SafeERC20Upgradeable, function:SafeERC20Upgradeable.safeTransfer(IERC20Upgradeable,address,uint256), arguments:['baseToken_1', 'receiver_1', '_tokenAmount_1'] 
Propogating parameters and globals to SSA variables...
End popogation


NATIVE_29(address) := ϕ(['NATIVE_28', 'NATIVE_0', 'NATIVE_8', 'NATIVE_22', 'NATIVE_18', 'NATIVE_32'])
MODIFIER_CALL, PausableUpgradeable.whenNotPaused()()
MODIFIER_CALL, LiquidityPool.onlyLiquidityProviders()()
MODIFIER_CALL, ReentrancyGuardUpgradeable.nonReentrant()()
TMP_273 = CONVERT 0 to address
TMP_274(bool) = receiver_1 != TMP_273
TMP_275(None) = SOLIDITY_CALL require(bool,string)(TMP_274,Invalid receiver)
TMP_276(bool) = _tokenAddress_1 == NATIVE_32
CONDITION TMP_276
TMP_282 = CONVERT _tokenAddress_1 to IERC20Upgradeable
baseToken_1(IERC20Upgradeable) := TMP_282(IERC20Upgradeable)
TMP_277 = CONVERT this to address
TMP_278(uint256) = SOLIDITY_CALL balance(address)(TMP_277)
TMP_279(bool) = TMP_278 >= _tokenAmount_1
TMP_280(None) = SOLIDITY_CALL require(bool,string)(TMP_279,ERR__INSUFFICIENT_BALANCE)
TUPLE_3(bool,bytes) = LOW_LEVEL_CALL, dest:receiver_1, function:call, arguments:[''] value:_tokenAmount_1 
success_1(bool)= UNPACK TUPLE_3 index: 0 
TMP_281(None) = SOLIDITY_CALL require(bool,string)(success_1,ERR__NATIVE_TRANSFER_FAILED)
TMP_283 = CONVERT this to address
TMP_284(uint256) = HIGH_LEVEL_CALL, dest:baseToken_1(IERC20Upgradeable), function:balanceOf, arguments:['TMP_283']  
TMP_285(bool) = TMP_284 >= _tokenAmount_1
TMP_286(None) = SOLIDITY_CALL require(bool,string)(TMP_285,ERR__INSUFFICIENT_BALANCE)
LIBRARY_CALL, dest:SafeERC20Upgradeable, function:SafeERC20Upgradeable.safeTransfer(IERC20Upgradeable,address,uint256), arguments:['baseToken_1', 'receiver_1', '_tokenAmount_1'] 


Propogating parameters and globals to SSA variables...
End popogation

Name: NATIVE Function: transfer
Num: -1
Den: -1
Address: 3
Norm: 6
LF: NATIVE
Value: u
Fields: 
Finance Type: undef
Phid
NATIVE_29(address) := ϕ(['NATIVE_28', 'NATIVE_0', 'NATIVE_8', 'NATIVE_22', 'NATIVE_18', 'NATIVE_32'])
Phi
[i]Type for NATIVE

Name: NATIVE Function: transfer
Num: -1
Den: -1
Address: 3
Norm: 6
LF: NATIVE
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, PausableUpgradeable.whenNotPaused()()
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, LiquidityPool.onlyLiquidityProviders()()
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, ReentrancyGuardUpgradeable.nonReentrant()()
Propogating parameters and globals to SSA variables...
End popogation
TMP_273 = CONVERT 0 to address
Converting 0

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
_______________

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_273 Function: transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_273

Name: TMP_273 Function: transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_274(bool) = receiver_1 != TMP_273
[i]Type for TMP_274

Name: TMP_274 Function: transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_275(None) = SOLIDITY_CALL require(bool,string)(TMP_274,Invalid receiver)
[i]Type for TMP_275

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_276(bool) = _tokenAddress_1 == NATIVE_32
[i]Type for TMP_276

Name: TMP_276 Function: transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_282 = CONVERT _tokenAddress_1 to IERC20Upgradeable
Converting _tokenAddress_1

Name: _tokenAddress Function: None
Num: 
Den: 
Address: -975
Norm: 6
LF: _tokenAddress
Value: u
Fields: 
Finance Type: undef
init
end
_______________

Name: _tokenAddress Function: None
Num: 
Den: 
Address: -975
Norm: 6
LF: _tokenAddress
Value: u
Fields: 
Finance Type: undef

Name: TMP_282 Function: transfer
Num: 
Den: 
Address: -975
Norm: 6
LF: ERC20Upgradeable
Value: u
Fields: 
Finance Type: undef
ERC20Upgradeable
[i]Type for TMP_282

Name: TMP_282 Function: transfer
Num: 
Den: 
Address: -975
Norm: 6
LF: ERC20Upgradeable
Value: u
Fields: 
Finance Type: undef
XXXX
baseToken_1(IERC20Upgradeable) := TMP_282(IERC20Upgradeable)
asgn
init
end
_______________

Name: TMP_282 Function: transfer
Num: 
Den: 
Address: -975
Norm: 6
LF: ERC20Upgradeable
Value: u
Fields: 
Finance Type: undef

Name: baseToken Function: transfer
Num: 
Den: 
Address: -975
Norm: 6
LF: ERC20Upgradeable
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for baseToken

Name: baseToken Function: transfer
Num: 
Den: 
Address: -975
Norm: 6
LF: ERC20Upgradeable
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_277 = CONVERT this to address
Converting this
5
[i]Type for TMP_277

Name: TMP_277 Function: transfer
Num: 
Den: 
Address: 5
Norm: u
LF: LiquidityPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_278(uint256) = SOLIDITY_CALL balance(address)(TMP_277)
[i]Type for TMP_278

Name: TMP_278 Function: None
Num: -975
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_279(bool) = TMP_278 >= _tokenAmount_1
init
end
init
end
lnorm: u rnorm: u
-975
-1
[i]Type for TMP_279

Name: TMP_279 Function: transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_280(None) = SOLIDITY_CALL require(bool,string)(TMP_279,ERR__INSUFFICIENT_BALANCE)
[i]Type for TMP_280

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: success, Num: 1
Globalname: success
End popogation
TUPLE_3(bool,bytes) = LOW_LEVEL_CALL, dest:receiver_1, function:call, arguments:[''] value:_tokenAmount_1 
[i]Type for TUPLE_3

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
success_1(bool)= UNPACK TUPLE_3 index: 0 
Finding type for success(bool ... )
[i]Type for success

Name: success Function: transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: success, Num: 1
Globalname: success
End popogation
TMP_281(None) = SOLIDITY_CALL require(bool,string)(success_1,ERR__NATIVE_TRANSFER_FAILED)
[i]Type for TMP_281

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_283 = CONVERT this to address
Converting this
5
[i]Type for TMP_283

Name: TMP_283 Function: transfer
Num: 
Den: 
Address: 5
Norm: u
LF: LiquidityPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_284(uint256) = HIGH_LEVEL_CALL, dest:baseToken_1(IERC20Upgradeable), function:balanceOf, arguments:['TMP_283']  
High Call: balanceOf
Running querryfc
Written func info: ERC20Upgradeable, balanceOf
Handling balance function!
-975
[i]Type for TMP_284

Name: TMP_284 Function: transfer
Num: -975
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
TMP_285(bool) = TMP_284 >= _tokenAmount_1
init
end
init
end
lnorm: 6 rnorm: u
-975
-1
[i]Type for TMP_285

Name: TMP_285 Function: transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
TMP_286(None) = SOLIDITY_CALL require(bool,string)(TMP_285,ERR__INSUFFICIENT_BALANCE)
[i]Type for TMP_286

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
LIBRARY_CALL, dest:SafeERC20Upgradeable, function:SafeERC20Upgradeable.safeTransfer(IERC20Upgradeable,address,uint256), arguments:['baseToken_1', 'receiver_1', '_tokenAmount_1'] 
Propogating parameters and globals to SSA variables...
End popogation


NATIVE_29(address) := ϕ(['NATIVE_28', 'NATIVE_0', 'NATIVE_8', 'NATIVE_22', 'NATIVE_18', 'NATIVE_32'])
MODIFIER_CALL, PausableUpgradeable.whenNotPaused()()
MODIFIER_CALL, LiquidityPool.onlyLiquidityProviders()()
MODIFIER_CALL, ReentrancyGuardUpgradeable.nonReentrant()()
TMP_273 = CONVERT 0 to address
TMP_274(bool) = receiver_1 != TMP_273
TMP_275(None) = SOLIDITY_CALL require(bool,string)(TMP_274,Invalid receiver)
TMP_276(bool) = _tokenAddress_1 == NATIVE_32
CONDITION TMP_276
TMP_282 = CONVERT _tokenAddress_1 to IERC20Upgradeable
baseToken_1(IERC20Upgradeable) := TMP_282(IERC20Upgradeable)
TMP_277 = CONVERT this to address
TMP_278(uint256) = SOLIDITY_CALL balance(address)(TMP_277)
TMP_279(bool) = TMP_278 >= _tokenAmount_1
TMP_280(None) = SOLIDITY_CALL require(bool,string)(TMP_279,ERR__INSUFFICIENT_BALANCE)
TUPLE_3(bool,bytes) = LOW_LEVEL_CALL, dest:receiver_1, function:call, arguments:[''] value:_tokenAmount_1 
success_1(bool)= UNPACK TUPLE_3 index: 0 
TMP_281(None) = SOLIDITY_CALL require(bool,string)(success_1,ERR__NATIVE_TRANSFER_FAILED)
TMP_283 = CONVERT this to address
TMP_284(uint256) = HIGH_LEVEL_CALL, dest:baseToken_1(IERC20Upgradeable), function:balanceOf, arguments:['TMP_283']  
TMP_285(bool) = TMP_284 >= _tokenAmount_1
TMP_286(None) = SOLIDITY_CALL require(bool,string)(TMP_285,ERR__INSUFFICIENT_BALANCE)
LIBRARY_CALL, dest:SafeERC20Upgradeable, function:SafeERC20Upgradeable.safeTransfer(IERC20Upgradeable,address,uint256), arguments:['baseToken_1', 'receiver_1', '_tokenAmount_1'] 


Propogating parameters and globals to SSA variables...
End popogation

Name: NATIVE Function: transfer
Num: -1
Den: -1
Address: 3
Norm: 6
LF: NATIVE
Value: u
Fields: 
Finance Type: undef
Phid
NATIVE_29(address) := ϕ(['NATIVE_28', 'NATIVE_0', 'NATIVE_8', 'NATIVE_22', 'NATIVE_18', 'NATIVE_32'])
Phi
[i]Type for NATIVE

Name: NATIVE Function: transfer
Num: -1
Den: -1
Address: 3
Norm: 6
LF: NATIVE
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, PausableUpgradeable.whenNotPaused()()
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, LiquidityPool.onlyLiquidityProviders()()
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, ReentrancyGuardUpgradeable.nonReentrant()()
Propogating parameters and globals to SSA variables...
End popogation
TMP_273 = CONVERT 0 to address
Converting 0

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
_______________

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_273 Function: transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_273

Name: TMP_273 Function: transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_274(bool) = receiver_1 != TMP_273
[i]Type for TMP_274

Name: TMP_274 Function: transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_275(None) = SOLIDITY_CALL require(bool,string)(TMP_274,Invalid receiver)
[i]Type for TMP_275

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_276(bool) = _tokenAddress_1 == NATIVE_32
[i]Type for TMP_276

Name: TMP_276 Function: transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_282 = CONVERT _tokenAddress_1 to IERC20Upgradeable
Converting _tokenAddress_1

Name: _tokenAddress Function: None
Num: 
Den: 
Address: -975
Norm: 6
LF: _tokenAddress
Value: u
Fields: 
Finance Type: undef
init
end
_______________

Name: _tokenAddress Function: None
Num: 
Den: 
Address: -975
Norm: 6
LF: _tokenAddress
Value: u
Fields: 
Finance Type: undef

Name: TMP_282 Function: transfer
Num: 
Den: 
Address: -975
Norm: 6
LF: ERC20Upgradeable
Value: u
Fields: 
Finance Type: undef
ERC20Upgradeable
[i]Type for TMP_282

Name: TMP_282 Function: transfer
Num: 
Den: 
Address: -975
Norm: 6
LF: ERC20Upgradeable
Value: u
Fields: 
Finance Type: undef
XXXX
baseToken_1(IERC20Upgradeable) := TMP_282(IERC20Upgradeable)
asgn
init
end
_______________

Name: TMP_282 Function: transfer
Num: 
Den: 
Address: -975
Norm: 6
LF: ERC20Upgradeable
Value: u
Fields: 
Finance Type: undef

Name: baseToken Function: transfer
Num: 
Den: 
Address: -975
Norm: 6
LF: ERC20Upgradeable
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for baseToken

Name: baseToken Function: transfer
Num: 
Den: 
Address: -975
Norm: 6
LF: ERC20Upgradeable
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_277 = CONVERT this to address
Converting this
5
[i]Type for TMP_277

Name: TMP_277 Function: transfer
Num: 
Den: 
Address: 5
Norm: u
LF: LiquidityPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_278(uint256) = SOLIDITY_CALL balance(address)(TMP_277)
[i]Type for TMP_278

Name: TMP_278 Function: None
Num: -975
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_279(bool) = TMP_278 >= _tokenAmount_1
init
end
init
end
lnorm: u rnorm: u
-975
-1
[i]Type for TMP_279

Name: TMP_279 Function: transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_280(None) = SOLIDITY_CALL require(bool,string)(TMP_279,ERR__INSUFFICIENT_BALANCE)
[i]Type for TMP_280

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: success, Num: 1
Globalname: success
End popogation
TUPLE_3(bool,bytes) = LOW_LEVEL_CALL, dest:receiver_1, function:call, arguments:[''] value:_tokenAmount_1 
[i]Type for TUPLE_3

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
success_1(bool)= UNPACK TUPLE_3 index: 0 
Finding type for success(bool ... )
[i]Type for success

Name: success Function: transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: success, Num: 1
Globalname: success
End popogation
TMP_281(None) = SOLIDITY_CALL require(bool,string)(success_1,ERR__NATIVE_TRANSFER_FAILED)
[i]Type for TMP_281

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_283 = CONVERT this to address
Converting this
5
[i]Type for TMP_283

Name: TMP_283 Function: transfer
Num: 
Den: 
Address: 5
Norm: u
LF: LiquidityPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_284(uint256) = HIGH_LEVEL_CALL, dest:baseToken_1(IERC20Upgradeable), function:balanceOf, arguments:['TMP_283']  
High Call: balanceOf
Running querryfc
Written func info: ERC20Upgradeable, balanceOf
Handling balance function!
-975
[i]Type for TMP_284

Name: TMP_284 Function: transfer
Num: -975
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
TMP_285(bool) = TMP_284 >= _tokenAmount_1
init
end
init
end
lnorm: 6 rnorm: u
-975
-1
[i]Type for TMP_285

Name: TMP_285 Function: transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
TMP_286(None) = SOLIDITY_CALL require(bool,string)(TMP_285,ERR__INSUFFICIENT_BALANCE)
[i]Type for TMP_286

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
LIBRARY_CALL, dest:SafeERC20Upgradeable, function:SafeERC20Upgradeable.safeTransfer(IERC20Upgradeable,address,uint256), arguments:['baseToken_1', 'receiver_1', '_tokenAmount_1'] 
Propogating parameters and globals to SSA variables...
End popogation



_msgSender



_msgData



receive


TMP_293(address) = INTERNAL_CALL, LiquidityPool._msgSender()()
Emit EthReceived(TMP_293,msg.value)


Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
TMP_293(address) = INTERNAL_CALL, LiquidityPool._msgSender()()
[i]Type for TMP_293

Name: TMP_293 Function: receive
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX


TMP_293(address) = INTERNAL_CALL, LiquidityPool._msgSender()()
Emit EthReceived(TMP_293,msg.value)


Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
TMP_293(address) = INTERNAL_CALL, LiquidityPool._msgSender()()
[i]Type for TMP_293

Name: TMP_293 Function: receive
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX



slitherConstructorConstantVariables
Address: 1, Label: global:_pauser
Address: 2, Label: global:_owner
Address: 3, Label: global:NATIVE
Address: 4, Label: global:_trustedForwarder
Address: -999, Label: initialize:_executorManagerAddress
Address: -998, Label: initialize:_pauser
Address: -997, Label: initialize:_trustedForwarder
Address: -996, Label: initialize:_tokenManager
Address: -995, Label: initialize:_liquidityProviders
Address: -994, Label: setTrustedForwarder:trustedForwarder
Address: -993, Label: setLiquidityProviders:_liquidityProviders
Address: -992, Label: setExecutorManager:_executorManagerAddress
Address: -991, Label: getCurrentLiquidity:tokenAddress
Address: -990, Label: depositErc20:tokenAddress
Address: -989, Label: depositErc20:receiver
Address: -988, Label: getRewardAmount:tokenAddress
Address: -987, Label: permitAndDepositErc20:tokenAddress
Address: -986, Label: permitAndDepositErc20:receiver
Address: -985, Label: permitEIP2612AndDepositErc20:tokenAddress
Address: -984, Label: permitEIP2612AndDepositErc20:receiver
Address: -983, Label: depositNative:receiver
Address: -982, Label: sendFundsToUser:tokenAddress
Address: -981, Label: sendFundsToUser:receiver
Address: -980, Label: getAmountToTransfer:tokenAddress
Address: -979, Label: getTransferFee:tokenAddress
Address: -978, Label: checkHashStatus:tokenAddress
Address: -977, Label: checkHashStatus:receiver
Address: -976, Label: withdrawErc20GasFee:tokenAddress
Address: -975, Label: transfer:_tokenAddress
Address: -974, Label: transfer:receiver
Address: 5, Label: depositErc20:TMP_121
Address: 5, Label: global:this
Head Addr: 1
    Norm: 0
    Set: {1}
    Fin: NULL
Head Addr: 2
    Norm: 0
    Set: {2}
    Fin: NULL
Head Addr: 3
    Norm: 6
    Set: {3}
    Fin: NULL
Head Addr: 4
    Norm: 0
    Set: {4}
    Fin: NULL
Head Addr: -999
    Norm: 0
    Set: {-999}
    Fin: NULL
Head Addr: -998
    Norm: 0
    Set: {-998}
    Fin: NULL
Head Addr: -997
    Norm: 0
    Set: {-997}
    Fin: NULL
Head Addr: -996
    Norm: 0
    Set: {-996}
    Fin: NULL
Head Addr: -995
    Norm: 0
    Set: {-995}
    Fin: NULL
Head Addr: -994
    Norm: 0
    Set: {-994}
    Fin: NULL
Head Addr: -993
    Norm: 0
    Set: {-993}
    Fin: NULL
Head Addr: -992
    Norm: 0
    Set: {-992}
    Fin: NULL
Head Addr: -991
    Norm: 6
    Set: {-991}
    Fin: NULL
Head Addr: -990
    Norm: 6
    Set: {-990}
    Fin: NULL
Head Addr: -989
    Norm: 0
    Set: {-989}
    Fin: NULL
Head Addr: -988
    Norm: u
    Set: {-988}
    Fin: NULL
Head Addr: -987
    Norm: 6
    Set: {-987}
    Fin: NULL
Head Addr: -986
    Norm: 0
    Set: {-986}
    Fin: NULL
Head Addr: -985
    Norm: 6
    Set: {-985}
    Fin: NULL
Head Addr: -984
    Norm: 0
    Set: {-984}
    Fin: NULL
Head Addr: -983
    Norm: 0
    Set: {-983}
    Fin: NULL
Head Addr: -982
    Norm: 6
    Set: {-982}
    Fin: NULL
Head Addr: -981
    Norm: 0
    Set: {-981}
    Fin: NULL
Head Addr: -980
    Norm: u
    Set: {-980}
    Fin: NULL
Head Addr: -979
    Norm: u
    Set: {-979}
    Fin: NULL
Head Addr: -978
    Norm: u
    Set: {-978}
    Fin: NULL
Head Addr: -977
    Norm: u
    Set: {-977}
    Fin: NULL
Head Addr: -976
    Norm: 6
    Set: {-976}
    Fin: NULL
Head Addr: -975
    Norm: 6
    Set: {-975}
    Fin: NULL
Head Addr: -974
    Norm: 0
    Set: {-974}
    Fin: NULL
Head Addr: 5
    Norm: u
    Set: {5}
    Fin: NULL
Function count: 101
Executing Group 25
[*] Tested 1 warnings for Biconomy Hyphen
Group 25 complete
Testing complete
