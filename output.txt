Switched global version to 0.8.4



initiate
i_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for i

Name: i Function: initiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
i_2(uint256) := ϕ(['i_3', 'i_1'])
[i]Type for i

Name: i Function: initiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_18 -> LENGTH o_1 (-> [])
[i]Type for REF_18

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_46(bool) = i_2 < REF_18
[i]Type for TMP_46

Name: TMP_46 Function: initiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_19(Hash.Order) -> o_1 (-> [])[i_2]
[i]Type for REF_19

Name: o_1 (-> []) Function: initiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_20(bool) -> REF_19.exit
[i]Type for REF_20

Name: REF_20 Function: initiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_47 = ! REF_20 
[i]Type for TMP_47

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_29(Hash.Order) -> o_1 (-> [])[i_2]
[i]Type for REF_29

Name: o_1 (-> []) Function: initiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_30(bool) -> REF_29.vault
[i]Type for REF_30

Name: REF_30 Function: initiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_51 = ! REF_30 
[i]Type for TMP_51

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_21(Hash.Order) -> o_1 (-> [])[i_2]
[i]Type for REF_21

Name: o_1 (-> []) Function: initiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_22(bool) -> REF_21.vault
[i]Type for REF_22

Name: REF_22 Function: initiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_48 = ! REF_22 
[i]Type for TMP_48

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_31(Hash.Order) -> o_1 (-> [])[i_2]
[i]Type for REF_31

Name: o_1 (-> []) Function: initiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_32(uint256) -> a_1 (-> [])[i_2]
[i]Type for REF_32

Name: a_1 (-> []) Function: initiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_33(Sig.Components) -> c_1 (-> [])[i_2]
[i]Type for REF_33

Name: c_1 (-> []) Function: initiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
INTERNAL_CALL, Swivel.initiateZcTokenFillingZcTokenExit(Hash.Order,uint256,Sig.Components)(REF_31,REF_32,REF_33)
o_1 (-> [])(Hash.Order) := ϕ(['REF_31'])
[i]Type for o

Name: o Function: initiateZcTokenFillingZcTokenExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
a_1(uint256) := ϕ(['REF_32'])
[i]Type for a

Name: a Function: initiateZcTokenFillingZcTokenExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
c_1 (-> [])(Sig.Components) := ϕ(['REF_33'])
[i]Type for c

Name: c Function: initiateZcTokenFillingZcTokenExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
filled_7(mapping(bytes32 => uint256)) := ϕ(['filled_12', 'filled_3', 'filled_6', 'filled_24', 'filled_15', 'filled_9', 'filled_0', 'filled_21', 'filled_18'])
[i]Type for filled

Name: filled Function: initiateZcTokenFillingZcTokenExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
marketPlace_10(address) := ϕ(['marketPlace_28', 'marketPlace_16', 'marketPlace_30', 'marketPlace_0', 'marketPlace_9', 'marketPlace_13', 'marketPlace_5', 'marketPlace_21', 'marketPlace_24', 'marketPlace_1', 'marketPlace_26'])
[i]Type for marketPlace

Name: marketPlace Function: initiateZcTokenFillingZcTokenExit
Num: -1
Den: -1
Address: 2
Norm: u
LF: marketPlace
Value: u
Fields: 
Finance Type: undef
fenominator_6(uint16[]) := ϕ(['fenominator_13', 'fenominator_0', 'fenominator_11', 'fenominator_7', 'fenominator_1', 'fenominator_15', 'fenominator_17', 'fenominator_5', 'fenominator_9', 'fenominator_18', 'fenominator_3'])
[i]Type for fenominator

Name: fenominator Function: initiateZcTokenFillingZcTokenExit
Num: -1
Den: -1
Address: 1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
TMP_108(bytes32) = INTERNAL_CALL, Swivel.validOrderHash(Hash.Order,Sig.Components)(o_1 (-> []),c_1 (-> []))
o_1 (-> [])(Hash.Order) := ϕ(['o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])'])
[i]Type for o

Name: o Function: validOrderHash
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
c_1 (-> [])(Sig.Components) := ϕ(['c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])'])
[i]Type for c

Name: c Function: validOrderHash
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
cancelled_2(mapping(bytes32 => bool)) := ϕ(['cancelled_2', 'cancelled_0', 'cancelled_1'])
[i]Type for cancelled

Name: cancelled Function: validOrderHash
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
domain_2(bytes32) := ϕ(['domain_0', 'domain_1'])
[i]Type for domain

Name: domain Function: validOrderHash
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_300(bytes32) = LIBRARY_CALL, dest:Hash, function:Hash.order(Hash.Order), arguments:['o_1 (-> [])'] 
[i]Type for TMP_300

Name: TMP_300 Function: validOrderHash
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
hash_1(bytes32) := TMP_300(bytes32)
Finance type key: (-1, -1)
[i]Type for hash

Name: hash Function: validOrderHash
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_252(bool) -> cancelled_2[hash_1]
[i]Type for REF_252

Name: cancelled Function: validOrderHash
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_301 = ! REF_252 
[i]Type for TMP_301

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_302(None) = SOLIDITY_CALL require(bool,string)(TMP_301,order cancelled)
[i]Type for TMP_302

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_253(uint256) -> o_1 (-> []).expiry
[i]Type for REF_253

Name: REF_253 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_303(bool) = REF_253 >= block.timestamp
[i]Type for TMP_303

Name: TMP_303 Function: validOrderHash
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_304(None) = SOLIDITY_CALL require(bool,string)(TMP_303,order expired)
[i]Type for TMP_304

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_254(address) -> o_1 (-> []).maker
[i]Type for REF_254

Name: REF_254 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_305(bytes32) = LIBRARY_CALL, dest:Hash, function:Hash.message(bytes32,bytes32), arguments:['domain_2', 'hash_1'] 
[i]Type for TMP_305

Name: TMP_305 Function: validOrderHash
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_306(address) = LIBRARY_CALL, dest:Sig, function:Sig.recover(bytes32,Sig.Components), arguments:['TMP_305', 'c_1 (-> [])'] 
[i]Type for TMP_306

Name: TMP_306 Function: validOrderHash
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_307(bool) = REF_254 == TMP_306
[i]Type for TMP_307

Name: TMP_307 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_308(None) = SOLIDITY_CALL require(bool,string)(TMP_307,invalid signature)
[i]Type for TMP_308

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
RETURN hash_1
o_1 (-> [])(Hash.Order) := ϕ(['o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])'])
[i]Type for o

Name: o Function: validOrderHash
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: expiry, maker
Finance Type: undef
c_1 (-> [])(Sig.Components) := ϕ(['c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])'])
[i]Type for c

Name: c Function: validOrderHash
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
cancelled_2(mapping(bytes32 => bool)) := ϕ(['cancelled_2', 'cancelled_0', 'cancelled_1'])
[i]Type for cancelled

Name: cancelled Function: validOrderHash
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
domain_2(bytes32) := ϕ(['domain_0', 'domain_1'])
[i]Type for domain

Name: domain Function: validOrderHash
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_300(bytes32) = LIBRARY_CALL, dest:Hash, function:Hash.order(Hash.Order), arguments:['o_1 (-> [])'] 
[i]Type for TMP_300

Name: TMP_300 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
hash_1(bytes32) := TMP_300(bytes32)
Finance type key: (-1, -1)
[i]Type for hash

Name: hash Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_252(bool) -> cancelled_2[hash_1]
[i]Type for REF_252

Name: cancelled Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_301 = ! REF_252 
[i]Type for TMP_301

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_302(None) = SOLIDITY_CALL require(bool,string)(TMP_301,order cancelled)
[i]Type for TMP_302

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_253(uint256) -> o_1 (-> []).expiry
[i]Type for REF_253

Name: REF_253 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_303(bool) = REF_253 >= block.timestamp
[i]Type for TMP_303

Name: TMP_303 Function: validOrderHash
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_304(None) = SOLIDITY_CALL require(bool,string)(TMP_303,order expired)
[i]Type for TMP_304

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_254(address) -> o_1 (-> []).maker
[i]Type for REF_254

Name: REF_254 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_305(bytes32) = LIBRARY_CALL, dest:Hash, function:Hash.message(bytes32,bytes32), arguments:['domain_2', 'hash_1'] 
[i]Type for TMP_305

Name: TMP_305 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_306(address) = LIBRARY_CALL, dest:Sig, function:Sig.recover(bytes32,Sig.Components), arguments:['TMP_305', 'c_1 (-> [])'] 
[i]Type for TMP_306

Name: TMP_306 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_307(bool) = REF_254 == TMP_306
[i]Type for TMP_307

Name: TMP_307 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_308(None) = SOLIDITY_CALL require(bool,string)(TMP_307,invalid signature)
[i]Type for TMP_308

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
RETURN hash_1
[i]Type for TMP_108

Name: TMP_108 Function: initiateZcTokenFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
hash_1(bytes32) := TMP_108(bytes32)
Finance type key: (-1, -1)
[i]Type for hash

Name: hash Function: initiateZcTokenFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_87(uint256) -> o_1 (-> []).principal
[i]Type for REF_87

Name: REF_87 Function: initiateZcTokenFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_88(uint256) -> filled_8[hash_1]
[i]Type for REF_88

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_109(uint256) = REF_87 (c)- REF_88
[i]Type for TMP_109

Name: TMP_109 Function: initiateZcTokenFillingZcTokenExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_110(bool) = a_1 <= TMP_109
[i]Type for TMP_110

Name: TMP_110 Function: initiateZcTokenFillingZcTokenExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_111(None) = SOLIDITY_CALL require(bool,string)(TMP_110,taker amount > available volume)
[i]Type for TMP_111

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_89(uint256) -> filled_8[hash_1]
[i]Type for REF_89

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
filled_9(mapping(bytes32 => uint256)) := ϕ(['filled_8'])
[i]Type for filled

Name: filled Function: initiateZcTokenFillingZcTokenExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_89(-> filled_9) = REF_89 (c)+ a_1
[i]Type for REF_89

Name: REF_89 Function: initiateZcTokenFillingZcTokenExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_112(uint256) = a_1 (c)* 1000000000000000000
[i]Type for TMP_112

Name: TMP_112 Function: initiateZcTokenFillingZcTokenExit
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
REF_90(uint256) -> o_1 (-> []).principal
[i]Type for REF_90

Name: REF_90 Function: initiateZcTokenFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_113(uint256) = TMP_112 (c)/ REF_90
[i]Type for TMP_113

Name: TMP_113 Function: initiateZcTokenFillingZcTokenExit
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
REF_91(uint256) -> o_1 (-> []).premium
[i]Type for REF_91

Name: REF_91 Function: initiateZcTokenFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_114(uint256) = TMP_113 (c)* REF_91
[i]Type for TMP_114

Name: TMP_114 Function: initiateZcTokenFillingZcTokenExit
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
TMP_115(uint256) = TMP_114 (c)/ 1000000000000000000
[i]Type for TMP_115

Name: TMP_115 Function: initiateZcTokenFillingZcTokenExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
premiumFilled_1(uint256) := TMP_115(uint256)
Finance type key: (-1, -1)
[i]Type for premiumFilled

Name: premiumFilled Function: initiateZcTokenFillingZcTokenExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
TMP_116(uint256) = premiumFilled_1 (c)* 1000000000000000000
[i]Type for TMP_116

Name: TMP_116 Function: initiateZcTokenFillingZcTokenExit
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
REF_92(uint16) -> fenominator_7[0]
[i]Type for REF_92

Name: None Function: None
Num: -1
Den: -1
Address: 1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
TMP_117(uint256) = TMP_116 (c)/ REF_92
[i]Type for TMP_117

Name: TMP_117 Function: initiateZcTokenFillingZcTokenExit
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
TMP_118(uint256) = TMP_117 (c)/ 1000000000000000000
[i]Type for TMP_118

Name: TMP_118 Function: initiateZcTokenFillingZcTokenExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
fee_1(uint256) := TMP_118(uint256)
Finance type key: (-1, -1)
[i]Type for fee

Name: fee Function: initiateZcTokenFillingZcTokenExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
REF_93(address) -> o_1 (-> []).underlying
[i]Type for REF_93

Name: REF_93 Function: initiateZcTokenFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_119 = CONVERT REF_93 to Erc20
[i]Type for TMP_119

Name: TMP_119 Function: initiateZcTokenFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
REF_95(address) -> o_1 (-> []).maker
[i]Type for REF_95

Name: REF_95 Function: initiateZcTokenFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_120(uint256) = a_1 (c)- premiumFilled_1
[i]Type for TMP_120

Name: TMP_120 Function: initiateZcTokenFillingZcTokenExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
TMP_121(uint256) = TMP_120 (c)+ fee_1
[i]Type for TMP_121

Name: TMP_121 Function: initiateZcTokenFillingZcTokenExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_122(bool) = HIGH_LEVEL_CALL, dest:TMP_119(Erc20), function:transferFrom, arguments:['msg.sender', 'REF_95', 'TMP_121']  
[i]Type for TMP_122

Name: TMP_122 Function: initiateZcTokenFillingZcTokenExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
marketPlace_12(address) := ϕ(['marketPlace_28', 'marketPlace_16', 'marketPlace_30', 'marketPlace_5', 'marketPlace_9', 'marketPlace_13', 'marketPlace_21', 'marketPlace_24', 'marketPlace_1', 'marketPlace_11', 'marketPlace_26'])
[i]Type for marketPlace

Name: marketPlace Function: initiateZcTokenFillingZcTokenExit
Num: -1
Den: -1
Address: 2
Norm: u
LF: marketPlace
Value: u
Fields: 
Finance Type: undef
TMP_123 = CONVERT marketPlace_12 to MarketPlace
[i]Type for TMP_123

Name: TMP_123 Function: initiateZcTokenFillingZcTokenExit
Num: -1
Den: -1
Address: 2
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
REF_97(address) -> o_1 (-> []).underlying
[i]Type for REF_97

Name: REF_97 Function: initiateZcTokenFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_98(uint256) -> o_1 (-> []).maturity
[i]Type for REF_98

Name: REF_98 Function: initiateZcTokenFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_99(address) -> o_1 (-> []).maker
[i]Type for REF_99

Name: REF_99 Function: initiateZcTokenFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_124(bool) = HIGH_LEVEL_CALL, dest:TMP_123(MarketPlace), function:p2pZcTokenExchange, arguments:['REF_97', 'REF_98', 'REF_99', 'msg.sender', 'a_1']  
[i]Type for TMP_124

Name: TMP_124 Function: initiateZcTokenFillingZcTokenExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
marketPlace_13(address) := ϕ(['marketPlace_28', 'marketPlace_16', 'marketPlace_30', 'marketPlace_5', 'marketPlace_9', 'marketPlace_13', 'marketPlace_21', 'marketPlace_24', 'marketPlace_1', 'marketPlace_12', 'marketPlace_26'])
[i]Type for marketPlace

Name: marketPlace Function: initiateZcTokenFillingZcTokenExit
Num: -1
Den: -1
Address: 2
Norm: u
LF: marketPlace
Value: u
Fields: 
Finance Type: undef
TMP_125(None) = SOLIDITY_CALL require(bool,string)(TMP_124,zcToken exchange failed)
[i]Type for TMP_125

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_100(bytes32) -> o_1 (-> []).key
[i]Type for REF_100

Name: REF_100 Function: initiateZcTokenFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_101(address) -> o_1 (-> []).maker
[i]Type for REF_101

Name: REF_101 Function: initiateZcTokenFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_102(bool) -> o_1 (-> []).vault
[i]Type for REF_102

Name: REF_102 Function: initiateZcTokenFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_103(bool) -> o_1 (-> []).exit
[i]Type for REF_103

Name: REF_103 Function: initiateZcTokenFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
o_1 (-> [])(Hash.Order) := ϕ(['REF_31'])
[i]Type for o

Name: o Function: initiateZcTokenFillingZcTokenExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: principal, premium, underlying, maker, maturity, key, vault, exit
Finance Type: undef
a_1(uint256) := ϕ(['REF_32'])
[i]Type for a

Name: a Function: initiateZcTokenFillingZcTokenExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
c_1 (-> [])(Sig.Components) := ϕ(['REF_33'])
[i]Type for c

Name: c Function: initiateZcTokenFillingZcTokenExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
filled_7(mapping(bytes32 => uint256)) := ϕ(['filled_12', 'filled_3', 'filled_6', 'filled_24', 'filled_15', 'filled_9', 'filled_0', 'filled_21', 'filled_18'])
[i]Type for filled

Name: filled Function: initiateZcTokenFillingZcTokenExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
marketPlace_10(address) := ϕ(['marketPlace_28', 'marketPlace_16', 'marketPlace_30', 'marketPlace_0', 'marketPlace_9', 'marketPlace_13', 'marketPlace_5', 'marketPlace_21', 'marketPlace_24', 'marketPlace_1', 'marketPlace_26'])
[i]Type for marketPlace

Name: marketPlace Function: initiateZcTokenFillingZcTokenExit
Num: -1
Den: -1
Address: 2
Norm: u
LF: marketPlace
Value: u
Fields: 
Finance Type: undef
fenominator_6(uint16[]) := ϕ(['fenominator_13', 'fenominator_0', 'fenominator_11', 'fenominator_7', 'fenominator_1', 'fenominator_15', 'fenominator_17', 'fenominator_5', 'fenominator_9', 'fenominator_18', 'fenominator_3'])
[i]Type for fenominator

Name: fenominator Function: initiateZcTokenFillingZcTokenExit
Num: -1
Den: -1
Address: 1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
TMP_108(bytes32) = INTERNAL_CALL, Swivel.validOrderHash(Hash.Order,Sig.Components)(o_1 (-> []),c_1 (-> []))
[i]Type for TMP_108

Name: TMP_108 Function: initiateZcTokenFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
hash_1(bytes32) := TMP_108(bytes32)
Finance type key: (-1, -1)
[i]Type for hash

Name: hash Function: initiateZcTokenFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_87(uint256) -> o_1 (-> []).principal
[i]Type for REF_87

Name: REF_87 Function: initiateZcTokenFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_88(uint256) -> filled_8[hash_1]
[i]Type for REF_88

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_109(uint256) = REF_87 (c)- REF_88
[i]Type for TMP_109

Name: TMP_109 Function: initiateZcTokenFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_110(bool) = a_1 <= TMP_109
[i]Type for TMP_110

Name: TMP_110 Function: initiateZcTokenFillingZcTokenExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_111(None) = SOLIDITY_CALL require(bool,string)(TMP_110,taker amount > available volume)
[i]Type for TMP_111

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_89(uint256) -> filled_8[hash_1]
[i]Type for REF_89

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
filled_9(mapping(bytes32 => uint256)) := ϕ(['filled_8'])
[i]Type for filled

Name: filled Function: initiateZcTokenFillingZcTokenExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_89(-> filled_9) = REF_89 (c)+ a_1
[i]Type for REF_89

Name: REF_89 Function: initiateZcTokenFillingZcTokenExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_112(uint256) = a_1 (c)* 1000000000000000000
[i]Type for TMP_112

Name: TMP_112 Function: initiateZcTokenFillingZcTokenExit
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
REF_90(uint256) -> o_1 (-> []).principal
[i]Type for REF_90

Name: REF_90 Function: initiateZcTokenFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_113(uint256) = TMP_112 (c)/ REF_90
[i]Type for TMP_113

Name: TMP_113 Function: initiateZcTokenFillingZcTokenExit
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
REF_91(uint256) -> o_1 (-> []).premium
[i]Type for REF_91

Name: REF_91 Function: initiateZcTokenFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_114(uint256) = TMP_113 (c)* REF_91
[i]Type for TMP_114

Name: TMP_114 Function: initiateZcTokenFillingZcTokenExit
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
TMP_115(uint256) = TMP_114 (c)/ 1000000000000000000
[i]Type for TMP_115

Name: TMP_115 Function: initiateZcTokenFillingZcTokenExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
premiumFilled_1(uint256) := TMP_115(uint256)
Finance type key: (-1, -1)
[i]Type for premiumFilled

Name: premiumFilled Function: initiateZcTokenFillingZcTokenExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
TMP_116(uint256) = premiumFilled_1 (c)* 1000000000000000000
[i]Type for TMP_116

Name: TMP_116 Function: initiateZcTokenFillingZcTokenExit
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
REF_92(uint16) -> fenominator_7[0]
[i]Type for REF_92

Name: None Function: None
Num: -1
Den: -1
Address: 1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
TMP_117(uint256) = TMP_116 (c)/ REF_92
[i]Type for TMP_117

Name: TMP_117 Function: initiateZcTokenFillingZcTokenExit
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
TMP_118(uint256) = TMP_117 (c)/ 1000000000000000000
[i]Type for TMP_118

Name: TMP_118 Function: initiateZcTokenFillingZcTokenExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
fee_1(uint256) := TMP_118(uint256)
Finance type key: (-1, -1)
[i]Type for fee

Name: fee Function: initiateZcTokenFillingZcTokenExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
REF_93(address) -> o_1 (-> []).underlying
[i]Type for REF_93

Name: REF_93 Function: initiateZcTokenFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_119 = CONVERT REF_93 to Erc20
[i]Type for TMP_119

Name: TMP_119 Function: initiateZcTokenFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
REF_95(address) -> o_1 (-> []).maker
[i]Type for REF_95

Name: REF_95 Function: initiateZcTokenFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_120(uint256) = a_1 (c)- premiumFilled_1
[i]Type for TMP_120

Name: TMP_120 Function: initiateZcTokenFillingZcTokenExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
TMP_121(uint256) = TMP_120 (c)+ fee_1
[i]Type for TMP_121

Name: TMP_121 Function: initiateZcTokenFillingZcTokenExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_122(bool) = HIGH_LEVEL_CALL, dest:TMP_119(Erc20), function:transferFrom, arguments:['msg.sender', 'REF_95', 'TMP_121']  
[i]Type for TMP_122

Name: TMP_122 Function: initiateZcTokenFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
marketPlace_12(address) := ϕ(['marketPlace_28', 'marketPlace_16', 'marketPlace_30', 'marketPlace_5', 'marketPlace_9', 'marketPlace_13', 'marketPlace_21', 'marketPlace_24', 'marketPlace_1', 'marketPlace_11', 'marketPlace_26'])
[i]Type for marketPlace

Name: marketPlace Function: initiateZcTokenFillingZcTokenExit
Num: -1
Den: -1
Address: 2
Norm: u
LF: marketPlace
Value: u
Fields: 
Finance Type: undef
TMP_123 = CONVERT marketPlace_12 to MarketPlace
[i]Type for TMP_123

Name: TMP_123 Function: initiateZcTokenFillingZcTokenExit
Num: -1
Den: -1
Address: 2
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
REF_97(address) -> o_1 (-> []).underlying
[i]Type for REF_97

Name: REF_97 Function: initiateZcTokenFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_98(uint256) -> o_1 (-> []).maturity
[i]Type for REF_98

Name: REF_98 Function: initiateZcTokenFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_99(address) -> o_1 (-> []).maker
[i]Type for REF_99

Name: REF_99 Function: initiateZcTokenFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_124(bool) = HIGH_LEVEL_CALL, dest:TMP_123(MarketPlace), function:p2pZcTokenExchange, arguments:['REF_97', 'REF_98', 'REF_99', 'msg.sender', 'a_1']  
[i]Type for TMP_124

Name: TMP_124 Function: initiateZcTokenFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
marketPlace_13(address) := ϕ(['marketPlace_28', 'marketPlace_16', 'marketPlace_30', 'marketPlace_5', 'marketPlace_9', 'marketPlace_13', 'marketPlace_21', 'marketPlace_24', 'marketPlace_1', 'marketPlace_12', 'marketPlace_26'])
[i]Type for marketPlace

Name: marketPlace Function: initiateZcTokenFillingZcTokenExit
Num: -1
Den: -1
Address: 2
Norm: u
LF: marketPlace
Value: u
Fields: 
Finance Type: undef
TMP_125(None) = SOLIDITY_CALL require(bool,string)(TMP_124,zcToken exchange failed)
[i]Type for TMP_125

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_100(bytes32) -> o_1 (-> []).key
[i]Type for REF_100

Name: REF_100 Function: initiateZcTokenFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_101(address) -> o_1 (-> []).maker
[i]Type for REF_101

Name: REF_101 Function: initiateZcTokenFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_102(bool) -> o_1 (-> []).vault
[i]Type for REF_102

Name: REF_102 Function: initiateZcTokenFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_103(bool) -> o_1 (-> []).exit
[i]Type for REF_103

Name: REF_103 Function: initiateZcTokenFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
RETURN True
REF_26(Hash.Order) -> o_1 (-> [])[i_2]
[i]Type for REF_26

Name: o_1 (-> []) Function: initiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_27(uint256) -> a_1 (-> [])[i_2]
[i]Type for REF_27

Name: a_1 (-> []) Function: initiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_28(Sig.Components) -> c_1 (-> [])[i_2]
[i]Type for REF_28

Name: c_1 (-> []) Function: initiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
INTERNAL_CALL, Swivel.initiateZcTokenFillingVaultInitiate(Hash.Order,uint256,Sig.Components)(REF_26,REF_27,REF_28)
o_1 (-> [])(Hash.Order) := ϕ(['REF_26'])
[i]Type for o

Name: o Function: initiateZcTokenFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
a_1(uint256) := ϕ(['REF_27'])
[i]Type for a

Name: a Function: initiateZcTokenFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
c_1 (-> [])(Sig.Components) := ϕ(['REF_28'])
[i]Type for c

Name: c Function: initiateZcTokenFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
filled_4(mapping(bytes32 => uint256)) := ϕ(['filled_12', 'filled_3', 'filled_6', 'filled_24', 'filled_15', 'filled_9', 'filled_0', 'filled_21', 'filled_18'])
[i]Type for filled

Name: filled Function: initiateZcTokenFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
marketPlace_6(address) := ϕ(['marketPlace_28', 'marketPlace_16', 'marketPlace_30', 'marketPlace_0', 'marketPlace_9', 'marketPlace_13', 'marketPlace_5', 'marketPlace_21', 'marketPlace_24', 'marketPlace_1', 'marketPlace_26'])
[i]Type for marketPlace

Name: marketPlace Function: initiateZcTokenFillingVaultInitiate
Num: -1
Den: -1
Address: 2
Norm: u
LF: marketPlace
Value: u
Fields: 
Finance Type: undef
fenominator_4(uint16[]) := ϕ(['fenominator_13', 'fenominator_0', 'fenominator_11', 'fenominator_7', 'fenominator_1', 'fenominator_15', 'fenominator_17', 'fenominator_5', 'fenominator_9', 'fenominator_18', 'fenominator_3'])
[i]Type for fenominator

Name: fenominator Function: initiateZcTokenFillingVaultInitiate
Num: -1
Den: -1
Address: 1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
TMP_82(bytes32) = INTERNAL_CALL, Swivel.validOrderHash(Hash.Order,Sig.Components)(o_1 (-> []),c_1 (-> []))
[i]Type for TMP_82

Name: TMP_82 Function: initiateZcTokenFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
hash_1(bytes32) := TMP_82(bytes32)
Finance type key: (-1, -1)
[i]Type for hash

Name: hash Function: initiateZcTokenFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_64(uint256) -> o_1 (-> []).principal
[i]Type for REF_64

Name: REF_64 Function: initiateZcTokenFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_65(uint256) -> filled_5[hash_1]
[i]Type for REF_65

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_83(uint256) = REF_64 (c)- REF_65
[i]Type for TMP_83

Name: TMP_83 Function: initiateZcTokenFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_84(bool) = a_1 <= TMP_83
[i]Type for TMP_84

Name: TMP_84 Function: initiateZcTokenFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_85(None) = SOLIDITY_CALL require(bool,string)(TMP_84,taker amount > available volume)
[i]Type for TMP_85

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_66(uint256) -> filled_5[hash_1]
[i]Type for REF_66

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
filled_6(mapping(bytes32 => uint256)) := ϕ(['filled_5'])
[i]Type for filled

Name: filled Function: initiateZcTokenFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_66(-> filled_6) = REF_66 (c)+ a_1
[i]Type for REF_66

Name: REF_66 Function: initiateZcTokenFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_86(uint256) = a_1 (c)* 1000000000000000000
[i]Type for TMP_86

Name: TMP_86 Function: initiateZcTokenFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
REF_67(uint256) -> o_1 (-> []).principal
[i]Type for REF_67

Name: REF_67 Function: initiateZcTokenFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_87(uint256) = TMP_86 (c)/ REF_67
[i]Type for TMP_87

Name: TMP_87 Function: initiateZcTokenFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
REF_68(uint256) -> o_1 (-> []).premium
[i]Type for REF_68

Name: REF_68 Function: initiateZcTokenFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_88(uint256) = TMP_87 (c)* REF_68
[i]Type for TMP_88

Name: TMP_88 Function: initiateZcTokenFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
TMP_89(uint256) = TMP_88 (c)/ 1000000000000000000
[i]Type for TMP_89

Name: TMP_89 Function: initiateZcTokenFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
premiumFilled_1(uint256) := TMP_89(uint256)
Finance type key: (-1, -1)
[i]Type for premiumFilled

Name: premiumFilled Function: initiateZcTokenFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
TMP_90(uint256) = premiumFilled_1 (c)* 1000000000000000000
[i]Type for TMP_90

Name: TMP_90 Function: initiateZcTokenFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
REF_69(uint16) -> fenominator_5[0]
[i]Type for REF_69

Name: None Function: None
Num: -1
Den: -1
Address: 1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
TMP_91(uint256) = TMP_90 (c)/ REF_69
[i]Type for TMP_91

Name: TMP_91 Function: initiateZcTokenFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
TMP_92(uint256) = TMP_91 (c)/ 1000000000000000000
[i]Type for TMP_92

Name: TMP_92 Function: initiateZcTokenFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
fee_1(uint256) := TMP_92(uint256)
Finance type key: (-1, -1)
[i]Type for fee

Name: fee Function: initiateZcTokenFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
REF_70(address) -> o_1 (-> []).underlying
[i]Type for REF_70

Name: REF_70 Function: initiateZcTokenFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_93 = CONVERT REF_70 to Erc20
[i]Type for TMP_93

Name: TMP_93 Function: initiateZcTokenFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
uToken_1(Erc20) := TMP_93(Erc20)
Finance type key: (-1, -1)
[i]Type for uToken

Name: uToken Function: initiateZcTokenFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_72(address) -> o_1 (-> []).maker
[i]Type for REF_72

Name: REF_72 Function: initiateZcTokenFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_94(bool) = HIGH_LEVEL_CALL, dest:uToken_1(Erc20), function:transferFrom, arguments:['REF_72', 'msg.sender', 'premiumFilled_1']  
[i]Type for TMP_94

Name: TMP_94 Function: initiateZcTokenFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
marketPlace_8(address) := ϕ(['marketPlace_28', 'marketPlace_16', 'marketPlace_30', 'marketPlace_5', 'marketPlace_9', 'marketPlace_13', 'marketPlace_21', 'marketPlace_24', 'marketPlace_7', 'marketPlace_1', 'marketPlace_26'])
[i]Type for marketPlace

Name: marketPlace Function: initiateZcTokenFillingVaultInitiate
Num: -1
Den: -1
Address: 2
Norm: u
LF: marketPlace
Value: u
Fields: 
Finance Type: undef
TMP_95 = CONVERT this to address
[i]Type for TMP_95

Name: TMP_95 Function: initiateZcTokenFillingVaultInitiate
Num: -1
Den: -1
Address: 5
Norm: u
LF: Swivel
Value: u
Fields: 
Finance Type: undef
TMP_96(uint256) = a_1 (c)+ fee_1
[i]Type for TMP_96

Name: TMP_96 Function: initiateZcTokenFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
TMP_97(bool) = HIGH_LEVEL_CALL, dest:uToken_1(Erc20), function:transferFrom, arguments:['msg.sender', 'TMP_95', 'TMP_96']  
[i]Type for TMP_97

Name: TMP_97 Function: initiateZcTokenFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
marketPlace_9(address) := ϕ(['marketPlace_28', 'marketPlace_16', 'marketPlace_30', 'marketPlace_5', 'marketPlace_9', 'marketPlace_13', 'marketPlace_21', 'marketPlace_24', 'marketPlace_1', 'marketPlace_8', 'marketPlace_26'])
[i]Type for marketPlace

Name: marketPlace Function: initiateZcTokenFillingVaultInitiate
Num: -1
Den: -1
Address: 2
Norm: u
LF: marketPlace
Value: u
Fields: 
Finance Type: undef
TMP_98 = CONVERT marketPlace_9 to MarketPlace
[i]Type for TMP_98

Name: TMP_98 Function: initiateZcTokenFillingVaultInitiate
Num: -1
Den: -1
Address: 2
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
mPlace_1(MarketPlace) := TMP_98(MarketPlace)
Finance type key: (-1, -1)
[i]Type for mPlace

Name: mPlace Function: initiateZcTokenFillingVaultInitiate
Num: -1
Den: -1
Address: 2
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
REF_75(address) -> o_1 (-> []).underlying
[i]Type for REF_75

Name: REF_75 Function: initiateZcTokenFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_76(uint256) -> o_1 (-> []).maturity
[i]Type for REF_76

Name: REF_76 Function: initiateZcTokenFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_99(address) = HIGH_LEVEL_CALL, dest:mPlace_1(MarketPlace), function:cTokenAddress, arguments:['REF_75', 'REF_76']  
[i]Type for TMP_99

Name: TMP_99 Function: initiateZcTokenFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
cTokenAddr_1(address) := TMP_99(address)
Finance type key: (-1, -1)
[i]Type for cTokenAddr

Name: cTokenAddr Function: initiateZcTokenFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_100(bool) = HIGH_LEVEL_CALL, dest:uToken_1(Erc20), function:approve, arguments:['cTokenAddr_1', 'a_1']  
[i]Type for TMP_100

Name: TMP_100 Function: initiateZcTokenFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_101 = CONVERT cTokenAddr_1 to CErc20
[i]Type for TMP_101

Name: TMP_101 Function: initiateZcTokenFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
TMP_102(uint256) = HIGH_LEVEL_CALL, dest:TMP_101(CErc20), function:mint, arguments:['a_1']  
[i]Type for TMP_102

Name: TMP_102 Function: initiateZcTokenFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_103(bool) = TMP_102 == 0
[i]Type for TMP_103

Name: TMP_103 Function: initiateZcTokenFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_104(None) = SOLIDITY_CALL require(bool,string)(TMP_103,minting CToken Failed)
[i]Type for TMP_104

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_80(address) -> o_1 (-> []).underlying
[i]Type for REF_80

Name: REF_80 Function: initiateZcTokenFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_81(uint256) -> o_1 (-> []).maturity
[i]Type for REF_81

Name: REF_81 Function: initiateZcTokenFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_82(address) -> o_1 (-> []).maker
[i]Type for REF_82

Name: REF_82 Function: initiateZcTokenFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_105(bool) = HIGH_LEVEL_CALL, dest:mPlace_1(MarketPlace), function:custodialInitiate, arguments:['REF_80', 'REF_81', 'msg.sender', 'REF_82', 'a_1']  
[i]Type for TMP_105

Name: TMP_105 Function: initiateZcTokenFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_106(None) = SOLIDITY_CALL require(bool,string)(TMP_105,custodial initiate failed)
[i]Type for TMP_106

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_83(bytes32) -> o_1 (-> []).key
[i]Type for REF_83

Name: REF_83 Function: initiateZcTokenFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_84(address) -> o_1 (-> []).maker
[i]Type for REF_84

Name: REF_84 Function: initiateZcTokenFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_85(bool) -> o_1 (-> []).vault
[i]Type for REF_85

Name: REF_85 Function: initiateZcTokenFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_86(bool) -> o_1 (-> []).exit
[i]Type for REF_86

Name: REF_86 Function: initiateZcTokenFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
o_1 (-> [])(Hash.Order) := ϕ(['REF_26'])
[i]Type for o

Name: o Function: initiateZcTokenFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: principal, premium, underlying, maker, maturity, key, vault, exit
Finance Type: undef
a_1(uint256) := ϕ(['REF_27'])
[i]Type for a

Name: a Function: initiateZcTokenFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
c_1 (-> [])(Sig.Components) := ϕ(['REF_28'])
[i]Type for c

Name: c Function: initiateZcTokenFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
filled_4(mapping(bytes32 => uint256)) := ϕ(['filled_12', 'filled_3', 'filled_6', 'filled_24', 'filled_15', 'filled_9', 'filled_0', 'filled_21', 'filled_18'])
[i]Type for filled

Name: filled Function: initiateZcTokenFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
marketPlace_6(address) := ϕ(['marketPlace_28', 'marketPlace_16', 'marketPlace_30', 'marketPlace_0', 'marketPlace_9', 'marketPlace_13', 'marketPlace_5', 'marketPlace_21', 'marketPlace_24', 'marketPlace_1', 'marketPlace_26'])
[i]Type for marketPlace

Name: marketPlace Function: initiateZcTokenFillingVaultInitiate
Num: -1
Den: -1
Address: 2
Norm: u
LF: marketPlace
Value: u
Fields: 
Finance Type: undef
fenominator_4(uint16[]) := ϕ(['fenominator_13', 'fenominator_0', 'fenominator_11', 'fenominator_7', 'fenominator_1', 'fenominator_15', 'fenominator_17', 'fenominator_5', 'fenominator_9', 'fenominator_18', 'fenominator_3'])
[i]Type for fenominator

Name: fenominator Function: initiateZcTokenFillingVaultInitiate
Num: -1
Den: -1
Address: 1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
TMP_82(bytes32) = INTERNAL_CALL, Swivel.validOrderHash(Hash.Order,Sig.Components)(o_1 (-> []),c_1 (-> []))
[i]Type for TMP_82

Name: TMP_82 Function: initiateZcTokenFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
hash_1(bytes32) := TMP_82(bytes32)
Finance type key: (-1, -1)
[i]Type for hash

Name: hash Function: initiateZcTokenFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_64(uint256) -> o_1 (-> []).principal
[i]Type for REF_64

Name: REF_64 Function: initiateZcTokenFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_65(uint256) -> filled_5[hash_1]
[i]Type for REF_65

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_83(uint256) = REF_64 (c)- REF_65
[i]Type for TMP_83

Name: TMP_83 Function: initiateZcTokenFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_84(bool) = a_1 <= TMP_83
[i]Type for TMP_84

Name: TMP_84 Function: initiateZcTokenFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_85(None) = SOLIDITY_CALL require(bool,string)(TMP_84,taker amount > available volume)
[i]Type for TMP_85

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_66(uint256) -> filled_5[hash_1]
[i]Type for REF_66

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
filled_6(mapping(bytes32 => uint256)) := ϕ(['filled_5'])
[i]Type for filled

Name: filled Function: initiateZcTokenFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_66(-> filled_6) = REF_66 (c)+ a_1
[i]Type for REF_66

Name: REF_66 Function: initiateZcTokenFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_86(uint256) = a_1 (c)* 1000000000000000000
[i]Type for TMP_86

Name: TMP_86 Function: initiateZcTokenFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
REF_67(uint256) -> o_1 (-> []).principal
[i]Type for REF_67

Name: REF_67 Function: initiateZcTokenFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_87(uint256) = TMP_86 (c)/ REF_67
[i]Type for TMP_87

Name: TMP_87 Function: initiateZcTokenFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
REF_68(uint256) -> o_1 (-> []).premium
[i]Type for REF_68

Name: REF_68 Function: initiateZcTokenFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_88(uint256) = TMP_87 (c)* REF_68
[i]Type for TMP_88

Name: TMP_88 Function: initiateZcTokenFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
TMP_89(uint256) = TMP_88 (c)/ 1000000000000000000
[i]Type for TMP_89

Name: TMP_89 Function: initiateZcTokenFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
premiumFilled_1(uint256) := TMP_89(uint256)
Finance type key: (-1, -1)
[i]Type for premiumFilled

Name: premiumFilled Function: initiateZcTokenFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
TMP_90(uint256) = premiumFilled_1 (c)* 1000000000000000000
[i]Type for TMP_90

Name: TMP_90 Function: initiateZcTokenFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
REF_69(uint16) -> fenominator_5[0]
[i]Type for REF_69

Name: None Function: None
Num: -1
Den: -1
Address: 1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
TMP_91(uint256) = TMP_90 (c)/ REF_69
[i]Type for TMP_91

Name: TMP_91 Function: initiateZcTokenFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
TMP_92(uint256) = TMP_91 (c)/ 1000000000000000000
[i]Type for TMP_92

Name: TMP_92 Function: initiateZcTokenFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
fee_1(uint256) := TMP_92(uint256)
Finance type key: (-1, -1)
[i]Type for fee

Name: fee Function: initiateZcTokenFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
REF_70(address) -> o_1 (-> []).underlying
[i]Type for REF_70

Name: REF_70 Function: initiateZcTokenFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_93 = CONVERT REF_70 to Erc20
[i]Type for TMP_93

Name: TMP_93 Function: initiateZcTokenFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
uToken_1(Erc20) := TMP_93(Erc20)
Finance type key: (-1, -1)
[i]Type for uToken

Name: uToken Function: initiateZcTokenFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_72(address) -> o_1 (-> []).maker
[i]Type for REF_72

Name: REF_72 Function: initiateZcTokenFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_94(bool) = HIGH_LEVEL_CALL, dest:uToken_1(Erc20), function:transferFrom, arguments:['REF_72', 'msg.sender', 'premiumFilled_1']  
[i]Type for TMP_94

Name: TMP_94 Function: initiateZcTokenFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
marketPlace_8(address) := ϕ(['marketPlace_28', 'marketPlace_16', 'marketPlace_30', 'marketPlace_5', 'marketPlace_9', 'marketPlace_13', 'marketPlace_21', 'marketPlace_24', 'marketPlace_7', 'marketPlace_1', 'marketPlace_26'])
[i]Type for marketPlace

Name: marketPlace Function: initiateZcTokenFillingVaultInitiate
Num: -1
Den: -1
Address: 2
Norm: u
LF: marketPlace
Value: u
Fields: 
Finance Type: undef
TMP_95 = CONVERT this to address
[i]Type for TMP_95

Name: TMP_95 Function: initiateZcTokenFillingVaultInitiate
Num: 
Den: 
Address: 5
Norm: u
LF: Swivel
Value: u
Fields: 
Finance Type: undef
TMP_96(uint256) = a_1 (c)+ fee_1
[i]Type for TMP_96

Name: TMP_96 Function: initiateZcTokenFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
TMP_97(bool) = HIGH_LEVEL_CALL, dest:uToken_1(Erc20), function:transferFrom, arguments:['msg.sender', 'TMP_95', 'TMP_96']  
[i]Type for TMP_97

Name: TMP_97 Function: initiateZcTokenFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
marketPlace_9(address) := ϕ(['marketPlace_28', 'marketPlace_16', 'marketPlace_30', 'marketPlace_5', 'marketPlace_9', 'marketPlace_13', 'marketPlace_21', 'marketPlace_24', 'marketPlace_1', 'marketPlace_8', 'marketPlace_26'])
[i]Type for marketPlace

Name: marketPlace Function: initiateZcTokenFillingVaultInitiate
Num: -1
Den: -1
Address: 2
Norm: u
LF: marketPlace
Value: u
Fields: 
Finance Type: undef
TMP_98 = CONVERT marketPlace_9 to MarketPlace
[i]Type for TMP_98

Name: TMP_98 Function: initiateZcTokenFillingVaultInitiate
Num: -1
Den: -1
Address: 2
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
mPlace_1(MarketPlace) := TMP_98(MarketPlace)
Finance type key: (-1, -1)
[i]Type for mPlace

Name: mPlace Function: initiateZcTokenFillingVaultInitiate
Num: -1
Den: -1
Address: 2
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
REF_75(address) -> o_1 (-> []).underlying
[i]Type for REF_75

Name: REF_75 Function: initiateZcTokenFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_76(uint256) -> o_1 (-> []).maturity
[i]Type for REF_76

Name: REF_76 Function: initiateZcTokenFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_99(address) = HIGH_LEVEL_CALL, dest:mPlace_1(MarketPlace), function:cTokenAddress, arguments:['REF_75', 'REF_76']  
[i]Type for TMP_99

Name: TMP_99 Function: initiateZcTokenFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
cTokenAddr_1(address) := TMP_99(address)
Finance type key: (-1, -1)
[i]Type for cTokenAddr

Name: cTokenAddr Function: initiateZcTokenFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_100(bool) = HIGH_LEVEL_CALL, dest:uToken_1(Erc20), function:approve, arguments:['cTokenAddr_1', 'a_1']  
[i]Type for TMP_100

Name: TMP_100 Function: initiateZcTokenFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_101 = CONVERT cTokenAddr_1 to CErc20
[i]Type for TMP_101

Name: TMP_101 Function: initiateZcTokenFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
TMP_102(uint256) = HIGH_LEVEL_CALL, dest:TMP_101(CErc20), function:mint, arguments:['a_1']  
[i]Type for TMP_102

Name: TMP_102 Function: initiateZcTokenFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_103(bool) = TMP_102 == 0
[i]Type for TMP_103

Name: TMP_103 Function: initiateZcTokenFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_104(None) = SOLIDITY_CALL require(bool,string)(TMP_103,minting CToken Failed)
[i]Type for TMP_104

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_80(address) -> o_1 (-> []).underlying
[i]Type for REF_80

Name: REF_80 Function: initiateZcTokenFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_81(uint256) -> o_1 (-> []).maturity
[i]Type for REF_81

Name: REF_81 Function: initiateZcTokenFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_82(address) -> o_1 (-> []).maker
[i]Type for REF_82

Name: REF_82 Function: initiateZcTokenFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_105(bool) = HIGH_LEVEL_CALL, dest:mPlace_1(MarketPlace), function:custodialInitiate, arguments:['REF_80', 'REF_81', 'msg.sender', 'REF_82', 'a_1']  
[i]Type for TMP_105

Name: TMP_105 Function: initiateZcTokenFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_106(None) = SOLIDITY_CALL require(bool,string)(TMP_105,custodial initiate failed)
[i]Type for TMP_106

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_83(bytes32) -> o_1 (-> []).key
[i]Type for REF_83

Name: REF_83 Function: initiateZcTokenFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_84(address) -> o_1 (-> []).maker
[i]Type for REF_84

Name: REF_84 Function: initiateZcTokenFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_85(bool) -> o_1 (-> []).vault
[i]Type for REF_85

Name: REF_85 Function: initiateZcTokenFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_86(bool) -> o_1 (-> []).exit
[i]Type for REF_86

Name: REF_86 Function: initiateZcTokenFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_34(Hash.Order) -> o_1 (-> [])[i_2]
[i]Type for REF_34

Name: o_1 (-> []) Function: initiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_35(uint256) -> a_1 (-> [])[i_2]
[i]Type for REF_35

Name: a_1 (-> []) Function: initiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_36(Sig.Components) -> c_1 (-> [])[i_2]
[i]Type for REF_36

Name: c_1 (-> []) Function: initiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
INTERNAL_CALL, Swivel.initiateVaultFillingVaultExit(Hash.Order,uint256,Sig.Components)(REF_34,REF_35,REF_36)
o_1 (-> [])(Hash.Order) := ϕ(['REF_34'])
[i]Type for o

Name: o Function: initiateVaultFillingVaultExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
a_1(uint256) := ϕ(['REF_35'])
[i]Type for a

Name: a Function: initiateVaultFillingVaultExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
c_1 (-> [])(Sig.Components) := ϕ(['REF_36'])
[i]Type for c

Name: c Function: initiateVaultFillingVaultExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
filled_10(mapping(bytes32 => uint256)) := ϕ(['filled_12', 'filled_3', 'filled_6', 'filled_24', 'filled_15', 'filled_9', 'filled_0', 'filled_21', 'filled_18'])
[i]Type for filled

Name: filled Function: initiateVaultFillingVaultExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
marketPlace_14(address) := ϕ(['marketPlace_28', 'marketPlace_16', 'marketPlace_30', 'marketPlace_0', 'marketPlace_9', 'marketPlace_13', 'marketPlace_5', 'marketPlace_21', 'marketPlace_24', 'marketPlace_1', 'marketPlace_26'])
[i]Type for marketPlace

Name: marketPlace Function: initiateVaultFillingVaultExit
Num: -1
Den: -1
Address: 2
Norm: u
LF: marketPlace
Value: u
Fields: 
Finance Type: undef
fenominator_8(uint16[]) := ϕ(['fenominator_13', 'fenominator_0', 'fenominator_11', 'fenominator_7', 'fenominator_1', 'fenominator_15', 'fenominator_17', 'fenominator_5', 'fenominator_9', 'fenominator_18', 'fenominator_3'])
[i]Type for fenominator

Name: fenominator Function: initiateVaultFillingVaultExit
Num: -1
Den: -1
Address: 1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
TMP_127(bytes32) = INTERNAL_CALL, Swivel.validOrderHash(Hash.Order,Sig.Components)(o_1 (-> []),c_1 (-> []))
[i]Type for TMP_127

Name: TMP_127 Function: initiateVaultFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
hash_1(bytes32) := TMP_127(bytes32)
Finance type key: (-1, -1)
[i]Type for hash

Name: hash Function: initiateVaultFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_104(uint256) -> o_1 (-> []).premium
[i]Type for REF_104

Name: REF_104 Function: initiateVaultFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_105(uint256) -> filled_11[hash_1]
[i]Type for REF_105

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_128(uint256) = REF_104 (c)- REF_105
[i]Type for TMP_128

Name: TMP_128 Function: initiateVaultFillingVaultExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_129(bool) = a_1 <= TMP_128
[i]Type for TMP_129

Name: TMP_129 Function: initiateVaultFillingVaultExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_130(None) = SOLIDITY_CALL require(bool,string)(TMP_129,taker amount > available volume)
[i]Type for TMP_130

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_106(uint256) -> filled_11[hash_1]
[i]Type for REF_106

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
filled_12(mapping(bytes32 => uint256)) := ϕ(['filled_11'])
[i]Type for filled

Name: filled Function: initiateVaultFillingVaultExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_106(-> filled_12) = REF_106 (c)+ a_1
[i]Type for REF_106

Name: REF_106 Function: initiateVaultFillingVaultExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_131(uint256) = a_1 (c)* 1000000000000000000
[i]Type for TMP_131

Name: TMP_131 Function: initiateVaultFillingVaultExit
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
REF_107(uint256) -> o_1 (-> []).premium
[i]Type for REF_107

Name: REF_107 Function: initiateVaultFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_132(uint256) = TMP_131 (c)/ REF_107
[i]Type for TMP_132

Name: TMP_132 Function: initiateVaultFillingVaultExit
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
REF_108(uint256) -> o_1 (-> []).principal
[i]Type for REF_108

Name: REF_108 Function: initiateVaultFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_133(uint256) = TMP_132 (c)* REF_108
[i]Type for TMP_133

Name: TMP_133 Function: initiateVaultFillingVaultExit
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
TMP_134(uint256) = TMP_133 (c)/ 1000000000000000000
[i]Type for TMP_134

Name: TMP_134 Function: initiateVaultFillingVaultExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
principalFilled_1(uint256) := TMP_134(uint256)
Finance type key: (-1, -1)
[i]Type for principalFilled

Name: principalFilled Function: initiateVaultFillingVaultExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
TMP_135(uint256) = principalFilled_1 (c)* 1000000000000000000
[i]Type for TMP_135

Name: TMP_135 Function: initiateVaultFillingVaultExit
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
REF_109(uint16) -> fenominator_9[2]
[i]Type for REF_109

Name: None Function: None
Num: -1
Den: -1
Address: 1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
TMP_136(uint256) = TMP_135 (c)/ REF_109
[i]Type for TMP_136

Name: TMP_136 Function: initiateVaultFillingVaultExit
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
TMP_137(uint256) = TMP_136 (c)/ 1000000000000000000
[i]Type for TMP_137

Name: TMP_137 Function: initiateVaultFillingVaultExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
fee_1(uint256) := TMP_137(uint256)
Finance type key: (-1, -1)
[i]Type for fee

Name: fee Function: initiateVaultFillingVaultExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
REF_110(address) -> o_1 (-> []).underlying
[i]Type for REF_110

Name: REF_110 Function: initiateVaultFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_138 = CONVERT REF_110 to Erc20
[i]Type for TMP_138

Name: TMP_138 Function: initiateVaultFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
REF_112(address) -> o_1 (-> []).maker
[i]Type for REF_112

Name: REF_112 Function: initiateVaultFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_139(bool) = HIGH_LEVEL_CALL, dest:TMP_138(Erc20), function:transferFrom, arguments:['msg.sender', 'REF_112', 'a_1']  
[i]Type for TMP_139

Name: TMP_139 Function: initiateVaultFillingVaultExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
marketPlace_16(address) := ϕ(['marketPlace_28', 'marketPlace_16', 'marketPlace_30', 'marketPlace_15', 'marketPlace_5', 'marketPlace_9', 'marketPlace_13', 'marketPlace_21', 'marketPlace_24', 'marketPlace_1', 'marketPlace_26'])
[i]Type for marketPlace

Name: marketPlace Function: initiateVaultFillingVaultExit
Num: -1
Den: -1
Address: 2
Norm: u
LF: marketPlace
Value: u
Fields: 
Finance Type: undef
TMP_140 = CONVERT marketPlace_16 to MarketPlace
[i]Type for TMP_140

Name: TMP_140 Function: initiateVaultFillingVaultExit
Num: -1
Den: -1
Address: 2
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
mPlace_1(MarketPlace) := TMP_140(MarketPlace)
Finance type key: (-1, -1)
[i]Type for mPlace

Name: mPlace Function: initiateVaultFillingVaultExit
Num: -1
Den: -1
Address: 2
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
REF_114(address) -> o_1 (-> []).underlying
[i]Type for REF_114

Name: REF_114 Function: initiateVaultFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_115(uint256) -> o_1 (-> []).maturity
[i]Type for REF_115

Name: REF_115 Function: initiateVaultFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_116(address) -> o_1 (-> []).maker
[i]Type for REF_116

Name: REF_116 Function: initiateVaultFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_141(bool) = HIGH_LEVEL_CALL, dest:mPlace_1(MarketPlace), function:p2pVaultExchange, arguments:['REF_114', 'REF_115', 'REF_116', 'msg.sender', 'principalFilled_1']  
[i]Type for TMP_141

Name: TMP_141 Function: initiateVaultFillingVaultExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_142(None) = SOLIDITY_CALL require(bool,string)(TMP_141,vault exchange failed)
[i]Type for TMP_142

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_118(address) -> o_1 (-> []).underlying
[i]Type for REF_118

Name: REF_118 Function: initiateVaultFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_119(uint256) -> o_1 (-> []).maturity
[i]Type for REF_119

Name: REF_119 Function: initiateVaultFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_143(bool) = HIGH_LEVEL_CALL, dest:mPlace_1(MarketPlace), function:transferVaultNotionalFee, arguments:['REF_118', 'REF_119', 'msg.sender', 'fee_1']  
[i]Type for TMP_143

Name: TMP_143 Function: initiateVaultFillingVaultExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_144(None) = SOLIDITY_CALL require(bool,string)(TMP_143,notional fee transfer failed)
[i]Type for TMP_144

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_120(bytes32) -> o_1 (-> []).key
[i]Type for REF_120

Name: REF_120 Function: initiateVaultFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_121(address) -> o_1 (-> []).maker
[i]Type for REF_121

Name: REF_121 Function: initiateVaultFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_122(bool) -> o_1 (-> []).vault
[i]Type for REF_122

Name: REF_122 Function: initiateVaultFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_123(bool) -> o_1 (-> []).exit
[i]Type for REF_123

Name: REF_123 Function: initiateVaultFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
o_1 (-> [])(Hash.Order) := ϕ(['REF_34'])
[i]Type for o

Name: o Function: initiateVaultFillingVaultExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: premium, principal, underlying, maker, maturity, key, vault, exit
Finance Type: undef
a_1(uint256) := ϕ(['REF_35'])
[i]Type for a

Name: a Function: initiateVaultFillingVaultExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
c_1 (-> [])(Sig.Components) := ϕ(['REF_36'])
[i]Type for c

Name: c Function: initiateVaultFillingVaultExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
filled_10(mapping(bytes32 => uint256)) := ϕ(['filled_12', 'filled_3', 'filled_6', 'filled_24', 'filled_15', 'filled_9', 'filled_0', 'filled_21', 'filled_18'])
[i]Type for filled

Name: filled Function: initiateVaultFillingVaultExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
marketPlace_14(address) := ϕ(['marketPlace_28', 'marketPlace_16', 'marketPlace_30', 'marketPlace_0', 'marketPlace_9', 'marketPlace_13', 'marketPlace_5', 'marketPlace_21', 'marketPlace_24', 'marketPlace_1', 'marketPlace_26'])
[i]Type for marketPlace

Name: marketPlace Function: initiateVaultFillingVaultExit
Num: -1
Den: -1
Address: 2
Norm: u
LF: marketPlace
Value: u
Fields: 
Finance Type: undef
fenominator_8(uint16[]) := ϕ(['fenominator_13', 'fenominator_0', 'fenominator_11', 'fenominator_7', 'fenominator_1', 'fenominator_15', 'fenominator_17', 'fenominator_5', 'fenominator_9', 'fenominator_18', 'fenominator_3'])
[i]Type for fenominator

Name: fenominator Function: initiateVaultFillingVaultExit
Num: -1
Den: -1
Address: 1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
TMP_127(bytes32) = INTERNAL_CALL, Swivel.validOrderHash(Hash.Order,Sig.Components)(o_1 (-> []),c_1 (-> []))
[i]Type for TMP_127

Name: TMP_127 Function: initiateVaultFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
hash_1(bytes32) := TMP_127(bytes32)
Finance type key: (-1, -1)
[i]Type for hash

Name: hash Function: initiateVaultFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_104(uint256) -> o_1 (-> []).premium
[i]Type for REF_104

Name: REF_104 Function: initiateVaultFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_105(uint256) -> filled_11[hash_1]
[i]Type for REF_105

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_128(uint256) = REF_104 (c)- REF_105
[i]Type for TMP_128

Name: TMP_128 Function: initiateVaultFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_129(bool) = a_1 <= TMP_128
[i]Type for TMP_129

Name: TMP_129 Function: initiateVaultFillingVaultExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_130(None) = SOLIDITY_CALL require(bool,string)(TMP_129,taker amount > available volume)
[i]Type for TMP_130

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_106(uint256) -> filled_11[hash_1]
[i]Type for REF_106

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
filled_12(mapping(bytes32 => uint256)) := ϕ(['filled_11'])
[i]Type for filled

Name: filled Function: initiateVaultFillingVaultExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_106(-> filled_12) = REF_106 (c)+ a_1
[i]Type for REF_106

Name: REF_106 Function: initiateVaultFillingVaultExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_131(uint256) = a_1 (c)* 1000000000000000000
[i]Type for TMP_131

Name: TMP_131 Function: initiateVaultFillingVaultExit
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
REF_107(uint256) -> o_1 (-> []).premium
[i]Type for REF_107

Name: REF_107 Function: initiateVaultFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_132(uint256) = TMP_131 (c)/ REF_107
[i]Type for TMP_132

Name: TMP_132 Function: initiateVaultFillingVaultExit
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
REF_108(uint256) -> o_1 (-> []).principal
[i]Type for REF_108

Name: REF_108 Function: initiateVaultFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_133(uint256) = TMP_132 (c)* REF_108
[i]Type for TMP_133

Name: TMP_133 Function: initiateVaultFillingVaultExit
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
TMP_134(uint256) = TMP_133 (c)/ 1000000000000000000
[i]Type for TMP_134

Name: TMP_134 Function: initiateVaultFillingVaultExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
principalFilled_1(uint256) := TMP_134(uint256)
Finance type key: (-1, -1)
[i]Type for principalFilled

Name: principalFilled Function: initiateVaultFillingVaultExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
TMP_135(uint256) = principalFilled_1 (c)* 1000000000000000000
[i]Type for TMP_135

Name: TMP_135 Function: initiateVaultFillingVaultExit
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
REF_109(uint16) -> fenominator_9[2]
[i]Type for REF_109

Name: None Function: None
Num: -1
Den: -1
Address: 1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
TMP_136(uint256) = TMP_135 (c)/ REF_109
[i]Type for TMP_136

Name: TMP_136 Function: initiateVaultFillingVaultExit
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
TMP_137(uint256) = TMP_136 (c)/ 1000000000000000000
[i]Type for TMP_137

Name: TMP_137 Function: initiateVaultFillingVaultExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
fee_1(uint256) := TMP_137(uint256)
Finance type key: (-1, -1)
[i]Type for fee

Name: fee Function: initiateVaultFillingVaultExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
REF_110(address) -> o_1 (-> []).underlying
[i]Type for REF_110

Name: REF_110 Function: initiateVaultFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_138 = CONVERT REF_110 to Erc20
[i]Type for TMP_138

Name: TMP_138 Function: initiateVaultFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
REF_112(address) -> o_1 (-> []).maker
[i]Type for REF_112

Name: REF_112 Function: initiateVaultFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_139(bool) = HIGH_LEVEL_CALL, dest:TMP_138(Erc20), function:transferFrom, arguments:['msg.sender', 'REF_112', 'a_1']  
[i]Type for TMP_139

Name: TMP_139 Function: initiateVaultFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
marketPlace_16(address) := ϕ(['marketPlace_28', 'marketPlace_16', 'marketPlace_30', 'marketPlace_15', 'marketPlace_5', 'marketPlace_9', 'marketPlace_13', 'marketPlace_21', 'marketPlace_24', 'marketPlace_1', 'marketPlace_26'])
[i]Type for marketPlace

Name: marketPlace Function: initiateVaultFillingVaultExit
Num: -1
Den: -1
Address: 2
Norm: u
LF: marketPlace
Value: u
Fields: 
Finance Type: undef
TMP_140 = CONVERT marketPlace_16 to MarketPlace
[i]Type for TMP_140

Name: TMP_140 Function: initiateVaultFillingVaultExit
Num: -1
Den: -1
Address: 2
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
mPlace_1(MarketPlace) := TMP_140(MarketPlace)
Finance type key: (-1, -1)
[i]Type for mPlace

Name: mPlace Function: initiateVaultFillingVaultExit
Num: -1
Den: -1
Address: 2
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
REF_114(address) -> o_1 (-> []).underlying
[i]Type for REF_114

Name: REF_114 Function: initiateVaultFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_115(uint256) -> o_1 (-> []).maturity
[i]Type for REF_115

Name: REF_115 Function: initiateVaultFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_116(address) -> o_1 (-> []).maker
[i]Type for REF_116

Name: REF_116 Function: initiateVaultFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_141(bool) = HIGH_LEVEL_CALL, dest:mPlace_1(MarketPlace), function:p2pVaultExchange, arguments:['REF_114', 'REF_115', 'REF_116', 'msg.sender', 'principalFilled_1']  
[i]Type for TMP_141

Name: TMP_141 Function: initiateVaultFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_142(None) = SOLIDITY_CALL require(bool,string)(TMP_141,vault exchange failed)
[i]Type for TMP_142

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_118(address) -> o_1 (-> []).underlying
[i]Type for REF_118

Name: REF_118 Function: initiateVaultFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_119(uint256) -> o_1 (-> []).maturity
[i]Type for REF_119

Name: REF_119 Function: initiateVaultFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_143(bool) = HIGH_LEVEL_CALL, dest:mPlace_1(MarketPlace), function:transferVaultNotionalFee, arguments:['REF_118', 'REF_119', 'msg.sender', 'fee_1']  
[i]Type for TMP_143

Name: TMP_143 Function: initiateVaultFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_144(None) = SOLIDITY_CALL require(bool,string)(TMP_143,notional fee transfer failed)
[i]Type for TMP_144

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_120(bytes32) -> o_1 (-> []).key
[i]Type for REF_120

Name: REF_120 Function: initiateVaultFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_121(address) -> o_1 (-> []).maker
[i]Type for REF_121

Name: REF_121 Function: initiateVaultFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_122(bool) -> o_1 (-> []).vault
[i]Type for REF_122

Name: REF_122 Function: initiateVaultFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_123(bool) -> o_1 (-> []).exit
[i]Type for REF_123

Name: REF_123 Function: initiateVaultFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_23(Hash.Order) -> o_1 (-> [])[i_2]
[i]Type for REF_23

Name: o_1 (-> []) Function: initiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_24(uint256) -> a_1 (-> [])[i_2]
[i]Type for REF_24

Name: a_1 (-> []) Function: initiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_25(Sig.Components) -> c_1 (-> [])[i_2]
[i]Type for REF_25

Name: c_1 (-> []) Function: initiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
INTERNAL_CALL, Swivel.initiateVaultFillingZcTokenInitiate(Hash.Order,uint256,Sig.Components)(REF_23,REF_24,REF_25)
o_1 (-> [])(Hash.Order) := ϕ(['REF_23'])
[i]Type for o

Name: o Function: initiateVaultFillingZcTokenInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
a_1(uint256) := ϕ(['REF_24'])
[i]Type for a

Name: a Function: initiateVaultFillingZcTokenInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
c_1 (-> [])(Sig.Components) := ϕ(['REF_25'])
[i]Type for c

Name: c Function: initiateVaultFillingZcTokenInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
filled_1(mapping(bytes32 => uint256)) := ϕ(['filled_12', 'filled_3', 'filled_6', 'filled_24', 'filled_15', 'filled_9', 'filled_0', 'filled_21', 'filled_18'])
[i]Type for filled

Name: filled Function: initiateVaultFillingZcTokenInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
marketPlace_2(address) := ϕ(['marketPlace_28', 'marketPlace_16', 'marketPlace_30', 'marketPlace_0', 'marketPlace_9', 'marketPlace_13', 'marketPlace_5', 'marketPlace_21', 'marketPlace_24', 'marketPlace_1', 'marketPlace_26'])
[i]Type for marketPlace

Name: marketPlace Function: initiateVaultFillingZcTokenInitiate
Num: -1
Den: -1
Address: 2
Norm: u
LF: marketPlace
Value: u
Fields: 
Finance Type: undef
fenominator_2(uint16[]) := ϕ(['fenominator_13', 'fenominator_0', 'fenominator_11', 'fenominator_7', 'fenominator_1', 'fenominator_15', 'fenominator_17', 'fenominator_5', 'fenominator_9', 'fenominator_18', 'fenominator_3'])
[i]Type for fenominator

Name: fenominator Function: initiateVaultFillingZcTokenInitiate
Num: -1
Den: -1
Address: 1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
TMP_55(bytes32) = INTERNAL_CALL, Swivel.validOrderHash(Hash.Order,Sig.Components)(o_1 (-> []),c_1 (-> []))
[i]Type for TMP_55

Name: TMP_55 Function: initiateVaultFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
hash_1(bytes32) := TMP_55(bytes32)
Finance type key: (-1, -1)
[i]Type for hash

Name: hash Function: initiateVaultFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_37(uint256) -> o_1 (-> []).premium
[i]Type for REF_37

Name: REF_37 Function: initiateVaultFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_38(uint256) -> filled_2[hash_1]
[i]Type for REF_38

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_56(uint256) = REF_37 (c)- REF_38
[i]Type for TMP_56

Name: TMP_56 Function: initiateVaultFillingZcTokenInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_57(bool) = a_1 <= TMP_56
[i]Type for TMP_57

Name: TMP_57 Function: initiateVaultFillingZcTokenInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_58(None) = SOLIDITY_CALL require(bool,string)(TMP_57,taker amount > available volume)
[i]Type for TMP_58

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_39(uint256) -> filled_2[hash_1]
[i]Type for REF_39

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
filled_3(mapping(bytes32 => uint256)) := ϕ(['filled_2'])
[i]Type for filled

Name: filled Function: initiateVaultFillingZcTokenInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_39(-> filled_3) = REF_39 (c)+ a_1
[i]Type for REF_39

Name: REF_39 Function: initiateVaultFillingZcTokenInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_59(uint256) = a_1 (c)* 1000000000000000000
[i]Type for TMP_59

Name: TMP_59 Function: initiateVaultFillingZcTokenInitiate
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
REF_40(uint256) -> o_1 (-> []).premium
[i]Type for REF_40

Name: REF_40 Function: initiateVaultFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_60(uint256) = TMP_59 (c)/ REF_40
[i]Type for TMP_60

Name: TMP_60 Function: initiateVaultFillingZcTokenInitiate
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
REF_41(uint256) -> o_1 (-> []).principal
[i]Type for REF_41

Name: REF_41 Function: initiateVaultFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_61(uint256) = TMP_60 (c)* REF_41
[i]Type for TMP_61

Name: TMP_61 Function: initiateVaultFillingZcTokenInitiate
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
TMP_62(uint256) = TMP_61 (c)/ 1000000000000000000
[i]Type for TMP_62

Name: TMP_62 Function: initiateVaultFillingZcTokenInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
principalFilled_1(uint256) := TMP_62(uint256)
Finance type key: (-1, -1)
[i]Type for principalFilled

Name: principalFilled Function: initiateVaultFillingZcTokenInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
TMP_63(uint256) = principalFilled_1 (c)* 1000000000000000000
[i]Type for TMP_63

Name: TMP_63 Function: initiateVaultFillingZcTokenInitiate
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
REF_42(uint16) -> fenominator_3[2]
[i]Type for REF_42

Name: None Function: None
Num: -1
Den: -1
Address: 1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
TMP_64(uint256) = TMP_63 (c)/ REF_42
[i]Type for TMP_64

Name: TMP_64 Function: initiateVaultFillingZcTokenInitiate
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
TMP_65(uint256) = TMP_64 (c)/ 1000000000000000000
[i]Type for TMP_65

Name: TMP_65 Function: initiateVaultFillingZcTokenInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
fee_1(uint256) := TMP_65(uint256)
Finance type key: (-1, -1)
[i]Type for fee

Name: fee Function: initiateVaultFillingZcTokenInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
REF_43(address) -> o_1 (-> []).underlying
[i]Type for REF_43

Name: REF_43 Function: initiateVaultFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_66 = CONVERT REF_43 to Erc20
[i]Type for TMP_66

Name: TMP_66 Function: initiateVaultFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
uToken_1(Erc20) := TMP_66(Erc20)
Finance type key: (-1, -1)
[i]Type for uToken

Name: uToken Function: initiateVaultFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_45(address) -> o_1 (-> []).maker
[i]Type for REF_45

Name: REF_45 Function: initiateVaultFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_67(bool) = HIGH_LEVEL_CALL, dest:uToken_1(Erc20), function:transferFrom, arguments:['msg.sender', 'REF_45', 'a_1']  
[i]Type for TMP_67

Name: TMP_67 Function: initiateVaultFillingZcTokenInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
marketPlace_4(address) := ϕ(['marketPlace_28', 'marketPlace_16', 'marketPlace_30', 'marketPlace_5', 'marketPlace_9', 'marketPlace_13', 'marketPlace_21', 'marketPlace_24', 'marketPlace_3', 'marketPlace_1', 'marketPlace_26'])
[i]Type for marketPlace

Name: marketPlace Function: initiateVaultFillingZcTokenInitiate
Num: -1
Den: -1
Address: 2
Norm: u
LF: marketPlace
Value: u
Fields: 
Finance Type: undef
REF_47(address) -> o_1 (-> []).maker
[i]Type for REF_47

Name: REF_47 Function: initiateVaultFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_68 = CONVERT this to address
[i]Type for TMP_68

Name: TMP_68 Function: initiateVaultFillingZcTokenInitiate
Num: -1
Den: -1
Address: 5
Norm: u
LF: Swivel
Value: u
Fields: 
Finance Type: undef
TMP_69(bool) = HIGH_LEVEL_CALL, dest:uToken_1(Erc20), function:transferFrom, arguments:['REF_47', 'TMP_68', 'principalFilled_1']  
[i]Type for TMP_69

Name: TMP_69 Function: initiateVaultFillingZcTokenInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
marketPlace_5(address) := ϕ(['marketPlace_28', 'marketPlace_16', 'marketPlace_30', 'marketPlace_5', 'marketPlace_9', 'marketPlace_13', 'marketPlace_21', 'marketPlace_24', 'marketPlace_1', 'marketPlace_4', 'marketPlace_26'])
[i]Type for marketPlace

Name: marketPlace Function: initiateVaultFillingZcTokenInitiate
Num: -1
Den: -1
Address: 2
Norm: u
LF: marketPlace
Value: u
Fields: 
Finance Type: undef
TMP_70 = CONVERT marketPlace_5 to MarketPlace
[i]Type for TMP_70

Name: TMP_70 Function: initiateVaultFillingZcTokenInitiate
Num: -1
Den: -1
Address: 2
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
mPlace_1(MarketPlace) := TMP_70(MarketPlace)
Finance type key: (-1, -1)
[i]Type for mPlace

Name: mPlace Function: initiateVaultFillingZcTokenInitiate
Num: -1
Den: -1
Address: 2
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
REF_49(address) -> o_1 (-> []).underlying
[i]Type for REF_49

Name: REF_49 Function: initiateVaultFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_50(uint256) -> o_1 (-> []).maturity
[i]Type for REF_50

Name: REF_50 Function: initiateVaultFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_71(address) = HIGH_LEVEL_CALL, dest:mPlace_1(MarketPlace), function:cTokenAddress, arguments:['REF_49', 'REF_50']  
[i]Type for TMP_71

Name: TMP_71 Function: initiateVaultFillingZcTokenInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
cTokenAddr_1(address) := TMP_71(address)
Finance type key: (-1, -1)
[i]Type for cTokenAddr

Name: cTokenAddr Function: initiateVaultFillingZcTokenInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_72(bool) = HIGH_LEVEL_CALL, dest:uToken_1(Erc20), function:approve, arguments:['cTokenAddr_1', 'principalFilled_1']  
[i]Type for TMP_72

Name: TMP_72 Function: initiateVaultFillingZcTokenInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_73 = CONVERT cTokenAddr_1 to CErc20
[i]Type for TMP_73

Name: TMP_73 Function: initiateVaultFillingZcTokenInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
TMP_74(uint256) = HIGH_LEVEL_CALL, dest:TMP_73(CErc20), function:mint, arguments:['principalFilled_1']  
[i]Type for TMP_74

Name: TMP_74 Function: initiateVaultFillingZcTokenInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_75(bool) = TMP_74 == 0
[i]Type for TMP_75

Name: TMP_75 Function: initiateVaultFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_76(None) = SOLIDITY_CALL require(bool,string)(TMP_75,minting CToken failed)
[i]Type for TMP_76

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_54(address) -> o_1 (-> []).underlying
[i]Type for REF_54

Name: REF_54 Function: initiateVaultFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_55(uint256) -> o_1 (-> []).maturity
[i]Type for REF_55

Name: REF_55 Function: initiateVaultFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_56(address) -> o_1 (-> []).maker
[i]Type for REF_56

Name: REF_56 Function: initiateVaultFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_77(bool) = HIGH_LEVEL_CALL, dest:mPlace_1(MarketPlace), function:custodialInitiate, arguments:['REF_54', 'REF_55', 'REF_56', 'msg.sender', 'principalFilled_1']  
[i]Type for TMP_77

Name: TMP_77 Function: initiateVaultFillingZcTokenInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_78(None) = SOLIDITY_CALL require(bool,string)(TMP_77,custodial initiate failed)
[i]Type for TMP_78

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_58(address) -> o_1 (-> []).underlying
[i]Type for REF_58

Name: REF_58 Function: initiateVaultFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_59(uint256) -> o_1 (-> []).maturity
[i]Type for REF_59

Name: REF_59 Function: initiateVaultFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_79(bool) = HIGH_LEVEL_CALL, dest:mPlace_1(MarketPlace), function:transferVaultNotionalFee, arguments:['REF_58', 'REF_59', 'msg.sender', 'fee_1']  
[i]Type for TMP_79

Name: TMP_79 Function: initiateVaultFillingZcTokenInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_80(None) = SOLIDITY_CALL require(bool,string)(TMP_79,notional fee transfer failed)
[i]Type for TMP_80

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_60(bytes32) -> o_1 (-> []).key
[i]Type for REF_60

Name: REF_60 Function: initiateVaultFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_61(address) -> o_1 (-> []).maker
[i]Type for REF_61

Name: REF_61 Function: initiateVaultFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_62(bool) -> o_1 (-> []).vault
[i]Type for REF_62

Name: REF_62 Function: initiateVaultFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_63(bool) -> o_1 (-> []).exit
[i]Type for REF_63

Name: REF_63 Function: initiateVaultFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
o_1 (-> [])(Hash.Order) := ϕ(['REF_23'])
[i]Type for o

Name: o Function: initiateVaultFillingZcTokenInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: premium, principal, underlying, maker, maturity, key, vault, exit
Finance Type: undef
a_1(uint256) := ϕ(['REF_24'])
[i]Type for a

Name: a Function: initiateVaultFillingZcTokenInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
c_1 (-> [])(Sig.Components) := ϕ(['REF_25'])
[i]Type for c

Name: c Function: initiateVaultFillingZcTokenInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
filled_1(mapping(bytes32 => uint256)) := ϕ(['filled_12', 'filled_3', 'filled_6', 'filled_24', 'filled_15', 'filled_9', 'filled_0', 'filled_21', 'filled_18'])
[i]Type for filled

Name: filled Function: initiateVaultFillingZcTokenInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
marketPlace_2(address) := ϕ(['marketPlace_28', 'marketPlace_16', 'marketPlace_30', 'marketPlace_0', 'marketPlace_9', 'marketPlace_13', 'marketPlace_5', 'marketPlace_21', 'marketPlace_24', 'marketPlace_1', 'marketPlace_26'])
[i]Type for marketPlace

Name: marketPlace Function: initiateVaultFillingZcTokenInitiate
Num: -1
Den: -1
Address: 2
Norm: u
LF: marketPlace
Value: u
Fields: 
Finance Type: undef
fenominator_2(uint16[]) := ϕ(['fenominator_13', 'fenominator_0', 'fenominator_11', 'fenominator_7', 'fenominator_1', 'fenominator_15', 'fenominator_17', 'fenominator_5', 'fenominator_9', 'fenominator_18', 'fenominator_3'])
[i]Type for fenominator

Name: fenominator Function: initiateVaultFillingZcTokenInitiate
Num: -1
Den: -1
Address: 1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
TMP_55(bytes32) = INTERNAL_CALL, Swivel.validOrderHash(Hash.Order,Sig.Components)(o_1 (-> []),c_1 (-> []))
[i]Type for TMP_55

Name: TMP_55 Function: initiateVaultFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
hash_1(bytes32) := TMP_55(bytes32)
Finance type key: (-1, -1)
[i]Type for hash

Name: hash Function: initiateVaultFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_37(uint256) -> o_1 (-> []).premium
[i]Type for REF_37

Name: REF_37 Function: initiateVaultFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_38(uint256) -> filled_2[hash_1]
[i]Type for REF_38

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_56(uint256) = REF_37 (c)- REF_38
[i]Type for TMP_56

Name: TMP_56 Function: initiateVaultFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_57(bool) = a_1 <= TMP_56
[i]Type for TMP_57

Name: TMP_57 Function: initiateVaultFillingZcTokenInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_58(None) = SOLIDITY_CALL require(bool,string)(TMP_57,taker amount > available volume)
[i]Type for TMP_58

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_39(uint256) -> filled_2[hash_1]
[i]Type for REF_39

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
filled_3(mapping(bytes32 => uint256)) := ϕ(['filled_2'])
[i]Type for filled

Name: filled Function: initiateVaultFillingZcTokenInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_39(-> filled_3) = REF_39 (c)+ a_1
[i]Type for REF_39

Name: REF_39 Function: initiateVaultFillingZcTokenInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_59(uint256) = a_1 (c)* 1000000000000000000
[i]Type for TMP_59

Name: TMP_59 Function: initiateVaultFillingZcTokenInitiate
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
REF_40(uint256) -> o_1 (-> []).premium
[i]Type for REF_40

Name: REF_40 Function: initiateVaultFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_60(uint256) = TMP_59 (c)/ REF_40
[i]Type for TMP_60

Name: TMP_60 Function: initiateVaultFillingZcTokenInitiate
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
REF_41(uint256) -> o_1 (-> []).principal
[i]Type for REF_41

Name: REF_41 Function: initiateVaultFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_61(uint256) = TMP_60 (c)* REF_41
[i]Type for TMP_61

Name: TMP_61 Function: initiateVaultFillingZcTokenInitiate
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
TMP_62(uint256) = TMP_61 (c)/ 1000000000000000000
[i]Type for TMP_62

Name: TMP_62 Function: initiateVaultFillingZcTokenInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
principalFilled_1(uint256) := TMP_62(uint256)
Finance type key: (-1, -1)
[i]Type for principalFilled

Name: principalFilled Function: initiateVaultFillingZcTokenInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
TMP_63(uint256) = principalFilled_1 (c)* 1000000000000000000
[i]Type for TMP_63

Name: TMP_63 Function: initiateVaultFillingZcTokenInitiate
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
REF_42(uint16) -> fenominator_3[2]
[i]Type for REF_42

Name: None Function: None
Num: -1
Den: -1
Address: 1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
TMP_64(uint256) = TMP_63 (c)/ REF_42
[i]Type for TMP_64

Name: TMP_64 Function: initiateVaultFillingZcTokenInitiate
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
TMP_65(uint256) = TMP_64 (c)/ 1000000000000000000
[i]Type for TMP_65

Name: TMP_65 Function: initiateVaultFillingZcTokenInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
fee_1(uint256) := TMP_65(uint256)
Finance type key: (-1, -1)
[i]Type for fee

Name: fee Function: initiateVaultFillingZcTokenInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
REF_43(address) -> o_1 (-> []).underlying
[i]Type for REF_43

Name: REF_43 Function: initiateVaultFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_66 = CONVERT REF_43 to Erc20
[i]Type for TMP_66

Name: TMP_66 Function: initiateVaultFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
uToken_1(Erc20) := TMP_66(Erc20)
Finance type key: (-1, -1)
[i]Type for uToken

Name: uToken Function: initiateVaultFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_45(address) -> o_1 (-> []).maker
[i]Type for REF_45

Name: REF_45 Function: initiateVaultFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_67(bool) = HIGH_LEVEL_CALL, dest:uToken_1(Erc20), function:transferFrom, arguments:['msg.sender', 'REF_45', 'a_1']  
[i]Type for TMP_67

Name: TMP_67 Function: initiateVaultFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
marketPlace_4(address) := ϕ(['marketPlace_28', 'marketPlace_16', 'marketPlace_30', 'marketPlace_5', 'marketPlace_9', 'marketPlace_13', 'marketPlace_21', 'marketPlace_24', 'marketPlace_3', 'marketPlace_1', 'marketPlace_26'])
[i]Type for marketPlace

Name: marketPlace Function: initiateVaultFillingZcTokenInitiate
Num: -1
Den: -1
Address: 2
Norm: u
LF: marketPlace
Value: u
Fields: 
Finance Type: undef
REF_47(address) -> o_1 (-> []).maker
[i]Type for REF_47

Name: REF_47 Function: initiateVaultFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_68 = CONVERT this to address
[i]Type for TMP_68

Name: TMP_68 Function: initiateVaultFillingZcTokenInitiate
Num: 
Den: 
Address: 5
Norm: u
LF: Swivel
Value: u
Fields: 
Finance Type: undef
TMP_69(bool) = HIGH_LEVEL_CALL, dest:uToken_1(Erc20), function:transferFrom, arguments:['REF_47', 'TMP_68', 'principalFilled_1']  
[i]Type for TMP_69

Name: TMP_69 Function: initiateVaultFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
marketPlace_5(address) := ϕ(['marketPlace_28', 'marketPlace_16', 'marketPlace_30', 'marketPlace_5', 'marketPlace_9', 'marketPlace_13', 'marketPlace_21', 'marketPlace_24', 'marketPlace_1', 'marketPlace_4', 'marketPlace_26'])
[i]Type for marketPlace

Name: marketPlace Function: initiateVaultFillingZcTokenInitiate
Num: -1
Den: -1
Address: 2
Norm: u
LF: marketPlace
Value: u
Fields: 
Finance Type: undef
TMP_70 = CONVERT marketPlace_5 to MarketPlace
[i]Type for TMP_70

Name: TMP_70 Function: initiateVaultFillingZcTokenInitiate
Num: -1
Den: -1
Address: 2
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
mPlace_1(MarketPlace) := TMP_70(MarketPlace)
Finance type key: (-1, -1)
[i]Type for mPlace

Name: mPlace Function: initiateVaultFillingZcTokenInitiate
Num: -1
Den: -1
Address: 2
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
REF_49(address) -> o_1 (-> []).underlying
[i]Type for REF_49

Name: REF_49 Function: initiateVaultFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_50(uint256) -> o_1 (-> []).maturity
[i]Type for REF_50

Name: REF_50 Function: initiateVaultFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_71(address) = HIGH_LEVEL_CALL, dest:mPlace_1(MarketPlace), function:cTokenAddress, arguments:['REF_49', 'REF_50']  
[i]Type for TMP_71

Name: TMP_71 Function: initiateVaultFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
cTokenAddr_1(address) := TMP_71(address)
Finance type key: (-1, -1)
[i]Type for cTokenAddr

Name: cTokenAddr Function: initiateVaultFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_72(bool) = HIGH_LEVEL_CALL, dest:uToken_1(Erc20), function:approve, arguments:['cTokenAddr_1', 'principalFilled_1']  
[i]Type for TMP_72

Name: TMP_72 Function: initiateVaultFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_73 = CONVERT cTokenAddr_1 to CErc20
[i]Type for TMP_73

Name: TMP_73 Function: initiateVaultFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
TMP_74(uint256) = HIGH_LEVEL_CALL, dest:TMP_73(CErc20), function:mint, arguments:['principalFilled_1']  
[i]Type for TMP_74

Name: TMP_74 Function: initiateVaultFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_75(bool) = TMP_74 == 0
[i]Type for TMP_75

Name: TMP_75 Function: initiateVaultFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_76(None) = SOLIDITY_CALL require(bool,string)(TMP_75,minting CToken failed)
[i]Type for TMP_76

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_54(address) -> o_1 (-> []).underlying
[i]Type for REF_54

Name: REF_54 Function: initiateVaultFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_55(uint256) -> o_1 (-> []).maturity
[i]Type for REF_55

Name: REF_55 Function: initiateVaultFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_56(address) -> o_1 (-> []).maker
[i]Type for REF_56

Name: REF_56 Function: initiateVaultFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_77(bool) = HIGH_LEVEL_CALL, dest:mPlace_1(MarketPlace), function:custodialInitiate, arguments:['REF_54', 'REF_55', 'REF_56', 'msg.sender', 'principalFilled_1']  
[i]Type for TMP_77

Name: TMP_77 Function: initiateVaultFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_78(None) = SOLIDITY_CALL require(bool,string)(TMP_77,custodial initiate failed)
[i]Type for TMP_78

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_58(address) -> o_1 (-> []).underlying
[i]Type for REF_58

Name: REF_58 Function: initiateVaultFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_59(uint256) -> o_1 (-> []).maturity
[i]Type for REF_59

Name: REF_59 Function: initiateVaultFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_79(bool) = HIGH_LEVEL_CALL, dest:mPlace_1(MarketPlace), function:transferVaultNotionalFee, arguments:['REF_58', 'REF_59', 'msg.sender', 'fee_1']  
[i]Type for TMP_79

Name: TMP_79 Function: initiateVaultFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_80(None) = SOLIDITY_CALL require(bool,string)(TMP_79,notional fee transfer failed)
[i]Type for TMP_80

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_60(bytes32) -> o_1 (-> []).key
[i]Type for REF_60

Name: REF_60 Function: initiateVaultFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_61(address) -> o_1 (-> []).maker
[i]Type for REF_61

Name: REF_61 Function: initiateVaultFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_62(bool) -> o_1 (-> []).vault
[i]Type for REF_62

Name: REF_62 Function: initiateVaultFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_63(bool) -> o_1 (-> []).exit
[i]Type for REF_63

Name: REF_63 Function: initiateVaultFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_54(uint256) := i_2(uint256)
Finance type key: (-1, -1)
[i]Type for TMP_54

Name: TMP_54 Function: initiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_3(uint256) = i_2 (c)+ 1
[i]Type for i

Name: i Function: initiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
i_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for i

Name: i Function: initiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
i_2(uint256) := ϕ(['i_3', 'i_1'])
[i]Type for i

Name: i Function: initiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_18 -> LENGTH o_1 (-> [])
[i]Type for REF_18

Name: REF_18 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_46(bool) = i_2 < REF_18
[i]Type for TMP_46

Name: TMP_46 Function: initiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_19(Hash.Order) -> o_1 (-> [])[i_2]
[i]Type for REF_19

Name: o_1 (-> []) Function: initiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_20(bool) -> REF_19.exit
[i]Type for REF_20

Name: REF_20 Function: initiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_47 = ! REF_20 
[i]Type for TMP_47

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_29(Hash.Order) -> o_1 (-> [])[i_2]
[i]Type for REF_29

Name: o_1 (-> []) Function: initiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_30(bool) -> REF_29.vault
[i]Type for REF_30

Name: REF_30 Function: initiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_51 = ! REF_30 
[i]Type for TMP_51

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_21(Hash.Order) -> o_1 (-> [])[i_2]
[i]Type for REF_21

Name: o_1 (-> []) Function: initiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_22(bool) -> REF_21.vault
[i]Type for REF_22

Name: REF_22 Function: initiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_48 = ! REF_22 
[i]Type for TMP_48

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_31(Hash.Order) -> o_1 (-> [])[i_2]
[i]Type for REF_31

Name: o_1 (-> []) Function: initiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_32(uint256) -> a_1 (-> [])[i_2]
[i]Type for REF_32

Name: a_1 (-> []) Function: initiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_33(Sig.Components) -> c_1 (-> [])[i_2]
[i]Type for REF_33

Name: c_1 (-> []) Function: initiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
INTERNAL_CALL, Swivel.initiateZcTokenFillingZcTokenExit(Hash.Order,uint256,Sig.Components)(REF_31,REF_32,REF_33)
o_1 (-> [])(Hash.Order) := ϕ(['REF_31'])
[i]Type for o

Name: o Function: initiateZcTokenFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: principal, premium, underlying, maker, maturity, key, vault, exit
Finance Type: undef
a_1(uint256) := ϕ(['REF_32'])
[i]Type for a

Name: a Function: initiateZcTokenFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
c_1 (-> [])(Sig.Components) := ϕ(['REF_33'])
[i]Type for c

Name: c Function: initiateZcTokenFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
filled_7(mapping(bytes32 => uint256)) := ϕ(['filled_12', 'filled_3', 'filled_6', 'filled_24', 'filled_15', 'filled_9', 'filled_0', 'filled_21', 'filled_18'])
[i]Type for filled

Name: filled Function: initiateZcTokenFillingZcTokenExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
marketPlace_10(address) := ϕ(['marketPlace_28', 'marketPlace_16', 'marketPlace_30', 'marketPlace_0', 'marketPlace_9', 'marketPlace_13', 'marketPlace_5', 'marketPlace_21', 'marketPlace_24', 'marketPlace_1', 'marketPlace_26'])
[i]Type for marketPlace

Name: marketPlace Function: initiateZcTokenFillingZcTokenExit
Num: -1
Den: -1
Address: 2
Norm: u
LF: marketPlace
Value: u
Fields: 
Finance Type: undef
fenominator_6(uint16[]) := ϕ(['fenominator_13', 'fenominator_0', 'fenominator_11', 'fenominator_7', 'fenominator_1', 'fenominator_15', 'fenominator_17', 'fenominator_5', 'fenominator_9', 'fenominator_18', 'fenominator_3'])
[i]Type for fenominator

Name: fenominator Function: initiateZcTokenFillingZcTokenExit
Num: -1
Den: -1
Address: 1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
TMP_108(bytes32) = INTERNAL_CALL, Swivel.validOrderHash(Hash.Order,Sig.Components)(o_1 (-> []),c_1 (-> []))
o_1 (-> [])(Hash.Order) := ϕ(['o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])'])
[i]Type for o

Name: o Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: expiry, premium, principal, underlying, maker, maturity, key, vault, exit
Finance Type: undef
c_1 (-> [])(Sig.Components) := ϕ(['c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])'])
[i]Type for c

Name: c Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
cancelled_2(mapping(bytes32 => bool)) := ϕ(['cancelled_2', 'cancelled_0', 'cancelled_1'])
[i]Type for cancelled

Name: cancelled Function: validOrderHash
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
domain_2(bytes32) := ϕ(['domain_0', 'domain_1'])
[i]Type for domain

Name: domain Function: validOrderHash
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_300(bytes32) = LIBRARY_CALL, dest:Hash, function:Hash.order(Hash.Order), arguments:['o_1 (-> [])'] 
[i]Type for TMP_300

Name: TMP_300 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
hash_1(bytes32) := TMP_300(bytes32)
Finance type key: (-1, -1)
[i]Type for hash

Name: hash Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_252(bool) -> cancelled_2[hash_1]
[i]Type for REF_252

Name: cancelled Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_301 = ! REF_252 
[i]Type for TMP_301

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_302(None) = SOLIDITY_CALL require(bool,string)(TMP_301,order cancelled)
[i]Type for TMP_302

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_253(uint256) -> o_1 (-> []).expiry
[i]Type for REF_253

Name: REF_253 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_303(bool) = REF_253 >= block.timestamp
[i]Type for TMP_303

Name: TMP_303 Function: validOrderHash
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_304(None) = SOLIDITY_CALL require(bool,string)(TMP_303,order expired)
[i]Type for TMP_304

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_254(address) -> o_1 (-> []).maker
[i]Type for REF_254

Name: REF_254 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_305(bytes32) = LIBRARY_CALL, dest:Hash, function:Hash.message(bytes32,bytes32), arguments:['domain_2', 'hash_1'] 
[i]Type for TMP_305

Name: TMP_305 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_306(address) = LIBRARY_CALL, dest:Sig, function:Sig.recover(bytes32,Sig.Components), arguments:['TMP_305', 'c_1 (-> [])'] 
[i]Type for TMP_306

Name: TMP_306 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_307(bool) = REF_254 == TMP_306
[i]Type for TMP_307

Name: TMP_307 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_308(None) = SOLIDITY_CALL require(bool,string)(TMP_307,invalid signature)
[i]Type for TMP_308

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
RETURN hash_1
o_1 (-> [])(Hash.Order) := ϕ(['o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])'])
[i]Type for o

Name: o Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: expiry, premium, principal, underlying, maker, maturity, key, vault, exit
Finance Type: undef
c_1 (-> [])(Sig.Components) := ϕ(['c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])'])
[i]Type for c

Name: c Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
cancelled_2(mapping(bytes32 => bool)) := ϕ(['cancelled_2', 'cancelled_0', 'cancelled_1'])
[i]Type for cancelled

Name: cancelled Function: validOrderHash
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
domain_2(bytes32) := ϕ(['domain_0', 'domain_1'])
[i]Type for domain

Name: domain Function: validOrderHash
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_300(bytes32) = LIBRARY_CALL, dest:Hash, function:Hash.order(Hash.Order), arguments:['o_1 (-> [])'] 
[i]Type for TMP_300

Name: TMP_300 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
hash_1(bytes32) := TMP_300(bytes32)
Finance type key: (-1, -1)
[i]Type for hash

Name: hash Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_252(bool) -> cancelled_2[hash_1]
[i]Type for REF_252

Name: cancelled Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_301 = ! REF_252 
[i]Type for TMP_301

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_302(None) = SOLIDITY_CALL require(bool,string)(TMP_301,order cancelled)
[i]Type for TMP_302

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_253(uint256) -> o_1 (-> []).expiry
[i]Type for REF_253

Name: REF_253 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_303(bool) = REF_253 >= block.timestamp
[i]Type for TMP_303

Name: TMP_303 Function: validOrderHash
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_304(None) = SOLIDITY_CALL require(bool,string)(TMP_303,order expired)
[i]Type for TMP_304

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_254(address) -> o_1 (-> []).maker
[i]Type for REF_254

Name: REF_254 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_305(bytes32) = LIBRARY_CALL, dest:Hash, function:Hash.message(bytes32,bytes32), arguments:['domain_2', 'hash_1'] 
[i]Type for TMP_305

Name: TMP_305 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_306(address) = LIBRARY_CALL, dest:Sig, function:Sig.recover(bytes32,Sig.Components), arguments:['TMP_305', 'c_1 (-> [])'] 
[i]Type for TMP_306

Name: TMP_306 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_307(bool) = REF_254 == TMP_306
[i]Type for TMP_307

Name: TMP_307 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_308(None) = SOLIDITY_CALL require(bool,string)(TMP_307,invalid signature)
[i]Type for TMP_308

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
RETURN hash_1
[i]Type for TMP_108

Name: TMP_108 Function: initiateZcTokenFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
hash_1(bytes32) := TMP_108(bytes32)
Finance type key: (-1, -1)
[i]Type for hash

Name: hash Function: initiateZcTokenFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_87(uint256) -> o_1 (-> []).principal
[i]Type for REF_87

Name: REF_87 Function: initiateZcTokenFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_88(uint256) -> filled_8[hash_1]
[i]Type for REF_88

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_109(uint256) = REF_87 (c)- REF_88
[i]Type for TMP_109

Name: TMP_109 Function: initiateZcTokenFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_110(bool) = a_1 <= TMP_109
[i]Type for TMP_110

Name: TMP_110 Function: initiateZcTokenFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_111(None) = SOLIDITY_CALL require(bool,string)(TMP_110,taker amount > available volume)
[i]Type for TMP_111

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_89(uint256) -> filled_8[hash_1]
[i]Type for REF_89

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
filled_9(mapping(bytes32 => uint256)) := ϕ(['filled_8'])
[i]Type for filled

Name: filled Function: initiateZcTokenFillingZcTokenExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_89(-> filled_9) = REF_89 (c)+ a_1
[i]Type for REF_89

Name: REF_89 Function: initiateZcTokenFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_112(uint256) = a_1 (c)* 1000000000000000000
[i]Type for TMP_112

Name: TMP_112 Function: initiateZcTokenFillingZcTokenExit
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
REF_90(uint256) -> o_1 (-> []).principal
[i]Type for REF_90

Name: REF_90 Function: initiateZcTokenFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_113(uint256) = TMP_112 (c)/ REF_90
[i]Type for TMP_113

Name: TMP_113 Function: initiateZcTokenFillingZcTokenExit
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
REF_91(uint256) -> o_1 (-> []).premium
[i]Type for REF_91

Name: REF_91 Function: initiateZcTokenFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_114(uint256) = TMP_113 (c)* REF_91
[i]Type for TMP_114

Name: TMP_114 Function: initiateZcTokenFillingZcTokenExit
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
TMP_115(uint256) = TMP_114 (c)/ 1000000000000000000
[i]Type for TMP_115

Name: TMP_115 Function: initiateZcTokenFillingZcTokenExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
premiumFilled_1(uint256) := TMP_115(uint256)
Finance type key: (-1, -1)
[i]Type for premiumFilled

Name: premiumFilled Function: initiateZcTokenFillingZcTokenExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
TMP_116(uint256) = premiumFilled_1 (c)* 1000000000000000000
[i]Type for TMP_116

Name: TMP_116 Function: initiateZcTokenFillingZcTokenExit
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
REF_92(uint16) -> fenominator_7[0]
[i]Type for REF_92

Name: None Function: None
Num: -1
Den: -1
Address: 1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
TMP_117(uint256) = TMP_116 (c)/ REF_92
[i]Type for TMP_117

Name: TMP_117 Function: initiateZcTokenFillingZcTokenExit
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
TMP_118(uint256) = TMP_117 (c)/ 1000000000000000000
[i]Type for TMP_118

Name: TMP_118 Function: initiateZcTokenFillingZcTokenExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
fee_1(uint256) := TMP_118(uint256)
Finance type key: (-1, -1)
[i]Type for fee

Name: fee Function: initiateZcTokenFillingZcTokenExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
REF_93(address) -> o_1 (-> []).underlying
[i]Type for REF_93

Name: REF_93 Function: initiateZcTokenFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_119 = CONVERT REF_93 to Erc20
[i]Type for TMP_119

Name: TMP_119 Function: initiateZcTokenFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
REF_95(address) -> o_1 (-> []).maker
[i]Type for REF_95

Name: REF_95 Function: initiateZcTokenFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_120(uint256) = a_1 (c)- premiumFilled_1
[i]Type for TMP_120

Name: TMP_120 Function: initiateZcTokenFillingZcTokenExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
TMP_121(uint256) = TMP_120 (c)+ fee_1
[i]Type for TMP_121

Name: TMP_121 Function: initiateZcTokenFillingZcTokenExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_122(bool) = HIGH_LEVEL_CALL, dest:TMP_119(Erc20), function:transferFrom, arguments:['msg.sender', 'REF_95', 'TMP_121']  
[i]Type for TMP_122

Name: TMP_122 Function: initiateZcTokenFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
marketPlace_12(address) := ϕ(['marketPlace_28', 'marketPlace_16', 'marketPlace_30', 'marketPlace_5', 'marketPlace_9', 'marketPlace_13', 'marketPlace_21', 'marketPlace_24', 'marketPlace_1', 'marketPlace_11', 'marketPlace_26'])
[i]Type for marketPlace

Name: marketPlace Function: initiateZcTokenFillingZcTokenExit
Num: -1
Den: -1
Address: 2
Norm: u
LF: marketPlace
Value: u
Fields: 
Finance Type: undef
TMP_123 = CONVERT marketPlace_12 to MarketPlace
[i]Type for TMP_123

Name: TMP_123 Function: initiateZcTokenFillingZcTokenExit
Num: -1
Den: -1
Address: 2
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
REF_97(address) -> o_1 (-> []).underlying
[i]Type for REF_97

Name: REF_97 Function: initiateZcTokenFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_98(uint256) -> o_1 (-> []).maturity
[i]Type for REF_98

Name: REF_98 Function: initiateZcTokenFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_99(address) -> o_1 (-> []).maker
[i]Type for REF_99

Name: REF_99 Function: initiateZcTokenFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_124(bool) = HIGH_LEVEL_CALL, dest:TMP_123(MarketPlace), function:p2pZcTokenExchange, arguments:['REF_97', 'REF_98', 'REF_99', 'msg.sender', 'a_1']  
[i]Type for TMP_124

Name: TMP_124 Function: initiateZcTokenFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
marketPlace_13(address) := ϕ(['marketPlace_28', 'marketPlace_16', 'marketPlace_30', 'marketPlace_5', 'marketPlace_9', 'marketPlace_13', 'marketPlace_21', 'marketPlace_24', 'marketPlace_1', 'marketPlace_12', 'marketPlace_26'])
[i]Type for marketPlace

Name: marketPlace Function: initiateZcTokenFillingZcTokenExit
Num: -1
Den: -1
Address: 2
Norm: u
LF: marketPlace
Value: u
Fields: 
Finance Type: undef
TMP_125(None) = SOLIDITY_CALL require(bool,string)(TMP_124,zcToken exchange failed)
[i]Type for TMP_125

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_100(bytes32) -> o_1 (-> []).key
[i]Type for REF_100

Name: REF_100 Function: initiateZcTokenFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_101(address) -> o_1 (-> []).maker
[i]Type for REF_101

Name: REF_101 Function: initiateZcTokenFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_102(bool) -> o_1 (-> []).vault
[i]Type for REF_102

Name: REF_102 Function: initiateZcTokenFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_103(bool) -> o_1 (-> []).exit
[i]Type for REF_103

Name: REF_103 Function: initiateZcTokenFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
o_1 (-> [])(Hash.Order) := ϕ(['REF_31'])
[i]Type for o

Name: o Function: initiateZcTokenFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: principal, premium, underlying, maker, maturity, key, vault, exit
Finance Type: undef
a_1(uint256) := ϕ(['REF_32'])
[i]Type for a

Name: a Function: initiateZcTokenFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
c_1 (-> [])(Sig.Components) := ϕ(['REF_33'])
[i]Type for c

Name: c Function: initiateZcTokenFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
filled_7(mapping(bytes32 => uint256)) := ϕ(['filled_12', 'filled_3', 'filled_6', 'filled_24', 'filled_15', 'filled_9', 'filled_0', 'filled_21', 'filled_18'])
[i]Type for filled

Name: filled Function: initiateZcTokenFillingZcTokenExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
marketPlace_10(address) := ϕ(['marketPlace_28', 'marketPlace_16', 'marketPlace_30', 'marketPlace_0', 'marketPlace_9', 'marketPlace_13', 'marketPlace_5', 'marketPlace_21', 'marketPlace_24', 'marketPlace_1', 'marketPlace_26'])
[i]Type for marketPlace

Name: marketPlace Function: initiateZcTokenFillingZcTokenExit
Num: -1
Den: -1
Address: 2
Norm: u
LF: marketPlace
Value: u
Fields: 
Finance Type: undef
fenominator_6(uint16[]) := ϕ(['fenominator_13', 'fenominator_0', 'fenominator_11', 'fenominator_7', 'fenominator_1', 'fenominator_15', 'fenominator_17', 'fenominator_5', 'fenominator_9', 'fenominator_18', 'fenominator_3'])
[i]Type for fenominator

Name: fenominator Function: initiateZcTokenFillingZcTokenExit
Num: -1
Den: -1
Address: 1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
TMP_108(bytes32) = INTERNAL_CALL, Swivel.validOrderHash(Hash.Order,Sig.Components)(o_1 (-> []),c_1 (-> []))
o_1 (-> [])(Hash.Order) := ϕ(['o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])'])
[i]Type for o

Name: o Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: expiry, premium, principal, underlying, maker, maturity, key, vault, exit
Finance Type: undef
c_1 (-> [])(Sig.Components) := ϕ(['c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])'])
[i]Type for c

Name: c Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
cancelled_2(mapping(bytes32 => bool)) := ϕ(['cancelled_2', 'cancelled_0', 'cancelled_1'])
[i]Type for cancelled

Name: cancelled Function: validOrderHash
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
domain_2(bytes32) := ϕ(['domain_0', 'domain_1'])
[i]Type for domain

Name: domain Function: validOrderHash
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_300(bytes32) = LIBRARY_CALL, dest:Hash, function:Hash.order(Hash.Order), arguments:['o_1 (-> [])'] 
[i]Type for TMP_300

Name: TMP_300 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
hash_1(bytes32) := TMP_300(bytes32)
Finance type key: (-1, -1)
[i]Type for hash

Name: hash Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_252(bool) -> cancelled_2[hash_1]
[i]Type for REF_252

Name: cancelled Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_301 = ! REF_252 
[i]Type for TMP_301

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_302(None) = SOLIDITY_CALL require(bool,string)(TMP_301,order cancelled)
[i]Type for TMP_302

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_253(uint256) -> o_1 (-> []).expiry
[i]Type for REF_253

Name: REF_253 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_303(bool) = REF_253 >= block.timestamp
[i]Type for TMP_303

Name: TMP_303 Function: validOrderHash
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_304(None) = SOLIDITY_CALL require(bool,string)(TMP_303,order expired)
[i]Type for TMP_304

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_254(address) -> o_1 (-> []).maker
[i]Type for REF_254

Name: REF_254 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_305(bytes32) = LIBRARY_CALL, dest:Hash, function:Hash.message(bytes32,bytes32), arguments:['domain_2', 'hash_1'] 
[i]Type for TMP_305

Name: TMP_305 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_306(address) = LIBRARY_CALL, dest:Sig, function:Sig.recover(bytes32,Sig.Components), arguments:['TMP_305', 'c_1 (-> [])'] 
[i]Type for TMP_306

Name: TMP_306 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_307(bool) = REF_254 == TMP_306
[i]Type for TMP_307

Name: TMP_307 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_308(None) = SOLIDITY_CALL require(bool,string)(TMP_307,invalid signature)
[i]Type for TMP_308

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
RETURN hash_1
o_1 (-> [])(Hash.Order) := ϕ(['o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])'])
[i]Type for o

Name: o Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: expiry, premium, principal, underlying, maker, maturity, key, vault, exit
Finance Type: undef
c_1 (-> [])(Sig.Components) := ϕ(['c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])'])
[i]Type for c

Name: c Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
cancelled_2(mapping(bytes32 => bool)) := ϕ(['cancelled_2', 'cancelled_0', 'cancelled_1'])
[i]Type for cancelled

Name: cancelled Function: validOrderHash
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
domain_2(bytes32) := ϕ(['domain_0', 'domain_1'])
[i]Type for domain

Name: domain Function: validOrderHash
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_300(bytes32) = LIBRARY_CALL, dest:Hash, function:Hash.order(Hash.Order), arguments:['o_1 (-> [])'] 
[i]Type for TMP_300

Name: TMP_300 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
hash_1(bytes32) := TMP_300(bytes32)
Finance type key: (-1, -1)
[i]Type for hash

Name: hash Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_252(bool) -> cancelled_2[hash_1]
[i]Type for REF_252

Name: cancelled Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_301 = ! REF_252 
[i]Type for TMP_301

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_302(None) = SOLIDITY_CALL require(bool,string)(TMP_301,order cancelled)
[i]Type for TMP_302

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_253(uint256) -> o_1 (-> []).expiry
[i]Type for REF_253

Name: REF_253 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_303(bool) = REF_253 >= block.timestamp
[i]Type for TMP_303

Name: TMP_303 Function: validOrderHash
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_304(None) = SOLIDITY_CALL require(bool,string)(TMP_303,order expired)
[i]Type for TMP_304

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_254(address) -> o_1 (-> []).maker
[i]Type for REF_254

Name: REF_254 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_305(bytes32) = LIBRARY_CALL, dest:Hash, function:Hash.message(bytes32,bytes32), arguments:['domain_2', 'hash_1'] 
[i]Type for TMP_305

Name: TMP_305 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_306(address) = LIBRARY_CALL, dest:Sig, function:Sig.recover(bytes32,Sig.Components), arguments:['TMP_305', 'c_1 (-> [])'] 
[i]Type for TMP_306

Name: TMP_306 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_307(bool) = REF_254 == TMP_306
[i]Type for TMP_307

Name: TMP_307 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_308(None) = SOLIDITY_CALL require(bool,string)(TMP_307,invalid signature)
[i]Type for TMP_308

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
RETURN hash_1
[i]Type for TMP_108

Name: TMP_108 Function: initiateZcTokenFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
hash_1(bytes32) := TMP_108(bytes32)
Finance type key: (-1, -1)
[i]Type for hash

Name: hash Function: initiateZcTokenFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_87(uint256) -> o_1 (-> []).principal
[i]Type for REF_87

Name: REF_87 Function: initiateZcTokenFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_88(uint256) -> filled_8[hash_1]
[i]Type for REF_88

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_109(uint256) = REF_87 (c)- REF_88
[i]Type for TMP_109

Name: TMP_109 Function: initiateZcTokenFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_110(bool) = a_1 <= TMP_109
[i]Type for TMP_110

Name: TMP_110 Function: initiateZcTokenFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_111(None) = SOLIDITY_CALL require(bool,string)(TMP_110,taker amount > available volume)
[i]Type for TMP_111

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_89(uint256) -> filled_8[hash_1]
[i]Type for REF_89

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
filled_9(mapping(bytes32 => uint256)) := ϕ(['filled_8'])
[i]Type for filled

Name: filled Function: initiateZcTokenFillingZcTokenExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_89(-> filled_9) = REF_89 (c)+ a_1
[i]Type for REF_89

Name: REF_89 Function: initiateZcTokenFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_112(uint256) = a_1 (c)* 1000000000000000000
[i]Type for TMP_112

Name: TMP_112 Function: initiateZcTokenFillingZcTokenExit
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
REF_90(uint256) -> o_1 (-> []).principal
[i]Type for REF_90

Name: REF_90 Function: initiateZcTokenFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_113(uint256) = TMP_112 (c)/ REF_90
[i]Type for TMP_113

Name: TMP_113 Function: initiateZcTokenFillingZcTokenExit
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
REF_91(uint256) -> o_1 (-> []).premium
[i]Type for REF_91

Name: REF_91 Function: initiateZcTokenFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_114(uint256) = TMP_113 (c)* REF_91
[i]Type for TMP_114

Name: TMP_114 Function: initiateZcTokenFillingZcTokenExit
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
TMP_115(uint256) = TMP_114 (c)/ 1000000000000000000
[i]Type for TMP_115

Name: TMP_115 Function: initiateZcTokenFillingZcTokenExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
premiumFilled_1(uint256) := TMP_115(uint256)
Finance type key: (-1, -1)
[i]Type for premiumFilled

Name: premiumFilled Function: initiateZcTokenFillingZcTokenExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
TMP_116(uint256) = premiumFilled_1 (c)* 1000000000000000000
[i]Type for TMP_116

Name: TMP_116 Function: initiateZcTokenFillingZcTokenExit
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
REF_92(uint16) -> fenominator_7[0]
[i]Type for REF_92

Name: None Function: None
Num: -1
Den: -1
Address: 1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
TMP_117(uint256) = TMP_116 (c)/ REF_92
[i]Type for TMP_117

Name: TMP_117 Function: initiateZcTokenFillingZcTokenExit
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
TMP_118(uint256) = TMP_117 (c)/ 1000000000000000000
[i]Type for TMP_118

Name: TMP_118 Function: initiateZcTokenFillingZcTokenExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
fee_1(uint256) := TMP_118(uint256)
Finance type key: (-1, -1)
[i]Type for fee

Name: fee Function: initiateZcTokenFillingZcTokenExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
REF_93(address) -> o_1 (-> []).underlying
[i]Type for REF_93

Name: REF_93 Function: initiateZcTokenFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_119 = CONVERT REF_93 to Erc20
[i]Type for TMP_119

Name: TMP_119 Function: initiateZcTokenFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
REF_95(address) -> o_1 (-> []).maker
[i]Type for REF_95

Name: REF_95 Function: initiateZcTokenFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_120(uint256) = a_1 (c)- premiumFilled_1
[i]Type for TMP_120

Name: TMP_120 Function: initiateZcTokenFillingZcTokenExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
TMP_121(uint256) = TMP_120 (c)+ fee_1
[i]Type for TMP_121

Name: TMP_121 Function: initiateZcTokenFillingZcTokenExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_122(bool) = HIGH_LEVEL_CALL, dest:TMP_119(Erc20), function:transferFrom, arguments:['msg.sender', 'REF_95', 'TMP_121']  
[i]Type for TMP_122

Name: TMP_122 Function: initiateZcTokenFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
marketPlace_12(address) := ϕ(['marketPlace_28', 'marketPlace_16', 'marketPlace_30', 'marketPlace_5', 'marketPlace_9', 'marketPlace_13', 'marketPlace_21', 'marketPlace_24', 'marketPlace_1', 'marketPlace_11', 'marketPlace_26'])
[i]Type for marketPlace

Name: marketPlace Function: initiateZcTokenFillingZcTokenExit
Num: -1
Den: -1
Address: 2
Norm: u
LF: marketPlace
Value: u
Fields: 
Finance Type: undef
TMP_123 = CONVERT marketPlace_12 to MarketPlace
[i]Type for TMP_123

Name: TMP_123 Function: initiateZcTokenFillingZcTokenExit
Num: -1
Den: -1
Address: 2
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
REF_97(address) -> o_1 (-> []).underlying
[i]Type for REF_97

Name: REF_97 Function: initiateZcTokenFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_98(uint256) -> o_1 (-> []).maturity
[i]Type for REF_98

Name: REF_98 Function: initiateZcTokenFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_99(address) -> o_1 (-> []).maker
[i]Type for REF_99

Name: REF_99 Function: initiateZcTokenFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_124(bool) = HIGH_LEVEL_CALL, dest:TMP_123(MarketPlace), function:p2pZcTokenExchange, arguments:['REF_97', 'REF_98', 'REF_99', 'msg.sender', 'a_1']  
[i]Type for TMP_124

Name: TMP_124 Function: initiateZcTokenFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
marketPlace_13(address) := ϕ(['marketPlace_28', 'marketPlace_16', 'marketPlace_30', 'marketPlace_5', 'marketPlace_9', 'marketPlace_13', 'marketPlace_21', 'marketPlace_24', 'marketPlace_1', 'marketPlace_12', 'marketPlace_26'])
[i]Type for marketPlace

Name: marketPlace Function: initiateZcTokenFillingZcTokenExit
Num: -1
Den: -1
Address: 2
Norm: u
LF: marketPlace
Value: u
Fields: 
Finance Type: undef
TMP_125(None) = SOLIDITY_CALL require(bool,string)(TMP_124,zcToken exchange failed)
[i]Type for TMP_125

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_100(bytes32) -> o_1 (-> []).key
[i]Type for REF_100

Name: REF_100 Function: initiateZcTokenFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_101(address) -> o_1 (-> []).maker
[i]Type for REF_101

Name: REF_101 Function: initiateZcTokenFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_102(bool) -> o_1 (-> []).vault
[i]Type for REF_102

Name: REF_102 Function: initiateZcTokenFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_103(bool) -> o_1 (-> []).exit
[i]Type for REF_103

Name: REF_103 Function: initiateZcTokenFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
RETURN True
REF_26(Hash.Order) -> o_1 (-> [])[i_2]
[i]Type for REF_26

Name: o_1 (-> []) Function: initiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_27(uint256) -> a_1 (-> [])[i_2]
[i]Type for REF_27

Name: a_1 (-> []) Function: initiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_28(Sig.Components) -> c_1 (-> [])[i_2]
[i]Type for REF_28

Name: c_1 (-> []) Function: initiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
INTERNAL_CALL, Swivel.initiateZcTokenFillingVaultInitiate(Hash.Order,uint256,Sig.Components)(REF_26,REF_27,REF_28)
o_1 (-> [])(Hash.Order) := ϕ(['REF_26'])
[i]Type for o

Name: o Function: initiateZcTokenFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: principal, premium, underlying, maker, maturity, key, vault, exit
Finance Type: undef
a_1(uint256) := ϕ(['REF_27'])
[i]Type for a

Name: a Function: initiateZcTokenFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
c_1 (-> [])(Sig.Components) := ϕ(['REF_28'])
[i]Type for c

Name: c Function: initiateZcTokenFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
filled_4(mapping(bytes32 => uint256)) := ϕ(['filled_12', 'filled_3', 'filled_6', 'filled_24', 'filled_15', 'filled_9', 'filled_0', 'filled_21', 'filled_18'])
[i]Type for filled

Name: filled Function: initiateZcTokenFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
marketPlace_6(address) := ϕ(['marketPlace_28', 'marketPlace_16', 'marketPlace_30', 'marketPlace_0', 'marketPlace_9', 'marketPlace_13', 'marketPlace_5', 'marketPlace_21', 'marketPlace_24', 'marketPlace_1', 'marketPlace_26'])
[i]Type for marketPlace

Name: marketPlace Function: initiateZcTokenFillingVaultInitiate
Num: -1
Den: -1
Address: 2
Norm: u
LF: marketPlace
Value: u
Fields: 
Finance Type: undef
fenominator_4(uint16[]) := ϕ(['fenominator_13', 'fenominator_0', 'fenominator_11', 'fenominator_7', 'fenominator_1', 'fenominator_15', 'fenominator_17', 'fenominator_5', 'fenominator_9', 'fenominator_18', 'fenominator_3'])
[i]Type for fenominator

Name: fenominator Function: initiateZcTokenFillingVaultInitiate
Num: -1
Den: -1
Address: 1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
TMP_82(bytes32) = INTERNAL_CALL, Swivel.validOrderHash(Hash.Order,Sig.Components)(o_1 (-> []),c_1 (-> []))
o_1 (-> [])(Hash.Order) := ϕ(['o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])'])
[i]Type for o

Name: o Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: expiry, premium, principal, underlying, maker, maturity, key, vault, exit
Finance Type: undef
c_1 (-> [])(Sig.Components) := ϕ(['c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])'])
[i]Type for c

Name: c Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
cancelled_2(mapping(bytes32 => bool)) := ϕ(['cancelled_2', 'cancelled_0', 'cancelled_1'])
[i]Type for cancelled

Name: cancelled Function: validOrderHash
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
domain_2(bytes32) := ϕ(['domain_0', 'domain_1'])
[i]Type for domain

Name: domain Function: validOrderHash
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_300(bytes32) = LIBRARY_CALL, dest:Hash, function:Hash.order(Hash.Order), arguments:['o_1 (-> [])'] 
[i]Type for TMP_300

Name: TMP_300 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
hash_1(bytes32) := TMP_300(bytes32)
Finance type key: (-1, -1)
[i]Type for hash

Name: hash Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_252(bool) -> cancelled_2[hash_1]
[i]Type for REF_252

Name: cancelled Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_301 = ! REF_252 
[i]Type for TMP_301

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_302(None) = SOLIDITY_CALL require(bool,string)(TMP_301,order cancelled)
[i]Type for TMP_302

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_253(uint256) -> o_1 (-> []).expiry
[i]Type for REF_253

Name: REF_253 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_303(bool) = REF_253 >= block.timestamp
[i]Type for TMP_303

Name: TMP_303 Function: validOrderHash
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_304(None) = SOLIDITY_CALL require(bool,string)(TMP_303,order expired)
[i]Type for TMP_304

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_254(address) -> o_1 (-> []).maker
[i]Type for REF_254

Name: REF_254 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_305(bytes32) = LIBRARY_CALL, dest:Hash, function:Hash.message(bytes32,bytes32), arguments:['domain_2', 'hash_1'] 
[i]Type for TMP_305

Name: TMP_305 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_306(address) = LIBRARY_CALL, dest:Sig, function:Sig.recover(bytes32,Sig.Components), arguments:['TMP_305', 'c_1 (-> [])'] 
[i]Type for TMP_306

Name: TMP_306 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_307(bool) = REF_254 == TMP_306
[i]Type for TMP_307

Name: TMP_307 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_308(None) = SOLIDITY_CALL require(bool,string)(TMP_307,invalid signature)
[i]Type for TMP_308

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
RETURN hash_1
o_1 (-> [])(Hash.Order) := ϕ(['o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])'])
[i]Type for o

Name: o Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: expiry, premium, principal, underlying, maker, maturity, key, vault, exit
Finance Type: undef
c_1 (-> [])(Sig.Components) := ϕ(['c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])'])
[i]Type for c

Name: c Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
cancelled_2(mapping(bytes32 => bool)) := ϕ(['cancelled_2', 'cancelled_0', 'cancelled_1'])
[i]Type for cancelled

Name: cancelled Function: validOrderHash
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
domain_2(bytes32) := ϕ(['domain_0', 'domain_1'])
[i]Type for domain

Name: domain Function: validOrderHash
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_300(bytes32) = LIBRARY_CALL, dest:Hash, function:Hash.order(Hash.Order), arguments:['o_1 (-> [])'] 
[i]Type for TMP_300

Name: TMP_300 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
hash_1(bytes32) := TMP_300(bytes32)
Finance type key: (-1, -1)
[i]Type for hash

Name: hash Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_252(bool) -> cancelled_2[hash_1]
[i]Type for REF_252

Name: cancelled Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_301 = ! REF_252 
[i]Type for TMP_301

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_302(None) = SOLIDITY_CALL require(bool,string)(TMP_301,order cancelled)
[i]Type for TMP_302

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_253(uint256) -> o_1 (-> []).expiry
[i]Type for REF_253

Name: REF_253 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_303(bool) = REF_253 >= block.timestamp
[i]Type for TMP_303

Name: TMP_303 Function: validOrderHash
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_304(None) = SOLIDITY_CALL require(bool,string)(TMP_303,order expired)
[i]Type for TMP_304

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_254(address) -> o_1 (-> []).maker
[i]Type for REF_254

Name: REF_254 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_305(bytes32) = LIBRARY_CALL, dest:Hash, function:Hash.message(bytes32,bytes32), arguments:['domain_2', 'hash_1'] 
[i]Type for TMP_305

Name: TMP_305 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_306(address) = LIBRARY_CALL, dest:Sig, function:Sig.recover(bytes32,Sig.Components), arguments:['TMP_305', 'c_1 (-> [])'] 
[i]Type for TMP_306

Name: TMP_306 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_307(bool) = REF_254 == TMP_306
[i]Type for TMP_307

Name: TMP_307 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_308(None) = SOLIDITY_CALL require(bool,string)(TMP_307,invalid signature)
[i]Type for TMP_308

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
RETURN hash_1
[i]Type for TMP_82

Name: TMP_82 Function: initiateZcTokenFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
hash_1(bytes32) := TMP_82(bytes32)
Finance type key: (-1, -1)
[i]Type for hash

Name: hash Function: initiateZcTokenFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_64(uint256) -> o_1 (-> []).principal
[i]Type for REF_64

Name: REF_64 Function: initiateZcTokenFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_65(uint256) -> filled_5[hash_1]
[i]Type for REF_65

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_83(uint256) = REF_64 (c)- REF_65
[i]Type for TMP_83

Name: TMP_83 Function: initiateZcTokenFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_84(bool) = a_1 <= TMP_83
[i]Type for TMP_84

Name: TMP_84 Function: initiateZcTokenFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_85(None) = SOLIDITY_CALL require(bool,string)(TMP_84,taker amount > available volume)
[i]Type for TMP_85

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_66(uint256) -> filled_5[hash_1]
[i]Type for REF_66

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
filled_6(mapping(bytes32 => uint256)) := ϕ(['filled_5'])
[i]Type for filled

Name: filled Function: initiateZcTokenFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_66(-> filled_6) = REF_66 (c)+ a_1
[i]Type for REF_66

Name: REF_66 Function: initiateZcTokenFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_86(uint256) = a_1 (c)* 1000000000000000000
[i]Type for TMP_86

Name: TMP_86 Function: initiateZcTokenFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
REF_67(uint256) -> o_1 (-> []).principal
[i]Type for REF_67

Name: REF_67 Function: initiateZcTokenFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_87(uint256) = TMP_86 (c)/ REF_67
[i]Type for TMP_87

Name: TMP_87 Function: initiateZcTokenFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
REF_68(uint256) -> o_1 (-> []).premium
[i]Type for REF_68

Name: REF_68 Function: initiateZcTokenFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_88(uint256) = TMP_87 (c)* REF_68
[i]Type for TMP_88

Name: TMP_88 Function: initiateZcTokenFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
TMP_89(uint256) = TMP_88 (c)/ 1000000000000000000
[i]Type for TMP_89

Name: TMP_89 Function: initiateZcTokenFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
premiumFilled_1(uint256) := TMP_89(uint256)
Finance type key: (-1, -1)
[i]Type for premiumFilled

Name: premiumFilled Function: initiateZcTokenFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
TMP_90(uint256) = premiumFilled_1 (c)* 1000000000000000000
[i]Type for TMP_90

Name: TMP_90 Function: initiateZcTokenFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
REF_69(uint16) -> fenominator_5[0]
[i]Type for REF_69

Name: None Function: None
Num: -1
Den: -1
Address: 1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
TMP_91(uint256) = TMP_90 (c)/ REF_69
[i]Type for TMP_91

Name: TMP_91 Function: initiateZcTokenFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
TMP_92(uint256) = TMP_91 (c)/ 1000000000000000000
[i]Type for TMP_92

Name: TMP_92 Function: initiateZcTokenFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
fee_1(uint256) := TMP_92(uint256)
Finance type key: (-1, -1)
[i]Type for fee

Name: fee Function: initiateZcTokenFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
REF_70(address) -> o_1 (-> []).underlying
[i]Type for REF_70

Name: REF_70 Function: initiateZcTokenFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_93 = CONVERT REF_70 to Erc20
[i]Type for TMP_93

Name: TMP_93 Function: initiateZcTokenFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
uToken_1(Erc20) := TMP_93(Erc20)
Finance type key: (-1, -1)
[i]Type for uToken

Name: uToken Function: initiateZcTokenFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_72(address) -> o_1 (-> []).maker
[i]Type for REF_72

Name: REF_72 Function: initiateZcTokenFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_94(bool) = HIGH_LEVEL_CALL, dest:uToken_1(Erc20), function:transferFrom, arguments:['REF_72', 'msg.sender', 'premiumFilled_1']  
[i]Type for TMP_94

Name: TMP_94 Function: initiateZcTokenFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
marketPlace_8(address) := ϕ(['marketPlace_28', 'marketPlace_16', 'marketPlace_30', 'marketPlace_5', 'marketPlace_9', 'marketPlace_13', 'marketPlace_21', 'marketPlace_24', 'marketPlace_7', 'marketPlace_1', 'marketPlace_26'])
[i]Type for marketPlace

Name: marketPlace Function: initiateZcTokenFillingVaultInitiate
Num: -1
Den: -1
Address: 2
Norm: u
LF: marketPlace
Value: u
Fields: 
Finance Type: undef
TMP_95 = CONVERT this to address
[i]Type for TMP_95

Name: TMP_95 Function: initiateZcTokenFillingVaultInitiate
Num: 
Den: 
Address: 5
Norm: u
LF: Swivel
Value: u
Fields: 
Finance Type: undef
TMP_96(uint256) = a_1 (c)+ fee_1
[i]Type for TMP_96

Name: TMP_96 Function: initiateZcTokenFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
TMP_97(bool) = HIGH_LEVEL_CALL, dest:uToken_1(Erc20), function:transferFrom, arguments:['msg.sender', 'TMP_95', 'TMP_96']  
[i]Type for TMP_97

Name: TMP_97 Function: initiateZcTokenFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
marketPlace_9(address) := ϕ(['marketPlace_28', 'marketPlace_16', 'marketPlace_30', 'marketPlace_5', 'marketPlace_9', 'marketPlace_13', 'marketPlace_21', 'marketPlace_24', 'marketPlace_1', 'marketPlace_8', 'marketPlace_26'])
[i]Type for marketPlace

Name: marketPlace Function: initiateZcTokenFillingVaultInitiate
Num: -1
Den: -1
Address: 2
Norm: u
LF: marketPlace
Value: u
Fields: 
Finance Type: undef
TMP_98 = CONVERT marketPlace_9 to MarketPlace
[i]Type for TMP_98

Name: TMP_98 Function: initiateZcTokenFillingVaultInitiate
Num: -1
Den: -1
Address: 2
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
mPlace_1(MarketPlace) := TMP_98(MarketPlace)
Finance type key: (-1, -1)
[i]Type for mPlace

Name: mPlace Function: initiateZcTokenFillingVaultInitiate
Num: -1
Den: -1
Address: 2
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
REF_75(address) -> o_1 (-> []).underlying
[i]Type for REF_75

Name: REF_75 Function: initiateZcTokenFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_76(uint256) -> o_1 (-> []).maturity
[i]Type for REF_76

Name: REF_76 Function: initiateZcTokenFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_99(address) = HIGH_LEVEL_CALL, dest:mPlace_1(MarketPlace), function:cTokenAddress, arguments:['REF_75', 'REF_76']  
[i]Type for TMP_99

Name: TMP_99 Function: initiateZcTokenFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
cTokenAddr_1(address) := TMP_99(address)
Finance type key: (-1, -1)
[i]Type for cTokenAddr

Name: cTokenAddr Function: initiateZcTokenFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_100(bool) = HIGH_LEVEL_CALL, dest:uToken_1(Erc20), function:approve, arguments:['cTokenAddr_1', 'a_1']  
[i]Type for TMP_100

Name: TMP_100 Function: initiateZcTokenFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_101 = CONVERT cTokenAddr_1 to CErc20
[i]Type for TMP_101

Name: TMP_101 Function: initiateZcTokenFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
TMP_102(uint256) = HIGH_LEVEL_CALL, dest:TMP_101(CErc20), function:mint, arguments:['a_1']  
[i]Type for TMP_102

Name: TMP_102 Function: initiateZcTokenFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_103(bool) = TMP_102 == 0
[i]Type for TMP_103

Name: TMP_103 Function: initiateZcTokenFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_104(None) = SOLIDITY_CALL require(bool,string)(TMP_103,minting CToken Failed)
[i]Type for TMP_104

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_80(address) -> o_1 (-> []).underlying
[i]Type for REF_80

Name: REF_80 Function: initiateZcTokenFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_81(uint256) -> o_1 (-> []).maturity
[i]Type for REF_81

Name: REF_81 Function: initiateZcTokenFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_82(address) -> o_1 (-> []).maker
[i]Type for REF_82

Name: REF_82 Function: initiateZcTokenFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_105(bool) = HIGH_LEVEL_CALL, dest:mPlace_1(MarketPlace), function:custodialInitiate, arguments:['REF_80', 'REF_81', 'msg.sender', 'REF_82', 'a_1']  
[i]Type for TMP_105

Name: TMP_105 Function: initiateZcTokenFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_106(None) = SOLIDITY_CALL require(bool,string)(TMP_105,custodial initiate failed)
[i]Type for TMP_106

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_83(bytes32) -> o_1 (-> []).key
[i]Type for REF_83

Name: REF_83 Function: initiateZcTokenFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_84(address) -> o_1 (-> []).maker
[i]Type for REF_84

Name: REF_84 Function: initiateZcTokenFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_85(bool) -> o_1 (-> []).vault
[i]Type for REF_85

Name: REF_85 Function: initiateZcTokenFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_86(bool) -> o_1 (-> []).exit
[i]Type for REF_86

Name: REF_86 Function: initiateZcTokenFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
o_1 (-> [])(Hash.Order) := ϕ(['REF_26'])
[i]Type for o

Name: o Function: initiateZcTokenFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: principal, premium, underlying, maker, maturity, key, vault, exit
Finance Type: undef
a_1(uint256) := ϕ(['REF_27'])
[i]Type for a

Name: a Function: initiateZcTokenFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
c_1 (-> [])(Sig.Components) := ϕ(['REF_28'])
[i]Type for c

Name: c Function: initiateZcTokenFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
filled_4(mapping(bytes32 => uint256)) := ϕ(['filled_12', 'filled_3', 'filled_6', 'filled_24', 'filled_15', 'filled_9', 'filled_0', 'filled_21', 'filled_18'])
[i]Type for filled

Name: filled Function: initiateZcTokenFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
marketPlace_6(address) := ϕ(['marketPlace_28', 'marketPlace_16', 'marketPlace_30', 'marketPlace_0', 'marketPlace_9', 'marketPlace_13', 'marketPlace_5', 'marketPlace_21', 'marketPlace_24', 'marketPlace_1', 'marketPlace_26'])
[i]Type for marketPlace

Name: marketPlace Function: initiateZcTokenFillingVaultInitiate
Num: -1
Den: -1
Address: 2
Norm: u
LF: marketPlace
Value: u
Fields: 
Finance Type: undef
fenominator_4(uint16[]) := ϕ(['fenominator_13', 'fenominator_0', 'fenominator_11', 'fenominator_7', 'fenominator_1', 'fenominator_15', 'fenominator_17', 'fenominator_5', 'fenominator_9', 'fenominator_18', 'fenominator_3'])
[i]Type for fenominator

Name: fenominator Function: initiateZcTokenFillingVaultInitiate
Num: -1
Den: -1
Address: 1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
TMP_82(bytes32) = INTERNAL_CALL, Swivel.validOrderHash(Hash.Order,Sig.Components)(o_1 (-> []),c_1 (-> []))
o_1 (-> [])(Hash.Order) := ϕ(['o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])'])
[i]Type for o

Name: o Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: expiry, premium, principal, underlying, maker, maturity, key, vault, exit
Finance Type: undef
c_1 (-> [])(Sig.Components) := ϕ(['c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])'])
[i]Type for c

Name: c Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
cancelled_2(mapping(bytes32 => bool)) := ϕ(['cancelled_2', 'cancelled_0', 'cancelled_1'])
[i]Type for cancelled

Name: cancelled Function: validOrderHash
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
domain_2(bytes32) := ϕ(['domain_0', 'domain_1'])
[i]Type for domain

Name: domain Function: validOrderHash
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_300(bytes32) = LIBRARY_CALL, dest:Hash, function:Hash.order(Hash.Order), arguments:['o_1 (-> [])'] 
[i]Type for TMP_300

Name: TMP_300 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
hash_1(bytes32) := TMP_300(bytes32)
Finance type key: (-1, -1)
[i]Type for hash

Name: hash Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_252(bool) -> cancelled_2[hash_1]
[i]Type for REF_252

Name: cancelled Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_301 = ! REF_252 
[i]Type for TMP_301

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_302(None) = SOLIDITY_CALL require(bool,string)(TMP_301,order cancelled)
[i]Type for TMP_302

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_253(uint256) -> o_1 (-> []).expiry
[i]Type for REF_253

Name: REF_253 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_303(bool) = REF_253 >= block.timestamp
[i]Type for TMP_303

Name: TMP_303 Function: validOrderHash
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_304(None) = SOLIDITY_CALL require(bool,string)(TMP_303,order expired)
[i]Type for TMP_304

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_254(address) -> o_1 (-> []).maker
[i]Type for REF_254

Name: REF_254 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_305(bytes32) = LIBRARY_CALL, dest:Hash, function:Hash.message(bytes32,bytes32), arguments:['domain_2', 'hash_1'] 
[i]Type for TMP_305

Name: TMP_305 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_306(address) = LIBRARY_CALL, dest:Sig, function:Sig.recover(bytes32,Sig.Components), arguments:['TMP_305', 'c_1 (-> [])'] 
[i]Type for TMP_306

Name: TMP_306 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_307(bool) = REF_254 == TMP_306
[i]Type for TMP_307

Name: TMP_307 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_308(None) = SOLIDITY_CALL require(bool,string)(TMP_307,invalid signature)
[i]Type for TMP_308

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
RETURN hash_1
o_1 (-> [])(Hash.Order) := ϕ(['o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])'])
[i]Type for o

Name: o Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: expiry, premium, principal, underlying, maker, maturity, key, vault, exit
Finance Type: undef
c_1 (-> [])(Sig.Components) := ϕ(['c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])'])
[i]Type for c

Name: c Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
cancelled_2(mapping(bytes32 => bool)) := ϕ(['cancelled_2', 'cancelled_0', 'cancelled_1'])
[i]Type for cancelled

Name: cancelled Function: validOrderHash
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
domain_2(bytes32) := ϕ(['domain_0', 'domain_1'])
[i]Type for domain

Name: domain Function: validOrderHash
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_300(bytes32) = LIBRARY_CALL, dest:Hash, function:Hash.order(Hash.Order), arguments:['o_1 (-> [])'] 
[i]Type for TMP_300

Name: TMP_300 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
hash_1(bytes32) := TMP_300(bytes32)
Finance type key: (-1, -1)
[i]Type for hash

Name: hash Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_252(bool) -> cancelled_2[hash_1]
[i]Type for REF_252

Name: cancelled Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_301 = ! REF_252 
[i]Type for TMP_301

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_302(None) = SOLIDITY_CALL require(bool,string)(TMP_301,order cancelled)
[i]Type for TMP_302

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_253(uint256) -> o_1 (-> []).expiry
[i]Type for REF_253

Name: REF_253 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_303(bool) = REF_253 >= block.timestamp
[i]Type for TMP_303

Name: TMP_303 Function: validOrderHash
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_304(None) = SOLIDITY_CALL require(bool,string)(TMP_303,order expired)
[i]Type for TMP_304

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_254(address) -> o_1 (-> []).maker
[i]Type for REF_254

Name: REF_254 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_305(bytes32) = LIBRARY_CALL, dest:Hash, function:Hash.message(bytes32,bytes32), arguments:['domain_2', 'hash_1'] 
[i]Type for TMP_305

Name: TMP_305 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_306(address) = LIBRARY_CALL, dest:Sig, function:Sig.recover(bytes32,Sig.Components), arguments:['TMP_305', 'c_1 (-> [])'] 
[i]Type for TMP_306

Name: TMP_306 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_307(bool) = REF_254 == TMP_306
[i]Type for TMP_307

Name: TMP_307 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_308(None) = SOLIDITY_CALL require(bool,string)(TMP_307,invalid signature)
[i]Type for TMP_308

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
RETURN hash_1
[i]Type for TMP_82

Name: TMP_82 Function: initiateZcTokenFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
hash_1(bytes32) := TMP_82(bytes32)
Finance type key: (-1, -1)
[i]Type for hash

Name: hash Function: initiateZcTokenFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_64(uint256) -> o_1 (-> []).principal
[i]Type for REF_64

Name: REF_64 Function: initiateZcTokenFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_65(uint256) -> filled_5[hash_1]
[i]Type for REF_65

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_83(uint256) = REF_64 (c)- REF_65
[i]Type for TMP_83

Name: TMP_83 Function: initiateZcTokenFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_84(bool) = a_1 <= TMP_83
[i]Type for TMP_84

Name: TMP_84 Function: initiateZcTokenFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_85(None) = SOLIDITY_CALL require(bool,string)(TMP_84,taker amount > available volume)
[i]Type for TMP_85

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_66(uint256) -> filled_5[hash_1]
[i]Type for REF_66

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
filled_6(mapping(bytes32 => uint256)) := ϕ(['filled_5'])
[i]Type for filled

Name: filled Function: initiateZcTokenFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_66(-> filled_6) = REF_66 (c)+ a_1
[i]Type for REF_66

Name: REF_66 Function: initiateZcTokenFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_86(uint256) = a_1 (c)* 1000000000000000000
[i]Type for TMP_86

Name: TMP_86 Function: initiateZcTokenFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
REF_67(uint256) -> o_1 (-> []).principal
[i]Type for REF_67

Name: REF_67 Function: initiateZcTokenFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_87(uint256) = TMP_86 (c)/ REF_67
[i]Type for TMP_87

Name: TMP_87 Function: initiateZcTokenFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
REF_68(uint256) -> o_1 (-> []).premium
[i]Type for REF_68

Name: REF_68 Function: initiateZcTokenFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_88(uint256) = TMP_87 (c)* REF_68
[i]Type for TMP_88

Name: TMP_88 Function: initiateZcTokenFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
TMP_89(uint256) = TMP_88 (c)/ 1000000000000000000
[i]Type for TMP_89

Name: TMP_89 Function: initiateZcTokenFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
premiumFilled_1(uint256) := TMP_89(uint256)
Finance type key: (-1, -1)
[i]Type for premiumFilled

Name: premiumFilled Function: initiateZcTokenFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
TMP_90(uint256) = premiumFilled_1 (c)* 1000000000000000000
[i]Type for TMP_90

Name: TMP_90 Function: initiateZcTokenFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
REF_69(uint16) -> fenominator_5[0]
[i]Type for REF_69

Name: None Function: None
Num: -1
Den: -1
Address: 1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
TMP_91(uint256) = TMP_90 (c)/ REF_69
[i]Type for TMP_91

Name: TMP_91 Function: initiateZcTokenFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
TMP_92(uint256) = TMP_91 (c)/ 1000000000000000000
[i]Type for TMP_92

Name: TMP_92 Function: initiateZcTokenFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
fee_1(uint256) := TMP_92(uint256)
Finance type key: (-1, -1)
[i]Type for fee

Name: fee Function: initiateZcTokenFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
REF_70(address) -> o_1 (-> []).underlying
[i]Type for REF_70

Name: REF_70 Function: initiateZcTokenFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_93 = CONVERT REF_70 to Erc20
[i]Type for TMP_93

Name: TMP_93 Function: initiateZcTokenFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
uToken_1(Erc20) := TMP_93(Erc20)
Finance type key: (-1, -1)
[i]Type for uToken

Name: uToken Function: initiateZcTokenFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_72(address) -> o_1 (-> []).maker
[i]Type for REF_72

Name: REF_72 Function: initiateZcTokenFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_94(bool) = HIGH_LEVEL_CALL, dest:uToken_1(Erc20), function:transferFrom, arguments:['REF_72', 'msg.sender', 'premiumFilled_1']  
[i]Type for TMP_94

Name: TMP_94 Function: initiateZcTokenFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
marketPlace_8(address) := ϕ(['marketPlace_28', 'marketPlace_16', 'marketPlace_30', 'marketPlace_5', 'marketPlace_9', 'marketPlace_13', 'marketPlace_21', 'marketPlace_24', 'marketPlace_7', 'marketPlace_1', 'marketPlace_26'])
[i]Type for marketPlace

Name: marketPlace Function: initiateZcTokenFillingVaultInitiate
Num: -1
Den: -1
Address: 2
Norm: u
LF: marketPlace
Value: u
Fields: 
Finance Type: undef
TMP_95 = CONVERT this to address
[i]Type for TMP_95

Name: TMP_95 Function: initiateZcTokenFillingVaultInitiate
Num: 
Den: 
Address: 5
Norm: u
LF: Swivel
Value: u
Fields: 
Finance Type: undef
TMP_96(uint256) = a_1 (c)+ fee_1
[i]Type for TMP_96

Name: TMP_96 Function: initiateZcTokenFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
TMP_97(bool) = HIGH_LEVEL_CALL, dest:uToken_1(Erc20), function:transferFrom, arguments:['msg.sender', 'TMP_95', 'TMP_96']  
[i]Type for TMP_97

Name: TMP_97 Function: initiateZcTokenFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
marketPlace_9(address) := ϕ(['marketPlace_28', 'marketPlace_16', 'marketPlace_30', 'marketPlace_5', 'marketPlace_9', 'marketPlace_13', 'marketPlace_21', 'marketPlace_24', 'marketPlace_1', 'marketPlace_8', 'marketPlace_26'])
[i]Type for marketPlace

Name: marketPlace Function: initiateZcTokenFillingVaultInitiate
Num: -1
Den: -1
Address: 2
Norm: u
LF: marketPlace
Value: u
Fields: 
Finance Type: undef
TMP_98 = CONVERT marketPlace_9 to MarketPlace
[i]Type for TMP_98

Name: TMP_98 Function: initiateZcTokenFillingVaultInitiate
Num: -1
Den: -1
Address: 2
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
mPlace_1(MarketPlace) := TMP_98(MarketPlace)
Finance type key: (-1, -1)
[i]Type for mPlace

Name: mPlace Function: initiateZcTokenFillingVaultInitiate
Num: -1
Den: -1
Address: 2
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
REF_75(address) -> o_1 (-> []).underlying
[i]Type for REF_75

Name: REF_75 Function: initiateZcTokenFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_76(uint256) -> o_1 (-> []).maturity
[i]Type for REF_76

Name: REF_76 Function: initiateZcTokenFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_99(address) = HIGH_LEVEL_CALL, dest:mPlace_1(MarketPlace), function:cTokenAddress, arguments:['REF_75', 'REF_76']  
[i]Type for TMP_99

Name: TMP_99 Function: initiateZcTokenFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
cTokenAddr_1(address) := TMP_99(address)
Finance type key: (-1, -1)
[i]Type for cTokenAddr

Name: cTokenAddr Function: initiateZcTokenFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_100(bool) = HIGH_LEVEL_CALL, dest:uToken_1(Erc20), function:approve, arguments:['cTokenAddr_1', 'a_1']  
[i]Type for TMP_100

Name: TMP_100 Function: initiateZcTokenFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_101 = CONVERT cTokenAddr_1 to CErc20
[i]Type for TMP_101

Name: TMP_101 Function: initiateZcTokenFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
TMP_102(uint256) = HIGH_LEVEL_CALL, dest:TMP_101(CErc20), function:mint, arguments:['a_1']  
[i]Type for TMP_102

Name: TMP_102 Function: initiateZcTokenFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_103(bool) = TMP_102 == 0
[i]Type for TMP_103

Name: TMP_103 Function: initiateZcTokenFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_104(None) = SOLIDITY_CALL require(bool,string)(TMP_103,minting CToken Failed)
[i]Type for TMP_104

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_80(address) -> o_1 (-> []).underlying
[i]Type for REF_80

Name: REF_80 Function: initiateZcTokenFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_81(uint256) -> o_1 (-> []).maturity
[i]Type for REF_81

Name: REF_81 Function: initiateZcTokenFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_82(address) -> o_1 (-> []).maker
[i]Type for REF_82

Name: REF_82 Function: initiateZcTokenFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_105(bool) = HIGH_LEVEL_CALL, dest:mPlace_1(MarketPlace), function:custodialInitiate, arguments:['REF_80', 'REF_81', 'msg.sender', 'REF_82', 'a_1']  
[i]Type for TMP_105

Name: TMP_105 Function: initiateZcTokenFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_106(None) = SOLIDITY_CALL require(bool,string)(TMP_105,custodial initiate failed)
[i]Type for TMP_106

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_83(bytes32) -> o_1 (-> []).key
[i]Type for REF_83

Name: REF_83 Function: initiateZcTokenFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_84(address) -> o_1 (-> []).maker
[i]Type for REF_84

Name: REF_84 Function: initiateZcTokenFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_85(bool) -> o_1 (-> []).vault
[i]Type for REF_85

Name: REF_85 Function: initiateZcTokenFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_86(bool) -> o_1 (-> []).exit
[i]Type for REF_86

Name: REF_86 Function: initiateZcTokenFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_34(Hash.Order) -> o_1 (-> [])[i_2]
[i]Type for REF_34

Name: o_1 (-> []) Function: initiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_35(uint256) -> a_1 (-> [])[i_2]
[i]Type for REF_35

Name: a_1 (-> []) Function: initiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_36(Sig.Components) -> c_1 (-> [])[i_2]
[i]Type for REF_36

Name: c_1 (-> []) Function: initiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
INTERNAL_CALL, Swivel.initiateVaultFillingVaultExit(Hash.Order,uint256,Sig.Components)(REF_34,REF_35,REF_36)
o_1 (-> [])(Hash.Order) := ϕ(['REF_34'])
[i]Type for o

Name: o Function: initiateVaultFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: premium, principal, underlying, maker, maturity, key, vault, exit
Finance Type: undef
a_1(uint256) := ϕ(['REF_35'])
[i]Type for a

Name: a Function: initiateVaultFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
c_1 (-> [])(Sig.Components) := ϕ(['REF_36'])
[i]Type for c

Name: c Function: initiateVaultFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
filled_10(mapping(bytes32 => uint256)) := ϕ(['filled_12', 'filled_3', 'filled_6', 'filled_24', 'filled_15', 'filled_9', 'filled_0', 'filled_21', 'filled_18'])
[i]Type for filled

Name: filled Function: initiateVaultFillingVaultExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
marketPlace_14(address) := ϕ(['marketPlace_28', 'marketPlace_16', 'marketPlace_30', 'marketPlace_0', 'marketPlace_9', 'marketPlace_13', 'marketPlace_5', 'marketPlace_21', 'marketPlace_24', 'marketPlace_1', 'marketPlace_26'])
[i]Type for marketPlace

Name: marketPlace Function: initiateVaultFillingVaultExit
Num: -1
Den: -1
Address: 2
Norm: u
LF: marketPlace
Value: u
Fields: 
Finance Type: undef
fenominator_8(uint16[]) := ϕ(['fenominator_13', 'fenominator_0', 'fenominator_11', 'fenominator_7', 'fenominator_1', 'fenominator_15', 'fenominator_17', 'fenominator_5', 'fenominator_9', 'fenominator_18', 'fenominator_3'])
[i]Type for fenominator

Name: fenominator Function: initiateVaultFillingVaultExit
Num: -1
Den: -1
Address: 1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
TMP_127(bytes32) = INTERNAL_CALL, Swivel.validOrderHash(Hash.Order,Sig.Components)(o_1 (-> []),c_1 (-> []))
o_1 (-> [])(Hash.Order) := ϕ(['o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])'])
[i]Type for o

Name: o Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: expiry, premium, principal, underlying, maker, maturity, key, vault, exit
Finance Type: undef
c_1 (-> [])(Sig.Components) := ϕ(['c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])'])
[i]Type for c

Name: c Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
cancelled_2(mapping(bytes32 => bool)) := ϕ(['cancelled_2', 'cancelled_0', 'cancelled_1'])
[i]Type for cancelled

Name: cancelled Function: validOrderHash
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
domain_2(bytes32) := ϕ(['domain_0', 'domain_1'])
[i]Type for domain

Name: domain Function: validOrderHash
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_300(bytes32) = LIBRARY_CALL, dest:Hash, function:Hash.order(Hash.Order), arguments:['o_1 (-> [])'] 
[i]Type for TMP_300

Name: TMP_300 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
hash_1(bytes32) := TMP_300(bytes32)
Finance type key: (-1, -1)
[i]Type for hash

Name: hash Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_252(bool) -> cancelled_2[hash_1]
[i]Type for REF_252

Name: cancelled Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_301 = ! REF_252 
[i]Type for TMP_301

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_302(None) = SOLIDITY_CALL require(bool,string)(TMP_301,order cancelled)
[i]Type for TMP_302

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_253(uint256) -> o_1 (-> []).expiry
[i]Type for REF_253

Name: REF_253 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_303(bool) = REF_253 >= block.timestamp
[i]Type for TMP_303

Name: TMP_303 Function: validOrderHash
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_304(None) = SOLIDITY_CALL require(bool,string)(TMP_303,order expired)
[i]Type for TMP_304

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_254(address) -> o_1 (-> []).maker
[i]Type for REF_254

Name: REF_254 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_305(bytes32) = LIBRARY_CALL, dest:Hash, function:Hash.message(bytes32,bytes32), arguments:['domain_2', 'hash_1'] 
[i]Type for TMP_305

Name: TMP_305 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_306(address) = LIBRARY_CALL, dest:Sig, function:Sig.recover(bytes32,Sig.Components), arguments:['TMP_305', 'c_1 (-> [])'] 
[i]Type for TMP_306

Name: TMP_306 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_307(bool) = REF_254 == TMP_306
[i]Type for TMP_307

Name: TMP_307 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_308(None) = SOLIDITY_CALL require(bool,string)(TMP_307,invalid signature)
[i]Type for TMP_308

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
RETURN hash_1
o_1 (-> [])(Hash.Order) := ϕ(['o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])'])
[i]Type for o

Name: o Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: expiry, premium, principal, underlying, maker, maturity, key, vault, exit
Finance Type: undef
c_1 (-> [])(Sig.Components) := ϕ(['c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])'])
[i]Type for c

Name: c Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
cancelled_2(mapping(bytes32 => bool)) := ϕ(['cancelled_2', 'cancelled_0', 'cancelled_1'])
[i]Type for cancelled

Name: cancelled Function: validOrderHash
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
domain_2(bytes32) := ϕ(['domain_0', 'domain_1'])
[i]Type for domain

Name: domain Function: validOrderHash
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_300(bytes32) = LIBRARY_CALL, dest:Hash, function:Hash.order(Hash.Order), arguments:['o_1 (-> [])'] 
[i]Type for TMP_300

Name: TMP_300 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
hash_1(bytes32) := TMP_300(bytes32)
Finance type key: (-1, -1)
[i]Type for hash

Name: hash Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_252(bool) -> cancelled_2[hash_1]
[i]Type for REF_252

Name: cancelled Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_301 = ! REF_252 
[i]Type for TMP_301

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_302(None) = SOLIDITY_CALL require(bool,string)(TMP_301,order cancelled)
[i]Type for TMP_302

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_253(uint256) -> o_1 (-> []).expiry
[i]Type for REF_253

Name: REF_253 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_303(bool) = REF_253 >= block.timestamp
[i]Type for TMP_303

Name: TMP_303 Function: validOrderHash
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_304(None) = SOLIDITY_CALL require(bool,string)(TMP_303,order expired)
[i]Type for TMP_304

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_254(address) -> o_1 (-> []).maker
[i]Type for REF_254

Name: REF_254 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_305(bytes32) = LIBRARY_CALL, dest:Hash, function:Hash.message(bytes32,bytes32), arguments:['domain_2', 'hash_1'] 
[i]Type for TMP_305

Name: TMP_305 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_306(address) = LIBRARY_CALL, dest:Sig, function:Sig.recover(bytes32,Sig.Components), arguments:['TMP_305', 'c_1 (-> [])'] 
[i]Type for TMP_306

Name: TMP_306 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_307(bool) = REF_254 == TMP_306
[i]Type for TMP_307

Name: TMP_307 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_308(None) = SOLIDITY_CALL require(bool,string)(TMP_307,invalid signature)
[i]Type for TMP_308

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
RETURN hash_1
[i]Type for TMP_127

Name: TMP_127 Function: initiateVaultFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
hash_1(bytes32) := TMP_127(bytes32)
Finance type key: (-1, -1)
[i]Type for hash

Name: hash Function: initiateVaultFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_104(uint256) -> o_1 (-> []).premium
[i]Type for REF_104

Name: REF_104 Function: initiateVaultFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_105(uint256) -> filled_11[hash_1]
[i]Type for REF_105

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_128(uint256) = REF_104 (c)- REF_105
[i]Type for TMP_128

Name: TMP_128 Function: initiateVaultFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_129(bool) = a_1 <= TMP_128
[i]Type for TMP_129

Name: TMP_129 Function: initiateVaultFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_130(None) = SOLIDITY_CALL require(bool,string)(TMP_129,taker amount > available volume)
[i]Type for TMP_130

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_106(uint256) -> filled_11[hash_1]
[i]Type for REF_106

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
filled_12(mapping(bytes32 => uint256)) := ϕ(['filled_11'])
[i]Type for filled

Name: filled Function: initiateVaultFillingVaultExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_106(-> filled_12) = REF_106 (c)+ a_1
[i]Type for REF_106

Name: REF_106 Function: initiateVaultFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_131(uint256) = a_1 (c)* 1000000000000000000
[i]Type for TMP_131

Name: TMP_131 Function: initiateVaultFillingVaultExit
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
REF_107(uint256) -> o_1 (-> []).premium
[i]Type for REF_107

Name: REF_107 Function: initiateVaultFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_132(uint256) = TMP_131 (c)/ REF_107
[i]Type for TMP_132

Name: TMP_132 Function: initiateVaultFillingVaultExit
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
REF_108(uint256) -> o_1 (-> []).principal
[i]Type for REF_108

Name: REF_108 Function: initiateVaultFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_133(uint256) = TMP_132 (c)* REF_108
[i]Type for TMP_133

Name: TMP_133 Function: initiateVaultFillingVaultExit
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
TMP_134(uint256) = TMP_133 (c)/ 1000000000000000000
[i]Type for TMP_134

Name: TMP_134 Function: initiateVaultFillingVaultExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
principalFilled_1(uint256) := TMP_134(uint256)
Finance type key: (-1, -1)
[i]Type for principalFilled

Name: principalFilled Function: initiateVaultFillingVaultExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
TMP_135(uint256) = principalFilled_1 (c)* 1000000000000000000
[i]Type for TMP_135

Name: TMP_135 Function: initiateVaultFillingVaultExit
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
REF_109(uint16) -> fenominator_9[2]
[i]Type for REF_109

Name: None Function: None
Num: -1
Den: -1
Address: 1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
TMP_136(uint256) = TMP_135 (c)/ REF_109
[i]Type for TMP_136

Name: TMP_136 Function: initiateVaultFillingVaultExit
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
TMP_137(uint256) = TMP_136 (c)/ 1000000000000000000
[i]Type for TMP_137

Name: TMP_137 Function: initiateVaultFillingVaultExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
fee_1(uint256) := TMP_137(uint256)
Finance type key: (-1, -1)
[i]Type for fee

Name: fee Function: initiateVaultFillingVaultExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
REF_110(address) -> o_1 (-> []).underlying
[i]Type for REF_110

Name: REF_110 Function: initiateVaultFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_138 = CONVERT REF_110 to Erc20
[i]Type for TMP_138

Name: TMP_138 Function: initiateVaultFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
REF_112(address) -> o_1 (-> []).maker
[i]Type for REF_112

Name: REF_112 Function: initiateVaultFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_139(bool) = HIGH_LEVEL_CALL, dest:TMP_138(Erc20), function:transferFrom, arguments:['msg.sender', 'REF_112', 'a_1']  
[i]Type for TMP_139

Name: TMP_139 Function: initiateVaultFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
marketPlace_16(address) := ϕ(['marketPlace_28', 'marketPlace_16', 'marketPlace_30', 'marketPlace_15', 'marketPlace_5', 'marketPlace_9', 'marketPlace_13', 'marketPlace_21', 'marketPlace_24', 'marketPlace_1', 'marketPlace_26'])
[i]Type for marketPlace

Name: marketPlace Function: initiateVaultFillingVaultExit
Num: -1
Den: -1
Address: 2
Norm: u
LF: marketPlace
Value: u
Fields: 
Finance Type: undef
TMP_140 = CONVERT marketPlace_16 to MarketPlace
[i]Type for TMP_140

Name: TMP_140 Function: initiateVaultFillingVaultExit
Num: -1
Den: -1
Address: 2
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
mPlace_1(MarketPlace) := TMP_140(MarketPlace)
Finance type key: (-1, -1)
[i]Type for mPlace

Name: mPlace Function: initiateVaultFillingVaultExit
Num: -1
Den: -1
Address: 2
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
REF_114(address) -> o_1 (-> []).underlying
[i]Type for REF_114

Name: REF_114 Function: initiateVaultFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_115(uint256) -> o_1 (-> []).maturity
[i]Type for REF_115

Name: REF_115 Function: initiateVaultFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_116(address) -> o_1 (-> []).maker
[i]Type for REF_116

Name: REF_116 Function: initiateVaultFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_141(bool) = HIGH_LEVEL_CALL, dest:mPlace_1(MarketPlace), function:p2pVaultExchange, arguments:['REF_114', 'REF_115', 'REF_116', 'msg.sender', 'principalFilled_1']  
[i]Type for TMP_141

Name: TMP_141 Function: initiateVaultFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_142(None) = SOLIDITY_CALL require(bool,string)(TMP_141,vault exchange failed)
[i]Type for TMP_142

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_118(address) -> o_1 (-> []).underlying
[i]Type for REF_118

Name: REF_118 Function: initiateVaultFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_119(uint256) -> o_1 (-> []).maturity
[i]Type for REF_119

Name: REF_119 Function: initiateVaultFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_143(bool) = HIGH_LEVEL_CALL, dest:mPlace_1(MarketPlace), function:transferVaultNotionalFee, arguments:['REF_118', 'REF_119', 'msg.sender', 'fee_1']  
[i]Type for TMP_143

Name: TMP_143 Function: initiateVaultFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_144(None) = SOLIDITY_CALL require(bool,string)(TMP_143,notional fee transfer failed)
[i]Type for TMP_144

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_120(bytes32) -> o_1 (-> []).key
[i]Type for REF_120

Name: REF_120 Function: initiateVaultFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_121(address) -> o_1 (-> []).maker
[i]Type for REF_121

Name: REF_121 Function: initiateVaultFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_122(bool) -> o_1 (-> []).vault
[i]Type for REF_122

Name: REF_122 Function: initiateVaultFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_123(bool) -> o_1 (-> []).exit
[i]Type for REF_123

Name: REF_123 Function: initiateVaultFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
o_1 (-> [])(Hash.Order) := ϕ(['REF_34'])
[i]Type for o

Name: o Function: initiateVaultFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: premium, principal, underlying, maker, maturity, key, vault, exit
Finance Type: undef
a_1(uint256) := ϕ(['REF_35'])
[i]Type for a

Name: a Function: initiateVaultFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
c_1 (-> [])(Sig.Components) := ϕ(['REF_36'])
[i]Type for c

Name: c Function: initiateVaultFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
filled_10(mapping(bytes32 => uint256)) := ϕ(['filled_12', 'filled_3', 'filled_6', 'filled_24', 'filled_15', 'filled_9', 'filled_0', 'filled_21', 'filled_18'])
[i]Type for filled

Name: filled Function: initiateVaultFillingVaultExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
marketPlace_14(address) := ϕ(['marketPlace_28', 'marketPlace_16', 'marketPlace_30', 'marketPlace_0', 'marketPlace_9', 'marketPlace_13', 'marketPlace_5', 'marketPlace_21', 'marketPlace_24', 'marketPlace_1', 'marketPlace_26'])
[i]Type for marketPlace

Name: marketPlace Function: initiateVaultFillingVaultExit
Num: -1
Den: -1
Address: 2
Norm: u
LF: marketPlace
Value: u
Fields: 
Finance Type: undef
fenominator_8(uint16[]) := ϕ(['fenominator_13', 'fenominator_0', 'fenominator_11', 'fenominator_7', 'fenominator_1', 'fenominator_15', 'fenominator_17', 'fenominator_5', 'fenominator_9', 'fenominator_18', 'fenominator_3'])
[i]Type for fenominator

Name: fenominator Function: initiateVaultFillingVaultExit
Num: -1
Den: -1
Address: 1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
TMP_127(bytes32) = INTERNAL_CALL, Swivel.validOrderHash(Hash.Order,Sig.Components)(o_1 (-> []),c_1 (-> []))
o_1 (-> [])(Hash.Order) := ϕ(['o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])'])
[i]Type for o

Name: o Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: expiry, premium, principal, underlying, maker, maturity, key, vault, exit
Finance Type: undef
c_1 (-> [])(Sig.Components) := ϕ(['c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])'])
[i]Type for c

Name: c Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
cancelled_2(mapping(bytes32 => bool)) := ϕ(['cancelled_2', 'cancelled_0', 'cancelled_1'])
[i]Type for cancelled

Name: cancelled Function: validOrderHash
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
domain_2(bytes32) := ϕ(['domain_0', 'domain_1'])
[i]Type for domain

Name: domain Function: validOrderHash
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_300(bytes32) = LIBRARY_CALL, dest:Hash, function:Hash.order(Hash.Order), arguments:['o_1 (-> [])'] 
[i]Type for TMP_300

Name: TMP_300 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
hash_1(bytes32) := TMP_300(bytes32)
Finance type key: (-1, -1)
[i]Type for hash

Name: hash Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_252(bool) -> cancelled_2[hash_1]
[i]Type for REF_252

Name: cancelled Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_301 = ! REF_252 
[i]Type for TMP_301

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_302(None) = SOLIDITY_CALL require(bool,string)(TMP_301,order cancelled)
[i]Type for TMP_302

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_253(uint256) -> o_1 (-> []).expiry
[i]Type for REF_253

Name: REF_253 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_303(bool) = REF_253 >= block.timestamp
[i]Type for TMP_303

Name: TMP_303 Function: validOrderHash
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_304(None) = SOLIDITY_CALL require(bool,string)(TMP_303,order expired)
[i]Type for TMP_304

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_254(address) -> o_1 (-> []).maker
[i]Type for REF_254

Name: REF_254 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_305(bytes32) = LIBRARY_CALL, dest:Hash, function:Hash.message(bytes32,bytes32), arguments:['domain_2', 'hash_1'] 
[i]Type for TMP_305

Name: TMP_305 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_306(address) = LIBRARY_CALL, dest:Sig, function:Sig.recover(bytes32,Sig.Components), arguments:['TMP_305', 'c_1 (-> [])'] 
[i]Type for TMP_306

Name: TMP_306 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_307(bool) = REF_254 == TMP_306
[i]Type for TMP_307

Name: TMP_307 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_308(None) = SOLIDITY_CALL require(bool,string)(TMP_307,invalid signature)
[i]Type for TMP_308

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
RETURN hash_1
o_1 (-> [])(Hash.Order) := ϕ(['o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])'])
[i]Type for o

Name: o Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: expiry, premium, principal, underlying, maker, maturity, key, vault, exit
Finance Type: undef
c_1 (-> [])(Sig.Components) := ϕ(['c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])'])
[i]Type for c

Name: c Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
cancelled_2(mapping(bytes32 => bool)) := ϕ(['cancelled_2', 'cancelled_0', 'cancelled_1'])
[i]Type for cancelled

Name: cancelled Function: validOrderHash
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
domain_2(bytes32) := ϕ(['domain_0', 'domain_1'])
[i]Type for domain

Name: domain Function: validOrderHash
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_300(bytes32) = LIBRARY_CALL, dest:Hash, function:Hash.order(Hash.Order), arguments:['o_1 (-> [])'] 
[i]Type for TMP_300

Name: TMP_300 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
hash_1(bytes32) := TMP_300(bytes32)
Finance type key: (-1, -1)
[i]Type for hash

Name: hash Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_252(bool) -> cancelled_2[hash_1]
[i]Type for REF_252

Name: cancelled Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_301 = ! REF_252 
[i]Type for TMP_301

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_302(None) = SOLIDITY_CALL require(bool,string)(TMP_301,order cancelled)
[i]Type for TMP_302

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_253(uint256) -> o_1 (-> []).expiry
[i]Type for REF_253

Name: REF_253 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_303(bool) = REF_253 >= block.timestamp
[i]Type for TMP_303

Name: TMP_303 Function: validOrderHash
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_304(None) = SOLIDITY_CALL require(bool,string)(TMP_303,order expired)
[i]Type for TMP_304

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_254(address) -> o_1 (-> []).maker
[i]Type for REF_254

Name: REF_254 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_305(bytes32) = LIBRARY_CALL, dest:Hash, function:Hash.message(bytes32,bytes32), arguments:['domain_2', 'hash_1'] 
[i]Type for TMP_305

Name: TMP_305 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_306(address) = LIBRARY_CALL, dest:Sig, function:Sig.recover(bytes32,Sig.Components), arguments:['TMP_305', 'c_1 (-> [])'] 
[i]Type for TMP_306

Name: TMP_306 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_307(bool) = REF_254 == TMP_306
[i]Type for TMP_307

Name: TMP_307 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_308(None) = SOLIDITY_CALL require(bool,string)(TMP_307,invalid signature)
[i]Type for TMP_308

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
RETURN hash_1
[i]Type for TMP_127

Name: TMP_127 Function: initiateVaultFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
hash_1(bytes32) := TMP_127(bytes32)
Finance type key: (-1, -1)
[i]Type for hash

Name: hash Function: initiateVaultFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_104(uint256) -> o_1 (-> []).premium
[i]Type for REF_104

Name: REF_104 Function: initiateVaultFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_105(uint256) -> filled_11[hash_1]
[i]Type for REF_105

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_128(uint256) = REF_104 (c)- REF_105
[i]Type for TMP_128

Name: TMP_128 Function: initiateVaultFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_129(bool) = a_1 <= TMP_128
[i]Type for TMP_129

Name: TMP_129 Function: initiateVaultFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_130(None) = SOLIDITY_CALL require(bool,string)(TMP_129,taker amount > available volume)
[i]Type for TMP_130

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_106(uint256) -> filled_11[hash_1]
[i]Type for REF_106

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
filled_12(mapping(bytes32 => uint256)) := ϕ(['filled_11'])
[i]Type for filled

Name: filled Function: initiateVaultFillingVaultExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_106(-> filled_12) = REF_106 (c)+ a_1
[i]Type for REF_106

Name: REF_106 Function: initiateVaultFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_131(uint256) = a_1 (c)* 1000000000000000000
[i]Type for TMP_131

Name: TMP_131 Function: initiateVaultFillingVaultExit
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
REF_107(uint256) -> o_1 (-> []).premium
[i]Type for REF_107

Name: REF_107 Function: initiateVaultFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_132(uint256) = TMP_131 (c)/ REF_107
[i]Type for TMP_132

Name: TMP_132 Function: initiateVaultFillingVaultExit
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
REF_108(uint256) -> o_1 (-> []).principal
[i]Type for REF_108

Name: REF_108 Function: initiateVaultFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_133(uint256) = TMP_132 (c)* REF_108
[i]Type for TMP_133

Name: TMP_133 Function: initiateVaultFillingVaultExit
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
TMP_134(uint256) = TMP_133 (c)/ 1000000000000000000
[i]Type for TMP_134

Name: TMP_134 Function: initiateVaultFillingVaultExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
principalFilled_1(uint256) := TMP_134(uint256)
Finance type key: (-1, -1)
[i]Type for principalFilled

Name: principalFilled Function: initiateVaultFillingVaultExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
TMP_135(uint256) = principalFilled_1 (c)* 1000000000000000000
[i]Type for TMP_135

Name: TMP_135 Function: initiateVaultFillingVaultExit
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
REF_109(uint16) -> fenominator_9[2]
[i]Type for REF_109

Name: None Function: None
Num: -1
Den: -1
Address: 1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
TMP_136(uint256) = TMP_135 (c)/ REF_109
[i]Type for TMP_136

Name: TMP_136 Function: initiateVaultFillingVaultExit
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
TMP_137(uint256) = TMP_136 (c)/ 1000000000000000000
[i]Type for TMP_137

Name: TMP_137 Function: initiateVaultFillingVaultExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
fee_1(uint256) := TMP_137(uint256)
Finance type key: (-1, -1)
[i]Type for fee

Name: fee Function: initiateVaultFillingVaultExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
REF_110(address) -> o_1 (-> []).underlying
[i]Type for REF_110

Name: REF_110 Function: initiateVaultFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_138 = CONVERT REF_110 to Erc20
[i]Type for TMP_138

Name: TMP_138 Function: initiateVaultFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
REF_112(address) -> o_1 (-> []).maker
[i]Type for REF_112

Name: REF_112 Function: initiateVaultFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_139(bool) = HIGH_LEVEL_CALL, dest:TMP_138(Erc20), function:transferFrom, arguments:['msg.sender', 'REF_112', 'a_1']  
[i]Type for TMP_139

Name: TMP_139 Function: initiateVaultFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
marketPlace_16(address) := ϕ(['marketPlace_28', 'marketPlace_16', 'marketPlace_30', 'marketPlace_15', 'marketPlace_5', 'marketPlace_9', 'marketPlace_13', 'marketPlace_21', 'marketPlace_24', 'marketPlace_1', 'marketPlace_26'])
[i]Type for marketPlace

Name: marketPlace Function: initiateVaultFillingVaultExit
Num: -1
Den: -1
Address: 2
Norm: u
LF: marketPlace
Value: u
Fields: 
Finance Type: undef
TMP_140 = CONVERT marketPlace_16 to MarketPlace
[i]Type for TMP_140

Name: TMP_140 Function: initiateVaultFillingVaultExit
Num: -1
Den: -1
Address: 2
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
mPlace_1(MarketPlace) := TMP_140(MarketPlace)
Finance type key: (-1, -1)
[i]Type for mPlace

Name: mPlace Function: initiateVaultFillingVaultExit
Num: -1
Den: -1
Address: 2
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
REF_114(address) -> o_1 (-> []).underlying
[i]Type for REF_114

Name: REF_114 Function: initiateVaultFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_115(uint256) -> o_1 (-> []).maturity
[i]Type for REF_115

Name: REF_115 Function: initiateVaultFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_116(address) -> o_1 (-> []).maker
[i]Type for REF_116

Name: REF_116 Function: initiateVaultFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_141(bool) = HIGH_LEVEL_CALL, dest:mPlace_1(MarketPlace), function:p2pVaultExchange, arguments:['REF_114', 'REF_115', 'REF_116', 'msg.sender', 'principalFilled_1']  
[i]Type for TMP_141

Name: TMP_141 Function: initiateVaultFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_142(None) = SOLIDITY_CALL require(bool,string)(TMP_141,vault exchange failed)
[i]Type for TMP_142

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_118(address) -> o_1 (-> []).underlying
[i]Type for REF_118

Name: REF_118 Function: initiateVaultFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_119(uint256) -> o_1 (-> []).maturity
[i]Type for REF_119

Name: REF_119 Function: initiateVaultFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_143(bool) = HIGH_LEVEL_CALL, dest:mPlace_1(MarketPlace), function:transferVaultNotionalFee, arguments:['REF_118', 'REF_119', 'msg.sender', 'fee_1']  
[i]Type for TMP_143

Name: TMP_143 Function: initiateVaultFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_144(None) = SOLIDITY_CALL require(bool,string)(TMP_143,notional fee transfer failed)
[i]Type for TMP_144

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_120(bytes32) -> o_1 (-> []).key
[i]Type for REF_120

Name: REF_120 Function: initiateVaultFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_121(address) -> o_1 (-> []).maker
[i]Type for REF_121

Name: REF_121 Function: initiateVaultFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_122(bool) -> o_1 (-> []).vault
[i]Type for REF_122

Name: REF_122 Function: initiateVaultFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_123(bool) -> o_1 (-> []).exit
[i]Type for REF_123

Name: REF_123 Function: initiateVaultFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_23(Hash.Order) -> o_1 (-> [])[i_2]
[i]Type for REF_23

Name: o_1 (-> []) Function: initiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_24(uint256) -> a_1 (-> [])[i_2]
[i]Type for REF_24

Name: a_1 (-> []) Function: initiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_25(Sig.Components) -> c_1 (-> [])[i_2]
[i]Type for REF_25

Name: c_1 (-> []) Function: initiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
INTERNAL_CALL, Swivel.initiateVaultFillingZcTokenInitiate(Hash.Order,uint256,Sig.Components)(REF_23,REF_24,REF_25)
o_1 (-> [])(Hash.Order) := ϕ(['REF_23'])
[i]Type for o

Name: o Function: initiateVaultFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: premium, principal, underlying, maker, maturity, key, vault, exit
Finance Type: undef
a_1(uint256) := ϕ(['REF_24'])
[i]Type for a

Name: a Function: initiateVaultFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
c_1 (-> [])(Sig.Components) := ϕ(['REF_25'])
[i]Type for c

Name: c Function: initiateVaultFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
filled_1(mapping(bytes32 => uint256)) := ϕ(['filled_12', 'filled_3', 'filled_6', 'filled_24', 'filled_15', 'filled_9', 'filled_0', 'filled_21', 'filled_18'])
[i]Type for filled

Name: filled Function: initiateVaultFillingZcTokenInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
marketPlace_2(address) := ϕ(['marketPlace_28', 'marketPlace_16', 'marketPlace_30', 'marketPlace_0', 'marketPlace_9', 'marketPlace_13', 'marketPlace_5', 'marketPlace_21', 'marketPlace_24', 'marketPlace_1', 'marketPlace_26'])
[i]Type for marketPlace

Name: marketPlace Function: initiateVaultFillingZcTokenInitiate
Num: -1
Den: -1
Address: 2
Norm: u
LF: marketPlace
Value: u
Fields: 
Finance Type: undef
fenominator_2(uint16[]) := ϕ(['fenominator_13', 'fenominator_0', 'fenominator_11', 'fenominator_7', 'fenominator_1', 'fenominator_15', 'fenominator_17', 'fenominator_5', 'fenominator_9', 'fenominator_18', 'fenominator_3'])
[i]Type for fenominator

Name: fenominator Function: initiateVaultFillingZcTokenInitiate
Num: -1
Den: -1
Address: 1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
TMP_55(bytes32) = INTERNAL_CALL, Swivel.validOrderHash(Hash.Order,Sig.Components)(o_1 (-> []),c_1 (-> []))
o_1 (-> [])(Hash.Order) := ϕ(['o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])'])
[i]Type for o

Name: o Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: expiry, premium, principal, underlying, maker, maturity, key, vault, exit
Finance Type: undef
c_1 (-> [])(Sig.Components) := ϕ(['c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])'])
[i]Type for c

Name: c Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
cancelled_2(mapping(bytes32 => bool)) := ϕ(['cancelled_2', 'cancelled_0', 'cancelled_1'])
[i]Type for cancelled

Name: cancelled Function: validOrderHash
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
domain_2(bytes32) := ϕ(['domain_0', 'domain_1'])
[i]Type for domain

Name: domain Function: validOrderHash
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_300(bytes32) = LIBRARY_CALL, dest:Hash, function:Hash.order(Hash.Order), arguments:['o_1 (-> [])'] 
[i]Type for TMP_300

Name: TMP_300 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
hash_1(bytes32) := TMP_300(bytes32)
Finance type key: (-1, -1)
[i]Type for hash

Name: hash Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_252(bool) -> cancelled_2[hash_1]
[i]Type for REF_252

Name: cancelled Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_301 = ! REF_252 
[i]Type for TMP_301

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_302(None) = SOLIDITY_CALL require(bool,string)(TMP_301,order cancelled)
[i]Type for TMP_302

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_253(uint256) -> o_1 (-> []).expiry
[i]Type for REF_253

Name: REF_253 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_303(bool) = REF_253 >= block.timestamp
[i]Type for TMP_303

Name: TMP_303 Function: validOrderHash
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_304(None) = SOLIDITY_CALL require(bool,string)(TMP_303,order expired)
[i]Type for TMP_304

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_254(address) -> o_1 (-> []).maker
[i]Type for REF_254

Name: REF_254 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_305(bytes32) = LIBRARY_CALL, dest:Hash, function:Hash.message(bytes32,bytes32), arguments:['domain_2', 'hash_1'] 
[i]Type for TMP_305

Name: TMP_305 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_306(address) = LIBRARY_CALL, dest:Sig, function:Sig.recover(bytes32,Sig.Components), arguments:['TMP_305', 'c_1 (-> [])'] 
[i]Type for TMP_306

Name: TMP_306 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_307(bool) = REF_254 == TMP_306
[i]Type for TMP_307

Name: TMP_307 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_308(None) = SOLIDITY_CALL require(bool,string)(TMP_307,invalid signature)
[i]Type for TMP_308

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
RETURN hash_1
o_1 (-> [])(Hash.Order) := ϕ(['o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])'])
[i]Type for o

Name: o Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: expiry, premium, principal, underlying, maker, maturity, key, vault, exit
Finance Type: undef
c_1 (-> [])(Sig.Components) := ϕ(['c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])'])
[i]Type for c

Name: c Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
cancelled_2(mapping(bytes32 => bool)) := ϕ(['cancelled_2', 'cancelled_0', 'cancelled_1'])
[i]Type for cancelled

Name: cancelled Function: validOrderHash
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
domain_2(bytes32) := ϕ(['domain_0', 'domain_1'])
[i]Type for domain

Name: domain Function: validOrderHash
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_300(bytes32) = LIBRARY_CALL, dest:Hash, function:Hash.order(Hash.Order), arguments:['o_1 (-> [])'] 
[i]Type for TMP_300

Name: TMP_300 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
hash_1(bytes32) := TMP_300(bytes32)
Finance type key: (-1, -1)
[i]Type for hash

Name: hash Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_252(bool) -> cancelled_2[hash_1]
[i]Type for REF_252

Name: cancelled Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_301 = ! REF_252 
[i]Type for TMP_301

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_302(None) = SOLIDITY_CALL require(bool,string)(TMP_301,order cancelled)
[i]Type for TMP_302

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_253(uint256) -> o_1 (-> []).expiry
[i]Type for REF_253

Name: REF_253 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_303(bool) = REF_253 >= block.timestamp
[i]Type for TMP_303

Name: TMP_303 Function: validOrderHash
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_304(None) = SOLIDITY_CALL require(bool,string)(TMP_303,order expired)
[i]Type for TMP_304

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_254(address) -> o_1 (-> []).maker
[i]Type for REF_254

Name: REF_254 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_305(bytes32) = LIBRARY_CALL, dest:Hash, function:Hash.message(bytes32,bytes32), arguments:['domain_2', 'hash_1'] 
[i]Type for TMP_305

Name: TMP_305 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_306(address) = LIBRARY_CALL, dest:Sig, function:Sig.recover(bytes32,Sig.Components), arguments:['TMP_305', 'c_1 (-> [])'] 
[i]Type for TMP_306

Name: TMP_306 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_307(bool) = REF_254 == TMP_306
[i]Type for TMP_307

Name: TMP_307 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_308(None) = SOLIDITY_CALL require(bool,string)(TMP_307,invalid signature)
[i]Type for TMP_308

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
RETURN hash_1
[i]Type for TMP_55

Name: TMP_55 Function: initiateVaultFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
hash_1(bytes32) := TMP_55(bytes32)
Finance type key: (-1, -1)
[i]Type for hash

Name: hash Function: initiateVaultFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_37(uint256) -> o_1 (-> []).premium
[i]Type for REF_37

Name: REF_37 Function: initiateVaultFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_38(uint256) -> filled_2[hash_1]
[i]Type for REF_38

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_56(uint256) = REF_37 (c)- REF_38
[i]Type for TMP_56

Name: TMP_56 Function: initiateVaultFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_57(bool) = a_1 <= TMP_56
[i]Type for TMP_57

Name: TMP_57 Function: initiateVaultFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_58(None) = SOLIDITY_CALL require(bool,string)(TMP_57,taker amount > available volume)
[i]Type for TMP_58

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_39(uint256) -> filled_2[hash_1]
[i]Type for REF_39

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
filled_3(mapping(bytes32 => uint256)) := ϕ(['filled_2'])
[i]Type for filled

Name: filled Function: initiateVaultFillingZcTokenInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_39(-> filled_3) = REF_39 (c)+ a_1
[i]Type for REF_39

Name: REF_39 Function: initiateVaultFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_59(uint256) = a_1 (c)* 1000000000000000000
[i]Type for TMP_59

Name: TMP_59 Function: initiateVaultFillingZcTokenInitiate
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
REF_40(uint256) -> o_1 (-> []).premium
[i]Type for REF_40

Name: REF_40 Function: initiateVaultFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_60(uint256) = TMP_59 (c)/ REF_40
[i]Type for TMP_60

Name: TMP_60 Function: initiateVaultFillingZcTokenInitiate
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
REF_41(uint256) -> o_1 (-> []).principal
[i]Type for REF_41

Name: REF_41 Function: initiateVaultFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_61(uint256) = TMP_60 (c)* REF_41
[i]Type for TMP_61

Name: TMP_61 Function: initiateVaultFillingZcTokenInitiate
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
TMP_62(uint256) = TMP_61 (c)/ 1000000000000000000
[i]Type for TMP_62

Name: TMP_62 Function: initiateVaultFillingZcTokenInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
principalFilled_1(uint256) := TMP_62(uint256)
Finance type key: (-1, -1)
[i]Type for principalFilled

Name: principalFilled Function: initiateVaultFillingZcTokenInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
TMP_63(uint256) = principalFilled_1 (c)* 1000000000000000000
[i]Type for TMP_63

Name: TMP_63 Function: initiateVaultFillingZcTokenInitiate
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
REF_42(uint16) -> fenominator_3[2]
[i]Type for REF_42

Name: None Function: None
Num: -1
Den: -1
Address: 1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
TMP_64(uint256) = TMP_63 (c)/ REF_42
[i]Type for TMP_64

Name: TMP_64 Function: initiateVaultFillingZcTokenInitiate
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
TMP_65(uint256) = TMP_64 (c)/ 1000000000000000000
[i]Type for TMP_65

Name: TMP_65 Function: initiateVaultFillingZcTokenInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
fee_1(uint256) := TMP_65(uint256)
Finance type key: (-1, -1)
[i]Type for fee

Name: fee Function: initiateVaultFillingZcTokenInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
REF_43(address) -> o_1 (-> []).underlying
[i]Type for REF_43

Name: REF_43 Function: initiateVaultFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_66 = CONVERT REF_43 to Erc20
[i]Type for TMP_66

Name: TMP_66 Function: initiateVaultFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
uToken_1(Erc20) := TMP_66(Erc20)
Finance type key: (-1, -1)
[i]Type for uToken

Name: uToken Function: initiateVaultFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_45(address) -> o_1 (-> []).maker
[i]Type for REF_45

Name: REF_45 Function: initiateVaultFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_67(bool) = HIGH_LEVEL_CALL, dest:uToken_1(Erc20), function:transferFrom, arguments:['msg.sender', 'REF_45', 'a_1']  
[i]Type for TMP_67

Name: TMP_67 Function: initiateVaultFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
marketPlace_4(address) := ϕ(['marketPlace_28', 'marketPlace_16', 'marketPlace_30', 'marketPlace_5', 'marketPlace_9', 'marketPlace_13', 'marketPlace_21', 'marketPlace_24', 'marketPlace_3', 'marketPlace_1', 'marketPlace_26'])
[i]Type for marketPlace

Name: marketPlace Function: initiateVaultFillingZcTokenInitiate
Num: -1
Den: -1
Address: 2
Norm: u
LF: marketPlace
Value: u
Fields: 
Finance Type: undef
REF_47(address) -> o_1 (-> []).maker
[i]Type for REF_47

Name: REF_47 Function: initiateVaultFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_68 = CONVERT this to address
[i]Type for TMP_68

Name: TMP_68 Function: initiateVaultFillingZcTokenInitiate
Num: 
Den: 
Address: 5
Norm: u
LF: Swivel
Value: u
Fields: 
Finance Type: undef
TMP_69(bool) = HIGH_LEVEL_CALL, dest:uToken_1(Erc20), function:transferFrom, arguments:['REF_47', 'TMP_68', 'principalFilled_1']  
[i]Type for TMP_69

Name: TMP_69 Function: initiateVaultFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
marketPlace_5(address) := ϕ(['marketPlace_28', 'marketPlace_16', 'marketPlace_30', 'marketPlace_5', 'marketPlace_9', 'marketPlace_13', 'marketPlace_21', 'marketPlace_24', 'marketPlace_1', 'marketPlace_4', 'marketPlace_26'])
[i]Type for marketPlace

Name: marketPlace Function: initiateVaultFillingZcTokenInitiate
Num: -1
Den: -1
Address: 2
Norm: u
LF: marketPlace
Value: u
Fields: 
Finance Type: undef
TMP_70 = CONVERT marketPlace_5 to MarketPlace
[i]Type for TMP_70

Name: TMP_70 Function: initiateVaultFillingZcTokenInitiate
Num: -1
Den: -1
Address: 2
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
mPlace_1(MarketPlace) := TMP_70(MarketPlace)
Finance type key: (-1, -1)
[i]Type for mPlace

Name: mPlace Function: initiateVaultFillingZcTokenInitiate
Num: -1
Den: -1
Address: 2
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
REF_49(address) -> o_1 (-> []).underlying
[i]Type for REF_49

Name: REF_49 Function: initiateVaultFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_50(uint256) -> o_1 (-> []).maturity
[i]Type for REF_50

Name: REF_50 Function: initiateVaultFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_71(address) = HIGH_LEVEL_CALL, dest:mPlace_1(MarketPlace), function:cTokenAddress, arguments:['REF_49', 'REF_50']  
[i]Type for TMP_71

Name: TMP_71 Function: initiateVaultFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
cTokenAddr_1(address) := TMP_71(address)
Finance type key: (-1, -1)
[i]Type for cTokenAddr

Name: cTokenAddr Function: initiateVaultFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_72(bool) = HIGH_LEVEL_CALL, dest:uToken_1(Erc20), function:approve, arguments:['cTokenAddr_1', 'principalFilled_1']  
[i]Type for TMP_72

Name: TMP_72 Function: initiateVaultFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_73 = CONVERT cTokenAddr_1 to CErc20
[i]Type for TMP_73

Name: TMP_73 Function: initiateVaultFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
TMP_74(uint256) = HIGH_LEVEL_CALL, dest:TMP_73(CErc20), function:mint, arguments:['principalFilled_1']  
[i]Type for TMP_74

Name: TMP_74 Function: initiateVaultFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_75(bool) = TMP_74 == 0
[i]Type for TMP_75

Name: TMP_75 Function: initiateVaultFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_76(None) = SOLIDITY_CALL require(bool,string)(TMP_75,minting CToken failed)
[i]Type for TMP_76

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_54(address) -> o_1 (-> []).underlying
[i]Type for REF_54

Name: REF_54 Function: initiateVaultFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_55(uint256) -> o_1 (-> []).maturity
[i]Type for REF_55

Name: REF_55 Function: initiateVaultFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_56(address) -> o_1 (-> []).maker
[i]Type for REF_56

Name: REF_56 Function: initiateVaultFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_77(bool) = HIGH_LEVEL_CALL, dest:mPlace_1(MarketPlace), function:custodialInitiate, arguments:['REF_54', 'REF_55', 'REF_56', 'msg.sender', 'principalFilled_1']  
[i]Type for TMP_77

Name: TMP_77 Function: initiateVaultFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_78(None) = SOLIDITY_CALL require(bool,string)(TMP_77,custodial initiate failed)
[i]Type for TMP_78

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_58(address) -> o_1 (-> []).underlying
[i]Type for REF_58

Name: REF_58 Function: initiateVaultFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_59(uint256) -> o_1 (-> []).maturity
[i]Type for REF_59

Name: REF_59 Function: initiateVaultFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_79(bool) = HIGH_LEVEL_CALL, dest:mPlace_1(MarketPlace), function:transferVaultNotionalFee, arguments:['REF_58', 'REF_59', 'msg.sender', 'fee_1']  
[i]Type for TMP_79

Name: TMP_79 Function: initiateVaultFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_80(None) = SOLIDITY_CALL require(bool,string)(TMP_79,notional fee transfer failed)
[i]Type for TMP_80

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_60(bytes32) -> o_1 (-> []).key
[i]Type for REF_60

Name: REF_60 Function: initiateVaultFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_61(address) -> o_1 (-> []).maker
[i]Type for REF_61

Name: REF_61 Function: initiateVaultFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_62(bool) -> o_1 (-> []).vault
[i]Type for REF_62

Name: REF_62 Function: initiateVaultFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_63(bool) -> o_1 (-> []).exit
[i]Type for REF_63

Name: REF_63 Function: initiateVaultFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
o_1 (-> [])(Hash.Order) := ϕ(['REF_23'])
[i]Type for o

Name: o Function: initiateVaultFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: premium, principal, underlying, maker, maturity, key, vault, exit
Finance Type: undef
a_1(uint256) := ϕ(['REF_24'])
[i]Type for a

Name: a Function: initiateVaultFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
c_1 (-> [])(Sig.Components) := ϕ(['REF_25'])
[i]Type for c

Name: c Function: initiateVaultFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
filled_1(mapping(bytes32 => uint256)) := ϕ(['filled_12', 'filled_3', 'filled_6', 'filled_24', 'filled_15', 'filled_9', 'filled_0', 'filled_21', 'filled_18'])
[i]Type for filled

Name: filled Function: initiateVaultFillingZcTokenInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
marketPlace_2(address) := ϕ(['marketPlace_28', 'marketPlace_16', 'marketPlace_30', 'marketPlace_0', 'marketPlace_9', 'marketPlace_13', 'marketPlace_5', 'marketPlace_21', 'marketPlace_24', 'marketPlace_1', 'marketPlace_26'])
[i]Type for marketPlace

Name: marketPlace Function: initiateVaultFillingZcTokenInitiate
Num: -1
Den: -1
Address: 2
Norm: u
LF: marketPlace
Value: u
Fields: 
Finance Type: undef
fenominator_2(uint16[]) := ϕ(['fenominator_13', 'fenominator_0', 'fenominator_11', 'fenominator_7', 'fenominator_1', 'fenominator_15', 'fenominator_17', 'fenominator_5', 'fenominator_9', 'fenominator_18', 'fenominator_3'])
[i]Type for fenominator

Name: fenominator Function: initiateVaultFillingZcTokenInitiate
Num: -1
Den: -1
Address: 1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
TMP_55(bytes32) = INTERNAL_CALL, Swivel.validOrderHash(Hash.Order,Sig.Components)(o_1 (-> []),c_1 (-> []))
o_1 (-> [])(Hash.Order) := ϕ(['o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])'])
[i]Type for o

Name: o Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: expiry, premium, principal, underlying, maker, maturity, key, vault, exit
Finance Type: undef
c_1 (-> [])(Sig.Components) := ϕ(['c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])'])
[i]Type for c

Name: c Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
cancelled_2(mapping(bytes32 => bool)) := ϕ(['cancelled_2', 'cancelled_0', 'cancelled_1'])
[i]Type for cancelled

Name: cancelled Function: validOrderHash
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
domain_2(bytes32) := ϕ(['domain_0', 'domain_1'])
[i]Type for domain

Name: domain Function: validOrderHash
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_300(bytes32) = LIBRARY_CALL, dest:Hash, function:Hash.order(Hash.Order), arguments:['o_1 (-> [])'] 
[i]Type for TMP_300

Name: TMP_300 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
hash_1(bytes32) := TMP_300(bytes32)
Finance type key: (-1, -1)
[i]Type for hash

Name: hash Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_252(bool) -> cancelled_2[hash_1]
[i]Type for REF_252

Name: cancelled Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_301 = ! REF_252 
[i]Type for TMP_301

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_302(None) = SOLIDITY_CALL require(bool,string)(TMP_301,order cancelled)
[i]Type for TMP_302

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_253(uint256) -> o_1 (-> []).expiry
[i]Type for REF_253

Name: REF_253 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_303(bool) = REF_253 >= block.timestamp
[i]Type for TMP_303

Name: TMP_303 Function: validOrderHash
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_304(None) = SOLIDITY_CALL require(bool,string)(TMP_303,order expired)
[i]Type for TMP_304

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_254(address) -> o_1 (-> []).maker
[i]Type for REF_254

Name: REF_254 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_305(bytes32) = LIBRARY_CALL, dest:Hash, function:Hash.message(bytes32,bytes32), arguments:['domain_2', 'hash_1'] 
[i]Type for TMP_305

Name: TMP_305 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_306(address) = LIBRARY_CALL, dest:Sig, function:Sig.recover(bytes32,Sig.Components), arguments:['TMP_305', 'c_1 (-> [])'] 
[i]Type for TMP_306

Name: TMP_306 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_307(bool) = REF_254 == TMP_306
[i]Type for TMP_307

Name: TMP_307 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_308(None) = SOLIDITY_CALL require(bool,string)(TMP_307,invalid signature)
[i]Type for TMP_308

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
RETURN hash_1
o_1 (-> [])(Hash.Order) := ϕ(['o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])'])
[i]Type for o

Name: o Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: expiry, premium, principal, underlying, maker, maturity, key, vault, exit
Finance Type: undef
c_1 (-> [])(Sig.Components) := ϕ(['c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])'])
[i]Type for c

Name: c Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
cancelled_2(mapping(bytes32 => bool)) := ϕ(['cancelled_2', 'cancelled_0', 'cancelled_1'])
[i]Type for cancelled

Name: cancelled Function: validOrderHash
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
domain_2(bytes32) := ϕ(['domain_0', 'domain_1'])
[i]Type for domain

Name: domain Function: validOrderHash
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_300(bytes32) = LIBRARY_CALL, dest:Hash, function:Hash.order(Hash.Order), arguments:['o_1 (-> [])'] 
[i]Type for TMP_300

Name: TMP_300 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
hash_1(bytes32) := TMP_300(bytes32)
Finance type key: (-1, -1)
[i]Type for hash

Name: hash Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_252(bool) -> cancelled_2[hash_1]
[i]Type for REF_252

Name: cancelled Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_301 = ! REF_252 
[i]Type for TMP_301

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_302(None) = SOLIDITY_CALL require(bool,string)(TMP_301,order cancelled)
[i]Type for TMP_302

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_253(uint256) -> o_1 (-> []).expiry
[i]Type for REF_253

Name: REF_253 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_303(bool) = REF_253 >= block.timestamp
[i]Type for TMP_303

Name: TMP_303 Function: validOrderHash
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_304(None) = SOLIDITY_CALL require(bool,string)(TMP_303,order expired)
[i]Type for TMP_304

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_254(address) -> o_1 (-> []).maker
[i]Type for REF_254

Name: REF_254 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_305(bytes32) = LIBRARY_CALL, dest:Hash, function:Hash.message(bytes32,bytes32), arguments:['domain_2', 'hash_1'] 
[i]Type for TMP_305

Name: TMP_305 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_306(address) = LIBRARY_CALL, dest:Sig, function:Sig.recover(bytes32,Sig.Components), arguments:['TMP_305', 'c_1 (-> [])'] 
[i]Type for TMP_306

Name: TMP_306 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_307(bool) = REF_254 == TMP_306
[i]Type for TMP_307

Name: TMP_307 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_308(None) = SOLIDITY_CALL require(bool,string)(TMP_307,invalid signature)
[i]Type for TMP_308

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
RETURN hash_1
[i]Type for TMP_55

Name: TMP_55 Function: initiateVaultFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
hash_1(bytes32) := TMP_55(bytes32)
Finance type key: (-1, -1)
[i]Type for hash

Name: hash Function: initiateVaultFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_37(uint256) -> o_1 (-> []).premium
[i]Type for REF_37

Name: REF_37 Function: initiateVaultFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_38(uint256) -> filled_2[hash_1]
[i]Type for REF_38

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_56(uint256) = REF_37 (c)- REF_38
[i]Type for TMP_56

Name: TMP_56 Function: initiateVaultFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_57(bool) = a_1 <= TMP_56
[i]Type for TMP_57

Name: TMP_57 Function: initiateVaultFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_58(None) = SOLIDITY_CALL require(bool,string)(TMP_57,taker amount > available volume)
[i]Type for TMP_58

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_39(uint256) -> filled_2[hash_1]
[i]Type for REF_39

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
filled_3(mapping(bytes32 => uint256)) := ϕ(['filled_2'])
[i]Type for filled

Name: filled Function: initiateVaultFillingZcTokenInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_39(-> filled_3) = REF_39 (c)+ a_1
[i]Type for REF_39

Name: REF_39 Function: initiateVaultFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_59(uint256) = a_1 (c)* 1000000000000000000
[i]Type for TMP_59

Name: TMP_59 Function: initiateVaultFillingZcTokenInitiate
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
REF_40(uint256) -> o_1 (-> []).premium
[i]Type for REF_40

Name: REF_40 Function: initiateVaultFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_60(uint256) = TMP_59 (c)/ REF_40
[i]Type for TMP_60

Name: TMP_60 Function: initiateVaultFillingZcTokenInitiate
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
REF_41(uint256) -> o_1 (-> []).principal
[i]Type for REF_41

Name: REF_41 Function: initiateVaultFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_61(uint256) = TMP_60 (c)* REF_41
[i]Type for TMP_61

Name: TMP_61 Function: initiateVaultFillingZcTokenInitiate
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
TMP_62(uint256) = TMP_61 (c)/ 1000000000000000000
[i]Type for TMP_62

Name: TMP_62 Function: initiateVaultFillingZcTokenInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
principalFilled_1(uint256) := TMP_62(uint256)
Finance type key: (-1, -1)
[i]Type for principalFilled

Name: principalFilled Function: initiateVaultFillingZcTokenInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
TMP_63(uint256) = principalFilled_1 (c)* 1000000000000000000
[i]Type for TMP_63

Name: TMP_63 Function: initiateVaultFillingZcTokenInitiate
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
REF_42(uint16) -> fenominator_3[2]
[i]Type for REF_42

Name: None Function: None
Num: -1
Den: -1
Address: 1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
TMP_64(uint256) = TMP_63 (c)/ REF_42
[i]Type for TMP_64

Name: TMP_64 Function: initiateVaultFillingZcTokenInitiate
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
TMP_65(uint256) = TMP_64 (c)/ 1000000000000000000
[i]Type for TMP_65

Name: TMP_65 Function: initiateVaultFillingZcTokenInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
fee_1(uint256) := TMP_65(uint256)
Finance type key: (-1, -1)
[i]Type for fee

Name: fee Function: initiateVaultFillingZcTokenInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
REF_43(address) -> o_1 (-> []).underlying
[i]Type for REF_43

Name: REF_43 Function: initiateVaultFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_66 = CONVERT REF_43 to Erc20
[i]Type for TMP_66

Name: TMP_66 Function: initiateVaultFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
uToken_1(Erc20) := TMP_66(Erc20)
Finance type key: (-1, -1)
[i]Type for uToken

Name: uToken Function: initiateVaultFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_45(address) -> o_1 (-> []).maker
[i]Type for REF_45

Name: REF_45 Function: initiateVaultFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_67(bool) = HIGH_LEVEL_CALL, dest:uToken_1(Erc20), function:transferFrom, arguments:['msg.sender', 'REF_45', 'a_1']  
[i]Type for TMP_67

Name: TMP_67 Function: initiateVaultFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
marketPlace_4(address) := ϕ(['marketPlace_28', 'marketPlace_16', 'marketPlace_30', 'marketPlace_5', 'marketPlace_9', 'marketPlace_13', 'marketPlace_21', 'marketPlace_24', 'marketPlace_3', 'marketPlace_1', 'marketPlace_26'])
[i]Type for marketPlace

Name: marketPlace Function: initiateVaultFillingZcTokenInitiate
Num: -1
Den: -1
Address: 2
Norm: u
LF: marketPlace
Value: u
Fields: 
Finance Type: undef
REF_47(address) -> o_1 (-> []).maker
[i]Type for REF_47

Name: REF_47 Function: initiateVaultFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_68 = CONVERT this to address
[i]Type for TMP_68

Name: TMP_68 Function: initiateVaultFillingZcTokenInitiate
Num: 
Den: 
Address: 5
Norm: u
LF: Swivel
Value: u
Fields: 
Finance Type: undef
TMP_69(bool) = HIGH_LEVEL_CALL, dest:uToken_1(Erc20), function:transferFrom, arguments:['REF_47', 'TMP_68', 'principalFilled_1']  
[i]Type for TMP_69

Name: TMP_69 Function: initiateVaultFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
marketPlace_5(address) := ϕ(['marketPlace_28', 'marketPlace_16', 'marketPlace_30', 'marketPlace_5', 'marketPlace_9', 'marketPlace_13', 'marketPlace_21', 'marketPlace_24', 'marketPlace_1', 'marketPlace_4', 'marketPlace_26'])
[i]Type for marketPlace

Name: marketPlace Function: initiateVaultFillingZcTokenInitiate
Num: -1
Den: -1
Address: 2
Norm: u
LF: marketPlace
Value: u
Fields: 
Finance Type: undef
TMP_70 = CONVERT marketPlace_5 to MarketPlace
[i]Type for TMP_70

Name: TMP_70 Function: initiateVaultFillingZcTokenInitiate
Num: -1
Den: -1
Address: 2
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
mPlace_1(MarketPlace) := TMP_70(MarketPlace)
Finance type key: (-1, -1)
[i]Type for mPlace

Name: mPlace Function: initiateVaultFillingZcTokenInitiate
Num: -1
Den: -1
Address: 2
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
REF_49(address) -> o_1 (-> []).underlying
[i]Type for REF_49

Name: REF_49 Function: initiateVaultFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_50(uint256) -> o_1 (-> []).maturity
[i]Type for REF_50

Name: REF_50 Function: initiateVaultFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_71(address) = HIGH_LEVEL_CALL, dest:mPlace_1(MarketPlace), function:cTokenAddress, arguments:['REF_49', 'REF_50']  
[i]Type for TMP_71

Name: TMP_71 Function: initiateVaultFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
cTokenAddr_1(address) := TMP_71(address)
Finance type key: (-1, -1)
[i]Type for cTokenAddr

Name: cTokenAddr Function: initiateVaultFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_72(bool) = HIGH_LEVEL_CALL, dest:uToken_1(Erc20), function:approve, arguments:['cTokenAddr_1', 'principalFilled_1']  
[i]Type for TMP_72

Name: TMP_72 Function: initiateVaultFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_73 = CONVERT cTokenAddr_1 to CErc20
[i]Type for TMP_73

Name: TMP_73 Function: initiateVaultFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
TMP_74(uint256) = HIGH_LEVEL_CALL, dest:TMP_73(CErc20), function:mint, arguments:['principalFilled_1']  
[i]Type for TMP_74

Name: TMP_74 Function: initiateVaultFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_75(bool) = TMP_74 == 0
[i]Type for TMP_75

Name: TMP_75 Function: initiateVaultFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_76(None) = SOLIDITY_CALL require(bool,string)(TMP_75,minting CToken failed)
[i]Type for TMP_76

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_54(address) -> o_1 (-> []).underlying
[i]Type for REF_54

Name: REF_54 Function: initiateVaultFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_55(uint256) -> o_1 (-> []).maturity
[i]Type for REF_55

Name: REF_55 Function: initiateVaultFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_56(address) -> o_1 (-> []).maker
[i]Type for REF_56

Name: REF_56 Function: initiateVaultFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_77(bool) = HIGH_LEVEL_CALL, dest:mPlace_1(MarketPlace), function:custodialInitiate, arguments:['REF_54', 'REF_55', 'REF_56', 'msg.sender', 'principalFilled_1']  
[i]Type for TMP_77

Name: TMP_77 Function: initiateVaultFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_78(None) = SOLIDITY_CALL require(bool,string)(TMP_77,custodial initiate failed)
[i]Type for TMP_78

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_58(address) -> o_1 (-> []).underlying
[i]Type for REF_58

Name: REF_58 Function: initiateVaultFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_59(uint256) -> o_1 (-> []).maturity
[i]Type for REF_59

Name: REF_59 Function: initiateVaultFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_79(bool) = HIGH_LEVEL_CALL, dest:mPlace_1(MarketPlace), function:transferVaultNotionalFee, arguments:['REF_58', 'REF_59', 'msg.sender', 'fee_1']  
[i]Type for TMP_79

Name: TMP_79 Function: initiateVaultFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_80(None) = SOLIDITY_CALL require(bool,string)(TMP_79,notional fee transfer failed)
[i]Type for TMP_80

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_60(bytes32) -> o_1 (-> []).key
[i]Type for REF_60

Name: REF_60 Function: initiateVaultFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_61(address) -> o_1 (-> []).maker
[i]Type for REF_61

Name: REF_61 Function: initiateVaultFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_62(bool) -> o_1 (-> []).vault
[i]Type for REF_62

Name: REF_62 Function: initiateVaultFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_63(bool) -> o_1 (-> []).exit
[i]Type for REF_63

Name: REF_63 Function: initiateVaultFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_54(uint256) := i_2(uint256)
Finance type key: (-1, -1)
[i]Type for TMP_54

Name: TMP_54 Function: initiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_3(uint256) = i_2 (c)+ 1
[i]Type for i

Name: i Function: initiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef



exit
i_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for i

Name: i Function: exit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
i_2(uint256) := ϕ(['i_3', 'i_1'])
[i]Type for i

Name: i Function: exit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_124 -> LENGTH o_1 (-> [])
[i]Type for REF_124

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_146(bool) = i_2 < REF_124
[i]Type for TMP_146

Name: TMP_146 Function: exit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_125(Hash.Order) -> o_1 (-> [])[i_2]
[i]Type for REF_125

Name: o_1 (-> []) Function: exit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_126(bool) -> REF_125.exit
[i]Type for REF_126

Name: REF_126 Function: exit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_147 = ! REF_126 
[i]Type for TMP_147

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_127(Hash.Order) -> o_1 (-> [])[i_2]
[i]Type for REF_127

Name: o_1 (-> []) Function: exit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_128(bool) -> REF_127.vault
[i]Type for REF_128

Name: REF_128 Function: exit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_148 = ! REF_128 
[i]Type for TMP_148

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_132(Hash.Order) -> o_1 (-> [])[i_2]
[i]Type for REF_132

Name: o_1 (-> []) Function: exit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_133(uint256) -> a_1 (-> [])[i_2]
[i]Type for REF_133

Name: a_1 (-> []) Function: exit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_134(Sig.Components) -> c_1 (-> [])[i_2]
[i]Type for REF_134

Name: c_1 (-> []) Function: exit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
INTERNAL_CALL, Swivel.exitVaultFillingVaultInitiate(Hash.Order,uint256,Sig.Components)(REF_132,REF_133,REF_134)
o_1 (-> [])(Hash.Order) := ϕ(['REF_132'])
[i]Type for o

Name: o Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
a_1(uint256) := ϕ(['REF_133'])
[i]Type for a

Name: a Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
c_1 (-> [])(Sig.Components) := ϕ(['REF_134'])
[i]Type for c

Name: c Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
filled_16(mapping(bytes32 => uint256)) := ϕ(['filled_12', 'filled_3', 'filled_6', 'filled_24', 'filled_15', 'filled_9', 'filled_0', 'filled_21', 'filled_18'])
[i]Type for filled

Name: filled Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Balance_1(mapping(address => uint256)) := ϕ(['Balance_0', 'Balance_5'])
[i]Type for Balance

Name: Balance Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: 1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
marketPlace_22(address) := ϕ(['marketPlace_28', 'marketPlace_16', 'marketPlace_30', 'marketPlace_0', 'marketPlace_9', 'marketPlace_13', 'marketPlace_5', 'marketPlace_21', 'marketPlace_24', 'marketPlace_1', 'marketPlace_26'])
[i]Type for marketPlace

Name: marketPlace Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: 2
Norm: u
LF: marketPlace
Value: u
Fields: 
Finance Type: undef
fenominator_12(uint16[]) := ϕ(['fenominator_13', 'fenominator_0', 'fenominator_11', 'fenominator_7', 'fenominator_1', 'fenominator_15', 'fenominator_17', 'fenominator_5', 'fenominator_9', 'fenominator_18', 'fenominator_3'])
[i]Type for fenominator

Name: fenominator Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: 1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
TMP_176(bytes32) = INTERNAL_CALL, Swivel.validOrderHash(Hash.Order,Sig.Components)(o_1 (-> []),c_1 (-> []))
[i]Type for TMP_176

Name: TMP_176 Function: exitVaultFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
hash_1(bytes32) := TMP_176(bytes32)
Finance type key: (-1, -1)
[i]Type for hash

Name: hash Function: exitVaultFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_162(uint256) -> o_1 (-> []).principal
[i]Type for REF_162

Name: REF_162 Function: exitVaultFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_163(uint256) -> filled_17[hash_1]
[i]Type for REF_163

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_177(uint256) = REF_162 (c)- REF_163
[i]Type for TMP_177

Name: TMP_177 Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_178(bool) = a_1 <= TMP_177
[i]Type for TMP_178

Name: TMP_178 Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_179(None) = SOLIDITY_CALL require(bool,string)(TMP_178,taker amount > available volume)
[i]Type for TMP_179

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_164(uint256) -> filled_17[hash_1]
[i]Type for REF_164

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
filled_18(mapping(bytes32 => uint256)) := ϕ(['filled_17'])
[i]Type for filled

Name: filled Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_164(-> filled_18) = REF_164 (c)+ a_1
[i]Type for REF_164

Name: REF_164 Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_180(uint256) = a_1 (c)* 1000000000000000000
[i]Type for TMP_180

Name: TMP_180 Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
REF_165(uint256) -> o_1 (-> []).principal
[i]Type for REF_165

Name: REF_165 Function: exitVaultFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_181(uint256) = TMP_180 (c)/ REF_165
[i]Type for TMP_181

Name: TMP_181 Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
REF_166(uint256) -> o_1 (-> []).premium
[i]Type for REF_166

Name: REF_166 Function: exitVaultFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_182(uint256) = TMP_181 (c)* REF_166
[i]Type for TMP_182

Name: TMP_182 Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
TMP_183(uint256) = TMP_182 (c)/ 1000000000000000000
[i]Type for TMP_183

Name: TMP_183 Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
premiumFilled_1(uint256) := TMP_183(uint256)
Finance type key: (-1, -1)
[i]Type for premiumFilled

Name: premiumFilled Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
TMP_184(uint256) = premiumFilled_1 (c)* 1000000000000000000
[i]Type for TMP_184

Name: TMP_184 Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
REF_167(uint16) -> fenominator_13[3]
[i]Type for REF_167

Name: None Function: None
Num: -1
Den: -1
Address: 1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
TMP_185(uint256) = TMP_184 (c)/ REF_167
[i]Type for TMP_185

Name: TMP_185 Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
TMP_186(uint256) = TMP_185 (c)/ 1000000000000000000
[i]Type for TMP_186

Name: TMP_186 Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
fee_1(uint256) := TMP_186(uint256)
Finance type key: (-1, -1)
[i]Type for fee

Name: fee Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
REF_168(address) -> o_1 (-> []).underlying
[i]Type for REF_168

Name: REF_168 Function: exitVaultFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_187 = CONVERT REF_168 to Erc20
[i]Type for TMP_187

Name: TMP_187 Function: exitVaultFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
uToken_1(Erc20) := TMP_187(Erc20)
Finance type key: (-1, -1)
[i]Type for uToken

Name: uToken Function: exitVaultFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_169(uint256) -> Balance_2[msg.sender]
[i]Type for REF_169

Name: None Function: None
Num: -1
Den: -1
Address: 1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Balance_3(mapping(address => uint256)) := ϕ(['Balance_2'])
[i]Type for Balance

Name: Balance Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: 1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
REF_169(-> Balance_3) = REF_169 (c)+ premiumFilled_1
[i]Type for REF_169

Name: REF_169 Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: raw balance
REF_170(uint256) -> Balance_3[msg.sender]
[i]Type for REF_170

Name: Balance Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: 1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Balance_4(mapping(address => uint256)) := ϕ(['Balance_3'])
[i]Type for Balance

Name: Balance Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: 1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
REF_170(-> Balance_4) = REF_170 (c)- fee_1
[i]Type for REF_170

Name: REF_170 Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
REF_171(uint256) -> Balance_4[msg.sender]
[i]Type for REF_171

Name: Balance Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: 1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Balance_5(mapping(address => uint256)) := ϕ(['Balance_4'])
[i]Type for Balance

Name: Balance Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: 1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
REF_171(-> Balance_5) = REF_171 (c)- fee_1
[i]Type for REF_171

Name: REF_171 Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
TMP_188 = CONVERT marketPlace_23 to MarketPlace
[i]Type for TMP_188

Name: TMP_188 Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: 2
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
REF_173(address) -> o_1 (-> []).underlying
[i]Type for REF_173

Name: REF_173 Function: exitVaultFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_174(uint256) -> o_1 (-> []).maturity
[i]Type for REF_174

Name: REF_174 Function: exitVaultFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_175(address) -> o_1 (-> []).maker
[i]Type for REF_175

Name: REF_175 Function: exitVaultFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_189(bool) = HIGH_LEVEL_CALL, dest:TMP_188(MarketPlace), function:p2pVaultExchange, arguments:['REF_173', 'REF_174', 'msg.sender', 'REF_175', 'a_1']  
[i]Type for TMP_189

Name: TMP_189 Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
marketPlace_24(address) := ϕ(['marketPlace_28', 'marketPlace_16', 'marketPlace_30', 'marketPlace_23', 'marketPlace_5', 'marketPlace_9', 'marketPlace_13', 'marketPlace_21', 'marketPlace_24', 'marketPlace_1', 'marketPlace_26'])
[i]Type for marketPlace

Name: marketPlace Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: 2
Norm: u
LF: marketPlace
Value: u
Fields: 
Finance Type: undef
TMP_190(None) = SOLIDITY_CALL require(bool,string)(TMP_189,vault exchange failed)
[i]Type for TMP_190

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_176(bytes32) -> o_1 (-> []).key
[i]Type for REF_176

Name: REF_176 Function: exitVaultFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_177(address) -> o_1 (-> []).maker
[i]Type for REF_177

Name: REF_177 Function: exitVaultFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_178(bool) -> o_1 (-> []).vault
[i]Type for REF_178

Name: REF_178 Function: exitVaultFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_179(bool) -> o_1 (-> []).exit
[i]Type for REF_179

Name: REF_179 Function: exitVaultFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
o_1 (-> [])(Hash.Order) := ϕ(['REF_132'])
[i]Type for o

Name: o Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: principal, premium, underlying, maturity, maker, key, vault, exit
Finance Type: undef
a_1(uint256) := ϕ(['REF_133'])
[i]Type for a

Name: a Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
c_1 (-> [])(Sig.Components) := ϕ(['REF_134'])
[i]Type for c

Name: c Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
filled_16(mapping(bytes32 => uint256)) := ϕ(['filled_12', 'filled_3', 'filled_6', 'filled_24', 'filled_15', 'filled_9', 'filled_0', 'filled_21', 'filled_18'])
[i]Type for filled

Name: filled Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Balance_1(mapping(address => uint256)) := ϕ(['Balance_0', 'Balance_5'])
[i]Type for Balance

Name: Balance Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: 1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
marketPlace_22(address) := ϕ(['marketPlace_28', 'marketPlace_16', 'marketPlace_30', 'marketPlace_0', 'marketPlace_9', 'marketPlace_13', 'marketPlace_5', 'marketPlace_21', 'marketPlace_24', 'marketPlace_1', 'marketPlace_26'])
[i]Type for marketPlace

Name: marketPlace Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: 2
Norm: u
LF: marketPlace
Value: u
Fields: 
Finance Type: undef
fenominator_12(uint16[]) := ϕ(['fenominator_13', 'fenominator_0', 'fenominator_11', 'fenominator_7', 'fenominator_1', 'fenominator_15', 'fenominator_17', 'fenominator_5', 'fenominator_9', 'fenominator_18', 'fenominator_3'])
[i]Type for fenominator

Name: fenominator Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: 1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
TMP_176(bytes32) = INTERNAL_CALL, Swivel.validOrderHash(Hash.Order,Sig.Components)(o_1 (-> []),c_1 (-> []))
[i]Type for TMP_176

Name: TMP_176 Function: exitVaultFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
hash_1(bytes32) := TMP_176(bytes32)
Finance type key: (-1, -1)
[i]Type for hash

Name: hash Function: exitVaultFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_162(uint256) -> o_1 (-> []).principal
[i]Type for REF_162

Name: REF_162 Function: exitVaultFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_163(uint256) -> filled_17[hash_1]
[i]Type for REF_163

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_177(uint256) = REF_162 (c)- REF_163
[i]Type for TMP_177

Name: TMP_177 Function: exitVaultFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_178(bool) = a_1 <= TMP_177
[i]Type for TMP_178

Name: TMP_178 Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_179(None) = SOLIDITY_CALL require(bool,string)(TMP_178,taker amount > available volume)
[i]Type for TMP_179

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_164(uint256) -> filled_17[hash_1]
[i]Type for REF_164

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
filled_18(mapping(bytes32 => uint256)) := ϕ(['filled_17'])
[i]Type for filled

Name: filled Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_164(-> filled_18) = REF_164 (c)+ a_1
[i]Type for REF_164

Name: REF_164 Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_180(uint256) = a_1 (c)* 1000000000000000000
[i]Type for TMP_180

Name: TMP_180 Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
REF_165(uint256) -> o_1 (-> []).principal
[i]Type for REF_165

Name: REF_165 Function: exitVaultFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_181(uint256) = TMP_180 (c)/ REF_165
[i]Type for TMP_181

Name: TMP_181 Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
REF_166(uint256) -> o_1 (-> []).premium
[i]Type for REF_166

Name: REF_166 Function: exitVaultFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_182(uint256) = TMP_181 (c)* REF_166
[i]Type for TMP_182

Name: TMP_182 Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
TMP_183(uint256) = TMP_182 (c)/ 1000000000000000000
[i]Type for TMP_183

Name: TMP_183 Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
premiumFilled_1(uint256) := TMP_183(uint256)
Finance type key: (-1, -1)
[i]Type for premiumFilled

Name: premiumFilled Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
TMP_184(uint256) = premiumFilled_1 (c)* 1000000000000000000
[i]Type for TMP_184

Name: TMP_184 Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
REF_167(uint16) -> fenominator_13[3]
[i]Type for REF_167

Name: None Function: None
Num: -1
Den: -1
Address: 1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
TMP_185(uint256) = TMP_184 (c)/ REF_167
[i]Type for TMP_185

Name: TMP_185 Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
TMP_186(uint256) = TMP_185 (c)/ 1000000000000000000
[i]Type for TMP_186

Name: TMP_186 Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
fee_1(uint256) := TMP_186(uint256)
Finance type key: (-1, -1)
[i]Type for fee

Name: fee Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
REF_168(address) -> o_1 (-> []).underlying
[i]Type for REF_168

Name: REF_168 Function: exitVaultFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_187 = CONVERT REF_168 to Erc20
[i]Type for TMP_187

Name: TMP_187 Function: exitVaultFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
uToken_1(Erc20) := TMP_187(Erc20)
Finance type key: (-1, -1)
[i]Type for uToken

Name: uToken Function: exitVaultFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_169(uint256) -> Balance_2[msg.sender]
[i]Type for REF_169

Name: None Function: None
Num: -1
Den: -1
Address: 1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Balance_3(mapping(address => uint256)) := ϕ(['Balance_2'])
[i]Type for Balance

Name: Balance Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: 1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
REF_169(-> Balance_3) = REF_169 (c)+ premiumFilled_1
[i]Type for REF_169

Name: REF_169 Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: raw balance
REF_170(uint256) -> Balance_3[msg.sender]
[i]Type for REF_170

Name: Balance Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: 1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Balance_4(mapping(address => uint256)) := ϕ(['Balance_3'])
[i]Type for Balance

Name: Balance Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: 1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
REF_170(-> Balance_4) = REF_170 (c)- fee_1
[i]Type for REF_170

Name: REF_170 Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
REF_171(uint256) -> Balance_4[msg.sender]
[i]Type for REF_171

Name: Balance Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: 1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Balance_5(mapping(address => uint256)) := ϕ(['Balance_4'])
[i]Type for Balance

Name: Balance Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: 1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
REF_171(-> Balance_5) = REF_171 (c)- fee_1
[i]Type for REF_171

Name: REF_171 Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
TMP_188 = CONVERT marketPlace_23 to MarketPlace
[i]Type for TMP_188

Name: TMP_188 Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: 2
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
REF_173(address) -> o_1 (-> []).underlying
[i]Type for REF_173

Name: REF_173 Function: exitVaultFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_174(uint256) -> o_1 (-> []).maturity
[i]Type for REF_174

Name: REF_174 Function: exitVaultFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_175(address) -> o_1 (-> []).maker
[i]Type for REF_175

Name: REF_175 Function: exitVaultFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_189(bool) = HIGH_LEVEL_CALL, dest:TMP_188(MarketPlace), function:p2pVaultExchange, arguments:['REF_173', 'REF_174', 'msg.sender', 'REF_175', 'a_1']  
[i]Type for TMP_189

Name: TMP_189 Function: exitVaultFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
marketPlace_24(address) := ϕ(['marketPlace_28', 'marketPlace_16', 'marketPlace_30', 'marketPlace_23', 'marketPlace_5', 'marketPlace_9', 'marketPlace_13', 'marketPlace_21', 'marketPlace_24', 'marketPlace_1', 'marketPlace_26'])
[i]Type for marketPlace

Name: marketPlace Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: 2
Norm: u
LF: marketPlace
Value: u
Fields: 
Finance Type: undef
TMP_190(None) = SOLIDITY_CALL require(bool,string)(TMP_189,vault exchange failed)
[i]Type for TMP_190

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_176(bytes32) -> o_1 (-> []).key
[i]Type for REF_176

Name: REF_176 Function: exitVaultFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_177(address) -> o_1 (-> []).maker
[i]Type for REF_177

Name: REF_177 Function: exitVaultFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_178(bool) -> o_1 (-> []).vault
[i]Type for REF_178

Name: REF_178 Function: exitVaultFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_179(bool) -> o_1 (-> []).exit
[i]Type for REF_179

Name: REF_179 Function: exitVaultFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
RETURN True
REF_135(Hash.Order) -> o_1 (-> [])[i_2]
[i]Type for REF_135

Name: o_1 (-> []) Function: exit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_136(bool) -> REF_135.vault
[i]Type for REF_136

Name: REF_136 Function: exit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_151 = ! REF_136 
[i]Type for TMP_151

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_129(Hash.Order) -> o_1 (-> [])[i_2]
[i]Type for REF_129

Name: o_1 (-> []) Function: exit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_130(uint256) -> a_1 (-> [])[i_2]
[i]Type for REF_130

Name: a_1 (-> []) Function: exit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_131(Sig.Components) -> c_1 (-> [])[i_2]
[i]Type for REF_131

Name: c_1 (-> []) Function: exit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
INTERNAL_CALL, Swivel.exitZcTokenFillingZcTokenInitiate(Hash.Order,uint256,Sig.Components)(REF_129,REF_130,REF_131)
o_1 (-> [])(Hash.Order) := ϕ(['REF_129'])
[i]Type for o

Name: o Function: exitZcTokenFillingZcTokenInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
a_1(uint256) := ϕ(['REF_130'])
[i]Type for a

Name: a Function: exitZcTokenFillingZcTokenInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
c_1 (-> [])(Sig.Components) := ϕ(['REF_131'])
[i]Type for c

Name: c Function: exitZcTokenFillingZcTokenInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
filled_13(mapping(bytes32 => uint256)) := ϕ(['filled_12', 'filled_3', 'filled_6', 'filled_24', 'filled_15', 'filled_9', 'filled_0', 'filled_21', 'filled_18'])
[i]Type for filled

Name: filled Function: exitZcTokenFillingZcTokenInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
marketPlace_17(address) := ϕ(['marketPlace_28', 'marketPlace_16', 'marketPlace_30', 'marketPlace_0', 'marketPlace_9', 'marketPlace_13', 'marketPlace_5', 'marketPlace_21', 'marketPlace_24', 'marketPlace_1', 'marketPlace_26'])
[i]Type for marketPlace

Name: marketPlace Function: exitZcTokenFillingZcTokenInitiate
Num: -1
Den: -1
Address: 2
Norm: u
LF: marketPlace
Value: u
Fields: 
Finance Type: undef
fenominator_10(uint16[]) := ϕ(['fenominator_13', 'fenominator_0', 'fenominator_11', 'fenominator_7', 'fenominator_1', 'fenominator_15', 'fenominator_17', 'fenominator_5', 'fenominator_9', 'fenominator_18', 'fenominator_3'])
[i]Type for fenominator

Name: fenominator Function: exitZcTokenFillingZcTokenInitiate
Num: -1
Den: -1
Address: 1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
TMP_155(bytes32) = INTERNAL_CALL, Swivel.validOrderHash(Hash.Order,Sig.Components)(o_1 (-> []),c_1 (-> []))
[i]Type for TMP_155

Name: TMP_155 Function: exitZcTokenFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
hash_1(bytes32) := TMP_155(bytes32)
Finance type key: (-1, -1)
[i]Type for hash

Name: hash Function: exitZcTokenFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_143(uint256) -> o_1 (-> []).premium
[i]Type for REF_143

Name: REF_143 Function: exitZcTokenFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_144(uint256) -> filled_14[hash_1]
[i]Type for REF_144

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_156(uint256) = REF_143 (c)- REF_144
[i]Type for TMP_156

Name: TMP_156 Function: exitZcTokenFillingZcTokenInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_157(bool) = a_1 <= TMP_156
[i]Type for TMP_157

Name: TMP_157 Function: exitZcTokenFillingZcTokenInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_158(None) = SOLIDITY_CALL require(bool,string)(TMP_157,taker amount > available volume)
[i]Type for TMP_158

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_145(uint256) -> filled_14[hash_1]
[i]Type for REF_145

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
filled_15(mapping(bytes32 => uint256)) := ϕ(['filled_14'])
[i]Type for filled

Name: filled Function: exitZcTokenFillingZcTokenInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_145(-> filled_15) = REF_145 (c)+ a_1
[i]Type for REF_145

Name: REF_145 Function: exitZcTokenFillingZcTokenInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_159(uint256) = a_1 (c)* 1000000000000000000
[i]Type for TMP_159

Name: TMP_159 Function: exitZcTokenFillingZcTokenInitiate
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
REF_146(uint256) -> o_1 (-> []).premium
[i]Type for REF_146

Name: REF_146 Function: exitZcTokenFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_160(uint256) = TMP_159 (c)/ REF_146
[i]Type for TMP_160

Name: TMP_160 Function: exitZcTokenFillingZcTokenInitiate
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
REF_147(uint256) -> o_1 (-> []).principal
[i]Type for REF_147

Name: REF_147 Function: exitZcTokenFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_161(uint256) = TMP_160 (c)* REF_147
[i]Type for TMP_161

Name: TMP_161 Function: exitZcTokenFillingZcTokenInitiate
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
TMP_162(uint256) = TMP_161 (c)/ 1000000000000000000
[i]Type for TMP_162

Name: TMP_162 Function: exitZcTokenFillingZcTokenInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
principalFilled_1(uint256) := TMP_162(uint256)
Finance type key: (-1, -1)
[i]Type for principalFilled

Name: principalFilled Function: exitZcTokenFillingZcTokenInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
TMP_163(uint256) = principalFilled_1 (c)* 1000000000000000000
[i]Type for TMP_163

Name: TMP_163 Function: exitZcTokenFillingZcTokenInitiate
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
REF_148(uint16) -> fenominator_11[1]
[i]Type for REF_148

Name: None Function: None
Num: -1
Den: -1
Address: 1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
TMP_164(uint256) = TMP_163 (c)/ REF_148
[i]Type for TMP_164

Name: TMP_164 Function: exitZcTokenFillingZcTokenInitiate
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
TMP_165(uint256) = TMP_164 (c)/ 1000000000000000000
[i]Type for TMP_165

Name: TMP_165 Function: exitZcTokenFillingZcTokenInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
fee_1(uint256) := TMP_165(uint256)
Finance type key: (-1, -1)
[i]Type for fee

Name: fee Function: exitZcTokenFillingZcTokenInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
REF_149(address) -> o_1 (-> []).underlying
[i]Type for REF_149

Name: REF_149 Function: exitZcTokenFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_166 = CONVERT REF_149 to Erc20
[i]Type for TMP_166

Name: TMP_166 Function: exitZcTokenFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
uToken_1(Erc20) := TMP_166(Erc20)
Finance type key: (-1, -1)
[i]Type for uToken

Name: uToken Function: exitZcTokenFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_151(address) -> o_1 (-> []).maker
[i]Type for REF_151

Name: REF_151 Function: exitZcTokenFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_167(uint256) = principalFilled_1 (c)- a_1
[i]Type for TMP_167

Name: TMP_167 Function: exitZcTokenFillingZcTokenInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
TMP_168(uint256) = TMP_167 (c)- fee_1
[i]Type for TMP_168

Name: TMP_168 Function: exitZcTokenFillingZcTokenInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_169(bool) = HIGH_LEVEL_CALL, dest:uToken_1(Erc20), function:transferFrom, arguments:['REF_151', 'msg.sender', 'TMP_168']  
[i]Type for TMP_169

Name: TMP_169 Function: exitZcTokenFillingZcTokenInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
marketPlace_19(address) := ϕ(['marketPlace_28', 'marketPlace_16', 'marketPlace_30', 'marketPlace_5', 'marketPlace_9', 'marketPlace_13', 'marketPlace_21', 'marketPlace_24', 'marketPlace_1', 'marketPlace_18', 'marketPlace_26'])
[i]Type for marketPlace

Name: marketPlace Function: exitZcTokenFillingZcTokenInitiate
Num: -1
Den: -1
Address: 2
Norm: u
LF: marketPlace
Value: u
Fields: 
Finance Type: undef
REF_153(address) -> o_1 (-> []).maker
[i]Type for REF_153

Name: REF_153 Function: exitZcTokenFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_170 = CONVERT this to address
[i]Type for TMP_170

Name: TMP_170 Function: exitZcTokenFillingZcTokenInitiate
Num: -1
Den: -1
Address: 5
Norm: u
LF: Swivel
Value: u
Fields: 
Finance Type: undef
TMP_171(bool) = HIGH_LEVEL_CALL, dest:uToken_1(Erc20), function:transferFrom, arguments:['REF_153', 'TMP_170', 'fee_1']  
[i]Type for TMP_171

Name: TMP_171 Function: exitZcTokenFillingZcTokenInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
marketPlace_20(address) := ϕ(['marketPlace_28', 'marketPlace_16', 'marketPlace_30', 'marketPlace_5', 'marketPlace_9', 'marketPlace_13', 'marketPlace_21', 'marketPlace_24', 'marketPlace_19', 'marketPlace_1', 'marketPlace_26'])
[i]Type for marketPlace

Name: marketPlace Function: exitZcTokenFillingZcTokenInitiate
Num: -1
Den: -1
Address: 2
Norm: u
LF: marketPlace
Value: u
Fields: 
Finance Type: undef
TMP_172 = CONVERT marketPlace_20 to MarketPlace
[i]Type for TMP_172

Name: TMP_172 Function: exitZcTokenFillingZcTokenInitiate
Num: -1
Den: -1
Address: 2
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
REF_155(address) -> o_1 (-> []).underlying
[i]Type for REF_155

Name: REF_155 Function: exitZcTokenFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_156(uint256) -> o_1 (-> []).maturity
[i]Type for REF_156

Name: REF_156 Function: exitZcTokenFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_157(address) -> o_1 (-> []).maker
[i]Type for REF_157

Name: REF_157 Function: exitZcTokenFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_173(bool) = HIGH_LEVEL_CALL, dest:TMP_172(MarketPlace), function:p2pZcTokenExchange, arguments:['REF_155', 'REF_156', 'msg.sender', 'REF_157', 'principalFilled_1']  
[i]Type for TMP_173

Name: TMP_173 Function: exitZcTokenFillingZcTokenInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
marketPlace_21(address) := ϕ(['marketPlace_28', 'marketPlace_16', 'marketPlace_30', 'marketPlace_5', 'marketPlace_9', 'marketPlace_13', 'marketPlace_21', 'marketPlace_24', 'marketPlace_1', 'marketPlace_20', 'marketPlace_26'])
[i]Type for marketPlace

Name: marketPlace Function: exitZcTokenFillingZcTokenInitiate
Num: -1
Den: -1
Address: 2
Norm: u
LF: marketPlace
Value: u
Fields: 
Finance Type: undef
TMP_174(None) = SOLIDITY_CALL require(bool,string)(TMP_173,zcToken exchange failed)
[i]Type for TMP_174

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_158(bytes32) -> o_1 (-> []).key
[i]Type for REF_158

Name: REF_158 Function: exitZcTokenFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_159(address) -> o_1 (-> []).maker
[i]Type for REF_159

Name: REF_159 Function: exitZcTokenFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_160(bool) -> o_1 (-> []).vault
[i]Type for REF_160

Name: REF_160 Function: exitZcTokenFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_161(bool) -> o_1 (-> []).exit
[i]Type for REF_161

Name: REF_161 Function: exitZcTokenFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
o_1 (-> [])(Hash.Order) := ϕ(['REF_129'])
[i]Type for o

Name: o Function: exitZcTokenFillingZcTokenInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: premium, principal, underlying, maker, maturity, key, vault, exit
Finance Type: undef
a_1(uint256) := ϕ(['REF_130'])
[i]Type for a

Name: a Function: exitZcTokenFillingZcTokenInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
c_1 (-> [])(Sig.Components) := ϕ(['REF_131'])
[i]Type for c

Name: c Function: exitZcTokenFillingZcTokenInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
filled_13(mapping(bytes32 => uint256)) := ϕ(['filled_12', 'filled_3', 'filled_6', 'filled_24', 'filled_15', 'filled_9', 'filled_0', 'filled_21', 'filled_18'])
[i]Type for filled

Name: filled Function: exitZcTokenFillingZcTokenInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
marketPlace_17(address) := ϕ(['marketPlace_28', 'marketPlace_16', 'marketPlace_30', 'marketPlace_0', 'marketPlace_9', 'marketPlace_13', 'marketPlace_5', 'marketPlace_21', 'marketPlace_24', 'marketPlace_1', 'marketPlace_26'])
[i]Type for marketPlace

Name: marketPlace Function: exitZcTokenFillingZcTokenInitiate
Num: -1
Den: -1
Address: 2
Norm: u
LF: marketPlace
Value: u
Fields: 
Finance Type: undef
fenominator_10(uint16[]) := ϕ(['fenominator_13', 'fenominator_0', 'fenominator_11', 'fenominator_7', 'fenominator_1', 'fenominator_15', 'fenominator_17', 'fenominator_5', 'fenominator_9', 'fenominator_18', 'fenominator_3'])
[i]Type for fenominator

Name: fenominator Function: exitZcTokenFillingZcTokenInitiate
Num: -1
Den: -1
Address: 1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
TMP_155(bytes32) = INTERNAL_CALL, Swivel.validOrderHash(Hash.Order,Sig.Components)(o_1 (-> []),c_1 (-> []))
[i]Type for TMP_155

Name: TMP_155 Function: exitZcTokenFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
hash_1(bytes32) := TMP_155(bytes32)
Finance type key: (-1, -1)
[i]Type for hash

Name: hash Function: exitZcTokenFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_143(uint256) -> o_1 (-> []).premium
[i]Type for REF_143

Name: REF_143 Function: exitZcTokenFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_144(uint256) -> filled_14[hash_1]
[i]Type for REF_144

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_156(uint256) = REF_143 (c)- REF_144
[i]Type for TMP_156

Name: TMP_156 Function: exitZcTokenFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_157(bool) = a_1 <= TMP_156
[i]Type for TMP_157

Name: TMP_157 Function: exitZcTokenFillingZcTokenInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_158(None) = SOLIDITY_CALL require(bool,string)(TMP_157,taker amount > available volume)
[i]Type for TMP_158

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_145(uint256) -> filled_14[hash_1]
[i]Type for REF_145

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
filled_15(mapping(bytes32 => uint256)) := ϕ(['filled_14'])
[i]Type for filled

Name: filled Function: exitZcTokenFillingZcTokenInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_145(-> filled_15) = REF_145 (c)+ a_1
[i]Type for REF_145

Name: REF_145 Function: exitZcTokenFillingZcTokenInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_159(uint256) = a_1 (c)* 1000000000000000000
[i]Type for TMP_159

Name: TMP_159 Function: exitZcTokenFillingZcTokenInitiate
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
REF_146(uint256) -> o_1 (-> []).premium
[i]Type for REF_146

Name: REF_146 Function: exitZcTokenFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_160(uint256) = TMP_159 (c)/ REF_146
[i]Type for TMP_160

Name: TMP_160 Function: exitZcTokenFillingZcTokenInitiate
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
REF_147(uint256) -> o_1 (-> []).principal
[i]Type for REF_147

Name: REF_147 Function: exitZcTokenFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_161(uint256) = TMP_160 (c)* REF_147
[i]Type for TMP_161

Name: TMP_161 Function: exitZcTokenFillingZcTokenInitiate
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
TMP_162(uint256) = TMP_161 (c)/ 1000000000000000000
[i]Type for TMP_162

Name: TMP_162 Function: exitZcTokenFillingZcTokenInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
principalFilled_1(uint256) := TMP_162(uint256)
Finance type key: (-1, -1)
[i]Type for principalFilled

Name: principalFilled Function: exitZcTokenFillingZcTokenInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
TMP_163(uint256) = principalFilled_1 (c)* 1000000000000000000
[i]Type for TMP_163

Name: TMP_163 Function: exitZcTokenFillingZcTokenInitiate
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
REF_148(uint16) -> fenominator_11[1]
[i]Type for REF_148

Name: None Function: None
Num: -1
Den: -1
Address: 1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
TMP_164(uint256) = TMP_163 (c)/ REF_148
[i]Type for TMP_164

Name: TMP_164 Function: exitZcTokenFillingZcTokenInitiate
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
TMP_165(uint256) = TMP_164 (c)/ 1000000000000000000
[i]Type for TMP_165

Name: TMP_165 Function: exitZcTokenFillingZcTokenInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
fee_1(uint256) := TMP_165(uint256)
Finance type key: (-1, -1)
[i]Type for fee

Name: fee Function: exitZcTokenFillingZcTokenInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
REF_149(address) -> o_1 (-> []).underlying
[i]Type for REF_149

Name: REF_149 Function: exitZcTokenFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_166 = CONVERT REF_149 to Erc20
[i]Type for TMP_166

Name: TMP_166 Function: exitZcTokenFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
uToken_1(Erc20) := TMP_166(Erc20)
Finance type key: (-1, -1)
[i]Type for uToken

Name: uToken Function: exitZcTokenFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_151(address) -> o_1 (-> []).maker
[i]Type for REF_151

Name: REF_151 Function: exitZcTokenFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_167(uint256) = principalFilled_1 (c)- a_1
[i]Type for TMP_167

Name: TMP_167 Function: exitZcTokenFillingZcTokenInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
TMP_168(uint256) = TMP_167 (c)- fee_1
[i]Type for TMP_168

Name: TMP_168 Function: exitZcTokenFillingZcTokenInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_169(bool) = HIGH_LEVEL_CALL, dest:uToken_1(Erc20), function:transferFrom, arguments:['REF_151', 'msg.sender', 'TMP_168']  
[i]Type for TMP_169

Name: TMP_169 Function: exitZcTokenFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
marketPlace_19(address) := ϕ(['marketPlace_28', 'marketPlace_16', 'marketPlace_30', 'marketPlace_5', 'marketPlace_9', 'marketPlace_13', 'marketPlace_21', 'marketPlace_24', 'marketPlace_1', 'marketPlace_18', 'marketPlace_26'])
[i]Type for marketPlace

Name: marketPlace Function: exitZcTokenFillingZcTokenInitiate
Num: -1
Den: -1
Address: 2
Norm: u
LF: marketPlace
Value: u
Fields: 
Finance Type: undef
REF_153(address) -> o_1 (-> []).maker
[i]Type for REF_153

Name: REF_153 Function: exitZcTokenFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_170 = CONVERT this to address
[i]Type for TMP_170

Name: TMP_170 Function: exitZcTokenFillingZcTokenInitiate
Num: 
Den: 
Address: 5
Norm: u
LF: Swivel
Value: u
Fields: 
Finance Type: undef
TMP_171(bool) = HIGH_LEVEL_CALL, dest:uToken_1(Erc20), function:transferFrom, arguments:['REF_153', 'TMP_170', 'fee_1']  
[i]Type for TMP_171

Name: TMP_171 Function: exitZcTokenFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
marketPlace_20(address) := ϕ(['marketPlace_28', 'marketPlace_16', 'marketPlace_30', 'marketPlace_5', 'marketPlace_9', 'marketPlace_13', 'marketPlace_21', 'marketPlace_24', 'marketPlace_19', 'marketPlace_1', 'marketPlace_26'])
[i]Type for marketPlace

Name: marketPlace Function: exitZcTokenFillingZcTokenInitiate
Num: -1
Den: -1
Address: 2
Norm: u
LF: marketPlace
Value: u
Fields: 
Finance Type: undef
TMP_172 = CONVERT marketPlace_20 to MarketPlace
[i]Type for TMP_172

Name: TMP_172 Function: exitZcTokenFillingZcTokenInitiate
Num: -1
Den: -1
Address: 2
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
REF_155(address) -> o_1 (-> []).underlying
[i]Type for REF_155

Name: REF_155 Function: exitZcTokenFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_156(uint256) -> o_1 (-> []).maturity
[i]Type for REF_156

Name: REF_156 Function: exitZcTokenFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_157(address) -> o_1 (-> []).maker
[i]Type for REF_157

Name: REF_157 Function: exitZcTokenFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_173(bool) = HIGH_LEVEL_CALL, dest:TMP_172(MarketPlace), function:p2pZcTokenExchange, arguments:['REF_155', 'REF_156', 'msg.sender', 'REF_157', 'principalFilled_1']  
[i]Type for TMP_173

Name: TMP_173 Function: exitZcTokenFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
marketPlace_21(address) := ϕ(['marketPlace_28', 'marketPlace_16', 'marketPlace_30', 'marketPlace_5', 'marketPlace_9', 'marketPlace_13', 'marketPlace_21', 'marketPlace_24', 'marketPlace_1', 'marketPlace_20', 'marketPlace_26'])
[i]Type for marketPlace

Name: marketPlace Function: exitZcTokenFillingZcTokenInitiate
Num: -1
Den: -1
Address: 2
Norm: u
LF: marketPlace
Value: u
Fields: 
Finance Type: undef
TMP_174(None) = SOLIDITY_CALL require(bool,string)(TMP_173,zcToken exchange failed)
[i]Type for TMP_174

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_158(bytes32) -> o_1 (-> []).key
[i]Type for REF_158

Name: REF_158 Function: exitZcTokenFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_159(address) -> o_1 (-> []).maker
[i]Type for REF_159

Name: REF_159 Function: exitZcTokenFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_160(bool) -> o_1 (-> []).vault
[i]Type for REF_160

Name: REF_160 Function: exitZcTokenFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_161(bool) -> o_1 (-> []).exit
[i]Type for REF_161

Name: REF_161 Function: exitZcTokenFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_137(Hash.Order) -> o_1 (-> [])[i_2]
[i]Type for REF_137

Name: o_1 (-> []) Function: exit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_138(uint256) -> a_1 (-> [])[i_2]
[i]Type for REF_138

Name: a_1 (-> []) Function: exit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_139(Sig.Components) -> c_1 (-> [])[i_2]
[i]Type for REF_139

Name: c_1 (-> []) Function: exit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
INTERNAL_CALL, Swivel.exitVaultFillingZcTokenExit(Hash.Order,uint256,Sig.Components)(REF_137,REF_138,REF_139)
o_1 (-> [])(Hash.Order) := ϕ(['REF_137'])
[i]Type for o

Name: o Function: exitVaultFillingZcTokenExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
a_1(uint256) := ϕ(['REF_138'])
[i]Type for a

Name: a Function: exitVaultFillingZcTokenExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
c_1 (-> [])(Sig.Components) := ϕ(['REF_139'])
[i]Type for c

Name: c Function: exitVaultFillingZcTokenExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
filled_19(mapping(bytes32 => uint256)) := ϕ(['filled_12', 'filled_3', 'filled_6', 'filled_24', 'filled_15', 'filled_9', 'filled_0', 'filled_21', 'filled_18'])
[i]Type for filled

Name: filled Function: exitVaultFillingZcTokenExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
marketPlace_25(address) := ϕ(['marketPlace_28', 'marketPlace_16', 'marketPlace_30', 'marketPlace_0', 'marketPlace_9', 'marketPlace_13', 'marketPlace_5', 'marketPlace_21', 'marketPlace_24', 'marketPlace_1', 'marketPlace_26'])
[i]Type for marketPlace

Name: marketPlace Function: exitVaultFillingZcTokenExit
Num: -1
Den: -1
Address: 2
Norm: u
LF: marketPlace
Value: u
Fields: 
Finance Type: undef
fenominator_14(uint16[]) := ϕ(['fenominator_13', 'fenominator_0', 'fenominator_11', 'fenominator_7', 'fenominator_1', 'fenominator_15', 'fenominator_17', 'fenominator_5', 'fenominator_9', 'fenominator_18', 'fenominator_3'])
[i]Type for fenominator

Name: fenominator Function: exitVaultFillingZcTokenExit
Num: -1
Den: -1
Address: 1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
TMP_192(bytes32) = INTERNAL_CALL, Swivel.validOrderHash(Hash.Order,Sig.Components)(o_1 (-> []),c_1 (-> []))
[i]Type for TMP_192

Name: TMP_192 Function: exitVaultFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
hash_1(bytes32) := TMP_192(bytes32)
Finance type key: (-1, -1)
[i]Type for hash

Name: hash Function: exitVaultFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_180(uint256) -> o_1 (-> []).principal
[i]Type for REF_180

Name: REF_180 Function: exitVaultFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_181(uint256) -> filled_20[hash_1]
[i]Type for REF_181

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_193(uint256) = REF_180 (c)- REF_181
[i]Type for TMP_193

Name: TMP_193 Function: exitVaultFillingZcTokenExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_194(bool) = a_1 <= TMP_193
[i]Type for TMP_194

Name: TMP_194 Function: exitVaultFillingZcTokenExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_195(None) = SOLIDITY_CALL require(bool,string)(TMP_194,taker amount > available volume)
[i]Type for TMP_195

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_182(uint256) -> filled_20[hash_1]
[i]Type for REF_182

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
filled_21(mapping(bytes32 => uint256)) := ϕ(['filled_20'])
[i]Type for filled

Name: filled Function: exitVaultFillingZcTokenExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_182(-> filled_21) = REF_182 (c)+ a_1
[i]Type for REF_182

Name: REF_182 Function: exitVaultFillingZcTokenExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_196(uint256) = a_1 (c)* 1000000000000000000
[i]Type for TMP_196

Name: TMP_196 Function: exitVaultFillingZcTokenExit
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
REF_183(uint256) -> o_1 (-> []).principal
[i]Type for REF_183

Name: REF_183 Function: exitVaultFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_197(uint256) = TMP_196 (c)/ REF_183
[i]Type for TMP_197

Name: TMP_197 Function: exitVaultFillingZcTokenExit
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
REF_184(uint256) -> o_1 (-> []).premium
[i]Type for REF_184

Name: REF_184 Function: exitVaultFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_198(uint256) = TMP_197 (c)* REF_184
[i]Type for TMP_198

Name: TMP_198 Function: exitVaultFillingZcTokenExit
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
TMP_199(uint256) = TMP_198 (c)/ 1000000000000000000
[i]Type for TMP_199

Name: TMP_199 Function: exitVaultFillingZcTokenExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
premiumFilled_1(uint256) := TMP_199(uint256)
Finance type key: (-1, -1)
[i]Type for premiumFilled

Name: premiumFilled Function: exitVaultFillingZcTokenExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
TMP_200(uint256) = premiumFilled_1 (c)* 1000000000000000000
[i]Type for TMP_200

Name: TMP_200 Function: exitVaultFillingZcTokenExit
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
REF_185(uint16) -> fenominator_15[3]
[i]Type for REF_185

Name: None Function: None
Num: -1
Den: -1
Address: 1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
TMP_201(uint256) = TMP_200 (c)/ REF_185
[i]Type for TMP_201

Name: TMP_201 Function: exitVaultFillingZcTokenExit
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
TMP_202(uint256) = TMP_201 (c)/ 1000000000000000000
[i]Type for TMP_202

Name: TMP_202 Function: exitVaultFillingZcTokenExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
fee_1(uint256) := TMP_202(uint256)
Finance type key: (-1, -1)
[i]Type for fee

Name: fee Function: exitVaultFillingZcTokenExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
TMP_203 = CONVERT marketPlace_26 to MarketPlace
[i]Type for TMP_203

Name: TMP_203 Function: exitVaultFillingZcTokenExit
Num: -1
Den: -1
Address: 2
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
mPlace_1(MarketPlace) := TMP_203(MarketPlace)
Finance type key: (-1, -1)
[i]Type for mPlace

Name: mPlace Function: exitVaultFillingZcTokenExit
Num: -1
Den: -1
Address: 2
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
REF_187(address) -> o_1 (-> []).underlying
[i]Type for REF_187

Name: REF_187 Function: exitVaultFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_188(uint256) -> o_1 (-> []).maturity
[i]Type for REF_188

Name: REF_188 Function: exitVaultFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_204(address) = HIGH_LEVEL_CALL, dest:mPlace_1(MarketPlace), function:cTokenAddress, arguments:['REF_187', 'REF_188']  
[i]Type for TMP_204

Name: TMP_204 Function: exitVaultFillingZcTokenExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
cTokenAddr_1(address) := TMP_204(address)
Finance type key: (-1, -1)
[i]Type for cTokenAddr

Name: cTokenAddr Function: exitVaultFillingZcTokenExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_205 = CONVERT cTokenAddr_1 to CErc20
[i]Type for TMP_205

Name: TMP_205 Function: exitVaultFillingZcTokenExit
Num: -1
Den: -1
Address: u
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
TMP_206(uint256) = HIGH_LEVEL_CALL, dest:TMP_205(CErc20), function:redeemUnderlying, arguments:['a_1']  
[i]Type for TMP_206

Name: TMP_206 Function: exitVaultFillingZcTokenExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_207(bool) = TMP_206 == 0
[i]Type for TMP_207

Name: TMP_207 Function: exitVaultFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_208(None) = SOLIDITY_CALL require(bool,string)(TMP_207,compound redemption error)
[i]Type for TMP_208

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_190(address) -> o_1 (-> []).underlying
[i]Type for REF_190

Name: REF_190 Function: exitVaultFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_209 = CONVERT REF_190 to Erc20
[i]Type for TMP_209

Name: TMP_209 Function: exitVaultFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
uToken_1(Erc20) := TMP_209(Erc20)
Finance type key: (-1, -1)
[i]Type for uToken

Name: uToken Function: exitVaultFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_192(address) -> o_1 (-> []).maker
[i]Type for REF_192

Name: REF_192 Function: exitVaultFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_210(uint256) = a_1 (c)- premiumFilled_1
[i]Type for TMP_210

Name: TMP_210 Function: exitVaultFillingZcTokenExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
TMP_211(bool) = HIGH_LEVEL_CALL, dest:uToken_1(Erc20), function:transfer, arguments:['REF_192', 'TMP_210']  
[i]Type for TMP_211

Name: TMP_211 Function: exitVaultFillingZcTokenExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_212(uint256) = premiumFilled_1 (c)- fee_1
[i]Type for TMP_212

Name: TMP_212 Function: exitVaultFillingZcTokenExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_213(bool) = HIGH_LEVEL_CALL, dest:uToken_1(Erc20), function:transfer, arguments:['msg.sender', 'TMP_212']  
[i]Type for TMP_213

Name: TMP_213 Function: exitVaultFillingZcTokenExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_195(address) -> o_1 (-> []).underlying
[i]Type for REF_195

Name: REF_195 Function: exitVaultFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_196(uint256) -> o_1 (-> []).maturity
[i]Type for REF_196

Name: REF_196 Function: exitVaultFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_197(address) -> o_1 (-> []).maker
[i]Type for REF_197

Name: REF_197 Function: exitVaultFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_214(bool) = HIGH_LEVEL_CALL, dest:mPlace_1(MarketPlace), function:custodialExit, arguments:['REF_195', 'REF_196', 'REF_197', 'msg.sender', 'a_1']  
[i]Type for TMP_214

Name: TMP_214 Function: exitVaultFillingZcTokenExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_215(None) = SOLIDITY_CALL require(bool,string)(TMP_214,custodial exit failed)
[i]Type for TMP_215

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_198(bytes32) -> o_1 (-> []).key
[i]Type for REF_198

Name: REF_198 Function: exitVaultFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_199(address) -> o_1 (-> []).maker
[i]Type for REF_199

Name: REF_199 Function: exitVaultFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_200(bool) -> o_1 (-> []).vault
[i]Type for REF_200

Name: REF_200 Function: exitVaultFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_201(bool) -> o_1 (-> []).exit
[i]Type for REF_201

Name: REF_201 Function: exitVaultFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
o_1 (-> [])(Hash.Order) := ϕ(['REF_137'])
[i]Type for o

Name: o Function: exitVaultFillingZcTokenExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: principal, premium, underlying, maturity, maker, key, vault, exit
Finance Type: undef
a_1(uint256) := ϕ(['REF_138'])
[i]Type for a

Name: a Function: exitVaultFillingZcTokenExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
c_1 (-> [])(Sig.Components) := ϕ(['REF_139'])
[i]Type for c

Name: c Function: exitVaultFillingZcTokenExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
filled_19(mapping(bytes32 => uint256)) := ϕ(['filled_12', 'filled_3', 'filled_6', 'filled_24', 'filled_15', 'filled_9', 'filled_0', 'filled_21', 'filled_18'])
[i]Type for filled

Name: filled Function: exitVaultFillingZcTokenExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
marketPlace_25(address) := ϕ(['marketPlace_28', 'marketPlace_16', 'marketPlace_30', 'marketPlace_0', 'marketPlace_9', 'marketPlace_13', 'marketPlace_5', 'marketPlace_21', 'marketPlace_24', 'marketPlace_1', 'marketPlace_26'])
[i]Type for marketPlace

Name: marketPlace Function: exitVaultFillingZcTokenExit
Num: -1
Den: -1
Address: 2
Norm: u
LF: marketPlace
Value: u
Fields: 
Finance Type: undef
fenominator_14(uint16[]) := ϕ(['fenominator_13', 'fenominator_0', 'fenominator_11', 'fenominator_7', 'fenominator_1', 'fenominator_15', 'fenominator_17', 'fenominator_5', 'fenominator_9', 'fenominator_18', 'fenominator_3'])
[i]Type for fenominator

Name: fenominator Function: exitVaultFillingZcTokenExit
Num: -1
Den: -1
Address: 1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
TMP_192(bytes32) = INTERNAL_CALL, Swivel.validOrderHash(Hash.Order,Sig.Components)(o_1 (-> []),c_1 (-> []))
[i]Type for TMP_192

Name: TMP_192 Function: exitVaultFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
hash_1(bytes32) := TMP_192(bytes32)
Finance type key: (-1, -1)
[i]Type for hash

Name: hash Function: exitVaultFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_180(uint256) -> o_1 (-> []).principal
[i]Type for REF_180

Name: REF_180 Function: exitVaultFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_181(uint256) -> filled_20[hash_1]
[i]Type for REF_181

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_193(uint256) = REF_180 (c)- REF_181
[i]Type for TMP_193

Name: TMP_193 Function: exitVaultFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_194(bool) = a_1 <= TMP_193
[i]Type for TMP_194

Name: TMP_194 Function: exitVaultFillingZcTokenExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_195(None) = SOLIDITY_CALL require(bool,string)(TMP_194,taker amount > available volume)
[i]Type for TMP_195

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_182(uint256) -> filled_20[hash_1]
[i]Type for REF_182

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
filled_21(mapping(bytes32 => uint256)) := ϕ(['filled_20'])
[i]Type for filled

Name: filled Function: exitVaultFillingZcTokenExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_182(-> filled_21) = REF_182 (c)+ a_1
[i]Type for REF_182

Name: REF_182 Function: exitVaultFillingZcTokenExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_196(uint256) = a_1 (c)* 1000000000000000000
[i]Type for TMP_196

Name: TMP_196 Function: exitVaultFillingZcTokenExit
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
REF_183(uint256) -> o_1 (-> []).principal
[i]Type for REF_183

Name: REF_183 Function: exitVaultFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_197(uint256) = TMP_196 (c)/ REF_183
[i]Type for TMP_197

Name: TMP_197 Function: exitVaultFillingZcTokenExit
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
REF_184(uint256) -> o_1 (-> []).premium
[i]Type for REF_184

Name: REF_184 Function: exitVaultFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_198(uint256) = TMP_197 (c)* REF_184
[i]Type for TMP_198

Name: TMP_198 Function: exitVaultFillingZcTokenExit
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
TMP_199(uint256) = TMP_198 (c)/ 1000000000000000000
[i]Type for TMP_199

Name: TMP_199 Function: exitVaultFillingZcTokenExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
premiumFilled_1(uint256) := TMP_199(uint256)
Finance type key: (-1, -1)
[i]Type for premiumFilled

Name: premiumFilled Function: exitVaultFillingZcTokenExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
TMP_200(uint256) = premiumFilled_1 (c)* 1000000000000000000
[i]Type for TMP_200

Name: TMP_200 Function: exitVaultFillingZcTokenExit
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
REF_185(uint16) -> fenominator_15[3]
[i]Type for REF_185

Name: None Function: None
Num: -1
Den: -1
Address: 1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
TMP_201(uint256) = TMP_200 (c)/ REF_185
[i]Type for TMP_201

Name: TMP_201 Function: exitVaultFillingZcTokenExit
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
TMP_202(uint256) = TMP_201 (c)/ 1000000000000000000
[i]Type for TMP_202

Name: TMP_202 Function: exitVaultFillingZcTokenExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
fee_1(uint256) := TMP_202(uint256)
Finance type key: (-1, -1)
[i]Type for fee

Name: fee Function: exitVaultFillingZcTokenExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
TMP_203 = CONVERT marketPlace_26 to MarketPlace
[i]Type for TMP_203

Name: TMP_203 Function: exitVaultFillingZcTokenExit
Num: -1
Den: -1
Address: 2
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
mPlace_1(MarketPlace) := TMP_203(MarketPlace)
Finance type key: (-1, -1)
[i]Type for mPlace

Name: mPlace Function: exitVaultFillingZcTokenExit
Num: -1
Den: -1
Address: 2
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
REF_187(address) -> o_1 (-> []).underlying
[i]Type for REF_187

Name: REF_187 Function: exitVaultFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_188(uint256) -> o_1 (-> []).maturity
[i]Type for REF_188

Name: REF_188 Function: exitVaultFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_204(address) = HIGH_LEVEL_CALL, dest:mPlace_1(MarketPlace), function:cTokenAddress, arguments:['REF_187', 'REF_188']  
[i]Type for TMP_204

Name: TMP_204 Function: exitVaultFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
cTokenAddr_1(address) := TMP_204(address)
Finance type key: (-1, -1)
[i]Type for cTokenAddr

Name: cTokenAddr Function: exitVaultFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_205 = CONVERT cTokenAddr_1 to CErc20
[i]Type for TMP_205

Name: TMP_205 Function: exitVaultFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
TMP_206(uint256) = HIGH_LEVEL_CALL, dest:TMP_205(CErc20), function:redeemUnderlying, arguments:['a_1']  
[i]Type for TMP_206

Name: TMP_206 Function: exitVaultFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_207(bool) = TMP_206 == 0
[i]Type for TMP_207

Name: TMP_207 Function: exitVaultFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_208(None) = SOLIDITY_CALL require(bool,string)(TMP_207,compound redemption error)
[i]Type for TMP_208

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_190(address) -> o_1 (-> []).underlying
[i]Type for REF_190

Name: REF_190 Function: exitVaultFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_209 = CONVERT REF_190 to Erc20
[i]Type for TMP_209

Name: TMP_209 Function: exitVaultFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
uToken_1(Erc20) := TMP_209(Erc20)
Finance type key: (-1, -1)
[i]Type for uToken

Name: uToken Function: exitVaultFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_192(address) -> o_1 (-> []).maker
[i]Type for REF_192

Name: REF_192 Function: exitVaultFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_210(uint256) = a_1 (c)- premiumFilled_1
[i]Type for TMP_210

Name: TMP_210 Function: exitVaultFillingZcTokenExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
TMP_211(bool) = HIGH_LEVEL_CALL, dest:uToken_1(Erc20), function:transfer, arguments:['REF_192', 'TMP_210']  
[i]Type for TMP_211

Name: TMP_211 Function: exitVaultFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_212(uint256) = premiumFilled_1 (c)- fee_1
[i]Type for TMP_212

Name: TMP_212 Function: exitVaultFillingZcTokenExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_213(bool) = HIGH_LEVEL_CALL, dest:uToken_1(Erc20), function:transfer, arguments:['msg.sender', 'TMP_212']  
[i]Type for TMP_213

Name: TMP_213 Function: exitVaultFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_195(address) -> o_1 (-> []).underlying
[i]Type for REF_195

Name: REF_195 Function: exitVaultFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_196(uint256) -> o_1 (-> []).maturity
[i]Type for REF_196

Name: REF_196 Function: exitVaultFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_197(address) -> o_1 (-> []).maker
[i]Type for REF_197

Name: REF_197 Function: exitVaultFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_214(bool) = HIGH_LEVEL_CALL, dest:mPlace_1(MarketPlace), function:custodialExit, arguments:['REF_195', 'REF_196', 'REF_197', 'msg.sender', 'a_1']  
[i]Type for TMP_214

Name: TMP_214 Function: exitVaultFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_215(None) = SOLIDITY_CALL require(bool,string)(TMP_214,custodial exit failed)
[i]Type for TMP_215

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_198(bytes32) -> o_1 (-> []).key
[i]Type for REF_198

Name: REF_198 Function: exitVaultFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_199(address) -> o_1 (-> []).maker
[i]Type for REF_199

Name: REF_199 Function: exitVaultFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_200(bool) -> o_1 (-> []).vault
[i]Type for REF_200

Name: REF_200 Function: exitVaultFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_201(bool) -> o_1 (-> []).exit
[i]Type for REF_201

Name: REF_201 Function: exitVaultFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_140(Hash.Order) -> o_1 (-> [])[i_2]
[i]Type for REF_140

Name: o_1 (-> []) Function: exit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_141(uint256) -> a_1 (-> [])[i_2]
[i]Type for REF_141

Name: a_1 (-> []) Function: exit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_142(Sig.Components) -> c_1 (-> [])[i_2]
[i]Type for REF_142

Name: c_1 (-> []) Function: exit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
INTERNAL_CALL, Swivel.exitZcTokenFillingVaultExit(Hash.Order,uint256,Sig.Components)(REF_140,REF_141,REF_142)
o_1 (-> [])(Hash.Order) := ϕ(['REF_140'])
[i]Type for o

Name: o Function: exitZcTokenFillingVaultExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
a_1(uint256) := ϕ(['REF_141'])
[i]Type for a

Name: a Function: exitZcTokenFillingVaultExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
c_1 (-> [])(Sig.Components) := ϕ(['REF_142'])
[i]Type for c

Name: c Function: exitZcTokenFillingVaultExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
filled_22(mapping(bytes32 => uint256)) := ϕ(['filled_12', 'filled_3', 'filled_6', 'filled_24', 'filled_15', 'filled_9', 'filled_0', 'filled_21', 'filled_18'])
[i]Type for filled

Name: filled Function: exitZcTokenFillingVaultExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
marketPlace_27(address) := ϕ(['marketPlace_28', 'marketPlace_16', 'marketPlace_30', 'marketPlace_0', 'marketPlace_9', 'marketPlace_13', 'marketPlace_5', 'marketPlace_21', 'marketPlace_24', 'marketPlace_1', 'marketPlace_26'])
[i]Type for marketPlace

Name: marketPlace Function: exitZcTokenFillingVaultExit
Num: -1
Den: -1
Address: 2
Norm: u
LF: marketPlace
Value: u
Fields: 
Finance Type: undef
fenominator_16(uint16[]) := ϕ(['fenominator_13', 'fenominator_0', 'fenominator_11', 'fenominator_7', 'fenominator_1', 'fenominator_15', 'fenominator_17', 'fenominator_5', 'fenominator_9', 'fenominator_18', 'fenominator_3'])
[i]Type for fenominator

Name: fenominator Function: exitZcTokenFillingVaultExit
Num: -1
Den: -1
Address: 1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
TMP_217(bytes32) = INTERNAL_CALL, Swivel.validOrderHash(Hash.Order,Sig.Components)(o_1 (-> []),c_1 (-> []))
[i]Type for TMP_217

Name: TMP_217 Function: exitZcTokenFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
hash_1(bytes32) := TMP_217(bytes32)
Finance type key: (-1, -1)
[i]Type for hash

Name: hash Function: exitZcTokenFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_202(uint256) -> o_1 (-> []).premium
[i]Type for REF_202

Name: REF_202 Function: exitZcTokenFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_203(uint256) -> filled_23[hash_1]
[i]Type for REF_203

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_218(uint256) = REF_202 (c)- REF_203
[i]Type for TMP_218

Name: TMP_218 Function: exitZcTokenFillingVaultExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_219(bool) = a_1 <= TMP_218
[i]Type for TMP_219

Name: TMP_219 Function: exitZcTokenFillingVaultExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_220(None) = SOLIDITY_CALL require(bool,string)(TMP_219,taker amount > available volume)
[i]Type for TMP_220

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_204(uint256) -> filled_23[hash_1]
[i]Type for REF_204

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
filled_24(mapping(bytes32 => uint256)) := ϕ(['filled_23'])
[i]Type for filled

Name: filled Function: exitZcTokenFillingVaultExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_204(-> filled_24) = REF_204 (c)+ a_1
[i]Type for REF_204

Name: REF_204 Function: exitZcTokenFillingVaultExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_221(uint256) = a_1 (c)* 1000000000000000000
[i]Type for TMP_221

Name: TMP_221 Function: exitZcTokenFillingVaultExit
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
REF_205(uint256) -> o_1 (-> []).premium
[i]Type for REF_205

Name: REF_205 Function: exitZcTokenFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_222(uint256) = TMP_221 (c)/ REF_205
[i]Type for TMP_222

Name: TMP_222 Function: exitZcTokenFillingVaultExit
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
REF_206(uint256) -> o_1 (-> []).principal
[i]Type for REF_206

Name: REF_206 Function: exitZcTokenFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_223(uint256) = TMP_222 (c)* REF_206
[i]Type for TMP_223

Name: TMP_223 Function: exitZcTokenFillingVaultExit
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
TMP_224(uint256) = TMP_223 (c)/ 1000000000000000000
[i]Type for TMP_224

Name: TMP_224 Function: exitZcTokenFillingVaultExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
principalFilled_1(uint256) := TMP_224(uint256)
Finance type key: (-1, -1)
[i]Type for principalFilled

Name: principalFilled Function: exitZcTokenFillingVaultExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
TMP_225(uint256) = principalFilled_1 (c)* 1000000000000000000
[i]Type for TMP_225

Name: TMP_225 Function: exitZcTokenFillingVaultExit
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
REF_207(uint16) -> fenominator_17[1]
[i]Type for REF_207

Name: None Function: None
Num: -1
Den: -1
Address: 1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
TMP_226(uint256) = TMP_225 (c)/ REF_207
[i]Type for TMP_226

Name: TMP_226 Function: exitZcTokenFillingVaultExit
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
TMP_227(uint256) = TMP_226 (c)/ 1000000000000000000
[i]Type for TMP_227

Name: TMP_227 Function: exitZcTokenFillingVaultExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
fee_1(uint256) := TMP_227(uint256)
Finance type key: (-1, -1)
[i]Type for fee

Name: fee Function: exitZcTokenFillingVaultExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
TMP_228 = CONVERT marketPlace_28 to MarketPlace
[i]Type for TMP_228

Name: TMP_228 Function: exitZcTokenFillingVaultExit
Num: -1
Den: -1
Address: 2
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
mPlace_1(MarketPlace) := TMP_228(MarketPlace)
Finance type key: (-1, -1)
[i]Type for mPlace

Name: mPlace Function: exitZcTokenFillingVaultExit
Num: -1
Den: -1
Address: 2
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
REF_209(address) -> o_1 (-> []).underlying
[i]Type for REF_209

Name: REF_209 Function: exitZcTokenFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_210(uint256) -> o_1 (-> []).maturity
[i]Type for REF_210

Name: REF_210 Function: exitZcTokenFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_229(address) = HIGH_LEVEL_CALL, dest:mPlace_1(MarketPlace), function:cTokenAddress, arguments:['REF_209', 'REF_210']  
[i]Type for TMP_229

Name: TMP_229 Function: exitZcTokenFillingVaultExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
cTokenAddr_1(address) := TMP_229(address)
Finance type key: (-1, -1)
[i]Type for cTokenAddr

Name: cTokenAddr Function: exitZcTokenFillingVaultExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_230 = CONVERT cTokenAddr_1 to CErc20
[i]Type for TMP_230

Name: TMP_230 Function: exitZcTokenFillingVaultExit
Num: -1
Den: -1
Address: u
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
TMP_231(uint256) = HIGH_LEVEL_CALL, dest:TMP_230(CErc20), function:redeemUnderlying, arguments:['principalFilled_1']  
[i]Type for TMP_231

Name: TMP_231 Function: exitZcTokenFillingVaultExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_232(bool) = TMP_231 == 0
[i]Type for TMP_232

Name: TMP_232 Function: exitZcTokenFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_233(None) = SOLIDITY_CALL require(bool,string)(TMP_232,compound redemption error)
[i]Type for TMP_233

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_212(address) -> o_1 (-> []).underlying
[i]Type for REF_212

Name: REF_212 Function: exitZcTokenFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_234 = CONVERT REF_212 to Erc20
[i]Type for TMP_234

Name: TMP_234 Function: exitZcTokenFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
uToken_1(Erc20) := TMP_234(Erc20)
Finance type key: (-1, -1)
[i]Type for uToken

Name: uToken Function: exitZcTokenFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_235(uint256) = principalFilled_1 (c)- a_1
[i]Type for TMP_235

Name: TMP_235 Function: exitZcTokenFillingVaultExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
TMP_236(uint256) = TMP_235 (c)- fee_1
[i]Type for TMP_236

Name: TMP_236 Function: exitZcTokenFillingVaultExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_237(bool) = HIGH_LEVEL_CALL, dest:uToken_1(Erc20), function:transfer, arguments:['msg.sender', 'TMP_236']  
[i]Type for TMP_237

Name: TMP_237 Function: exitZcTokenFillingVaultExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_215(address) -> o_1 (-> []).maker
[i]Type for REF_215

Name: REF_215 Function: exitZcTokenFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_238(bool) = HIGH_LEVEL_CALL, dest:uToken_1(Erc20), function:transfer, arguments:['REF_215', 'a_1']  
[i]Type for TMP_238

Name: TMP_238 Function: exitZcTokenFillingVaultExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_217(address) -> o_1 (-> []).underlying
[i]Type for REF_217

Name: REF_217 Function: exitZcTokenFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_218(uint256) -> o_1 (-> []).maturity
[i]Type for REF_218

Name: REF_218 Function: exitZcTokenFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_219(address) -> o_1 (-> []).maker
[i]Type for REF_219

Name: REF_219 Function: exitZcTokenFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_239(bool) = HIGH_LEVEL_CALL, dest:mPlace_1(MarketPlace), function:custodialExit, arguments:['REF_217', 'REF_218', 'msg.sender', 'REF_219', 'principalFilled_1']  
[i]Type for TMP_239

Name: TMP_239 Function: exitZcTokenFillingVaultExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_240(None) = SOLIDITY_CALL require(bool,string)(TMP_239,custodial exit failed)
[i]Type for TMP_240

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_220(bytes32) -> o_1 (-> []).key
[i]Type for REF_220

Name: REF_220 Function: exitZcTokenFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_221(address) -> o_1 (-> []).maker
[i]Type for REF_221

Name: REF_221 Function: exitZcTokenFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_222(bool) -> o_1 (-> []).vault
[i]Type for REF_222

Name: REF_222 Function: exitZcTokenFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_223(bool) -> o_1 (-> []).exit
[i]Type for REF_223

Name: REF_223 Function: exitZcTokenFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
o_1 (-> [])(Hash.Order) := ϕ(['REF_140'])
[i]Type for o

Name: o Function: exitZcTokenFillingVaultExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: premium, principal, underlying, maturity, maker, key, vault, exit
Finance Type: undef
a_1(uint256) := ϕ(['REF_141'])
[i]Type for a

Name: a Function: exitZcTokenFillingVaultExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
c_1 (-> [])(Sig.Components) := ϕ(['REF_142'])
[i]Type for c

Name: c Function: exitZcTokenFillingVaultExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
filled_22(mapping(bytes32 => uint256)) := ϕ(['filled_12', 'filled_3', 'filled_6', 'filled_24', 'filled_15', 'filled_9', 'filled_0', 'filled_21', 'filled_18'])
[i]Type for filled

Name: filled Function: exitZcTokenFillingVaultExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
marketPlace_27(address) := ϕ(['marketPlace_28', 'marketPlace_16', 'marketPlace_30', 'marketPlace_0', 'marketPlace_9', 'marketPlace_13', 'marketPlace_5', 'marketPlace_21', 'marketPlace_24', 'marketPlace_1', 'marketPlace_26'])
[i]Type for marketPlace

Name: marketPlace Function: exitZcTokenFillingVaultExit
Num: -1
Den: -1
Address: 2
Norm: u
LF: marketPlace
Value: u
Fields: 
Finance Type: undef
fenominator_16(uint16[]) := ϕ(['fenominator_13', 'fenominator_0', 'fenominator_11', 'fenominator_7', 'fenominator_1', 'fenominator_15', 'fenominator_17', 'fenominator_5', 'fenominator_9', 'fenominator_18', 'fenominator_3'])
[i]Type for fenominator

Name: fenominator Function: exitZcTokenFillingVaultExit
Num: -1
Den: -1
Address: 1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
TMP_217(bytes32) = INTERNAL_CALL, Swivel.validOrderHash(Hash.Order,Sig.Components)(o_1 (-> []),c_1 (-> []))
[i]Type for TMP_217

Name: TMP_217 Function: exitZcTokenFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
hash_1(bytes32) := TMP_217(bytes32)
Finance type key: (-1, -1)
[i]Type for hash

Name: hash Function: exitZcTokenFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_202(uint256) -> o_1 (-> []).premium
[i]Type for REF_202

Name: REF_202 Function: exitZcTokenFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_203(uint256) -> filled_23[hash_1]
[i]Type for REF_203

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_218(uint256) = REF_202 (c)- REF_203
[i]Type for TMP_218

Name: TMP_218 Function: exitZcTokenFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_219(bool) = a_1 <= TMP_218
[i]Type for TMP_219

Name: TMP_219 Function: exitZcTokenFillingVaultExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_220(None) = SOLIDITY_CALL require(bool,string)(TMP_219,taker amount > available volume)
[i]Type for TMP_220

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_204(uint256) -> filled_23[hash_1]
[i]Type for REF_204

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
filled_24(mapping(bytes32 => uint256)) := ϕ(['filled_23'])
[i]Type for filled

Name: filled Function: exitZcTokenFillingVaultExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_204(-> filled_24) = REF_204 (c)+ a_1
[i]Type for REF_204

Name: REF_204 Function: exitZcTokenFillingVaultExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_221(uint256) = a_1 (c)* 1000000000000000000
[i]Type for TMP_221

Name: TMP_221 Function: exitZcTokenFillingVaultExit
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
REF_205(uint256) -> o_1 (-> []).premium
[i]Type for REF_205

Name: REF_205 Function: exitZcTokenFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_222(uint256) = TMP_221 (c)/ REF_205
[i]Type for TMP_222

Name: TMP_222 Function: exitZcTokenFillingVaultExit
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
REF_206(uint256) -> o_1 (-> []).principal
[i]Type for REF_206

Name: REF_206 Function: exitZcTokenFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_223(uint256) = TMP_222 (c)* REF_206
[i]Type for TMP_223

Name: TMP_223 Function: exitZcTokenFillingVaultExit
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
TMP_224(uint256) = TMP_223 (c)/ 1000000000000000000
[i]Type for TMP_224

Name: TMP_224 Function: exitZcTokenFillingVaultExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
principalFilled_1(uint256) := TMP_224(uint256)
Finance type key: (-1, -1)
[i]Type for principalFilled

Name: principalFilled Function: exitZcTokenFillingVaultExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
TMP_225(uint256) = principalFilled_1 (c)* 1000000000000000000
[i]Type for TMP_225

Name: TMP_225 Function: exitZcTokenFillingVaultExit
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
REF_207(uint16) -> fenominator_17[1]
[i]Type for REF_207

Name: None Function: None
Num: -1
Den: -1
Address: 1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
TMP_226(uint256) = TMP_225 (c)/ REF_207
[i]Type for TMP_226

Name: TMP_226 Function: exitZcTokenFillingVaultExit
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
TMP_227(uint256) = TMP_226 (c)/ 1000000000000000000
[i]Type for TMP_227

Name: TMP_227 Function: exitZcTokenFillingVaultExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
fee_1(uint256) := TMP_227(uint256)
Finance type key: (-1, -1)
[i]Type for fee

Name: fee Function: exitZcTokenFillingVaultExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
TMP_228 = CONVERT marketPlace_28 to MarketPlace
[i]Type for TMP_228

Name: TMP_228 Function: exitZcTokenFillingVaultExit
Num: -1
Den: -1
Address: 2
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
mPlace_1(MarketPlace) := TMP_228(MarketPlace)
Finance type key: (-1, -1)
[i]Type for mPlace

Name: mPlace Function: exitZcTokenFillingVaultExit
Num: -1
Den: -1
Address: 2
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
REF_209(address) -> o_1 (-> []).underlying
[i]Type for REF_209

Name: REF_209 Function: exitZcTokenFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_210(uint256) -> o_1 (-> []).maturity
[i]Type for REF_210

Name: REF_210 Function: exitZcTokenFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_229(address) = HIGH_LEVEL_CALL, dest:mPlace_1(MarketPlace), function:cTokenAddress, arguments:['REF_209', 'REF_210']  
[i]Type for TMP_229

Name: TMP_229 Function: exitZcTokenFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
cTokenAddr_1(address) := TMP_229(address)
Finance type key: (-1, -1)
[i]Type for cTokenAddr

Name: cTokenAddr Function: exitZcTokenFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_230 = CONVERT cTokenAddr_1 to CErc20
[i]Type for TMP_230

Name: TMP_230 Function: exitZcTokenFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
TMP_231(uint256) = HIGH_LEVEL_CALL, dest:TMP_230(CErc20), function:redeemUnderlying, arguments:['principalFilled_1']  
[i]Type for TMP_231

Name: TMP_231 Function: exitZcTokenFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_232(bool) = TMP_231 == 0
[i]Type for TMP_232

Name: TMP_232 Function: exitZcTokenFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_233(None) = SOLIDITY_CALL require(bool,string)(TMP_232,compound redemption error)
[i]Type for TMP_233

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_212(address) -> o_1 (-> []).underlying
[i]Type for REF_212

Name: REF_212 Function: exitZcTokenFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_234 = CONVERT REF_212 to Erc20
[i]Type for TMP_234

Name: TMP_234 Function: exitZcTokenFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
uToken_1(Erc20) := TMP_234(Erc20)
Finance type key: (-1, -1)
[i]Type for uToken

Name: uToken Function: exitZcTokenFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_235(uint256) = principalFilled_1 (c)- a_1
[i]Type for TMP_235

Name: TMP_235 Function: exitZcTokenFillingVaultExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
TMP_236(uint256) = TMP_235 (c)- fee_1
[i]Type for TMP_236

Name: TMP_236 Function: exitZcTokenFillingVaultExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_237(bool) = HIGH_LEVEL_CALL, dest:uToken_1(Erc20), function:transfer, arguments:['msg.sender', 'TMP_236']  
[i]Type for TMP_237

Name: TMP_237 Function: exitZcTokenFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_215(address) -> o_1 (-> []).maker
[i]Type for REF_215

Name: REF_215 Function: exitZcTokenFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_238(bool) = HIGH_LEVEL_CALL, dest:uToken_1(Erc20), function:transfer, arguments:['REF_215', 'a_1']  
[i]Type for TMP_238

Name: TMP_238 Function: exitZcTokenFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_217(address) -> o_1 (-> []).underlying
[i]Type for REF_217

Name: REF_217 Function: exitZcTokenFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_218(uint256) -> o_1 (-> []).maturity
[i]Type for REF_218

Name: REF_218 Function: exitZcTokenFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_219(address) -> o_1 (-> []).maker
[i]Type for REF_219

Name: REF_219 Function: exitZcTokenFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_239(bool) = HIGH_LEVEL_CALL, dest:mPlace_1(MarketPlace), function:custodialExit, arguments:['REF_217', 'REF_218', 'msg.sender', 'REF_219', 'principalFilled_1']  
[i]Type for TMP_239

Name: TMP_239 Function: exitZcTokenFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_240(None) = SOLIDITY_CALL require(bool,string)(TMP_239,custodial exit failed)
[i]Type for TMP_240

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_220(bytes32) -> o_1 (-> []).key
[i]Type for REF_220

Name: REF_220 Function: exitZcTokenFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_221(address) -> o_1 (-> []).maker
[i]Type for REF_221

Name: REF_221 Function: exitZcTokenFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_222(bool) -> o_1 (-> []).vault
[i]Type for REF_222

Name: REF_222 Function: exitZcTokenFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_223(bool) -> o_1 (-> []).exit
[i]Type for REF_223

Name: REF_223 Function: exitZcTokenFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_154(uint256) := i_2(uint256)
Finance type key: (-1, -1)
[i]Type for TMP_154

Name: TMP_154 Function: exit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_3(uint256) = i_2 (c)+ 1
[i]Type for i

Name: i Function: exit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
i_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for i

Name: i Function: exit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
i_2(uint256) := ϕ(['i_3', 'i_1'])
[i]Type for i

Name: i Function: exit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_124 -> LENGTH o_1 (-> [])
[i]Type for REF_124

Name: REF_124 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_146(bool) = i_2 < REF_124
[i]Type for TMP_146

Name: TMP_146 Function: exit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_125(Hash.Order) -> o_1 (-> [])[i_2]
[i]Type for REF_125

Name: o_1 (-> []) Function: exit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_126(bool) -> REF_125.exit
[i]Type for REF_126

Name: REF_126 Function: exit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_147 = ! REF_126 
[i]Type for TMP_147

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_127(Hash.Order) -> o_1 (-> [])[i_2]
[i]Type for REF_127

Name: o_1 (-> []) Function: exit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_128(bool) -> REF_127.vault
[i]Type for REF_128

Name: REF_128 Function: exit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_148 = ! REF_128 
[i]Type for TMP_148

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_132(Hash.Order) -> o_1 (-> [])[i_2]
[i]Type for REF_132

Name: o_1 (-> []) Function: exit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_133(uint256) -> a_1 (-> [])[i_2]
[i]Type for REF_133

Name: a_1 (-> []) Function: exit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_134(Sig.Components) -> c_1 (-> [])[i_2]
[i]Type for REF_134

Name: c_1 (-> []) Function: exit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
INTERNAL_CALL, Swivel.exitVaultFillingVaultInitiate(Hash.Order,uint256,Sig.Components)(REF_132,REF_133,REF_134)
o_1 (-> [])(Hash.Order) := ϕ(['REF_132'])
[i]Type for o

Name: o Function: exitVaultFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: principal, premium, underlying, maturity, maker, key, vault, exit
Finance Type: undef
a_1(uint256) := ϕ(['REF_133'])
[i]Type for a

Name: a Function: exitVaultFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
c_1 (-> [])(Sig.Components) := ϕ(['REF_134'])
[i]Type for c

Name: c Function: exitVaultFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
filled_16(mapping(bytes32 => uint256)) := ϕ(['filled_12', 'filled_3', 'filled_6', 'filled_24', 'filled_15', 'filled_9', 'filled_0', 'filled_21', 'filled_18'])
[i]Type for filled

Name: filled Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Balance_1(mapping(address => uint256)) := ϕ(['Balance_0', 'Balance_5'])
[i]Type for Balance

Name: Balance Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: 1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
marketPlace_22(address) := ϕ(['marketPlace_28', 'marketPlace_16', 'marketPlace_30', 'marketPlace_0', 'marketPlace_9', 'marketPlace_13', 'marketPlace_5', 'marketPlace_21', 'marketPlace_24', 'marketPlace_1', 'marketPlace_26'])
[i]Type for marketPlace

Name: marketPlace Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: 2
Norm: u
LF: marketPlace
Value: u
Fields: 
Finance Type: undef
fenominator_12(uint16[]) := ϕ(['fenominator_13', 'fenominator_0', 'fenominator_11', 'fenominator_7', 'fenominator_1', 'fenominator_15', 'fenominator_17', 'fenominator_5', 'fenominator_9', 'fenominator_18', 'fenominator_3'])
[i]Type for fenominator

Name: fenominator Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: 1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
TMP_176(bytes32) = INTERNAL_CALL, Swivel.validOrderHash(Hash.Order,Sig.Components)(o_1 (-> []),c_1 (-> []))
o_1 (-> [])(Hash.Order) := ϕ(['o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])'])
[i]Type for o

Name: o Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: expiry, premium, principal, underlying, maker, maturity, key, vault, exit
Finance Type: undef
c_1 (-> [])(Sig.Components) := ϕ(['c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])'])
[i]Type for c

Name: c Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
cancelled_2(mapping(bytes32 => bool)) := ϕ(['cancelled_2', 'cancelled_0', 'cancelled_1'])
[i]Type for cancelled

Name: cancelled Function: validOrderHash
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
domain_2(bytes32) := ϕ(['domain_0', 'domain_1'])
[i]Type for domain

Name: domain Function: validOrderHash
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_300(bytes32) = LIBRARY_CALL, dest:Hash, function:Hash.order(Hash.Order), arguments:['o_1 (-> [])'] 
[i]Type for TMP_300

Name: TMP_300 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
hash_1(bytes32) := TMP_300(bytes32)
Finance type key: (-1, -1)
[i]Type for hash

Name: hash Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_252(bool) -> cancelled_2[hash_1]
[i]Type for REF_252

Name: cancelled Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_301 = ! REF_252 
[i]Type for TMP_301

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_302(None) = SOLIDITY_CALL require(bool,string)(TMP_301,order cancelled)
[i]Type for TMP_302

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_253(uint256) -> o_1 (-> []).expiry
[i]Type for REF_253

Name: REF_253 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_303(bool) = REF_253 >= block.timestamp
[i]Type for TMP_303

Name: TMP_303 Function: validOrderHash
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_304(None) = SOLIDITY_CALL require(bool,string)(TMP_303,order expired)
[i]Type for TMP_304

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_254(address) -> o_1 (-> []).maker
[i]Type for REF_254

Name: REF_254 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_305(bytes32) = LIBRARY_CALL, dest:Hash, function:Hash.message(bytes32,bytes32), arguments:['domain_2', 'hash_1'] 
[i]Type for TMP_305

Name: TMP_305 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_306(address) = LIBRARY_CALL, dest:Sig, function:Sig.recover(bytes32,Sig.Components), arguments:['TMP_305', 'c_1 (-> [])'] 
[i]Type for TMP_306

Name: TMP_306 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_307(bool) = REF_254 == TMP_306
[i]Type for TMP_307

Name: TMP_307 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_308(None) = SOLIDITY_CALL require(bool,string)(TMP_307,invalid signature)
[i]Type for TMP_308

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
RETURN hash_1
o_1 (-> [])(Hash.Order) := ϕ(['o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])'])
[i]Type for o

Name: o Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: expiry, premium, principal, underlying, maker, maturity, key, vault, exit
Finance Type: undef
c_1 (-> [])(Sig.Components) := ϕ(['c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])'])
[i]Type for c

Name: c Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
cancelled_2(mapping(bytes32 => bool)) := ϕ(['cancelled_2', 'cancelled_0', 'cancelled_1'])
[i]Type for cancelled

Name: cancelled Function: validOrderHash
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
domain_2(bytes32) := ϕ(['domain_0', 'domain_1'])
[i]Type for domain

Name: domain Function: validOrderHash
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_300(bytes32) = LIBRARY_CALL, dest:Hash, function:Hash.order(Hash.Order), arguments:['o_1 (-> [])'] 
[i]Type for TMP_300

Name: TMP_300 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
hash_1(bytes32) := TMP_300(bytes32)
Finance type key: (-1, -1)
[i]Type for hash

Name: hash Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_252(bool) -> cancelled_2[hash_1]
[i]Type for REF_252

Name: cancelled Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_301 = ! REF_252 
[i]Type for TMP_301

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_302(None) = SOLIDITY_CALL require(bool,string)(TMP_301,order cancelled)
[i]Type for TMP_302

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_253(uint256) -> o_1 (-> []).expiry
[i]Type for REF_253

Name: REF_253 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_303(bool) = REF_253 >= block.timestamp
[i]Type for TMP_303

Name: TMP_303 Function: validOrderHash
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_304(None) = SOLIDITY_CALL require(bool,string)(TMP_303,order expired)
[i]Type for TMP_304

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_254(address) -> o_1 (-> []).maker
[i]Type for REF_254

Name: REF_254 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_305(bytes32) = LIBRARY_CALL, dest:Hash, function:Hash.message(bytes32,bytes32), arguments:['domain_2', 'hash_1'] 
[i]Type for TMP_305

Name: TMP_305 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_306(address) = LIBRARY_CALL, dest:Sig, function:Sig.recover(bytes32,Sig.Components), arguments:['TMP_305', 'c_1 (-> [])'] 
[i]Type for TMP_306

Name: TMP_306 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_307(bool) = REF_254 == TMP_306
[i]Type for TMP_307

Name: TMP_307 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_308(None) = SOLIDITY_CALL require(bool,string)(TMP_307,invalid signature)
[i]Type for TMP_308

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
RETURN hash_1
[i]Type for TMP_176

Name: TMP_176 Function: exitVaultFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
hash_1(bytes32) := TMP_176(bytes32)
Finance type key: (-1, -1)
[i]Type for hash

Name: hash Function: exitVaultFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_162(uint256) -> o_1 (-> []).principal
[i]Type for REF_162

Name: REF_162 Function: exitVaultFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_163(uint256) -> filled_17[hash_1]
[i]Type for REF_163

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_177(uint256) = REF_162 (c)- REF_163
[i]Type for TMP_177

Name: TMP_177 Function: exitVaultFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_178(bool) = a_1 <= TMP_177
[i]Type for TMP_178

Name: TMP_178 Function: exitVaultFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_179(None) = SOLIDITY_CALL require(bool,string)(TMP_178,taker amount > available volume)
[i]Type for TMP_179

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_164(uint256) -> filled_17[hash_1]
[i]Type for REF_164

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
filled_18(mapping(bytes32 => uint256)) := ϕ(['filled_17'])
[i]Type for filled

Name: filled Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_164(-> filled_18) = REF_164 (c)+ a_1
[i]Type for REF_164

Name: REF_164 Function: exitVaultFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_180(uint256) = a_1 (c)* 1000000000000000000
[i]Type for TMP_180

Name: TMP_180 Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
REF_165(uint256) -> o_1 (-> []).principal
[i]Type for REF_165

Name: REF_165 Function: exitVaultFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_181(uint256) = TMP_180 (c)/ REF_165
[i]Type for TMP_181

Name: TMP_181 Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
REF_166(uint256) -> o_1 (-> []).premium
[i]Type for REF_166

Name: REF_166 Function: exitVaultFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_182(uint256) = TMP_181 (c)* REF_166
[i]Type for TMP_182

Name: TMP_182 Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
TMP_183(uint256) = TMP_182 (c)/ 1000000000000000000
[i]Type for TMP_183

Name: TMP_183 Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
premiumFilled_1(uint256) := TMP_183(uint256)
Finance type key: (-1, -1)
[i]Type for premiumFilled

Name: premiumFilled Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
TMP_184(uint256) = premiumFilled_1 (c)* 1000000000000000000
[i]Type for TMP_184

Name: TMP_184 Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
REF_167(uint16) -> fenominator_13[3]
[i]Type for REF_167

Name: None Function: None
Num: -1
Den: -1
Address: 1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
TMP_185(uint256) = TMP_184 (c)/ REF_167
[i]Type for TMP_185

Name: TMP_185 Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
TMP_186(uint256) = TMP_185 (c)/ 1000000000000000000
[i]Type for TMP_186

Name: TMP_186 Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
fee_1(uint256) := TMP_186(uint256)
Finance type key: (-1, -1)
[i]Type for fee

Name: fee Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
REF_168(address) -> o_1 (-> []).underlying
[i]Type for REF_168

Name: REF_168 Function: exitVaultFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_187 = CONVERT REF_168 to Erc20
[i]Type for TMP_187

Name: TMP_187 Function: exitVaultFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
uToken_1(Erc20) := TMP_187(Erc20)
Finance type key: (-1, -1)
[i]Type for uToken

Name: uToken Function: exitVaultFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_169(uint256) -> Balance_2[msg.sender]
[i]Type for REF_169

Name: None Function: None
Num: -1
Den: -1
Address: 1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Balance_3(mapping(address => uint256)) := ϕ(['Balance_2'])
[i]Type for Balance

Name: Balance Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: 1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
REF_169(-> Balance_3) = REF_169 (c)+ premiumFilled_1
[i]Type for REF_169

Name: REF_169 Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: raw balance
REF_170(uint256) -> Balance_3[msg.sender]
[i]Type for REF_170

Name: Balance Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: 1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Balance_4(mapping(address => uint256)) := ϕ(['Balance_3'])
[i]Type for Balance

Name: Balance Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: 1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
REF_170(-> Balance_4) = REF_170 (c)- fee_1
[i]Type for REF_170

Name: REF_170 Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
REF_171(uint256) -> Balance_4[msg.sender]
[i]Type for REF_171

Name: Balance Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: 1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Balance_5(mapping(address => uint256)) := ϕ(['Balance_4'])
[i]Type for Balance

Name: Balance Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: 1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
REF_171(-> Balance_5) = REF_171 (c)- fee_1
[i]Type for REF_171

Name: REF_171 Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
TMP_188 = CONVERT marketPlace_23 to MarketPlace
[i]Type for TMP_188

Name: TMP_188 Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: 2
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
REF_173(address) -> o_1 (-> []).underlying
[i]Type for REF_173

Name: REF_173 Function: exitVaultFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_174(uint256) -> o_1 (-> []).maturity
[i]Type for REF_174

Name: REF_174 Function: exitVaultFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_175(address) -> o_1 (-> []).maker
[i]Type for REF_175

Name: REF_175 Function: exitVaultFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_189(bool) = HIGH_LEVEL_CALL, dest:TMP_188(MarketPlace), function:p2pVaultExchange, arguments:['REF_173', 'REF_174', 'msg.sender', 'REF_175', 'a_1']  
[i]Type for TMP_189

Name: TMP_189 Function: exitVaultFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
marketPlace_24(address) := ϕ(['marketPlace_28', 'marketPlace_16', 'marketPlace_30', 'marketPlace_23', 'marketPlace_5', 'marketPlace_9', 'marketPlace_13', 'marketPlace_21', 'marketPlace_24', 'marketPlace_1', 'marketPlace_26'])
[i]Type for marketPlace

Name: marketPlace Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: 2
Norm: u
LF: marketPlace
Value: u
Fields: 
Finance Type: undef
TMP_190(None) = SOLIDITY_CALL require(bool,string)(TMP_189,vault exchange failed)
[i]Type for TMP_190

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_176(bytes32) -> o_1 (-> []).key
[i]Type for REF_176

Name: REF_176 Function: exitVaultFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_177(address) -> o_1 (-> []).maker
[i]Type for REF_177

Name: REF_177 Function: exitVaultFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_178(bool) -> o_1 (-> []).vault
[i]Type for REF_178

Name: REF_178 Function: exitVaultFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_179(bool) -> o_1 (-> []).exit
[i]Type for REF_179

Name: REF_179 Function: exitVaultFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
o_1 (-> [])(Hash.Order) := ϕ(['REF_132'])
[i]Type for o

Name: o Function: exitVaultFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: principal, premium, underlying, maturity, maker, key, vault, exit
Finance Type: undef
a_1(uint256) := ϕ(['REF_133'])
[i]Type for a

Name: a Function: exitVaultFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
c_1 (-> [])(Sig.Components) := ϕ(['REF_134'])
[i]Type for c

Name: c Function: exitVaultFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
filled_16(mapping(bytes32 => uint256)) := ϕ(['filled_12', 'filled_3', 'filled_6', 'filled_24', 'filled_15', 'filled_9', 'filled_0', 'filled_21', 'filled_18'])
[i]Type for filled

Name: filled Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Balance_1(mapping(address => uint256)) := ϕ(['Balance_0', 'Balance_5'])
[i]Type for Balance

Name: Balance Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: 1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
marketPlace_22(address) := ϕ(['marketPlace_28', 'marketPlace_16', 'marketPlace_30', 'marketPlace_0', 'marketPlace_9', 'marketPlace_13', 'marketPlace_5', 'marketPlace_21', 'marketPlace_24', 'marketPlace_1', 'marketPlace_26'])
[i]Type for marketPlace

Name: marketPlace Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: 2
Norm: u
LF: marketPlace
Value: u
Fields: 
Finance Type: undef
fenominator_12(uint16[]) := ϕ(['fenominator_13', 'fenominator_0', 'fenominator_11', 'fenominator_7', 'fenominator_1', 'fenominator_15', 'fenominator_17', 'fenominator_5', 'fenominator_9', 'fenominator_18', 'fenominator_3'])
[i]Type for fenominator

Name: fenominator Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: 1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
TMP_176(bytes32) = INTERNAL_CALL, Swivel.validOrderHash(Hash.Order,Sig.Components)(o_1 (-> []),c_1 (-> []))
o_1 (-> [])(Hash.Order) := ϕ(['o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])'])
[i]Type for o

Name: o Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: expiry, premium, principal, underlying, maker, maturity, key, vault, exit
Finance Type: undef
c_1 (-> [])(Sig.Components) := ϕ(['c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])'])
[i]Type for c

Name: c Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
cancelled_2(mapping(bytes32 => bool)) := ϕ(['cancelled_2', 'cancelled_0', 'cancelled_1'])
[i]Type for cancelled

Name: cancelled Function: validOrderHash
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
domain_2(bytes32) := ϕ(['domain_0', 'domain_1'])
[i]Type for domain

Name: domain Function: validOrderHash
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_300(bytes32) = LIBRARY_CALL, dest:Hash, function:Hash.order(Hash.Order), arguments:['o_1 (-> [])'] 
[i]Type for TMP_300

Name: TMP_300 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
hash_1(bytes32) := TMP_300(bytes32)
Finance type key: (-1, -1)
[i]Type for hash

Name: hash Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_252(bool) -> cancelled_2[hash_1]
[i]Type for REF_252

Name: cancelled Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_301 = ! REF_252 
[i]Type for TMP_301

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_302(None) = SOLIDITY_CALL require(bool,string)(TMP_301,order cancelled)
[i]Type for TMP_302

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_253(uint256) -> o_1 (-> []).expiry
[i]Type for REF_253

Name: REF_253 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_303(bool) = REF_253 >= block.timestamp
[i]Type for TMP_303

Name: TMP_303 Function: validOrderHash
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_304(None) = SOLIDITY_CALL require(bool,string)(TMP_303,order expired)
[i]Type for TMP_304

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_254(address) -> o_1 (-> []).maker
[i]Type for REF_254

Name: REF_254 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_305(bytes32) = LIBRARY_CALL, dest:Hash, function:Hash.message(bytes32,bytes32), arguments:['domain_2', 'hash_1'] 
[i]Type for TMP_305

Name: TMP_305 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_306(address) = LIBRARY_CALL, dest:Sig, function:Sig.recover(bytes32,Sig.Components), arguments:['TMP_305', 'c_1 (-> [])'] 
[i]Type for TMP_306

Name: TMP_306 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_307(bool) = REF_254 == TMP_306
[i]Type for TMP_307

Name: TMP_307 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_308(None) = SOLIDITY_CALL require(bool,string)(TMP_307,invalid signature)
[i]Type for TMP_308

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
RETURN hash_1
o_1 (-> [])(Hash.Order) := ϕ(['o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])'])
[i]Type for o

Name: o Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: expiry, premium, principal, underlying, maker, maturity, key, vault, exit
Finance Type: undef
c_1 (-> [])(Sig.Components) := ϕ(['c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])'])
[i]Type for c

Name: c Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
cancelled_2(mapping(bytes32 => bool)) := ϕ(['cancelled_2', 'cancelled_0', 'cancelled_1'])
[i]Type for cancelled

Name: cancelled Function: validOrderHash
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
domain_2(bytes32) := ϕ(['domain_0', 'domain_1'])
[i]Type for domain

Name: domain Function: validOrderHash
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_300(bytes32) = LIBRARY_CALL, dest:Hash, function:Hash.order(Hash.Order), arguments:['o_1 (-> [])'] 
[i]Type for TMP_300

Name: TMP_300 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
hash_1(bytes32) := TMP_300(bytes32)
Finance type key: (-1, -1)
[i]Type for hash

Name: hash Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_252(bool) -> cancelled_2[hash_1]
[i]Type for REF_252

Name: cancelled Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_301 = ! REF_252 
[i]Type for TMP_301

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_302(None) = SOLIDITY_CALL require(bool,string)(TMP_301,order cancelled)
[i]Type for TMP_302

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_253(uint256) -> o_1 (-> []).expiry
[i]Type for REF_253

Name: REF_253 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_303(bool) = REF_253 >= block.timestamp
[i]Type for TMP_303

Name: TMP_303 Function: validOrderHash
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_304(None) = SOLIDITY_CALL require(bool,string)(TMP_303,order expired)
[i]Type for TMP_304

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_254(address) -> o_1 (-> []).maker
[i]Type for REF_254

Name: REF_254 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_305(bytes32) = LIBRARY_CALL, dest:Hash, function:Hash.message(bytes32,bytes32), arguments:['domain_2', 'hash_1'] 
[i]Type for TMP_305

Name: TMP_305 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_306(address) = LIBRARY_CALL, dest:Sig, function:Sig.recover(bytes32,Sig.Components), arguments:['TMP_305', 'c_1 (-> [])'] 
[i]Type for TMP_306

Name: TMP_306 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_307(bool) = REF_254 == TMP_306
[i]Type for TMP_307

Name: TMP_307 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_308(None) = SOLIDITY_CALL require(bool,string)(TMP_307,invalid signature)
[i]Type for TMP_308

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
RETURN hash_1
[i]Type for TMP_176

Name: TMP_176 Function: exitVaultFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
hash_1(bytes32) := TMP_176(bytes32)
Finance type key: (-1, -1)
[i]Type for hash

Name: hash Function: exitVaultFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_162(uint256) -> o_1 (-> []).principal
[i]Type for REF_162

Name: REF_162 Function: exitVaultFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_163(uint256) -> filled_17[hash_1]
[i]Type for REF_163

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_177(uint256) = REF_162 (c)- REF_163
[i]Type for TMP_177

Name: TMP_177 Function: exitVaultFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_178(bool) = a_1 <= TMP_177
[i]Type for TMP_178

Name: TMP_178 Function: exitVaultFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_179(None) = SOLIDITY_CALL require(bool,string)(TMP_178,taker amount > available volume)
[i]Type for TMP_179

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_164(uint256) -> filled_17[hash_1]
[i]Type for REF_164

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
filled_18(mapping(bytes32 => uint256)) := ϕ(['filled_17'])
[i]Type for filled

Name: filled Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_164(-> filled_18) = REF_164 (c)+ a_1
[i]Type for REF_164

Name: REF_164 Function: exitVaultFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_180(uint256) = a_1 (c)* 1000000000000000000
[i]Type for TMP_180

Name: TMP_180 Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
REF_165(uint256) -> o_1 (-> []).principal
[i]Type for REF_165

Name: REF_165 Function: exitVaultFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_181(uint256) = TMP_180 (c)/ REF_165
[i]Type for TMP_181

Name: TMP_181 Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
REF_166(uint256) -> o_1 (-> []).premium
[i]Type for REF_166

Name: REF_166 Function: exitVaultFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_182(uint256) = TMP_181 (c)* REF_166
[i]Type for TMP_182

Name: TMP_182 Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
TMP_183(uint256) = TMP_182 (c)/ 1000000000000000000
[i]Type for TMP_183

Name: TMP_183 Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
premiumFilled_1(uint256) := TMP_183(uint256)
Finance type key: (-1, -1)
[i]Type for premiumFilled

Name: premiumFilled Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
TMP_184(uint256) = premiumFilled_1 (c)* 1000000000000000000
[i]Type for TMP_184

Name: TMP_184 Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
REF_167(uint16) -> fenominator_13[3]
[i]Type for REF_167

Name: None Function: None
Num: -1
Den: -1
Address: 1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
TMP_185(uint256) = TMP_184 (c)/ REF_167
[i]Type for TMP_185

Name: TMP_185 Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
TMP_186(uint256) = TMP_185 (c)/ 1000000000000000000
[i]Type for TMP_186

Name: TMP_186 Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
fee_1(uint256) := TMP_186(uint256)
Finance type key: (-1, -1)
[i]Type for fee

Name: fee Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
REF_168(address) -> o_1 (-> []).underlying
[i]Type for REF_168

Name: REF_168 Function: exitVaultFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_187 = CONVERT REF_168 to Erc20
[i]Type for TMP_187

Name: TMP_187 Function: exitVaultFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
uToken_1(Erc20) := TMP_187(Erc20)
Finance type key: (-1, -1)
[i]Type for uToken

Name: uToken Function: exitVaultFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_169(uint256) -> Balance_2[msg.sender]
[i]Type for REF_169

Name: None Function: None
Num: -1
Den: -1
Address: 1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Balance_3(mapping(address => uint256)) := ϕ(['Balance_2'])
[i]Type for Balance

Name: Balance Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: 1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
REF_169(-> Balance_3) = REF_169 (c)+ premiumFilled_1
[i]Type for REF_169

Name: REF_169 Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: raw balance
REF_170(uint256) -> Balance_3[msg.sender]
[i]Type for REF_170

Name: Balance Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: 1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Balance_4(mapping(address => uint256)) := ϕ(['Balance_3'])
[i]Type for Balance

Name: Balance Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: 1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
REF_170(-> Balance_4) = REF_170 (c)- fee_1
[i]Type for REF_170

Name: REF_170 Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
REF_171(uint256) -> Balance_4[msg.sender]
[i]Type for REF_171

Name: Balance Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: 1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Balance_5(mapping(address => uint256)) := ϕ(['Balance_4'])
[i]Type for Balance

Name: Balance Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: 1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
REF_171(-> Balance_5) = REF_171 (c)- fee_1
[i]Type for REF_171

Name: REF_171 Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
TMP_188 = CONVERT marketPlace_23 to MarketPlace
[i]Type for TMP_188

Name: TMP_188 Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: 2
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
REF_173(address) -> o_1 (-> []).underlying
[i]Type for REF_173

Name: REF_173 Function: exitVaultFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_174(uint256) -> o_1 (-> []).maturity
[i]Type for REF_174

Name: REF_174 Function: exitVaultFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_175(address) -> o_1 (-> []).maker
[i]Type for REF_175

Name: REF_175 Function: exitVaultFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_189(bool) = HIGH_LEVEL_CALL, dest:TMP_188(MarketPlace), function:p2pVaultExchange, arguments:['REF_173', 'REF_174', 'msg.sender', 'REF_175', 'a_1']  
[i]Type for TMP_189

Name: TMP_189 Function: exitVaultFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
marketPlace_24(address) := ϕ(['marketPlace_28', 'marketPlace_16', 'marketPlace_30', 'marketPlace_23', 'marketPlace_5', 'marketPlace_9', 'marketPlace_13', 'marketPlace_21', 'marketPlace_24', 'marketPlace_1', 'marketPlace_26'])
[i]Type for marketPlace

Name: marketPlace Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: 2
Norm: u
LF: marketPlace
Value: u
Fields: 
Finance Type: undef
TMP_190(None) = SOLIDITY_CALL require(bool,string)(TMP_189,vault exchange failed)
[i]Type for TMP_190

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_176(bytes32) -> o_1 (-> []).key
[i]Type for REF_176

Name: REF_176 Function: exitVaultFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_177(address) -> o_1 (-> []).maker
[i]Type for REF_177

Name: REF_177 Function: exitVaultFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_178(bool) -> o_1 (-> []).vault
[i]Type for REF_178

Name: REF_178 Function: exitVaultFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_179(bool) -> o_1 (-> []).exit
[i]Type for REF_179

Name: REF_179 Function: exitVaultFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
RETURN True
REF_135(Hash.Order) -> o_1 (-> [])[i_2]
[i]Type for REF_135

Name: o_1 (-> []) Function: exit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_136(bool) -> REF_135.vault
[i]Type for REF_136

Name: REF_136 Function: exit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_151 = ! REF_136 
[i]Type for TMP_151

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_129(Hash.Order) -> o_1 (-> [])[i_2]
[i]Type for REF_129

Name: o_1 (-> []) Function: exit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_130(uint256) -> a_1 (-> [])[i_2]
[i]Type for REF_130

Name: a_1 (-> []) Function: exit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_131(Sig.Components) -> c_1 (-> [])[i_2]
[i]Type for REF_131

Name: c_1 (-> []) Function: exit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
INTERNAL_CALL, Swivel.exitZcTokenFillingZcTokenInitiate(Hash.Order,uint256,Sig.Components)(REF_129,REF_130,REF_131)
o_1 (-> [])(Hash.Order) := ϕ(['REF_129'])
[i]Type for o

Name: o Function: exitZcTokenFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: premium, principal, underlying, maker, maturity, key, vault, exit
Finance Type: undef
a_1(uint256) := ϕ(['REF_130'])
[i]Type for a

Name: a Function: exitZcTokenFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
c_1 (-> [])(Sig.Components) := ϕ(['REF_131'])
[i]Type for c

Name: c Function: exitZcTokenFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
filled_13(mapping(bytes32 => uint256)) := ϕ(['filled_12', 'filled_3', 'filled_6', 'filled_24', 'filled_15', 'filled_9', 'filled_0', 'filled_21', 'filled_18'])
[i]Type for filled

Name: filled Function: exitZcTokenFillingZcTokenInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
marketPlace_17(address) := ϕ(['marketPlace_28', 'marketPlace_16', 'marketPlace_30', 'marketPlace_0', 'marketPlace_9', 'marketPlace_13', 'marketPlace_5', 'marketPlace_21', 'marketPlace_24', 'marketPlace_1', 'marketPlace_26'])
[i]Type for marketPlace

Name: marketPlace Function: exitZcTokenFillingZcTokenInitiate
Num: -1
Den: -1
Address: 2
Norm: u
LF: marketPlace
Value: u
Fields: 
Finance Type: undef
fenominator_10(uint16[]) := ϕ(['fenominator_13', 'fenominator_0', 'fenominator_11', 'fenominator_7', 'fenominator_1', 'fenominator_15', 'fenominator_17', 'fenominator_5', 'fenominator_9', 'fenominator_18', 'fenominator_3'])
[i]Type for fenominator

Name: fenominator Function: exitZcTokenFillingZcTokenInitiate
Num: -1
Den: -1
Address: 1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
TMP_155(bytes32) = INTERNAL_CALL, Swivel.validOrderHash(Hash.Order,Sig.Components)(o_1 (-> []),c_1 (-> []))
o_1 (-> [])(Hash.Order) := ϕ(['o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])'])
[i]Type for o

Name: o Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: expiry, premium, principal, underlying, maker, maturity, key, vault, exit
Finance Type: undef
c_1 (-> [])(Sig.Components) := ϕ(['c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])'])
[i]Type for c

Name: c Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
cancelled_2(mapping(bytes32 => bool)) := ϕ(['cancelled_2', 'cancelled_0', 'cancelled_1'])
[i]Type for cancelled

Name: cancelled Function: validOrderHash
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
domain_2(bytes32) := ϕ(['domain_0', 'domain_1'])
[i]Type for domain

Name: domain Function: validOrderHash
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_300(bytes32) = LIBRARY_CALL, dest:Hash, function:Hash.order(Hash.Order), arguments:['o_1 (-> [])'] 
[i]Type for TMP_300

Name: TMP_300 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
hash_1(bytes32) := TMP_300(bytes32)
Finance type key: (-1, -1)
[i]Type for hash

Name: hash Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_252(bool) -> cancelled_2[hash_1]
[i]Type for REF_252

Name: cancelled Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_301 = ! REF_252 
[i]Type for TMP_301

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_302(None) = SOLIDITY_CALL require(bool,string)(TMP_301,order cancelled)
[i]Type for TMP_302

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_253(uint256) -> o_1 (-> []).expiry
[i]Type for REF_253

Name: REF_253 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_303(bool) = REF_253 >= block.timestamp
[i]Type for TMP_303

Name: TMP_303 Function: validOrderHash
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_304(None) = SOLIDITY_CALL require(bool,string)(TMP_303,order expired)
[i]Type for TMP_304

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_254(address) -> o_1 (-> []).maker
[i]Type for REF_254

Name: REF_254 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_305(bytes32) = LIBRARY_CALL, dest:Hash, function:Hash.message(bytes32,bytes32), arguments:['domain_2', 'hash_1'] 
[i]Type for TMP_305

Name: TMP_305 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_306(address) = LIBRARY_CALL, dest:Sig, function:Sig.recover(bytes32,Sig.Components), arguments:['TMP_305', 'c_1 (-> [])'] 
[i]Type for TMP_306

Name: TMP_306 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_307(bool) = REF_254 == TMP_306
[i]Type for TMP_307

Name: TMP_307 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_308(None) = SOLIDITY_CALL require(bool,string)(TMP_307,invalid signature)
[i]Type for TMP_308

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
RETURN hash_1
o_1 (-> [])(Hash.Order) := ϕ(['o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])'])
[i]Type for o

Name: o Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: expiry, premium, principal, underlying, maker, maturity, key, vault, exit
Finance Type: undef
c_1 (-> [])(Sig.Components) := ϕ(['c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])'])
[i]Type for c

Name: c Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
cancelled_2(mapping(bytes32 => bool)) := ϕ(['cancelled_2', 'cancelled_0', 'cancelled_1'])
[i]Type for cancelled

Name: cancelled Function: validOrderHash
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
domain_2(bytes32) := ϕ(['domain_0', 'domain_1'])
[i]Type for domain

Name: domain Function: validOrderHash
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_300(bytes32) = LIBRARY_CALL, dest:Hash, function:Hash.order(Hash.Order), arguments:['o_1 (-> [])'] 
[i]Type for TMP_300

Name: TMP_300 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
hash_1(bytes32) := TMP_300(bytes32)
Finance type key: (-1, -1)
[i]Type for hash

Name: hash Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_252(bool) -> cancelled_2[hash_1]
[i]Type for REF_252

Name: cancelled Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_301 = ! REF_252 
[i]Type for TMP_301

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_302(None) = SOLIDITY_CALL require(bool,string)(TMP_301,order cancelled)
[i]Type for TMP_302

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_253(uint256) -> o_1 (-> []).expiry
[i]Type for REF_253

Name: REF_253 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_303(bool) = REF_253 >= block.timestamp
[i]Type for TMP_303

Name: TMP_303 Function: validOrderHash
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_304(None) = SOLIDITY_CALL require(bool,string)(TMP_303,order expired)
[i]Type for TMP_304

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_254(address) -> o_1 (-> []).maker
[i]Type for REF_254

Name: REF_254 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_305(bytes32) = LIBRARY_CALL, dest:Hash, function:Hash.message(bytes32,bytes32), arguments:['domain_2', 'hash_1'] 
[i]Type for TMP_305

Name: TMP_305 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_306(address) = LIBRARY_CALL, dest:Sig, function:Sig.recover(bytes32,Sig.Components), arguments:['TMP_305', 'c_1 (-> [])'] 
[i]Type for TMP_306

Name: TMP_306 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_307(bool) = REF_254 == TMP_306
[i]Type for TMP_307

Name: TMP_307 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_308(None) = SOLIDITY_CALL require(bool,string)(TMP_307,invalid signature)
[i]Type for TMP_308

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
RETURN hash_1
[i]Type for TMP_155

Name: TMP_155 Function: exitZcTokenFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
hash_1(bytes32) := TMP_155(bytes32)
Finance type key: (-1, -1)
[i]Type for hash

Name: hash Function: exitZcTokenFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_143(uint256) -> o_1 (-> []).premium
[i]Type for REF_143

Name: REF_143 Function: exitZcTokenFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_144(uint256) -> filled_14[hash_1]
[i]Type for REF_144

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_156(uint256) = REF_143 (c)- REF_144
[i]Type for TMP_156

Name: TMP_156 Function: exitZcTokenFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_157(bool) = a_1 <= TMP_156
[i]Type for TMP_157

Name: TMP_157 Function: exitZcTokenFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_158(None) = SOLIDITY_CALL require(bool,string)(TMP_157,taker amount > available volume)
[i]Type for TMP_158

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_145(uint256) -> filled_14[hash_1]
[i]Type for REF_145

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
filled_15(mapping(bytes32 => uint256)) := ϕ(['filled_14'])
[i]Type for filled

Name: filled Function: exitZcTokenFillingZcTokenInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_145(-> filled_15) = REF_145 (c)+ a_1
[i]Type for REF_145

Name: REF_145 Function: exitZcTokenFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_159(uint256) = a_1 (c)* 1000000000000000000
[i]Type for TMP_159

Name: TMP_159 Function: exitZcTokenFillingZcTokenInitiate
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
REF_146(uint256) -> o_1 (-> []).premium
[i]Type for REF_146

Name: REF_146 Function: exitZcTokenFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_160(uint256) = TMP_159 (c)/ REF_146
[i]Type for TMP_160

Name: TMP_160 Function: exitZcTokenFillingZcTokenInitiate
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
REF_147(uint256) -> o_1 (-> []).principal
[i]Type for REF_147

Name: REF_147 Function: exitZcTokenFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_161(uint256) = TMP_160 (c)* REF_147
[i]Type for TMP_161

Name: TMP_161 Function: exitZcTokenFillingZcTokenInitiate
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
TMP_162(uint256) = TMP_161 (c)/ 1000000000000000000
[i]Type for TMP_162

Name: TMP_162 Function: exitZcTokenFillingZcTokenInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
principalFilled_1(uint256) := TMP_162(uint256)
Finance type key: (-1, -1)
[i]Type for principalFilled

Name: principalFilled Function: exitZcTokenFillingZcTokenInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
TMP_163(uint256) = principalFilled_1 (c)* 1000000000000000000
[i]Type for TMP_163

Name: TMP_163 Function: exitZcTokenFillingZcTokenInitiate
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
REF_148(uint16) -> fenominator_11[1]
[i]Type for REF_148

Name: None Function: None
Num: -1
Den: -1
Address: 1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
TMP_164(uint256) = TMP_163 (c)/ REF_148
[i]Type for TMP_164

Name: TMP_164 Function: exitZcTokenFillingZcTokenInitiate
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
TMP_165(uint256) = TMP_164 (c)/ 1000000000000000000
[i]Type for TMP_165

Name: TMP_165 Function: exitZcTokenFillingZcTokenInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
fee_1(uint256) := TMP_165(uint256)
Finance type key: (-1, -1)
[i]Type for fee

Name: fee Function: exitZcTokenFillingZcTokenInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
REF_149(address) -> o_1 (-> []).underlying
[i]Type for REF_149

Name: REF_149 Function: exitZcTokenFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_166 = CONVERT REF_149 to Erc20
[i]Type for TMP_166

Name: TMP_166 Function: exitZcTokenFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
uToken_1(Erc20) := TMP_166(Erc20)
Finance type key: (-1, -1)
[i]Type for uToken

Name: uToken Function: exitZcTokenFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_151(address) -> o_1 (-> []).maker
[i]Type for REF_151

Name: REF_151 Function: exitZcTokenFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_167(uint256) = principalFilled_1 (c)- a_1
[i]Type for TMP_167

Name: TMP_167 Function: exitZcTokenFillingZcTokenInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
TMP_168(uint256) = TMP_167 (c)- fee_1
[i]Type for TMP_168

Name: TMP_168 Function: exitZcTokenFillingZcTokenInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_169(bool) = HIGH_LEVEL_CALL, dest:uToken_1(Erc20), function:transferFrom, arguments:['REF_151', 'msg.sender', 'TMP_168']  
[i]Type for TMP_169

Name: TMP_169 Function: exitZcTokenFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
marketPlace_19(address) := ϕ(['marketPlace_28', 'marketPlace_16', 'marketPlace_30', 'marketPlace_5', 'marketPlace_9', 'marketPlace_13', 'marketPlace_21', 'marketPlace_24', 'marketPlace_1', 'marketPlace_18', 'marketPlace_26'])
[i]Type for marketPlace

Name: marketPlace Function: exitZcTokenFillingZcTokenInitiate
Num: -1
Den: -1
Address: 2
Norm: u
LF: marketPlace
Value: u
Fields: 
Finance Type: undef
REF_153(address) -> o_1 (-> []).maker
[i]Type for REF_153

Name: REF_153 Function: exitZcTokenFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_170 = CONVERT this to address
[i]Type for TMP_170

Name: TMP_170 Function: exitZcTokenFillingZcTokenInitiate
Num: 
Den: 
Address: 5
Norm: u
LF: Swivel
Value: u
Fields: 
Finance Type: undef
TMP_171(bool) = HIGH_LEVEL_CALL, dest:uToken_1(Erc20), function:transferFrom, arguments:['REF_153', 'TMP_170', 'fee_1']  
[i]Type for TMP_171

Name: TMP_171 Function: exitZcTokenFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
marketPlace_20(address) := ϕ(['marketPlace_28', 'marketPlace_16', 'marketPlace_30', 'marketPlace_5', 'marketPlace_9', 'marketPlace_13', 'marketPlace_21', 'marketPlace_24', 'marketPlace_19', 'marketPlace_1', 'marketPlace_26'])
[i]Type for marketPlace

Name: marketPlace Function: exitZcTokenFillingZcTokenInitiate
Num: -1
Den: -1
Address: 2
Norm: u
LF: marketPlace
Value: u
Fields: 
Finance Type: undef
TMP_172 = CONVERT marketPlace_20 to MarketPlace
[i]Type for TMP_172

Name: TMP_172 Function: exitZcTokenFillingZcTokenInitiate
Num: -1
Den: -1
Address: 2
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
REF_155(address) -> o_1 (-> []).underlying
[i]Type for REF_155

Name: REF_155 Function: exitZcTokenFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_156(uint256) -> o_1 (-> []).maturity
[i]Type for REF_156

Name: REF_156 Function: exitZcTokenFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_157(address) -> o_1 (-> []).maker
[i]Type for REF_157

Name: REF_157 Function: exitZcTokenFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_173(bool) = HIGH_LEVEL_CALL, dest:TMP_172(MarketPlace), function:p2pZcTokenExchange, arguments:['REF_155', 'REF_156', 'msg.sender', 'REF_157', 'principalFilled_1']  
[i]Type for TMP_173

Name: TMP_173 Function: exitZcTokenFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
marketPlace_21(address) := ϕ(['marketPlace_28', 'marketPlace_16', 'marketPlace_30', 'marketPlace_5', 'marketPlace_9', 'marketPlace_13', 'marketPlace_21', 'marketPlace_24', 'marketPlace_1', 'marketPlace_20', 'marketPlace_26'])
[i]Type for marketPlace

Name: marketPlace Function: exitZcTokenFillingZcTokenInitiate
Num: -1
Den: -1
Address: 2
Norm: u
LF: marketPlace
Value: u
Fields: 
Finance Type: undef
TMP_174(None) = SOLIDITY_CALL require(bool,string)(TMP_173,zcToken exchange failed)
[i]Type for TMP_174

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_158(bytes32) -> o_1 (-> []).key
[i]Type for REF_158

Name: REF_158 Function: exitZcTokenFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_159(address) -> o_1 (-> []).maker
[i]Type for REF_159

Name: REF_159 Function: exitZcTokenFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_160(bool) -> o_1 (-> []).vault
[i]Type for REF_160

Name: REF_160 Function: exitZcTokenFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_161(bool) -> o_1 (-> []).exit
[i]Type for REF_161

Name: REF_161 Function: exitZcTokenFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
o_1 (-> [])(Hash.Order) := ϕ(['REF_129'])
[i]Type for o

Name: o Function: exitZcTokenFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: premium, principal, underlying, maker, maturity, key, vault, exit
Finance Type: undef
a_1(uint256) := ϕ(['REF_130'])
[i]Type for a

Name: a Function: exitZcTokenFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
c_1 (-> [])(Sig.Components) := ϕ(['REF_131'])
[i]Type for c

Name: c Function: exitZcTokenFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
filled_13(mapping(bytes32 => uint256)) := ϕ(['filled_12', 'filled_3', 'filled_6', 'filled_24', 'filled_15', 'filled_9', 'filled_0', 'filled_21', 'filled_18'])
[i]Type for filled

Name: filled Function: exitZcTokenFillingZcTokenInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
marketPlace_17(address) := ϕ(['marketPlace_28', 'marketPlace_16', 'marketPlace_30', 'marketPlace_0', 'marketPlace_9', 'marketPlace_13', 'marketPlace_5', 'marketPlace_21', 'marketPlace_24', 'marketPlace_1', 'marketPlace_26'])
[i]Type for marketPlace

Name: marketPlace Function: exitZcTokenFillingZcTokenInitiate
Num: -1
Den: -1
Address: 2
Norm: u
LF: marketPlace
Value: u
Fields: 
Finance Type: undef
fenominator_10(uint16[]) := ϕ(['fenominator_13', 'fenominator_0', 'fenominator_11', 'fenominator_7', 'fenominator_1', 'fenominator_15', 'fenominator_17', 'fenominator_5', 'fenominator_9', 'fenominator_18', 'fenominator_3'])
[i]Type for fenominator

Name: fenominator Function: exitZcTokenFillingZcTokenInitiate
Num: -1
Den: -1
Address: 1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
TMP_155(bytes32) = INTERNAL_CALL, Swivel.validOrderHash(Hash.Order,Sig.Components)(o_1 (-> []),c_1 (-> []))
o_1 (-> [])(Hash.Order) := ϕ(['o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])'])
[i]Type for o

Name: o Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: expiry, premium, principal, underlying, maker, maturity, key, vault, exit
Finance Type: undef
c_1 (-> [])(Sig.Components) := ϕ(['c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])'])
[i]Type for c

Name: c Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
cancelled_2(mapping(bytes32 => bool)) := ϕ(['cancelled_2', 'cancelled_0', 'cancelled_1'])
[i]Type for cancelled

Name: cancelled Function: validOrderHash
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
domain_2(bytes32) := ϕ(['domain_0', 'domain_1'])
[i]Type for domain

Name: domain Function: validOrderHash
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_300(bytes32) = LIBRARY_CALL, dest:Hash, function:Hash.order(Hash.Order), arguments:['o_1 (-> [])'] 
[i]Type for TMP_300

Name: TMP_300 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
hash_1(bytes32) := TMP_300(bytes32)
Finance type key: (-1, -1)
[i]Type for hash

Name: hash Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_252(bool) -> cancelled_2[hash_1]
[i]Type for REF_252

Name: cancelled Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_301 = ! REF_252 
[i]Type for TMP_301

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_302(None) = SOLIDITY_CALL require(bool,string)(TMP_301,order cancelled)
[i]Type for TMP_302

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_253(uint256) -> o_1 (-> []).expiry
[i]Type for REF_253

Name: REF_253 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_303(bool) = REF_253 >= block.timestamp
[i]Type for TMP_303

Name: TMP_303 Function: validOrderHash
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_304(None) = SOLIDITY_CALL require(bool,string)(TMP_303,order expired)
[i]Type for TMP_304

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_254(address) -> o_1 (-> []).maker
[i]Type for REF_254

Name: REF_254 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_305(bytes32) = LIBRARY_CALL, dest:Hash, function:Hash.message(bytes32,bytes32), arguments:['domain_2', 'hash_1'] 
[i]Type for TMP_305

Name: TMP_305 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_306(address) = LIBRARY_CALL, dest:Sig, function:Sig.recover(bytes32,Sig.Components), arguments:['TMP_305', 'c_1 (-> [])'] 
[i]Type for TMP_306

Name: TMP_306 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_307(bool) = REF_254 == TMP_306
[i]Type for TMP_307

Name: TMP_307 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_308(None) = SOLIDITY_CALL require(bool,string)(TMP_307,invalid signature)
[i]Type for TMP_308

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
RETURN hash_1
o_1 (-> [])(Hash.Order) := ϕ(['o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])'])
[i]Type for o

Name: o Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: expiry, premium, principal, underlying, maker, maturity, key, vault, exit
Finance Type: undef
c_1 (-> [])(Sig.Components) := ϕ(['c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])'])
[i]Type for c

Name: c Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
cancelled_2(mapping(bytes32 => bool)) := ϕ(['cancelled_2', 'cancelled_0', 'cancelled_1'])
[i]Type for cancelled

Name: cancelled Function: validOrderHash
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
domain_2(bytes32) := ϕ(['domain_0', 'domain_1'])
[i]Type for domain

Name: domain Function: validOrderHash
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_300(bytes32) = LIBRARY_CALL, dest:Hash, function:Hash.order(Hash.Order), arguments:['o_1 (-> [])'] 
[i]Type for TMP_300

Name: TMP_300 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
hash_1(bytes32) := TMP_300(bytes32)
Finance type key: (-1, -1)
[i]Type for hash

Name: hash Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_252(bool) -> cancelled_2[hash_1]
[i]Type for REF_252

Name: cancelled Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_301 = ! REF_252 
[i]Type for TMP_301

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_302(None) = SOLIDITY_CALL require(bool,string)(TMP_301,order cancelled)
[i]Type for TMP_302

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_253(uint256) -> o_1 (-> []).expiry
[i]Type for REF_253

Name: REF_253 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_303(bool) = REF_253 >= block.timestamp
[i]Type for TMP_303

Name: TMP_303 Function: validOrderHash
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_304(None) = SOLIDITY_CALL require(bool,string)(TMP_303,order expired)
[i]Type for TMP_304

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_254(address) -> o_1 (-> []).maker
[i]Type for REF_254

Name: REF_254 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_305(bytes32) = LIBRARY_CALL, dest:Hash, function:Hash.message(bytes32,bytes32), arguments:['domain_2', 'hash_1'] 
[i]Type for TMP_305

Name: TMP_305 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_306(address) = LIBRARY_CALL, dest:Sig, function:Sig.recover(bytes32,Sig.Components), arguments:['TMP_305', 'c_1 (-> [])'] 
[i]Type for TMP_306

Name: TMP_306 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_307(bool) = REF_254 == TMP_306
[i]Type for TMP_307

Name: TMP_307 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_308(None) = SOLIDITY_CALL require(bool,string)(TMP_307,invalid signature)
[i]Type for TMP_308

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
RETURN hash_1
[i]Type for TMP_155

Name: TMP_155 Function: exitZcTokenFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
hash_1(bytes32) := TMP_155(bytes32)
Finance type key: (-1, -1)
[i]Type for hash

Name: hash Function: exitZcTokenFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_143(uint256) -> o_1 (-> []).premium
[i]Type for REF_143

Name: REF_143 Function: exitZcTokenFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_144(uint256) -> filled_14[hash_1]
[i]Type for REF_144

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_156(uint256) = REF_143 (c)- REF_144
[i]Type for TMP_156

Name: TMP_156 Function: exitZcTokenFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_157(bool) = a_1 <= TMP_156
[i]Type for TMP_157

Name: TMP_157 Function: exitZcTokenFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_158(None) = SOLIDITY_CALL require(bool,string)(TMP_157,taker amount > available volume)
[i]Type for TMP_158

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_145(uint256) -> filled_14[hash_1]
[i]Type for REF_145

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
filled_15(mapping(bytes32 => uint256)) := ϕ(['filled_14'])
[i]Type for filled

Name: filled Function: exitZcTokenFillingZcTokenInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_145(-> filled_15) = REF_145 (c)+ a_1
[i]Type for REF_145

Name: REF_145 Function: exitZcTokenFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_159(uint256) = a_1 (c)* 1000000000000000000
[i]Type for TMP_159

Name: TMP_159 Function: exitZcTokenFillingZcTokenInitiate
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
REF_146(uint256) -> o_1 (-> []).premium
[i]Type for REF_146

Name: REF_146 Function: exitZcTokenFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_160(uint256) = TMP_159 (c)/ REF_146
[i]Type for TMP_160

Name: TMP_160 Function: exitZcTokenFillingZcTokenInitiate
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
REF_147(uint256) -> o_1 (-> []).principal
[i]Type for REF_147

Name: REF_147 Function: exitZcTokenFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_161(uint256) = TMP_160 (c)* REF_147
[i]Type for TMP_161

Name: TMP_161 Function: exitZcTokenFillingZcTokenInitiate
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
TMP_162(uint256) = TMP_161 (c)/ 1000000000000000000
[i]Type for TMP_162

Name: TMP_162 Function: exitZcTokenFillingZcTokenInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
principalFilled_1(uint256) := TMP_162(uint256)
Finance type key: (-1, -1)
[i]Type for principalFilled

Name: principalFilled Function: exitZcTokenFillingZcTokenInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
TMP_163(uint256) = principalFilled_1 (c)* 1000000000000000000
[i]Type for TMP_163

Name: TMP_163 Function: exitZcTokenFillingZcTokenInitiate
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
REF_148(uint16) -> fenominator_11[1]
[i]Type for REF_148

Name: None Function: None
Num: -1
Den: -1
Address: 1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
TMP_164(uint256) = TMP_163 (c)/ REF_148
[i]Type for TMP_164

Name: TMP_164 Function: exitZcTokenFillingZcTokenInitiate
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
TMP_165(uint256) = TMP_164 (c)/ 1000000000000000000
[i]Type for TMP_165

Name: TMP_165 Function: exitZcTokenFillingZcTokenInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
fee_1(uint256) := TMP_165(uint256)
Finance type key: (-1, -1)
[i]Type for fee

Name: fee Function: exitZcTokenFillingZcTokenInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
REF_149(address) -> o_1 (-> []).underlying
[i]Type for REF_149

Name: REF_149 Function: exitZcTokenFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_166 = CONVERT REF_149 to Erc20
[i]Type for TMP_166

Name: TMP_166 Function: exitZcTokenFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
uToken_1(Erc20) := TMP_166(Erc20)
Finance type key: (-1, -1)
[i]Type for uToken

Name: uToken Function: exitZcTokenFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_151(address) -> o_1 (-> []).maker
[i]Type for REF_151

Name: REF_151 Function: exitZcTokenFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_167(uint256) = principalFilled_1 (c)- a_1
[i]Type for TMP_167

Name: TMP_167 Function: exitZcTokenFillingZcTokenInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
TMP_168(uint256) = TMP_167 (c)- fee_1
[i]Type for TMP_168

Name: TMP_168 Function: exitZcTokenFillingZcTokenInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_169(bool) = HIGH_LEVEL_CALL, dest:uToken_1(Erc20), function:transferFrom, arguments:['REF_151', 'msg.sender', 'TMP_168']  
[i]Type for TMP_169

Name: TMP_169 Function: exitZcTokenFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
marketPlace_19(address) := ϕ(['marketPlace_28', 'marketPlace_16', 'marketPlace_30', 'marketPlace_5', 'marketPlace_9', 'marketPlace_13', 'marketPlace_21', 'marketPlace_24', 'marketPlace_1', 'marketPlace_18', 'marketPlace_26'])
[i]Type for marketPlace

Name: marketPlace Function: exitZcTokenFillingZcTokenInitiate
Num: -1
Den: -1
Address: 2
Norm: u
LF: marketPlace
Value: u
Fields: 
Finance Type: undef
REF_153(address) -> o_1 (-> []).maker
[i]Type for REF_153

Name: REF_153 Function: exitZcTokenFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_170 = CONVERT this to address
[i]Type for TMP_170

Name: TMP_170 Function: exitZcTokenFillingZcTokenInitiate
Num: 
Den: 
Address: 5
Norm: u
LF: Swivel
Value: u
Fields: 
Finance Type: undef
TMP_171(bool) = HIGH_LEVEL_CALL, dest:uToken_1(Erc20), function:transferFrom, arguments:['REF_153', 'TMP_170', 'fee_1']  
[i]Type for TMP_171

Name: TMP_171 Function: exitZcTokenFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
marketPlace_20(address) := ϕ(['marketPlace_28', 'marketPlace_16', 'marketPlace_30', 'marketPlace_5', 'marketPlace_9', 'marketPlace_13', 'marketPlace_21', 'marketPlace_24', 'marketPlace_19', 'marketPlace_1', 'marketPlace_26'])
[i]Type for marketPlace

Name: marketPlace Function: exitZcTokenFillingZcTokenInitiate
Num: -1
Den: -1
Address: 2
Norm: u
LF: marketPlace
Value: u
Fields: 
Finance Type: undef
TMP_172 = CONVERT marketPlace_20 to MarketPlace
[i]Type for TMP_172

Name: TMP_172 Function: exitZcTokenFillingZcTokenInitiate
Num: -1
Den: -1
Address: 2
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
REF_155(address) -> o_1 (-> []).underlying
[i]Type for REF_155

Name: REF_155 Function: exitZcTokenFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_156(uint256) -> o_1 (-> []).maturity
[i]Type for REF_156

Name: REF_156 Function: exitZcTokenFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_157(address) -> o_1 (-> []).maker
[i]Type for REF_157

Name: REF_157 Function: exitZcTokenFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_173(bool) = HIGH_LEVEL_CALL, dest:TMP_172(MarketPlace), function:p2pZcTokenExchange, arguments:['REF_155', 'REF_156', 'msg.sender', 'REF_157', 'principalFilled_1']  
[i]Type for TMP_173

Name: TMP_173 Function: exitZcTokenFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
marketPlace_21(address) := ϕ(['marketPlace_28', 'marketPlace_16', 'marketPlace_30', 'marketPlace_5', 'marketPlace_9', 'marketPlace_13', 'marketPlace_21', 'marketPlace_24', 'marketPlace_1', 'marketPlace_20', 'marketPlace_26'])
[i]Type for marketPlace

Name: marketPlace Function: exitZcTokenFillingZcTokenInitiate
Num: -1
Den: -1
Address: 2
Norm: u
LF: marketPlace
Value: u
Fields: 
Finance Type: undef
TMP_174(None) = SOLIDITY_CALL require(bool,string)(TMP_173,zcToken exchange failed)
[i]Type for TMP_174

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_158(bytes32) -> o_1 (-> []).key
[i]Type for REF_158

Name: REF_158 Function: exitZcTokenFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_159(address) -> o_1 (-> []).maker
[i]Type for REF_159

Name: REF_159 Function: exitZcTokenFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_160(bool) -> o_1 (-> []).vault
[i]Type for REF_160

Name: REF_160 Function: exitZcTokenFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_161(bool) -> o_1 (-> []).exit
[i]Type for REF_161

Name: REF_161 Function: exitZcTokenFillingZcTokenInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_137(Hash.Order) -> o_1 (-> [])[i_2]
[i]Type for REF_137

Name: o_1 (-> []) Function: exit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_138(uint256) -> a_1 (-> [])[i_2]
[i]Type for REF_138

Name: a_1 (-> []) Function: exit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_139(Sig.Components) -> c_1 (-> [])[i_2]
[i]Type for REF_139

Name: c_1 (-> []) Function: exit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
INTERNAL_CALL, Swivel.exitVaultFillingZcTokenExit(Hash.Order,uint256,Sig.Components)(REF_137,REF_138,REF_139)
o_1 (-> [])(Hash.Order) := ϕ(['REF_137'])
[i]Type for o

Name: o Function: exitVaultFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: principal, premium, underlying, maturity, maker, key, vault, exit
Finance Type: undef
a_1(uint256) := ϕ(['REF_138'])
[i]Type for a

Name: a Function: exitVaultFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
c_1 (-> [])(Sig.Components) := ϕ(['REF_139'])
[i]Type for c

Name: c Function: exitVaultFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
filled_19(mapping(bytes32 => uint256)) := ϕ(['filled_12', 'filled_3', 'filled_6', 'filled_24', 'filled_15', 'filled_9', 'filled_0', 'filled_21', 'filled_18'])
[i]Type for filled

Name: filled Function: exitVaultFillingZcTokenExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
marketPlace_25(address) := ϕ(['marketPlace_28', 'marketPlace_16', 'marketPlace_30', 'marketPlace_0', 'marketPlace_9', 'marketPlace_13', 'marketPlace_5', 'marketPlace_21', 'marketPlace_24', 'marketPlace_1', 'marketPlace_26'])
[i]Type for marketPlace

Name: marketPlace Function: exitVaultFillingZcTokenExit
Num: -1
Den: -1
Address: 2
Norm: u
LF: marketPlace
Value: u
Fields: 
Finance Type: undef
fenominator_14(uint16[]) := ϕ(['fenominator_13', 'fenominator_0', 'fenominator_11', 'fenominator_7', 'fenominator_1', 'fenominator_15', 'fenominator_17', 'fenominator_5', 'fenominator_9', 'fenominator_18', 'fenominator_3'])
[i]Type for fenominator

Name: fenominator Function: exitVaultFillingZcTokenExit
Num: -1
Den: -1
Address: 1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
TMP_192(bytes32) = INTERNAL_CALL, Swivel.validOrderHash(Hash.Order,Sig.Components)(o_1 (-> []),c_1 (-> []))
o_1 (-> [])(Hash.Order) := ϕ(['o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])'])
[i]Type for o

Name: o Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: expiry, premium, principal, underlying, maker, maturity, key, vault, exit
Finance Type: undef
c_1 (-> [])(Sig.Components) := ϕ(['c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])'])
[i]Type for c

Name: c Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
cancelled_2(mapping(bytes32 => bool)) := ϕ(['cancelled_2', 'cancelled_0', 'cancelled_1'])
[i]Type for cancelled

Name: cancelled Function: validOrderHash
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
domain_2(bytes32) := ϕ(['domain_0', 'domain_1'])
[i]Type for domain

Name: domain Function: validOrderHash
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_300(bytes32) = LIBRARY_CALL, dest:Hash, function:Hash.order(Hash.Order), arguments:['o_1 (-> [])'] 
[i]Type for TMP_300

Name: TMP_300 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
hash_1(bytes32) := TMP_300(bytes32)
Finance type key: (-1, -1)
[i]Type for hash

Name: hash Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_252(bool) -> cancelled_2[hash_1]
[i]Type for REF_252

Name: cancelled Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_301 = ! REF_252 
[i]Type for TMP_301

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_302(None) = SOLIDITY_CALL require(bool,string)(TMP_301,order cancelled)
[i]Type for TMP_302

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_253(uint256) -> o_1 (-> []).expiry
[i]Type for REF_253

Name: REF_253 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_303(bool) = REF_253 >= block.timestamp
[i]Type for TMP_303

Name: TMP_303 Function: validOrderHash
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_304(None) = SOLIDITY_CALL require(bool,string)(TMP_303,order expired)
[i]Type for TMP_304

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_254(address) -> o_1 (-> []).maker
[i]Type for REF_254

Name: REF_254 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_305(bytes32) = LIBRARY_CALL, dest:Hash, function:Hash.message(bytes32,bytes32), arguments:['domain_2', 'hash_1'] 
[i]Type for TMP_305

Name: TMP_305 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_306(address) = LIBRARY_CALL, dest:Sig, function:Sig.recover(bytes32,Sig.Components), arguments:['TMP_305', 'c_1 (-> [])'] 
[i]Type for TMP_306

Name: TMP_306 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_307(bool) = REF_254 == TMP_306
[i]Type for TMP_307

Name: TMP_307 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_308(None) = SOLIDITY_CALL require(bool,string)(TMP_307,invalid signature)
[i]Type for TMP_308

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
RETURN hash_1
o_1 (-> [])(Hash.Order) := ϕ(['o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])'])
[i]Type for o

Name: o Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: expiry, premium, principal, underlying, maker, maturity, key, vault, exit
Finance Type: undef
c_1 (-> [])(Sig.Components) := ϕ(['c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])'])
[i]Type for c

Name: c Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
cancelled_2(mapping(bytes32 => bool)) := ϕ(['cancelled_2', 'cancelled_0', 'cancelled_1'])
[i]Type for cancelled

Name: cancelled Function: validOrderHash
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
domain_2(bytes32) := ϕ(['domain_0', 'domain_1'])
[i]Type for domain

Name: domain Function: validOrderHash
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_300(bytes32) = LIBRARY_CALL, dest:Hash, function:Hash.order(Hash.Order), arguments:['o_1 (-> [])'] 
[i]Type for TMP_300

Name: TMP_300 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
hash_1(bytes32) := TMP_300(bytes32)
Finance type key: (-1, -1)
[i]Type for hash

Name: hash Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_252(bool) -> cancelled_2[hash_1]
[i]Type for REF_252

Name: cancelled Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_301 = ! REF_252 
[i]Type for TMP_301

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_302(None) = SOLIDITY_CALL require(bool,string)(TMP_301,order cancelled)
[i]Type for TMP_302

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_253(uint256) -> o_1 (-> []).expiry
[i]Type for REF_253

Name: REF_253 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_303(bool) = REF_253 >= block.timestamp
[i]Type for TMP_303

Name: TMP_303 Function: validOrderHash
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_304(None) = SOLIDITY_CALL require(bool,string)(TMP_303,order expired)
[i]Type for TMP_304

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_254(address) -> o_1 (-> []).maker
[i]Type for REF_254

Name: REF_254 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_305(bytes32) = LIBRARY_CALL, dest:Hash, function:Hash.message(bytes32,bytes32), arguments:['domain_2', 'hash_1'] 
[i]Type for TMP_305

Name: TMP_305 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_306(address) = LIBRARY_CALL, dest:Sig, function:Sig.recover(bytes32,Sig.Components), arguments:['TMP_305', 'c_1 (-> [])'] 
[i]Type for TMP_306

Name: TMP_306 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_307(bool) = REF_254 == TMP_306
[i]Type for TMP_307

Name: TMP_307 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_308(None) = SOLIDITY_CALL require(bool,string)(TMP_307,invalid signature)
[i]Type for TMP_308

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
RETURN hash_1
[i]Type for TMP_192

Name: TMP_192 Function: exitVaultFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
hash_1(bytes32) := TMP_192(bytes32)
Finance type key: (-1, -1)
[i]Type for hash

Name: hash Function: exitVaultFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_180(uint256) -> o_1 (-> []).principal
[i]Type for REF_180

Name: REF_180 Function: exitVaultFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_181(uint256) -> filled_20[hash_1]
[i]Type for REF_181

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_193(uint256) = REF_180 (c)- REF_181
[i]Type for TMP_193

Name: TMP_193 Function: exitVaultFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_194(bool) = a_1 <= TMP_193
[i]Type for TMP_194

Name: TMP_194 Function: exitVaultFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_195(None) = SOLIDITY_CALL require(bool,string)(TMP_194,taker amount > available volume)
[i]Type for TMP_195

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_182(uint256) -> filled_20[hash_1]
[i]Type for REF_182

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
filled_21(mapping(bytes32 => uint256)) := ϕ(['filled_20'])
[i]Type for filled

Name: filled Function: exitVaultFillingZcTokenExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_182(-> filled_21) = REF_182 (c)+ a_1
[i]Type for REF_182

Name: REF_182 Function: exitVaultFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_196(uint256) = a_1 (c)* 1000000000000000000
[i]Type for TMP_196

Name: TMP_196 Function: exitVaultFillingZcTokenExit
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
REF_183(uint256) -> o_1 (-> []).principal
[i]Type for REF_183

Name: REF_183 Function: exitVaultFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_197(uint256) = TMP_196 (c)/ REF_183
[i]Type for TMP_197

Name: TMP_197 Function: exitVaultFillingZcTokenExit
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
REF_184(uint256) -> o_1 (-> []).premium
[i]Type for REF_184

Name: REF_184 Function: exitVaultFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_198(uint256) = TMP_197 (c)* REF_184
[i]Type for TMP_198

Name: TMP_198 Function: exitVaultFillingZcTokenExit
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
TMP_199(uint256) = TMP_198 (c)/ 1000000000000000000
[i]Type for TMP_199

Name: TMP_199 Function: exitVaultFillingZcTokenExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
premiumFilled_1(uint256) := TMP_199(uint256)
Finance type key: (-1, -1)
[i]Type for premiumFilled

Name: premiumFilled Function: exitVaultFillingZcTokenExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
TMP_200(uint256) = premiumFilled_1 (c)* 1000000000000000000
[i]Type for TMP_200

Name: TMP_200 Function: exitVaultFillingZcTokenExit
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
REF_185(uint16) -> fenominator_15[3]
[i]Type for REF_185

Name: None Function: None
Num: -1
Den: -1
Address: 1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
TMP_201(uint256) = TMP_200 (c)/ REF_185
[i]Type for TMP_201

Name: TMP_201 Function: exitVaultFillingZcTokenExit
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
TMP_202(uint256) = TMP_201 (c)/ 1000000000000000000
[i]Type for TMP_202

Name: TMP_202 Function: exitVaultFillingZcTokenExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
fee_1(uint256) := TMP_202(uint256)
Finance type key: (-1, -1)
[i]Type for fee

Name: fee Function: exitVaultFillingZcTokenExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
TMP_203 = CONVERT marketPlace_26 to MarketPlace
[i]Type for TMP_203

Name: TMP_203 Function: exitVaultFillingZcTokenExit
Num: -1
Den: -1
Address: 2
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
mPlace_1(MarketPlace) := TMP_203(MarketPlace)
Finance type key: (-1, -1)
[i]Type for mPlace

Name: mPlace Function: exitVaultFillingZcTokenExit
Num: -1
Den: -1
Address: 2
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
REF_187(address) -> o_1 (-> []).underlying
[i]Type for REF_187

Name: REF_187 Function: exitVaultFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_188(uint256) -> o_1 (-> []).maturity
[i]Type for REF_188

Name: REF_188 Function: exitVaultFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_204(address) = HIGH_LEVEL_CALL, dest:mPlace_1(MarketPlace), function:cTokenAddress, arguments:['REF_187', 'REF_188']  
[i]Type for TMP_204

Name: TMP_204 Function: exitVaultFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
cTokenAddr_1(address) := TMP_204(address)
Finance type key: (-1, -1)
[i]Type for cTokenAddr

Name: cTokenAddr Function: exitVaultFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_205 = CONVERT cTokenAddr_1 to CErc20
[i]Type for TMP_205

Name: TMP_205 Function: exitVaultFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
TMP_206(uint256) = HIGH_LEVEL_CALL, dest:TMP_205(CErc20), function:redeemUnderlying, arguments:['a_1']  
[i]Type for TMP_206

Name: TMP_206 Function: exitVaultFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_207(bool) = TMP_206 == 0
[i]Type for TMP_207

Name: TMP_207 Function: exitVaultFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_208(None) = SOLIDITY_CALL require(bool,string)(TMP_207,compound redemption error)
[i]Type for TMP_208

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_190(address) -> o_1 (-> []).underlying
[i]Type for REF_190

Name: REF_190 Function: exitVaultFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_209 = CONVERT REF_190 to Erc20
[i]Type for TMP_209

Name: TMP_209 Function: exitVaultFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
uToken_1(Erc20) := TMP_209(Erc20)
Finance type key: (-1, -1)
[i]Type for uToken

Name: uToken Function: exitVaultFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_192(address) -> o_1 (-> []).maker
[i]Type for REF_192

Name: REF_192 Function: exitVaultFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_210(uint256) = a_1 (c)- premiumFilled_1
[i]Type for TMP_210

Name: TMP_210 Function: exitVaultFillingZcTokenExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
TMP_211(bool) = HIGH_LEVEL_CALL, dest:uToken_1(Erc20), function:transfer, arguments:['REF_192', 'TMP_210']  
[i]Type for TMP_211

Name: TMP_211 Function: exitVaultFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_212(uint256) = premiumFilled_1 (c)- fee_1
[i]Type for TMP_212

Name: TMP_212 Function: exitVaultFillingZcTokenExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_213(bool) = HIGH_LEVEL_CALL, dest:uToken_1(Erc20), function:transfer, arguments:['msg.sender', 'TMP_212']  
[i]Type for TMP_213

Name: TMP_213 Function: exitVaultFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_195(address) -> o_1 (-> []).underlying
[i]Type for REF_195

Name: REF_195 Function: exitVaultFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_196(uint256) -> o_1 (-> []).maturity
[i]Type for REF_196

Name: REF_196 Function: exitVaultFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_197(address) -> o_1 (-> []).maker
[i]Type for REF_197

Name: REF_197 Function: exitVaultFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_214(bool) = HIGH_LEVEL_CALL, dest:mPlace_1(MarketPlace), function:custodialExit, arguments:['REF_195', 'REF_196', 'REF_197', 'msg.sender', 'a_1']  
[i]Type for TMP_214

Name: TMP_214 Function: exitVaultFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_215(None) = SOLIDITY_CALL require(bool,string)(TMP_214,custodial exit failed)
[i]Type for TMP_215

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_198(bytes32) -> o_1 (-> []).key
[i]Type for REF_198

Name: REF_198 Function: exitVaultFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_199(address) -> o_1 (-> []).maker
[i]Type for REF_199

Name: REF_199 Function: exitVaultFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_200(bool) -> o_1 (-> []).vault
[i]Type for REF_200

Name: REF_200 Function: exitVaultFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_201(bool) -> o_1 (-> []).exit
[i]Type for REF_201

Name: REF_201 Function: exitVaultFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
o_1 (-> [])(Hash.Order) := ϕ(['REF_137'])
[i]Type for o

Name: o Function: exitVaultFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: principal, premium, underlying, maturity, maker, key, vault, exit
Finance Type: undef
a_1(uint256) := ϕ(['REF_138'])
[i]Type for a

Name: a Function: exitVaultFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
c_1 (-> [])(Sig.Components) := ϕ(['REF_139'])
[i]Type for c

Name: c Function: exitVaultFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
filled_19(mapping(bytes32 => uint256)) := ϕ(['filled_12', 'filled_3', 'filled_6', 'filled_24', 'filled_15', 'filled_9', 'filled_0', 'filled_21', 'filled_18'])
[i]Type for filled

Name: filled Function: exitVaultFillingZcTokenExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
marketPlace_25(address) := ϕ(['marketPlace_28', 'marketPlace_16', 'marketPlace_30', 'marketPlace_0', 'marketPlace_9', 'marketPlace_13', 'marketPlace_5', 'marketPlace_21', 'marketPlace_24', 'marketPlace_1', 'marketPlace_26'])
[i]Type for marketPlace

Name: marketPlace Function: exitVaultFillingZcTokenExit
Num: -1
Den: -1
Address: 2
Norm: u
LF: marketPlace
Value: u
Fields: 
Finance Type: undef
fenominator_14(uint16[]) := ϕ(['fenominator_13', 'fenominator_0', 'fenominator_11', 'fenominator_7', 'fenominator_1', 'fenominator_15', 'fenominator_17', 'fenominator_5', 'fenominator_9', 'fenominator_18', 'fenominator_3'])
[i]Type for fenominator

Name: fenominator Function: exitVaultFillingZcTokenExit
Num: -1
Den: -1
Address: 1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
TMP_192(bytes32) = INTERNAL_CALL, Swivel.validOrderHash(Hash.Order,Sig.Components)(o_1 (-> []),c_1 (-> []))
o_1 (-> [])(Hash.Order) := ϕ(['o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])'])
[i]Type for o

Name: o Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: expiry, premium, principal, underlying, maker, maturity, key, vault, exit
Finance Type: undef
c_1 (-> [])(Sig.Components) := ϕ(['c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])'])
[i]Type for c

Name: c Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
cancelled_2(mapping(bytes32 => bool)) := ϕ(['cancelled_2', 'cancelled_0', 'cancelled_1'])
[i]Type for cancelled

Name: cancelled Function: validOrderHash
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
domain_2(bytes32) := ϕ(['domain_0', 'domain_1'])
[i]Type for domain

Name: domain Function: validOrderHash
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_300(bytes32) = LIBRARY_CALL, dest:Hash, function:Hash.order(Hash.Order), arguments:['o_1 (-> [])'] 
[i]Type for TMP_300

Name: TMP_300 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
hash_1(bytes32) := TMP_300(bytes32)
Finance type key: (-1, -1)
[i]Type for hash

Name: hash Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_252(bool) -> cancelled_2[hash_1]
[i]Type for REF_252

Name: cancelled Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_301 = ! REF_252 
[i]Type for TMP_301

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_302(None) = SOLIDITY_CALL require(bool,string)(TMP_301,order cancelled)
[i]Type for TMP_302

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_253(uint256) -> o_1 (-> []).expiry
[i]Type for REF_253

Name: REF_253 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_303(bool) = REF_253 >= block.timestamp
[i]Type for TMP_303

Name: TMP_303 Function: validOrderHash
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_304(None) = SOLIDITY_CALL require(bool,string)(TMP_303,order expired)
[i]Type for TMP_304

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_254(address) -> o_1 (-> []).maker
[i]Type for REF_254

Name: REF_254 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_305(bytes32) = LIBRARY_CALL, dest:Hash, function:Hash.message(bytes32,bytes32), arguments:['domain_2', 'hash_1'] 
[i]Type for TMP_305

Name: TMP_305 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_306(address) = LIBRARY_CALL, dest:Sig, function:Sig.recover(bytes32,Sig.Components), arguments:['TMP_305', 'c_1 (-> [])'] 
[i]Type for TMP_306

Name: TMP_306 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_307(bool) = REF_254 == TMP_306
[i]Type for TMP_307

Name: TMP_307 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_308(None) = SOLIDITY_CALL require(bool,string)(TMP_307,invalid signature)
[i]Type for TMP_308

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
RETURN hash_1
o_1 (-> [])(Hash.Order) := ϕ(['o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])'])
[i]Type for o

Name: o Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: expiry, premium, principal, underlying, maker, maturity, key, vault, exit
Finance Type: undef
c_1 (-> [])(Sig.Components) := ϕ(['c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])'])
[i]Type for c

Name: c Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
cancelled_2(mapping(bytes32 => bool)) := ϕ(['cancelled_2', 'cancelled_0', 'cancelled_1'])
[i]Type for cancelled

Name: cancelled Function: validOrderHash
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
domain_2(bytes32) := ϕ(['domain_0', 'domain_1'])
[i]Type for domain

Name: domain Function: validOrderHash
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_300(bytes32) = LIBRARY_CALL, dest:Hash, function:Hash.order(Hash.Order), arguments:['o_1 (-> [])'] 
[i]Type for TMP_300

Name: TMP_300 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
hash_1(bytes32) := TMP_300(bytes32)
Finance type key: (-1, -1)
[i]Type for hash

Name: hash Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_252(bool) -> cancelled_2[hash_1]
[i]Type for REF_252

Name: cancelled Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_301 = ! REF_252 
[i]Type for TMP_301

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_302(None) = SOLIDITY_CALL require(bool,string)(TMP_301,order cancelled)
[i]Type for TMP_302

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_253(uint256) -> o_1 (-> []).expiry
[i]Type for REF_253

Name: REF_253 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_303(bool) = REF_253 >= block.timestamp
[i]Type for TMP_303

Name: TMP_303 Function: validOrderHash
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_304(None) = SOLIDITY_CALL require(bool,string)(TMP_303,order expired)
[i]Type for TMP_304

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_254(address) -> o_1 (-> []).maker
[i]Type for REF_254

Name: REF_254 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_305(bytes32) = LIBRARY_CALL, dest:Hash, function:Hash.message(bytes32,bytes32), arguments:['domain_2', 'hash_1'] 
[i]Type for TMP_305

Name: TMP_305 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_306(address) = LIBRARY_CALL, dest:Sig, function:Sig.recover(bytes32,Sig.Components), arguments:['TMP_305', 'c_1 (-> [])'] 
[i]Type for TMP_306

Name: TMP_306 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_307(bool) = REF_254 == TMP_306
[i]Type for TMP_307

Name: TMP_307 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_308(None) = SOLIDITY_CALL require(bool,string)(TMP_307,invalid signature)
[i]Type for TMP_308

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
RETURN hash_1
[i]Type for TMP_192

Name: TMP_192 Function: exitVaultFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
hash_1(bytes32) := TMP_192(bytes32)
Finance type key: (-1, -1)
[i]Type for hash

Name: hash Function: exitVaultFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_180(uint256) -> o_1 (-> []).principal
[i]Type for REF_180

Name: REF_180 Function: exitVaultFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_181(uint256) -> filled_20[hash_1]
[i]Type for REF_181

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_193(uint256) = REF_180 (c)- REF_181
[i]Type for TMP_193

Name: TMP_193 Function: exitVaultFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_194(bool) = a_1 <= TMP_193
[i]Type for TMP_194

Name: TMP_194 Function: exitVaultFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_195(None) = SOLIDITY_CALL require(bool,string)(TMP_194,taker amount > available volume)
[i]Type for TMP_195

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_182(uint256) -> filled_20[hash_1]
[i]Type for REF_182

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
filled_21(mapping(bytes32 => uint256)) := ϕ(['filled_20'])
[i]Type for filled

Name: filled Function: exitVaultFillingZcTokenExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_182(-> filled_21) = REF_182 (c)+ a_1
[i]Type for REF_182

Name: REF_182 Function: exitVaultFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_196(uint256) = a_1 (c)* 1000000000000000000
[i]Type for TMP_196

Name: TMP_196 Function: exitVaultFillingZcTokenExit
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
REF_183(uint256) -> o_1 (-> []).principal
[i]Type for REF_183

Name: REF_183 Function: exitVaultFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_197(uint256) = TMP_196 (c)/ REF_183
[i]Type for TMP_197

Name: TMP_197 Function: exitVaultFillingZcTokenExit
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
REF_184(uint256) -> o_1 (-> []).premium
[i]Type for REF_184

Name: REF_184 Function: exitVaultFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_198(uint256) = TMP_197 (c)* REF_184
[i]Type for TMP_198

Name: TMP_198 Function: exitVaultFillingZcTokenExit
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
TMP_199(uint256) = TMP_198 (c)/ 1000000000000000000
[i]Type for TMP_199

Name: TMP_199 Function: exitVaultFillingZcTokenExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
premiumFilled_1(uint256) := TMP_199(uint256)
Finance type key: (-1, -1)
[i]Type for premiumFilled

Name: premiumFilled Function: exitVaultFillingZcTokenExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
TMP_200(uint256) = premiumFilled_1 (c)* 1000000000000000000
[i]Type for TMP_200

Name: TMP_200 Function: exitVaultFillingZcTokenExit
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
REF_185(uint16) -> fenominator_15[3]
[i]Type for REF_185

Name: None Function: None
Num: -1
Den: -1
Address: 1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
TMP_201(uint256) = TMP_200 (c)/ REF_185
[i]Type for TMP_201

Name: TMP_201 Function: exitVaultFillingZcTokenExit
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
TMP_202(uint256) = TMP_201 (c)/ 1000000000000000000
[i]Type for TMP_202

Name: TMP_202 Function: exitVaultFillingZcTokenExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
fee_1(uint256) := TMP_202(uint256)
Finance type key: (-1, -1)
[i]Type for fee

Name: fee Function: exitVaultFillingZcTokenExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
TMP_203 = CONVERT marketPlace_26 to MarketPlace
[i]Type for TMP_203

Name: TMP_203 Function: exitVaultFillingZcTokenExit
Num: -1
Den: -1
Address: 2
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
mPlace_1(MarketPlace) := TMP_203(MarketPlace)
Finance type key: (-1, -1)
[i]Type for mPlace

Name: mPlace Function: exitVaultFillingZcTokenExit
Num: -1
Den: -1
Address: 2
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
REF_187(address) -> o_1 (-> []).underlying
[i]Type for REF_187

Name: REF_187 Function: exitVaultFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_188(uint256) -> o_1 (-> []).maturity
[i]Type for REF_188

Name: REF_188 Function: exitVaultFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_204(address) = HIGH_LEVEL_CALL, dest:mPlace_1(MarketPlace), function:cTokenAddress, arguments:['REF_187', 'REF_188']  
[i]Type for TMP_204

Name: TMP_204 Function: exitVaultFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
cTokenAddr_1(address) := TMP_204(address)
Finance type key: (-1, -1)
[i]Type for cTokenAddr

Name: cTokenAddr Function: exitVaultFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_205 = CONVERT cTokenAddr_1 to CErc20
[i]Type for TMP_205

Name: TMP_205 Function: exitVaultFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
TMP_206(uint256) = HIGH_LEVEL_CALL, dest:TMP_205(CErc20), function:redeemUnderlying, arguments:['a_1']  
[i]Type for TMP_206

Name: TMP_206 Function: exitVaultFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_207(bool) = TMP_206 == 0
[i]Type for TMP_207

Name: TMP_207 Function: exitVaultFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_208(None) = SOLIDITY_CALL require(bool,string)(TMP_207,compound redemption error)
[i]Type for TMP_208

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_190(address) -> o_1 (-> []).underlying
[i]Type for REF_190

Name: REF_190 Function: exitVaultFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_209 = CONVERT REF_190 to Erc20
[i]Type for TMP_209

Name: TMP_209 Function: exitVaultFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
uToken_1(Erc20) := TMP_209(Erc20)
Finance type key: (-1, -1)
[i]Type for uToken

Name: uToken Function: exitVaultFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_192(address) -> o_1 (-> []).maker
[i]Type for REF_192

Name: REF_192 Function: exitVaultFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_210(uint256) = a_1 (c)- premiumFilled_1
[i]Type for TMP_210

Name: TMP_210 Function: exitVaultFillingZcTokenExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
TMP_211(bool) = HIGH_LEVEL_CALL, dest:uToken_1(Erc20), function:transfer, arguments:['REF_192', 'TMP_210']  
[i]Type for TMP_211

Name: TMP_211 Function: exitVaultFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_212(uint256) = premiumFilled_1 (c)- fee_1
[i]Type for TMP_212

Name: TMP_212 Function: exitVaultFillingZcTokenExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_213(bool) = HIGH_LEVEL_CALL, dest:uToken_1(Erc20), function:transfer, arguments:['msg.sender', 'TMP_212']  
[i]Type for TMP_213

Name: TMP_213 Function: exitVaultFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_195(address) -> o_1 (-> []).underlying
[i]Type for REF_195

Name: REF_195 Function: exitVaultFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_196(uint256) -> o_1 (-> []).maturity
[i]Type for REF_196

Name: REF_196 Function: exitVaultFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_197(address) -> o_1 (-> []).maker
[i]Type for REF_197

Name: REF_197 Function: exitVaultFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_214(bool) = HIGH_LEVEL_CALL, dest:mPlace_1(MarketPlace), function:custodialExit, arguments:['REF_195', 'REF_196', 'REF_197', 'msg.sender', 'a_1']  
[i]Type for TMP_214

Name: TMP_214 Function: exitVaultFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_215(None) = SOLIDITY_CALL require(bool,string)(TMP_214,custodial exit failed)
[i]Type for TMP_215

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_198(bytes32) -> o_1 (-> []).key
[i]Type for REF_198

Name: REF_198 Function: exitVaultFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_199(address) -> o_1 (-> []).maker
[i]Type for REF_199

Name: REF_199 Function: exitVaultFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_200(bool) -> o_1 (-> []).vault
[i]Type for REF_200

Name: REF_200 Function: exitVaultFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_201(bool) -> o_1 (-> []).exit
[i]Type for REF_201

Name: REF_201 Function: exitVaultFillingZcTokenExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_140(Hash.Order) -> o_1 (-> [])[i_2]
[i]Type for REF_140

Name: o_1 (-> []) Function: exit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_141(uint256) -> a_1 (-> [])[i_2]
[i]Type for REF_141

Name: a_1 (-> []) Function: exit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_142(Sig.Components) -> c_1 (-> [])[i_2]
[i]Type for REF_142

Name: c_1 (-> []) Function: exit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
INTERNAL_CALL, Swivel.exitZcTokenFillingVaultExit(Hash.Order,uint256,Sig.Components)(REF_140,REF_141,REF_142)
o_1 (-> [])(Hash.Order) := ϕ(['REF_140'])
[i]Type for o

Name: o Function: exitZcTokenFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: premium, principal, underlying, maturity, maker, key, vault, exit
Finance Type: undef
a_1(uint256) := ϕ(['REF_141'])
[i]Type for a

Name: a Function: exitZcTokenFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
c_1 (-> [])(Sig.Components) := ϕ(['REF_142'])
[i]Type for c

Name: c Function: exitZcTokenFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
filled_22(mapping(bytes32 => uint256)) := ϕ(['filled_12', 'filled_3', 'filled_6', 'filled_24', 'filled_15', 'filled_9', 'filled_0', 'filled_21', 'filled_18'])
[i]Type for filled

Name: filled Function: exitZcTokenFillingVaultExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
marketPlace_27(address) := ϕ(['marketPlace_28', 'marketPlace_16', 'marketPlace_30', 'marketPlace_0', 'marketPlace_9', 'marketPlace_13', 'marketPlace_5', 'marketPlace_21', 'marketPlace_24', 'marketPlace_1', 'marketPlace_26'])
[i]Type for marketPlace

Name: marketPlace Function: exitZcTokenFillingVaultExit
Num: -1
Den: -1
Address: 2
Norm: u
LF: marketPlace
Value: u
Fields: 
Finance Type: undef
fenominator_16(uint16[]) := ϕ(['fenominator_13', 'fenominator_0', 'fenominator_11', 'fenominator_7', 'fenominator_1', 'fenominator_15', 'fenominator_17', 'fenominator_5', 'fenominator_9', 'fenominator_18', 'fenominator_3'])
[i]Type for fenominator

Name: fenominator Function: exitZcTokenFillingVaultExit
Num: -1
Den: -1
Address: 1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
TMP_217(bytes32) = INTERNAL_CALL, Swivel.validOrderHash(Hash.Order,Sig.Components)(o_1 (-> []),c_1 (-> []))
o_1 (-> [])(Hash.Order) := ϕ(['o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])'])
[i]Type for o

Name: o Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: expiry, premium, principal, underlying, maker, maturity, key, vault, exit
Finance Type: undef
c_1 (-> [])(Sig.Components) := ϕ(['c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])'])
[i]Type for c

Name: c Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
cancelled_2(mapping(bytes32 => bool)) := ϕ(['cancelled_2', 'cancelled_0', 'cancelled_1'])
[i]Type for cancelled

Name: cancelled Function: validOrderHash
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
domain_2(bytes32) := ϕ(['domain_0', 'domain_1'])
[i]Type for domain

Name: domain Function: validOrderHash
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_300(bytes32) = LIBRARY_CALL, dest:Hash, function:Hash.order(Hash.Order), arguments:['o_1 (-> [])'] 
[i]Type for TMP_300

Name: TMP_300 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
hash_1(bytes32) := TMP_300(bytes32)
Finance type key: (-1, -1)
[i]Type for hash

Name: hash Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_252(bool) -> cancelled_2[hash_1]
[i]Type for REF_252

Name: cancelled Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_301 = ! REF_252 
[i]Type for TMP_301

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_302(None) = SOLIDITY_CALL require(bool,string)(TMP_301,order cancelled)
[i]Type for TMP_302

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_253(uint256) -> o_1 (-> []).expiry
[i]Type for REF_253

Name: REF_253 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_303(bool) = REF_253 >= block.timestamp
[i]Type for TMP_303

Name: TMP_303 Function: validOrderHash
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_304(None) = SOLIDITY_CALL require(bool,string)(TMP_303,order expired)
[i]Type for TMP_304

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_254(address) -> o_1 (-> []).maker
[i]Type for REF_254

Name: REF_254 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_305(bytes32) = LIBRARY_CALL, dest:Hash, function:Hash.message(bytes32,bytes32), arguments:['domain_2', 'hash_1'] 
[i]Type for TMP_305

Name: TMP_305 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_306(address) = LIBRARY_CALL, dest:Sig, function:Sig.recover(bytes32,Sig.Components), arguments:['TMP_305', 'c_1 (-> [])'] 
[i]Type for TMP_306

Name: TMP_306 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_307(bool) = REF_254 == TMP_306
[i]Type for TMP_307

Name: TMP_307 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_308(None) = SOLIDITY_CALL require(bool,string)(TMP_307,invalid signature)
[i]Type for TMP_308

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
RETURN hash_1
o_1 (-> [])(Hash.Order) := ϕ(['o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])'])
[i]Type for o

Name: o Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: expiry, premium, principal, underlying, maker, maturity, key, vault, exit
Finance Type: undef
c_1 (-> [])(Sig.Components) := ϕ(['c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])'])
[i]Type for c

Name: c Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
cancelled_2(mapping(bytes32 => bool)) := ϕ(['cancelled_2', 'cancelled_0', 'cancelled_1'])
[i]Type for cancelled

Name: cancelled Function: validOrderHash
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
domain_2(bytes32) := ϕ(['domain_0', 'domain_1'])
[i]Type for domain

Name: domain Function: validOrderHash
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_300(bytes32) = LIBRARY_CALL, dest:Hash, function:Hash.order(Hash.Order), arguments:['o_1 (-> [])'] 
[i]Type for TMP_300

Name: TMP_300 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
hash_1(bytes32) := TMP_300(bytes32)
Finance type key: (-1, -1)
[i]Type for hash

Name: hash Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_252(bool) -> cancelled_2[hash_1]
[i]Type for REF_252

Name: cancelled Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_301 = ! REF_252 
[i]Type for TMP_301

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_302(None) = SOLIDITY_CALL require(bool,string)(TMP_301,order cancelled)
[i]Type for TMP_302

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_253(uint256) -> o_1 (-> []).expiry
[i]Type for REF_253

Name: REF_253 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_303(bool) = REF_253 >= block.timestamp
[i]Type for TMP_303

Name: TMP_303 Function: validOrderHash
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_304(None) = SOLIDITY_CALL require(bool,string)(TMP_303,order expired)
[i]Type for TMP_304

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_254(address) -> o_1 (-> []).maker
[i]Type for REF_254

Name: REF_254 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_305(bytes32) = LIBRARY_CALL, dest:Hash, function:Hash.message(bytes32,bytes32), arguments:['domain_2', 'hash_1'] 
[i]Type for TMP_305

Name: TMP_305 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_306(address) = LIBRARY_CALL, dest:Sig, function:Sig.recover(bytes32,Sig.Components), arguments:['TMP_305', 'c_1 (-> [])'] 
[i]Type for TMP_306

Name: TMP_306 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_307(bool) = REF_254 == TMP_306
[i]Type for TMP_307

Name: TMP_307 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_308(None) = SOLIDITY_CALL require(bool,string)(TMP_307,invalid signature)
[i]Type for TMP_308

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
RETURN hash_1
[i]Type for TMP_217

Name: TMP_217 Function: exitZcTokenFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
hash_1(bytes32) := TMP_217(bytes32)
Finance type key: (-1, -1)
[i]Type for hash

Name: hash Function: exitZcTokenFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_202(uint256) -> o_1 (-> []).premium
[i]Type for REF_202

Name: REF_202 Function: exitZcTokenFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_203(uint256) -> filled_23[hash_1]
[i]Type for REF_203

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_218(uint256) = REF_202 (c)- REF_203
[i]Type for TMP_218

Name: TMP_218 Function: exitZcTokenFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_219(bool) = a_1 <= TMP_218
[i]Type for TMP_219

Name: TMP_219 Function: exitZcTokenFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_220(None) = SOLIDITY_CALL require(bool,string)(TMP_219,taker amount > available volume)
[i]Type for TMP_220

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_204(uint256) -> filled_23[hash_1]
[i]Type for REF_204

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
filled_24(mapping(bytes32 => uint256)) := ϕ(['filled_23'])
[i]Type for filled

Name: filled Function: exitZcTokenFillingVaultExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_204(-> filled_24) = REF_204 (c)+ a_1
[i]Type for REF_204

Name: REF_204 Function: exitZcTokenFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_221(uint256) = a_1 (c)* 1000000000000000000
[i]Type for TMP_221

Name: TMP_221 Function: exitZcTokenFillingVaultExit
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
REF_205(uint256) -> o_1 (-> []).premium
[i]Type for REF_205

Name: REF_205 Function: exitZcTokenFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_222(uint256) = TMP_221 (c)/ REF_205
[i]Type for TMP_222

Name: TMP_222 Function: exitZcTokenFillingVaultExit
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
REF_206(uint256) -> o_1 (-> []).principal
[i]Type for REF_206

Name: REF_206 Function: exitZcTokenFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_223(uint256) = TMP_222 (c)* REF_206
[i]Type for TMP_223

Name: TMP_223 Function: exitZcTokenFillingVaultExit
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
TMP_224(uint256) = TMP_223 (c)/ 1000000000000000000
[i]Type for TMP_224

Name: TMP_224 Function: exitZcTokenFillingVaultExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
principalFilled_1(uint256) := TMP_224(uint256)
Finance type key: (-1, -1)
[i]Type for principalFilled

Name: principalFilled Function: exitZcTokenFillingVaultExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
TMP_225(uint256) = principalFilled_1 (c)* 1000000000000000000
[i]Type for TMP_225

Name: TMP_225 Function: exitZcTokenFillingVaultExit
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
REF_207(uint16) -> fenominator_17[1]
[i]Type for REF_207

Name: None Function: None
Num: -1
Den: -1
Address: 1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
TMP_226(uint256) = TMP_225 (c)/ REF_207
[i]Type for TMP_226

Name: TMP_226 Function: exitZcTokenFillingVaultExit
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
TMP_227(uint256) = TMP_226 (c)/ 1000000000000000000
[i]Type for TMP_227

Name: TMP_227 Function: exitZcTokenFillingVaultExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
fee_1(uint256) := TMP_227(uint256)
Finance type key: (-1, -1)
[i]Type for fee

Name: fee Function: exitZcTokenFillingVaultExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
TMP_228 = CONVERT marketPlace_28 to MarketPlace
[i]Type for TMP_228

Name: TMP_228 Function: exitZcTokenFillingVaultExit
Num: -1
Den: -1
Address: 2
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
mPlace_1(MarketPlace) := TMP_228(MarketPlace)
Finance type key: (-1, -1)
[i]Type for mPlace

Name: mPlace Function: exitZcTokenFillingVaultExit
Num: -1
Den: -1
Address: 2
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
REF_209(address) -> o_1 (-> []).underlying
[i]Type for REF_209

Name: REF_209 Function: exitZcTokenFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_210(uint256) -> o_1 (-> []).maturity
[i]Type for REF_210

Name: REF_210 Function: exitZcTokenFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_229(address) = HIGH_LEVEL_CALL, dest:mPlace_1(MarketPlace), function:cTokenAddress, arguments:['REF_209', 'REF_210']  
[i]Type for TMP_229

Name: TMP_229 Function: exitZcTokenFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
cTokenAddr_1(address) := TMP_229(address)
Finance type key: (-1, -1)
[i]Type for cTokenAddr

Name: cTokenAddr Function: exitZcTokenFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_230 = CONVERT cTokenAddr_1 to CErc20
[i]Type for TMP_230

Name: TMP_230 Function: exitZcTokenFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
TMP_231(uint256) = HIGH_LEVEL_CALL, dest:TMP_230(CErc20), function:redeemUnderlying, arguments:['principalFilled_1']  
[i]Type for TMP_231

Name: TMP_231 Function: exitZcTokenFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_232(bool) = TMP_231 == 0
[i]Type for TMP_232

Name: TMP_232 Function: exitZcTokenFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_233(None) = SOLIDITY_CALL require(bool,string)(TMP_232,compound redemption error)
[i]Type for TMP_233

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_212(address) -> o_1 (-> []).underlying
[i]Type for REF_212

Name: REF_212 Function: exitZcTokenFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_234 = CONVERT REF_212 to Erc20
[i]Type for TMP_234

Name: TMP_234 Function: exitZcTokenFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
uToken_1(Erc20) := TMP_234(Erc20)
Finance type key: (-1, -1)
[i]Type for uToken

Name: uToken Function: exitZcTokenFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_235(uint256) = principalFilled_1 (c)- a_1
[i]Type for TMP_235

Name: TMP_235 Function: exitZcTokenFillingVaultExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
TMP_236(uint256) = TMP_235 (c)- fee_1
[i]Type for TMP_236

Name: TMP_236 Function: exitZcTokenFillingVaultExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_237(bool) = HIGH_LEVEL_CALL, dest:uToken_1(Erc20), function:transfer, arguments:['msg.sender', 'TMP_236']  
[i]Type for TMP_237

Name: TMP_237 Function: exitZcTokenFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_215(address) -> o_1 (-> []).maker
[i]Type for REF_215

Name: REF_215 Function: exitZcTokenFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_238(bool) = HIGH_LEVEL_CALL, dest:uToken_1(Erc20), function:transfer, arguments:['REF_215', 'a_1']  
[i]Type for TMP_238

Name: TMP_238 Function: exitZcTokenFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_217(address) -> o_1 (-> []).underlying
[i]Type for REF_217

Name: REF_217 Function: exitZcTokenFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_218(uint256) -> o_1 (-> []).maturity
[i]Type for REF_218

Name: REF_218 Function: exitZcTokenFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_219(address) -> o_1 (-> []).maker
[i]Type for REF_219

Name: REF_219 Function: exitZcTokenFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_239(bool) = HIGH_LEVEL_CALL, dest:mPlace_1(MarketPlace), function:custodialExit, arguments:['REF_217', 'REF_218', 'msg.sender', 'REF_219', 'principalFilled_1']  
[i]Type for TMP_239

Name: TMP_239 Function: exitZcTokenFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_240(None) = SOLIDITY_CALL require(bool,string)(TMP_239,custodial exit failed)
[i]Type for TMP_240

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_220(bytes32) -> o_1 (-> []).key
[i]Type for REF_220

Name: REF_220 Function: exitZcTokenFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_221(address) -> o_1 (-> []).maker
[i]Type for REF_221

Name: REF_221 Function: exitZcTokenFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_222(bool) -> o_1 (-> []).vault
[i]Type for REF_222

Name: REF_222 Function: exitZcTokenFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_223(bool) -> o_1 (-> []).exit
[i]Type for REF_223

Name: REF_223 Function: exitZcTokenFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
o_1 (-> [])(Hash.Order) := ϕ(['REF_140'])
[i]Type for o

Name: o Function: exitZcTokenFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: premium, principal, underlying, maturity, maker, key, vault, exit
Finance Type: undef
a_1(uint256) := ϕ(['REF_141'])
[i]Type for a

Name: a Function: exitZcTokenFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
c_1 (-> [])(Sig.Components) := ϕ(['REF_142'])
[i]Type for c

Name: c Function: exitZcTokenFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
filled_22(mapping(bytes32 => uint256)) := ϕ(['filled_12', 'filled_3', 'filled_6', 'filled_24', 'filled_15', 'filled_9', 'filled_0', 'filled_21', 'filled_18'])
[i]Type for filled

Name: filled Function: exitZcTokenFillingVaultExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
marketPlace_27(address) := ϕ(['marketPlace_28', 'marketPlace_16', 'marketPlace_30', 'marketPlace_0', 'marketPlace_9', 'marketPlace_13', 'marketPlace_5', 'marketPlace_21', 'marketPlace_24', 'marketPlace_1', 'marketPlace_26'])
[i]Type for marketPlace

Name: marketPlace Function: exitZcTokenFillingVaultExit
Num: -1
Den: -1
Address: 2
Norm: u
LF: marketPlace
Value: u
Fields: 
Finance Type: undef
fenominator_16(uint16[]) := ϕ(['fenominator_13', 'fenominator_0', 'fenominator_11', 'fenominator_7', 'fenominator_1', 'fenominator_15', 'fenominator_17', 'fenominator_5', 'fenominator_9', 'fenominator_18', 'fenominator_3'])
[i]Type for fenominator

Name: fenominator Function: exitZcTokenFillingVaultExit
Num: -1
Den: -1
Address: 1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
TMP_217(bytes32) = INTERNAL_CALL, Swivel.validOrderHash(Hash.Order,Sig.Components)(o_1 (-> []),c_1 (-> []))
o_1 (-> [])(Hash.Order) := ϕ(['o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])'])
[i]Type for o

Name: o Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: expiry, premium, principal, underlying, maker, maturity, key, vault, exit
Finance Type: undef
c_1 (-> [])(Sig.Components) := ϕ(['c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])'])
[i]Type for c

Name: c Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
cancelled_2(mapping(bytes32 => bool)) := ϕ(['cancelled_2', 'cancelled_0', 'cancelled_1'])
[i]Type for cancelled

Name: cancelled Function: validOrderHash
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
domain_2(bytes32) := ϕ(['domain_0', 'domain_1'])
[i]Type for domain

Name: domain Function: validOrderHash
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_300(bytes32) = LIBRARY_CALL, dest:Hash, function:Hash.order(Hash.Order), arguments:['o_1 (-> [])'] 
[i]Type for TMP_300

Name: TMP_300 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
hash_1(bytes32) := TMP_300(bytes32)
Finance type key: (-1, -1)
[i]Type for hash

Name: hash Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_252(bool) -> cancelled_2[hash_1]
[i]Type for REF_252

Name: cancelled Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_301 = ! REF_252 
[i]Type for TMP_301

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_302(None) = SOLIDITY_CALL require(bool,string)(TMP_301,order cancelled)
[i]Type for TMP_302

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_253(uint256) -> o_1 (-> []).expiry
[i]Type for REF_253

Name: REF_253 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_303(bool) = REF_253 >= block.timestamp
[i]Type for TMP_303

Name: TMP_303 Function: validOrderHash
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_304(None) = SOLIDITY_CALL require(bool,string)(TMP_303,order expired)
[i]Type for TMP_304

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_254(address) -> o_1 (-> []).maker
[i]Type for REF_254

Name: REF_254 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_305(bytes32) = LIBRARY_CALL, dest:Hash, function:Hash.message(bytes32,bytes32), arguments:['domain_2', 'hash_1'] 
[i]Type for TMP_305

Name: TMP_305 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_306(address) = LIBRARY_CALL, dest:Sig, function:Sig.recover(bytes32,Sig.Components), arguments:['TMP_305', 'c_1 (-> [])'] 
[i]Type for TMP_306

Name: TMP_306 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_307(bool) = REF_254 == TMP_306
[i]Type for TMP_307

Name: TMP_307 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_308(None) = SOLIDITY_CALL require(bool,string)(TMP_307,invalid signature)
[i]Type for TMP_308

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
RETURN hash_1
o_1 (-> [])(Hash.Order) := ϕ(['o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])', 'o_1 (-> [])'])
[i]Type for o

Name: o Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: expiry, premium, principal, underlying, maker, maturity, key, vault, exit
Finance Type: undef
c_1 (-> [])(Sig.Components) := ϕ(['c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])', 'c_1 (-> [])'])
[i]Type for c

Name: c Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
cancelled_2(mapping(bytes32 => bool)) := ϕ(['cancelled_2', 'cancelled_0', 'cancelled_1'])
[i]Type for cancelled

Name: cancelled Function: validOrderHash
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
domain_2(bytes32) := ϕ(['domain_0', 'domain_1'])
[i]Type for domain

Name: domain Function: validOrderHash
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_300(bytes32) = LIBRARY_CALL, dest:Hash, function:Hash.order(Hash.Order), arguments:['o_1 (-> [])'] 
[i]Type for TMP_300

Name: TMP_300 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
hash_1(bytes32) := TMP_300(bytes32)
Finance type key: (-1, -1)
[i]Type for hash

Name: hash Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_252(bool) -> cancelled_2[hash_1]
[i]Type for REF_252

Name: cancelled Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_301 = ! REF_252 
[i]Type for TMP_301

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_302(None) = SOLIDITY_CALL require(bool,string)(TMP_301,order cancelled)
[i]Type for TMP_302

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_253(uint256) -> o_1 (-> []).expiry
[i]Type for REF_253

Name: REF_253 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_303(bool) = REF_253 >= block.timestamp
[i]Type for TMP_303

Name: TMP_303 Function: validOrderHash
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_304(None) = SOLIDITY_CALL require(bool,string)(TMP_303,order expired)
[i]Type for TMP_304

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_254(address) -> o_1 (-> []).maker
[i]Type for REF_254

Name: REF_254 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_305(bytes32) = LIBRARY_CALL, dest:Hash, function:Hash.message(bytes32,bytes32), arguments:['domain_2', 'hash_1'] 
[i]Type for TMP_305

Name: TMP_305 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_306(address) = LIBRARY_CALL, dest:Sig, function:Sig.recover(bytes32,Sig.Components), arguments:['TMP_305', 'c_1 (-> [])'] 
[i]Type for TMP_306

Name: TMP_306 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_307(bool) = REF_254 == TMP_306
[i]Type for TMP_307

Name: TMP_307 Function: validOrderHash
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_308(None) = SOLIDITY_CALL require(bool,string)(TMP_307,invalid signature)
[i]Type for TMP_308

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
RETURN hash_1
[i]Type for TMP_217

Name: TMP_217 Function: exitZcTokenFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
hash_1(bytes32) := TMP_217(bytes32)
Finance type key: (-1, -1)
[i]Type for hash

Name: hash Function: exitZcTokenFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_202(uint256) -> o_1 (-> []).premium
[i]Type for REF_202

Name: REF_202 Function: exitZcTokenFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_203(uint256) -> filled_23[hash_1]
[i]Type for REF_203

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_218(uint256) = REF_202 (c)- REF_203
[i]Type for TMP_218

Name: TMP_218 Function: exitZcTokenFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_219(bool) = a_1 <= TMP_218
[i]Type for TMP_219

Name: TMP_219 Function: exitZcTokenFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_220(None) = SOLIDITY_CALL require(bool,string)(TMP_219,taker amount > available volume)
[i]Type for TMP_220

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_204(uint256) -> filled_23[hash_1]
[i]Type for REF_204

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
filled_24(mapping(bytes32 => uint256)) := ϕ(['filled_23'])
[i]Type for filled

Name: filled Function: exitZcTokenFillingVaultExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_204(-> filled_24) = REF_204 (c)+ a_1
[i]Type for REF_204

Name: REF_204 Function: exitZcTokenFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_221(uint256) = a_1 (c)* 1000000000000000000
[i]Type for TMP_221

Name: TMP_221 Function: exitZcTokenFillingVaultExit
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
REF_205(uint256) -> o_1 (-> []).premium
[i]Type for REF_205

Name: REF_205 Function: exitZcTokenFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_222(uint256) = TMP_221 (c)/ REF_205
[i]Type for TMP_222

Name: TMP_222 Function: exitZcTokenFillingVaultExit
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
REF_206(uint256) -> o_1 (-> []).principal
[i]Type for REF_206

Name: REF_206 Function: exitZcTokenFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_223(uint256) = TMP_222 (c)* REF_206
[i]Type for TMP_223

Name: TMP_223 Function: exitZcTokenFillingVaultExit
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
TMP_224(uint256) = TMP_223 (c)/ 1000000000000000000
[i]Type for TMP_224

Name: TMP_224 Function: exitZcTokenFillingVaultExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
principalFilled_1(uint256) := TMP_224(uint256)
Finance type key: (-1, -1)
[i]Type for principalFilled

Name: principalFilled Function: exitZcTokenFillingVaultExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
TMP_225(uint256) = principalFilled_1 (c)* 1000000000000000000
[i]Type for TMP_225

Name: TMP_225 Function: exitZcTokenFillingVaultExit
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
REF_207(uint16) -> fenominator_17[1]
[i]Type for REF_207

Name: None Function: None
Num: -1
Den: -1
Address: 1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
TMP_226(uint256) = TMP_225 (c)/ REF_207
[i]Type for TMP_226

Name: TMP_226 Function: exitZcTokenFillingVaultExit
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
TMP_227(uint256) = TMP_226 (c)/ 1000000000000000000
[i]Type for TMP_227

Name: TMP_227 Function: exitZcTokenFillingVaultExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
fee_1(uint256) := TMP_227(uint256)
Finance type key: (-1, -1)
[i]Type for fee

Name: fee Function: exitZcTokenFillingVaultExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
TMP_228 = CONVERT marketPlace_28 to MarketPlace
[i]Type for TMP_228

Name: TMP_228 Function: exitZcTokenFillingVaultExit
Num: -1
Den: -1
Address: 2
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
mPlace_1(MarketPlace) := TMP_228(MarketPlace)
Finance type key: (-1, -1)
[i]Type for mPlace

Name: mPlace Function: exitZcTokenFillingVaultExit
Num: -1
Den: -1
Address: 2
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
REF_209(address) -> o_1 (-> []).underlying
[i]Type for REF_209

Name: REF_209 Function: exitZcTokenFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_210(uint256) -> o_1 (-> []).maturity
[i]Type for REF_210

Name: REF_210 Function: exitZcTokenFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_229(address) = HIGH_LEVEL_CALL, dest:mPlace_1(MarketPlace), function:cTokenAddress, arguments:['REF_209', 'REF_210']  
[i]Type for TMP_229

Name: TMP_229 Function: exitZcTokenFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
cTokenAddr_1(address) := TMP_229(address)
Finance type key: (-1, -1)
[i]Type for cTokenAddr

Name: cTokenAddr Function: exitZcTokenFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_230 = CONVERT cTokenAddr_1 to CErc20
[i]Type for TMP_230

Name: TMP_230 Function: exitZcTokenFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
TMP_231(uint256) = HIGH_LEVEL_CALL, dest:TMP_230(CErc20), function:redeemUnderlying, arguments:['principalFilled_1']  
[i]Type for TMP_231

Name: TMP_231 Function: exitZcTokenFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_232(bool) = TMP_231 == 0
[i]Type for TMP_232

Name: TMP_232 Function: exitZcTokenFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_233(None) = SOLIDITY_CALL require(bool,string)(TMP_232,compound redemption error)
[i]Type for TMP_233

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_212(address) -> o_1 (-> []).underlying
[i]Type for REF_212

Name: REF_212 Function: exitZcTokenFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_234 = CONVERT REF_212 to Erc20
[i]Type for TMP_234

Name: TMP_234 Function: exitZcTokenFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
uToken_1(Erc20) := TMP_234(Erc20)
Finance type key: (-1, -1)
[i]Type for uToken

Name: uToken Function: exitZcTokenFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_235(uint256) = principalFilled_1 (c)- a_1
[i]Type for TMP_235

Name: TMP_235 Function: exitZcTokenFillingVaultExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
TMP_236(uint256) = TMP_235 (c)- fee_1
[i]Type for TMP_236

Name: TMP_236 Function: exitZcTokenFillingVaultExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_237(bool) = HIGH_LEVEL_CALL, dest:uToken_1(Erc20), function:transfer, arguments:['msg.sender', 'TMP_236']  
[i]Type for TMP_237

Name: TMP_237 Function: exitZcTokenFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_215(address) -> o_1 (-> []).maker
[i]Type for REF_215

Name: REF_215 Function: exitZcTokenFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_238(bool) = HIGH_LEVEL_CALL, dest:uToken_1(Erc20), function:transfer, arguments:['REF_215', 'a_1']  
[i]Type for TMP_238

Name: TMP_238 Function: exitZcTokenFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_217(address) -> o_1 (-> []).underlying
[i]Type for REF_217

Name: REF_217 Function: exitZcTokenFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_218(uint256) -> o_1 (-> []).maturity
[i]Type for REF_218

Name: REF_218 Function: exitZcTokenFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_219(address) -> o_1 (-> []).maker
[i]Type for REF_219

Name: REF_219 Function: exitZcTokenFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_239(bool) = HIGH_LEVEL_CALL, dest:mPlace_1(MarketPlace), function:custodialExit, arguments:['REF_217', 'REF_218', 'msg.sender', 'REF_219', 'principalFilled_1']  
[i]Type for TMP_239

Name: TMP_239 Function: exitZcTokenFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_240(None) = SOLIDITY_CALL require(bool,string)(TMP_239,custodial exit failed)
[i]Type for TMP_240

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_220(bytes32) -> o_1 (-> []).key
[i]Type for REF_220

Name: REF_220 Function: exitZcTokenFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_221(address) -> o_1 (-> []).maker
[i]Type for REF_221

Name: REF_221 Function: exitZcTokenFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_222(bool) -> o_1 (-> []).vault
[i]Type for REF_222

Name: REF_222 Function: exitZcTokenFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_223(bool) -> o_1 (-> []).exit
[i]Type for REF_223

Name: REF_223 Function: exitZcTokenFillingVaultExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_154(uint256) := i_2(uint256)
Finance type key: (-1, -1)
[i]Type for TMP_154

Name: TMP_154 Function: exit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_3(uint256) = i_2 (c)+ 1
[i]Type for i

Name: i Function: exit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef



exitVaultFillingVaultInitiate
o_1 (-> [])(Hash.Order) := ϕ(['REF_132'])
[i]Type for o

Name: o Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: principal, premium, underlying, maturity, maker, key, vault, exit
Finance Type: undef
a_1(uint256) := ϕ(['REF_133'])
[i]Type for a

Name: a Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
c_1 (-> [])(Sig.Components) := ϕ(['REF_134'])
[i]Type for c

Name: c Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
filled_16(mapping(bytes32 => uint256)) := ϕ(['filled_12', 'filled_3', 'filled_6', 'filled_24', 'filled_15', 'filled_9', 'filled_0', 'filled_21', 'filled_18'])
[i]Type for filled

Name: filled Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Balance_1(mapping(address => uint256)) := ϕ(['Balance_0', 'Balance_5'])
[i]Type for Balance

Name: Balance Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: 1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
marketPlace_22(address) := ϕ(['marketPlace_28', 'marketPlace_16', 'marketPlace_30', 'marketPlace_0', 'marketPlace_9', 'marketPlace_13', 'marketPlace_5', 'marketPlace_21', 'marketPlace_24', 'marketPlace_1', 'marketPlace_26'])
[i]Type for marketPlace

Name: marketPlace Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: 2
Norm: u
LF: marketPlace
Value: u
Fields: 
Finance Type: undef
fenominator_12(uint16[]) := ϕ(['fenominator_13', 'fenominator_0', 'fenominator_11', 'fenominator_7', 'fenominator_1', 'fenominator_15', 'fenominator_17', 'fenominator_5', 'fenominator_9', 'fenominator_18', 'fenominator_3'])
[i]Type for fenominator

Name: fenominator Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: 1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
TMP_176(bytes32) = INTERNAL_CALL, Swivel.validOrderHash(Hash.Order,Sig.Components)(o_1 (-> []),c_1 (-> []))
[i]Type for TMP_176

Name: TMP_176 Function: exitVaultFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
hash_1(bytes32) := TMP_176(bytes32)
Finance type key: (-1, -1)
[i]Type for hash

Name: hash Function: exitVaultFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_162(uint256) -> o_1 (-> []).principal
[i]Type for REF_162

Name: REF_162 Function: exitVaultFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_163(uint256) -> filled_17[hash_1]
[i]Type for REF_163

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_177(uint256) = REF_162 (c)- REF_163
[i]Type for TMP_177

Name: TMP_177 Function: exitVaultFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_178(bool) = a_1 <= TMP_177
[i]Type for TMP_178

Name: TMP_178 Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_179(None) = SOLIDITY_CALL require(bool,string)(TMP_178,taker amount > available volume)
[i]Type for TMP_179

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_164(uint256) -> filled_17[hash_1]
[i]Type for REF_164

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
filled_18(mapping(bytes32 => uint256)) := ϕ(['filled_17'])
[i]Type for filled

Name: filled Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_164(-> filled_18) = REF_164 (c)+ a_1
[i]Type for REF_164

Name: REF_164 Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_180(uint256) = a_1 (c)* 1000000000000000000
[i]Type for TMP_180

Name: TMP_180 Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: raw balance
REF_165(uint256) -> o_1 (-> []).principal
[i]Type for REF_165

Name: REF_165 Function: exitVaultFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_181(uint256) = TMP_180 (c)/ REF_165
[i]Type for TMP_181

Name: TMP_181 Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: raw balance
REF_166(uint256) -> o_1 (-> []).premium
[i]Type for REF_166

Name: REF_166 Function: exitVaultFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_182(uint256) = TMP_181 (c)* REF_166
[i]Type for TMP_182

Name: TMP_182 Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: raw balance
TMP_183(uint256) = TMP_182 (c)/ 1000000000000000000
[i]Type for TMP_183

Name: TMP_183 Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: raw balance
premiumFilled_1(uint256) := TMP_183(uint256)
Finance type key: (0, -1)
[i]Type for premiumFilled

Name: premiumFilled Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: raw balance
TMP_184(uint256) = premiumFilled_1 (c)* 1000000000000000000
[i]Type for TMP_184

Name: TMP_184 Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: raw balance
REF_167(uint16) -> fenominator_13[3]
[i]Type for REF_167

Name: None Function: None
Num: -1
Den: -1
Address: 1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
TMP_185(uint256) = TMP_184 (c)/ REF_167
Finance type key: (0, 10)
Finance type key: (0, 10)
[i]Type for TMP_185

Name: TMP_185 Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: transaction fee (d)
TMP_186(uint256) = TMP_185 (c)/ 1000000000000000000
[i]Type for TMP_186

Name: TMP_186 Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: transaction fee (d)
fee_1(uint256) := TMP_186(uint256)
Finance type key: (14, -1)
[i]Type for fee

Name: fee Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: transaction fee (d)
REF_168(address) -> o_1 (-> []).underlying
[i]Type for REF_168

Name: REF_168 Function: exitVaultFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_187 = CONVERT REF_168 to Erc20
[i]Type for TMP_187

Name: TMP_187 Function: exitVaultFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
uToken_1(Erc20) := TMP_187(Erc20)
Finance type key: (-1, -1)
[i]Type for uToken

Name: uToken Function: exitVaultFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_169(uint256) -> Balance_2[msg.sender]
[i]Type for REF_169

Name: None Function: None
Num: -1
Den: -1
Address: 1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Balance_3(mapping(address => uint256)) := ϕ(['Balance_2'])
[i]Type for Balance

Name: Balance Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: 1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
REF_169(-> Balance_3) = REF_169 (c)+ premiumFilled_1
Finance type key: (0, 0)
[i]Type for REF_169

Name: REF_169 Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: raw balance
REF_170(uint256) -> Balance_3[msg.sender]
[i]Type for REF_170

Name: Balance Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: 1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Balance_4(mapping(address => uint256)) := ϕ(['Balance_3'])
[i]Type for Balance

Name: Balance Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: 1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
REF_170(-> Balance_4) = REF_170 (c)- fee_1
Finance type key: (0, 14)
[i]Type for REF_170

Name: REF_170 Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: net balance
REF_171(uint256) -> Balance_4[msg.sender]
[i]Type for REF_171

Name: Balance Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: 1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Balance_5(mapping(address => uint256)) := ϕ(['Balance_4'])
[i]Type for Balance

Name: Balance Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: 1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
REF_171(-> Balance_5) = REF_171 (c)- fee_1
Finance type key: (0, 14)
[i]Type for REF_171

Name: REF_171 Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: net balance
TMP_188 = CONVERT marketPlace_23 to MarketPlace
[i]Type for TMP_188

Name: TMP_188 Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: 2
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
REF_173(address) -> o_1 (-> []).underlying
[i]Type for REF_173

Name: REF_173 Function: exitVaultFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_174(uint256) -> o_1 (-> []).maturity
[i]Type for REF_174

Name: REF_174 Function: exitVaultFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_175(address) -> o_1 (-> []).maker
[i]Type for REF_175

Name: REF_175 Function: exitVaultFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_189(bool) = HIGH_LEVEL_CALL, dest:TMP_188(MarketPlace), function:p2pVaultExchange, arguments:['REF_173', 'REF_174', 'msg.sender', 'REF_175', 'a_1']  
[i]Type for TMP_189

Name: TMP_189 Function: exitVaultFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
marketPlace_24(address) := ϕ(['marketPlace_28', 'marketPlace_16', 'marketPlace_30', 'marketPlace_23', 'marketPlace_5', 'marketPlace_9', 'marketPlace_13', 'marketPlace_21', 'marketPlace_24', 'marketPlace_1', 'marketPlace_26'])
[i]Type for marketPlace

Name: marketPlace Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: 2
Norm: u
LF: marketPlace
Value: u
Fields: 
Finance Type: undef
TMP_190(None) = SOLIDITY_CALL require(bool,string)(TMP_189,vault exchange failed)
[i]Type for TMP_190

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_176(bytes32) -> o_1 (-> []).key
[i]Type for REF_176

Name: REF_176 Function: exitVaultFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_177(address) -> o_1 (-> []).maker
[i]Type for REF_177

Name: REF_177 Function: exitVaultFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_178(bool) -> o_1 (-> []).vault
[i]Type for REF_178

Name: REF_178 Function: exitVaultFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_179(bool) -> o_1 (-> []).exit
[i]Type for REF_179

Name: REF_179 Function: exitVaultFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
o_1 (-> [])(Hash.Order) := ϕ(['REF_132'])
[i]Type for o

Name: o Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: principal, premium, underlying, maturity, maker, key, vault, exit
Finance Type: undef
a_1(uint256) := ϕ(['REF_133'])
[i]Type for a

Name: a Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
c_1 (-> [])(Sig.Components) := ϕ(['REF_134'])
[i]Type for c

Name: c Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
filled_16(mapping(bytes32 => uint256)) := ϕ(['filled_12', 'filled_3', 'filled_6', 'filled_24', 'filled_15', 'filled_9', 'filled_0', 'filled_21', 'filled_18'])
[i]Type for filled

Name: filled Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Balance_1(mapping(address => uint256)) := ϕ(['Balance_0', 'Balance_5'])
[i]Type for Balance

Name: Balance Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: 1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
marketPlace_22(address) := ϕ(['marketPlace_28', 'marketPlace_16', 'marketPlace_30', 'marketPlace_0', 'marketPlace_9', 'marketPlace_13', 'marketPlace_5', 'marketPlace_21', 'marketPlace_24', 'marketPlace_1', 'marketPlace_26'])
[i]Type for marketPlace

Name: marketPlace Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: 2
Norm: u
LF: marketPlace
Value: u
Fields: 
Finance Type: undef
fenominator_12(uint16[]) := ϕ(['fenominator_13', 'fenominator_0', 'fenominator_11', 'fenominator_7', 'fenominator_1', 'fenominator_15', 'fenominator_17', 'fenominator_5', 'fenominator_9', 'fenominator_18', 'fenominator_3'])
[i]Type for fenominator

Name: fenominator Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: 1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
TMP_176(bytes32) = INTERNAL_CALL, Swivel.validOrderHash(Hash.Order,Sig.Components)(o_1 (-> []),c_1 (-> []))
[i]Type for TMP_176

Name: TMP_176 Function: exitVaultFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
hash_1(bytes32) := TMP_176(bytes32)
Finance type key: (-1, -1)
[i]Type for hash

Name: hash Function: exitVaultFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_162(uint256) -> o_1 (-> []).principal
[i]Type for REF_162

Name: REF_162 Function: exitVaultFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_163(uint256) -> filled_17[hash_1]
[i]Type for REF_163

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_177(uint256) = REF_162 (c)- REF_163
[i]Type for TMP_177

Name: TMP_177 Function: exitVaultFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_178(bool) = a_1 <= TMP_177
[i]Type for TMP_178

Name: TMP_178 Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_179(None) = SOLIDITY_CALL require(bool,string)(TMP_178,taker amount > available volume)
[i]Type for TMP_179

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_164(uint256) -> filled_17[hash_1]
[i]Type for REF_164

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
filled_18(mapping(bytes32 => uint256)) := ϕ(['filled_17'])
[i]Type for filled

Name: filled Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_164(-> filled_18) = REF_164 (c)+ a_1
[i]Type for REF_164

Name: REF_164 Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_180(uint256) = a_1 (c)* 1000000000000000000
[i]Type for TMP_180

Name: TMP_180 Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: raw balance
REF_165(uint256) -> o_1 (-> []).principal
[i]Type for REF_165

Name: REF_165 Function: exitVaultFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_181(uint256) = TMP_180 (c)/ REF_165
[i]Type for TMP_181

Name: TMP_181 Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: raw balance
REF_166(uint256) -> o_1 (-> []).premium
[i]Type for REF_166

Name: REF_166 Function: exitVaultFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_182(uint256) = TMP_181 (c)* REF_166
[i]Type for TMP_182

Name: TMP_182 Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: raw balance
TMP_183(uint256) = TMP_182 (c)/ 1000000000000000000
[i]Type for TMP_183

Name: TMP_183 Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: raw balance
premiumFilled_1(uint256) := TMP_183(uint256)
Finance type key: (0, -1)
[i]Type for premiumFilled

Name: premiumFilled Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: raw balance
TMP_184(uint256) = premiumFilled_1 (c)* 1000000000000000000
[i]Type for TMP_184

Name: TMP_184 Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: raw balance
REF_167(uint16) -> fenominator_13[3]
[i]Type for REF_167

Name: None Function: None
Num: -1
Den: -1
Address: 1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
TMP_185(uint256) = TMP_184 (c)/ REF_167
Finance type key: (0, 10)
Finance type key: (0, 10)
[i]Type for TMP_185

Name: TMP_185 Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: transaction fee (d)
TMP_186(uint256) = TMP_185 (c)/ 1000000000000000000
[i]Type for TMP_186

Name: TMP_186 Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: transaction fee (d)
fee_1(uint256) := TMP_186(uint256)
Finance type key: (14, -1)
[i]Type for fee

Name: fee Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: transaction fee (d)
REF_168(address) -> o_1 (-> []).underlying
[i]Type for REF_168

Name: REF_168 Function: exitVaultFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_187 = CONVERT REF_168 to Erc20
[i]Type for TMP_187

Name: TMP_187 Function: exitVaultFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
uToken_1(Erc20) := TMP_187(Erc20)
Finance type key: (-1, -1)
[i]Type for uToken

Name: uToken Function: exitVaultFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_169(uint256) -> Balance_2[msg.sender]
[i]Type for REF_169

Name: None Function: None
Num: -1
Den: -1
Address: 1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Balance_3(mapping(address => uint256)) := ϕ(['Balance_2'])
[i]Type for Balance

Name: Balance Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: 1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
REF_169(-> Balance_3) = REF_169 (c)+ premiumFilled_1
Finance type key: (0, 0)
[i]Type for REF_169

Name: REF_169 Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: raw balance
REF_170(uint256) -> Balance_3[msg.sender]
[i]Type for REF_170

Name: Balance Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: 1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Balance_4(mapping(address => uint256)) := ϕ(['Balance_3'])
[i]Type for Balance

Name: Balance Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: 1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
REF_170(-> Balance_4) = REF_170 (c)- fee_1
Finance type key: (0, 14)
[i]Type for REF_170

Name: REF_170 Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: net balance
REF_171(uint256) -> Balance_4[msg.sender]
[i]Type for REF_171

Name: Balance Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: 1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Balance_5(mapping(address => uint256)) := ϕ(['Balance_4'])
[i]Type for Balance

Name: Balance Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: 1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
REF_171(-> Balance_5) = REF_171 (c)- fee_1
Finance type key: (0, 14)
[i]Type for REF_171

Name: REF_171 Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: net balance
TMP_188 = CONVERT marketPlace_23 to MarketPlace
[i]Type for TMP_188

Name: TMP_188 Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: 2
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
REF_173(address) -> o_1 (-> []).underlying
[i]Type for REF_173

Name: REF_173 Function: exitVaultFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_174(uint256) -> o_1 (-> []).maturity
[i]Type for REF_174

Name: REF_174 Function: exitVaultFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_175(address) -> o_1 (-> []).maker
[i]Type for REF_175

Name: REF_175 Function: exitVaultFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_189(bool) = HIGH_LEVEL_CALL, dest:TMP_188(MarketPlace), function:p2pVaultExchange, arguments:['REF_173', 'REF_174', 'msg.sender', 'REF_175', 'a_1']  
[i]Type for TMP_189

Name: TMP_189 Function: exitVaultFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
marketPlace_24(address) := ϕ(['marketPlace_28', 'marketPlace_16', 'marketPlace_30', 'marketPlace_23', 'marketPlace_5', 'marketPlace_9', 'marketPlace_13', 'marketPlace_21', 'marketPlace_24', 'marketPlace_1', 'marketPlace_26'])
[i]Type for marketPlace

Name: marketPlace Function: exitVaultFillingVaultInitiate
Num: -1
Den: -1
Address: 2
Norm: u
LF: marketPlace
Value: u
Fields: 
Finance Type: undef
TMP_190(None) = SOLIDITY_CALL require(bool,string)(TMP_189,vault exchange failed)
[i]Type for TMP_190

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_176(bytes32) -> o_1 (-> []).key
[i]Type for REF_176

Name: REF_176 Function: exitVaultFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_177(address) -> o_1 (-> []).maker
[i]Type for REF_177

Name: REF_177 Function: exitVaultFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_178(bool) -> o_1 (-> []).vault
[i]Type for REF_178

Name: REF_178 Function: exitVaultFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_179(bool) -> o_1 (-> []).exit
[i]Type for REF_179

Name: REF_179 Function: exitVaultFillingVaultInitiate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)



cancel
TMP_242(bytes32) = INTERNAL_CALL, Swivel.validOrderHash(Hash.Order,Sig.Components)(o_1 (-> []),c_1 (-> []))
[i]Type for TMP_242

Name: TMP_242 Function: cancel
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
hash_1(bytes32) := TMP_242(bytes32)
Finance type key: (-1, -1)
[i]Type for hash

Name: hash Function: cancel
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_224(address) -> o_1 (-> []).maker
[i]Type for REF_224

Name: REF_224 Function: cancel
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_243(bool) = msg.sender == REF_224
[i]Type for TMP_243

Name: TMP_243 Function: cancel
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_244(None) = SOLIDITY_CALL require(bool,string)(TMP_243,sender must be maker)
[i]Type for TMP_244

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_225(bool) -> cancelled_0[hash_1]
[i]Type for REF_225

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
cancelled_1(mapping(bytes32 => bool)) := ϕ(['cancelled_0'])
[i]Type for cancelled

Name: cancelled Function: cancel
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_225 (->cancelled_1) := True(bool)
Finance type key: (-1, -1)
[i]Type for REF_225

Name: REF_225 Function: cancel
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: True
Fields: 
Finance Type: undef
REF_226(bytes32) -> o_1 (-> []).key
[i]Type for REF_226

Name: REF_226 Function: cancel
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
RETURN True
TMP_242(bytes32) = INTERNAL_CALL, Swivel.validOrderHash(Hash.Order,Sig.Components)(o_1 (-> []),c_1 (-> []))
[i]Type for TMP_242

Name: TMP_242 Function: cancel
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
hash_1(bytes32) := TMP_242(bytes32)
Finance type key: (-1, -1)
[i]Type for hash

Name: hash Function: cancel
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_224(address) -> o_1 (-> []).maker
[i]Type for REF_224

Name: REF_224 Function: cancel
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_243(bool) = msg.sender == REF_224
[i]Type for TMP_243

Name: TMP_243 Function: cancel
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_244(None) = SOLIDITY_CALL require(bool,string)(TMP_243,sender must be maker)
[i]Type for TMP_244

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_225(bool) -> cancelled_0[hash_1]
[i]Type for REF_225

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
cancelled_1(mapping(bytes32 => bool)) := ϕ(['cancelled_0'])
[i]Type for cancelled

Name: cancelled Function: cancel
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_225 (->cancelled_1) := True(bool)
Finance type key: (-1, -1)
[i]Type for REF_225

Name: REF_225 Function: cancel
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: True
Fields: 
Finance Type: undef
REF_226(bytes32) -> o_1 (-> []).key
[i]Type for REF_226

Name: REF_226 Function: cancel
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
RETURN True



scheduleWithdrawal
HOLD_1(uint256) := ϕ(['HOLD_2', 'HOLD_0'])
[i]Type for HOLD

Name: HOLD Function: scheduleWithdrawal
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
admin_2(address) := ϕ(['admin_5', 'admin_3', 'admin_11', 'admin_0', 'admin_9', 'admin_1'])
[i]Type for admin

Name: admin Function: scheduleWithdrawal
Num: -1
Den: -1
Address: 3
Norm: u
LF: admin
Value: u
Fields: 
Finance Type: undef
MODIFIER_CALL, Swivel.onlyAdmin(address)(admin_2)
a_1(address) := ϕ(['admin_10', 'admin_4', 'admin_6', 'admin_2'])
[i]Type for a

Name: a Function: onlyAdmin
Num: -1
Den: -1
Address: 3
Norm: u
LF: admin
Value: u
Fields: 
Finance Type: undef
TMP_309(bool) = msg.sender == a_1
[i]Type for TMP_309

Name: TMP_309 Function: onlyAdmin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_310(None) = SOLIDITY_CALL require(bool,string)(TMP_309,sender must be admin)
[i]Type for TMP_310

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
a_1(address) := ϕ(['admin_10', 'admin_4', 'admin_6', 'admin_2'])
[i]Type for a

Name: a Function: onlyAdmin
Num: -1
Den: -1
Address: 3
Norm: u
LF: admin
Value: u
Fields: 
Finance Type: undef
TMP_309(bool) = msg.sender == a_1
[i]Type for TMP_309

Name: TMP_309 Function: onlyAdmin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_310(None) = SOLIDITY_CALL require(bool,string)(TMP_309,sender must be admin)
[i]Type for TMP_310

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_246(uint256) = block.timestamp (c)+ HOLD_2
[i]Type for TMP_246

Name: TMP_246 Function: scheduleWithdrawal
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
when_1(uint256) := TMP_246(uint256)
Finance type key: (-1, -1)
[i]Type for when

Name: when Function: scheduleWithdrawal
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_227(uint256) -> withdrawals_0[e_1]
[i]Type for REF_227

Name: None Function: None
Num: -999
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
withdrawals_1(mapping(address => uint256)) := ϕ(['withdrawals_0'])
[i]Type for withdrawals

Name: withdrawals Function: scheduleWithdrawal
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_227 (->withdrawals_1) := when_1(uint256)
Finance type key: (-1, -1)
[i]Type for REF_227

Name: REF_227 Function: scheduleWithdrawal
Num: -999
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
HOLD_1(uint256) := ϕ(['HOLD_2', 'HOLD_0'])
[i]Type for HOLD

Name: HOLD Function: scheduleWithdrawal
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
admin_2(address) := ϕ(['admin_5', 'admin_3', 'admin_11', 'admin_0', 'admin_9', 'admin_1'])
[i]Type for admin

Name: admin Function: scheduleWithdrawal
Num: -1
Den: -1
Address: 3
Norm: u
LF: admin
Value: u
Fields: 
Finance Type: undef
MODIFIER_CALL, Swivel.onlyAdmin(address)(admin_2)
TMP_246(uint256) = block.timestamp (c)+ HOLD_2
[i]Type for TMP_246

Name: TMP_246 Function: scheduleWithdrawal
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
when_1(uint256) := TMP_246(uint256)
Finance type key: (-1, -1)
[i]Type for when

Name: when Function: scheduleWithdrawal
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_227(uint256) -> withdrawals_0[e_1]
[i]Type for REF_227

Name: None Function: None
Num: -999
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
withdrawals_1(mapping(address => uint256)) := ϕ(['withdrawals_0'])
[i]Type for withdrawals

Name: withdrawals Function: scheduleWithdrawal
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_227 (->withdrawals_1) := when_1(uint256)
Finance type key: (-1, -1)
[i]Type for REF_227

Name: REF_227 Function: scheduleWithdrawal
Num: -999
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef



withdraw
withdrawals_3(mapping(address => uint256)) := ϕ(['withdrawals_5', 'withdrawals_0', 'withdrawals_1', 'withdrawals_2'])
[i]Type for withdrawals

Name: withdrawals Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
admin_6(address) := ϕ(['admin_5', 'admin_3', 'admin_11', 'admin_0', 'admin_9', 'admin_1'])
[i]Type for admin

Name: admin Function: withdraw
Num: -1
Den: -1
Address: 3
Norm: u
LF: admin
Value: u
Fields: 
Finance Type: undef
MODIFIER_CALL, Swivel.onlyAdmin(address)(admin_6)
REF_229(uint256) -> withdrawals_4[e_1]
[i]Type for REF_229

Name: None Function: None
Num: -998
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
when_1(uint256) := REF_229(uint256)
Finance type key: (-1, -1)
[i]Type for when

Name: when Function: withdraw
Num: -998
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_250(bool) = when_1 != 0
[i]Type for TMP_250

Name: TMP_250 Function: withdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_251(None) = SOLIDITY_CALL require(bool,string)(TMP_250,no withdrawal scheduled)
[i]Type for TMP_251

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_252(bool) = block.timestamp >= when_1
[i]Type for TMP_252

Name: TMP_252 Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_253(None) = SOLIDITY_CALL require(bool,string)(TMP_252,withdrawal still on hold)
[i]Type for TMP_253

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_230(uint256) -> withdrawals_4[e_1]
[i]Type for REF_230

Name: None Function: None
Num: -998
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
withdrawals_5(mapping(address => uint256)) := ϕ(['withdrawals_4'])
[i]Type for withdrawals

Name: withdrawals Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_230 (->withdrawals_5) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for REF_230

Name: REF_230 Function: withdraw
Num: -998
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_254 = CONVERT e_1 to Erc20
[i]Type for TMP_254

Name: TMP_254 Function: withdraw
Num: 
Den: 
Address: -998
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
token_1(Erc20) := TMP_254(Erc20)
Finance type key: (-1, -1)
[i]Type for token

Name: token Function: withdraw
Num: 
Den: 
Address: -998
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
TMP_255 = CONVERT this to address
[i]Type for TMP_255

Name: TMP_255 Function: withdraw
Num: -1
Den: -1
Address: 5
Norm: u
LF: Swivel
Value: u
Fields: 
Finance Type: undef
TMP_256(uint256) = HIGH_LEVEL_CALL, dest:token_1(Erc20), function:balanceOf, arguments:['TMP_255']  
[i]Type for TMP_256

Name: TMP_256 Function: withdraw
Num: -998
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
admin_8(address) := ϕ(['admin_7', 'admin_5', 'admin_3', 'admin_11', 'admin_9', 'admin_1'])
[i]Type for admin

Name: admin Function: withdraw
Num: -1
Den: -1
Address: 3
Norm: u
LF: admin
Value: u
Fields: 
Finance Type: undef
TMP_257(bool) = HIGH_LEVEL_CALL, dest:token_1(Erc20), function:transfer, arguments:['admin_8', 'TMP_256']  
[i]Type for TMP_257

Name: TMP_257 Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
admin_9(address) := ϕ(['admin_5', 'admin_3', 'admin_11', 'admin_8', 'admin_9', 'admin_1'])
[i]Type for admin

Name: admin Function: withdraw
Num: -1
Den: -1
Address: 3
Norm: u
LF: admin
Value: u
Fields: 
Finance Type: undef
withdrawals_3(mapping(address => uint256)) := ϕ(['withdrawals_5', 'withdrawals_0', 'withdrawals_1', 'withdrawals_2'])
[i]Type for withdrawals

Name: withdrawals Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
admin_6(address) := ϕ(['admin_5', 'admin_3', 'admin_11', 'admin_0', 'admin_9', 'admin_1'])
[i]Type for admin

Name: admin Function: withdraw
Num: -1
Den: -1
Address: 3
Norm: u
LF: admin
Value: u
Fields: 
Finance Type: undef
MODIFIER_CALL, Swivel.onlyAdmin(address)(admin_6)
REF_229(uint256) -> withdrawals_4[e_1]
[i]Type for REF_229

Name: None Function: None
Num: -998
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
when_1(uint256) := REF_229(uint256)
Finance type key: (-1, -1)
[i]Type for when

Name: when Function: withdraw
Num: -998
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_250(bool) = when_1 != 0
[i]Type for TMP_250

Name: TMP_250 Function: withdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_251(None) = SOLIDITY_CALL require(bool,string)(TMP_250,no withdrawal scheduled)
[i]Type for TMP_251

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_252(bool) = block.timestamp >= when_1
[i]Type for TMP_252

Name: TMP_252 Function: withdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_253(None) = SOLIDITY_CALL require(bool,string)(TMP_252,withdrawal still on hold)
[i]Type for TMP_253

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_230(uint256) -> withdrawals_4[e_1]
[i]Type for REF_230

Name: None Function: None
Num: -998
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
withdrawals_5(mapping(address => uint256)) := ϕ(['withdrawals_4'])
[i]Type for withdrawals

Name: withdrawals Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_230 (->withdrawals_5) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for REF_230

Name: REF_230 Function: withdraw
Num: -998
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_254 = CONVERT e_1 to Erc20
[i]Type for TMP_254

Name: TMP_254 Function: withdraw
Num: 
Den: 
Address: -998
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
token_1(Erc20) := TMP_254(Erc20)
Finance type key: (-1, -1)
[i]Type for token

Name: token Function: withdraw
Num: 
Den: 
Address: -998
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
TMP_255 = CONVERT this to address
[i]Type for TMP_255

Name: TMP_255 Function: withdraw
Num: 
Den: 
Address: 5
Norm: u
LF: Swivel
Value: u
Fields: 
Finance Type: undef
TMP_256(uint256) = HIGH_LEVEL_CALL, dest:token_1(Erc20), function:balanceOf, arguments:['TMP_255']  
[i]Type for TMP_256

Name: TMP_256 Function: withdraw
Num: -998
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
admin_8(address) := ϕ(['admin_7', 'admin_5', 'admin_3', 'admin_11', 'admin_9', 'admin_1'])
[i]Type for admin

Name: admin Function: withdraw
Num: -1
Den: -1
Address: 3
Norm: u
LF: admin
Value: u
Fields: 
Finance Type: undef
TMP_257(bool) = HIGH_LEVEL_CALL, dest:token_1(Erc20), function:transfer, arguments:['admin_8', 'TMP_256']  
[i]Type for TMP_257

Name: TMP_257 Function: withdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
admin_9(address) := ϕ(['admin_5', 'admin_3', 'admin_11', 'admin_8', 'admin_9', 'admin_1'])
[i]Type for admin

Name: admin Function: withdraw
Num: -1
Den: -1
Address: 3
Norm: u
LF: admin
Value: u
Fields: 
Finance Type: undef



splitUnderlying
marketPlace_29(address) := ϕ(['marketPlace_28', 'marketPlace_16', 'marketPlace_30', 'marketPlace_0', 'marketPlace_9', 'marketPlace_13', 'marketPlace_5', 'marketPlace_21', 'marketPlace_24', 'marketPlace_1', 'marketPlace_26'])
[i]Type for marketPlace

Name: marketPlace Function: splitUnderlying
Num: -1
Den: -1
Address: 2
Norm: u
LF: marketPlace
Value: u
Fields: 
Finance Type: undef
TMP_260 = CONVERT u_1 to Erc20
[i]Type for TMP_260

Name: TMP_260 Function: splitUnderlying
Num: 
Den: 
Address: -997
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
uToken_1(Erc20) := TMP_260(Erc20)
Finance type key: (-1, -1)
[i]Type for uToken

Name: uToken Function: splitUnderlying
Num: 
Den: 
Address: -997
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
TMP_261 = CONVERT this to address
[i]Type for TMP_261

Name: TMP_261 Function: splitUnderlying
Num: -1
Den: -1
Address: 5
Norm: u
LF: Swivel
Value: u
Fields: 
Finance Type: undef
TMP_262(bool) = HIGH_LEVEL_CALL, dest:uToken_1(Erc20), function:transferFrom, arguments:['msg.sender', 'TMP_261', 'a_1']  
[i]Type for TMP_262

Name: TMP_262 Function: splitUnderlying
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
marketPlace_30(address) := ϕ(['marketPlace_28', 'marketPlace_16', 'marketPlace_30', 'marketPlace_5', 'marketPlace_9', 'marketPlace_13', 'marketPlace_21', 'marketPlace_24', 'marketPlace_29', 'marketPlace_1', 'marketPlace_26'])
[i]Type for marketPlace

Name: marketPlace Function: splitUnderlying
Num: -1
Den: -1
Address: 2
Norm: u
LF: marketPlace
Value: u
Fields: 
Finance Type: undef
TMP_263 = CONVERT marketPlace_30 to MarketPlace
[i]Type for TMP_263

Name: TMP_263 Function: splitUnderlying
Num: -1
Den: -1
Address: 2
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
mPlace_1(MarketPlace) := TMP_263(MarketPlace)
Finance type key: (-1, -1)
[i]Type for mPlace

Name: mPlace Function: splitUnderlying
Num: -1
Den: -1
Address: 2
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
TMP_264(address) = HIGH_LEVEL_CALL, dest:mPlace_1(MarketPlace), function:cTokenAddress, arguments:['u_1', 'm_1']  
[i]Type for TMP_264

Name: TMP_264 Function: splitUnderlying
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
cTokenAddr_1(address) := TMP_264(address)
Finance type key: (-1, -1)
[i]Type for cTokenAddr

Name: cTokenAddr Function: splitUnderlying
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_265(bool) = HIGH_LEVEL_CALL, dest:uToken_1(Erc20), function:approve, arguments:['cTokenAddr_1', 'a_1']  
[i]Type for TMP_265

Name: TMP_265 Function: splitUnderlying
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_266 = CONVERT cTokenAddr_1 to CErc20
[i]Type for TMP_266

Name: TMP_266 Function: splitUnderlying
Num: -1
Den: -1
Address: u
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
TMP_267(uint256) = HIGH_LEVEL_CALL, dest:TMP_266(CErc20), function:mint, arguments:['a_1']  
[i]Type for TMP_267

Name: TMP_267 Function: splitUnderlying
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_268(bool) = TMP_267 == 0
[i]Type for TMP_268

Name: TMP_268 Function: splitUnderlying
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_269(None) = SOLIDITY_CALL require(bool,string)(TMP_268,minting CToken Failed)
[i]Type for TMP_269

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_270(bool) = HIGH_LEVEL_CALL, dest:mPlace_1(MarketPlace), function:mintZcTokenAddingNotional, arguments:['u_1', 'm_1', 'msg.sender', 'a_1']  
[i]Type for TMP_270

Name: TMP_270 Function: splitUnderlying
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_271(None) = SOLIDITY_CALL require(bool,string)(TMP_270,mint ZcToken adding Notional failed)
[i]Type for TMP_271

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
RETURN True
marketPlace_29(address) := ϕ(['marketPlace_28', 'marketPlace_16', 'marketPlace_30', 'marketPlace_0', 'marketPlace_9', 'marketPlace_13', 'marketPlace_5', 'marketPlace_21', 'marketPlace_24', 'marketPlace_1', 'marketPlace_26'])
[i]Type for marketPlace

Name: marketPlace Function: splitUnderlying
Num: -1
Den: -1
Address: 2
Norm: u
LF: marketPlace
Value: u
Fields: 
Finance Type: undef
TMP_260 = CONVERT u_1 to Erc20
[i]Type for TMP_260

Name: TMP_260 Function: splitUnderlying
Num: 
Den: 
Address: -997
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
uToken_1(Erc20) := TMP_260(Erc20)
Finance type key: (-1, -1)
[i]Type for uToken

Name: uToken Function: splitUnderlying
Num: 
Den: 
Address: -997
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
TMP_261 = CONVERT this to address
[i]Type for TMP_261

Name: TMP_261 Function: splitUnderlying
Num: 
Den: 
Address: 5
Norm: u
LF: Swivel
Value: u
Fields: 
Finance Type: undef
TMP_262(bool) = HIGH_LEVEL_CALL, dest:uToken_1(Erc20), function:transferFrom, arguments:['msg.sender', 'TMP_261', 'a_1']  
[i]Type for TMP_262

Name: TMP_262 Function: splitUnderlying
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
marketPlace_30(address) := ϕ(['marketPlace_28', 'marketPlace_16', 'marketPlace_30', 'marketPlace_5', 'marketPlace_9', 'marketPlace_13', 'marketPlace_21', 'marketPlace_24', 'marketPlace_29', 'marketPlace_1', 'marketPlace_26'])
[i]Type for marketPlace

Name: marketPlace Function: splitUnderlying
Num: -1
Den: -1
Address: 2
Norm: u
LF: marketPlace
Value: u
Fields: 
Finance Type: undef
TMP_263 = CONVERT marketPlace_30 to MarketPlace
[i]Type for TMP_263

Name: TMP_263 Function: splitUnderlying
Num: -1
Den: -1
Address: 2
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
mPlace_1(MarketPlace) := TMP_263(MarketPlace)
Finance type key: (-1, -1)
[i]Type for mPlace

Name: mPlace Function: splitUnderlying
Num: -1
Den: -1
Address: 2
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
TMP_264(address) = HIGH_LEVEL_CALL, dest:mPlace_1(MarketPlace), function:cTokenAddress, arguments:['u_1', 'm_1']  
[i]Type for TMP_264

Name: TMP_264 Function: splitUnderlying
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
cTokenAddr_1(address) := TMP_264(address)
Finance type key: (-1, -1)
[i]Type for cTokenAddr

Name: cTokenAddr Function: splitUnderlying
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_265(bool) = HIGH_LEVEL_CALL, dest:uToken_1(Erc20), function:approve, arguments:['cTokenAddr_1', 'a_1']  
[i]Type for TMP_265

Name: TMP_265 Function: splitUnderlying
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_266 = CONVERT cTokenAddr_1 to CErc20
[i]Type for TMP_266

Name: TMP_266 Function: splitUnderlying
Num: 
Den: 
Address: u
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
TMP_267(uint256) = HIGH_LEVEL_CALL, dest:TMP_266(CErc20), function:mint, arguments:['a_1']  
[i]Type for TMP_267

Name: TMP_267 Function: splitUnderlying
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_268(bool) = TMP_267 == 0
[i]Type for TMP_268

Name: TMP_268 Function: splitUnderlying
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_269(None) = SOLIDITY_CALL require(bool,string)(TMP_268,minting CToken Failed)
[i]Type for TMP_269

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_270(bool) = HIGH_LEVEL_CALL, dest:mPlace_1(MarketPlace), function:mintZcTokenAddingNotional, arguments:['u_1', 'm_1', 'msg.sender', 'a_1']  
[i]Type for TMP_270

Name: TMP_270 Function: splitUnderlying
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_271(None) = SOLIDITY_CALL require(bool,string)(TMP_270,mint ZcToken adding Notional failed)
[i]Type for TMP_271

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
RETURN True



combineTokens
marketPlace_31(address) := ϕ(['marketPlace_28', 'marketPlace_16', 'marketPlace_30', 'marketPlace_0', 'marketPlace_9', 'marketPlace_13', 'marketPlace_5', 'marketPlace_21', 'marketPlace_24', 'marketPlace_1', 'marketPlace_26'])
[i]Type for marketPlace

Name: marketPlace Function: combineTokens
Num: -1
Den: -1
Address: 2
Norm: u
LF: marketPlace
Value: u
Fields: 
Finance Type: undef
TMP_272 = CONVERT marketPlace_31 to MarketPlace
[i]Type for TMP_272

Name: TMP_272 Function: combineTokens
Num: -1
Den: -1
Address: 2
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
mPlace_1(MarketPlace) := TMP_272(MarketPlace)
Finance type key: (-1, -1)
[i]Type for mPlace

Name: mPlace Function: combineTokens
Num: -1
Den: -1
Address: 2
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
TMP_273(bool) = HIGH_LEVEL_CALL, dest:mPlace_1(MarketPlace), function:burnZcTokenRemovingNotional, arguments:['u_1', 'm_1', 'msg.sender', 'a_1']  
[i]Type for TMP_273

Name: TMP_273 Function: combineTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_274(None) = SOLIDITY_CALL require(bool,string)(TMP_273,burn ZcToken removing Notional failed)
[i]Type for TMP_274

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_275(address) = HIGH_LEVEL_CALL, dest:mPlace_1(MarketPlace), function:cTokenAddress, arguments:['u_1', 'm_1']  
[i]Type for TMP_275

Name: TMP_275 Function: combineTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
cTokenAddr_1(address) := TMP_275(address)
Finance type key: (-1, -1)
[i]Type for cTokenAddr

Name: cTokenAddr Function: combineTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_276 = CONVERT cTokenAddr_1 to CErc20
[i]Type for TMP_276

Name: TMP_276 Function: combineTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
TMP_277(uint256) = HIGH_LEVEL_CALL, dest:TMP_276(CErc20), function:redeemUnderlying, arguments:['a_1']  
[i]Type for TMP_277

Name: TMP_277 Function: combineTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_278(bool) = TMP_277 == 0
[i]Type for TMP_278

Name: TMP_278 Function: combineTokens
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_279(None) = SOLIDITY_CALL require(bool,string)(TMP_278,compound redemption error)
[i]Type for TMP_279

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_280 = CONVERT u_1 to Erc20
[i]Type for TMP_280

Name: TMP_280 Function: combineTokens
Num: 
Den: 
Address: -996
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
TMP_281(bool) = HIGH_LEVEL_CALL, dest:TMP_280(Erc20), function:transfer, arguments:['msg.sender', 'a_1']  
[i]Type for TMP_281

Name: TMP_281 Function: combineTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
RETURN True
marketPlace_31(address) := ϕ(['marketPlace_28', 'marketPlace_16', 'marketPlace_30', 'marketPlace_0', 'marketPlace_9', 'marketPlace_13', 'marketPlace_5', 'marketPlace_21', 'marketPlace_24', 'marketPlace_1', 'marketPlace_26'])
[i]Type for marketPlace

Name: marketPlace Function: combineTokens
Num: -1
Den: -1
Address: 2
Norm: u
LF: marketPlace
Value: u
Fields: 
Finance Type: undef
TMP_272 = CONVERT marketPlace_31 to MarketPlace
[i]Type for TMP_272

Name: TMP_272 Function: combineTokens
Num: -1
Den: -1
Address: 2
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
mPlace_1(MarketPlace) := TMP_272(MarketPlace)
Finance type key: (-1, -1)
[i]Type for mPlace

Name: mPlace Function: combineTokens
Num: -1
Den: -1
Address: 2
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
TMP_273(bool) = HIGH_LEVEL_CALL, dest:mPlace_1(MarketPlace), function:burnZcTokenRemovingNotional, arguments:['u_1', 'm_1', 'msg.sender', 'a_1']  
[i]Type for TMP_273

Name: TMP_273 Function: combineTokens
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_274(None) = SOLIDITY_CALL require(bool,string)(TMP_273,burn ZcToken removing Notional failed)
[i]Type for TMP_274

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_275(address) = HIGH_LEVEL_CALL, dest:mPlace_1(MarketPlace), function:cTokenAddress, arguments:['u_1', 'm_1']  
[i]Type for TMP_275

Name: TMP_275 Function: combineTokens
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
cTokenAddr_1(address) := TMP_275(address)
Finance type key: (-1, -1)
[i]Type for cTokenAddr

Name: cTokenAddr Function: combineTokens
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_276 = CONVERT cTokenAddr_1 to CErc20
[i]Type for TMP_276

Name: TMP_276 Function: combineTokens
Num: 
Den: 
Address: u
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
TMP_277(uint256) = HIGH_LEVEL_CALL, dest:TMP_276(CErc20), function:redeemUnderlying, arguments:['a_1']  
[i]Type for TMP_277

Name: TMP_277 Function: combineTokens
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_278(bool) = TMP_277 == 0
[i]Type for TMP_278

Name: TMP_278 Function: combineTokens
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_279(None) = SOLIDITY_CALL require(bool,string)(TMP_278,compound redemption error)
[i]Type for TMP_279

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_280 = CONVERT u_1 to Erc20
[i]Type for TMP_280

Name: TMP_280 Function: combineTokens
Num: 
Den: 
Address: -996
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
TMP_281(bool) = HIGH_LEVEL_CALL, dest:TMP_280(Erc20), function:transfer, arguments:['msg.sender', 'a_1']  
[i]Type for TMP_281

Name: TMP_281 Function: combineTokens
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
RETURN True



redeemZcToken
marketPlace_32(address) := ϕ(['marketPlace_28', 'marketPlace_16', 'marketPlace_30', 'marketPlace_0', 'marketPlace_9', 'marketPlace_13', 'marketPlace_5', 'marketPlace_21', 'marketPlace_24', 'marketPlace_1', 'marketPlace_26'])
[i]Type for marketPlace

Name: marketPlace Function: redeemZcToken
Num: -1
Den: -1
Address: 2
Norm: u
LF: marketPlace
Value: u
Fields: 
Finance Type: undef
TMP_282 = CONVERT marketPlace_32 to MarketPlace
[i]Type for TMP_282

Name: TMP_282 Function: redeemZcToken
Num: -1
Den: -1
Address: 2
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
mPlace_1(MarketPlace) := TMP_282(MarketPlace)
Finance type key: (-1, -1)
[i]Type for mPlace

Name: mPlace Function: redeemZcToken
Num: -1
Den: -1
Address: 2
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
TMP_283(uint256) = HIGH_LEVEL_CALL, dest:mPlace_1(MarketPlace), function:redeemZcToken, arguments:['u_1', 'm_1', 'msg.sender', 'a_1']  
[i]Type for TMP_283

Name: TMP_283 Function: redeemZcToken
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
redeemed_1(uint256) := TMP_283(uint256)
Finance type key: (-1, -1)
[i]Type for redeemed

Name: redeemed Function: redeemZcToken
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_284(address) = HIGH_LEVEL_CALL, dest:mPlace_1(MarketPlace), function:cTokenAddress, arguments:['u_1', 'm_1']  
[i]Type for TMP_284

Name: TMP_284 Function: redeemZcToken
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_285 = CONVERT TMP_284 to CErc20
[i]Type for TMP_285

Name: TMP_285 Function: redeemZcToken
Num: -1
Den: -1
Address: u
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
TMP_286(uint256) = HIGH_LEVEL_CALL, dest:TMP_285(CErc20), function:redeemUnderlying, arguments:['redeemed_1']  
[i]Type for TMP_286

Name: TMP_286 Function: redeemZcToken
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_287(bool) = TMP_286 == 0
[i]Type for TMP_287

Name: TMP_287 Function: redeemZcToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_288(None) = SOLIDITY_CALL require(bool,string)(TMP_287,compound redemption failed)
[i]Type for TMP_288

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_289 = CONVERT u_1 to Erc20
[i]Type for TMP_289

Name: TMP_289 Function: redeemZcToken
Num: 
Den: 
Address: -995
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
TMP_290(bool) = HIGH_LEVEL_CALL, dest:TMP_289(Erc20), function:transfer, arguments:['msg.sender', 'redeemed_1']  
[i]Type for TMP_290

Name: TMP_290 Function: redeemZcToken
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
RETURN True
marketPlace_32(address) := ϕ(['marketPlace_28', 'marketPlace_16', 'marketPlace_30', 'marketPlace_0', 'marketPlace_9', 'marketPlace_13', 'marketPlace_5', 'marketPlace_21', 'marketPlace_24', 'marketPlace_1', 'marketPlace_26'])
[i]Type for marketPlace

Name: marketPlace Function: redeemZcToken
Num: -1
Den: -1
Address: 2
Norm: u
LF: marketPlace
Value: u
Fields: 
Finance Type: undef
TMP_282 = CONVERT marketPlace_32 to MarketPlace
[i]Type for TMP_282

Name: TMP_282 Function: redeemZcToken
Num: -1
Den: -1
Address: 2
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
mPlace_1(MarketPlace) := TMP_282(MarketPlace)
Finance type key: (-1, -1)
[i]Type for mPlace

Name: mPlace Function: redeemZcToken
Num: -1
Den: -1
Address: 2
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
TMP_283(uint256) = HIGH_LEVEL_CALL, dest:mPlace_1(MarketPlace), function:redeemZcToken, arguments:['u_1', 'm_1', 'msg.sender', 'a_1']  
[i]Type for TMP_283

Name: TMP_283 Function: redeemZcToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
redeemed_1(uint256) := TMP_283(uint256)
Finance type key: (-1, -1)
[i]Type for redeemed

Name: redeemed Function: redeemZcToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_284(address) = HIGH_LEVEL_CALL, dest:mPlace_1(MarketPlace), function:cTokenAddress, arguments:['u_1', 'm_1']  
[i]Type for TMP_284

Name: TMP_284 Function: redeemZcToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_285 = CONVERT TMP_284 to CErc20
[i]Type for TMP_285

Name: TMP_285 Function: redeemZcToken
Num: 
Den: 
Address: u
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
TMP_286(uint256) = HIGH_LEVEL_CALL, dest:TMP_285(CErc20), function:redeemUnderlying, arguments:['redeemed_1']  
[i]Type for TMP_286

Name: TMP_286 Function: redeemZcToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_287(bool) = TMP_286 == 0
[i]Type for TMP_287

Name: TMP_287 Function: redeemZcToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_288(None) = SOLIDITY_CALL require(bool,string)(TMP_287,compound redemption failed)
[i]Type for TMP_288

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_289 = CONVERT u_1 to Erc20
[i]Type for TMP_289

Name: TMP_289 Function: redeemZcToken
Num: 
Den: 
Address: -995
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
TMP_290(bool) = HIGH_LEVEL_CALL, dest:TMP_289(Erc20), function:transfer, arguments:['msg.sender', 'redeemed_1']  
[i]Type for TMP_290

Name: TMP_290 Function: redeemZcToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
RETURN True



redeemVaultInterest
marketPlace_33(address) := ϕ(['marketPlace_28', 'marketPlace_16', 'marketPlace_30', 'marketPlace_0', 'marketPlace_9', 'marketPlace_13', 'marketPlace_5', 'marketPlace_21', 'marketPlace_24', 'marketPlace_1', 'marketPlace_26'])
[i]Type for marketPlace

Name: marketPlace Function: redeemVaultInterest
Num: -1
Den: -1
Address: 2
Norm: u
LF: marketPlace
Value: u
Fields: 
Finance Type: undef
TMP_291 = CONVERT marketPlace_33 to MarketPlace
[i]Type for TMP_291

Name: TMP_291 Function: redeemVaultInterest
Num: -1
Den: -1
Address: 2
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
mPlace_1(MarketPlace) := TMP_291(MarketPlace)
Finance type key: (-1, -1)
[i]Type for mPlace

Name: mPlace Function: redeemVaultInterest
Num: -1
Den: -1
Address: 2
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
TMP_292(uint256) = HIGH_LEVEL_CALL, dest:mPlace_1(MarketPlace), function:redeemVaultInterest, arguments:['u_1', 'm_1', 'msg.sender']  
[i]Type for TMP_292

Name: TMP_292 Function: redeemVaultInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
redeemed_1(uint256) := TMP_292(uint256)
Finance type key: (-1, -1)
[i]Type for redeemed

Name: redeemed Function: redeemVaultInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_293(address) = HIGH_LEVEL_CALL, dest:mPlace_1(MarketPlace), function:cTokenAddress, arguments:['u_1', 'm_1']  
[i]Type for TMP_293

Name: TMP_293 Function: redeemVaultInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_294 = CONVERT TMP_293 to CErc20
[i]Type for TMP_294

Name: TMP_294 Function: redeemVaultInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
TMP_295(uint256) = HIGH_LEVEL_CALL, dest:TMP_294(CErc20), function:redeemUnderlying, arguments:['redeemed_1']  
[i]Type for TMP_295

Name: TMP_295 Function: redeemVaultInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_296(bool) = TMP_295 == 0
[i]Type for TMP_296

Name: TMP_296 Function: redeemVaultInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_297(None) = SOLIDITY_CALL require(bool,string)(TMP_296,compound redemption failed)
[i]Type for TMP_297

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_298 = CONVERT u_1 to Erc20
[i]Type for TMP_298

Name: TMP_298 Function: redeemVaultInterest
Num: 
Den: 
Address: -994
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
TMP_299(bool) = HIGH_LEVEL_CALL, dest:TMP_298(Erc20), function:transfer, arguments:['msg.sender', 'redeemed_1']  
[i]Type for TMP_299

Name: TMP_299 Function: redeemVaultInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
RETURN True
marketPlace_33(address) := ϕ(['marketPlace_28', 'marketPlace_16', 'marketPlace_30', 'marketPlace_0', 'marketPlace_9', 'marketPlace_13', 'marketPlace_5', 'marketPlace_21', 'marketPlace_24', 'marketPlace_1', 'marketPlace_26'])
[i]Type for marketPlace

Name: marketPlace Function: redeemVaultInterest
Num: -1
Den: -1
Address: 2
Norm: u
LF: marketPlace
Value: u
Fields: 
Finance Type: undef
TMP_291 = CONVERT marketPlace_33 to MarketPlace
[i]Type for TMP_291

Name: TMP_291 Function: redeemVaultInterest
Num: -1
Den: -1
Address: 2
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
mPlace_1(MarketPlace) := TMP_291(MarketPlace)
Finance type key: (-1, -1)
[i]Type for mPlace

Name: mPlace Function: redeemVaultInterest
Num: -1
Den: -1
Address: 2
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
TMP_292(uint256) = HIGH_LEVEL_CALL, dest:mPlace_1(MarketPlace), function:redeemVaultInterest, arguments:['u_1', 'm_1', 'msg.sender']  
[i]Type for TMP_292

Name: TMP_292 Function: redeemVaultInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
redeemed_1(uint256) := TMP_292(uint256)
Finance type key: (-1, -1)
[i]Type for redeemed

Name: redeemed Function: redeemVaultInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_293(address) = HIGH_LEVEL_CALL, dest:mPlace_1(MarketPlace), function:cTokenAddress, arguments:['u_1', 'm_1']  
[i]Type for TMP_293

Name: TMP_293 Function: redeemVaultInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_294 = CONVERT TMP_293 to CErc20
[i]Type for TMP_294

Name: TMP_294 Function: redeemVaultInterest
Num: 
Den: 
Address: u
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
TMP_295(uint256) = HIGH_LEVEL_CALL, dest:TMP_294(CErc20), function:redeemUnderlying, arguments:['redeemed_1']  
[i]Type for TMP_295

Name: TMP_295 Function: redeemVaultInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_296(bool) = TMP_295 == 0
[i]Type for TMP_296

Name: TMP_296 Function: redeemVaultInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_297(None) = SOLIDITY_CALL require(bool,string)(TMP_296,compound redemption failed)
[i]Type for TMP_297

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_298 = CONVERT u_1 to Erc20
[i]Type for TMP_298

Name: TMP_298 Function: redeemVaultInterest
Num: 
Den: 
Address: -994
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
TMP_299(bool) = HIGH_LEVEL_CALL, dest:TMP_298(Erc20), function:transfer, arguments:['msg.sender', 'redeemed_1']  
[i]Type for TMP_299

Name: TMP_299 Function: redeemVaultInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
RETURN True
Function count: 44
Executing Group 12
[*] Tested 2 warnings for Swivel
Group 12 complete
Elapsed time: 11.751630663 seconds
Testing complete
