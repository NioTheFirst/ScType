Switched global version to 0.6.12
Checking Vault
Checking VaultToken
Checking ExtendedIERC20
Checking IController
Checking IConverter
Checking IManager
Checking IVault
Checking SafeMath
Checking ERC20
Checking IERC20
Checking SafeERC20
Checking Address
Checking Context
Checking ERC677Token
Checking ERC677
Checking ERC677Receiver
Checking LinkERC20
Add to address_to_label {'Manager:strategist': 1}
Add to address_to_label {'Manager:strategist': 1, 'Manager:controller': 2}
Add to address_to_label {'Manager:strategist': 1, 'Manager:controller': 2, 'Controller:converter': 3}
Add to address_to_label {'Manager:strategist': 1, 'Manager:controller': 2, 'Controller:converter': 3, 'Manager:vaults': 4}
Add to address_to_label {'Manager:strategist': 1, 'Manager:controller': 2, 'Controller:converter': 3, 'Manager:vaults': 4, 'This:token': 5}
Add to address_to_label {'Manager:strategist': 1, 'Manager:controller': 2, 'Controller:converter': 3, 'Manager:vaults': 4, 'This:token': 5, 'constructor:_manager': -999}
Add to address_to_label {'Manager:strategist': 1, 'Manager:controller': 2, 'Controller:converter': 3, 'Manager:vaults': 4, 'This:token': 5, 'constructor:_manager': -999, 'setGauge:_gauge': -998}
Add to address_to_label {'Manager:strategist': 1, 'Manager:controller': 2, 'Controller:converter': 3, 'Manager:vaults': 4, 'This:token': 5, 'constructor:_manager': -999, 'setGauge:_gauge': -998, 'swap:_token0': -997}
Add to address_to_label {'Manager:strategist': 1, 'Manager:controller': 2, 'Controller:converter': 3, 'Manager:vaults': 4, 'This:token': 5, 'constructor:_manager': -999, 'setGauge:_gauge': -998, 'swap:_token0': -997, 'swap:_token1': -996}
Add to address_to_label {'Manager:strategist': 1, 'Manager:controller': 2, 'Controller:converter': 3, 'Manager:vaults': 4, 'This:token': 5, 'constructor:_manager': -999, 'setGauge:_gauge': -998, 'swap:_token0': -997, 'swap:_token1': -996, 'earn:_token': -995}
Add to address_to_label {'Manager:strategist': 1, 'Manager:controller': 2, 'Controller:converter': 3, 'Manager:vaults': 4, 'This:token': 5, 'constructor:_manager': -999, 'setGauge:_gauge': -998, 'swap:_token0': -997, 'swap:_token1': -996, 'earn:_token': -995, 'earn:_strategy': -994}
Add to address_to_label {'Manager:strategist': 1, 'Manager:controller': 2, 'Controller:converter': 3, 'Manager:vaults': 4, 'This:token': 5, 'constructor:_manager': -999, 'setGauge:_gauge': -998, 'swap:_token0': -997, 'swap:_token1': -996, 'earn:_token': -995, 'earn:_strategy': -994, 'deposit:_token': -993}
Add to address_to_label {'Manager:strategist': 1, 'Manager:controller': 2, 'Controller:converter': 3, 'Manager:vaults': 4, 'This:token': 5, 'constructor:_manager': -999, 'setGauge:_gauge': -998, 'swap:_token0': -997, 'swap:_token1': -996, 'earn:_token': -995, 'earn:_strategy': -994, 'deposit:_token': -993, 'depositMultiple:_tokens': -992}
Add to address_to_label {'Manager:strategist': 1, 'Manager:controller': 2, 'Controller:converter': 3, 'Manager:vaults': 4, 'This:token': 5, 'constructor:_manager': -999, 'setGauge:_gauge': -998, 'swap:_token0': -997, 'swap:_token1': -996, 'earn:_token': -995, 'earn:_strategy': -994, 'deposit:_token': -993, 'depositMultiple:_tokens': -992, 'withdraw:_output': -991}
Add to address_to_label {'Manager:strategist': 1, 'Manager:controller': 2, 'Controller:converter': 3, 'Manager:vaults': 4, 'This:token': 5, 'constructor:_manager': -999, 'setGauge:_gauge': -998, 'swap:_token0': -997, 'swap:_token1': -996, 'earn:_token': -995, 'earn:_strategy': -994, 'deposit:_token': -993, 'depositMultiple:_tokens': -992, 'withdraw:_output': -991, 'withdrawAll:_output': -990}
Add to address_to_label {'Manager:strategist': 1, 'Manager:controller': 2, 'Controller:converter': 3, 'Manager:vaults': 4, 'This:token': 5, 'constructor:_manager': -999, 'setGauge:_gauge': -998, 'swap:_token0': -997, 'swap:_token1': -996, 'earn:_token': -995, 'earn:_strategy': -994, 'deposit:_token': -993, 'depositMultiple:_tokens': -992, 'withdraw:_output': -991, 'withdrawAll:_output': -990, 'available:_token': -989}
Finding type for manager(IManager ... )
Finding type for _symbol(string ... )
Finding type for _balances(mapping(address => uint256) ... )
Finding type for _totalSupply(uint256 ... )
Finding type for MAX(uint256 ... )
Finding type for _allowances(mapping(address => mapping(address => uint256)) ... )
Finding type for totalDepositCap(uint256 ... )
Finding type for _name(string ... )
Finding type for _decimals(uint8 ... )
Finding type for min(uint256 ... )



constructor
Finding type for _name(string ... )
Finding type for _symbol(string ... )
Finding type for _manager(address ... )
prev address? u
Head Addr: -999
    Norm: 0
    Set: {-999}
    Fin: NULL
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: []
    den: []
    norm: u
    link: _manager
    fields: []
    fintype: -1


INTERNAL_CALL, VaultToken.constructor(string,string)(_name_1,_symbol_1)
TMP_66 = CONVERT _manager_1 to IManager
manager_1(IManager) := TMP_66(IManager)
min_1(uint256) := 9500(uint256)
totalDepositCap_1(uint256) := 10000000000000000000000000(uint256)


Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
_name_1
_name_1
_name
_name

Name: _name_1 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_symbol_1
_symbol_1
_symbol
_symbol

Name: _symbol_1 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
INTERNAL_CALL, VaultToken.constructor(string,string)(_name_1,_symbol_1)
Propogating parameters and globals to SSA variables...
_manager_1
_manager_1
_manager

Name: _manager_1 Function: None
Num: 
Den: 
Address: -999
Norm: u
LF: _manager
Value: u
Fields: 
Finance Type: undef
manager_1
manager_1
manager
manager

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_66 = CONVERT _manager_1 to IManager
Converting _manager_1

Name: _manager_1 Function: None
Num: 
Den: 
Address: -999
Norm: u
LF: _manager
Value: u
Fields: 
Finance Type: undef
init
end
Manager
[i]Type for TMP_66

Name: TMP_66 Function: constructor
Num: 
Den: 
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
XXXX
manager_1(IManager) := TMP_66(IManager)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for manager

Name: manager Function: constructor
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
XXXX
Copied manager
 To type: None

Name: manager Function: constructor
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
min_1
min_1
min
min

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
min_1(uint256) := 9500(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for min

Name: min Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 9500
Fields: 
Finance Type: undef
XXXX
Copied min
 To type: None

Name: min Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 9500
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
totalDepositCap_1
totalDepositCap_1
totalDepositCap
totalDepositCap

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
totalDepositCap_1(uint256) := 10000000000000000000000000(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for totalDepositCap

Name: totalDepositCap Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10000000000000000000000000
Fields: 
Finance Type: undef
XXXX
Copied totalDepositCap
 To type: None

Name: totalDepositCap Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10000000000000000000000000
Fields: 
Finance Type: undef


INTERNAL_CALL, VaultToken.constructor(string,string)(_name_1,_symbol_1)
TMP_66 = CONVERT _manager_1 to IManager
manager_1(IManager) := TMP_66(IManager)
min_1(uint256) := 9500(uint256)
totalDepositCap_1(uint256) := 10000000000000000000000000(uint256)


Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
_name_1
_name_1
_name

Name: _name_1 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_symbol_1
_symbol_1
_symbol

Name: _symbol_1 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
INTERNAL_CALL, VaultToken.constructor(string,string)(_name_1,_symbol_1)
Propogating parameters and globals to SSA variables...
_manager_1
_manager_1
_manager

Name: _manager Function: None
Num: 
Den: 
Address: -999
Norm: u
LF: _manager
Value: u
Fields: 
Finance Type: undef
manager_1
manager_1
manager

Name: manager Function: constructor
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_66 = CONVERT _manager_1 to IManager
Converting _manager_1

Name: _manager Function: None
Num: 
Den: 
Address: -999
Norm: u
LF: _manager
Value: u
Fields: 
Finance Type: undef
init
end
Manager
[i]Type for TMP_66

Name: TMP_66 Function: constructor
Num: 
Den: 
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
XXXX
manager_1(IManager) := TMP_66(IManager)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for manager

Name: manager Function: constructor
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
XXXX
Copied manager
 To type: None

Name: manager Function: constructor
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
min_1
min_1
min

Name: min Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 9500
Fields: 
Finance Type: undef
End popogation
min_1(uint256) := 9500(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for min

Name: min Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 9500
Fields: 
Finance Type: undef
XXXX
Copied min
 To type: None

Name: min Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 9500
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
totalDepositCap_1
totalDepositCap_1
totalDepositCap

Name: totalDepositCap Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10000000000000000000000000
Fields: 
Finance Type: undef
End popogation
totalDepositCap_1(uint256) := 10000000000000000000000000(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for totalDepositCap

Name: totalDepositCap Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10000000000000000000000000
Fields: 
Finance Type: undef
XXXX
Copied totalDepositCap
 To type: None

Name: totalDepositCap Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10000000000000000000000000
Fields: 
Finance Type: undef



setGauge
Finding type for _gauge(address ... )
prev address? u
Head Addr: -998
    Norm: 0
    Set: {-998}
    Fin: NULL
Param: 0
    num: []
    den: []
    norm: u
    link: _gauge
    fields: []
    fintype: -1


MODIFIER_CALL, Vault.notHalted()()
MODIFIER_CALL, Vault.onlyStrategist()()
gauge_1(address) := _gauge_1(address)


Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, Vault.notHalted()()
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, Vault.onlyStrategist()()
Propogating parameters and globals to SSA variables...
_gauge_1
_gauge_1
_gauge

Name: _gauge_1 Function: None
Num: 
Den: 
Address: -998
Norm: u
LF: _gauge
Value: u
Fields: 
Finance Type: undef
gauge_1
gauge_1
gauge
gauge

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
gauge_1(address) := _gauge_1(address)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for gauge

Name: gauge Function: setGauge
Num: 
Den: 
Address: -998
Norm: u
LF: _gauge
Value: u
Fields: 
Finance Type: undef
XXXX


MODIFIER_CALL, Vault.notHalted()()
MODIFIER_CALL, Vault.onlyStrategist()()
gauge_1(address) := _gauge_1(address)


Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, Vault.notHalted()()
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, Vault.onlyStrategist()()
Propogating parameters and globals to SSA variables...
_gauge_1
_gauge_1
_gauge

Name: _gauge Function: None
Num: 
Den: 
Address: -998
Norm: u
LF: _gauge
Value: u
Fields: 
Finance Type: undef
gauge_1
gauge_1
gauge

Name: gauge Function: setGauge
Num: 
Den: 
Address: -998
Norm: u
LF: _gauge
Value: u
Fields: 
Finance Type: undef
End popogation
gauge_1(address) := _gauge_1(address)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for gauge

Name: gauge Function: setGauge
Num: 
Den: 
Address: -998
Norm: u
LF: _gauge
Value: u
Fields: 
Finance Type: undef
XXXX



setMin
Finding type for _min(uint256 ... )
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1


MAX_1(uint256) := ϕ(['MAX_0', 'MAX_9', 'MAX_11', 'MAX_13', 'MAX_3'])
MODIFIER_CALL, Vault.notHalted()()
MODIFIER_CALL, Vault.onlyStrategist()()
TMP_70(bool) = _min_1 <= MAX_3
TMP_71(None) = SOLIDITY_CALL require(bool,string)(TMP_70,!_min)
min_2(uint256) := _min_1(uint256)


Propogating parameters and globals to SSA variables...
End popogation
MAX_1
MAX
MAX

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MAX_1(uint256) := ϕ(['MAX_0', 'MAX_9', 'MAX_11', 'MAX_13', 'MAX_3'])
Phi
[i]Type for MAX

Name: MAX Function: setMin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, Vault.notHalted()()
Propogating parameters and globals to SSA variables...
End popogation
manager_34
manager
manager

Name: None Function: None
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
manager_34(IManager) := ϕ(['manager_19', 'manager_28', 'manager_30', 'manager_0', 'manager_37', 'manager_35', 'manager_24', 'manager_6', 'manager_26', 'manager_12', 'manager_39', 'manager_1', 'manager_33'])
Phi
[i]Type for manager

Name: manager Function: notHalted
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
manager_34
manager_34
manager

Name: manager Function: notHalted
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
End popogation
manager_35
manager
manager

Name: None Function: None
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
TMP_220(bool) = HIGH_LEVEL_CALL, dest:manager_34(IManager), function:halted, arguments:[]  
High Call: halted
Running querryfc
[i]Type for TMP_220

Name: TMP_220 Function: notHalted
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
manager_35(IManager) := ϕ(['manager_19', 'manager_28', 'manager_30', 'manager_34', 'manager_37', 'manager_35', 'manager_24', 'manager_6', 'manager_26', 'manager_12', 'manager_39', 'manager_1', 'manager_33'])
Phi
[i]Type for manager

Name: manager Function: notHalted
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_221 = ! TMP_220 
[i]Type for TMP_221

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_222(None) = SOLIDITY_CALL require(bool,string)(TMP_221,halted)
[i]Type for TMP_222

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
manager_34
manager

Name: manager Function: notHalted
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
manager_34(IManager) := ϕ(['manager_19', 'manager_28', 'manager_30', 'manager_0', 'manager_37', 'manager_35', 'manager_24', 'manager_6', 'manager_26', 'manager_12', 'manager_39', 'manager_1', 'manager_33'])
Phi
[i]Type for manager

Name: manager Function: notHalted
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
manager_34
manager_34
manager

Name: manager Function: notHalted
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
End popogation
manager_35
manager

Name: manager Function: notHalted
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
TMP_220(bool) = HIGH_LEVEL_CALL, dest:manager_34(IManager), function:halted, arguments:[]  
High Call: halted
Running querryfc
[i]Type for TMP_220

Name: TMP_220 Function: notHalted
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
manager_35(IManager) := ϕ(['manager_19', 'manager_28', 'manager_30', 'manager_34', 'manager_37', 'manager_35', 'manager_24', 'manager_6', 'manager_26', 'manager_12', 'manager_39', 'manager_1', 'manager_33'])
Phi
[i]Type for manager

Name: manager Function: notHalted
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_221 = ! TMP_220 
[i]Type for TMP_221

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_222(None) = SOLIDITY_CALL require(bool,string)(TMP_221,halted)
[i]Type for TMP_222

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, Vault.onlyStrategist()()
Propogating parameters and globals to SSA variables...
End popogation
manager_38
manager
manager

Name: None Function: None
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
manager_38(IManager) := ϕ(['manager_19', 'manager_28', 'manager_30', 'manager_0', 'manager_37', 'manager_35', 'manager_24', 'manager_6', 'manager_26', 'manager_12', 'manager_39', 'manager_1', 'manager_33'])
Phi
[i]Type for manager

Name: manager Function: onlyStrategist
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
manager_38
manager_38
manager

Name: manager Function: onlyStrategist
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
End popogation
manager_39
manager
manager

Name: None Function: None
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
TMP_226(address) = HIGH_LEVEL_CALL, dest:manager_38(IManager), function:strategist, arguments:[]  
High Call: strategist
Running querryfc
Written func info: Manager, strategist
Retvar: ('c', [-1], [-1], 'u', 'u', 1)
([-1], [-1], 'u', 'u', 1, -1)
[i]Type for TMP_226

Name: TMP_226 Function: onlyStrategist
Num: -1
Den: -1
Address: 1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
manager_39(IManager) := ϕ(['manager_19', 'manager_28', 'manager_30', 'manager_38', 'manager_37', 'manager_35', 'manager_24', 'manager_6', 'manager_26', 'manager_12', 'manager_39', 'manager_1', 'manager_33'])
Phi
[i]Type for manager

Name: manager Function: onlyStrategist
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_227(bool) = msg.sender == TMP_226
[i]Type for TMP_227

Name: TMP_227 Function: onlyStrategist
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_228(None) = SOLIDITY_CALL require(bool,string)(TMP_227,!strategist)
[i]Type for TMP_228

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
manager_38
manager

Name: manager Function: onlyStrategist
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
manager_38(IManager) := ϕ(['manager_19', 'manager_28', 'manager_30', 'manager_0', 'manager_37', 'manager_35', 'manager_24', 'manager_6', 'manager_26', 'manager_12', 'manager_39', 'manager_1', 'manager_33'])
Phi
[i]Type for manager

Name: manager Function: onlyStrategist
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
manager_38
manager_38
manager

Name: manager Function: onlyStrategist
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
End popogation
manager_39
manager

Name: manager Function: onlyStrategist
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
TMP_226(address) = HIGH_LEVEL_CALL, dest:manager_38(IManager), function:strategist, arguments:[]  
High Call: strategist
Running querryfc
Written func info: Manager, strategist
Retvar: ('c', [-1], [-1], 'u', 'u', 1)
([-1], [-1], 'u', 'u', 1, -1)
[i]Type for TMP_226

Name: TMP_226 Function: onlyStrategist
Num: -1
Den: -1
Address: 1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
manager_39(IManager) := ϕ(['manager_19', 'manager_28', 'manager_30', 'manager_38', 'manager_37', 'manager_35', 'manager_24', 'manager_6', 'manager_26', 'manager_12', 'manager_39', 'manager_1', 'manager_33'])
Phi
[i]Type for manager

Name: manager Function: onlyStrategist
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_227(bool) = msg.sender == TMP_226
[i]Type for TMP_227

Name: TMP_227 Function: onlyStrategist
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_228(None) = SOLIDITY_CALL require(bool,string)(TMP_227,!strategist)
[i]Type for TMP_228

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
MAX_3
MAX_3
MAX
MAX

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_min_1
_min_1
_min
_min

Name: _min_1 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_70(bool) = _min_1 <= MAX_3
init
end
init
end
A: u B: u
x
lnorm: u rnorm: u
init
end
[i]Type for TMP_70

Name: TMP_70 Function: setMin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_71(None) = SOLIDITY_CALL require(bool,string)(TMP_70,!_min)
[i]Type for TMP_71

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_min_1
_min_1
_min
_min

Name: _min_1 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
min_2
min_2
min
min

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 9500
Fields: 
Finance Type: undef
End popogation
min_2(uint256) := _min_1(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for min

Name: min Function: setMin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX


MAX_1(uint256) := ϕ(['MAX_0', 'MAX_9', 'MAX_11', 'MAX_13', 'MAX_3'])
MODIFIER_CALL, Vault.notHalted()()
MODIFIER_CALL, Vault.onlyStrategist()()
TMP_70(bool) = _min_1 <= MAX_3
TMP_71(None) = SOLIDITY_CALL require(bool,string)(TMP_70,!_min)
min_2(uint256) := _min_1(uint256)


Propogating parameters and globals to SSA variables...
End popogation
MAX_1
MAX

Name: MAX Function: setMin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MAX_1(uint256) := ϕ(['MAX_0', 'MAX_9', 'MAX_11', 'MAX_13', 'MAX_3'])
Phi
[i]Type for MAX

Name: MAX Function: setMin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, Vault.notHalted()()
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, Vault.onlyStrategist()()
Propogating parameters and globals to SSA variables...
MAX_3
MAX_3
MAX

Name: MAX Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_min_1
_min_1
_min
_min

Name: _min_1 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_70(bool) = _min_1 <= MAX_3
init
end
init
end
A: u B: u
x
lnorm: u rnorm: u
init
end
[i]Type for TMP_70

Name: TMP_70 Function: setMin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_71(None) = SOLIDITY_CALL require(bool,string)(TMP_70,!_min)
[i]Type for TMP_71

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_min_1
_min_1
_min
_min

Name: _min_1 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
min_2
min_2
min

Name: min Function: setMin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
min_2(uint256) := _min_1(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for min

Name: min Function: setMin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX



setTotalDepositCap
Finding type for _totalDepositCap(uint256 ... )
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1


MODIFIER_CALL, Vault.notHalted()()
MODIFIER_CALL, Vault.onlyStrategist()()
totalDepositCap_2(uint256) := _totalDepositCap_1(uint256)


Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, Vault.notHalted()()
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, Vault.onlyStrategist()()
Propogating parameters and globals to SSA variables...
_totalDepositCap_1
_totalDepositCap_1
_totalDepositCap
_totalDepositCap

Name: _totalDepositCap_1 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
totalDepositCap_2
totalDepositCap_2
totalDepositCap
totalDepositCap

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10000000000000000000000000
Fields: 
Finance Type: undef
End popogation
totalDepositCap_2(uint256) := _totalDepositCap_1(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for totalDepositCap

Name: totalDepositCap Function: setTotalDepositCap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX


MODIFIER_CALL, Vault.notHalted()()
MODIFIER_CALL, Vault.onlyStrategist()()
totalDepositCap_2(uint256) := _totalDepositCap_1(uint256)


Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, Vault.notHalted()()
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, Vault.onlyStrategist()()
Propogating parameters and globals to SSA variables...
_totalDepositCap_1
_totalDepositCap_1
_totalDepositCap
_totalDepositCap

Name: _totalDepositCap_1 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
totalDepositCap_2
totalDepositCap_2
totalDepositCap

Name: totalDepositCap Function: setTotalDepositCap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
totalDepositCap_2(uint256) := _totalDepositCap_1(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for totalDepositCap

Name: totalDepositCap Function: setTotalDepositCap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX



swap
Finding type for _token0(address ... )
prev address? u
Head Addr: -997
    Norm: 6
    Set: {-997}
    Fin: NULL
Finding type for _token1(address ... )
prev address? u
Head Addr: -996
    Norm: 18
    Set: {-996}
    Fin: NULL
Finding type for _expectedAmount(uint256 ... )
Param: 0
    num: []
    den: []
    norm: u
    link: _token0
    fields: []
    fintype: -1
Param: 1
    num: []
    den: []
    norm: u
    link: _token1
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1


manager_2(IManager) := ϕ(['manager_19', 'manager_28', 'manager_30', 'manager_0', 'manager_37', 'manager_35', 'manager_24', 'manager_6', 'manager_26', 'manager_12', 'manager_39', 'manager_1', 'manager_33'])
MODIFIER_CALL, Vault.notHalted()()
manager_3(IManager) := ϕ(['manager_35'])
MODIFIER_CALL, Vault.onlyStrategist()()
manager_4(IManager) := ϕ(['manager_39'])
TMP_76 = CONVERT this to address
TMP_77(address) = HIGH_LEVEL_CALL, dest:manager_4(IManager), function:controllers, arguments:['TMP_76']  
manager_5(IManager) := ϕ(['manager_19', 'manager_28', 'manager_30', 'manager_37', 'manager_35', 'manager_24', 'manager_4', 'manager_6', 'manager_26', 'manager_12', 'manager_39', 'manager_1', 'manager_33'])
TMP_78 = CONVERT TMP_77 to IController
TMP_79 = CONVERT this to address
TMP_80(address) = HIGH_LEVEL_CALL, dest:TMP_78(IController), function:converter, arguments:['TMP_79']  
manager_6(IManager) := ϕ(['manager_19', 'manager_28', 'manager_30', 'manager_5', 'manager_37', 'manager_35', 'manager_24', 'manager_6', 'manager_26', 'manager_12', 'manager_39', 'manager_1', 'manager_33'])
TMP_81 = CONVERT TMP_80 to IConverter
_converter_1(IConverter) := TMP_81(IConverter)
TMP_82 = CONVERT _token0_1 to IERC20
TMP_83 = CONVERT this to address
TMP_84(uint256) = HIGH_LEVEL_CALL, dest:TMP_82(IERC20), function:balanceOf, arguments:['TMP_83']  
_balance_1(uint256) := TMP_84(uint256)
TMP_85 = CONVERT _token0_1 to IERC20
TMP_86 = CONVERT _converter_1 to address
LIBRARY_CALL, dest:SafeERC20, function:SafeERC20.safeTransfer(IERC20,address,uint256), arguments:['TMP_85', 'TMP_86', '_balance_1'] 
TMP_88(uint256) = HIGH_LEVEL_CALL, dest:_converter_1(IConverter), function:convert, arguments:['_token0_1', '_token1_1', '_balance_1', '_expectedAmount_1']  
_balance_2(uint256) := TMP_88(uint256)


Propogating parameters and globals to SSA variables...
End popogation
manager_2
manager
manager

Name: None Function: None
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
manager_2(IManager) := ϕ(['manager_19', 'manager_28', 'manager_30', 'manager_0', 'manager_37', 'manager_35', 'manager_24', 'manager_6', 'manager_26', 'manager_12', 'manager_39', 'manager_1', 'manager_33'])
Phi
[i]Type for manager

Name: manager Function: swap
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
manager_3
manager
manager

Name: None Function: None
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
MODIFIER_CALL, Vault.notHalted()()
manager_3(IManager) := ϕ(['manager_35'])
Phi
[i]Type for manager

Name: manager Function: swap
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
manager_4
manager
manager

Name: None Function: None
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
MODIFIER_CALL, Vault.onlyStrategist()()
manager_4(IManager) := ϕ(['manager_39'])
Phi
[i]Type for manager

Name: manager Function: swap
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
manager_4
manager_4
manager

Name: manager Function: swap
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
_converter_1
_converter_1
_converter
_converter

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
manager_5
manager
manager

Name: None Function: None
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
manager_6
manager
manager

Name: None Function: None
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
TMP_76 = CONVERT this to address
Converting this
new address made for this
prev address? u
global assignment: 6
6
6
[i]Type for TMP_76

Name: TMP_76 Function: swap
Num: -1
Den: -1
Address: 6
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_77(address) = HIGH_LEVEL_CALL, dest:manager_4(IManager), function:controllers, arguments:['TMP_76']  
High Call: controllers
Running querryfc
Written func info: Manager, controllers
Retvar: ('c', [-1], [-1], 'u', 'u', 2)
([-1], [-1], 'u', 'u', 2, -1)
[i]Type for TMP_77

Name: TMP_77 Function: swap
Num: -1
Den: -1
Address: 2
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
manager_5(IManager) := ϕ(['manager_19', 'manager_28', 'manager_30', 'manager_37', 'manager_35', 'manager_24', 'manager_4', 'manager_6', 'manager_26', 'manager_12', 'manager_39', 'manager_1', 'manager_33'])
Phi
[i]Type for manager

Name: manager Function: swap
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_78 = CONVERT TMP_77 to IController
Converting TMP_77

Name: TMP_77 Function: swap
Num: -1
Den: -1
Address: 2
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
Controller
[i]Type for TMP_78

Name: TMP_78 Function: swap
Num: -1
Den: -1
Address: 2
Norm: u
LF: Controller
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_79 = CONVERT this to address
Converting this
6
[i]Type for TMP_79

Name: TMP_79 Function: swap
Num: -1
Den: -1
Address: 6
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_80(address) = HIGH_LEVEL_CALL, dest:TMP_78(IController), function:converter, arguments:['TMP_79']  
High Call: converter
Running querryfc
Written func info: Controller, converter
Retvar: ('c', [-1], [-1], 'u', 'u', 3)
([-1], [-1], 'u', 'u', 3, -1)
[i]Type for TMP_80

Name: TMP_80 Function: swap
Num: -1
Den: -1
Address: 3
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
manager_6(IManager) := ϕ(['manager_19', 'manager_28', 'manager_30', 'manager_5', 'manager_37', 'manager_35', 'manager_24', 'manager_6', 'manager_26', 'manager_12', 'manager_39', 'manager_1', 'manager_33'])
Phi
[i]Type for manager

Name: manager Function: swap
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_81 = CONVERT TMP_80 to IConverter
Converting TMP_80

Name: TMP_80 Function: swap
Num: -1
Den: -1
Address: 3
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
Converter
[i]Type for TMP_81

Name: TMP_81 Function: swap
Num: -1
Den: -1
Address: 3
Norm: u
LF: Converter
Value: u
Fields: 
Finance Type: undef
XXXX
_converter_1(IConverter) := TMP_81(IConverter)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for _converter

Name: _converter Function: swap
Num: -1
Den: -1
Address: 3
Norm: u
LF: Converter
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_token0_1
_token0_1
_token0

Name: _token0_1 Function: None
Num: 
Den: 
Address: -997
Norm: u
LF: _token0
Value: u
Fields: 
Finance Type: undef
_balance_1
_balance_1
_balance
_balance

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_82 = CONVERT _token0_1 to IERC20
Converting _token0_1

Name: _token0_1 Function: None
Num: 
Den: 
Address: -997
Norm: u
LF: _token0
Value: u
Fields: 
Finance Type: undef
init
end
ERC20
[i]Type for TMP_82

Name: TMP_82 Function: swap
Num: 
Den: 
Address: -997
Norm: u
LF: ERC20
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_83 = CONVERT this to address
Converting this
6
[i]Type for TMP_83

Name: TMP_83 Function: swap
Num: -1
Den: -1
Address: 6
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_84(uint256) = HIGH_LEVEL_CALL, dest:TMP_82(IERC20), function:balanceOf, arguments:['TMP_83']  
High Call: balanceOf
Running querryfc
Written func info: ERC20, balanceOf
Handling balance function!
-997
[i]Type for TMP_84

Name: TMP_84 Function: swap
Num: -997
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_balance_1(uint256) := TMP_84(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for _balance

Name: _balance Function: swap
Num: -997
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_token0_1
_token0_1
_token0

Name: _token0 Function: None
Num: 
Den: 
Address: -997
Norm: u
LF: _token0
Value: u
Fields: 
Finance Type: undef
_converter_1
_converter_1
_converter

Name: _converter Function: swap
Num: -1
Den: -1
Address: 3
Norm: u
LF: Converter
Value: u
Fields: 
Finance Type: undef
_balance_1
_balance_1
_balance

Name: _balance Function: swap
Num: -997
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_85 = CONVERT _token0_1 to IERC20
Converting _token0_1

Name: _token0 Function: None
Num: 
Den: 
Address: -997
Norm: u
LF: _token0
Value: u
Fields: 
Finance Type: undef
init
end
ERC20
[i]Type for TMP_85

Name: TMP_85 Function: swap
Num: 
Den: 
Address: -997
Norm: u
LF: ERC20
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_86 = CONVERT _converter_1 to address
Converting _converter_1

Name: _converter Function: swap
Num: -1
Den: -1
Address: 3
Norm: u
LF: Converter
Value: u
Fields: 
Finance Type: undef
init
end
[i]Type for TMP_86

Name: TMP_86 Function: swap
Num: -1
Den: -1
Address: 3
Norm: u
LF: Converter
Value: u
Fields: 
Finance Type: undef
XXXX
LIBRARY_CALL, dest:SafeERC20, function:SafeERC20.safeTransfer(IERC20,address,uint256), arguments:['TMP_85', 'TMP_86', '_balance_1'] 
Propogating parameters and globals to SSA variables...
_converter_1
_converter_1
_converter

Name: _converter Function: swap
Num: -1
Den: -1
Address: 3
Norm: u
LF: Converter
Value: u
Fields: 
Finance Type: undef
_token1_1
_token1_1
_token1

Name: _token1_1 Function: None
Num: 
Den: 
Address: -996
Norm: u
LF: _token1
Value: u
Fields: 
Finance Type: undef
_expectedAmount_1
_expectedAmount_1
_expectedAmount
_expectedAmount

Name: _expectedAmount_1 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_balance_1
_balance_1
_balance

Name: _balance Function: swap
Num: -997
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
_token0_1
_token0_1
_token0

Name: _token0 Function: None
Num: 
Den: 
Address: -997
Norm: u
LF: _token0
Value: u
Fields: 
Finance Type: undef
_balance_2
_balance_2
_balance
_balance

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_88(uint256) = HIGH_LEVEL_CALL, dest:_converter_1(IConverter), function:convert, arguments:['_token0_1', '_token1_1', '_balance_1', '_expectedAmount_1']  
High Call: convert
Running querryfc
Written func info: Converter, convert
Handling balance function!
3
Finding type for hlc_0(uint256 ... )
[i]Type for TMP_88

Name: TMP_88 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_balance_2(uint256) := TMP_88(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for _balance

Name: _balance Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX


manager_2(IManager) := ϕ(['manager_19', 'manager_28', 'manager_30', 'manager_0', 'manager_37', 'manager_35', 'manager_24', 'manager_6', 'manager_26', 'manager_12', 'manager_39', 'manager_1', 'manager_33'])
MODIFIER_CALL, Vault.notHalted()()
manager_3(IManager) := ϕ(['manager_35'])
MODIFIER_CALL, Vault.onlyStrategist()()
manager_4(IManager) := ϕ(['manager_39'])
TMP_76 = CONVERT this to address
TMP_77(address) = HIGH_LEVEL_CALL, dest:manager_4(IManager), function:controllers, arguments:['TMP_76']  
manager_5(IManager) := ϕ(['manager_19', 'manager_28', 'manager_30', 'manager_37', 'manager_35', 'manager_24', 'manager_4', 'manager_6', 'manager_26', 'manager_12', 'manager_39', 'manager_1', 'manager_33'])
TMP_78 = CONVERT TMP_77 to IController
TMP_79 = CONVERT this to address
TMP_80(address) = HIGH_LEVEL_CALL, dest:TMP_78(IController), function:converter, arguments:['TMP_79']  
manager_6(IManager) := ϕ(['manager_19', 'manager_28', 'manager_30', 'manager_5', 'manager_37', 'manager_35', 'manager_24', 'manager_6', 'manager_26', 'manager_12', 'manager_39', 'manager_1', 'manager_33'])
TMP_81 = CONVERT TMP_80 to IConverter
_converter_1(IConverter) := TMP_81(IConverter)
TMP_82 = CONVERT _token0_1 to IERC20
TMP_83 = CONVERT this to address
TMP_84(uint256) = HIGH_LEVEL_CALL, dest:TMP_82(IERC20), function:balanceOf, arguments:['TMP_83']  
_balance_1(uint256) := TMP_84(uint256)
TMP_85 = CONVERT _token0_1 to IERC20
TMP_86 = CONVERT _converter_1 to address
LIBRARY_CALL, dest:SafeERC20, function:SafeERC20.safeTransfer(IERC20,address,uint256), arguments:['TMP_85', 'TMP_86', '_balance_1'] 
TMP_88(uint256) = HIGH_LEVEL_CALL, dest:_converter_1(IConverter), function:convert, arguments:['_token0_1', '_token1_1', '_balance_1', '_expectedAmount_1']  
_balance_2(uint256) := TMP_88(uint256)


Propogating parameters and globals to SSA variables...
End popogation
manager_2
manager

Name: manager Function: swap
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
manager_2(IManager) := ϕ(['manager_19', 'manager_28', 'manager_30', 'manager_0', 'manager_37', 'manager_35', 'manager_24', 'manager_6', 'manager_26', 'manager_12', 'manager_39', 'manager_1', 'manager_33'])
Phi
[i]Type for manager

Name: manager Function: swap
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
manager_3
manager

Name: manager Function: swap
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
MODIFIER_CALL, Vault.notHalted()()
manager_3(IManager) := ϕ(['manager_35'])
Phi
[i]Type for manager

Name: manager Function: swap
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
manager_4
manager

Name: manager Function: swap
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
MODIFIER_CALL, Vault.onlyStrategist()()
manager_4(IManager) := ϕ(['manager_39'])
Phi
[i]Type for manager

Name: manager Function: swap
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
manager_4
manager_4
manager

Name: manager Function: swap
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
_converter_1
_converter_1
_converter
_converter

Name: _converter Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: Converter
Value: u
Fields: 
Finance Type: undef
End popogation
manager_5
manager

Name: manager Function: swap
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
manager_6
manager

Name: manager Function: swap
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
TMP_76 = CONVERT this to address
Converting this
6
[i]Type for TMP_76

Name: TMP_76 Function: swap
Num: 
Den: 
Address: 6
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_77(address) = HIGH_LEVEL_CALL, dest:manager_4(IManager), function:controllers, arguments:['TMP_76']  
High Call: controllers
Running querryfc
Written func info: Manager, controllers
Retvar: ('c', [-1], [-1], 'u', 'u', 2)
([-1], [-1], 'u', 'u', 2, -1)
[i]Type for TMP_77

Name: TMP_77 Function: swap
Num: -1
Den: -1
Address: 2
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
manager_5(IManager) := ϕ(['manager_19', 'manager_28', 'manager_30', 'manager_37', 'manager_35', 'manager_24', 'manager_4', 'manager_6', 'manager_26', 'manager_12', 'manager_39', 'manager_1', 'manager_33'])
Phi
[i]Type for manager

Name: manager Function: swap
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_78 = CONVERT TMP_77 to IController
Converting TMP_77

Name: TMP_77 Function: swap
Num: -1
Den: -1
Address: 2
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
Controller
[i]Type for TMP_78

Name: TMP_78 Function: swap
Num: -1
Den: -1
Address: 2
Norm: u
LF: Controller
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_79 = CONVERT this to address
Converting this
6
[i]Type for TMP_79

Name: TMP_79 Function: swap
Num: 
Den: 
Address: 6
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_80(address) = HIGH_LEVEL_CALL, dest:TMP_78(IController), function:converter, arguments:['TMP_79']  
High Call: converter
Running querryfc
Written func info: Controller, converter
Retvar: ('c', [-1], [-1], 'u', 'u', 3)
([-1], [-1], 'u', 'u', 3, -1)
[i]Type for TMP_80

Name: TMP_80 Function: swap
Num: -1
Den: -1
Address: 3
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
manager_6(IManager) := ϕ(['manager_19', 'manager_28', 'manager_30', 'manager_5', 'manager_37', 'manager_35', 'manager_24', 'manager_6', 'manager_26', 'manager_12', 'manager_39', 'manager_1', 'manager_33'])
Phi
[i]Type for manager

Name: manager Function: swap
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_81 = CONVERT TMP_80 to IConverter
Converting TMP_80

Name: TMP_80 Function: swap
Num: -1
Den: -1
Address: 3
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
Converter
[i]Type for TMP_81

Name: TMP_81 Function: swap
Num: -1
Den: -1
Address: 3
Norm: u
LF: Converter
Value: u
Fields: 
Finance Type: undef
XXXX
_converter_1(IConverter) := TMP_81(IConverter)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for _converter

Name: _converter Function: swap
Num: -1
Den: -1
Address: 3
Norm: u
LF: Converter
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_token0_1
_token0_1
_token0

Name: _token0 Function: None
Num: 
Den: 
Address: -997
Norm: u
LF: _token0
Value: u
Fields: 
Finance Type: undef
_balance_1
_balance_1
_balance
_balance

Name: _balance Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_82 = CONVERT _token0_1 to IERC20
Converting _token0_1

Name: _token0 Function: None
Num: 
Den: 
Address: -997
Norm: u
LF: _token0
Value: u
Fields: 
Finance Type: undef
init
end
ERC20
[i]Type for TMP_82

Name: TMP_82 Function: swap
Num: 
Den: 
Address: -997
Norm: u
LF: ERC20
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_83 = CONVERT this to address
Converting this
6
[i]Type for TMP_83

Name: TMP_83 Function: swap
Num: 
Den: 
Address: 6
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_84(uint256) = HIGH_LEVEL_CALL, dest:TMP_82(IERC20), function:balanceOf, arguments:['TMP_83']  
High Call: balanceOf
Running querryfc
Written func info: ERC20, balanceOf
Handling balance function!
-997
[i]Type for TMP_84

Name: TMP_84 Function: swap
Num: -997
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_balance_1(uint256) := TMP_84(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for _balance

Name: _balance Function: swap
Num: -997
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_token0_1
_token0_1
_token0

Name: _token0 Function: None
Num: 
Den: 
Address: -997
Norm: u
LF: _token0
Value: u
Fields: 
Finance Type: undef
_converter_1
_converter_1
_converter

Name: _converter Function: swap
Num: -1
Den: -1
Address: 3
Norm: u
LF: Converter
Value: u
Fields: 
Finance Type: undef
_balance_1
_balance_1
_balance

Name: _balance Function: swap
Num: -997
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_85 = CONVERT _token0_1 to IERC20
Converting _token0_1

Name: _token0 Function: None
Num: 
Den: 
Address: -997
Norm: u
LF: _token0
Value: u
Fields: 
Finance Type: undef
init
end
ERC20
[i]Type for TMP_85

Name: TMP_85 Function: swap
Num: 
Den: 
Address: -997
Norm: u
LF: ERC20
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_86 = CONVERT _converter_1 to address
Converting _converter_1

Name: _converter Function: swap
Num: -1
Den: -1
Address: 3
Norm: u
LF: Converter
Value: u
Fields: 
Finance Type: undef
init
end
[i]Type for TMP_86

Name: TMP_86 Function: swap
Num: -1
Den: -1
Address: 3
Norm: u
LF: Converter
Value: u
Fields: 
Finance Type: undef
XXXX
LIBRARY_CALL, dest:SafeERC20, function:SafeERC20.safeTransfer(IERC20,address,uint256), arguments:['TMP_85', 'TMP_86', '_balance_1'] 
Propogating parameters and globals to SSA variables...
_converter_1
_converter_1
_converter

Name: _converter Function: swap
Num: -1
Den: -1
Address: 3
Norm: u
LF: Converter
Value: u
Fields: 
Finance Type: undef
_token1_1
_token1_1
_token1

Name: _token1_1 Function: None
Num: 
Den: 
Address: -996
Norm: u
LF: _token1
Value: u
Fields: 
Finance Type: undef
_expectedAmount_1
_expectedAmount_1
_expectedAmount
_expectedAmount

Name: _expectedAmount_1 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_balance_1
_balance_1
_balance

Name: _balance Function: swap
Num: -997
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
_token0_1
_token0_1
_token0

Name: _token0 Function: None
Num: 
Den: 
Address: -997
Norm: u
LF: _token0
Value: u
Fields: 
Finance Type: undef
_balance_2
_balance_2
_balance
_balance

Name: _balance Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_88(uint256) = HIGH_LEVEL_CALL, dest:_converter_1(IConverter), function:convert, arguments:['_token0_1', '_token1_1', '_balance_1', '_expectedAmount_1']  
High Call: convert
Running querryfc
Written func info: Converter, convert
Handling balance function!
3
Finding type for hlc_1(uint256 ... )
[i]Type for TMP_88

Name: TMP_88 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_balance_2(uint256) := TMP_88(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for _balance

Name: _balance Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX



earn
Finding type for _token(address ... )
prev address? u
Head Addr: -995
    Norm: 6
    Set: {-995}
    Fin: NULL
Finding type for _strategy(address ... )
prev address? u
Head Addr: -994
    Norm: 0
    Set: {-994}
    Fin: NULL
Param: 0
    num: []
    den: []
    norm: u
    link: _token
    fields: []
    fintype: -1
Param: 1
    num: []
    den: []
    norm: u
    link: _strategy
    fields: []
    fintype: -1


manager_7(IManager) := ϕ(['manager_19', 'manager_28', 'manager_30', 'manager_0', 'manager_37', 'manager_35', 'manager_24', 'manager_6', 'manager_26', 'manager_12', 'manager_39', 'manager_1', 'manager_33'])
MODIFIER_CALL, Vault.checkToken(address)(_token_1)
manager_8(IManager) := ϕ(['manager_33'])
MODIFIER_CALL, Vault.notHalted()()
manager_9(IManager) := ϕ(['manager_35'])
MODIFIER_CALL, Vault.onlyHarvester()()
manager_10(IManager) := ϕ(['manager_37'])
TMP_91(bool) = HIGH_LEVEL_CALL, dest:manager_10(IManager), function:allowedStrategies, arguments:['_strategy_1']  
manager_11(IManager) := ϕ(['manager_19', 'manager_28', 'manager_30', 'manager_10', 'manager_37', 'manager_35', 'manager_24', 'manager_6', 'manager_26', 'manager_12', 'manager_39', 'manager_1', 'manager_33'])
TMP_92(None) = SOLIDITY_CALL require(bool,string)(TMP_91,!_strategy)
TMP_93 = CONVERT this to address
TMP_94(address) = HIGH_LEVEL_CALL, dest:manager_11(IManager), function:controllers, arguments:['TMP_93']  
manager_12(IManager) := ϕ(['manager_19', 'manager_28', 'manager_30', 'manager_11', 'manager_37', 'manager_35', 'manager_24', 'manager_6', 'manager_26', 'manager_12', 'manager_39', 'manager_1', 'manager_33'])
TMP_95 = CONVERT TMP_94 to IController
_controller_1(IController) := TMP_95(IController)
TMP_96(bool) = HIGH_LEVEL_CALL, dest:_controller_1(IController), function:investEnabled, arguments:[]  
CONDITION TMP_96
TMP_97(uint256) = INTERNAL_CALL, Vault.available(address)(_token_1)
_balance_1(uint256) := TMP_97(uint256)
TMP_98 = CONVERT _token_1 to IERC20
TMP_99 = CONVERT _controller_1 to address
LIBRARY_CALL, dest:SafeERC20, function:SafeERC20.safeTransfer(IERC20,address,uint256), arguments:['TMP_98', 'TMP_99', '_balance_1'] 
HIGH_LEVEL_CALL, dest:_controller_1(IController), function:earn, arguments:['_strategy_1', '_token_1', '_balance_1']  
Emit Earn(_token_1,_balance_1)


Propogating parameters and globals to SSA variables...
End popogation
manager_7
manager
manager

Name: None Function: None
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
manager_7(IManager) := ϕ(['manager_19', 'manager_28', 'manager_30', 'manager_0', 'manager_37', 'manager_35', 'manager_24', 'manager_6', 'manager_26', 'manager_12', 'manager_39', 'manager_1', 'manager_33'])
Phi
[i]Type for manager

Name: manager Function: earn
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_token_1
_token_1
_token

Name: _token_1 Function: None
Num: 
Den: 
Address: -995
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
End popogation
manager_8
manager
manager

Name: None Function: None
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
MODIFIER_CALL, Vault.checkToken(address)(_token_1)
manager_8(IManager) := ϕ(['manager_33'])
Phi
[i]Type for manager

Name: manager Function: earn
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
manager_9
manager
manager

Name: None Function: None
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
MODIFIER_CALL, Vault.notHalted()()
manager_9(IManager) := ϕ(['manager_35'])
Phi
[i]Type for manager

Name: manager Function: earn
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
manager_10
manager
manager

Name: None Function: None
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
MODIFIER_CALL, Vault.onlyHarvester()()
manager_10(IManager) := ϕ(['manager_37'])
Phi
[i]Type for manager

Name: manager Function: earn
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
manager_10
manager_10
manager

Name: manager Function: earn
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
_strategy_1
_strategy_1
_strategy

Name: _strategy_1 Function: None
Num: 
Den: 
Address: -994
Norm: u
LF: _strategy
Value: u
Fields: 
Finance Type: undef
End popogation
manager_11
manager
manager

Name: None Function: None
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
TMP_91(bool) = HIGH_LEVEL_CALL, dest:manager_10(IManager), function:allowedStrategies, arguments:['_strategy_1']  
High Call: allowedStrategies
Running querryfc
[i]Type for TMP_91

Name: TMP_91 Function: earn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
manager_11(IManager) := ϕ(['manager_19', 'manager_28', 'manager_30', 'manager_10', 'manager_37', 'manager_35', 'manager_24', 'manager_6', 'manager_26', 'manager_12', 'manager_39', 'manager_1', 'manager_33'])
Phi
[i]Type for manager

Name: manager Function: earn
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_92(None) = SOLIDITY_CALL require(bool,string)(TMP_91,!_strategy)
[i]Type for TMP_92

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
manager_11
manager_11
manager

Name: manager Function: earn
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
_controller_1
_controller_1
_controller
_controller

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
manager_12
manager
manager

Name: None Function: None
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
TMP_93 = CONVERT this to address
Converting this
6
[i]Type for TMP_93

Name: TMP_93 Function: earn
Num: -1
Den: -1
Address: 6
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_94(address) = HIGH_LEVEL_CALL, dest:manager_11(IManager), function:controllers, arguments:['TMP_93']  
High Call: controllers
Running querryfc
Written func info: Manager, controllers
Retvar: ('c', [-1], [-1], 'u', 'u', 2)
([-1], [-1], 'u', 'u', 2, -1)
[i]Type for TMP_94

Name: TMP_94 Function: earn
Num: -1
Den: -1
Address: 2
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
manager_12(IManager) := ϕ(['manager_19', 'manager_28', 'manager_30', 'manager_11', 'manager_37', 'manager_35', 'manager_24', 'manager_6', 'manager_26', 'manager_12', 'manager_39', 'manager_1', 'manager_33'])
Phi
[i]Type for manager

Name: manager Function: earn
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_95 = CONVERT TMP_94 to IController
Converting TMP_94

Name: TMP_94 Function: earn
Num: -1
Den: -1
Address: 2
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
Controller
[i]Type for TMP_95

Name: TMP_95 Function: earn
Num: -1
Den: -1
Address: 2
Norm: u
LF: Controller
Value: u
Fields: 
Finance Type: undef
XXXX
_controller_1(IController) := TMP_95(IController)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for _controller

Name: _controller Function: earn
Num: -1
Den: -1
Address: 2
Norm: u
LF: Controller
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_controller_1
_controller_1
_controller

Name: _controller Function: earn
Num: -1
Den: -1
Address: 2
Norm: u
LF: Controller
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_96(bool) = HIGH_LEVEL_CALL, dest:_controller_1(IController), function:investEnabled, arguments:[]  
High Call: investEnabled
Running querryfc
[i]Type for TMP_96

Name: TMP_96 Function: earn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_token_1
_token_1
_token

Name: _token_1 Function: None
Num: 
Den: 
Address: -995
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
_balance_1
_balance_1
_balance
_balance

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_97(uint256) = INTERNAL_CALL, Vault.available(address)(_token_1)
[i]Type for TMP_97

Name: TMP_97 Function: earn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_balance_1(uint256) := TMP_97(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for _balance

Name: _balance Function: earn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_balance_1
_balance_1
_balance
_balance

Name: _balance Function: earn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_controller_1
_controller_1
_controller

Name: _controller Function: earn
Num: -1
Den: -1
Address: 2
Norm: u
LF: Controller
Value: u
Fields: 
Finance Type: undef
_token_1
_token_1
_token

Name: _token_1 Function: None
Num: 
Den: 
Address: -995
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_98 = CONVERT _token_1 to IERC20
Converting _token_1

Name: _token_1 Function: None
Num: 
Den: 
Address: -995
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
init
end
ERC20
[i]Type for TMP_98

Name: TMP_98 Function: earn
Num: 
Den: 
Address: -995
Norm: u
LF: ERC20
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_99 = CONVERT _controller_1 to address
Converting _controller_1

Name: _controller Function: earn
Num: -1
Den: -1
Address: 2
Norm: u
LF: Controller
Value: u
Fields: 
Finance Type: undef
init
end
[i]Type for TMP_99

Name: TMP_99 Function: earn
Num: -1
Den: -1
Address: 2
Norm: u
LF: Controller
Value: u
Fields: 
Finance Type: undef
XXXX
LIBRARY_CALL, dest:SafeERC20, function:SafeERC20.safeTransfer(IERC20,address,uint256), arguments:['TMP_98', 'TMP_99', '_balance_1'] 
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
_token_1
_token_1
_token

Name: _token Function: None
Num: 
Den: 
Address: -995
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
_controller_1
_controller_1
_controller

Name: _controller Function: earn
Num: -1
Den: -1
Address: 2
Norm: u
LF: Controller
Value: u
Fields: 
Finance Type: undef
_strategy_1
_strategy_1
_strategy

Name: _strategy_1 Function: None
Num: 
Den: 
Address: -994
Norm: u
LF: _strategy
Value: u
Fields: 
Finance Type: undef
_balance_1
_balance_1
_balance
_balance

Name: _balance Function: earn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
HIGH_LEVEL_CALL, dest:_controller_1(IController), function:earn, arguments:['_strategy_1', '_token_1', '_balance_1']  
High Call: earn
Propogating parameters and globals to SSA variables...
_balance_1
_balance_1
_balance
_balance

Name: _balance Function: earn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_token_1
_token_1
_token

Name: _token Function: None
Num: 
Den: 
Address: -995
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
End popogation


manager_7(IManager) := ϕ(['manager_19', 'manager_28', 'manager_30', 'manager_0', 'manager_37', 'manager_35', 'manager_24', 'manager_6', 'manager_26', 'manager_12', 'manager_39', 'manager_1', 'manager_33'])
MODIFIER_CALL, Vault.checkToken(address)(_token_1)
manager_8(IManager) := ϕ(['manager_33'])
MODIFIER_CALL, Vault.notHalted()()
manager_9(IManager) := ϕ(['manager_35'])
MODIFIER_CALL, Vault.onlyHarvester()()
manager_10(IManager) := ϕ(['manager_37'])
TMP_91(bool) = HIGH_LEVEL_CALL, dest:manager_10(IManager), function:allowedStrategies, arguments:['_strategy_1']  
manager_11(IManager) := ϕ(['manager_19', 'manager_28', 'manager_30', 'manager_10', 'manager_37', 'manager_35', 'manager_24', 'manager_6', 'manager_26', 'manager_12', 'manager_39', 'manager_1', 'manager_33'])
TMP_92(None) = SOLIDITY_CALL require(bool,string)(TMP_91,!_strategy)
TMP_93 = CONVERT this to address
TMP_94(address) = HIGH_LEVEL_CALL, dest:manager_11(IManager), function:controllers, arguments:['TMP_93']  
manager_12(IManager) := ϕ(['manager_19', 'manager_28', 'manager_30', 'manager_11', 'manager_37', 'manager_35', 'manager_24', 'manager_6', 'manager_26', 'manager_12', 'manager_39', 'manager_1', 'manager_33'])
TMP_95 = CONVERT TMP_94 to IController
_controller_1(IController) := TMP_95(IController)
TMP_96(bool) = HIGH_LEVEL_CALL, dest:_controller_1(IController), function:investEnabled, arguments:[]  
CONDITION TMP_96
TMP_97(uint256) = INTERNAL_CALL, Vault.available(address)(_token_1)
_balance_1(uint256) := TMP_97(uint256)
TMP_98 = CONVERT _token_1 to IERC20
TMP_99 = CONVERT _controller_1 to address
LIBRARY_CALL, dest:SafeERC20, function:SafeERC20.safeTransfer(IERC20,address,uint256), arguments:['TMP_98', 'TMP_99', '_balance_1'] 
HIGH_LEVEL_CALL, dest:_controller_1(IController), function:earn, arguments:['_strategy_1', '_token_1', '_balance_1']  
Emit Earn(_token_1,_balance_1)


Propogating parameters and globals to SSA variables...
End popogation
manager_7
manager

Name: manager Function: earn
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
manager_7(IManager) := ϕ(['manager_19', 'manager_28', 'manager_30', 'manager_0', 'manager_37', 'manager_35', 'manager_24', 'manager_6', 'manager_26', 'manager_12', 'manager_39', 'manager_1', 'manager_33'])
Phi
[i]Type for manager

Name: manager Function: earn
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_token_1
_token_1
_token

Name: _token Function: None
Num: 
Den: 
Address: -995
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
End popogation
manager_8
manager

Name: manager Function: earn
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
MODIFIER_CALL, Vault.checkToken(address)(_token_1)
manager_8(IManager) := ϕ(['manager_33'])
Phi
[i]Type for manager

Name: manager Function: earn
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
manager_9
manager

Name: manager Function: earn
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
MODIFIER_CALL, Vault.notHalted()()
manager_9(IManager) := ϕ(['manager_35'])
Phi
[i]Type for manager

Name: manager Function: earn
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
manager_10
manager

Name: manager Function: earn
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
MODIFIER_CALL, Vault.onlyHarvester()()
manager_10(IManager) := ϕ(['manager_37'])
Phi
[i]Type for manager

Name: manager Function: earn
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
manager_10
manager_10
manager

Name: manager Function: earn
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
_strategy_1
_strategy_1
_strategy

Name: _strategy_1 Function: None
Num: 
Den: 
Address: -994
Norm: u
LF: _strategy
Value: u
Fields: 
Finance Type: undef
End popogation
manager_11
manager

Name: manager Function: earn
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
TMP_91(bool) = HIGH_LEVEL_CALL, dest:manager_10(IManager), function:allowedStrategies, arguments:['_strategy_1']  
High Call: allowedStrategies
Running querryfc
[i]Type for TMP_91

Name: TMP_91 Function: earn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
manager_11(IManager) := ϕ(['manager_19', 'manager_28', 'manager_30', 'manager_10', 'manager_37', 'manager_35', 'manager_24', 'manager_6', 'manager_26', 'manager_12', 'manager_39', 'manager_1', 'manager_33'])
Phi
[i]Type for manager

Name: manager Function: earn
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_92(None) = SOLIDITY_CALL require(bool,string)(TMP_91,!_strategy)
[i]Type for TMP_92

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
manager_11
manager_11
manager

Name: manager Function: earn
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
_controller_1
_controller_1
_controller
_controller

Name: _controller Function: earn
Num: 
Den: 
Address: u
Norm: u
LF: Controller
Value: u
Fields: 
Finance Type: undef
End popogation
manager_12
manager

Name: manager Function: earn
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
TMP_93 = CONVERT this to address
Converting this
6
[i]Type for TMP_93

Name: TMP_93 Function: earn
Num: 
Den: 
Address: 6
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_94(address) = HIGH_LEVEL_CALL, dest:manager_11(IManager), function:controllers, arguments:['TMP_93']  
High Call: controllers
Running querryfc
Written func info: Manager, controllers
Retvar: ('c', [-1], [-1], 'u', 'u', 2)
([-1], [-1], 'u', 'u', 2, -1)
[i]Type for TMP_94

Name: TMP_94 Function: earn
Num: -1
Den: -1
Address: 2
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
manager_12(IManager) := ϕ(['manager_19', 'manager_28', 'manager_30', 'manager_11', 'manager_37', 'manager_35', 'manager_24', 'manager_6', 'manager_26', 'manager_12', 'manager_39', 'manager_1', 'manager_33'])
Phi
[i]Type for manager

Name: manager Function: earn
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_95 = CONVERT TMP_94 to IController
Converting TMP_94

Name: TMP_94 Function: earn
Num: -1
Den: -1
Address: 2
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
Controller
[i]Type for TMP_95

Name: TMP_95 Function: earn
Num: -1
Den: -1
Address: 2
Norm: u
LF: Controller
Value: u
Fields: 
Finance Type: undef
XXXX
_controller_1(IController) := TMP_95(IController)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for _controller

Name: _controller Function: earn
Num: -1
Den: -1
Address: 2
Norm: u
LF: Controller
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_controller_1
_controller_1
_controller

Name: _controller Function: earn
Num: -1
Den: -1
Address: 2
Norm: u
LF: Controller
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_96(bool) = HIGH_LEVEL_CALL, dest:_controller_1(IController), function:investEnabled, arguments:[]  
High Call: investEnabled
Running querryfc
[i]Type for TMP_96

Name: TMP_96 Function: earn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_token_1
_token_1
_token

Name: _token Function: None
Num: 
Den: 
Address: -995
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
_balance_1
_balance_1
_balance
_balance

Name: _balance Function: earn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_97(uint256) = INTERNAL_CALL, Vault.available(address)(_token_1)
[i]Type for TMP_97

Name: TMP_97 Function: earn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_balance_1(uint256) := TMP_97(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for _balance

Name: _balance Function: earn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_balance_1
_balance_1
_balance
_balance

Name: _balance Function: earn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_controller_1
_controller_1
_controller

Name: _controller Function: earn
Num: -1
Den: -1
Address: 2
Norm: u
LF: Controller
Value: u
Fields: 
Finance Type: undef
_token_1
_token_1
_token

Name: _token Function: None
Num: 
Den: 
Address: -995
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_98 = CONVERT _token_1 to IERC20
Converting _token_1

Name: _token Function: None
Num: 
Den: 
Address: -995
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
init
end
ERC20
[i]Type for TMP_98

Name: TMP_98 Function: earn
Num: 
Den: 
Address: -995
Norm: u
LF: ERC20
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_99 = CONVERT _controller_1 to address
Converting _controller_1

Name: _controller Function: earn
Num: -1
Den: -1
Address: 2
Norm: u
LF: Controller
Value: u
Fields: 
Finance Type: undef
init
end
[i]Type for TMP_99

Name: TMP_99 Function: earn
Num: -1
Den: -1
Address: 2
Norm: u
LF: Controller
Value: u
Fields: 
Finance Type: undef
XXXX
LIBRARY_CALL, dest:SafeERC20, function:SafeERC20.safeTransfer(IERC20,address,uint256), arguments:['TMP_98', 'TMP_99', '_balance_1'] 
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
_token_1
_token_1
_token

Name: _token Function: None
Num: 
Den: 
Address: -995
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
_controller_1
_controller_1
_controller

Name: _controller Function: earn
Num: -1
Den: -1
Address: 2
Norm: u
LF: Controller
Value: u
Fields: 
Finance Type: undef
_strategy_1
_strategy_1
_strategy

Name: _strategy_1 Function: None
Num: 
Den: 
Address: -994
Norm: u
LF: _strategy
Value: u
Fields: 
Finance Type: undef
_balance_1
_balance_1
_balance
_balance

Name: _balance Function: earn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
HIGH_LEVEL_CALL, dest:_controller_1(IController), function:earn, arguments:['_strategy_1', '_token_1', '_balance_1']  
High Call: earn
Propogating parameters and globals to SSA variables...
_balance_1
_balance_1
_balance
_balance

Name: _balance Function: earn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_token_1
_token_1
_token

Name: _token Function: None
Num: 
Den: 
Address: -995
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
End popogation



deposit
Finding type for _token(address ... )
prev address? u
Head Addr: -993
    Norm: 6
    Set: {-993}
    Fin: NULL
Finding type for _amount(uint256 ... )
Param: 0
    num: []
    den: []
    norm: u
    link: _token
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1


_token_1(address) := ϕ(['REF_50'])
_amount_1(uint256) := ϕ(['REF_51'])
totalDepositCap_3(uint256) := ϕ(['totalDepositCap_8', 'totalDepositCap_1', 'totalDepositCap_10', 'totalDepositCap_13', 'totalDepositCap_0', 'totalDepositCap_2', 'totalDepositCap_11'])
MODIFIER_CALL, Vault.checkToken(address)(_token_1)
MODIFIER_CALL, Vault.notHalted()()
TMP_106(bool) = _amount_1 > 0
TMP_107(None) = SOLIDITY_CALL require(bool,string)(TMP_106,!_amount)
TMP_108(uint256) = INTERNAL_CALL, Vault.balance()()
_balance_1(uint256) := TMP_108(uint256)
TMP_109 = CONVERT _token_1 to IERC20
TMP_110 = CONVERT this to address
TMP_111(uint256) = HIGH_LEVEL_CALL, dest:TMP_109(IERC20), function:balanceOf, arguments:['TMP_110']  
totalDepositCap_7(uint256) := ϕ(['totalDepositCap_8', 'totalDepositCap_1', 'totalDepositCap_10', 'totalDepositCap_6', 'totalDepositCap_13', 'totalDepositCap_2', 'totalDepositCap_11'])
_before_1(uint256) := TMP_111(uint256)
TMP_112 = CONVERT _token_1 to IERC20
TMP_113 = CONVERT this to address
LIBRARY_CALL, dest:SafeERC20, function:SafeERC20.safeTransferFrom(IERC20,address,address,uint256), arguments:['TMP_112', 'msg.sender', 'TMP_113', '_amount_1'] 
TMP_115 = CONVERT _token_1 to IERC20
TMP_116 = CONVERT this to address
TMP_117(uint256) = HIGH_LEVEL_CALL, dest:TMP_115(IERC20), function:balanceOf, arguments:['TMP_116']  
totalDepositCap_8(uint256) := ϕ(['totalDepositCap_8', 'totalDepositCap_1', 'totalDepositCap_10', 'totalDepositCap_7', 'totalDepositCap_13', 'totalDepositCap_2', 'totalDepositCap_11'])
TMP_118(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['TMP_117', '_before_1'] 
_amount_2(uint256) := TMP_118(uint256)
TMP_119(bool) = _amount_2 > 0
CONDITION TMP_119
_shares_2(uint256) := ϕ(['_shares_0', '_shares_1'])
TMP_120(uint256) = INTERNAL_CALL, Vault._normalizeDecimals(address,uint256)(_token_1,_amount_2)
_amount_3(uint256) := TMP_120(uint256)
TMP_121(uint256) = INTERNAL_CALL, ERC20.totalSupply()()
TMP_122(bool) = TMP_121 > 0
CONDITION TMP_122
TMP_126(bool) = _shares_2 > 0
CONDITION TMP_126
_amount_5(uint256) := ϕ(['_amount_4', '_amount_3'])
_shares_1(uint256) := _amount_5(uint256)
TMP_123(uint256) = INTERNAL_CALL, ERC20.totalSupply()()
TMP_124(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_amount_3', 'TMP_123'] 
TMP_125(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_124', '_balance_1'] 
_amount_4(uint256) := TMP_125(uint256)
INTERNAL_CALL, ERC20._mint(address,uint256)(msg.sender,_shares_2)
TMP_128(uint256) = INTERNAL_CALL, ERC20.totalSupply()()
TMP_129(bool) = TMP_128 <= totalDepositCap_13
TMP_130(None) = SOLIDITY_CALL require(bool,string)(TMP_129,>totalDepositCap)
Emit Deposit(msg.sender,_shares_2)


Propogating parameters and globals to SSA variables...
End popogation
_token_1
_token

Name: _token_1 Function: None
Num: 
Den: 
Address: -993
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
_amount_1
_amount
_amount

Name: _amount_1 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
totalDepositCap_3
totalDepositCap
totalDepositCap

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10000000000000000000000000
Fields: 
Finance Type: undef
_token_1(address) := ϕ(['REF_50'])
Phi
[i]Type for _token

Name: _token Function: deposit
Num: 
Den: 
Address: -993
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
XXXX
_amount_1(uint256) := ϕ(['REF_51'])
Phi
[i]Type for _amount

Name: _amount Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
totalDepositCap_3(uint256) := ϕ(['totalDepositCap_8', 'totalDepositCap_1', 'totalDepositCap_10', 'totalDepositCap_13', 'totalDepositCap_0', 'totalDepositCap_2', 'totalDepositCap_11'])
Phi
[i]Type for totalDepositCap

Name: totalDepositCap Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10000000000000000000000000
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_token_1
_token_1
_token

Name: _token Function: deposit
Num: 
Den: 
Address: -993
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
End popogation
MODIFIER_CALL, Vault.checkToken(address)(_token_1)
init
end
[[], [], 'u', '_token', [], -1, -993, 'u']

Name: _token Function: None
Num: 
Den: 
Address: -993
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef

Name: _token Function: None
Num: 
Den: 
Address: -993
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
_token_1
_token

Name: _token_1 Function: None
Num: 
Den: 
Address: -993
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
manager_31
manager
manager

Name: None Function: None
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
_token_1(address) := ϕ(['_token_1', '_output_1', '_token_1'])
Phi
[i]Type for _token

Name: _token Function: checkToken
Num: 
Den: 
Address: -993
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
XXXX
manager_31(IManager) := ϕ(['manager_19', 'manager_28', 'manager_30', 'manager_0', 'manager_37', 'manager_35', 'manager_24', 'manager_6', 'manager_26', 'manager_12', 'manager_39', 'manager_1', 'manager_33'])
Phi
[i]Type for manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
manager_31
manager_31
manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
manager_32
manager_32
manager
manager

Name: None Function: None
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
_token_1
_token_1
_token

Name: _token Function: checkToken
Num: 
Den: 
Address: -993
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
End popogation
manager_32
manager

Name: None Function: None
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
manager_33
manager
manager

Name: None Function: None
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
TMP_214(bool) = HIGH_LEVEL_CALL, dest:manager_31(IManager), function:allowedTokens, arguments:['_token_1']  
High Call: allowedTokens
Running querryfc
[i]Type for TMP_214

Name: TMP_214 Function: checkToken
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
manager_32(IManager) := ϕ(['manager_19', 'manager_28', 'manager_30', 'manager_31', 'manager_37', 'manager_35', 'manager_24', 'manager_6', 'manager_26', 'manager_12', 'manager_39', 'manager_1', 'manager_33'])
Phi
[i]Type for manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_215(address) = HIGH_LEVEL_CALL, dest:manager_32(IManager), function:vaults, arguments:['_token_1']  
High Call: vaults
Running querryfc
Written func info: Manager, vaults
Retvar: ('c', [-1], [-1], 'u', 'u', 4)
([-1], [-1], 'u', 'u', 4, -1)
[i]Type for TMP_215

Name: TMP_215 Function: checkToken
Num: -1
Den: -1
Address: 4
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
manager_33(IManager) := ϕ(['manager_19', 'manager_28', 'manager_30', 'manager_32', 'manager_37', 'manager_35', 'manager_24', 'manager_6', 'manager_26', 'manager_12', 'manager_39', 'manager_1', 'manager_33'])
Phi
[i]Type for manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_216 = CONVERT this to address
Converting this
6
[i]Type for TMP_216

Name: TMP_216 Function: checkToken
Num: -1
Den: -1
Address: 6
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_217(bool) = TMP_215 == TMP_216
[i]Type for TMP_217

Name: TMP_217 Function: checkToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_218(bool) = TMP_214 && TMP_217
[i]Type for TMP_218

Name: TMP_218 Function: checkToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_219(None) = SOLIDITY_CALL require(bool,string)(TMP_218,!_token)
[i]Type for TMP_219

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation

Name: _token Function: None
Num: 
Den: 
Address: -993
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
_token_1
_token

Name: _token_1 Function: checkToken
Num: 
Den: 
Address: -993
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
manager_31
manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
_token_1(address) := ϕ(['_token_1', '_output_1', '_token_1'])
Phi
[i]Type for _token

Name: _token Function: checkToken
Num: 
Den: 
Address: -993
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
XXXX
manager_31(IManager) := ϕ(['manager_19', 'manager_28', 'manager_30', 'manager_0', 'manager_37', 'manager_35', 'manager_24', 'manager_6', 'manager_26', 'manager_12', 'manager_39', 'manager_1', 'manager_33'])
Phi
[i]Type for manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
manager_31
manager_31
manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
manager_32
manager_32
manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
_token_1
_token_1
_token

Name: _token Function: checkToken
Num: 
Den: 
Address: -993
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
End popogation
manager_32
manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
manager_33
manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
TMP_214(bool) = HIGH_LEVEL_CALL, dest:manager_31(IManager), function:allowedTokens, arguments:['_token_1']  
High Call: allowedTokens
Running querryfc
[i]Type for TMP_214

Name: TMP_214 Function: checkToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
manager_32(IManager) := ϕ(['manager_19', 'manager_28', 'manager_30', 'manager_31', 'manager_37', 'manager_35', 'manager_24', 'manager_6', 'manager_26', 'manager_12', 'manager_39', 'manager_1', 'manager_33'])
Phi
[i]Type for manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_215(address) = HIGH_LEVEL_CALL, dest:manager_32(IManager), function:vaults, arguments:['_token_1']  
High Call: vaults
Running querryfc
Written func info: Manager, vaults
Retvar: ('c', [-1], [-1], 'u', 'u', 4)
([-1], [-1], 'u', 'u', 4, -1)
[i]Type for TMP_215

Name: TMP_215 Function: checkToken
Num: -1
Den: -1
Address: 4
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
manager_33(IManager) := ϕ(['manager_19', 'manager_28', 'manager_30', 'manager_32', 'manager_37', 'manager_35', 'manager_24', 'manager_6', 'manager_26', 'manager_12', 'manager_39', 'manager_1', 'manager_33'])
Phi
[i]Type for manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_216 = CONVERT this to address
Converting this
6
[i]Type for TMP_216

Name: TMP_216 Function: checkToken
Num: 
Den: 
Address: 6
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_217(bool) = TMP_215 == TMP_216
[i]Type for TMP_217

Name: TMP_217 Function: checkToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_218(bool) = TMP_214 && TMP_217
[i]Type for TMP_218

Name: TMP_218 Function: checkToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_219(None) = SOLIDITY_CALL require(bool,string)(TMP_218,!_token)
[i]Type for TMP_219

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, Vault.notHalted()()
Propogating parameters and globals to SSA variables...
_amount_1
_amount_1
_amount
_amount

Name: _amount_1 Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_106(bool) = _amount_1 > 0
init
end
init
end
A: u B: 0
x
lnorm: u rnorm: 0
init
end
[i]Type for TMP_106

Name: TMP_106 Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_107(None) = SOLIDITY_CALL require(bool,string)(TMP_106,!_amount)
[i]Type for TMP_107

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_balance_1
_balance_1
_balance
_balance

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_108(uint256) = INTERNAL_CALL, Vault.balance()()
Propogating parameters and globals to SSA variables...
End popogation
manager_21
manager
manager

Name: None Function: None
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
manager_21(IManager) := ϕ(['manager_19', 'manager_28', 'manager_30', 'manager_0', 'manager_37', 'manager_35', 'manager_24', 'manager_6', 'manager_26', 'manager_12', 'manager_39', 'manager_1', 'manager_33'])
Phi
[i]Type for manager

Name: manager Function: balance
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
manager_22
manager_22
manager
manager

Name: None Function: None
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
End popogation
manager_22
manager

Name: None Function: None
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
manager_23
manager
manager

Name: None Function: None
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
manager_24
manager
manager

Name: None Function: None
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
TMP_177(uint256) = INTERNAL_CALL, Vault.balanceOfThis()()
Propogating parameters and globals to SSA variables...
End popogation
manager_25
manager
manager

Name: None Function: None
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
manager_25(IManager) := ϕ(['manager_19', 'manager_28', 'manager_30', 'manager_0', 'manager_37', 'manager_35', 'manager_24', 'manager_6', 'manager_26', 'manager_12', 'manager_39', 'manager_1', 'manager_33'])
Phi
[i]Type for manager

Name: manager Function: balanceOfThis
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
manager_25
manager_25
manager

Name: manager Function: balanceOfThis
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
_tokens_1
_tokens_1
_tokens
_tokens

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
manager_26
manager
manager

Name: None Function: None
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
TMP_183 = CONVERT this to address
Converting this
6
[i]Type for TMP_183

Name: TMP_183 Function: balanceOfThis
Num: -1
Den: -1
Address: 6
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_184(address[]) = HIGH_LEVEL_CALL, dest:manager_25(IManager), function:getTokens, arguments:['TMP_183']  
High Call: getTokens
Running querryfc
Written func info: Manager, getTokens
Retvar: ('c', [-1], [-1], 'u', 'u', 5)
([-1], [-1], 'u', 'u', 5, -1)
[i]Type for TMP_184

Name: TMP_184 Function: balanceOfThis
Num: -1
Den: -1
Address: 5
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
manager_26(IManager) := ϕ(['manager_19', 'manager_28', 'manager_30', 'manager_37', 'manager_25', 'manager_35', 'manager_24', 'manager_6', 'manager_26', 'manager_12', 'manager_39', 'manager_1', 'manager_33'])
Phi
[i]Type for manager

Name: manager Function: balanceOfThis
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
XXXX
_tokens_1(address[]) := TMP_184(address[])
asgn
init
end
Finance type key: (-1, -1)
[i]Type for _tokens

Name: _tokens Function: balanceOfThis
Num: -1
Den: -1
Address: 5
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
_tokens_1
_tokens_1
_tokens

Name: _tokens Function: balanceOfThis
Num: -1
Den: -1
Address: 5
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_1
i_1
i
i

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_balance_1
_balance_1
_balance
_balance

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_1
i_1
i
i

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
_balance_1
_balance
_balance

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_1
i
i

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_balance_1(uint256) := ϕ(['_balance_2', '_balance_0'])
Phi
[i]Type for _balance

Name: _balance Function: balanceOfThis
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
i_1(uint8) := ϕ(['i_0', 'i_2'])
Phi
[i]Type for i

Name: i Function: balanceOfThis
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_73 -> LENGTH _tokens_1
[i]Type for REF_73

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_185(bool) = i_1 < REF_73
init
end
init
end
A: u B: u
x
lnorm: u rnorm: u
init
end
[i]Type for TMP_185

Name: TMP_185 Function: balanceOfThis
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
_tokens_1
_tokens_1
_tokens

Name: _tokens Function: balanceOfThis
Num: -1
Den: -1
Address: 5
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_1
i_1
i
i

Name: i Function: balanceOfThis
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_token_1
_token_1
_token
_token

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
REF_74(address) -> _tokens_1[i_1]
INDEX
[i]Type for REF_74

Name: _tokens Function: balanceOfThis
Num: -1
Den: -1
Address: 5
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
_token_1(address) := REF_74(address)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for _token

Name: _token Function: balanceOfThis
Num: -1
Den: -1
Address: 5
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_balance_1
_balance_1
_balance
_balance

Name: _balance Function: balanceOfThis
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_token_1
_token_1
_token

Name: _token Function: balanceOfThis
Num: -1
Den: -1
Address: 5
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_balance_2
_balance_2
_balance
_balance

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_186 = CONVERT _token_1 to IERC20
Converting _token_1

Name: _token Function: balanceOfThis
Num: -1
Den: -1
Address: 5
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
ERC20
[i]Type for TMP_186

Name: TMP_186 Function: balanceOfThis
Num: -1
Den: -1
Address: 5
Norm: u
LF: ERC20
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_187 = CONVERT this to address
Converting this
6
[i]Type for TMP_187

Name: TMP_187 Function: balanceOfThis
Num: -1
Den: -1
Address: 6
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_188(uint256) = HIGH_LEVEL_CALL, dest:TMP_186(IERC20), function:balanceOf, arguments:['TMP_187']  
High Call: balanceOf
Running querryfc
Written func info: ERC20, balanceOf
Handling balance function!
5
[i]Type for TMP_188

Name: TMP_188 Function: balanceOfThis
Num: 5
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_189(uint256) = INTERNAL_CALL, Vault._normalizeDecimals(address,uint256)(_token_1,TMP_188)
init
end
init
end
[[-1], [-1], 'u', None, [], -1, 5, 'u']

Name: _token Function: None
Num: -1
Den: -1
Address: 5
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
[[5], [-1], 6, None, [], -1, 'u', 'u']

Name: _amount Function: None
Num: 5
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _token Function: None
Num: -1
Den: -1
Address: 5
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef

Name: _amount Function: None
Num: 5
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
_token_1
_token

Name: _token_1 Function: None
Num: -1
Den: -1
Address: 5
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
_amount_1
_amount

Name: _amount_1 Function: None
Num: 5
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_token_1(address) := ϕ(['_token_1', '_token_1'])
Phi
[i]Type for _token

Name: _token Function: _normalizeDecimals
Num: -1
Den: -1
Address: 5
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
XXXX
_amount_1(uint256) := ϕ(['TMP_188', '_amount_2'])
Phi
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: 5
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_token_1
_token_1
_token

Name: _token Function: _normalizeDecimals
Num: -1
Den: -1
Address: 5
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
_decimals_1
_decimals_1
_decimals
_decimals

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_204 = CONVERT _token_1 to ExtendedIERC20
Converting _token_1

Name: _token Function: _normalizeDecimals
Num: -1
Den: -1
Address: 5
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
init
end
UNKNOWN
[i]Type for TMP_204

Name: TMP_204 Function: _normalizeDecimals
Num: -1
Den: -1
Address: 5
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_205(uint8) = HIGH_LEVEL_CALL, dest:TMP_204(ExtendedIERC20), function:decimals, arguments:[]  
High Call: decimals
Running querryfc
Written func info: UNKNOWN, decimals
Handling balance function!
5
[i]Type for TMP_205

Name: TMP_205 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
XXXX
TMP_206 = CONVERT TMP_205 to uint256
Converting TMP_205

Name: TMP_205 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
init
end
[i]Type for TMP_206

Name: TMP_206 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_decimals_1(uint256) := TMP_206(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for _decimals

Name: _decimals Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_decimals_1
_decimals_1
_decimals

Name: _decimals Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_207(bool) = _decimals_1 < 18
init
end
init
end
A: u B: 0
x
lnorm: u rnorm: 0
[i]Type for TMP_207

Name: TMP_207 Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
_amount_3
_amount
_amount

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_amount_3(uint256) := ϕ(['_amount_1', '_amount_2'])
Phi
init
end
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: 5
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_amount_1
_amount_1
_amount

Name: _amount Function: _normalizeDecimals
Num: 5
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_decimals_1
_decimals_1
_decimals

Name: _decimals Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_amount_2
_amount_2
_amount
_amount

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_208(uint256) = 18 - _decimals_1
SUB1
init
end
init
end
A: 0 B: u
lnorm: 0 rnorm: u
SUB

Name: 18 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _decimals Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
[i]Type for TMP_208

Name: TMP_208 Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_209(uint256) = 10 ** TMP_208
init
end
init
end
[i]Type for TMP_209

Name: TMP_209 Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: *
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_210(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_amount_1', 'TMP_209'] 
init
end
init
end
A: u B: *
x
lnorm: u rnorm: *
init
end
[i]Type for TMP_210

Name: TMP_210 Function: _normalizeDecimals
Num: 5
Den: -1
Address: u
Norm: *
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_amount_2(uint256) := TMP_210(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: 5
Den: -1
Address: u
Norm: *
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_amount_3
_amount_3
_amount

Name: _amount Function: _normalizeDecimals
Num: 5
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
RETURN _amount_3
init
end

Name: _token Function: None
Num: -1
Den: -1
Address: 5
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef

Name: _amount Function: None
Num: 5
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
_token_1
_token

Name: _token_1 Function: _normalizeDecimals
Num: -1
Den: -1
Address: 5
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
_amount_1
_amount

Name: _amount_1 Function: _normalizeDecimals
Num: 5
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_token_1(address) := ϕ(['_token_1', '_token_1'])
Phi
[i]Type for _token

Name: _token Function: _normalizeDecimals
Num: -1
Den: -1
Address: 5
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
XXXX
_amount_1(uint256) := ϕ(['TMP_188', '_amount_2'])
Phi
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: 5
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_token_1
_token_1
_token

Name: _token Function: _normalizeDecimals
Num: -1
Den: -1
Address: 5
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
_decimals_1
_decimals_1
_decimals
_decimals

Name: _decimals Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_204 = CONVERT _token_1 to ExtendedIERC20
Converting _token_1

Name: _token Function: _normalizeDecimals
Num: -1
Den: -1
Address: 5
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
init
end
UNKNOWN
[i]Type for TMP_204

Name: TMP_204 Function: _normalizeDecimals
Num: -1
Den: -1
Address: 5
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_205(uint8) = HIGH_LEVEL_CALL, dest:TMP_204(ExtendedIERC20), function:decimals, arguments:[]  
High Call: decimals
Running querryfc
Written func info: UNKNOWN, decimals
Handling balance function!
5
[i]Type for TMP_205

Name: TMP_205 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
XXXX
TMP_206 = CONVERT TMP_205 to uint256
Converting TMP_205

Name: TMP_205 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
init
end
[i]Type for TMP_206

Name: TMP_206 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_decimals_1(uint256) := TMP_206(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for _decimals

Name: _decimals Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_decimals_1
_decimals_1
_decimals

Name: _decimals Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_207(bool) = _decimals_1 < 18
init
end
init
end
A: u B: 0
x
lnorm: u rnorm: 0
[i]Type for TMP_207

Name: TMP_207 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
_amount_3
_amount
_amount

Name: _amount Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_amount_3(uint256) := ϕ(['_amount_1', '_amount_2'])
Phi
init
end
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: 5
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_amount_1
_amount_1
_amount

Name: _amount Function: _normalizeDecimals
Num: 5
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_decimals_1
_decimals_1
_decimals

Name: _decimals Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_amount_2
_amount_2
_amount
_amount

Name: _amount Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_208(uint256) = 18 - _decimals_1
SUB1
init
end
init
end
A: 0 B: u
lnorm: 0 rnorm: u
SUB

Name: 18 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _decimals Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
[i]Type for TMP_208

Name: TMP_208 Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_209(uint256) = 10 ** TMP_208
init
end
init
end
[i]Type for TMP_209

Name: TMP_209 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: *
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_210(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_amount_1', 'TMP_209'] 
init
end
init
end
A: u B: *
x
lnorm: u rnorm: *
init
end
[i]Type for TMP_210

Name: TMP_210 Function: _normalizeDecimals
Num: 5
Den: -1
Address: u
Norm: *
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_amount_2(uint256) := TMP_210(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: 5
Den: -1
Address: u
Norm: *
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_amount_3
_amount_3
_amount

Name: _amount Function: _normalizeDecimals
Num: 5
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
RETURN _amount_3
init
end
[i]Type for TMP_189

Name: TMP_189 Function: balanceOfThis
Num: 5
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_190(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['_balance_1', 'TMP_189'] 

Name: _balance Function: balanceOfThis
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_189 Function: balanceOfThis
Num: 5
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
init
end
A: u B: u
x
lnorm: u rnorm: u
init
end
[i]Type for TMP_190

Name: TMP_190 Function: balanceOfThis
Num: 5
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_balance_2(uint256) := TMP_190(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for _balance

Name: _balance Function: balanceOfThis
Num: 5
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
i_1
i_1
i
i

Name: i Function: balanceOfThis
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_2
i_2
i
i

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_191(uint8) := i_1(uint8)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for TMP_191

Name: TMP_191 Function: balanceOfThis
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
i_2(uint8) = i_1 + 1

Name: i Function: balanceOfThis
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
init
end
A: u B: 0
lnorm: u rnorm: 0
init
end
[i]Type for i

Name: i Function: balanceOfThis
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_balance_1
_balance_1
_balance
_balance

Name: _balance Function: balanceOfThis
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
RETURN _balance_1
init
end
Propogating parameters and globals to SSA variables...
End popogation
manager_25
manager

Name: manager Function: balanceOfThis
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
manager_25(IManager) := ϕ(['manager_19', 'manager_28', 'manager_30', 'manager_0', 'manager_37', 'manager_35', 'manager_24', 'manager_6', 'manager_26', 'manager_12', 'manager_39', 'manager_1', 'manager_33'])
Phi
[i]Type for manager

Name: manager Function: balanceOfThis
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
manager_25
manager_25
manager

Name: manager Function: balanceOfThis
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
_tokens_1
_tokens_1
_tokens
_tokens

Name: _tokens Function: balanceOfThis
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
manager_26
manager

Name: manager Function: balanceOfThis
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
TMP_183 = CONVERT this to address
Converting this
6
[i]Type for TMP_183

Name: TMP_183 Function: balanceOfThis
Num: 
Den: 
Address: 6
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_184(address[]) = HIGH_LEVEL_CALL, dest:manager_25(IManager), function:getTokens, arguments:['TMP_183']  
High Call: getTokens
Running querryfc
Written func info: Manager, getTokens
Retvar: ('c', [-1], [-1], 'u', 'u', 5)
([-1], [-1], 'u', 'u', 5, -1)
[i]Type for TMP_184

Name: TMP_184 Function: balanceOfThis
Num: -1
Den: -1
Address: 5
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
manager_26(IManager) := ϕ(['manager_19', 'manager_28', 'manager_30', 'manager_37', 'manager_25', 'manager_35', 'manager_24', 'manager_6', 'manager_26', 'manager_12', 'manager_39', 'manager_1', 'manager_33'])
Phi
[i]Type for manager

Name: manager Function: balanceOfThis
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
XXXX
_tokens_1(address[]) := TMP_184(address[])
asgn
init
end
Finance type key: (-1, -1)
[i]Type for _tokens

Name: _tokens Function: balanceOfThis
Num: -1
Den: -1
Address: 5
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
_tokens_1
_tokens_1
_tokens

Name: _tokens Function: balanceOfThis
Num: -1
Den: -1
Address: 5
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_1
i_1
i
i

Name: i Function: balanceOfThis
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_balance_1
_balance_1
_balance
_balance

Name: _balance Function: balanceOfThis
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_1
i_1
i
i

Name: i Function: balanceOfThis
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
_balance_1
_balance
_balance

Name: _balance Function: balanceOfThis
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_1
i
i

Name: i Function: balanceOfThis
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_balance_1(uint256) := ϕ(['_balance_2', '_balance_0'])
Phi
init
end
[i]Type for _balance

Name: _balance Function: balanceOfThis
Num: 5
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
i_1(uint8) := ϕ(['i_0', 'i_2'])
Phi
[i]Type for i

Name: i Function: balanceOfThis
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_73 -> LENGTH _tokens_1
[i]Type for REF_73

Name: REF_73 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_185(bool) = i_1 < REF_73
init
end
init
end
A: u B: u
x
lnorm: u rnorm: u
init
end
[i]Type for TMP_185

Name: TMP_185 Function: balanceOfThis
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
_tokens_1
_tokens_1
_tokens

Name: _tokens Function: balanceOfThis
Num: -1
Den: -1
Address: 5
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_1
i_1
i
i

Name: i Function: balanceOfThis
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_token_1
_token_1
_token
_token

Name: _token Function: balanceOfThis
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
REF_74(address) -> _tokens_1[i_1]
INDEX
[i]Type for REF_74

Name: _tokens Function: balanceOfThis
Num: -1
Den: -1
Address: 5
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
_token_1(address) := REF_74(address)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for _token

Name: _token Function: balanceOfThis
Num: -1
Den: -1
Address: 5
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_balance_1
_balance_1
_balance

Name: _balance Function: balanceOfThis
Num: 5
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_token_1
_token_1
_token

Name: _token Function: balanceOfThis
Num: -1
Den: -1
Address: 5
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_balance_2
_balance_2
_balance
_balance

Name: _balance Function: balanceOfThis
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_186 = CONVERT _token_1 to IERC20
Converting _token_1

Name: _token Function: balanceOfThis
Num: -1
Den: -1
Address: 5
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
ERC20
[i]Type for TMP_186

Name: TMP_186 Function: balanceOfThis
Num: -1
Den: -1
Address: 5
Norm: u
LF: ERC20
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_187 = CONVERT this to address
Converting this
6
[i]Type for TMP_187

Name: TMP_187 Function: balanceOfThis
Num: 
Den: 
Address: 6
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_188(uint256) = HIGH_LEVEL_CALL, dest:TMP_186(IERC20), function:balanceOf, arguments:['TMP_187']  
High Call: balanceOf
Running querryfc
Written func info: ERC20, balanceOf
Handling balance function!
5
[i]Type for TMP_188

Name: TMP_188 Function: balanceOfThis
Num: 5
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_189(uint256) = INTERNAL_CALL, Vault._normalizeDecimals(address,uint256)(_token_1,TMP_188)
init
end
init
end
init
end
[i]Type for TMP_189

Name: TMP_189 Function: balanceOfThis
Num: 5
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_190(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['_balance_1', 'TMP_189'] 

Name: _balance Function: balanceOfThis
Num: 5
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_189 Function: balanceOfThis
Num: 5
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
init
end
A: u B: u
x
lnorm: u rnorm: u
init
end
[i]Type for TMP_190

Name: TMP_190 Function: balanceOfThis
Num: 5
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_balance_2(uint256) := TMP_190(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for _balance

Name: _balance Function: balanceOfThis
Num: 5
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
i_1
i_1
i
i

Name: i Function: balanceOfThis
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_2
i_2
i
i

Name: i Function: balanceOfThis
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_191(uint8) := i_1(uint8)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for TMP_191

Name: TMP_191 Function: balanceOfThis
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
i_2(uint8) = i_1 + 1

Name: i Function: balanceOfThis
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: 1 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
init
end
A: u B: 0
lnorm: u rnorm: 0
init
end
[i]Type for i

Name: i Function: balanceOfThis
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_balance_1
_balance_1
_balance

Name: _balance Function: balanceOfThis
Num: 5
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
RETURN _balance_1
init
end
Propogating parameters and globals to SSA variables...
End popogation
manager_25
manager

Name: manager Function: balanceOfThis
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
manager_25(IManager) := ϕ(['manager_19', 'manager_28', 'manager_30', 'manager_0', 'manager_37', 'manager_35', 'manager_24', 'manager_6', 'manager_26', 'manager_12', 'manager_39', 'manager_1', 'manager_33'])
Phi
[i]Type for manager

Name: manager Function: balanceOfThis
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
manager_25
manager_25
manager

Name: manager Function: balanceOfThis
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
_tokens_1
_tokens_1
_tokens

Name: _tokens Function: balanceOfThis
Num: -1
Den: -1
Address: 5
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
manager_26
manager

Name: manager Function: balanceOfThis
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
TMP_183 = CONVERT this to address
Converting this
6
[i]Type for TMP_183

Name: TMP_183 Function: balanceOfThis
Num: 
Den: 
Address: 6
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_184(address[]) = HIGH_LEVEL_CALL, dest:manager_25(IManager), function:getTokens, arguments:['TMP_183']  
High Call: getTokens
Running querryfc
Written func info: Manager, getTokens
Retvar: ('c', [-1], [-1], 'u', 'u', 5)
([-1], [-1], 'u', 'u', 5, -1)
[i]Type for TMP_184

Name: TMP_184 Function: balanceOfThis
Num: -1
Den: -1
Address: 5
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
manager_26(IManager) := ϕ(['manager_19', 'manager_28', 'manager_30', 'manager_37', 'manager_25', 'manager_35', 'manager_24', 'manager_6', 'manager_26', 'manager_12', 'manager_39', 'manager_1', 'manager_33'])
Phi
[i]Type for manager

Name: manager Function: balanceOfThis
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
XXXX
_tokens_1(address[]) := TMP_184(address[])
asgn
init
end
Finance type key: (-1, -1)
[i]Type for _tokens

Name: _tokens Function: balanceOfThis
Num: -1
Den: -1
Address: 5
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
_tokens_1
_tokens_1
_tokens

Name: _tokens Function: balanceOfThis
Num: -1
Den: -1
Address: 5
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_1
i_1
i
i

Name: i Function: balanceOfThis
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_balance_1
_balance_1
_balance

Name: _balance Function: balanceOfThis
Num: 5
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_1
i_1
i
i

Name: i Function: balanceOfThis
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
_balance_1
_balance

Name: _balance Function: balanceOfThis
Num: 5
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_1
i
i

Name: i Function: balanceOfThis
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_balance_1(uint256) := ϕ(['_balance_2', '_balance_0'])
Phi
[i]Type for _balance

Name: _balance Function: balanceOfThis
Num: 5
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
i_1(uint8) := ϕ(['i_0', 'i_2'])
Phi
[i]Type for i

Name: i Function: balanceOfThis
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_73 -> LENGTH _tokens_1
[i]Type for REF_73

Name: REF_73 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_185(bool) = i_1 < REF_73
init
end
init
end
A: u B: u
x
lnorm: u rnorm: u
init
end
[i]Type for TMP_185

Name: TMP_185 Function: balanceOfThis
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
_tokens_1
_tokens_1
_tokens

Name: _tokens Function: balanceOfThis
Num: -1
Den: -1
Address: 5
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_1
i_1
i
i

Name: i Function: balanceOfThis
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_token_1
_token_1
_token

Name: _token Function: balanceOfThis
Num: -1
Den: -1
Address: 5
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
REF_74(address) -> _tokens_1[i_1]
INDEX
[i]Type for REF_74

Name: _tokens Function: balanceOfThis
Num: -1
Den: -1
Address: 5
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
_token_1(address) := REF_74(address)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for _token

Name: _token Function: balanceOfThis
Num: -1
Den: -1
Address: 5
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_balance_1
_balance_1
_balance

Name: _balance Function: balanceOfThis
Num: 5
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_token_1
_token_1
_token

Name: _token Function: balanceOfThis
Num: -1
Den: -1
Address: 5
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_balance_2
_balance_2
_balance

Name: _balance Function: balanceOfThis
Num: 5
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_186 = CONVERT _token_1 to IERC20
Converting _token_1

Name: _token Function: balanceOfThis
Num: -1
Den: -1
Address: 5
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
ERC20
[i]Type for TMP_186

Name: TMP_186 Function: balanceOfThis
Num: -1
Den: -1
Address: 5
Norm: u
LF: ERC20
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_187 = CONVERT this to address
Converting this
6
[i]Type for TMP_187

Name: TMP_187 Function: balanceOfThis
Num: 
Den: 
Address: 6
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_188(uint256) = HIGH_LEVEL_CALL, dest:TMP_186(IERC20), function:balanceOf, arguments:['TMP_187']  
High Call: balanceOf
Running querryfc
Written func info: ERC20, balanceOf
Handling balance function!
5
[i]Type for TMP_188

Name: TMP_188 Function: balanceOfThis
Num: 5
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_189(uint256) = INTERNAL_CALL, Vault._normalizeDecimals(address,uint256)(_token_1,TMP_188)
init
end
init
end
init
end
[i]Type for TMP_189

Name: TMP_189 Function: balanceOfThis
Num: 5
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_190(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['_balance_1', 'TMP_189'] 

Name: _balance Function: balanceOfThis
Num: 5
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_189 Function: balanceOfThis
Num: 5
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
init
end
A: u B: u
x
lnorm: u rnorm: u
init
end
[i]Type for TMP_190

Name: TMP_190 Function: balanceOfThis
Num: 5
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_balance_2(uint256) := TMP_190(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for _balance

Name: _balance Function: balanceOfThis
Num: 5
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
i_1
i_1
i
i

Name: i Function: balanceOfThis
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_2
i_2
i

Name: i Function: balanceOfThis
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_191(uint8) := i_1(uint8)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for TMP_191

Name: TMP_191 Function: balanceOfThis
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
i_2(uint8) = i_1 + 1

Name: i Function: balanceOfThis
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: 1 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
init
end
A: u B: 0
lnorm: u rnorm: 0
init
end
[i]Type for i

Name: i Function: balanceOfThis
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_balance_1
_balance_1
_balance

Name: _balance Function: balanceOfThis
Num: 5
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
RETURN _balance_1
init
end
[i]Type for TMP_177

Name: TMP_177 Function: balance
Num: 5
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
manager_22(IManager) := ϕ(['manager_26'])
Phi
[i]Type for manager

Name: manager Function: balance
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_178 = CONVERT this to address
Converting this
6
[i]Type for TMP_178

Name: TMP_178 Function: balance
Num: -1
Den: -1
Address: 6
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_179(address) = HIGH_LEVEL_CALL, dest:manager_22(IManager), function:controllers, arguments:['TMP_178']  
High Call: controllers
Running querryfc
Written func info: Manager, controllers
Retvar: ('c', [-1], [-1], 'u', 'u', 2)
([-1], [-1], 'u', 'u', 2, -1)
[i]Type for TMP_179

Name: TMP_179 Function: balance
Num: -1
Den: -1
Address: 2
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
manager_23(IManager) := ϕ(['manager_19', 'manager_28', 'manager_30', 'manager_22', 'manager_37', 'manager_35', 'manager_24', 'manager_6', 'manager_26', 'manager_12', 'manager_39', 'manager_1', 'manager_33'])
Phi
[i]Type for manager

Name: manager Function: balance
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_180 = CONVERT TMP_179 to IController
Converting TMP_179

Name: TMP_179 Function: balance
Num: -1
Den: -1
Address: 2
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
Controller
[i]Type for TMP_180

Name: TMP_180 Function: balance
Num: -1
Den: -1
Address: 2
Norm: u
LF: Controller
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_181(uint256) = HIGH_LEVEL_CALL, dest:TMP_180(IController), function:balanceOf, arguments:[]  
High Call: balanceOf
Running querryfc
Written func info: Controller, balanceOf
Handling balance function!
2
[i]Type for TMP_181

Name: TMP_181 Function: balance
Num: 2
Den: -1
Address: u
Norm: *
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
manager_24(IManager) := ϕ(['manager_19', 'manager_28', 'manager_30', 'manager_23', 'manager_37', 'manager_35', 'manager_24', 'manager_6', 'manager_26', 'manager_12', 'manager_39', 'manager_1', 'manager_33'])
Phi
[i]Type for manager

Name: manager Function: balance
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_182(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['TMP_177', 'TMP_181'] 

Name: TMP_177 Function: balance
Num: 5
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_181 Function: balance
Num: 2
Den: -1
Address: u
Norm: *
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
init
end
A: u B: *
x
lnorm: u rnorm: *
Error with TMP_182 in function balance
Error with: TMP_182 in function balance
[i]Type for TMP_182

Name: TMP_182 Function: balance
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_182
init
end
Propogating parameters and globals to SSA variables...
End popogation
manager_21
manager

Name: manager Function: balance
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
manager_21(IManager) := ϕ(['manager_19', 'manager_28', 'manager_30', 'manager_0', 'manager_37', 'manager_35', 'manager_24', 'manager_6', 'manager_26', 'manager_12', 'manager_39', 'manager_1', 'manager_33'])
Phi
[i]Type for manager

Name: manager Function: balance
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
manager_22
manager_22
manager

Name: manager Function: balance
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
End popogation
manager_22
manager

Name: manager Function: balance
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
manager_23
manager

Name: manager Function: balance
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
manager_24
manager

Name: manager Function: balance
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
TMP_177(uint256) = INTERNAL_CALL, Vault.balanceOfThis()()
init
end
[i]Type for TMP_177

Name: TMP_177 Function: balance
Num: 5
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
manager_22(IManager) := ϕ(['manager_26'])
Phi
[i]Type for manager

Name: manager Function: balance
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_178 = CONVERT this to address
Converting this
6
[i]Type for TMP_178

Name: TMP_178 Function: balance
Num: 
Den: 
Address: 6
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_179(address) = HIGH_LEVEL_CALL, dest:manager_22(IManager), function:controllers, arguments:['TMP_178']  
High Call: controllers
Running querryfc
Written func info: Manager, controllers
Retvar: ('c', [-1], [-1], 'u', 'u', 2)
([-1], [-1], 'u', 'u', 2, -1)
[i]Type for TMP_179

Name: TMP_179 Function: balance
Num: -1
Den: -1
Address: 2
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
manager_23(IManager) := ϕ(['manager_19', 'manager_28', 'manager_30', 'manager_22', 'manager_37', 'manager_35', 'manager_24', 'manager_6', 'manager_26', 'manager_12', 'manager_39', 'manager_1', 'manager_33'])
Phi
[i]Type for manager

Name: manager Function: balance
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_180 = CONVERT TMP_179 to IController
Converting TMP_179

Name: TMP_179 Function: balance
Num: -1
Den: -1
Address: 2
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
Controller
[i]Type for TMP_180

Name: TMP_180 Function: balance
Num: -1
Den: -1
Address: 2
Norm: u
LF: Controller
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_181(uint256) = HIGH_LEVEL_CALL, dest:TMP_180(IController), function:balanceOf, arguments:[]  
High Call: balanceOf
Running querryfc
Written func info: Controller, balanceOf
Handling balance function!
2
[i]Type for TMP_181

Name: TMP_181 Function: balance
Num: 2
Den: -1
Address: u
Norm: *
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
manager_24(IManager) := ϕ(['manager_19', 'manager_28', 'manager_30', 'manager_23', 'manager_37', 'manager_35', 'manager_24', 'manager_6', 'manager_26', 'manager_12', 'manager_39', 'manager_1', 'manager_33'])
Phi
[i]Type for manager

Name: manager Function: balance
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_182(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['TMP_177', 'TMP_181'] 

Name: TMP_177 Function: balance
Num: 5
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_181 Function: balance
Num: 2
Den: -1
Address: u
Norm: *
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
init
end
A: u B: *
x
lnorm: u rnorm: *
[i]Type for TMP_182

Name: TMP_182 Function: balance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_182
init
end
[i]Type for TMP_108

Name: TMP_108 Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_balance_1(uint256) := TMP_108(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for _balance

Name: _balance Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_token_1
_token_1
_token

Name: _token Function: deposit
Num: 
Den: 
Address: -993
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
_before_1
_before_1
_before
_before

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
totalDepositCap_7
totalDepositCap
totalDepositCap

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10000000000000000000000000
Fields: 
Finance Type: undef
TMP_109 = CONVERT _token_1 to IERC20
Converting _token_1

Name: _token Function: deposit
Num: 
Den: 
Address: -993
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
init
end
ERC20
[i]Type for TMP_109

Name: TMP_109 Function: deposit
Num: 
Den: 
Address: -993
Norm: u
LF: ERC20
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_110 = CONVERT this to address
Converting this
6
[i]Type for TMP_110

Name: TMP_110 Function: deposit
Num: -1
Den: -1
Address: 6
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_111(uint256) = HIGH_LEVEL_CALL, dest:TMP_109(IERC20), function:balanceOf, arguments:['TMP_110']  
High Call: balanceOf
Running querryfc
Written func info: ERC20, balanceOf
Handling balance function!
-993
[i]Type for TMP_111

Name: TMP_111 Function: deposit
Num: -993
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
totalDepositCap_7(uint256) := ϕ(['totalDepositCap_8', 'totalDepositCap_1', 'totalDepositCap_10', 'totalDepositCap_6', 'totalDepositCap_13', 'totalDepositCap_2', 'totalDepositCap_11'])
Phi
[i]Type for totalDepositCap

Name: totalDepositCap Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10000000000000000000000000
Fields: 
Finance Type: undef
XXXX
_before_1(uint256) := TMP_111(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for _before

Name: _before Function: deposit
Num: -993
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_amount_1
_amount_1
_amount
_amount

Name: _amount_1 Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_token_1
_token_1
_token

Name: _token Function: deposit
Num: 
Den: 
Address: -993
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_112 = CONVERT _token_1 to IERC20
Converting _token_1

Name: _token Function: deposit
Num: 
Den: 
Address: -993
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
init
end
ERC20
[i]Type for TMP_112

Name: TMP_112 Function: deposit
Num: 
Den: 
Address: -993
Norm: u
LF: ERC20
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_113 = CONVERT this to address
Converting this
6
[i]Type for TMP_113

Name: TMP_113 Function: deposit
Num: -1
Den: -1
Address: 6
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
XXXX
LIBRARY_CALL, dest:SafeERC20, function:SafeERC20.safeTransferFrom(IERC20,address,address,uint256), arguments:['TMP_112', 'msg.sender', 'TMP_113', '_amount_1'] 
Propogating parameters and globals to SSA variables...
_before_1
_before_1
_before

Name: _before Function: deposit
Num: -993
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
_token_1
_token_1
_token

Name: _token Function: deposit
Num: 
Den: 
Address: -993
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
_amount_2
_amount_2
_amount
_amount

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
totalDepositCap_8
totalDepositCap
totalDepositCap

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10000000000000000000000000
Fields: 
Finance Type: undef
TMP_115 = CONVERT _token_1 to IERC20
Converting _token_1

Name: _token Function: deposit
Num: 
Den: 
Address: -993
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
init
end
ERC20
[i]Type for TMP_115

Name: TMP_115 Function: deposit
Num: 
Den: 
Address: -993
Norm: u
LF: ERC20
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_116 = CONVERT this to address
Converting this
6
[i]Type for TMP_116

Name: TMP_116 Function: deposit
Num: -1
Den: -1
Address: 6
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_117(uint256) = HIGH_LEVEL_CALL, dest:TMP_115(IERC20), function:balanceOf, arguments:['TMP_116']  
High Call: balanceOf
Running querryfc
Written func info: ERC20, balanceOf
Handling balance function!
-993
[i]Type for TMP_117

Name: TMP_117 Function: deposit
Num: -993
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
totalDepositCap_8(uint256) := ϕ(['totalDepositCap_8', 'totalDepositCap_1', 'totalDepositCap_10', 'totalDepositCap_7', 'totalDepositCap_13', 'totalDepositCap_2', 'totalDepositCap_11'])
Phi
[i]Type for totalDepositCap

Name: totalDepositCap Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10000000000000000000000000
Fields: 
Finance Type: undef
XXXX
TMP_118(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['TMP_117', '_before_1'] 
SUB1
init
end
init
end
A: 6 B: 6
x
y
A: 6 B: 6
<class 'int'>
<class 'int'>
lnorm: 6 rnorm: 6
SUB

Name: TMP_117 Function: deposit
Num: -993
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _before Function: deposit
Num: -993
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
[i]Type for TMP_118

Name: TMP_118 Function: deposit
Num: -993
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_amount_2(uint256) := TMP_118(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for _amount

Name: _amount Function: deposit
Num: -993
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_amount_2
_amount_2
_amount

Name: _amount Function: deposit
Num: -993
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_119(bool) = _amount_2 > 0
init
end
init
end
A: 6 B: 0
x
y
A: 6 B: 0
<class 'int'>
<class 'int'>
lnorm: 6 rnorm: 0
[i]Type for TMP_119

Name: TMP_119 Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
_shares_2
_shares
_shares

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_shares_2(uint256) := ϕ(['_shares_0', '_shares_1'])
Phi
[i]Type for _shares

Name: _shares Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_amount_2
_amount_2
_amount

Name: _amount Function: deposit
Num: -993
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
_token_1
_token_1
_token

Name: _token Function: deposit
Num: 
Den: 
Address: -993
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
_amount_3
_amount_3
_amount
_amount

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_120(uint256) = INTERNAL_CALL, Vault._normalizeDecimals(address,uint256)(_token_1,_amount_2)
init
end
init
end
[[], [], 'u', '_token', [], -1, -993, 'u']

Name: _token Function: None
Num: 
Den: 
Address: -993
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
[[-993], [-1], 6, None, [], -1, 'u', 'u']

Name: _amount Function: None
Num: -993
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _token Function: None
Num: 
Den: 
Address: -993
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef

Name: _amount Function: None
Num: -993
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
_token_1
_token

Name: _token_1 Function: _normalizeDecimals
Num: 
Den: 
Address: -993
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
_amount_1
_amount

Name: _amount_1 Function: _normalizeDecimals
Num: -993
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_token_1(address) := ϕ(['_token_1', '_token_1'])
Phi
[i]Type for _token

Name: _token Function: _normalizeDecimals
Num: 
Den: 
Address: -993
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
XXXX
_amount_1(uint256) := ϕ(['TMP_188', '_amount_2'])
Phi
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: -993
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_token_1
_token_1
_token

Name: _token Function: _normalizeDecimals
Num: 
Den: 
Address: -993
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
_decimals_1
_decimals_1
_decimals
_decimals

Name: _decimals Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_204 = CONVERT _token_1 to ExtendedIERC20
Converting _token_1

Name: _token Function: _normalizeDecimals
Num: 
Den: 
Address: -993
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
init
end
UNKNOWN
[i]Type for TMP_204

Name: TMP_204 Function: _normalizeDecimals
Num: 
Den: 
Address: -993
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_205(uint8) = HIGH_LEVEL_CALL, dest:TMP_204(ExtendedIERC20), function:decimals, arguments:[]  
High Call: decimals
Running querryfc
Written func info: UNKNOWN, decimals
Handling balance function!
-993
[i]Type for TMP_205

Name: TMP_205 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
XXXX
TMP_206 = CONVERT TMP_205 to uint256
Converting TMP_205

Name: TMP_205 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
init
end
[i]Type for TMP_206

Name: TMP_206 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_decimals_1(uint256) := TMP_206(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for _decimals

Name: _decimals Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_decimals_1
_decimals_1
_decimals

Name: _decimals Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_207(bool) = _decimals_1 < 18
init
end
init
end
A: u B: 0
x
lnorm: u rnorm: 0
[i]Type for TMP_207

Name: TMP_207 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
_amount_3
_amount
_amount

Name: _amount Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_amount_3(uint256) := ϕ(['_amount_1', '_amount_2'])
Phi
init
end
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: -993
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_amount_1
_amount_1
_amount

Name: _amount Function: _normalizeDecimals
Num: -993
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_decimals_1
_decimals_1
_decimals

Name: _decimals Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_amount_2
_amount_2
_amount
_amount

Name: _amount Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_208(uint256) = 18 - _decimals_1
SUB1
init
end
init
end
A: 0 B: u
lnorm: 0 rnorm: u
SUB

Name: 18 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _decimals Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
[i]Type for TMP_208

Name: TMP_208 Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_209(uint256) = 10 ** TMP_208
init
end
init
end
[i]Type for TMP_209

Name: TMP_209 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: *
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_210(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_amount_1', 'TMP_209'] 
init
end
init
end
A: u B: *
x
lnorm: u rnorm: *
init
end
[i]Type for TMP_210

Name: TMP_210 Function: _normalizeDecimals
Num: -993
Den: -1
Address: u
Norm: *
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_amount_2(uint256) := TMP_210(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: -993
Den: -1
Address: u
Norm: *
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_amount_3
_amount_3
_amount

Name: _amount Function: _normalizeDecimals
Num: -993
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
RETURN _amount_3
init
end

Name: _token Function: None
Num: 
Den: 
Address: -993
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef

Name: _amount Function: None
Num: -993
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
_token_1
_token

Name: _token_1 Function: _normalizeDecimals
Num: 
Den: 
Address: -993
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
_amount_1
_amount

Name: _amount_1 Function: _normalizeDecimals
Num: -993
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_token_1(address) := ϕ(['_token_1', '_token_1'])
Phi
[i]Type for _token

Name: _token Function: _normalizeDecimals
Num: 
Den: 
Address: -993
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
XXXX
_amount_1(uint256) := ϕ(['TMP_188', '_amount_2'])
Phi
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: -993
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_token_1
_token_1
_token

Name: _token Function: _normalizeDecimals
Num: 
Den: 
Address: -993
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
_decimals_1
_decimals_1
_decimals
_decimals

Name: _decimals Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_204 = CONVERT _token_1 to ExtendedIERC20
Converting _token_1

Name: _token Function: _normalizeDecimals
Num: 
Den: 
Address: -993
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
init
end
UNKNOWN
[i]Type for TMP_204

Name: TMP_204 Function: _normalizeDecimals
Num: 
Den: 
Address: -993
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_205(uint8) = HIGH_LEVEL_CALL, dest:TMP_204(ExtendedIERC20), function:decimals, arguments:[]  
High Call: decimals
Running querryfc
Written func info: UNKNOWN, decimals
Handling balance function!
-993
[i]Type for TMP_205

Name: TMP_205 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
XXXX
TMP_206 = CONVERT TMP_205 to uint256
Converting TMP_205

Name: TMP_205 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
init
end
[i]Type for TMP_206

Name: TMP_206 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_decimals_1(uint256) := TMP_206(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for _decimals

Name: _decimals Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_decimals_1
_decimals_1
_decimals

Name: _decimals Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_207(bool) = _decimals_1 < 18
init
end
init
end
A: u B: 0
x
lnorm: u rnorm: 0
[i]Type for TMP_207

Name: TMP_207 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
_amount_3
_amount
_amount

Name: _amount Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_amount_3(uint256) := ϕ(['_amount_1', '_amount_2'])
Phi
init
end
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: -993
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_amount_1
_amount_1
_amount

Name: _amount Function: _normalizeDecimals
Num: -993
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_decimals_1
_decimals_1
_decimals

Name: _decimals Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_amount_2
_amount_2
_amount
_amount

Name: _amount Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_208(uint256) = 18 - _decimals_1
SUB1
init
end
init
end
A: 0 B: u
lnorm: 0 rnorm: u
SUB

Name: 18 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _decimals Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
[i]Type for TMP_208

Name: TMP_208 Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_209(uint256) = 10 ** TMP_208
init
end
init
end
[i]Type for TMP_209

Name: TMP_209 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: *
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_210(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_amount_1', 'TMP_209'] 
init
end
init
end
A: u B: *
x
lnorm: u rnorm: *
init
end
[i]Type for TMP_210

Name: TMP_210 Function: _normalizeDecimals
Num: -993
Den: -1
Address: u
Norm: *
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_amount_2(uint256) := TMP_210(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: -993
Den: -1
Address: u
Norm: *
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_amount_3
_amount_3
_amount

Name: _amount Function: _normalizeDecimals
Num: -993
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
RETURN _amount_3
init
end
[i]Type for TMP_120

Name: TMP_120 Function: deposit
Num: -993
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_amount_3(uint256) := TMP_120(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for _amount

Name: _amount Function: deposit
Num: -993
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_121(uint256) = INTERNAL_CALL, ERC20.totalSupply()()
Propogating parameters and globals to SSA variables...
End popogation
_totalSupply_1
_totalSupply
_totalSupply

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_totalSupply_1(uint256) := ϕ(['_totalSupply_0', '_totalSupply_4', '_totalSupply_7'])
Phi
[i]Type for _totalSupply

Name: _totalSupply Function: totalSupply
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_totalSupply_1
_totalSupply_1
_totalSupply

Name: _totalSupply Function: totalSupply
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
RETURN _totalSupply_1
init
end
Propogating parameters and globals to SSA variables...
End popogation
_totalSupply_1
_totalSupply

Name: _totalSupply Function: totalSupply
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_totalSupply_1(uint256) := ϕ(['_totalSupply_0', '_totalSupply_4', '_totalSupply_7'])
Phi
[i]Type for _totalSupply

Name: _totalSupply Function: totalSupply
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_totalSupply_1
_totalSupply_1
_totalSupply

Name: _totalSupply Function: totalSupply
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
RETURN _totalSupply_1
init
end
[i]Type for TMP_121

Name: TMP_121 Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_122(bool) = TMP_121 > 0
init
end
init
end
A: u B: 0
x
lnorm: u rnorm: 0
[i]Type for TMP_122

Name: TMP_122 Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_shares_2
_shares_2
_shares
_shares

Name: _shares Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_126(bool) = _shares_2 > 0
init
end
init
end
A: u B: 0
x
lnorm: u rnorm: 0
init
end
[i]Type for TMP_126

Name: TMP_126 Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
_amount_5
_amount
_amount

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_amount_5(uint256) := ϕ(['_amount_4', '_amount_3'])
Phi
[i]Type for _amount

Name: _amount Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_amount_5
_amount_5
_amount
_amount

Name: _amount Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_shares_1
_shares_1
_shares
_shares

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
_shares_1(uint256) := _amount_5(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for _shares

Name: _shares Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_amount_3
_amount_3
_amount

Name: _amount Function: deposit
Num: -993
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_balance_1
_balance_1
_balance
_balance

Name: _balance Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_amount_4
_amount_4
_amount
_amount

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_123(uint256) = INTERNAL_CALL, ERC20.totalSupply()()
init
end
[i]Type for TMP_123

Name: TMP_123 Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_124(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_amount_3', 'TMP_123'] 
init
end
init
end
A: u B: u
x
lnorm: u rnorm: u
init
end
[i]Type for TMP_124

Name: TMP_124 Function: deposit
Num: -993
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_125(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_124', '_balance_1'] 
init
end
init
end
A: u B: u
x
lnorm: u rnorm: u
init
end
[i]Type for TMP_125

Name: TMP_125 Function: deposit
Num: -993
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_amount_4(uint256) := TMP_125(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for _amount

Name: _amount Function: deposit
Num: -993
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_shares_2
_shares_2
_shares
_shares

Name: _shares Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
INTERNAL_CALL, ERC20._mint(address,uint256)(msg.sender,_shares_2)
init
init
end
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: account Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
[[], [], 'u', None, [], -1, 'u', 'u']

Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: account Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef

Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
account_1
account

Name: account_1 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
amount_1
amount
amount

Name: amount_1 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_balances_6
_balances
_balances

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_totalSupply_2
_totalSupply
_totalSupply

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
account_1(address) := ϕ(['msg.sender'])
Phi
[i]Type for account

Name: account Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['_shares_2'])
Phi
[i]Type for amount

Name: amount Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_balances_6(mapping(address => uint256)) := ϕ(['_balances_5', '_balances_11', '_balances_0', '_balances_1', '_balances_8'])
Phi
[i]Type for _balances

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_totalSupply_2(uint256) := ϕ(['_totalSupply_0', '_totalSupply_4', '_totalSupply_7'])
Phi
[i]Type for _totalSupply

Name: _totalSupply Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
account_1
account_1
account

Name: account Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_39 = CONVERT 0 to address
Converting 0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
[i]Type for TMP_39

Name: TMP_39 Function: _mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_40(bool) = account_1 != TMP_39
[i]Type for TMP_40

Name: TMP_40 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_41(None) = SOLIDITY_CALL require(bool,string)(TMP_40,ERC20: mint to the zero address)
[i]Type for TMP_41

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
account_1
account_1
account

Name: account Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
amount_1
amount_1
amount
amount

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_42 = CONVERT 0 to address
Converting 0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
[i]Type for TMP_42

Name: TMP_42 Function: _mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
INTERNAL_CALL, ERC20._beforeTokenTransfer(address,address,uint256)(TMP_42,account_1,amount_1)
init
end
init
end
init
end
[[-1], [-1], 0, None, [], -1, 'u', 'u']

Name: from Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: from
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', 'account', [], -1, 'u', 'u']

Name: to Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
[[], [], 'u', None, [], -1, 'u', 'u']

Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: from Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: from
Value: u
Fields: 
Finance Type: undef

Name: to Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef

Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
from_1
from

Name: from_1 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
to_1
to

Name: to_1 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
amount_1
amount
amount

Name: amount_1 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
from_1(address) := ϕ(['account_1', 'TMP_42', 'sender_1'])
Phi
[i]Type for from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
XXXX
to_1(address) := ϕ(['TMP_51', 'account_1', 'recipient_1'])
Phi
[i]Type for to

Name: to Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
Phi
[i]Type for amount

Name: amount Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX

Name: from Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: from
Value: u
Fields: 
Finance Type: undef

Name: to Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef

Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
from_1
from

Name: from_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
to_1
to

Name: to_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
amount_1
amount
amount

Name: amount_1 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
from_1(address) := ϕ(['account_1', 'TMP_42', 'sender_1'])
Phi
[i]Type for from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
XXXX
to_1(address) := ϕ(['TMP_51', 'account_1', 'recipient_1'])
Phi
[i]Type for to

Name: to Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
Phi
[i]Type for amount

Name: amount Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_totalSupply_3
_totalSupply_3
_totalSupply
_totalSupply

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
amount_1
amount_1
amount
amount

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_totalSupply_4
_totalSupply_4
_totalSupply
_totalSupply

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_44(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['_totalSupply_3', 'amount_1'] 

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
init
end
A: u B: u
x
lnorm: u rnorm: u
init
end
[i]Type for TMP_44

Name: TMP_44 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_totalSupply_4(uint256) := TMP_44(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for _totalSupply

Name: _totalSupply Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
account_1
account_1
account

Name: account Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
_balances_7
_balances_7
_balances
_balances

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
amount_1
amount_1
amount
amount

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_balances_8
_balances_8
_balances
_balances

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
_balances_8
_balances

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_21(uint256) -> _balances_7[account_1]
INDEX
[i]Type for REF_21

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_22(uint256) -> _balances_7[account_1]
INDEX
[i]Type for REF_22

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_45(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['REF_22', 'amount_1'] 

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
init
end
A: u B: u
x
lnorm: u rnorm: u
init
end
[i]Type for TMP_45

Name: TMP_45 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_balances_8(mapping(address => uint256)) := ϕ(['_balances_7'])
Phi
[i]Type for _balances

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_21 (->_balances_8) := TMP_45(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for REF_21

Name: REF_21 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
Propogating parameters and globals to SSA variables...
account_1
account_1
account

Name: account Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
amount_1
amount_1
amount
amount

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_46 = CONVERT 0 to address
Converting 0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
[i]Type for TMP_46

Name: TMP_46 Function: _mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX

Name: account Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef

Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
account_1
account

Name: account_1 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
amount_1
amount
amount

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_balances_6
_balances

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_totalSupply_2
_totalSupply

Name: _totalSupply Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
account_1(address) := ϕ(['msg.sender'])
Phi
[i]Type for account

Name: account Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['_shares_2'])
Phi
[i]Type for amount

Name: amount Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_balances_6(mapping(address => uint256)) := ϕ(['_balances_5', '_balances_11', '_balances_0', '_balances_1', '_balances_8'])
Phi
[i]Type for _balances

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_totalSupply_2(uint256) := ϕ(['_totalSupply_0', '_totalSupply_4', '_totalSupply_7'])
Phi
[i]Type for _totalSupply

Name: _totalSupply Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
account_1
account_1
account

Name: account Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_39 = CONVERT 0 to address
Converting 0

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
[i]Type for TMP_39

Name: TMP_39 Function: _mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_40(bool) = account_1 != TMP_39
[i]Type for TMP_40

Name: TMP_40 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_41(None) = SOLIDITY_CALL require(bool,string)(TMP_40,ERC20: mint to the zero address)
[i]Type for TMP_41

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
account_1
account_1
account

Name: account Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
amount_1
amount_1
amount
amount

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_42 = CONVERT 0 to address
Converting 0

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
[i]Type for TMP_42

Name: TMP_42 Function: _mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
INTERNAL_CALL, ERC20._beforeTokenTransfer(address,address,uint256)(TMP_42,account_1,amount_1)
init
end
init
end
init
end
Propogating parameters and globals to SSA variables...
_totalSupply_3
_totalSupply_3
_totalSupply

Name: _totalSupply Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
amount_1
amount_1
amount
amount

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_totalSupply_4
_totalSupply_4
_totalSupply

Name: _totalSupply Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_44(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['_totalSupply_3', 'amount_1'] 

Name: _totalSupply Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
init
end
A: u B: u
x
lnorm: u rnorm: u
init
end
[i]Type for TMP_44

Name: TMP_44 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_totalSupply_4(uint256) := TMP_44(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for _totalSupply

Name: _totalSupply Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
account_1
account_1
account

Name: account Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
_balances_7
_balances_7
_balances

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
amount_1
amount_1
amount
amount

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_balances_8
_balances_8
_balances

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
_balances_8
_balances

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_21(uint256) -> _balances_7[account_1]
INDEX
[i]Type for REF_21

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_22(uint256) -> _balances_7[account_1]
INDEX
[i]Type for REF_22

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_45(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['REF_22', 'amount_1'] 

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
init
end
A: u B: u
x
lnorm: u rnorm: u
init
end
[i]Type for TMP_45

Name: TMP_45 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_balances_8(mapping(address => uint256)) := ϕ(['_balances_7'])
Phi
[i]Type for _balances

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_21 (->_balances_8) := TMP_45(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for REF_21

Name: REF_21 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
Propogating parameters and globals to SSA variables...
account_1
account_1
account

Name: account Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
amount_1
amount_1
amount
amount

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_46 = CONVERT 0 to address
Converting 0

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
[i]Type for TMP_46

Name: TMP_46 Function: _mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
totalDepositCap_13
totalDepositCap_13
totalDepositCap
totalDepositCap

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10000000000000000000000000
Fields: 
Finance Type: undef
End popogation
TMP_128(uint256) = INTERNAL_CALL, ERC20.totalSupply()()
init
end
[i]Type for TMP_128

Name: TMP_128 Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_129(bool) = TMP_128 <= totalDepositCap_13
init
end
init
end
A: u B: u
x
lnorm: u rnorm: u
[i]Type for TMP_129

Name: TMP_129 Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_130(None) = SOLIDITY_CALL require(bool,string)(TMP_129,>totalDepositCap)
[i]Type for TMP_130

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_shares_2
_shares_2
_shares
_shares

Name: _shares Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation


_token_1(address) := ϕ(['REF_50'])
_amount_1(uint256) := ϕ(['REF_51'])
totalDepositCap_3(uint256) := ϕ(['totalDepositCap_8', 'totalDepositCap_1', 'totalDepositCap_10', 'totalDepositCap_13', 'totalDepositCap_0', 'totalDepositCap_2', 'totalDepositCap_11'])
MODIFIER_CALL, Vault.checkToken(address)(_token_1)
MODIFIER_CALL, Vault.notHalted()()
TMP_106(bool) = _amount_1 > 0
TMP_107(None) = SOLIDITY_CALL require(bool,string)(TMP_106,!_amount)
TMP_108(uint256) = INTERNAL_CALL, Vault.balance()()
_balance_1(uint256) := TMP_108(uint256)
TMP_109 = CONVERT _token_1 to IERC20
TMP_110 = CONVERT this to address
TMP_111(uint256) = HIGH_LEVEL_CALL, dest:TMP_109(IERC20), function:balanceOf, arguments:['TMP_110']  
totalDepositCap_7(uint256) := ϕ(['totalDepositCap_8', 'totalDepositCap_1', 'totalDepositCap_10', 'totalDepositCap_6', 'totalDepositCap_13', 'totalDepositCap_2', 'totalDepositCap_11'])
_before_1(uint256) := TMP_111(uint256)
TMP_112 = CONVERT _token_1 to IERC20
TMP_113 = CONVERT this to address
LIBRARY_CALL, dest:SafeERC20, function:SafeERC20.safeTransferFrom(IERC20,address,address,uint256), arguments:['TMP_112', 'msg.sender', 'TMP_113', '_amount_1'] 
TMP_115 = CONVERT _token_1 to IERC20
TMP_116 = CONVERT this to address
TMP_117(uint256) = HIGH_LEVEL_CALL, dest:TMP_115(IERC20), function:balanceOf, arguments:['TMP_116']  
totalDepositCap_8(uint256) := ϕ(['totalDepositCap_8', 'totalDepositCap_1', 'totalDepositCap_10', 'totalDepositCap_7', 'totalDepositCap_13', 'totalDepositCap_2', 'totalDepositCap_11'])
TMP_118(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['TMP_117', '_before_1'] 
_amount_2(uint256) := TMP_118(uint256)
TMP_119(bool) = _amount_2 > 0
CONDITION TMP_119
_shares_2(uint256) := ϕ(['_shares_0', '_shares_1'])
TMP_120(uint256) = INTERNAL_CALL, Vault._normalizeDecimals(address,uint256)(_token_1,_amount_2)
_amount_3(uint256) := TMP_120(uint256)
TMP_121(uint256) = INTERNAL_CALL, ERC20.totalSupply()()
TMP_122(bool) = TMP_121 > 0
CONDITION TMP_122
TMP_126(bool) = _shares_2 > 0
CONDITION TMP_126
_amount_5(uint256) := ϕ(['_amount_4', '_amount_3'])
_shares_1(uint256) := _amount_5(uint256)
TMP_123(uint256) = INTERNAL_CALL, ERC20.totalSupply()()
TMP_124(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_amount_3', 'TMP_123'] 
TMP_125(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_124', '_balance_1'] 
_amount_4(uint256) := TMP_125(uint256)
INTERNAL_CALL, ERC20._mint(address,uint256)(msg.sender,_shares_2)
TMP_128(uint256) = INTERNAL_CALL, ERC20.totalSupply()()
TMP_129(bool) = TMP_128 <= totalDepositCap_13
TMP_130(None) = SOLIDITY_CALL require(bool,string)(TMP_129,>totalDepositCap)
Emit Deposit(msg.sender,_shares_2)


Propogating parameters and globals to SSA variables...
End popogation
_token_1
_token

Name: _token_1 Function: deposit
Num: 
Den: 
Address: -993
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
_amount_1
_amount
_amount

Name: _amount_1 Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
totalDepositCap_3
totalDepositCap

Name: totalDepositCap Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10000000000000000000000000
Fields: 
Finance Type: undef
_token_1(address) := ϕ(['REF_50'])
Phi
[i]Type for _token

Name: _token Function: deposit
Num: 
Den: 
Address: -993
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
XXXX
_amount_1(uint256) := ϕ(['REF_51'])
Phi
[i]Type for _amount

Name: _amount Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
totalDepositCap_3(uint256) := ϕ(['totalDepositCap_8', 'totalDepositCap_1', 'totalDepositCap_10', 'totalDepositCap_13', 'totalDepositCap_0', 'totalDepositCap_2', 'totalDepositCap_11'])
Phi
[i]Type for totalDepositCap

Name: totalDepositCap Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10000000000000000000000000
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_token_1
_token_1
_token

Name: _token Function: deposit
Num: 
Den: 
Address: -993
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
End popogation
MODIFIER_CALL, Vault.checkToken(address)(_token_1)
init
end
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, Vault.notHalted()()
Propogating parameters and globals to SSA variables...
_amount_1
_amount_1
_amount
_amount

Name: _amount_1 Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_106(bool) = _amount_1 > 0
init
end
init
end
A: u B: 0
x
lnorm: u rnorm: 0
init
end
[i]Type for TMP_106

Name: TMP_106 Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_107(None) = SOLIDITY_CALL require(bool,string)(TMP_106,!_amount)
[i]Type for TMP_107

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_balance_1
_balance_1
_balance
_balance

Name: _balance Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_108(uint256) = INTERNAL_CALL, Vault.balance()()
init
end
[i]Type for TMP_108

Name: TMP_108 Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_balance_1(uint256) := TMP_108(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for _balance

Name: _balance Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_token_1
_token_1
_token

Name: _token Function: deposit
Num: 
Den: 
Address: -993
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
_before_1
_before_1
_before
_before

Name: _before Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
totalDepositCap_7
totalDepositCap

Name: totalDepositCap Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10000000000000000000000000
Fields: 
Finance Type: undef
TMP_109 = CONVERT _token_1 to IERC20
Converting _token_1

Name: _token Function: deposit
Num: 
Den: 
Address: -993
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
init
end
ERC20
[i]Type for TMP_109

Name: TMP_109 Function: deposit
Num: 
Den: 
Address: -993
Norm: u
LF: ERC20
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_110 = CONVERT this to address
Converting this
6
[i]Type for TMP_110

Name: TMP_110 Function: deposit
Num: 
Den: 
Address: 6
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_111(uint256) = HIGH_LEVEL_CALL, dest:TMP_109(IERC20), function:balanceOf, arguments:['TMP_110']  
High Call: balanceOf
Running querryfc
Written func info: ERC20, balanceOf
Handling balance function!
-993
[i]Type for TMP_111

Name: TMP_111 Function: deposit
Num: -993
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
totalDepositCap_7(uint256) := ϕ(['totalDepositCap_8', 'totalDepositCap_1', 'totalDepositCap_10', 'totalDepositCap_6', 'totalDepositCap_13', 'totalDepositCap_2', 'totalDepositCap_11'])
Phi
[i]Type for totalDepositCap

Name: totalDepositCap Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10000000000000000000000000
Fields: 
Finance Type: undef
XXXX
_before_1(uint256) := TMP_111(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for _before

Name: _before Function: deposit
Num: -993
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_amount_1
_amount_1
_amount
_amount

Name: _amount_1 Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_token_1
_token_1
_token

Name: _token Function: deposit
Num: 
Den: 
Address: -993
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_112 = CONVERT _token_1 to IERC20
Converting _token_1

Name: _token Function: deposit
Num: 
Den: 
Address: -993
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
init
end
ERC20
[i]Type for TMP_112

Name: TMP_112 Function: deposit
Num: 
Den: 
Address: -993
Norm: u
LF: ERC20
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_113 = CONVERT this to address
Converting this
6
[i]Type for TMP_113

Name: TMP_113 Function: deposit
Num: 
Den: 
Address: 6
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
XXXX
LIBRARY_CALL, dest:SafeERC20, function:SafeERC20.safeTransferFrom(IERC20,address,address,uint256), arguments:['TMP_112', 'msg.sender', 'TMP_113', '_amount_1'] 
Propogating parameters and globals to SSA variables...
_before_1
_before_1
_before

Name: _before Function: deposit
Num: -993
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
_token_1
_token_1
_token

Name: _token Function: deposit
Num: 
Den: 
Address: -993
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
_amount_2
_amount_2
_amount
_amount

Name: _amount Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
totalDepositCap_8
totalDepositCap

Name: totalDepositCap Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10000000000000000000000000
Fields: 
Finance Type: undef
TMP_115 = CONVERT _token_1 to IERC20
Converting _token_1

Name: _token Function: deposit
Num: 
Den: 
Address: -993
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
init
end
ERC20
[i]Type for TMP_115

Name: TMP_115 Function: deposit
Num: 
Den: 
Address: -993
Norm: u
LF: ERC20
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_116 = CONVERT this to address
Converting this
6
[i]Type for TMP_116

Name: TMP_116 Function: deposit
Num: 
Den: 
Address: 6
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_117(uint256) = HIGH_LEVEL_CALL, dest:TMP_115(IERC20), function:balanceOf, arguments:['TMP_116']  
High Call: balanceOf
Running querryfc
Written func info: ERC20, balanceOf
Handling balance function!
-993
[i]Type for TMP_117

Name: TMP_117 Function: deposit
Num: -993
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
totalDepositCap_8(uint256) := ϕ(['totalDepositCap_8', 'totalDepositCap_1', 'totalDepositCap_10', 'totalDepositCap_7', 'totalDepositCap_13', 'totalDepositCap_2', 'totalDepositCap_11'])
Phi
[i]Type for totalDepositCap

Name: totalDepositCap Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10000000000000000000000000
Fields: 
Finance Type: undef
XXXX
TMP_118(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['TMP_117', '_before_1'] 
SUB1
init
end
init
end
A: 6 B: 6
x
y
A: 6 B: 6
<class 'int'>
<class 'int'>
lnorm: 6 rnorm: 6
SUB

Name: TMP_117 Function: deposit
Num: -993
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _before Function: deposit
Num: -993
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
[i]Type for TMP_118

Name: TMP_118 Function: deposit
Num: -993
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_amount_2(uint256) := TMP_118(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for _amount

Name: _amount Function: deposit
Num: -993
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_amount_2
_amount_2
_amount

Name: _amount Function: deposit
Num: -993
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_119(bool) = _amount_2 > 0
init
end
init
end
A: 6 B: 0
x
y
A: 6 B: 0
<class 'int'>
<class 'int'>
lnorm: 6 rnorm: 0
[i]Type for TMP_119

Name: TMP_119 Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
_shares_2
_shares
_shares

Name: _shares Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_shares_2(uint256) := ϕ(['_shares_0', '_shares_1'])
Phi
[i]Type for _shares

Name: _shares Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_amount_2
_amount_2
_amount

Name: _amount Function: deposit
Num: -993
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
_token_1
_token_1
_token

Name: _token Function: deposit
Num: 
Den: 
Address: -993
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
_amount_3
_amount_3
_amount
_amount

Name: _amount Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_120(uint256) = INTERNAL_CALL, Vault._normalizeDecimals(address,uint256)(_token_1,_amount_2)
init
end
init
end
[[], [], 'u', '_token', [], -1, -993, 'u']

Name: _token Function: None
Num: 
Den: 
Address: -993
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
[[-993], [-1], 6, None, [], -1, 'u', 'u']

Name: _amount Function: None
Num: -993
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _token Function: None
Num: 
Den: 
Address: -993
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef

Name: _amount Function: None
Num: -993
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
_token_1
_token

Name: _token_1 Function: _normalizeDecimals
Num: 
Den: 
Address: -993
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
_amount_1
_amount

Name: _amount_1 Function: _normalizeDecimals
Num: -993
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_token_1(address) := ϕ(['_token_1', '_token_1'])
Phi
[i]Type for _token

Name: _token Function: _normalizeDecimals
Num: 
Den: 
Address: -993
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
XXXX
_amount_1(uint256) := ϕ(['TMP_188', '_amount_2'])
Phi
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: -993
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_token_1
_token_1
_token

Name: _token Function: _normalizeDecimals
Num: 
Den: 
Address: -993
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
_decimals_1
_decimals_1
_decimals
_decimals

Name: _decimals Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_204 = CONVERT _token_1 to ExtendedIERC20
Converting _token_1

Name: _token Function: _normalizeDecimals
Num: 
Den: 
Address: -993
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
init
end
UNKNOWN
[i]Type for TMP_204

Name: TMP_204 Function: _normalizeDecimals
Num: 
Den: 
Address: -993
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_205(uint8) = HIGH_LEVEL_CALL, dest:TMP_204(ExtendedIERC20), function:decimals, arguments:[]  
High Call: decimals
Running querryfc
Written func info: UNKNOWN, decimals
Handling balance function!
-993
[i]Type for TMP_205

Name: TMP_205 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
XXXX
TMP_206 = CONVERT TMP_205 to uint256
Converting TMP_205

Name: TMP_205 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
init
end
[i]Type for TMP_206

Name: TMP_206 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_decimals_1(uint256) := TMP_206(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for _decimals

Name: _decimals Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_decimals_1
_decimals_1
_decimals

Name: _decimals Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_207(bool) = _decimals_1 < 18
init
end
init
end
A: u B: 0
x
lnorm: u rnorm: 0
[i]Type for TMP_207

Name: TMP_207 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
_amount_3
_amount
_amount

Name: _amount Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_amount_3(uint256) := ϕ(['_amount_1', '_amount_2'])
Phi
init
end
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: -993
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_amount_1
_amount_1
_amount

Name: _amount Function: _normalizeDecimals
Num: -993
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_decimals_1
_decimals_1
_decimals

Name: _decimals Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_amount_2
_amount_2
_amount
_amount

Name: _amount Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_208(uint256) = 18 - _decimals_1
SUB1
init
end
init
end
A: 0 B: u
lnorm: 0 rnorm: u
SUB

Name: 18 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _decimals Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
[i]Type for TMP_208

Name: TMP_208 Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_209(uint256) = 10 ** TMP_208
init
end
init
end
[i]Type for TMP_209

Name: TMP_209 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: *
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_210(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_amount_1', 'TMP_209'] 
init
end
init
end
A: u B: *
x
lnorm: u rnorm: *
init
end
[i]Type for TMP_210

Name: TMP_210 Function: _normalizeDecimals
Num: -993
Den: -1
Address: u
Norm: *
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_amount_2(uint256) := TMP_210(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: -993
Den: -1
Address: u
Norm: *
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_amount_3
_amount_3
_amount

Name: _amount Function: _normalizeDecimals
Num: -993
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
RETURN _amount_3
init
end

Name: _token Function: None
Num: 
Den: 
Address: -993
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef

Name: _amount Function: None
Num: -993
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
_token_1
_token

Name: _token_1 Function: _normalizeDecimals
Num: 
Den: 
Address: -993
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
_amount_1
_amount

Name: _amount_1 Function: _normalizeDecimals
Num: -993
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_token_1(address) := ϕ(['_token_1', '_token_1'])
Phi
[i]Type for _token

Name: _token Function: _normalizeDecimals
Num: 
Den: 
Address: -993
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
XXXX
_amount_1(uint256) := ϕ(['TMP_188', '_amount_2'])
Phi
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: -993
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_token_1
_token_1
_token

Name: _token Function: _normalizeDecimals
Num: 
Den: 
Address: -993
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
_decimals_1
_decimals_1
_decimals
_decimals

Name: _decimals Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_204 = CONVERT _token_1 to ExtendedIERC20
Converting _token_1

Name: _token Function: _normalizeDecimals
Num: 
Den: 
Address: -993
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
init
end
UNKNOWN
[i]Type for TMP_204

Name: TMP_204 Function: _normalizeDecimals
Num: 
Den: 
Address: -993
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_205(uint8) = HIGH_LEVEL_CALL, dest:TMP_204(ExtendedIERC20), function:decimals, arguments:[]  
High Call: decimals
Running querryfc
Written func info: UNKNOWN, decimals
Handling balance function!
-993
[i]Type for TMP_205

Name: TMP_205 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
XXXX
TMP_206 = CONVERT TMP_205 to uint256
Converting TMP_205

Name: TMP_205 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
init
end
[i]Type for TMP_206

Name: TMP_206 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_decimals_1(uint256) := TMP_206(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for _decimals

Name: _decimals Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_decimals_1
_decimals_1
_decimals

Name: _decimals Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_207(bool) = _decimals_1 < 18
init
end
init
end
A: u B: 0
x
lnorm: u rnorm: 0
[i]Type for TMP_207

Name: TMP_207 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
_amount_3
_amount
_amount

Name: _amount Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_amount_3(uint256) := ϕ(['_amount_1', '_amount_2'])
Phi
init
end
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: -993
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_amount_1
_amount_1
_amount

Name: _amount Function: _normalizeDecimals
Num: -993
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_decimals_1
_decimals_1
_decimals

Name: _decimals Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_amount_2
_amount_2
_amount
_amount

Name: _amount Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_208(uint256) = 18 - _decimals_1
SUB1
init
end
init
end
A: 0 B: u
lnorm: 0 rnorm: u
SUB

Name: 18 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _decimals Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
[i]Type for TMP_208

Name: TMP_208 Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_209(uint256) = 10 ** TMP_208
init
end
init
end
[i]Type for TMP_209

Name: TMP_209 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: *
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_210(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_amount_1', 'TMP_209'] 
init
end
init
end
A: u B: *
x
lnorm: u rnorm: *
init
end
[i]Type for TMP_210

Name: TMP_210 Function: _normalizeDecimals
Num: -993
Den: -1
Address: u
Norm: *
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_amount_2(uint256) := TMP_210(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: -993
Den: -1
Address: u
Norm: *
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_amount_3
_amount_3
_amount

Name: _amount Function: _normalizeDecimals
Num: -993
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
RETURN _amount_3
init
end
[i]Type for TMP_120

Name: TMP_120 Function: deposit
Num: -993
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_amount_3(uint256) := TMP_120(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for _amount

Name: _amount Function: deposit
Num: -993
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_121(uint256) = INTERNAL_CALL, ERC20.totalSupply()()
init
end
[i]Type for TMP_121

Name: TMP_121 Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_122(bool) = TMP_121 > 0
init
end
init
end
A: u B: 0
x
lnorm: u rnorm: 0
[i]Type for TMP_122

Name: TMP_122 Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_shares_2
_shares_2
_shares
_shares

Name: _shares Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_126(bool) = _shares_2 > 0
init
end
init
end
A: u B: 0
x
lnorm: u rnorm: 0
init
end
[i]Type for TMP_126

Name: TMP_126 Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
_amount_5
_amount
_amount

Name: _amount Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_amount_5(uint256) := ϕ(['_amount_4', '_amount_3'])
Phi
init
end
[i]Type for _amount

Name: _amount Function: deposit
Num: -993
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_amount_5
_amount_5
_amount

Name: _amount Function: deposit
Num: -993
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_shares_1
_shares_1
_shares
_shares

Name: _shares Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
_shares_1(uint256) := _amount_5(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for _shares

Name: _shares Function: deposit
Num: -993
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_amount_3
_amount_3
_amount

Name: _amount Function: deposit
Num: -993
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_balance_1
_balance_1
_balance
_balance

Name: _balance Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_amount_4
_amount_4
_amount
_amount

Name: _amount Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_123(uint256) = INTERNAL_CALL, ERC20.totalSupply()()
init
end
[i]Type for TMP_123

Name: TMP_123 Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_124(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_amount_3', 'TMP_123'] 
init
end
init
end
A: u B: u
x
lnorm: u rnorm: u
init
end
[i]Type for TMP_124

Name: TMP_124 Function: deposit
Num: -993
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_125(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_124', '_balance_1'] 
init
end
init
end
A: u B: u
x
lnorm: u rnorm: u
init
end
[i]Type for TMP_125

Name: TMP_125 Function: deposit
Num: -993
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_amount_4(uint256) := TMP_125(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for _amount

Name: _amount Function: deposit
Num: -993
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_shares_2
_shares_2
_shares
_shares

Name: _shares Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
INTERNAL_CALL, ERC20._mint(address,uint256)(msg.sender,_shares_2)
init
init
end
Propogating parameters and globals to SSA variables...
totalDepositCap_13
totalDepositCap_13
totalDepositCap

Name: totalDepositCap Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10000000000000000000000000
Fields: 
Finance Type: undef
End popogation
TMP_128(uint256) = INTERNAL_CALL, ERC20.totalSupply()()
init
end
[i]Type for TMP_128

Name: TMP_128 Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_129(bool) = TMP_128 <= totalDepositCap_13
init
end
init
end
A: u B: u
x
lnorm: u rnorm: u
[i]Type for TMP_129

Name: TMP_129 Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_130(None) = SOLIDITY_CALL require(bool,string)(TMP_129,>totalDepositCap)
[i]Type for TMP_130

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_shares_2
_shares_2
_shares
_shares

Name: _shares Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation


_token_1(address) := ϕ(['REF_50'])
_amount_1(uint256) := ϕ(['REF_51'])
totalDepositCap_3(uint256) := ϕ(['totalDepositCap_8', 'totalDepositCap_1', 'totalDepositCap_10', 'totalDepositCap_13', 'totalDepositCap_0', 'totalDepositCap_2', 'totalDepositCap_11'])
MODIFIER_CALL, Vault.checkToken(address)(_token_1)
MODIFIER_CALL, Vault.notHalted()()
TMP_106(bool) = _amount_1 > 0
TMP_107(None) = SOLIDITY_CALL require(bool,string)(TMP_106,!_amount)
TMP_108(uint256) = INTERNAL_CALL, Vault.balance()()
_balance_1(uint256) := TMP_108(uint256)
TMP_109 = CONVERT _token_1 to IERC20
TMP_110 = CONVERT this to address
TMP_111(uint256) = HIGH_LEVEL_CALL, dest:TMP_109(IERC20), function:balanceOf, arguments:['TMP_110']  
totalDepositCap_7(uint256) := ϕ(['totalDepositCap_8', 'totalDepositCap_1', 'totalDepositCap_10', 'totalDepositCap_6', 'totalDepositCap_13', 'totalDepositCap_2', 'totalDepositCap_11'])
_before_1(uint256) := TMP_111(uint256)
TMP_112 = CONVERT _token_1 to IERC20
TMP_113 = CONVERT this to address
LIBRARY_CALL, dest:SafeERC20, function:SafeERC20.safeTransferFrom(IERC20,address,address,uint256), arguments:['TMP_112', 'msg.sender', 'TMP_113', '_amount_1'] 
TMP_115 = CONVERT _token_1 to IERC20
TMP_116 = CONVERT this to address
TMP_117(uint256) = HIGH_LEVEL_CALL, dest:TMP_115(IERC20), function:balanceOf, arguments:['TMP_116']  
totalDepositCap_8(uint256) := ϕ(['totalDepositCap_8', 'totalDepositCap_1', 'totalDepositCap_10', 'totalDepositCap_7', 'totalDepositCap_13', 'totalDepositCap_2', 'totalDepositCap_11'])
TMP_118(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['TMP_117', '_before_1'] 
_amount_2(uint256) := TMP_118(uint256)
TMP_119(bool) = _amount_2 > 0
CONDITION TMP_119
_shares_2(uint256) := ϕ(['_shares_0', '_shares_1'])
TMP_120(uint256) = INTERNAL_CALL, Vault._normalizeDecimals(address,uint256)(_token_1,_amount_2)
_amount_3(uint256) := TMP_120(uint256)
TMP_121(uint256) = INTERNAL_CALL, ERC20.totalSupply()()
TMP_122(bool) = TMP_121 > 0
CONDITION TMP_122
TMP_126(bool) = _shares_2 > 0
CONDITION TMP_126
_amount_5(uint256) := ϕ(['_amount_4', '_amount_3'])
_shares_1(uint256) := _amount_5(uint256)
TMP_123(uint256) = INTERNAL_CALL, ERC20.totalSupply()()
TMP_124(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_amount_3', 'TMP_123'] 
TMP_125(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_124', '_balance_1'] 
_amount_4(uint256) := TMP_125(uint256)
INTERNAL_CALL, ERC20._mint(address,uint256)(msg.sender,_shares_2)
TMP_128(uint256) = INTERNAL_CALL, ERC20.totalSupply()()
TMP_129(bool) = TMP_128 <= totalDepositCap_13
TMP_130(None) = SOLIDITY_CALL require(bool,string)(TMP_129,>totalDepositCap)
Emit Deposit(msg.sender,_shares_2)


Propogating parameters and globals to SSA variables...
End popogation
_token_1
_token

Name: _token Function: deposit
Num: 
Den: 
Address: -993
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
_amount_1
_amount
_amount

Name: _amount_1 Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
totalDepositCap_3
totalDepositCap

Name: totalDepositCap Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10000000000000000000000000
Fields: 
Finance Type: undef
_token_1(address) := ϕ(['REF_50'])
Phi
[i]Type for _token

Name: _token Function: deposit
Num: 
Den: 
Address: -993
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
XXXX
_amount_1(uint256) := ϕ(['REF_51'])
Phi
[i]Type for _amount

Name: _amount Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
totalDepositCap_3(uint256) := ϕ(['totalDepositCap_8', 'totalDepositCap_1', 'totalDepositCap_10', 'totalDepositCap_13', 'totalDepositCap_0', 'totalDepositCap_2', 'totalDepositCap_11'])
Phi
[i]Type for totalDepositCap

Name: totalDepositCap Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10000000000000000000000000
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_token_1
_token_1
_token

Name: _token Function: deposit
Num: 
Den: 
Address: -993
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
End popogation
MODIFIER_CALL, Vault.checkToken(address)(_token_1)
init
end
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, Vault.notHalted()()
Propogating parameters and globals to SSA variables...
_amount_1
_amount_1
_amount
_amount

Name: _amount_1 Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_106(bool) = _amount_1 > 0
init
end
init
end
A: u B: 0
x
lnorm: u rnorm: 0
init
end
[i]Type for TMP_106

Name: TMP_106 Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_107(None) = SOLIDITY_CALL require(bool,string)(TMP_106,!_amount)
[i]Type for TMP_107

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_balance_1
_balance_1
_balance
_balance

Name: _balance Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_108(uint256) = INTERNAL_CALL, Vault.balance()()
init
end
[i]Type for TMP_108

Name: TMP_108 Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_balance_1(uint256) := TMP_108(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for _balance

Name: _balance Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_token_1
_token_1
_token

Name: _token Function: deposit
Num: 
Den: 
Address: -993
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
_before_1
_before_1
_before

Name: _before Function: deposit
Num: -993
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
totalDepositCap_7
totalDepositCap

Name: totalDepositCap Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10000000000000000000000000
Fields: 
Finance Type: undef
TMP_109 = CONVERT _token_1 to IERC20
Converting _token_1

Name: _token Function: deposit
Num: 
Den: 
Address: -993
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
init
end
ERC20
[i]Type for TMP_109

Name: TMP_109 Function: deposit
Num: 
Den: 
Address: -993
Norm: u
LF: ERC20
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_110 = CONVERT this to address
Converting this
6
[i]Type for TMP_110

Name: TMP_110 Function: deposit
Num: 
Den: 
Address: 6
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_111(uint256) = HIGH_LEVEL_CALL, dest:TMP_109(IERC20), function:balanceOf, arguments:['TMP_110']  
High Call: balanceOf
Running querryfc
Written func info: ERC20, balanceOf
Handling balance function!
-993
[i]Type for TMP_111

Name: TMP_111 Function: deposit
Num: -993
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
totalDepositCap_7(uint256) := ϕ(['totalDepositCap_8', 'totalDepositCap_1', 'totalDepositCap_10', 'totalDepositCap_6', 'totalDepositCap_13', 'totalDepositCap_2', 'totalDepositCap_11'])
Phi
[i]Type for totalDepositCap

Name: totalDepositCap Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10000000000000000000000000
Fields: 
Finance Type: undef
XXXX
_before_1(uint256) := TMP_111(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for _before

Name: _before Function: deposit
Num: -993
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_amount_1
_amount_1
_amount
_amount

Name: _amount_1 Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_token_1
_token_1
_token

Name: _token Function: deposit
Num: 
Den: 
Address: -993
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_112 = CONVERT _token_1 to IERC20
Converting _token_1

Name: _token Function: deposit
Num: 
Den: 
Address: -993
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
init
end
ERC20
[i]Type for TMP_112

Name: TMP_112 Function: deposit
Num: 
Den: 
Address: -993
Norm: u
LF: ERC20
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_113 = CONVERT this to address
Converting this
6
[i]Type for TMP_113

Name: TMP_113 Function: deposit
Num: 
Den: 
Address: 6
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
XXXX
LIBRARY_CALL, dest:SafeERC20, function:SafeERC20.safeTransferFrom(IERC20,address,address,uint256), arguments:['TMP_112', 'msg.sender', 'TMP_113', '_amount_1'] 
Propogating parameters and globals to SSA variables...
_before_1
_before_1
_before

Name: _before Function: deposit
Num: -993
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
_token_1
_token_1
_token

Name: _token Function: deposit
Num: 
Den: 
Address: -993
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
_amount_2
_amount_2
_amount

Name: _amount Function: deposit
Num: -993
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
totalDepositCap_8
totalDepositCap

Name: totalDepositCap Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10000000000000000000000000
Fields: 
Finance Type: undef
TMP_115 = CONVERT _token_1 to IERC20
Converting _token_1

Name: _token Function: deposit
Num: 
Den: 
Address: -993
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
init
end
ERC20
[i]Type for TMP_115

Name: TMP_115 Function: deposit
Num: 
Den: 
Address: -993
Norm: u
LF: ERC20
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_116 = CONVERT this to address
Converting this
6
[i]Type for TMP_116

Name: TMP_116 Function: deposit
Num: 
Den: 
Address: 6
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_117(uint256) = HIGH_LEVEL_CALL, dest:TMP_115(IERC20), function:balanceOf, arguments:['TMP_116']  
High Call: balanceOf
Running querryfc
Written func info: ERC20, balanceOf
Handling balance function!
-993
[i]Type for TMP_117

Name: TMP_117 Function: deposit
Num: -993
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
totalDepositCap_8(uint256) := ϕ(['totalDepositCap_8', 'totalDepositCap_1', 'totalDepositCap_10', 'totalDepositCap_7', 'totalDepositCap_13', 'totalDepositCap_2', 'totalDepositCap_11'])
Phi
[i]Type for totalDepositCap

Name: totalDepositCap Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10000000000000000000000000
Fields: 
Finance Type: undef
XXXX
TMP_118(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['TMP_117', '_before_1'] 
SUB1
init
end
init
end
A: 6 B: 6
x
y
A: 6 B: 6
<class 'int'>
<class 'int'>
lnorm: 6 rnorm: 6
SUB

Name: TMP_117 Function: deposit
Num: -993
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _before Function: deposit
Num: -993
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
[i]Type for TMP_118

Name: TMP_118 Function: deposit
Num: -993
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_amount_2(uint256) := TMP_118(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for _amount

Name: _amount Function: deposit
Num: -993
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_amount_2
_amount_2
_amount

Name: _amount Function: deposit
Num: -993
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_119(bool) = _amount_2 > 0
init
end
init
end
A: 6 B: 0
x
y
A: 6 B: 0
<class 'int'>
<class 'int'>
lnorm: 6 rnorm: 0
[i]Type for TMP_119

Name: TMP_119 Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
_shares_2
_shares
_shares

Name: _shares Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_shares_2(uint256) := ϕ(['_shares_0', '_shares_1'])
Phi
[i]Type for _shares

Name: _shares Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_amount_2
_amount_2
_amount

Name: _amount Function: deposit
Num: -993
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
_token_1
_token_1
_token

Name: _token Function: deposit
Num: 
Den: 
Address: -993
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
_amount_3
_amount_3
_amount

Name: _amount Function: deposit
Num: -993
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_120(uint256) = INTERNAL_CALL, Vault._normalizeDecimals(address,uint256)(_token_1,_amount_2)
init
end
init
end
[[], [], 'u', '_token', [], -1, -993, 'u']

Name: _token Function: None
Num: 
Den: 
Address: -993
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
[[-993], [-1], 6, None, [], -1, 'u', 'u']

Name: _amount Function: None
Num: -993
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _token Function: None
Num: 
Den: 
Address: -993
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef

Name: _amount Function: None
Num: -993
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
_token_1
_token

Name: _token_1 Function: _normalizeDecimals
Num: 
Den: 
Address: -993
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
_amount_1
_amount

Name: _amount_1 Function: _normalizeDecimals
Num: -993
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_token_1(address) := ϕ(['_token_1', '_token_1'])
Phi
[i]Type for _token

Name: _token Function: _normalizeDecimals
Num: 
Den: 
Address: -993
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
XXXX
_amount_1(uint256) := ϕ(['TMP_188', '_amount_2'])
Phi
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: -993
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_token_1
_token_1
_token

Name: _token Function: _normalizeDecimals
Num: 
Den: 
Address: -993
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
_decimals_1
_decimals_1
_decimals
_decimals

Name: _decimals Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_204 = CONVERT _token_1 to ExtendedIERC20
Converting _token_1

Name: _token Function: _normalizeDecimals
Num: 
Den: 
Address: -993
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
init
end
UNKNOWN
[i]Type for TMP_204

Name: TMP_204 Function: _normalizeDecimals
Num: 
Den: 
Address: -993
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_205(uint8) = HIGH_LEVEL_CALL, dest:TMP_204(ExtendedIERC20), function:decimals, arguments:[]  
High Call: decimals
Running querryfc
Written func info: UNKNOWN, decimals
Handling balance function!
-993
[i]Type for TMP_205

Name: TMP_205 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
XXXX
TMP_206 = CONVERT TMP_205 to uint256
Converting TMP_205

Name: TMP_205 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
init
end
[i]Type for TMP_206

Name: TMP_206 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_decimals_1(uint256) := TMP_206(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for _decimals

Name: _decimals Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_decimals_1
_decimals_1
_decimals

Name: _decimals Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_207(bool) = _decimals_1 < 18
init
end
init
end
A: u B: 0
x
lnorm: u rnorm: 0
[i]Type for TMP_207

Name: TMP_207 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
_amount_3
_amount
_amount

Name: _amount Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_amount_3(uint256) := ϕ(['_amount_1', '_amount_2'])
Phi
init
end
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: -993
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_amount_1
_amount_1
_amount

Name: _amount Function: _normalizeDecimals
Num: -993
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_decimals_1
_decimals_1
_decimals

Name: _decimals Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_amount_2
_amount_2
_amount
_amount

Name: _amount Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_208(uint256) = 18 - _decimals_1
SUB1
init
end
init
end
A: 0 B: u
lnorm: 0 rnorm: u
SUB

Name: 18 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _decimals Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
[i]Type for TMP_208

Name: TMP_208 Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_209(uint256) = 10 ** TMP_208
init
end
init
end
[i]Type for TMP_209

Name: TMP_209 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: *
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_210(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_amount_1', 'TMP_209'] 
init
end
init
end
A: u B: *
x
lnorm: u rnorm: *
init
end
[i]Type for TMP_210

Name: TMP_210 Function: _normalizeDecimals
Num: -993
Den: -1
Address: u
Norm: *
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_amount_2(uint256) := TMP_210(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: -993
Den: -1
Address: u
Norm: *
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_amount_3
_amount_3
_amount

Name: _amount Function: _normalizeDecimals
Num: -993
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
RETURN _amount_3
init
end

Name: _token Function: None
Num: 
Den: 
Address: -993
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef

Name: _amount Function: None
Num: -993
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
_token_1
_token

Name: _token_1 Function: _normalizeDecimals
Num: 
Den: 
Address: -993
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
_amount_1
_amount

Name: _amount_1 Function: _normalizeDecimals
Num: -993
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_token_1(address) := ϕ(['_token_1', '_token_1'])
Phi
[i]Type for _token

Name: _token Function: _normalizeDecimals
Num: 
Den: 
Address: -993
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
XXXX
_amount_1(uint256) := ϕ(['TMP_188', '_amount_2'])
Phi
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: -993
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_token_1
_token_1
_token

Name: _token Function: _normalizeDecimals
Num: 
Den: 
Address: -993
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
_decimals_1
_decimals_1
_decimals
_decimals

Name: _decimals Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_204 = CONVERT _token_1 to ExtendedIERC20
Converting _token_1

Name: _token Function: _normalizeDecimals
Num: 
Den: 
Address: -993
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
init
end
UNKNOWN
[i]Type for TMP_204

Name: TMP_204 Function: _normalizeDecimals
Num: 
Den: 
Address: -993
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_205(uint8) = HIGH_LEVEL_CALL, dest:TMP_204(ExtendedIERC20), function:decimals, arguments:[]  
High Call: decimals
Running querryfc
Written func info: UNKNOWN, decimals
Handling balance function!
-993
[i]Type for TMP_205

Name: TMP_205 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
XXXX
TMP_206 = CONVERT TMP_205 to uint256
Converting TMP_205

Name: TMP_205 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
init
end
[i]Type for TMP_206

Name: TMP_206 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_decimals_1(uint256) := TMP_206(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for _decimals

Name: _decimals Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_decimals_1
_decimals_1
_decimals

Name: _decimals Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_207(bool) = _decimals_1 < 18
init
end
init
end
A: u B: 0
x
lnorm: u rnorm: 0
[i]Type for TMP_207

Name: TMP_207 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
_amount_3
_amount
_amount

Name: _amount Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_amount_3(uint256) := ϕ(['_amount_1', '_amount_2'])
Phi
init
end
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: -993
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_amount_1
_amount_1
_amount

Name: _amount Function: _normalizeDecimals
Num: -993
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_decimals_1
_decimals_1
_decimals

Name: _decimals Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_amount_2
_amount_2
_amount
_amount

Name: _amount Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_208(uint256) = 18 - _decimals_1
SUB1
init
end
init
end
A: 0 B: u
lnorm: 0 rnorm: u
SUB

Name: 18 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _decimals Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
[i]Type for TMP_208

Name: TMP_208 Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_209(uint256) = 10 ** TMP_208
init
end
init
end
[i]Type for TMP_209

Name: TMP_209 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: *
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_210(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_amount_1', 'TMP_209'] 
init
end
init
end
A: u B: *
x
lnorm: u rnorm: *
init
end
[i]Type for TMP_210

Name: TMP_210 Function: _normalizeDecimals
Num: -993
Den: -1
Address: u
Norm: *
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_amount_2(uint256) := TMP_210(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: -993
Den: -1
Address: u
Norm: *
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_amount_3
_amount_3
_amount

Name: _amount Function: _normalizeDecimals
Num: -993
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
RETURN _amount_3
init
end
[i]Type for TMP_120

Name: TMP_120 Function: deposit
Num: -993
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_amount_3(uint256) := TMP_120(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for _amount

Name: _amount Function: deposit
Num: -993
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_121(uint256) = INTERNAL_CALL, ERC20.totalSupply()()
init
end
[i]Type for TMP_121

Name: TMP_121 Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_122(bool) = TMP_121 > 0
init
end
init
end
A: u B: 0
x
lnorm: u rnorm: 0
[i]Type for TMP_122

Name: TMP_122 Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_shares_2
_shares_2
_shares
_shares

Name: _shares Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_126(bool) = _shares_2 > 0
init
end
init
end
A: u B: 0
x
lnorm: u rnorm: 0
init
end
[i]Type for TMP_126

Name: TMP_126 Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
_amount_5
_amount

Name: _amount Function: deposit
Num: -993
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_amount_5(uint256) := ϕ(['_amount_4', '_amount_3'])
Phi
[i]Type for _amount

Name: _amount Function: deposit
Num: -993
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_amount_5
_amount_5
_amount

Name: _amount Function: deposit
Num: -993
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_shares_1
_shares_1
_shares

Name: _shares Function: deposit
Num: -993
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
_shares_1(uint256) := _amount_5(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for _shares

Name: _shares Function: deposit
Num: -993
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_amount_3
_amount_3
_amount

Name: _amount Function: deposit
Num: -993
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_balance_1
_balance_1
_balance
_balance

Name: _balance Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_amount_4
_amount_4
_amount

Name: _amount Function: deposit
Num: -993
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_123(uint256) = INTERNAL_CALL, ERC20.totalSupply()()
init
end
[i]Type for TMP_123

Name: TMP_123 Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_124(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_amount_3', 'TMP_123'] 
init
end
init
end
A: u B: u
x
lnorm: u rnorm: u
init
end
[i]Type for TMP_124

Name: TMP_124 Function: deposit
Num: -993
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_125(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_124', '_balance_1'] 
init
end
init
end
A: u B: u
x
lnorm: u rnorm: u
[i]Type for TMP_125

Name: TMP_125 Function: deposit
Num: -993
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_amount_4(uint256) := TMP_125(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for _amount

Name: _amount Function: deposit
Num: -993
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_shares_2
_shares_2
_shares
_shares

Name: _shares Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
INTERNAL_CALL, ERC20._mint(address,uint256)(msg.sender,_shares_2)
init
init
end
Propogating parameters and globals to SSA variables...
totalDepositCap_13
totalDepositCap_13
totalDepositCap

Name: totalDepositCap Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10000000000000000000000000
Fields: 
Finance Type: undef
End popogation
TMP_128(uint256) = INTERNAL_CALL, ERC20.totalSupply()()
init
end
[i]Type for TMP_128

Name: TMP_128 Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_129(bool) = TMP_128 <= totalDepositCap_13
init
end
init
end
A: u B: u
x
lnorm: u rnorm: u
[i]Type for TMP_129

Name: TMP_129 Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_130(None) = SOLIDITY_CALL require(bool,string)(TMP_129,>totalDepositCap)
[i]Type for TMP_130

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_shares_2
_shares_2
_shares
_shares

Name: _shares Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation


_token_1(address) := ϕ(['REF_50'])
_amount_1(uint256) := ϕ(['REF_51'])
totalDepositCap_3(uint256) := ϕ(['totalDepositCap_8', 'totalDepositCap_1', 'totalDepositCap_10', 'totalDepositCap_13', 'totalDepositCap_0', 'totalDepositCap_2', 'totalDepositCap_11'])
MODIFIER_CALL, Vault.checkToken(address)(_token_1)
MODIFIER_CALL, Vault.notHalted()()
TMP_106(bool) = _amount_1 > 0
TMP_107(None) = SOLIDITY_CALL require(bool,string)(TMP_106,!_amount)
TMP_108(uint256) = INTERNAL_CALL, Vault.balance()()
_balance_1(uint256) := TMP_108(uint256)
TMP_109 = CONVERT _token_1 to IERC20
TMP_110 = CONVERT this to address
TMP_111(uint256) = HIGH_LEVEL_CALL, dest:TMP_109(IERC20), function:balanceOf, arguments:['TMP_110']  
totalDepositCap_7(uint256) := ϕ(['totalDepositCap_8', 'totalDepositCap_1', 'totalDepositCap_10', 'totalDepositCap_6', 'totalDepositCap_13', 'totalDepositCap_2', 'totalDepositCap_11'])
_before_1(uint256) := TMP_111(uint256)
TMP_112 = CONVERT _token_1 to IERC20
TMP_113 = CONVERT this to address
LIBRARY_CALL, dest:SafeERC20, function:SafeERC20.safeTransferFrom(IERC20,address,address,uint256), arguments:['TMP_112', 'msg.sender', 'TMP_113', '_amount_1'] 
TMP_115 = CONVERT _token_1 to IERC20
TMP_116 = CONVERT this to address
TMP_117(uint256) = HIGH_LEVEL_CALL, dest:TMP_115(IERC20), function:balanceOf, arguments:['TMP_116']  
totalDepositCap_8(uint256) := ϕ(['totalDepositCap_8', 'totalDepositCap_1', 'totalDepositCap_10', 'totalDepositCap_7', 'totalDepositCap_13', 'totalDepositCap_2', 'totalDepositCap_11'])
TMP_118(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['TMP_117', '_before_1'] 
_amount_2(uint256) := TMP_118(uint256)
TMP_119(bool) = _amount_2 > 0
CONDITION TMP_119
_shares_2(uint256) := ϕ(['_shares_0', '_shares_1'])
TMP_120(uint256) = INTERNAL_CALL, Vault._normalizeDecimals(address,uint256)(_token_1,_amount_2)
_amount_3(uint256) := TMP_120(uint256)
TMP_121(uint256) = INTERNAL_CALL, ERC20.totalSupply()()
TMP_122(bool) = TMP_121 > 0
CONDITION TMP_122
TMP_126(bool) = _shares_2 > 0
CONDITION TMP_126
_amount_5(uint256) := ϕ(['_amount_4', '_amount_3'])
_shares_1(uint256) := _amount_5(uint256)
TMP_123(uint256) = INTERNAL_CALL, ERC20.totalSupply()()
TMP_124(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_amount_3', 'TMP_123'] 
TMP_125(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_124', '_balance_1'] 
_amount_4(uint256) := TMP_125(uint256)
INTERNAL_CALL, ERC20._mint(address,uint256)(msg.sender,_shares_2)
TMP_128(uint256) = INTERNAL_CALL, ERC20.totalSupply()()
TMP_129(bool) = TMP_128 <= totalDepositCap_13
TMP_130(None) = SOLIDITY_CALL require(bool,string)(TMP_129,>totalDepositCap)
Emit Deposit(msg.sender,_shares_2)


Propogating parameters and globals to SSA variables...
End popogation
_token_1
_token

Name: _token Function: deposit
Num: 
Den: 
Address: -993
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
_amount_1
_amount
_amount

Name: _amount_1 Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
totalDepositCap_3
totalDepositCap

Name: totalDepositCap Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10000000000000000000000000
Fields: 
Finance Type: undef
_token_1(address) := ϕ(['REF_50'])
Phi
[i]Type for _token

Name: _token Function: deposit
Num: 
Den: 
Address: -993
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
XXXX
_amount_1(uint256) := ϕ(['REF_51'])
Phi
[i]Type for _amount

Name: _amount Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
totalDepositCap_3(uint256) := ϕ(['totalDepositCap_8', 'totalDepositCap_1', 'totalDepositCap_10', 'totalDepositCap_13', 'totalDepositCap_0', 'totalDepositCap_2', 'totalDepositCap_11'])
Phi
[i]Type for totalDepositCap

Name: totalDepositCap Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10000000000000000000000000
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_token_1
_token_1
_token

Name: _token Function: deposit
Num: 
Den: 
Address: -993
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
End popogation
MODIFIER_CALL, Vault.checkToken(address)(_token_1)
init
end
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, Vault.notHalted()()
Propogating parameters and globals to SSA variables...
_amount_1
_amount_1
_amount
_amount

Name: _amount_1 Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_106(bool) = _amount_1 > 0
init
end
init
end
A: u B: 0
x
lnorm: u rnorm: 0
init
end
[i]Type for TMP_106

Name: TMP_106 Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_107(None) = SOLIDITY_CALL require(bool,string)(TMP_106,!_amount)
[i]Type for TMP_107

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_balance_1
_balance_1
_balance
_balance

Name: _balance Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_108(uint256) = INTERNAL_CALL, Vault.balance()()
init
end
[i]Type for TMP_108

Name: TMP_108 Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_balance_1(uint256) := TMP_108(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for _balance

Name: _balance Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_token_1
_token_1
_token

Name: _token Function: deposit
Num: 
Den: 
Address: -993
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
_before_1
_before_1
_before

Name: _before Function: deposit
Num: -993
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
totalDepositCap_7
totalDepositCap

Name: totalDepositCap Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10000000000000000000000000
Fields: 
Finance Type: undef
TMP_109 = CONVERT _token_1 to IERC20
Converting _token_1

Name: _token Function: deposit
Num: 
Den: 
Address: -993
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
init
end
ERC20
[i]Type for TMP_109

Name: TMP_109 Function: deposit
Num: 
Den: 
Address: -993
Norm: u
LF: ERC20
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_110 = CONVERT this to address
Converting this
6
[i]Type for TMP_110

Name: TMP_110 Function: deposit
Num: 
Den: 
Address: 6
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_111(uint256) = HIGH_LEVEL_CALL, dest:TMP_109(IERC20), function:balanceOf, arguments:['TMP_110']  
High Call: balanceOf
Running querryfc
Written func info: ERC20, balanceOf
Handling balance function!
-993
[i]Type for TMP_111

Name: TMP_111 Function: deposit
Num: -993
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
totalDepositCap_7(uint256) := ϕ(['totalDepositCap_8', 'totalDepositCap_1', 'totalDepositCap_10', 'totalDepositCap_6', 'totalDepositCap_13', 'totalDepositCap_2', 'totalDepositCap_11'])
Phi
[i]Type for totalDepositCap

Name: totalDepositCap Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10000000000000000000000000
Fields: 
Finance Type: undef
XXXX
_before_1(uint256) := TMP_111(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for _before

Name: _before Function: deposit
Num: -993
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_amount_1
_amount_1
_amount
_amount

Name: _amount_1 Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_token_1
_token_1
_token

Name: _token Function: deposit
Num: 
Den: 
Address: -993
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_112 = CONVERT _token_1 to IERC20
Converting _token_1

Name: _token Function: deposit
Num: 
Den: 
Address: -993
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
init
end
ERC20
[i]Type for TMP_112

Name: TMP_112 Function: deposit
Num: 
Den: 
Address: -993
Norm: u
LF: ERC20
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_113 = CONVERT this to address
Converting this
6
[i]Type for TMP_113

Name: TMP_113 Function: deposit
Num: 
Den: 
Address: 6
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
XXXX
LIBRARY_CALL, dest:SafeERC20, function:SafeERC20.safeTransferFrom(IERC20,address,address,uint256), arguments:['TMP_112', 'msg.sender', 'TMP_113', '_amount_1'] 
Propogating parameters and globals to SSA variables...
_before_1
_before_1
_before

Name: _before Function: deposit
Num: -993
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
_token_1
_token_1
_token

Name: _token Function: deposit
Num: 
Den: 
Address: -993
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
_amount_2
_amount_2
_amount

Name: _amount Function: deposit
Num: -993
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
totalDepositCap_8
totalDepositCap

Name: totalDepositCap Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10000000000000000000000000
Fields: 
Finance Type: undef
TMP_115 = CONVERT _token_1 to IERC20
Converting _token_1

Name: _token Function: deposit
Num: 
Den: 
Address: -993
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
init
end
ERC20
[i]Type for TMP_115

Name: TMP_115 Function: deposit
Num: 
Den: 
Address: -993
Norm: u
LF: ERC20
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_116 = CONVERT this to address
Converting this
6
[i]Type for TMP_116

Name: TMP_116 Function: deposit
Num: 
Den: 
Address: 6
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_117(uint256) = HIGH_LEVEL_CALL, dest:TMP_115(IERC20), function:balanceOf, arguments:['TMP_116']  
High Call: balanceOf
Running querryfc
Written func info: ERC20, balanceOf
Handling balance function!
-993
[i]Type for TMP_117

Name: TMP_117 Function: deposit
Num: -993
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
totalDepositCap_8(uint256) := ϕ(['totalDepositCap_8', 'totalDepositCap_1', 'totalDepositCap_10', 'totalDepositCap_7', 'totalDepositCap_13', 'totalDepositCap_2', 'totalDepositCap_11'])
Phi
[i]Type for totalDepositCap

Name: totalDepositCap Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10000000000000000000000000
Fields: 
Finance Type: undef
XXXX
TMP_118(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['TMP_117', '_before_1'] 
SUB1
init
end
init
end
A: 6 B: 6
x
y
A: 6 B: 6
<class 'int'>
<class 'int'>
lnorm: 6 rnorm: 6
SUB

Name: TMP_117 Function: deposit
Num: -993
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _before Function: deposit
Num: -993
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
[i]Type for TMP_118

Name: TMP_118 Function: deposit
Num: -993
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_amount_2(uint256) := TMP_118(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for _amount

Name: _amount Function: deposit
Num: -993
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_amount_2
_amount_2
_amount

Name: _amount Function: deposit
Num: -993
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_119(bool) = _amount_2 > 0
init
end
init
end
A: 6 B: 0
x
y
A: 6 B: 0
<class 'int'>
<class 'int'>
lnorm: 6 rnorm: 0
[i]Type for TMP_119

Name: TMP_119 Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
_shares_2
_shares
_shares

Name: _shares Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_shares_2(uint256) := ϕ(['_shares_0', '_shares_1'])
Phi
[i]Type for _shares

Name: _shares Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_amount_2
_amount_2
_amount

Name: _amount Function: deposit
Num: -993
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
_token_1
_token_1
_token

Name: _token Function: deposit
Num: 
Den: 
Address: -993
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
_amount_3
_amount_3
_amount

Name: _amount Function: deposit
Num: -993
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_120(uint256) = INTERNAL_CALL, Vault._normalizeDecimals(address,uint256)(_token_1,_amount_2)
init
end
init
end
[[], [], 'u', '_token', [], -1, -993, 'u']

Name: _token Function: None
Num: 
Den: 
Address: -993
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
[[-993], [-1], 6, None, [], -1, 'u', 'u']

Name: _amount Function: None
Num: -993
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _token Function: None
Num: 
Den: 
Address: -993
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef

Name: _amount Function: None
Num: -993
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
_token_1
_token

Name: _token_1 Function: _normalizeDecimals
Num: 
Den: 
Address: -993
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
_amount_1
_amount

Name: _amount_1 Function: _normalizeDecimals
Num: -993
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_token_1(address) := ϕ(['_token_1', '_token_1'])
Phi
[i]Type for _token

Name: _token Function: _normalizeDecimals
Num: 
Den: 
Address: -993
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
XXXX
_amount_1(uint256) := ϕ(['TMP_188', '_amount_2'])
Phi
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: -993
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_token_1
_token_1
_token

Name: _token Function: _normalizeDecimals
Num: 
Den: 
Address: -993
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
_decimals_1
_decimals_1
_decimals
_decimals

Name: _decimals Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_204 = CONVERT _token_1 to ExtendedIERC20
Converting _token_1

Name: _token Function: _normalizeDecimals
Num: 
Den: 
Address: -993
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
init
end
UNKNOWN
[i]Type for TMP_204

Name: TMP_204 Function: _normalizeDecimals
Num: 
Den: 
Address: -993
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_205(uint8) = HIGH_LEVEL_CALL, dest:TMP_204(ExtendedIERC20), function:decimals, arguments:[]  
High Call: decimals
Running querryfc
Written func info: UNKNOWN, decimals
Handling balance function!
-993
[i]Type for TMP_205

Name: TMP_205 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
XXXX
TMP_206 = CONVERT TMP_205 to uint256
Converting TMP_205

Name: TMP_205 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
init
end
[i]Type for TMP_206

Name: TMP_206 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_decimals_1(uint256) := TMP_206(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for _decimals

Name: _decimals Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_decimals_1
_decimals_1
_decimals

Name: _decimals Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_207(bool) = _decimals_1 < 18
init
end
init
end
A: u B: 0
x
lnorm: u rnorm: 0
[i]Type for TMP_207

Name: TMP_207 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
_amount_3
_amount
_amount

Name: _amount Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_amount_3(uint256) := ϕ(['_amount_1', '_amount_2'])
Phi
init
end
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: -993
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_amount_1
_amount_1
_amount

Name: _amount Function: _normalizeDecimals
Num: -993
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_decimals_1
_decimals_1
_decimals

Name: _decimals Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_amount_2
_amount_2
_amount
_amount

Name: _amount Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_208(uint256) = 18 - _decimals_1
SUB1
init
end
init
end
A: 0 B: u
lnorm: 0 rnorm: u
SUB

Name: 18 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _decimals Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
[i]Type for TMP_208

Name: TMP_208 Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_209(uint256) = 10 ** TMP_208
init
end
init
end
[i]Type for TMP_209

Name: TMP_209 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: *
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_210(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_amount_1', 'TMP_209'] 
init
end
init
end
A: u B: *
x
lnorm: u rnorm: *
init
end
[i]Type for TMP_210

Name: TMP_210 Function: _normalizeDecimals
Num: -993
Den: -1
Address: u
Norm: *
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_amount_2(uint256) := TMP_210(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: -993
Den: -1
Address: u
Norm: *
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_amount_3
_amount_3
_amount

Name: _amount Function: _normalizeDecimals
Num: -993
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
RETURN _amount_3
init
end

Name: _token Function: None
Num: 
Den: 
Address: -993
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef

Name: _amount Function: None
Num: -993
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
_token_1
_token

Name: _token_1 Function: _normalizeDecimals
Num: 
Den: 
Address: -993
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
_amount_1
_amount

Name: _amount_1 Function: _normalizeDecimals
Num: -993
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_token_1(address) := ϕ(['_token_1', '_token_1'])
Phi
[i]Type for _token

Name: _token Function: _normalizeDecimals
Num: 
Den: 
Address: -993
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
XXXX
_amount_1(uint256) := ϕ(['TMP_188', '_amount_2'])
Phi
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: -993
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_token_1
_token_1
_token

Name: _token Function: _normalizeDecimals
Num: 
Den: 
Address: -993
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
_decimals_1
_decimals_1
_decimals
_decimals

Name: _decimals Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_204 = CONVERT _token_1 to ExtendedIERC20
Converting _token_1

Name: _token Function: _normalizeDecimals
Num: 
Den: 
Address: -993
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
init
end
UNKNOWN
[i]Type for TMP_204

Name: TMP_204 Function: _normalizeDecimals
Num: 
Den: 
Address: -993
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_205(uint8) = HIGH_LEVEL_CALL, dest:TMP_204(ExtendedIERC20), function:decimals, arguments:[]  
High Call: decimals
Running querryfc
Written func info: UNKNOWN, decimals
Handling balance function!
-993
[i]Type for TMP_205

Name: TMP_205 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
XXXX
TMP_206 = CONVERT TMP_205 to uint256
Converting TMP_205

Name: TMP_205 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
init
end
[i]Type for TMP_206

Name: TMP_206 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_decimals_1(uint256) := TMP_206(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for _decimals

Name: _decimals Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_decimals_1
_decimals_1
_decimals

Name: _decimals Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_207(bool) = _decimals_1 < 18
init
end
init
end
A: u B: 0
x
lnorm: u rnorm: 0
[i]Type for TMP_207

Name: TMP_207 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
_amount_3
_amount
_amount

Name: _amount Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_amount_3(uint256) := ϕ(['_amount_1', '_amount_2'])
Phi
init
end
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: -993
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_amount_1
_amount_1
_amount

Name: _amount Function: _normalizeDecimals
Num: -993
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_decimals_1
_decimals_1
_decimals

Name: _decimals Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_amount_2
_amount_2
_amount
_amount

Name: _amount Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_208(uint256) = 18 - _decimals_1
SUB1
init
end
init
end
A: 0 B: u
lnorm: 0 rnorm: u
SUB

Name: 18 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _decimals Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
[i]Type for TMP_208

Name: TMP_208 Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_209(uint256) = 10 ** TMP_208
init
end
init
end
[i]Type for TMP_209

Name: TMP_209 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: *
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_210(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_amount_1', 'TMP_209'] 
init
end
init
end
A: u B: *
x
lnorm: u rnorm: *
init
end
[i]Type for TMP_210

Name: TMP_210 Function: _normalizeDecimals
Num: -993
Den: -1
Address: u
Norm: *
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_amount_2(uint256) := TMP_210(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: -993
Den: -1
Address: u
Norm: *
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_amount_3
_amount_3
_amount

Name: _amount Function: _normalizeDecimals
Num: -993
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
RETURN _amount_3
init
end
[i]Type for TMP_120

Name: TMP_120 Function: deposit
Num: -993
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_amount_3(uint256) := TMP_120(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for _amount

Name: _amount Function: deposit
Num: -993
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_121(uint256) = INTERNAL_CALL, ERC20.totalSupply()()
init
end
[i]Type for TMP_121

Name: TMP_121 Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_122(bool) = TMP_121 > 0
init
end
init
end
A: u B: 0
x
lnorm: u rnorm: 0
[i]Type for TMP_122

Name: TMP_122 Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_shares_2
_shares_2
_shares
_shares

Name: _shares Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_126(bool) = _shares_2 > 0
init
end
init
end
A: u B: 0
x
lnorm: u rnorm: 0
init
end
[i]Type for TMP_126

Name: TMP_126 Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
_amount_5
_amount

Name: _amount Function: deposit
Num: -993
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_amount_5(uint256) := ϕ(['_amount_4', '_amount_3'])
Phi
[i]Type for _amount

Name: _amount Function: deposit
Num: -993
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_amount_5
_amount_5
_amount

Name: _amount Function: deposit
Num: -993
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_shares_1
_shares_1
_shares

Name: _shares Function: deposit
Num: -993
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
_shares_1(uint256) := _amount_5(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for _shares

Name: _shares Function: deposit
Num: -993
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_amount_3
_amount_3
_amount

Name: _amount Function: deposit
Num: -993
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_balance_1
_balance_1
_balance
_balance

Name: _balance Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_amount_4
_amount_4
_amount

Name: _amount Function: deposit
Num: -993
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_123(uint256) = INTERNAL_CALL, ERC20.totalSupply()()
init
end
[i]Type for TMP_123

Name: TMP_123 Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_124(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_amount_3', 'TMP_123'] 
init
end
init
end
A: u B: u
x
lnorm: u rnorm: u
init
end
[i]Type for TMP_124

Name: TMP_124 Function: deposit
Num: -993
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_125(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_124', '_balance_1'] 
init
end
init
end
A: u B: u
x
lnorm: u rnorm: u
[i]Type for TMP_125

Name: TMP_125 Function: deposit
Num: -993
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_amount_4(uint256) := TMP_125(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for _amount

Name: _amount Function: deposit
Num: -993
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_shares_2
_shares_2
_shares
_shares

Name: _shares Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
INTERNAL_CALL, ERC20._mint(address,uint256)(msg.sender,_shares_2)
init
init
end
Propogating parameters and globals to SSA variables...
totalDepositCap_13
totalDepositCap_13
totalDepositCap

Name: totalDepositCap Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10000000000000000000000000
Fields: 
Finance Type: undef
End popogation
TMP_128(uint256) = INTERNAL_CALL, ERC20.totalSupply()()
init
end
[i]Type for TMP_128

Name: TMP_128 Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_129(bool) = TMP_128 <= totalDepositCap_13
init
end
init
end
A: u B: u
x
lnorm: u rnorm: u
[i]Type for TMP_129

Name: TMP_129 Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_130(None) = SOLIDITY_CALL require(bool,string)(TMP_129,>totalDepositCap)
[i]Type for TMP_130

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_shares_2
_shares_2
_shares
_shares

Name: _shares Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation



depositMultiple
Finding type for _tokens(address[] ... )
prev address? u
Head Addr: -992
    Norm: 6
    Set: {-992}
    Fin: NULL
Finding type for _amounts(uint256[] ... )
Param: 0
    num: []
    den: []
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1


REF_46 -> LENGTH _tokens_1 (-> [])
REF_47 -> LENGTH _amounts_1 (-> [])
TMP_134(bool) = REF_46 == REF_47
TMP_135(None) = SOLIDITY_CALL require(bool,string)(TMP_134,!length)
_shares_1(uint256) := ϕ(['_shares_0', '_shares_2'])
i_1(uint8) := ϕ(['i_0', 'i_2'])
REF_48 -> LENGTH _amounts_1 (-> [])
TMP_136(bool) = i_1 < REF_48
CONDITION TMP_136
REF_50(address) -> _tokens_1 (-> [])[i_1]
REF_51(uint256) -> _amounts_1 (-> [])[i_1]
TMP_137(uint256) = INTERNAL_CALL, Vault.deposit(address,uint256)(REF_50,REF_51)
TMP_138(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['_shares_1', 'TMP_137'] 
_shares_2(uint256) := TMP_138(uint256)
TMP_139(uint8) := i_1(uint8)
i_2(uint8) = i_1 + 1
RETURN _shares_1


Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
_amounts_1 (-> [])
_amounts_1 (-> [])
_amounts
_amounts

Name: _amounts_1 (-> []) Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_tokens_1 (-> [])
_tokens_1 (-> [])
_tokens

Name: _tokens_1 (-> []) Function: None
Num: 
Den: 
Address: -992
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
REF_46 -> LENGTH _tokens_1 (-> [])
[i]Type for REF_46

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_47 -> LENGTH _amounts_1 (-> [])
[i]Type for REF_47

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_134(bool) = REF_46 == REF_47
[i]Type for TMP_134

Name: TMP_134 Function: depositMultiple
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_135(None) = SOLIDITY_CALL require(bool,string)(TMP_134,!length)
[i]Type for TMP_135

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
i_1
i_1
i
i

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_amounts_1 (-> [])
_amounts_1 (-> [])
_amounts
_amounts

Name: _amounts_1 (-> []) Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_1
i_1
i
i

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_shares_1
_shares_1
_shares
_shares

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
_shares_1
_shares
_shares

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_1
i
i

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_shares_1(uint256) := ϕ(['_shares_0', '_shares_2'])
Phi
[i]Type for _shares

Name: _shares Function: depositMultiple
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
i_1(uint8) := ϕ(['i_0', 'i_2'])
Phi
[i]Type for i

Name: i Function: depositMultiple
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_48 -> LENGTH _amounts_1 (-> [])
[i]Type for REF_48

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_136(bool) = i_1 < REF_48
init
end
init
end
A: u B: u
x
lnorm: u rnorm: u
init
end
[i]Type for TMP_136

Name: TMP_136 Function: depositMultiple
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
i_1
i_1
i
i

Name: i Function: depositMultiple
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_amounts_1 (-> [])
_amounts_1 (-> [])
_amounts
_amounts

Name: _amounts_1 (-> []) Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_shares_1
_shares_1
_shares
_shares

Name: _shares Function: depositMultiple
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_tokens_1 (-> [])
_tokens_1 (-> [])
_tokens

Name: _tokens_1 (-> []) Function: None
Num: 
Den: 
Address: -992
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_shares_2
_shares_2
_shares
_shares

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
REF_50(address) -> _tokens_1 (-> [])[i_1]
INDEX
[i]Type for REF_50

Name: _tokens_1 (-> []) Function: None
Num: 
Den: 
Address: -992
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_51(uint256) -> _amounts_1 (-> [])[i_1]
INDEX
[i]Type for REF_51

Name: _amounts_1 (-> []) Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_137(uint256) = INTERNAL_CALL, Vault.deposit(address,uint256)(REF_50,REF_51)
init
end
init
end
[[], [], 'u', None, [], -1, -992, 'u']

Name: _token Function: deposit
Num: 
Den: 
Address: -992
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: _amount Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _token Function: deposit
Num: 
Den: 
Address: -992
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef

Name: _amount Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
_token_1
_token

Name: _token_1 Function: deposit
Num: 
Den: 
Address: -992
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
_amount_1
_amount

Name: _amount_1 Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
totalDepositCap_3
totalDepositCap

Name: totalDepositCap Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10000000000000000000000000
Fields: 
Finance Type: undef
_token_1(address) := ϕ(['REF_50'])
Phi
[i]Type for _token

Name: _token Function: deposit
Num: 
Den: 
Address: -992
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
XXXX
_amount_1(uint256) := ϕ(['REF_51'])
Phi
[i]Type for _amount

Name: _amount Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
totalDepositCap_3(uint256) := ϕ(['totalDepositCap_8', 'totalDepositCap_1', 'totalDepositCap_10', 'totalDepositCap_13', 'totalDepositCap_0', 'totalDepositCap_2', 'totalDepositCap_11'])
Phi
[i]Type for totalDepositCap

Name: totalDepositCap Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10000000000000000000000000
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_token_1
_token_1
_token

Name: _token Function: deposit
Num: 
Den: 
Address: -992
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
End popogation
MODIFIER_CALL, Vault.checkToken(address)(_token_1)
init
end
[[], [], 'u', '_token', [], -1, -992, 'u']

Name: _token Function: None
Num: 
Den: 
Address: -992
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef

Name: _token Function: None
Num: 
Den: 
Address: -992
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
_token_1
_token

Name: _token_1 Function: checkToken
Num: 
Den: 
Address: -992
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
manager_31
manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
_token_1(address) := ϕ(['_token_1', '_output_1', '_token_1'])
Phi
[i]Type for _token

Name: _token Function: checkToken
Num: 
Den: 
Address: -992
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
XXXX
manager_31(IManager) := ϕ(['manager_19', 'manager_28', 'manager_30', 'manager_0', 'manager_37', 'manager_35', 'manager_24', 'manager_6', 'manager_26', 'manager_12', 'manager_39', 'manager_1', 'manager_33'])
Phi
[i]Type for manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
manager_31
manager_31
manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
manager_32
manager_32
manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
_token_1
_token_1
_token

Name: _token Function: checkToken
Num: 
Den: 
Address: -992
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
End popogation
manager_32
manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
manager_33
manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
TMP_214(bool) = HIGH_LEVEL_CALL, dest:manager_31(IManager), function:allowedTokens, arguments:['_token_1']  
High Call: allowedTokens
Running querryfc
[i]Type for TMP_214

Name: TMP_214 Function: checkToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
manager_32(IManager) := ϕ(['manager_19', 'manager_28', 'manager_30', 'manager_31', 'manager_37', 'manager_35', 'manager_24', 'manager_6', 'manager_26', 'manager_12', 'manager_39', 'manager_1', 'manager_33'])
Phi
[i]Type for manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_215(address) = HIGH_LEVEL_CALL, dest:manager_32(IManager), function:vaults, arguments:['_token_1']  
High Call: vaults
Running querryfc
Written func info: Manager, vaults
Retvar: ('c', [-1], [-1], 'u', 'u', 4)
([-1], [-1], 'u', 'u', 4, -1)
[i]Type for TMP_215

Name: TMP_215 Function: checkToken
Num: -1
Den: -1
Address: 4
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
manager_33(IManager) := ϕ(['manager_19', 'manager_28', 'manager_30', 'manager_32', 'manager_37', 'manager_35', 'manager_24', 'manager_6', 'manager_26', 'manager_12', 'manager_39', 'manager_1', 'manager_33'])
Phi
[i]Type for manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_216 = CONVERT this to address
Converting this
6
[i]Type for TMP_216

Name: TMP_216 Function: checkToken
Num: 
Den: 
Address: 6
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_217(bool) = TMP_215 == TMP_216
[i]Type for TMP_217

Name: TMP_217 Function: checkToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_218(bool) = TMP_214 && TMP_217
[i]Type for TMP_218

Name: TMP_218 Function: checkToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_219(None) = SOLIDITY_CALL require(bool,string)(TMP_218,!_token)
[i]Type for TMP_219

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation

Name: _token Function: None
Num: 
Den: 
Address: -992
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
_token_1
_token

Name: _token_1 Function: checkToken
Num: 
Den: 
Address: -992
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
manager_31
manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
_token_1(address) := ϕ(['_token_1', '_output_1', '_token_1'])
Phi
[i]Type for _token

Name: _token Function: checkToken
Num: 
Den: 
Address: -992
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
XXXX
manager_31(IManager) := ϕ(['manager_19', 'manager_28', 'manager_30', 'manager_0', 'manager_37', 'manager_35', 'manager_24', 'manager_6', 'manager_26', 'manager_12', 'manager_39', 'manager_1', 'manager_33'])
Phi
[i]Type for manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
manager_31
manager_31
manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
manager_32
manager_32
manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
_token_1
_token_1
_token

Name: _token Function: checkToken
Num: 
Den: 
Address: -992
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
End popogation
manager_32
manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
manager_33
manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
TMP_214(bool) = HIGH_LEVEL_CALL, dest:manager_31(IManager), function:allowedTokens, arguments:['_token_1']  
High Call: allowedTokens
Running querryfc
[i]Type for TMP_214

Name: TMP_214 Function: checkToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
manager_32(IManager) := ϕ(['manager_19', 'manager_28', 'manager_30', 'manager_31', 'manager_37', 'manager_35', 'manager_24', 'manager_6', 'manager_26', 'manager_12', 'manager_39', 'manager_1', 'manager_33'])
Phi
[i]Type for manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_215(address) = HIGH_LEVEL_CALL, dest:manager_32(IManager), function:vaults, arguments:['_token_1']  
High Call: vaults
Running querryfc
Written func info: Manager, vaults
Retvar: ('c', [-1], [-1], 'u', 'u', 4)
([-1], [-1], 'u', 'u', 4, -1)
[i]Type for TMP_215

Name: TMP_215 Function: checkToken
Num: -1
Den: -1
Address: 4
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
manager_33(IManager) := ϕ(['manager_19', 'manager_28', 'manager_30', 'manager_32', 'manager_37', 'manager_35', 'manager_24', 'manager_6', 'manager_26', 'manager_12', 'manager_39', 'manager_1', 'manager_33'])
Phi
[i]Type for manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_216 = CONVERT this to address
Converting this
6
[i]Type for TMP_216

Name: TMP_216 Function: checkToken
Num: 
Den: 
Address: 6
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_217(bool) = TMP_215 == TMP_216
[i]Type for TMP_217

Name: TMP_217 Function: checkToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_218(bool) = TMP_214 && TMP_217
[i]Type for TMP_218

Name: TMP_218 Function: checkToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_219(None) = SOLIDITY_CALL require(bool,string)(TMP_218,!_token)
[i]Type for TMP_219

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, Vault.notHalted()()
Propogating parameters and globals to SSA variables...
_amount_1
_amount_1
_amount

Name: _amount Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_106(bool) = _amount_1 > 0
init
end
init
end
A: u B: 0
x
lnorm: u rnorm: 0
[i]Type for TMP_106

Name: TMP_106 Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_107(None) = SOLIDITY_CALL require(bool,string)(TMP_106,!_amount)
[i]Type for TMP_107

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_balance_1
_balance_1
_balance
_balance

Name: _balance Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_108(uint256) = INTERNAL_CALL, Vault.balance()()
init
end
[i]Type for TMP_108

Name: TMP_108 Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_balance_1(uint256) := TMP_108(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for _balance

Name: _balance Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_token_1
_token_1
_token

Name: _token Function: deposit
Num: 
Den: 
Address: -992
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
_before_1
_before_1
_before
_before

Name: _before Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
totalDepositCap_7
totalDepositCap

Name: totalDepositCap Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10000000000000000000000000
Fields: 
Finance Type: undef
TMP_109 = CONVERT _token_1 to IERC20
Converting _token_1

Name: _token Function: deposit
Num: 
Den: 
Address: -992
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
init
end
ERC20
[i]Type for TMP_109

Name: TMP_109 Function: deposit
Num: 
Den: 
Address: -992
Norm: u
LF: ERC20
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_110 = CONVERT this to address
Converting this
6
[i]Type for TMP_110

Name: TMP_110 Function: deposit
Num: 
Den: 
Address: 6
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_111(uint256) = HIGH_LEVEL_CALL, dest:TMP_109(IERC20), function:balanceOf, arguments:['TMP_110']  
High Call: balanceOf
Running querryfc
Written func info: ERC20, balanceOf
Handling balance function!
-992
[i]Type for TMP_111

Name: TMP_111 Function: deposit
Num: -992
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
totalDepositCap_7(uint256) := ϕ(['totalDepositCap_8', 'totalDepositCap_1', 'totalDepositCap_10', 'totalDepositCap_6', 'totalDepositCap_13', 'totalDepositCap_2', 'totalDepositCap_11'])
Phi
[i]Type for totalDepositCap

Name: totalDepositCap Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10000000000000000000000000
Fields: 
Finance Type: undef
XXXX
_before_1(uint256) := TMP_111(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for _before

Name: _before Function: deposit
Num: -992
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_amount_1
_amount_1
_amount

Name: _amount Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_token_1
_token_1
_token

Name: _token Function: deposit
Num: 
Den: 
Address: -992
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_112 = CONVERT _token_1 to IERC20
Converting _token_1

Name: _token Function: deposit
Num: 
Den: 
Address: -992
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
init
end
ERC20
[i]Type for TMP_112

Name: TMP_112 Function: deposit
Num: 
Den: 
Address: -992
Norm: u
LF: ERC20
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_113 = CONVERT this to address
Converting this
6
[i]Type for TMP_113

Name: TMP_113 Function: deposit
Num: 
Den: 
Address: 6
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
XXXX
LIBRARY_CALL, dest:SafeERC20, function:SafeERC20.safeTransferFrom(IERC20,address,address,uint256), arguments:['TMP_112', 'msg.sender', 'TMP_113', '_amount_1'] 
Propogating parameters and globals to SSA variables...
_before_1
_before_1
_before

Name: _before Function: deposit
Num: -992
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
_token_1
_token_1
_token

Name: _token Function: deposit
Num: 
Den: 
Address: -992
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
_amount_2
_amount_2
_amount
_amount

Name: _amount Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
totalDepositCap_8
totalDepositCap

Name: totalDepositCap Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10000000000000000000000000
Fields: 
Finance Type: undef
TMP_115 = CONVERT _token_1 to IERC20
Converting _token_1

Name: _token Function: deposit
Num: 
Den: 
Address: -992
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
init
end
ERC20
[i]Type for TMP_115

Name: TMP_115 Function: deposit
Num: 
Den: 
Address: -992
Norm: u
LF: ERC20
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_116 = CONVERT this to address
Converting this
6
[i]Type for TMP_116

Name: TMP_116 Function: deposit
Num: 
Den: 
Address: 6
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_117(uint256) = HIGH_LEVEL_CALL, dest:TMP_115(IERC20), function:balanceOf, arguments:['TMP_116']  
High Call: balanceOf
Running querryfc
Written func info: ERC20, balanceOf
Handling balance function!
-992
[i]Type for TMP_117

Name: TMP_117 Function: deposit
Num: -992
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
totalDepositCap_8(uint256) := ϕ(['totalDepositCap_8', 'totalDepositCap_1', 'totalDepositCap_10', 'totalDepositCap_7', 'totalDepositCap_13', 'totalDepositCap_2', 'totalDepositCap_11'])
Phi
[i]Type for totalDepositCap

Name: totalDepositCap Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10000000000000000000000000
Fields: 
Finance Type: undef
XXXX
TMP_118(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['TMP_117', '_before_1'] 
SUB1
init
end
init
end
A: 6 B: 6
x
y
A: 6 B: 6
<class 'int'>
<class 'int'>
lnorm: 6 rnorm: 6
SUB

Name: TMP_117 Function: deposit
Num: -992
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _before Function: deposit
Num: -992
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
[i]Type for TMP_118

Name: TMP_118 Function: deposit
Num: -992
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_amount_2(uint256) := TMP_118(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for _amount

Name: _amount Function: deposit
Num: -992
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_amount_2
_amount_2
_amount

Name: _amount Function: deposit
Num: -992
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_119(bool) = _amount_2 > 0
init
end
init
end
A: 6 B: 0
x
y
A: 6 B: 0
<class 'int'>
<class 'int'>
lnorm: 6 rnorm: 0
[i]Type for TMP_119

Name: TMP_119 Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
_shares_2
_shares
_shares

Name: _shares Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_shares_2(uint256) := ϕ(['_shares_0', '_shares_1'])
Phi
[i]Type for _shares

Name: _shares Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_amount_2
_amount_2
_amount

Name: _amount Function: deposit
Num: -992
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
_token_1
_token_1
_token

Name: _token Function: deposit
Num: 
Den: 
Address: -992
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
_amount_3
_amount_3
_amount
_amount

Name: _amount Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_120(uint256) = INTERNAL_CALL, Vault._normalizeDecimals(address,uint256)(_token_1,_amount_2)
init
end
init
end
[[], [], 'u', '_token', [], -1, -992, 'u']

Name: _token Function: None
Num: 
Den: 
Address: -992
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
[[-992], [-1], 6, None, [], -1, 'u', 'u']

Name: _amount Function: None
Num: -992
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _token Function: None
Num: 
Den: 
Address: -992
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef

Name: _amount Function: None
Num: -992
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
_token_1
_token

Name: _token_1 Function: _normalizeDecimals
Num: 
Den: 
Address: -992
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
_amount_1
_amount

Name: _amount_1 Function: _normalizeDecimals
Num: -992
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_token_1(address) := ϕ(['_token_1', '_token_1'])
Phi
[i]Type for _token

Name: _token Function: _normalizeDecimals
Num: 
Den: 
Address: -992
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
XXXX
_amount_1(uint256) := ϕ(['TMP_188', '_amount_2'])
Phi
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: -992
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_token_1
_token_1
_token

Name: _token Function: _normalizeDecimals
Num: 
Den: 
Address: -992
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
_decimals_1
_decimals_1
_decimals
_decimals

Name: _decimals Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_204 = CONVERT _token_1 to ExtendedIERC20
Converting _token_1

Name: _token Function: _normalizeDecimals
Num: 
Den: 
Address: -992
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
init
end
UNKNOWN
[i]Type for TMP_204

Name: TMP_204 Function: _normalizeDecimals
Num: 
Den: 
Address: -992
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_205(uint8) = HIGH_LEVEL_CALL, dest:TMP_204(ExtendedIERC20), function:decimals, arguments:[]  
High Call: decimals
Running querryfc
Written func info: UNKNOWN, decimals
Handling balance function!
-992
[i]Type for TMP_205

Name: TMP_205 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
XXXX
TMP_206 = CONVERT TMP_205 to uint256
Converting TMP_205

Name: TMP_205 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
init
end
[i]Type for TMP_206

Name: TMP_206 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_decimals_1(uint256) := TMP_206(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for _decimals

Name: _decimals Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_decimals_1
_decimals_1
_decimals

Name: _decimals Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_207(bool) = _decimals_1 < 18
init
end
init
end
A: u B: 0
x
lnorm: u rnorm: 0
[i]Type for TMP_207

Name: TMP_207 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
_amount_3
_amount
_amount

Name: _amount Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_amount_3(uint256) := ϕ(['_amount_1', '_amount_2'])
Phi
init
end
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: -992
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_amount_1
_amount_1
_amount

Name: _amount Function: _normalizeDecimals
Num: -992
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_decimals_1
_decimals_1
_decimals

Name: _decimals Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_amount_2
_amount_2
_amount
_amount

Name: _amount Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_208(uint256) = 18 - _decimals_1
SUB1
init
end
init
end
A: 0 B: u
lnorm: 0 rnorm: u
SUB

Name: 18 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _decimals Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
[i]Type for TMP_208

Name: TMP_208 Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_209(uint256) = 10 ** TMP_208
init
end
init
end
[i]Type for TMP_209

Name: TMP_209 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: *
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_210(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_amount_1', 'TMP_209'] 
init
end
init
end
A: u B: *
x
lnorm: u rnorm: *
init
end
[i]Type for TMP_210

Name: TMP_210 Function: _normalizeDecimals
Num: -992
Den: -1
Address: u
Norm: *
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_amount_2(uint256) := TMP_210(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: -992
Den: -1
Address: u
Norm: *
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_amount_3
_amount_3
_amount

Name: _amount Function: _normalizeDecimals
Num: -992
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
RETURN _amount_3
init
end

Name: _token Function: None
Num: 
Den: 
Address: -992
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef

Name: _amount Function: None
Num: -992
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
_token_1
_token

Name: _token_1 Function: _normalizeDecimals
Num: 
Den: 
Address: -992
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
_amount_1
_amount

Name: _amount_1 Function: _normalizeDecimals
Num: -992
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_token_1(address) := ϕ(['_token_1', '_token_1'])
Phi
[i]Type for _token

Name: _token Function: _normalizeDecimals
Num: 
Den: 
Address: -992
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
XXXX
_amount_1(uint256) := ϕ(['TMP_188', '_amount_2'])
Phi
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: -992
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_token_1
_token_1
_token

Name: _token Function: _normalizeDecimals
Num: 
Den: 
Address: -992
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
_decimals_1
_decimals_1
_decimals
_decimals

Name: _decimals Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_204 = CONVERT _token_1 to ExtendedIERC20
Converting _token_1

Name: _token Function: _normalizeDecimals
Num: 
Den: 
Address: -992
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
init
end
UNKNOWN
[i]Type for TMP_204

Name: TMP_204 Function: _normalizeDecimals
Num: 
Den: 
Address: -992
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_205(uint8) = HIGH_LEVEL_CALL, dest:TMP_204(ExtendedIERC20), function:decimals, arguments:[]  
High Call: decimals
Running querryfc
Written func info: UNKNOWN, decimals
Handling balance function!
-992
[i]Type for TMP_205

Name: TMP_205 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
XXXX
TMP_206 = CONVERT TMP_205 to uint256
Converting TMP_205

Name: TMP_205 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
init
end
[i]Type for TMP_206

Name: TMP_206 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_decimals_1(uint256) := TMP_206(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for _decimals

Name: _decimals Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_decimals_1
_decimals_1
_decimals

Name: _decimals Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_207(bool) = _decimals_1 < 18
init
end
init
end
A: u B: 0
x
lnorm: u rnorm: 0
[i]Type for TMP_207

Name: TMP_207 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
_amount_3
_amount
_amount

Name: _amount Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_amount_3(uint256) := ϕ(['_amount_1', '_amount_2'])
Phi
init
end
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: -992
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_amount_1
_amount_1
_amount

Name: _amount Function: _normalizeDecimals
Num: -992
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_decimals_1
_decimals_1
_decimals

Name: _decimals Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_amount_2
_amount_2
_amount
_amount

Name: _amount Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_208(uint256) = 18 - _decimals_1
SUB1
init
end
init
end
A: 0 B: u
lnorm: 0 rnorm: u
SUB

Name: 18 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _decimals Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
[i]Type for TMP_208

Name: TMP_208 Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_209(uint256) = 10 ** TMP_208
init
end
init
end
[i]Type for TMP_209

Name: TMP_209 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: *
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_210(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_amount_1', 'TMP_209'] 
init
end
init
end
A: u B: *
x
lnorm: u rnorm: *
init
end
[i]Type for TMP_210

Name: TMP_210 Function: _normalizeDecimals
Num: -992
Den: -1
Address: u
Norm: *
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_amount_2(uint256) := TMP_210(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: -992
Den: -1
Address: u
Norm: *
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_amount_3
_amount_3
_amount

Name: _amount Function: _normalizeDecimals
Num: -992
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
RETURN _amount_3
init
end
[i]Type for TMP_120

Name: TMP_120 Function: deposit
Num: -992
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_amount_3(uint256) := TMP_120(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for _amount

Name: _amount Function: deposit
Num: -992
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_121(uint256) = INTERNAL_CALL, ERC20.totalSupply()()
init
end
[i]Type for TMP_121

Name: TMP_121 Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_122(bool) = TMP_121 > 0
init
end
init
end
A: u B: 0
x
lnorm: u rnorm: 0
[i]Type for TMP_122

Name: TMP_122 Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_shares_2
_shares_2
_shares
_shares

Name: _shares Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_126(bool) = _shares_2 > 0
init
end
init
end
A: u B: 0
x
lnorm: u rnorm: 0
init
end
[i]Type for TMP_126

Name: TMP_126 Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
_amount_5
_amount
_amount

Name: _amount Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_amount_5(uint256) := ϕ(['_amount_4', '_amount_3'])
Phi
init
end
[i]Type for _amount

Name: _amount Function: deposit
Num: -993
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_amount_5
_amount_5
_amount

Name: _amount Function: deposit
Num: -993
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_shares_1
_shares_1
_shares
_shares

Name: _shares Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
_shares_1(uint256) := _amount_5(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for _shares

Name: _shares Function: deposit
Num: -993
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_amount_3
_amount_3
_amount

Name: _amount Function: deposit
Num: -992
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_balance_1
_balance_1
_balance
_balance

Name: _balance Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_amount_4
_amount_4
_amount
_amount

Name: _amount Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_123(uint256) = INTERNAL_CALL, ERC20.totalSupply()()
init
end
[i]Type for TMP_123

Name: TMP_123 Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_124(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_amount_3', 'TMP_123'] 
init
end
init
end
A: u B: u
x
lnorm: u rnorm: u
init
end
[i]Type for TMP_124

Name: TMP_124 Function: deposit
Num: -992
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_125(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_124', '_balance_1'] 
init
end
init
end
A: u B: u
x
lnorm: u rnorm: u
init
end
[i]Type for TMP_125

Name: TMP_125 Function: deposit
Num: -992
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_amount_4(uint256) := TMP_125(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for _amount

Name: _amount Function: deposit
Num: -992
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_shares_2
_shares_2
_shares
_shares

Name: _shares Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
INTERNAL_CALL, ERC20._mint(address,uint256)(msg.sender,_shares_2)
init
init
end
Propogating parameters and globals to SSA variables...
totalDepositCap_13
totalDepositCap_13
totalDepositCap

Name: totalDepositCap Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10000000000000000000000000
Fields: 
Finance Type: undef
End popogation
TMP_128(uint256) = INTERNAL_CALL, ERC20.totalSupply()()
init
end
[i]Type for TMP_128

Name: TMP_128 Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_129(bool) = TMP_128 <= totalDepositCap_13
init
end
init
end
A: u B: u
x
lnorm: u rnorm: u
[i]Type for TMP_129

Name: TMP_129 Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_130(None) = SOLIDITY_CALL require(bool,string)(TMP_129,>totalDepositCap)
[i]Type for TMP_130

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_shares_2
_shares_2
_shares
_shares

Name: _shares Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation

Name: _token Function: deposit
Num: 
Den: 
Address: -992
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef

Name: _amount Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
_token_1
_token

Name: _token_1 Function: deposit
Num: 
Den: 
Address: -992
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
_amount_1
_amount

Name: _amount_1 Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
totalDepositCap_3
totalDepositCap

Name: totalDepositCap Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10000000000000000000000000
Fields: 
Finance Type: undef
_token_1(address) := ϕ(['REF_50'])
Phi
[i]Type for _token

Name: _token Function: deposit
Num: 
Den: 
Address: -992
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
XXXX
_amount_1(uint256) := ϕ(['REF_51'])
Phi
[i]Type for _amount

Name: _amount Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
totalDepositCap_3(uint256) := ϕ(['totalDepositCap_8', 'totalDepositCap_1', 'totalDepositCap_10', 'totalDepositCap_13', 'totalDepositCap_0', 'totalDepositCap_2', 'totalDepositCap_11'])
Phi
[i]Type for totalDepositCap

Name: totalDepositCap Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10000000000000000000000000
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_token_1
_token_1
_token

Name: _token Function: deposit
Num: 
Den: 
Address: -992
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
End popogation
MODIFIER_CALL, Vault.checkToken(address)(_token_1)
init
end
[[], [], 'u', '_token', [], -1, -992, 'u']

Name: _token Function: None
Num: 
Den: 
Address: -992
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef

Name: _token Function: None
Num: 
Den: 
Address: -992
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
_token_1
_token

Name: _token_1 Function: checkToken
Num: 
Den: 
Address: -992
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
manager_31
manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
_token_1(address) := ϕ(['_token_1', '_output_1', '_token_1'])
Phi
[i]Type for _token

Name: _token Function: checkToken
Num: 
Den: 
Address: -992
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
XXXX
manager_31(IManager) := ϕ(['manager_19', 'manager_28', 'manager_30', 'manager_0', 'manager_37', 'manager_35', 'manager_24', 'manager_6', 'manager_26', 'manager_12', 'manager_39', 'manager_1', 'manager_33'])
Phi
[i]Type for manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
manager_31
manager_31
manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
manager_32
manager_32
manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
_token_1
_token_1
_token

Name: _token Function: checkToken
Num: 
Den: 
Address: -992
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
End popogation
manager_32
manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
manager_33
manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
TMP_214(bool) = HIGH_LEVEL_CALL, dest:manager_31(IManager), function:allowedTokens, arguments:['_token_1']  
High Call: allowedTokens
Running querryfc
[i]Type for TMP_214

Name: TMP_214 Function: checkToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
manager_32(IManager) := ϕ(['manager_19', 'manager_28', 'manager_30', 'manager_31', 'manager_37', 'manager_35', 'manager_24', 'manager_6', 'manager_26', 'manager_12', 'manager_39', 'manager_1', 'manager_33'])
Phi
[i]Type for manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_215(address) = HIGH_LEVEL_CALL, dest:manager_32(IManager), function:vaults, arguments:['_token_1']  
High Call: vaults
Running querryfc
Written func info: Manager, vaults
Retvar: ('c', [-1], [-1], 'u', 'u', 4)
([-1], [-1], 'u', 'u', 4, -1)
[i]Type for TMP_215

Name: TMP_215 Function: checkToken
Num: -1
Den: -1
Address: 4
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
manager_33(IManager) := ϕ(['manager_19', 'manager_28', 'manager_30', 'manager_32', 'manager_37', 'manager_35', 'manager_24', 'manager_6', 'manager_26', 'manager_12', 'manager_39', 'manager_1', 'manager_33'])
Phi
[i]Type for manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_216 = CONVERT this to address
Converting this
6
[i]Type for TMP_216

Name: TMP_216 Function: checkToken
Num: 
Den: 
Address: 6
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_217(bool) = TMP_215 == TMP_216
[i]Type for TMP_217

Name: TMP_217 Function: checkToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_218(bool) = TMP_214 && TMP_217
[i]Type for TMP_218

Name: TMP_218 Function: checkToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_219(None) = SOLIDITY_CALL require(bool,string)(TMP_218,!_token)
[i]Type for TMP_219

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation

Name: _token Function: None
Num: 
Den: 
Address: -992
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
_token_1
_token

Name: _token_1 Function: checkToken
Num: 
Den: 
Address: -992
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
manager_31
manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
_token_1(address) := ϕ(['_token_1', '_output_1', '_token_1'])
Phi
[i]Type for _token

Name: _token Function: checkToken
Num: 
Den: 
Address: -992
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
XXXX
manager_31(IManager) := ϕ(['manager_19', 'manager_28', 'manager_30', 'manager_0', 'manager_37', 'manager_35', 'manager_24', 'manager_6', 'manager_26', 'manager_12', 'manager_39', 'manager_1', 'manager_33'])
Phi
[i]Type for manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
manager_31
manager_31
manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
manager_32
manager_32
manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
_token_1
_token_1
_token

Name: _token Function: checkToken
Num: 
Den: 
Address: -992
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
End popogation
manager_32
manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
manager_33
manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
TMP_214(bool) = HIGH_LEVEL_CALL, dest:manager_31(IManager), function:allowedTokens, arguments:['_token_1']  
High Call: allowedTokens
Running querryfc
[i]Type for TMP_214

Name: TMP_214 Function: checkToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
manager_32(IManager) := ϕ(['manager_19', 'manager_28', 'manager_30', 'manager_31', 'manager_37', 'manager_35', 'manager_24', 'manager_6', 'manager_26', 'manager_12', 'manager_39', 'manager_1', 'manager_33'])
Phi
[i]Type for manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_215(address) = HIGH_LEVEL_CALL, dest:manager_32(IManager), function:vaults, arguments:['_token_1']  
High Call: vaults
Running querryfc
Written func info: Manager, vaults
Retvar: ('c', [-1], [-1], 'u', 'u', 4)
([-1], [-1], 'u', 'u', 4, -1)
[i]Type for TMP_215

Name: TMP_215 Function: checkToken
Num: -1
Den: -1
Address: 4
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
manager_33(IManager) := ϕ(['manager_19', 'manager_28', 'manager_30', 'manager_32', 'manager_37', 'manager_35', 'manager_24', 'manager_6', 'manager_26', 'manager_12', 'manager_39', 'manager_1', 'manager_33'])
Phi
[i]Type for manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_216 = CONVERT this to address
Converting this
6
[i]Type for TMP_216

Name: TMP_216 Function: checkToken
Num: 
Den: 
Address: 6
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_217(bool) = TMP_215 == TMP_216
[i]Type for TMP_217

Name: TMP_217 Function: checkToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_218(bool) = TMP_214 && TMP_217
[i]Type for TMP_218

Name: TMP_218 Function: checkToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_219(None) = SOLIDITY_CALL require(bool,string)(TMP_218,!_token)
[i]Type for TMP_219

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, Vault.notHalted()()
Propogating parameters and globals to SSA variables...
_amount_1
_amount_1
_amount

Name: _amount Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_106(bool) = _amount_1 > 0
init
end
init
end
A: u B: 0
x
lnorm: u rnorm: 0
[i]Type for TMP_106

Name: TMP_106 Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_107(None) = SOLIDITY_CALL require(bool,string)(TMP_106,!_amount)
[i]Type for TMP_107

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_balance_1
_balance_1
_balance
_balance

Name: _balance Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_108(uint256) = INTERNAL_CALL, Vault.balance()()
init
end
[i]Type for TMP_108

Name: TMP_108 Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_balance_1(uint256) := TMP_108(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for _balance

Name: _balance Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_token_1
_token_1
_token

Name: _token Function: deposit
Num: 
Den: 
Address: -992
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
_before_1
_before_1
_before
_before

Name: _before Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
totalDepositCap_7
totalDepositCap

Name: totalDepositCap Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10000000000000000000000000
Fields: 
Finance Type: undef
TMP_109 = CONVERT _token_1 to IERC20
Converting _token_1

Name: _token Function: deposit
Num: 
Den: 
Address: -992
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
init
end
ERC20
[i]Type for TMP_109

Name: TMP_109 Function: deposit
Num: 
Den: 
Address: -992
Norm: u
LF: ERC20
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_110 = CONVERT this to address
Converting this
6
[i]Type for TMP_110

Name: TMP_110 Function: deposit
Num: 
Den: 
Address: 6
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_111(uint256) = HIGH_LEVEL_CALL, dest:TMP_109(IERC20), function:balanceOf, arguments:['TMP_110']  
High Call: balanceOf
Running querryfc
Written func info: ERC20, balanceOf
Handling balance function!
-992
[i]Type for TMP_111

Name: TMP_111 Function: deposit
Num: -992
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
totalDepositCap_7(uint256) := ϕ(['totalDepositCap_8', 'totalDepositCap_1', 'totalDepositCap_10', 'totalDepositCap_6', 'totalDepositCap_13', 'totalDepositCap_2', 'totalDepositCap_11'])
Phi
[i]Type for totalDepositCap

Name: totalDepositCap Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10000000000000000000000000
Fields: 
Finance Type: undef
XXXX
_before_1(uint256) := TMP_111(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for _before

Name: _before Function: deposit
Num: -992
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_amount_1
_amount_1
_amount

Name: _amount Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_token_1
_token_1
_token

Name: _token Function: deposit
Num: 
Den: 
Address: -992
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_112 = CONVERT _token_1 to IERC20
Converting _token_1

Name: _token Function: deposit
Num: 
Den: 
Address: -992
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
init
end
ERC20
[i]Type for TMP_112

Name: TMP_112 Function: deposit
Num: 
Den: 
Address: -992
Norm: u
LF: ERC20
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_113 = CONVERT this to address
Converting this
6
[i]Type for TMP_113

Name: TMP_113 Function: deposit
Num: 
Den: 
Address: 6
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
XXXX
LIBRARY_CALL, dest:SafeERC20, function:SafeERC20.safeTransferFrom(IERC20,address,address,uint256), arguments:['TMP_112', 'msg.sender', 'TMP_113', '_amount_1'] 
Propogating parameters and globals to SSA variables...
_before_1
_before_1
_before

Name: _before Function: deposit
Num: -992
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
_token_1
_token_1
_token

Name: _token Function: deposit
Num: 
Den: 
Address: -992
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
_amount_2
_amount_2
_amount
_amount

Name: _amount Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
totalDepositCap_8
totalDepositCap

Name: totalDepositCap Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10000000000000000000000000
Fields: 
Finance Type: undef
TMP_115 = CONVERT _token_1 to IERC20
Converting _token_1

Name: _token Function: deposit
Num: 
Den: 
Address: -992
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
init
end
ERC20
[i]Type for TMP_115

Name: TMP_115 Function: deposit
Num: 
Den: 
Address: -992
Norm: u
LF: ERC20
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_116 = CONVERT this to address
Converting this
6
[i]Type for TMP_116

Name: TMP_116 Function: deposit
Num: 
Den: 
Address: 6
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_117(uint256) = HIGH_LEVEL_CALL, dest:TMP_115(IERC20), function:balanceOf, arguments:['TMP_116']  
High Call: balanceOf
Running querryfc
Written func info: ERC20, balanceOf
Handling balance function!
-992
[i]Type for TMP_117

Name: TMP_117 Function: deposit
Num: -992
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
totalDepositCap_8(uint256) := ϕ(['totalDepositCap_8', 'totalDepositCap_1', 'totalDepositCap_10', 'totalDepositCap_7', 'totalDepositCap_13', 'totalDepositCap_2', 'totalDepositCap_11'])
Phi
[i]Type for totalDepositCap

Name: totalDepositCap Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10000000000000000000000000
Fields: 
Finance Type: undef
XXXX
TMP_118(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['TMP_117', '_before_1'] 
SUB1
init
end
init
end
A: 6 B: 6
x
y
A: 6 B: 6
<class 'int'>
<class 'int'>
lnorm: 6 rnorm: 6
SUB

Name: TMP_117 Function: deposit
Num: -992
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _before Function: deposit
Num: -992
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
[i]Type for TMP_118

Name: TMP_118 Function: deposit
Num: -992
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_amount_2(uint256) := TMP_118(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for _amount

Name: _amount Function: deposit
Num: -992
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_amount_2
_amount_2
_amount

Name: _amount Function: deposit
Num: -992
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_119(bool) = _amount_2 > 0
init
end
init
end
A: 6 B: 0
x
y
A: 6 B: 0
<class 'int'>
<class 'int'>
lnorm: 6 rnorm: 0
[i]Type for TMP_119

Name: TMP_119 Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
_shares_2
_shares
_shares

Name: _shares Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_shares_2(uint256) := ϕ(['_shares_0', '_shares_1'])
Phi
[i]Type for _shares

Name: _shares Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_amount_2
_amount_2
_amount

Name: _amount Function: deposit
Num: -992
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
_token_1
_token_1
_token

Name: _token Function: deposit
Num: 
Den: 
Address: -992
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
_amount_3
_amount_3
_amount
_amount

Name: _amount Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_120(uint256) = INTERNAL_CALL, Vault._normalizeDecimals(address,uint256)(_token_1,_amount_2)
init
end
init
end
[[], [], 'u', '_token', [], -1, -992, 'u']

Name: _token Function: None
Num: 
Den: 
Address: -992
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
[[-992], [-1], 6, None, [], -1, 'u', 'u']

Name: _amount Function: None
Num: -992
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _token Function: None
Num: 
Den: 
Address: -992
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef

Name: _amount Function: None
Num: -992
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
_token_1
_token

Name: _token_1 Function: _normalizeDecimals
Num: 
Den: 
Address: -992
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
_amount_1
_amount

Name: _amount_1 Function: _normalizeDecimals
Num: -992
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_token_1(address) := ϕ(['_token_1', '_token_1'])
Phi
[i]Type for _token

Name: _token Function: _normalizeDecimals
Num: 
Den: 
Address: -992
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
XXXX
_amount_1(uint256) := ϕ(['TMP_188', '_amount_2'])
Phi
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: -992
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_token_1
_token_1
_token

Name: _token Function: _normalizeDecimals
Num: 
Den: 
Address: -992
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
_decimals_1
_decimals_1
_decimals
_decimals

Name: _decimals Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_204 = CONVERT _token_1 to ExtendedIERC20
Converting _token_1

Name: _token Function: _normalizeDecimals
Num: 
Den: 
Address: -992
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
init
end
UNKNOWN
[i]Type for TMP_204

Name: TMP_204 Function: _normalizeDecimals
Num: 
Den: 
Address: -992
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_205(uint8) = HIGH_LEVEL_CALL, dest:TMP_204(ExtendedIERC20), function:decimals, arguments:[]  
High Call: decimals
Running querryfc
Written func info: UNKNOWN, decimals
Handling balance function!
-992
[i]Type for TMP_205

Name: TMP_205 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
XXXX
TMP_206 = CONVERT TMP_205 to uint256
Converting TMP_205

Name: TMP_205 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
init
end
[i]Type for TMP_206

Name: TMP_206 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_decimals_1(uint256) := TMP_206(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for _decimals

Name: _decimals Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_decimals_1
_decimals_1
_decimals

Name: _decimals Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_207(bool) = _decimals_1 < 18
init
end
init
end
A: u B: 0
x
lnorm: u rnorm: 0
[i]Type for TMP_207

Name: TMP_207 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
_amount_3
_amount
_amount

Name: _amount Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_amount_3(uint256) := ϕ(['_amount_1', '_amount_2'])
Phi
init
end
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: -992
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_amount_1
_amount_1
_amount

Name: _amount Function: _normalizeDecimals
Num: -992
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_decimals_1
_decimals_1
_decimals

Name: _decimals Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_amount_2
_amount_2
_amount
_amount

Name: _amount Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_208(uint256) = 18 - _decimals_1
SUB1
init
end
init
end
A: 0 B: u
lnorm: 0 rnorm: u
SUB

Name: 18 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _decimals Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
[i]Type for TMP_208

Name: TMP_208 Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_209(uint256) = 10 ** TMP_208
init
end
init
end
[i]Type for TMP_209

Name: TMP_209 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: *
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_210(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_amount_1', 'TMP_209'] 
init
end
init
end
A: u B: *
x
lnorm: u rnorm: *
init
end
[i]Type for TMP_210

Name: TMP_210 Function: _normalizeDecimals
Num: -992
Den: -1
Address: u
Norm: *
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_amount_2(uint256) := TMP_210(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: -992
Den: -1
Address: u
Norm: *
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_amount_3
_amount_3
_amount

Name: _amount Function: _normalizeDecimals
Num: -992
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
RETURN _amount_3
init
end

Name: _token Function: None
Num: 
Den: 
Address: -992
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef

Name: _amount Function: None
Num: -992
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
_token_1
_token

Name: _token_1 Function: _normalizeDecimals
Num: 
Den: 
Address: -992
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
_amount_1
_amount

Name: _amount_1 Function: _normalizeDecimals
Num: -992
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_token_1(address) := ϕ(['_token_1', '_token_1'])
Phi
[i]Type for _token

Name: _token Function: _normalizeDecimals
Num: 
Den: 
Address: -992
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
XXXX
_amount_1(uint256) := ϕ(['TMP_188', '_amount_2'])
Phi
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: -992
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_token_1
_token_1
_token

Name: _token Function: _normalizeDecimals
Num: 
Den: 
Address: -992
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
_decimals_1
_decimals_1
_decimals
_decimals

Name: _decimals Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_204 = CONVERT _token_1 to ExtendedIERC20
Converting _token_1

Name: _token Function: _normalizeDecimals
Num: 
Den: 
Address: -992
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
init
end
UNKNOWN
[i]Type for TMP_204

Name: TMP_204 Function: _normalizeDecimals
Num: 
Den: 
Address: -992
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_205(uint8) = HIGH_LEVEL_CALL, dest:TMP_204(ExtendedIERC20), function:decimals, arguments:[]  
High Call: decimals
Running querryfc
Written func info: UNKNOWN, decimals
Handling balance function!
-992
[i]Type for TMP_205

Name: TMP_205 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
XXXX
TMP_206 = CONVERT TMP_205 to uint256
Converting TMP_205

Name: TMP_205 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
init
end
[i]Type for TMP_206

Name: TMP_206 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_decimals_1(uint256) := TMP_206(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for _decimals

Name: _decimals Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_decimals_1
_decimals_1
_decimals

Name: _decimals Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_207(bool) = _decimals_1 < 18
init
end
init
end
A: u B: 0
x
lnorm: u rnorm: 0
[i]Type for TMP_207

Name: TMP_207 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
_amount_3
_amount
_amount

Name: _amount Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_amount_3(uint256) := ϕ(['_amount_1', '_amount_2'])
Phi
init
end
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: -992
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_amount_1
_amount_1
_amount

Name: _amount Function: _normalizeDecimals
Num: -992
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_decimals_1
_decimals_1
_decimals

Name: _decimals Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_amount_2
_amount_2
_amount
_amount

Name: _amount Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_208(uint256) = 18 - _decimals_1
SUB1
init
end
init
end
A: 0 B: u
lnorm: 0 rnorm: u
SUB

Name: 18 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _decimals Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
[i]Type for TMP_208

Name: TMP_208 Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_209(uint256) = 10 ** TMP_208
init
end
init
end
[i]Type for TMP_209

Name: TMP_209 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: *
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_210(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_amount_1', 'TMP_209'] 
init
end
init
end
A: u B: *
x
lnorm: u rnorm: *
init
end
[i]Type for TMP_210

Name: TMP_210 Function: _normalizeDecimals
Num: -992
Den: -1
Address: u
Norm: *
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_amount_2(uint256) := TMP_210(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: -992
Den: -1
Address: u
Norm: *
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_amount_3
_amount_3
_amount

Name: _amount Function: _normalizeDecimals
Num: -992
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
RETURN _amount_3
init
end
[i]Type for TMP_120

Name: TMP_120 Function: deposit
Num: -992
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_amount_3(uint256) := TMP_120(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for _amount

Name: _amount Function: deposit
Num: -992
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_121(uint256) = INTERNAL_CALL, ERC20.totalSupply()()
init
end
[i]Type for TMP_121

Name: TMP_121 Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_122(bool) = TMP_121 > 0
init
end
init
end
A: u B: 0
x
lnorm: u rnorm: 0
[i]Type for TMP_122

Name: TMP_122 Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_shares_2
_shares_2
_shares
_shares

Name: _shares Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_126(bool) = _shares_2 > 0
init
end
init
end
A: u B: 0
x
lnorm: u rnorm: 0
init
end
[i]Type for TMP_126

Name: TMP_126 Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
_amount_5
_amount
_amount

Name: _amount Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_amount_5(uint256) := ϕ(['_amount_4', '_amount_3'])
Phi
init
end
[i]Type for _amount

Name: _amount Function: deposit
Num: -992
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_amount_5
_amount_5
_amount

Name: _amount Function: deposit
Num: -992
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_shares_1
_shares_1
_shares
_shares

Name: _shares Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
_shares_1(uint256) := _amount_5(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for _shares

Name: _shares Function: deposit
Num: -992
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_amount_3
_amount_3
_amount

Name: _amount Function: deposit
Num: -992
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_balance_1
_balance_1
_balance
_balance

Name: _balance Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_amount_4
_amount_4
_amount
_amount

Name: _amount Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_123(uint256) = INTERNAL_CALL, ERC20.totalSupply()()
init
end
[i]Type for TMP_123

Name: TMP_123 Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_124(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_amount_3', 'TMP_123'] 
init
end
init
end
A: u B: u
x
lnorm: u rnorm: u
init
end
[i]Type for TMP_124

Name: TMP_124 Function: deposit
Num: -992
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_125(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_124', '_balance_1'] 
init
end
init
end
A: u B: u
x
lnorm: u rnorm: u
init
end
[i]Type for TMP_125

Name: TMP_125 Function: deposit
Num: -992
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_amount_4(uint256) := TMP_125(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for _amount

Name: _amount Function: deposit
Num: -992
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_shares_2
_shares_2
_shares
_shares

Name: _shares Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
INTERNAL_CALL, ERC20._mint(address,uint256)(msg.sender,_shares_2)
init
init
end
Propogating parameters and globals to SSA variables...
totalDepositCap_13
totalDepositCap_13
totalDepositCap

Name: totalDepositCap Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10000000000000000000000000
Fields: 
Finance Type: undef
End popogation
TMP_128(uint256) = INTERNAL_CALL, ERC20.totalSupply()()
init
end
[i]Type for TMP_128

Name: TMP_128 Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_129(bool) = TMP_128 <= totalDepositCap_13
init
end
init
end
A: u B: u
x
lnorm: u rnorm: u
[i]Type for TMP_129

Name: TMP_129 Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_130(None) = SOLIDITY_CALL require(bool,string)(TMP_129,>totalDepositCap)
[i]Type for TMP_130

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_shares_2
_shares_2
_shares
_shares

Name: _shares Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
[i]Type for TMP_137

Name: TMP_137 Function: depositMultiple
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_138(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['_shares_1', 'TMP_137'] 

Name: _shares Function: depositMultiple
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_137 Function: depositMultiple
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
init
end
A: u B: u
x
lnorm: u rnorm: u
init
end
[i]Type for TMP_138

Name: TMP_138 Function: depositMultiple
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_shares_2(uint256) := TMP_138(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for _shares

Name: _shares Function: depositMultiple
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
i_1
i_1
i
i

Name: i Function: depositMultiple
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_2
i_2
i
i

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_139(uint8) := i_1(uint8)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for TMP_139

Name: TMP_139 Function: depositMultiple
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
i_2(uint8) = i_1 + 1

Name: i Function: depositMultiple
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
init
end
A: u B: 0
lnorm: u rnorm: 0
init
end
[i]Type for i

Name: i Function: depositMultiple
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_shares_1
_shares_1
_shares
_shares

Name: _shares Function: depositMultiple
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
RETURN _shares_1
init
end


REF_46 -> LENGTH _tokens_1 (-> [])
REF_47 -> LENGTH _amounts_1 (-> [])
TMP_134(bool) = REF_46 == REF_47
TMP_135(None) = SOLIDITY_CALL require(bool,string)(TMP_134,!length)
_shares_1(uint256) := ϕ(['_shares_0', '_shares_2'])
i_1(uint8) := ϕ(['i_0', 'i_2'])
REF_48 -> LENGTH _amounts_1 (-> [])
TMP_136(bool) = i_1 < REF_48
CONDITION TMP_136
REF_50(address) -> _tokens_1 (-> [])[i_1]
REF_51(uint256) -> _amounts_1 (-> [])[i_1]
TMP_137(uint256) = INTERNAL_CALL, Vault.deposit(address,uint256)(REF_50,REF_51)
TMP_138(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['_shares_1', 'TMP_137'] 
_shares_2(uint256) := TMP_138(uint256)
TMP_139(uint8) := i_1(uint8)
i_2(uint8) = i_1 + 1
RETURN _shares_1


Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
_amounts_1 (-> [])
_amounts_1 (-> [])
_amounts
_amounts

Name: _amounts_1 (-> []) Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_tokens_1 (-> [])
_tokens_1 (-> [])
_tokens

Name: _tokens_1 (-> []) Function: None
Num: 
Den: 
Address: -992
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
REF_46 -> LENGTH _tokens_1 (-> [])
[i]Type for REF_46

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_47 -> LENGTH _amounts_1 (-> [])
[i]Type for REF_47

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_134(bool) = REF_46 == REF_47
[i]Type for TMP_134

Name: TMP_134 Function: depositMultiple
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_135(None) = SOLIDITY_CALL require(bool,string)(TMP_134,!length)
[i]Type for TMP_135

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
i_1
i_1
i
i

Name: i Function: depositMultiple
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_amounts_1 (-> [])
_amounts_1 (-> [])
_amounts
_amounts

Name: _amounts_1 (-> []) Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_1
i_1
i
i

Name: i Function: depositMultiple
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_shares_1
_shares_1
_shares
_shares

Name: _shares Function: depositMultiple
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
_shares_1
_shares
_shares

Name: _shares Function: depositMultiple
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_1
i
i

Name: i Function: depositMultiple
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_shares_1(uint256) := ϕ(['_shares_0', '_shares_2'])
Phi
[i]Type for _shares

Name: _shares Function: depositMultiple
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
i_1(uint8) := ϕ(['i_0', 'i_2'])
Phi
[i]Type for i

Name: i Function: depositMultiple
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_48 -> LENGTH _amounts_1 (-> [])
[i]Type for REF_48

Name: REF_48 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_136(bool) = i_1 < REF_48
init
end
init
end
A: u B: u
x
lnorm: u rnorm: u
init
end
[i]Type for TMP_136

Name: TMP_136 Function: depositMultiple
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
i_1
i_1
i
i

Name: i Function: depositMultiple
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_amounts_1 (-> [])
_amounts_1 (-> [])
_amounts
_amounts

Name: _amounts_1 (-> []) Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_shares_1
_shares_1
_shares
_shares

Name: _shares Function: depositMultiple
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_tokens_1 (-> [])
_tokens_1 (-> [])
_tokens

Name: _tokens_1 (-> []) Function: None
Num: 
Den: 
Address: -992
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_shares_2
_shares_2
_shares
_shares

Name: _shares Function: depositMultiple
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
REF_50(address) -> _tokens_1 (-> [])[i_1]
INDEX
[i]Type for REF_50

Name: _tokens_1 (-> []) Function: None
Num: 
Den: 
Address: -992
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_51(uint256) -> _amounts_1 (-> [])[i_1]
INDEX
[i]Type for REF_51

Name: _amounts_1 (-> []) Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_137(uint256) = INTERNAL_CALL, Vault.deposit(address,uint256)(REF_50,REF_51)
init
end
init
end
[[], [], 'u', None, [], -1, -992, 'u']

Name: _token Function: deposit
Num: 
Den: 
Address: -992
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: _amount Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _token Function: deposit
Num: 
Den: 
Address: -992
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef

Name: _amount Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
_token_1
_token

Name: _token_1 Function: deposit
Num: 
Den: 
Address: -992
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
_amount_1
_amount

Name: _amount_1 Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
totalDepositCap_3
totalDepositCap

Name: totalDepositCap Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10000000000000000000000000
Fields: 
Finance Type: undef
_token_1(address) := ϕ(['REF_50'])
Phi
[i]Type for _token

Name: _token Function: deposit
Num: 
Den: 
Address: -992
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
XXXX
_amount_1(uint256) := ϕ(['REF_51'])
Phi
[i]Type for _amount

Name: _amount Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
totalDepositCap_3(uint256) := ϕ(['totalDepositCap_8', 'totalDepositCap_1', 'totalDepositCap_10', 'totalDepositCap_13', 'totalDepositCap_0', 'totalDepositCap_2', 'totalDepositCap_11'])
Phi
[i]Type for totalDepositCap

Name: totalDepositCap Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10000000000000000000000000
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_token_1
_token_1
_token

Name: _token Function: deposit
Num: 
Den: 
Address: -992
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
End popogation
MODIFIER_CALL, Vault.checkToken(address)(_token_1)
init
end
[[], [], 'u', '_token', [], -1, -992, 'u']

Name: _token Function: None
Num: 
Den: 
Address: -992
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef

Name: _token Function: None
Num: 
Den: 
Address: -992
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
_token_1
_token

Name: _token_1 Function: checkToken
Num: 
Den: 
Address: -992
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
manager_31
manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
_token_1(address) := ϕ(['_token_1', '_output_1', '_token_1'])
Phi
[i]Type for _token

Name: _token Function: checkToken
Num: 
Den: 
Address: -992
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
XXXX
manager_31(IManager) := ϕ(['manager_19', 'manager_28', 'manager_30', 'manager_0', 'manager_37', 'manager_35', 'manager_24', 'manager_6', 'manager_26', 'manager_12', 'manager_39', 'manager_1', 'manager_33'])
Phi
[i]Type for manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
manager_31
manager_31
manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
manager_32
manager_32
manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
_token_1
_token_1
_token

Name: _token Function: checkToken
Num: 
Den: 
Address: -992
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
End popogation
manager_32
manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
manager_33
manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
TMP_214(bool) = HIGH_LEVEL_CALL, dest:manager_31(IManager), function:allowedTokens, arguments:['_token_1']  
High Call: allowedTokens
Running querryfc
[i]Type for TMP_214

Name: TMP_214 Function: checkToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
manager_32(IManager) := ϕ(['manager_19', 'manager_28', 'manager_30', 'manager_31', 'manager_37', 'manager_35', 'manager_24', 'manager_6', 'manager_26', 'manager_12', 'manager_39', 'manager_1', 'manager_33'])
Phi
[i]Type for manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_215(address) = HIGH_LEVEL_CALL, dest:manager_32(IManager), function:vaults, arguments:['_token_1']  
High Call: vaults
Running querryfc
Written func info: Manager, vaults
Retvar: ('c', [-1], [-1], 'u', 'u', 4)
([-1], [-1], 'u', 'u', 4, -1)
[i]Type for TMP_215

Name: TMP_215 Function: checkToken
Num: -1
Den: -1
Address: 4
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
manager_33(IManager) := ϕ(['manager_19', 'manager_28', 'manager_30', 'manager_32', 'manager_37', 'manager_35', 'manager_24', 'manager_6', 'manager_26', 'manager_12', 'manager_39', 'manager_1', 'manager_33'])
Phi
[i]Type for manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_216 = CONVERT this to address
Converting this
6
[i]Type for TMP_216

Name: TMP_216 Function: checkToken
Num: 
Den: 
Address: 6
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_217(bool) = TMP_215 == TMP_216
[i]Type for TMP_217

Name: TMP_217 Function: checkToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_218(bool) = TMP_214 && TMP_217
[i]Type for TMP_218

Name: TMP_218 Function: checkToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_219(None) = SOLIDITY_CALL require(bool,string)(TMP_218,!_token)
[i]Type for TMP_219

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation

Name: _token Function: None
Num: 
Den: 
Address: -992
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
_token_1
_token

Name: _token_1 Function: checkToken
Num: 
Den: 
Address: -992
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
manager_31
manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
_token_1(address) := ϕ(['_token_1', '_output_1', '_token_1'])
Phi
[i]Type for _token

Name: _token Function: checkToken
Num: 
Den: 
Address: -992
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
XXXX
manager_31(IManager) := ϕ(['manager_19', 'manager_28', 'manager_30', 'manager_0', 'manager_37', 'manager_35', 'manager_24', 'manager_6', 'manager_26', 'manager_12', 'manager_39', 'manager_1', 'manager_33'])
Phi
[i]Type for manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
manager_31
manager_31
manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
manager_32
manager_32
manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
_token_1
_token_1
_token

Name: _token Function: checkToken
Num: 
Den: 
Address: -992
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
End popogation
manager_32
manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
manager_33
manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
TMP_214(bool) = HIGH_LEVEL_CALL, dest:manager_31(IManager), function:allowedTokens, arguments:['_token_1']  
High Call: allowedTokens
Running querryfc
[i]Type for TMP_214

Name: TMP_214 Function: checkToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
manager_32(IManager) := ϕ(['manager_19', 'manager_28', 'manager_30', 'manager_31', 'manager_37', 'manager_35', 'manager_24', 'manager_6', 'manager_26', 'manager_12', 'manager_39', 'manager_1', 'manager_33'])
Phi
[i]Type for manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_215(address) = HIGH_LEVEL_CALL, dest:manager_32(IManager), function:vaults, arguments:['_token_1']  
High Call: vaults
Running querryfc
Written func info: Manager, vaults
Retvar: ('c', [-1], [-1], 'u', 'u', 4)
([-1], [-1], 'u', 'u', 4, -1)
[i]Type for TMP_215

Name: TMP_215 Function: checkToken
Num: -1
Den: -1
Address: 4
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
manager_33(IManager) := ϕ(['manager_19', 'manager_28', 'manager_30', 'manager_32', 'manager_37', 'manager_35', 'manager_24', 'manager_6', 'manager_26', 'manager_12', 'manager_39', 'manager_1', 'manager_33'])
Phi
[i]Type for manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_216 = CONVERT this to address
Converting this
6
[i]Type for TMP_216

Name: TMP_216 Function: checkToken
Num: 
Den: 
Address: 6
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_217(bool) = TMP_215 == TMP_216
[i]Type for TMP_217

Name: TMP_217 Function: checkToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_218(bool) = TMP_214 && TMP_217
[i]Type for TMP_218

Name: TMP_218 Function: checkToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_219(None) = SOLIDITY_CALL require(bool,string)(TMP_218,!_token)
[i]Type for TMP_219

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, Vault.notHalted()()
Propogating parameters and globals to SSA variables...
_amount_1
_amount_1
_amount

Name: _amount Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_106(bool) = _amount_1 > 0
init
end
init
end
A: u B: 0
x
lnorm: u rnorm: 0
[i]Type for TMP_106

Name: TMP_106 Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_107(None) = SOLIDITY_CALL require(bool,string)(TMP_106,!_amount)
[i]Type for TMP_107

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_balance_1
_balance_1
_balance
_balance

Name: _balance Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_108(uint256) = INTERNAL_CALL, Vault.balance()()
init
end
[i]Type for TMP_108

Name: TMP_108 Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_balance_1(uint256) := TMP_108(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for _balance

Name: _balance Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_token_1
_token_1
_token

Name: _token Function: deposit
Num: 
Den: 
Address: -992
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
_before_1
_before_1
_before
_before

Name: _before Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
totalDepositCap_7
totalDepositCap

Name: totalDepositCap Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10000000000000000000000000
Fields: 
Finance Type: undef
TMP_109 = CONVERT _token_1 to IERC20
Converting _token_1

Name: _token Function: deposit
Num: 
Den: 
Address: -992
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
init
end
ERC20
[i]Type for TMP_109

Name: TMP_109 Function: deposit
Num: 
Den: 
Address: -992
Norm: u
LF: ERC20
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_110 = CONVERT this to address
Converting this
6
[i]Type for TMP_110

Name: TMP_110 Function: deposit
Num: 
Den: 
Address: 6
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_111(uint256) = HIGH_LEVEL_CALL, dest:TMP_109(IERC20), function:balanceOf, arguments:['TMP_110']  
High Call: balanceOf
Running querryfc
Written func info: ERC20, balanceOf
Handling balance function!
-992
[i]Type for TMP_111

Name: TMP_111 Function: deposit
Num: -992
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
totalDepositCap_7(uint256) := ϕ(['totalDepositCap_8', 'totalDepositCap_1', 'totalDepositCap_10', 'totalDepositCap_6', 'totalDepositCap_13', 'totalDepositCap_2', 'totalDepositCap_11'])
Phi
[i]Type for totalDepositCap

Name: totalDepositCap Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10000000000000000000000000
Fields: 
Finance Type: undef
XXXX
_before_1(uint256) := TMP_111(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for _before

Name: _before Function: deposit
Num: -992
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_amount_1
_amount_1
_amount

Name: _amount Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_token_1
_token_1
_token

Name: _token Function: deposit
Num: 
Den: 
Address: -992
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_112 = CONVERT _token_1 to IERC20
Converting _token_1

Name: _token Function: deposit
Num: 
Den: 
Address: -992
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
init
end
ERC20
[i]Type for TMP_112

Name: TMP_112 Function: deposit
Num: 
Den: 
Address: -992
Norm: u
LF: ERC20
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_113 = CONVERT this to address
Converting this
6
[i]Type for TMP_113

Name: TMP_113 Function: deposit
Num: 
Den: 
Address: 6
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
XXXX
LIBRARY_CALL, dest:SafeERC20, function:SafeERC20.safeTransferFrom(IERC20,address,address,uint256), arguments:['TMP_112', 'msg.sender', 'TMP_113', '_amount_1'] 
Propogating parameters and globals to SSA variables...
_before_1
_before_1
_before

Name: _before Function: deposit
Num: -992
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
_token_1
_token_1
_token

Name: _token Function: deposit
Num: 
Den: 
Address: -992
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
_amount_2
_amount_2
_amount
_amount

Name: _amount Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
totalDepositCap_8
totalDepositCap

Name: totalDepositCap Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10000000000000000000000000
Fields: 
Finance Type: undef
TMP_115 = CONVERT _token_1 to IERC20
Converting _token_1

Name: _token Function: deposit
Num: 
Den: 
Address: -992
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
init
end
ERC20
[i]Type for TMP_115

Name: TMP_115 Function: deposit
Num: 
Den: 
Address: -992
Norm: u
LF: ERC20
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_116 = CONVERT this to address
Converting this
6
[i]Type for TMP_116

Name: TMP_116 Function: deposit
Num: 
Den: 
Address: 6
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_117(uint256) = HIGH_LEVEL_CALL, dest:TMP_115(IERC20), function:balanceOf, arguments:['TMP_116']  
High Call: balanceOf
Running querryfc
Written func info: ERC20, balanceOf
Handling balance function!
-992
[i]Type for TMP_117

Name: TMP_117 Function: deposit
Num: -992
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
totalDepositCap_8(uint256) := ϕ(['totalDepositCap_8', 'totalDepositCap_1', 'totalDepositCap_10', 'totalDepositCap_7', 'totalDepositCap_13', 'totalDepositCap_2', 'totalDepositCap_11'])
Phi
[i]Type for totalDepositCap

Name: totalDepositCap Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10000000000000000000000000
Fields: 
Finance Type: undef
XXXX
TMP_118(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['TMP_117', '_before_1'] 
SUB1
init
end
init
end
A: 6 B: 6
x
y
A: 6 B: 6
<class 'int'>
<class 'int'>
lnorm: 6 rnorm: 6
SUB

Name: TMP_117 Function: deposit
Num: -992
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _before Function: deposit
Num: -992
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
[i]Type for TMP_118

Name: TMP_118 Function: deposit
Num: -992
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_amount_2(uint256) := TMP_118(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for _amount

Name: _amount Function: deposit
Num: -992
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_amount_2
_amount_2
_amount

Name: _amount Function: deposit
Num: -992
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_119(bool) = _amount_2 > 0
init
end
init
end
A: 6 B: 0
x
y
A: 6 B: 0
<class 'int'>
<class 'int'>
lnorm: 6 rnorm: 0
[i]Type for TMP_119

Name: TMP_119 Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
_shares_2
_shares
_shares

Name: _shares Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_shares_2(uint256) := ϕ(['_shares_0', '_shares_1'])
Phi
[i]Type for _shares

Name: _shares Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_amount_2
_amount_2
_amount

Name: _amount Function: deposit
Num: -992
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
_token_1
_token_1
_token

Name: _token Function: deposit
Num: 
Den: 
Address: -992
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
_amount_3
_amount_3
_amount
_amount

Name: _amount Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_120(uint256) = INTERNAL_CALL, Vault._normalizeDecimals(address,uint256)(_token_1,_amount_2)
init
end
init
end
[[], [], 'u', '_token', [], -1, -992, 'u']

Name: _token Function: None
Num: 
Den: 
Address: -992
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
[[-992], [-1], 6, None, [], -1, 'u', 'u']

Name: _amount Function: None
Num: -992
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _token Function: None
Num: 
Den: 
Address: -992
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef

Name: _amount Function: None
Num: -992
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
_token_1
_token

Name: _token_1 Function: _normalizeDecimals
Num: 
Den: 
Address: -992
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
_amount_1
_amount

Name: _amount_1 Function: _normalizeDecimals
Num: -992
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_token_1(address) := ϕ(['_token_1', '_token_1'])
Phi
[i]Type for _token

Name: _token Function: _normalizeDecimals
Num: 
Den: 
Address: -992
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
XXXX
_amount_1(uint256) := ϕ(['TMP_188', '_amount_2'])
Phi
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: -992
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_token_1
_token_1
_token

Name: _token Function: _normalizeDecimals
Num: 
Den: 
Address: -992
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
_decimals_1
_decimals_1
_decimals
_decimals

Name: _decimals Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_204 = CONVERT _token_1 to ExtendedIERC20
Converting _token_1

Name: _token Function: _normalizeDecimals
Num: 
Den: 
Address: -992
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
init
end
UNKNOWN
[i]Type for TMP_204

Name: TMP_204 Function: _normalizeDecimals
Num: 
Den: 
Address: -992
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_205(uint8) = HIGH_LEVEL_CALL, dest:TMP_204(ExtendedIERC20), function:decimals, arguments:[]  
High Call: decimals
Running querryfc
Written func info: UNKNOWN, decimals
Handling balance function!
-992
[i]Type for TMP_205

Name: TMP_205 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
XXXX
TMP_206 = CONVERT TMP_205 to uint256
Converting TMP_205

Name: TMP_205 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
init
end
[i]Type for TMP_206

Name: TMP_206 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_decimals_1(uint256) := TMP_206(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for _decimals

Name: _decimals Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_decimals_1
_decimals_1
_decimals

Name: _decimals Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_207(bool) = _decimals_1 < 18
init
end
init
end
A: u B: 0
x
lnorm: u rnorm: 0
[i]Type for TMP_207

Name: TMP_207 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
_amount_3
_amount
_amount

Name: _amount Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_amount_3(uint256) := ϕ(['_amount_1', '_amount_2'])
Phi
init
end
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: -992
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_amount_1
_amount_1
_amount

Name: _amount Function: _normalizeDecimals
Num: -992
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_decimals_1
_decimals_1
_decimals

Name: _decimals Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_amount_2
_amount_2
_amount
_amount

Name: _amount Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_208(uint256) = 18 - _decimals_1
SUB1
init
end
init
end
A: 0 B: u
lnorm: 0 rnorm: u
SUB

Name: 18 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _decimals Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
[i]Type for TMP_208

Name: TMP_208 Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_209(uint256) = 10 ** TMP_208
init
end
init
end
[i]Type for TMP_209

Name: TMP_209 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: *
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_210(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_amount_1', 'TMP_209'] 
init
end
init
end
A: u B: *
x
lnorm: u rnorm: *
init
end
[i]Type for TMP_210

Name: TMP_210 Function: _normalizeDecimals
Num: -992
Den: -1
Address: u
Norm: *
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_amount_2(uint256) := TMP_210(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: -992
Den: -1
Address: u
Norm: *
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_amount_3
_amount_3
_amount

Name: _amount Function: _normalizeDecimals
Num: -992
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
RETURN _amount_3
init
end

Name: _token Function: None
Num: 
Den: 
Address: -992
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef

Name: _amount Function: None
Num: -992
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
_token_1
_token

Name: _token_1 Function: _normalizeDecimals
Num: 
Den: 
Address: -992
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
_amount_1
_amount

Name: _amount_1 Function: _normalizeDecimals
Num: -992
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_token_1(address) := ϕ(['_token_1', '_token_1'])
Phi
[i]Type for _token

Name: _token Function: _normalizeDecimals
Num: 
Den: 
Address: -992
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
XXXX
_amount_1(uint256) := ϕ(['TMP_188', '_amount_2'])
Phi
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: -992
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_token_1
_token_1
_token

Name: _token Function: _normalizeDecimals
Num: 
Den: 
Address: -992
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
_decimals_1
_decimals_1
_decimals
_decimals

Name: _decimals Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_204 = CONVERT _token_1 to ExtendedIERC20
Converting _token_1

Name: _token Function: _normalizeDecimals
Num: 
Den: 
Address: -992
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
init
end
UNKNOWN
[i]Type for TMP_204

Name: TMP_204 Function: _normalizeDecimals
Num: 
Den: 
Address: -992
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_205(uint8) = HIGH_LEVEL_CALL, dest:TMP_204(ExtendedIERC20), function:decimals, arguments:[]  
High Call: decimals
Running querryfc
Written func info: UNKNOWN, decimals
Handling balance function!
-992
[i]Type for TMP_205

Name: TMP_205 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
XXXX
TMP_206 = CONVERT TMP_205 to uint256
Converting TMP_205

Name: TMP_205 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
init
end
[i]Type for TMP_206

Name: TMP_206 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_decimals_1(uint256) := TMP_206(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for _decimals

Name: _decimals Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_decimals_1
_decimals_1
_decimals

Name: _decimals Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_207(bool) = _decimals_1 < 18
init
end
init
end
A: u B: 0
x
lnorm: u rnorm: 0
[i]Type for TMP_207

Name: TMP_207 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
_amount_3
_amount
_amount

Name: _amount Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_amount_3(uint256) := ϕ(['_amount_1', '_amount_2'])
Phi
init
end
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: -992
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_amount_1
_amount_1
_amount

Name: _amount Function: _normalizeDecimals
Num: -992
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_decimals_1
_decimals_1
_decimals

Name: _decimals Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_amount_2
_amount_2
_amount
_amount

Name: _amount Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_208(uint256) = 18 - _decimals_1
SUB1
init
end
init
end
A: 0 B: u
lnorm: 0 rnorm: u
SUB

Name: 18 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _decimals Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
[i]Type for TMP_208

Name: TMP_208 Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_209(uint256) = 10 ** TMP_208
init
end
init
end
[i]Type for TMP_209

Name: TMP_209 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: *
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_210(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_amount_1', 'TMP_209'] 
init
end
init
end
A: u B: *
x
lnorm: u rnorm: *
init
end
[i]Type for TMP_210

Name: TMP_210 Function: _normalizeDecimals
Num: -992
Den: -1
Address: u
Norm: *
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_amount_2(uint256) := TMP_210(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: -992
Den: -1
Address: u
Norm: *
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_amount_3
_amount_3
_amount

Name: _amount Function: _normalizeDecimals
Num: -992
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
RETURN _amount_3
init
end
[i]Type for TMP_120

Name: TMP_120 Function: deposit
Num: -992
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_amount_3(uint256) := TMP_120(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for _amount

Name: _amount Function: deposit
Num: -992
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_121(uint256) = INTERNAL_CALL, ERC20.totalSupply()()
init
end
[i]Type for TMP_121

Name: TMP_121 Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_122(bool) = TMP_121 > 0
init
end
init
end
A: u B: 0
x
lnorm: u rnorm: 0
[i]Type for TMP_122

Name: TMP_122 Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_shares_2
_shares_2
_shares
_shares

Name: _shares Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_126(bool) = _shares_2 > 0
init
end
init
end
A: u B: 0
x
lnorm: u rnorm: 0
init
end
[i]Type for TMP_126

Name: TMP_126 Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
_amount_5
_amount
_amount

Name: _amount Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_amount_5(uint256) := ϕ(['_amount_4', '_amount_3'])
Phi
init
end
[i]Type for _amount

Name: _amount Function: deposit
Num: -992
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_amount_5
_amount_5
_amount

Name: _amount Function: deposit
Num: -992
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_shares_1
_shares_1
_shares
_shares

Name: _shares Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
_shares_1(uint256) := _amount_5(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for _shares

Name: _shares Function: deposit
Num: -992
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_amount_3
_amount_3
_amount

Name: _amount Function: deposit
Num: -992
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_balance_1
_balance_1
_balance
_balance

Name: _balance Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_amount_4
_amount_4
_amount
_amount

Name: _amount Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_123(uint256) = INTERNAL_CALL, ERC20.totalSupply()()
init
end
[i]Type for TMP_123

Name: TMP_123 Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_124(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_amount_3', 'TMP_123'] 
init
end
init
end
A: u B: u
x
lnorm: u rnorm: u
init
end
[i]Type for TMP_124

Name: TMP_124 Function: deposit
Num: -992
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_125(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_124', '_balance_1'] 
init
end
init
end
A: u B: u
x
lnorm: u rnorm: u
init
end
[i]Type for TMP_125

Name: TMP_125 Function: deposit
Num: -992
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_amount_4(uint256) := TMP_125(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for _amount

Name: _amount Function: deposit
Num: -992
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_shares_2
_shares_2
_shares
_shares

Name: _shares Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
INTERNAL_CALL, ERC20._mint(address,uint256)(msg.sender,_shares_2)
init
init
end
Propogating parameters and globals to SSA variables...
totalDepositCap_13
totalDepositCap_13
totalDepositCap

Name: totalDepositCap Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10000000000000000000000000
Fields: 
Finance Type: undef
End popogation
TMP_128(uint256) = INTERNAL_CALL, ERC20.totalSupply()()
init
end
[i]Type for TMP_128

Name: TMP_128 Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_129(bool) = TMP_128 <= totalDepositCap_13
init
end
init
end
A: u B: u
x
lnorm: u rnorm: u
[i]Type for TMP_129

Name: TMP_129 Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_130(None) = SOLIDITY_CALL require(bool,string)(TMP_129,>totalDepositCap)
[i]Type for TMP_130

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_shares_2
_shares_2
_shares
_shares

Name: _shares Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation

Name: _token Function: deposit
Num: 
Den: 
Address: -992
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef

Name: _amount Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
_token_1
_token

Name: _token_1 Function: deposit
Num: 
Den: 
Address: -992
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
_amount_1
_amount

Name: _amount_1 Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
totalDepositCap_3
totalDepositCap

Name: totalDepositCap Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10000000000000000000000000
Fields: 
Finance Type: undef
_token_1(address) := ϕ(['REF_50'])
Phi
[i]Type for _token

Name: _token Function: deposit
Num: 
Den: 
Address: -992
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
XXXX
_amount_1(uint256) := ϕ(['REF_51'])
Phi
[i]Type for _amount

Name: _amount Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
totalDepositCap_3(uint256) := ϕ(['totalDepositCap_8', 'totalDepositCap_1', 'totalDepositCap_10', 'totalDepositCap_13', 'totalDepositCap_0', 'totalDepositCap_2', 'totalDepositCap_11'])
Phi
[i]Type for totalDepositCap

Name: totalDepositCap Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10000000000000000000000000
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_token_1
_token_1
_token

Name: _token Function: deposit
Num: 
Den: 
Address: -992
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
End popogation
MODIFIER_CALL, Vault.checkToken(address)(_token_1)
init
end
[[], [], 'u', '_token', [], -1, -992, 'u']

Name: _token Function: None
Num: 
Den: 
Address: -992
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef

Name: _token Function: None
Num: 
Den: 
Address: -992
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
_token_1
_token

Name: _token_1 Function: checkToken
Num: 
Den: 
Address: -992
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
manager_31
manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
_token_1(address) := ϕ(['_token_1', '_output_1', '_token_1'])
Phi
[i]Type for _token

Name: _token Function: checkToken
Num: 
Den: 
Address: -992
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
XXXX
manager_31(IManager) := ϕ(['manager_19', 'manager_28', 'manager_30', 'manager_0', 'manager_37', 'manager_35', 'manager_24', 'manager_6', 'manager_26', 'manager_12', 'manager_39', 'manager_1', 'manager_33'])
Phi
[i]Type for manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
manager_31
manager_31
manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
manager_32
manager_32
manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
_token_1
_token_1
_token

Name: _token Function: checkToken
Num: 
Den: 
Address: -992
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
End popogation
manager_32
manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
manager_33
manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
TMP_214(bool) = HIGH_LEVEL_CALL, dest:manager_31(IManager), function:allowedTokens, arguments:['_token_1']  
High Call: allowedTokens
Running querryfc
[i]Type for TMP_214

Name: TMP_214 Function: checkToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
manager_32(IManager) := ϕ(['manager_19', 'manager_28', 'manager_30', 'manager_31', 'manager_37', 'manager_35', 'manager_24', 'manager_6', 'manager_26', 'manager_12', 'manager_39', 'manager_1', 'manager_33'])
Phi
[i]Type for manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_215(address) = HIGH_LEVEL_CALL, dest:manager_32(IManager), function:vaults, arguments:['_token_1']  
High Call: vaults
Running querryfc
Written func info: Manager, vaults
Retvar: ('c', [-1], [-1], 'u', 'u', 4)
([-1], [-1], 'u', 'u', 4, -1)
[i]Type for TMP_215

Name: TMP_215 Function: checkToken
Num: -1
Den: -1
Address: 4
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
manager_33(IManager) := ϕ(['manager_19', 'manager_28', 'manager_30', 'manager_32', 'manager_37', 'manager_35', 'manager_24', 'manager_6', 'manager_26', 'manager_12', 'manager_39', 'manager_1', 'manager_33'])
Phi
[i]Type for manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_216 = CONVERT this to address
Converting this
6
[i]Type for TMP_216

Name: TMP_216 Function: checkToken
Num: 
Den: 
Address: 6
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_217(bool) = TMP_215 == TMP_216
[i]Type for TMP_217

Name: TMP_217 Function: checkToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_218(bool) = TMP_214 && TMP_217
[i]Type for TMP_218

Name: TMP_218 Function: checkToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_219(None) = SOLIDITY_CALL require(bool,string)(TMP_218,!_token)
[i]Type for TMP_219

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation

Name: _token Function: None
Num: 
Den: 
Address: -992
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
_token_1
_token

Name: _token_1 Function: checkToken
Num: 
Den: 
Address: -992
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
manager_31
manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
_token_1(address) := ϕ(['_token_1', '_output_1', '_token_1'])
Phi
[i]Type for _token

Name: _token Function: checkToken
Num: 
Den: 
Address: -992
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
XXXX
manager_31(IManager) := ϕ(['manager_19', 'manager_28', 'manager_30', 'manager_0', 'manager_37', 'manager_35', 'manager_24', 'manager_6', 'manager_26', 'manager_12', 'manager_39', 'manager_1', 'manager_33'])
Phi
[i]Type for manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
manager_31
manager_31
manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
manager_32
manager_32
manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
_token_1
_token_1
_token

Name: _token Function: checkToken
Num: 
Den: 
Address: -992
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
End popogation
manager_32
manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
manager_33
manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
TMP_214(bool) = HIGH_LEVEL_CALL, dest:manager_31(IManager), function:allowedTokens, arguments:['_token_1']  
High Call: allowedTokens
Running querryfc
[i]Type for TMP_214

Name: TMP_214 Function: checkToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
manager_32(IManager) := ϕ(['manager_19', 'manager_28', 'manager_30', 'manager_31', 'manager_37', 'manager_35', 'manager_24', 'manager_6', 'manager_26', 'manager_12', 'manager_39', 'manager_1', 'manager_33'])
Phi
[i]Type for manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_215(address) = HIGH_LEVEL_CALL, dest:manager_32(IManager), function:vaults, arguments:['_token_1']  
High Call: vaults
Running querryfc
Written func info: Manager, vaults
Retvar: ('c', [-1], [-1], 'u', 'u', 4)
([-1], [-1], 'u', 'u', 4, -1)
[i]Type for TMP_215

Name: TMP_215 Function: checkToken
Num: -1
Den: -1
Address: 4
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
manager_33(IManager) := ϕ(['manager_19', 'manager_28', 'manager_30', 'manager_32', 'manager_37', 'manager_35', 'manager_24', 'manager_6', 'manager_26', 'manager_12', 'manager_39', 'manager_1', 'manager_33'])
Phi
[i]Type for manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_216 = CONVERT this to address
Converting this
6
[i]Type for TMP_216

Name: TMP_216 Function: checkToken
Num: 
Den: 
Address: 6
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_217(bool) = TMP_215 == TMP_216
[i]Type for TMP_217

Name: TMP_217 Function: checkToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_218(bool) = TMP_214 && TMP_217
[i]Type for TMP_218

Name: TMP_218 Function: checkToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_219(None) = SOLIDITY_CALL require(bool,string)(TMP_218,!_token)
[i]Type for TMP_219

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, Vault.notHalted()()
Propogating parameters and globals to SSA variables...
_amount_1
_amount_1
_amount

Name: _amount Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_106(bool) = _amount_1 > 0
init
end
init
end
A: u B: 0
x
lnorm: u rnorm: 0
[i]Type for TMP_106

Name: TMP_106 Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_107(None) = SOLIDITY_CALL require(bool,string)(TMP_106,!_amount)
[i]Type for TMP_107

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_balance_1
_balance_1
_balance
_balance

Name: _balance Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_108(uint256) = INTERNAL_CALL, Vault.balance()()
init
end
[i]Type for TMP_108

Name: TMP_108 Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_balance_1(uint256) := TMP_108(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for _balance

Name: _balance Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_token_1
_token_1
_token

Name: _token Function: deposit
Num: 
Den: 
Address: -992
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
_before_1
_before_1
_before
_before

Name: _before Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
totalDepositCap_7
totalDepositCap

Name: totalDepositCap Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10000000000000000000000000
Fields: 
Finance Type: undef
TMP_109 = CONVERT _token_1 to IERC20
Converting _token_1

Name: _token Function: deposit
Num: 
Den: 
Address: -992
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
init
end
ERC20
[i]Type for TMP_109

Name: TMP_109 Function: deposit
Num: 
Den: 
Address: -992
Norm: u
LF: ERC20
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_110 = CONVERT this to address
Converting this
6
[i]Type for TMP_110

Name: TMP_110 Function: deposit
Num: 
Den: 
Address: 6
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_111(uint256) = HIGH_LEVEL_CALL, dest:TMP_109(IERC20), function:balanceOf, arguments:['TMP_110']  
High Call: balanceOf
Running querryfc
Written func info: ERC20, balanceOf
Handling balance function!
-992
[i]Type for TMP_111

Name: TMP_111 Function: deposit
Num: -992
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
totalDepositCap_7(uint256) := ϕ(['totalDepositCap_8', 'totalDepositCap_1', 'totalDepositCap_10', 'totalDepositCap_6', 'totalDepositCap_13', 'totalDepositCap_2', 'totalDepositCap_11'])
Phi
[i]Type for totalDepositCap

Name: totalDepositCap Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10000000000000000000000000
Fields: 
Finance Type: undef
XXXX
_before_1(uint256) := TMP_111(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for _before

Name: _before Function: deposit
Num: -992
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_amount_1
_amount_1
_amount

Name: _amount Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_token_1
_token_1
_token

Name: _token Function: deposit
Num: 
Den: 
Address: -992
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_112 = CONVERT _token_1 to IERC20
Converting _token_1

Name: _token Function: deposit
Num: 
Den: 
Address: -992
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
init
end
ERC20
[i]Type for TMP_112

Name: TMP_112 Function: deposit
Num: 
Den: 
Address: -992
Norm: u
LF: ERC20
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_113 = CONVERT this to address
Converting this
6
[i]Type for TMP_113

Name: TMP_113 Function: deposit
Num: 
Den: 
Address: 6
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
XXXX
LIBRARY_CALL, dest:SafeERC20, function:SafeERC20.safeTransferFrom(IERC20,address,address,uint256), arguments:['TMP_112', 'msg.sender', 'TMP_113', '_amount_1'] 
Propogating parameters and globals to SSA variables...
_before_1
_before_1
_before

Name: _before Function: deposit
Num: -992
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
_token_1
_token_1
_token

Name: _token Function: deposit
Num: 
Den: 
Address: -992
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
_amount_2
_amount_2
_amount
_amount

Name: _amount Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
totalDepositCap_8
totalDepositCap

Name: totalDepositCap Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10000000000000000000000000
Fields: 
Finance Type: undef
TMP_115 = CONVERT _token_1 to IERC20
Converting _token_1

Name: _token Function: deposit
Num: 
Den: 
Address: -992
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
init
end
ERC20
[i]Type for TMP_115

Name: TMP_115 Function: deposit
Num: 
Den: 
Address: -992
Norm: u
LF: ERC20
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_116 = CONVERT this to address
Converting this
6
[i]Type for TMP_116

Name: TMP_116 Function: deposit
Num: 
Den: 
Address: 6
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_117(uint256) = HIGH_LEVEL_CALL, dest:TMP_115(IERC20), function:balanceOf, arguments:['TMP_116']  
High Call: balanceOf
Running querryfc
Written func info: ERC20, balanceOf
Handling balance function!
-992
[i]Type for TMP_117

Name: TMP_117 Function: deposit
Num: -992
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
totalDepositCap_8(uint256) := ϕ(['totalDepositCap_8', 'totalDepositCap_1', 'totalDepositCap_10', 'totalDepositCap_7', 'totalDepositCap_13', 'totalDepositCap_2', 'totalDepositCap_11'])
Phi
[i]Type for totalDepositCap

Name: totalDepositCap Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10000000000000000000000000
Fields: 
Finance Type: undef
XXXX
TMP_118(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['TMP_117', '_before_1'] 
SUB1
init
end
init
end
A: 6 B: 6
x
y
A: 6 B: 6
<class 'int'>
<class 'int'>
lnorm: 6 rnorm: 6
SUB

Name: TMP_117 Function: deposit
Num: -992
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _before Function: deposit
Num: -992
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
[i]Type for TMP_118

Name: TMP_118 Function: deposit
Num: -992
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_amount_2(uint256) := TMP_118(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for _amount

Name: _amount Function: deposit
Num: -992
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_amount_2
_amount_2
_amount

Name: _amount Function: deposit
Num: -992
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_119(bool) = _amount_2 > 0
init
end
init
end
A: 6 B: 0
x
y
A: 6 B: 0
<class 'int'>
<class 'int'>
lnorm: 6 rnorm: 0
[i]Type for TMP_119

Name: TMP_119 Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
_shares_2
_shares
_shares

Name: _shares Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_shares_2(uint256) := ϕ(['_shares_0', '_shares_1'])
Phi
[i]Type for _shares

Name: _shares Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_amount_2
_amount_2
_amount

Name: _amount Function: deposit
Num: -992
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
_token_1
_token_1
_token

Name: _token Function: deposit
Num: 
Den: 
Address: -992
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
_amount_3
_amount_3
_amount
_amount

Name: _amount Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_120(uint256) = INTERNAL_CALL, Vault._normalizeDecimals(address,uint256)(_token_1,_amount_2)
init
end
init
end
[[], [], 'u', '_token', [], -1, -992, 'u']

Name: _token Function: None
Num: 
Den: 
Address: -992
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
[[-992], [-1], 6, None, [], -1, 'u', 'u']

Name: _amount Function: None
Num: -992
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _token Function: None
Num: 
Den: 
Address: -992
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef

Name: _amount Function: None
Num: -992
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
_token_1
_token

Name: _token_1 Function: _normalizeDecimals
Num: 
Den: 
Address: -992
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
_amount_1
_amount

Name: _amount_1 Function: _normalizeDecimals
Num: -992
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_token_1(address) := ϕ(['_token_1', '_token_1'])
Phi
[i]Type for _token

Name: _token Function: _normalizeDecimals
Num: 
Den: 
Address: -992
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
XXXX
_amount_1(uint256) := ϕ(['TMP_188', '_amount_2'])
Phi
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: -992
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_token_1
_token_1
_token

Name: _token Function: _normalizeDecimals
Num: 
Den: 
Address: -992
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
_decimals_1
_decimals_1
_decimals
_decimals

Name: _decimals Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_204 = CONVERT _token_1 to ExtendedIERC20
Converting _token_1

Name: _token Function: _normalizeDecimals
Num: 
Den: 
Address: -992
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
init
end
UNKNOWN
[i]Type for TMP_204

Name: TMP_204 Function: _normalizeDecimals
Num: 
Den: 
Address: -992
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_205(uint8) = HIGH_LEVEL_CALL, dest:TMP_204(ExtendedIERC20), function:decimals, arguments:[]  
High Call: decimals
Running querryfc
Written func info: UNKNOWN, decimals
Handling balance function!
-992
[i]Type for TMP_205

Name: TMP_205 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
XXXX
TMP_206 = CONVERT TMP_205 to uint256
Converting TMP_205

Name: TMP_205 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
init
end
[i]Type for TMP_206

Name: TMP_206 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_decimals_1(uint256) := TMP_206(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for _decimals

Name: _decimals Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_decimals_1
_decimals_1
_decimals

Name: _decimals Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_207(bool) = _decimals_1 < 18
init
end
init
end
A: u B: 0
x
lnorm: u rnorm: 0
[i]Type for TMP_207

Name: TMP_207 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
_amount_3
_amount
_amount

Name: _amount Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_amount_3(uint256) := ϕ(['_amount_1', '_amount_2'])
Phi
init
end
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: -992
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_amount_1
_amount_1
_amount

Name: _amount Function: _normalizeDecimals
Num: -992
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_decimals_1
_decimals_1
_decimals

Name: _decimals Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_amount_2
_amount_2
_amount
_amount

Name: _amount Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_208(uint256) = 18 - _decimals_1
SUB1
init
end
init
end
A: 0 B: u
lnorm: 0 rnorm: u
SUB

Name: 18 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _decimals Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
[i]Type for TMP_208

Name: TMP_208 Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_209(uint256) = 10 ** TMP_208
init
end
init
end
[i]Type for TMP_209

Name: TMP_209 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: *
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_210(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_amount_1', 'TMP_209'] 
init
end
init
end
A: u B: *
x
lnorm: u rnorm: *
init
end
[i]Type for TMP_210

Name: TMP_210 Function: _normalizeDecimals
Num: -992
Den: -1
Address: u
Norm: *
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_amount_2(uint256) := TMP_210(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: -992
Den: -1
Address: u
Norm: *
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_amount_3
_amount_3
_amount

Name: _amount Function: _normalizeDecimals
Num: -992
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
RETURN _amount_3
init
end

Name: _token Function: None
Num: 
Den: 
Address: -992
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef

Name: _amount Function: None
Num: -992
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
_token_1
_token

Name: _token_1 Function: _normalizeDecimals
Num: 
Den: 
Address: -992
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
_amount_1
_amount

Name: _amount_1 Function: _normalizeDecimals
Num: -992
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_token_1(address) := ϕ(['_token_1', '_token_1'])
Phi
[i]Type for _token

Name: _token Function: _normalizeDecimals
Num: 
Den: 
Address: -992
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
XXXX
_amount_1(uint256) := ϕ(['TMP_188', '_amount_2'])
Phi
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: -992
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_token_1
_token_1
_token

Name: _token Function: _normalizeDecimals
Num: 
Den: 
Address: -992
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
_decimals_1
_decimals_1
_decimals
_decimals

Name: _decimals Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_204 = CONVERT _token_1 to ExtendedIERC20
Converting _token_1

Name: _token Function: _normalizeDecimals
Num: 
Den: 
Address: -992
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
init
end
UNKNOWN
[i]Type for TMP_204

Name: TMP_204 Function: _normalizeDecimals
Num: 
Den: 
Address: -992
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_205(uint8) = HIGH_LEVEL_CALL, dest:TMP_204(ExtendedIERC20), function:decimals, arguments:[]  
High Call: decimals
Running querryfc
Written func info: UNKNOWN, decimals
Handling balance function!
-992
[i]Type for TMP_205

Name: TMP_205 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
XXXX
TMP_206 = CONVERT TMP_205 to uint256
Converting TMP_205

Name: TMP_205 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
init
end
[i]Type for TMP_206

Name: TMP_206 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_decimals_1(uint256) := TMP_206(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for _decimals

Name: _decimals Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_decimals_1
_decimals_1
_decimals

Name: _decimals Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_207(bool) = _decimals_1 < 18
init
end
init
end
A: u B: 0
x
lnorm: u rnorm: 0
[i]Type for TMP_207

Name: TMP_207 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
_amount_3
_amount
_amount

Name: _amount Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_amount_3(uint256) := ϕ(['_amount_1', '_amount_2'])
Phi
init
end
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: -992
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_amount_1
_amount_1
_amount

Name: _amount Function: _normalizeDecimals
Num: -992
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_decimals_1
_decimals_1
_decimals

Name: _decimals Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_amount_2
_amount_2
_amount
_amount

Name: _amount Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_208(uint256) = 18 - _decimals_1
SUB1
init
end
init
end
A: 0 B: u
lnorm: 0 rnorm: u
SUB

Name: 18 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _decimals Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
[i]Type for TMP_208

Name: TMP_208 Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_209(uint256) = 10 ** TMP_208
init
end
init
end
[i]Type for TMP_209

Name: TMP_209 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: *
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_210(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_amount_1', 'TMP_209'] 
init
end
init
end
A: u B: *
x
lnorm: u rnorm: *
init
end
[i]Type for TMP_210

Name: TMP_210 Function: _normalizeDecimals
Num: -992
Den: -1
Address: u
Norm: *
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_amount_2(uint256) := TMP_210(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: -992
Den: -1
Address: u
Norm: *
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_amount_3
_amount_3
_amount

Name: _amount Function: _normalizeDecimals
Num: -992
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
RETURN _amount_3
init
end
[i]Type for TMP_120

Name: TMP_120 Function: deposit
Num: -992
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_amount_3(uint256) := TMP_120(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for _amount

Name: _amount Function: deposit
Num: -992
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_121(uint256) = INTERNAL_CALL, ERC20.totalSupply()()
init
end
[i]Type for TMP_121

Name: TMP_121 Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_122(bool) = TMP_121 > 0
init
end
init
end
A: u B: 0
x
lnorm: u rnorm: 0
[i]Type for TMP_122

Name: TMP_122 Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_shares_2
_shares_2
_shares
_shares

Name: _shares Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_126(bool) = _shares_2 > 0
init
end
init
end
A: u B: 0
x
lnorm: u rnorm: 0
init
end
[i]Type for TMP_126

Name: TMP_126 Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
_amount_5
_amount
_amount

Name: _amount Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_amount_5(uint256) := ϕ(['_amount_4', '_amount_3'])
Phi
init
end
[i]Type for _amount

Name: _amount Function: deposit
Num: -992
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_amount_5
_amount_5
_amount

Name: _amount Function: deposit
Num: -992
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_shares_1
_shares_1
_shares
_shares

Name: _shares Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
_shares_1(uint256) := _amount_5(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for _shares

Name: _shares Function: deposit
Num: -992
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_amount_3
_amount_3
_amount

Name: _amount Function: deposit
Num: -992
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_balance_1
_balance_1
_balance
_balance

Name: _balance Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_amount_4
_amount_4
_amount
_amount

Name: _amount Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_123(uint256) = INTERNAL_CALL, ERC20.totalSupply()()
init
end
[i]Type for TMP_123

Name: TMP_123 Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_124(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_amount_3', 'TMP_123'] 
init
end
init
end
A: u B: u
x
lnorm: u rnorm: u
init
end
[i]Type for TMP_124

Name: TMP_124 Function: deposit
Num: -992
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_125(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_124', '_balance_1'] 
init
end
init
end
A: u B: u
x
lnorm: u rnorm: u
init
end
[i]Type for TMP_125

Name: TMP_125 Function: deposit
Num: -992
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_amount_4(uint256) := TMP_125(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for _amount

Name: _amount Function: deposit
Num: -992
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_shares_2
_shares_2
_shares
_shares

Name: _shares Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
INTERNAL_CALL, ERC20._mint(address,uint256)(msg.sender,_shares_2)
init
init
end
Propogating parameters and globals to SSA variables...
totalDepositCap_13
totalDepositCap_13
totalDepositCap

Name: totalDepositCap Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10000000000000000000000000
Fields: 
Finance Type: undef
End popogation
TMP_128(uint256) = INTERNAL_CALL, ERC20.totalSupply()()
init
end
[i]Type for TMP_128

Name: TMP_128 Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_129(bool) = TMP_128 <= totalDepositCap_13
init
end
init
end
A: u B: u
x
lnorm: u rnorm: u
[i]Type for TMP_129

Name: TMP_129 Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_130(None) = SOLIDITY_CALL require(bool,string)(TMP_129,>totalDepositCap)
[i]Type for TMP_130

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_shares_2
_shares_2
_shares
_shares

Name: _shares Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
[i]Type for TMP_137

Name: TMP_137 Function: depositMultiple
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_138(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['_shares_1', 'TMP_137'] 

Name: _shares Function: depositMultiple
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_137 Function: depositMultiple
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
init
end
A: u B: u
x
lnorm: u rnorm: u
init
end
[i]Type for TMP_138

Name: TMP_138 Function: depositMultiple
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_shares_2(uint256) := TMP_138(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for _shares

Name: _shares Function: depositMultiple
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
i_1
i_1
i
i

Name: i Function: depositMultiple
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_2
i_2
i
i

Name: i Function: depositMultiple
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_139(uint8) := i_1(uint8)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for TMP_139

Name: TMP_139 Function: depositMultiple
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
i_2(uint8) = i_1 + 1

Name: i Function: depositMultiple
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: 1 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
init
end
A: u B: 0
lnorm: u rnorm: 0
init
end
[i]Type for i

Name: i Function: depositMultiple
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_shares_1
_shares_1
_shares
_shares

Name: _shares Function: depositMultiple
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
RETURN _shares_1
init
end



withdraw
Finding type for _shares(uint256 ... )
Finding type for _output(address ... )
prev address? u
Head Addr: -991
    Norm: 6
    Set: {-991}
    Fin: NULL
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: []
    den: []
    norm: u
    link: _output
    fields: []
    fintype: -1


_shares_1(uint256) := ϕ(['TMP_170'])
_output_1(address) := ϕ(['_output_1'])
MAX_4(uint256) := ϕ(['MAX_0', 'MAX_9', 'MAX_11', 'MAX_13', 'MAX_3'])
manager_13(IManager) := ϕ(['manager_19', 'manager_28', 'manager_30', 'manager_0', 'manager_37', 'manager_35', 'manager_24', 'manager_6', 'manager_26', 'manager_12', 'manager_39', 'manager_1', 'manager_33'])
MODIFIER_CALL, Vault.checkToken(address)(_output_1)
manager_14(IManager) := ϕ(['manager_33'])
TMP_140(uint256) = INTERNAL_CALL, Vault.balance()()
manager_15(IManager) := ϕ(['manager_24'])
TMP_141(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['TMP_140', '_shares_1'] 
TMP_142(uint256) = INTERNAL_CALL, ERC20.totalSupply()()
TMP_143(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_141', 'TMP_142'] 
_amount_1(uint256) := TMP_143(uint256)
INTERNAL_CALL, ERC20._burn(address,uint256)(msg.sender,_shares_1)
TMP_145(uint256) = HIGH_LEVEL_CALL, dest:manager_17(IManager), function:withdrawalProtectionFee, arguments:[]  
MAX_9(uint256) := ϕ(['MAX_9', 'MAX_11', 'MAX_8', 'MAX_13', 'MAX_3'])
manager_18(IManager) := ϕ(['manager_19', 'manager_28', 'manager_30', 'manager_17', 'manager_37', 'manager_35', 'manager_24', 'manager_6', 'manager_26', 'manager_12', 'manager_39', 'manager_1', 'manager_33'])
_withdrawalProtectionFee_1(uint256) := TMP_145(uint256)
TMP_146(bool) = _withdrawalProtectionFee_1 > 0
CONDITION TMP_146
_amount_3(uint256) := ϕ(['_amount_2', '_amount_1'])
TMP_150 = CONVERT _output_1 to IERC20
TMP_151 = CONVERT this to address
TMP_152(uint256) = HIGH_LEVEL_CALL, dest:TMP_150(IERC20), function:balanceOf, arguments:['TMP_151']  
manager_19(IManager) := ϕ(['manager_19', 'manager_28', 'manager_30', 'manager_18', 'manager_37', 'manager_35', 'manager_24', 'manager_6', 'manager_26', 'manager_12', 'manager_39', 'manager_1', 'manager_33'])
_balance_1(uint256) := TMP_152(uint256)
TMP_153(bool) = _balance_1 < _amount_3
CONDITION TMP_153
TMP_154 = CONVERT this to address
TMP_155(address) = HIGH_LEVEL_CALL, dest:manager_19(IManager), function:controllers, arguments:['TMP_154']  
manager_20(IManager) := ϕ(['manager_19', 'manager_28', 'manager_30', 'manager_37', 'manager_35', 'manager_24', 'manager_6', 'manager_26', 'manager_12', 'manager_39', 'manager_1', 'manager_33'])
TMP_156 = CONVERT TMP_155 to IController
_controller_1(IController) := TMP_156(IController)
TMP_147(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_amount_1', '_withdrawalProtectionFee_1'] 
TMP_148(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_147', 'MAX_9'] 
_withdrawalProtection_1(uint256) := TMP_148(uint256)
TMP_157(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['_amount_3', '_balance_1'] 
_toWithdraw_1(uint256) := TMP_157(uint256)
TMP_166 = CONVERT _output_1 to IERC20
LIBRARY_CALL, dest:SafeERC20, function:SafeERC20.safeTransfer(IERC20,address,uint256), arguments:['TMP_166', 'msg.sender', '_amount_5'] 
TMP_149(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['_amount_1', '_withdrawalProtection_1'] 
_amount_2(uint256) := TMP_149(uint256)
TMP_158(uint256) = HIGH_LEVEL_CALL, dest:_controller_1(IController), function:strategies, arguments:[]  
TMP_159(bool) = TMP_158 > 0
CONDITION TMP_159
HIGH_LEVEL_CALL, dest:_controller_1(IController), function:withdraw, arguments:['_output_1', '_toWithdraw_1']  
Emit Withdraw(msg.sender,_amount_5)
TMP_161 = CONVERT _output_1 to IERC20
TMP_162 = CONVERT this to address
TMP_163(uint256) = HIGH_LEVEL_CALL, dest:TMP_161(IERC20), function:balanceOf, arguments:['TMP_162']  
_after_1(uint256) := TMP_163(uint256)
TMP_164(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['_after_1', '_balance_1'] 
_diff_1(uint256) := TMP_164(uint256)
TMP_165(bool) = _diff_1 < _toWithdraw_1
CONDITION TMP_165
_amount_4(uint256) := _after_1(uint256)
_amount_5(uint256) := ϕ(['_amount_4', '_amount_1'])


Propogating parameters and globals to SSA variables...
End popogation
_shares_1
_shares
_shares

Name: _shares_1 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_output_1
_output

Name: _output_1 Function: None
Num: 
Den: 
Address: -991
Norm: u
LF: _output
Value: u
Fields: 
Finance Type: undef
MAX_4
MAX
MAX

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
manager_13
manager
manager

Name: None Function: None
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
_shares_1(uint256) := ϕ(['TMP_170'])
Phi
[i]Type for _shares

Name: _shares Function: withdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_output_1(address) := ϕ(['_output_1'])
Phi
[i]Type for _output

Name: _output Function: withdraw
Num: 
Den: 
Address: -991
Norm: u
LF: _output
Value: u
Fields: 
Finance Type: undef
XXXX
MAX_4(uint256) := ϕ(['MAX_0', 'MAX_9', 'MAX_11', 'MAX_13', 'MAX_3'])
Phi
[i]Type for MAX

Name: MAX Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
manager_13(IManager) := ϕ(['manager_19', 'manager_28', 'manager_30', 'manager_0', 'manager_37', 'manager_35', 'manager_24', 'manager_6', 'manager_26', 'manager_12', 'manager_39', 'manager_1', 'manager_33'])
Phi
[i]Type for manager

Name: manager Function: withdraw
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_output_1
_output_1
_output

Name: _output Function: withdraw
Num: 
Den: 
Address: -991
Norm: u
LF: _output
Value: u
Fields: 
Finance Type: undef
End popogation
manager_14
manager
manager

Name: None Function: None
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
MODIFIER_CALL, Vault.checkToken(address)(_output_1)
init
end
[[], [], 'u', '_output', [], -1, -991, 'u']

Name: _token Function: None
Num: 
Den: 
Address: -991
Norm: u
LF: _output
Value: u
Fields: 
Finance Type: undef

Name: _token Function: None
Num: 
Den: 
Address: -991
Norm: u
LF: _output
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
_token_1
_token

Name: _token_1 Function: checkToken
Num: 
Den: 
Address: -991
Norm: u
LF: _output
Value: u
Fields: 
Finance Type: undef
manager_31
manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
_token_1(address) := ϕ(['_token_1', '_output_1', '_token_1'])
Phi
[i]Type for _token

Name: _token Function: checkToken
Num: 
Den: 
Address: -991
Norm: u
LF: _output
Value: u
Fields: 
Finance Type: undef
XXXX
manager_31(IManager) := ϕ(['manager_19', 'manager_28', 'manager_30', 'manager_0', 'manager_37', 'manager_35', 'manager_24', 'manager_6', 'manager_26', 'manager_12', 'manager_39', 'manager_1', 'manager_33'])
Phi
[i]Type for manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
manager_31
manager_31
manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
manager_32
manager_32
manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
_token_1
_token_1
_token

Name: _token Function: checkToken
Num: 
Den: 
Address: -991
Norm: u
LF: _output
Value: u
Fields: 
Finance Type: undef
End popogation
manager_32
manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
manager_33
manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
TMP_214(bool) = HIGH_LEVEL_CALL, dest:manager_31(IManager), function:allowedTokens, arguments:['_token_1']  
High Call: allowedTokens
Running querryfc
[i]Type for TMP_214

Name: TMP_214 Function: checkToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
manager_32(IManager) := ϕ(['manager_19', 'manager_28', 'manager_30', 'manager_31', 'manager_37', 'manager_35', 'manager_24', 'manager_6', 'manager_26', 'manager_12', 'manager_39', 'manager_1', 'manager_33'])
Phi
[i]Type for manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_215(address) = HIGH_LEVEL_CALL, dest:manager_32(IManager), function:vaults, arguments:['_token_1']  
High Call: vaults
Running querryfc
Written func info: Manager, vaults
Retvar: ('c', [-1], [-1], 'u', 'u', 4)
([-1], [-1], 'u', 'u', 4, -1)
[i]Type for TMP_215

Name: TMP_215 Function: checkToken
Num: -1
Den: -1
Address: 4
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
manager_33(IManager) := ϕ(['manager_19', 'manager_28', 'manager_30', 'manager_32', 'manager_37', 'manager_35', 'manager_24', 'manager_6', 'manager_26', 'manager_12', 'manager_39', 'manager_1', 'manager_33'])
Phi
[i]Type for manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_216 = CONVERT this to address
Converting this
6
[i]Type for TMP_216

Name: TMP_216 Function: checkToken
Num: 
Den: 
Address: 6
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_217(bool) = TMP_215 == TMP_216
[i]Type for TMP_217

Name: TMP_217 Function: checkToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_218(bool) = TMP_214 && TMP_217
[i]Type for TMP_218

Name: TMP_218 Function: checkToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_219(None) = SOLIDITY_CALL require(bool,string)(TMP_218,!_token)
[i]Type for TMP_219

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation

Name: _token Function: None
Num: 
Den: 
Address: -991
Norm: u
LF: _output
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
_token_1
_token

Name: _token_1 Function: checkToken
Num: 
Den: 
Address: -991
Norm: u
LF: _output
Value: u
Fields: 
Finance Type: undef
manager_31
manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
_token_1(address) := ϕ(['_token_1', '_output_1', '_token_1'])
Phi
[i]Type for _token

Name: _token Function: checkToken
Num: 
Den: 
Address: -991
Norm: u
LF: _output
Value: u
Fields: 
Finance Type: undef
XXXX
manager_31(IManager) := ϕ(['manager_19', 'manager_28', 'manager_30', 'manager_0', 'manager_37', 'manager_35', 'manager_24', 'manager_6', 'manager_26', 'manager_12', 'manager_39', 'manager_1', 'manager_33'])
Phi
[i]Type for manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
manager_31
manager_31
manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
manager_32
manager_32
manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
_token_1
_token_1
_token

Name: _token Function: checkToken
Num: 
Den: 
Address: -991
Norm: u
LF: _output
Value: u
Fields: 
Finance Type: undef
End popogation
manager_32
manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
manager_33
manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
TMP_214(bool) = HIGH_LEVEL_CALL, dest:manager_31(IManager), function:allowedTokens, arguments:['_token_1']  
High Call: allowedTokens
Running querryfc
[i]Type for TMP_214

Name: TMP_214 Function: checkToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
manager_32(IManager) := ϕ(['manager_19', 'manager_28', 'manager_30', 'manager_31', 'manager_37', 'manager_35', 'manager_24', 'manager_6', 'manager_26', 'manager_12', 'manager_39', 'manager_1', 'manager_33'])
Phi
[i]Type for manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_215(address) = HIGH_LEVEL_CALL, dest:manager_32(IManager), function:vaults, arguments:['_token_1']  
High Call: vaults
Running querryfc
Written func info: Manager, vaults
Retvar: ('c', [-1], [-1], 'u', 'u', 4)
([-1], [-1], 'u', 'u', 4, -1)
[i]Type for TMP_215

Name: TMP_215 Function: checkToken
Num: -1
Den: -1
Address: 4
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
manager_33(IManager) := ϕ(['manager_19', 'manager_28', 'manager_30', 'manager_32', 'manager_37', 'manager_35', 'manager_24', 'manager_6', 'manager_26', 'manager_12', 'manager_39', 'manager_1', 'manager_33'])
Phi
[i]Type for manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_216 = CONVERT this to address
Converting this
6
[i]Type for TMP_216

Name: TMP_216 Function: checkToken
Num: 
Den: 
Address: 6
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_217(bool) = TMP_215 == TMP_216
[i]Type for TMP_217

Name: TMP_217 Function: checkToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_218(bool) = TMP_214 && TMP_217
[i]Type for TMP_218

Name: TMP_218 Function: checkToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_219(None) = SOLIDITY_CALL require(bool,string)(TMP_218,!_token)
[i]Type for TMP_219

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
manager_14(IManager) := ϕ(['manager_33'])
Phi
[i]Type for manager

Name: manager Function: withdraw
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_shares_1
_shares_1
_shares
_shares

Name: _shares_1 Function: withdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_amount_1
_amount_1
_amount
_amount

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
manager_15
manager
manager

Name: None Function: None
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
TMP_140(uint256) = INTERNAL_CALL, Vault.balance()()
init
end
[i]Type for TMP_140

Name: TMP_140 Function: withdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
manager_15(IManager) := ϕ(['manager_24'])
Phi
[i]Type for manager

Name: manager Function: withdraw
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_141(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['TMP_140', '_shares_1'] 
init
end
init
end
A: u B: u
x
lnorm: u rnorm: u
init
end
[i]Type for TMP_141

Name: TMP_141 Function: withdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_142(uint256) = INTERNAL_CALL, ERC20.totalSupply()()
init
end
[i]Type for TMP_142

Name: TMP_142 Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_143(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_141', 'TMP_142'] 
init
end
init
end
A: u B: u
x
lnorm: u rnorm: u
init
end
[i]Type for TMP_143

Name: TMP_143 Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_amount_1(uint256) := TMP_143(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for _amount

Name: _amount Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_shares_1
_shares_1
_shares
_shares

Name: _shares_1 Function: withdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
INTERNAL_CALL, ERC20._burn(address,uint256)(msg.sender,_shares_1)
init
init
end
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: account Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
[[], [], 'u', None, [], -1, 'u', 'u']

Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: account Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef

Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
account_1
account

Name: account_1 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
amount_1
amount
amount

Name: amount_1 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_balances_9
_balances
_balances

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_totalSupply_5
_totalSupply
_totalSupply

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
account_1(address) := ϕ(['msg.sender'])
Phi
[i]Type for account

Name: account Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['_shares_1'])
Phi
[i]Type for amount

Name: amount Function: _burn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_balances_9(mapping(address => uint256)) := ϕ(['_balances_5', '_balances_11', '_balances_0', '_balances_1', '_balances_8'])
Phi
[i]Type for _balances

Name: _balances Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_totalSupply_5(uint256) := ϕ(['_totalSupply_0', '_totalSupply_4', '_totalSupply_7'])
Phi
[i]Type for _totalSupply

Name: _totalSupply Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
account_1
account_1
account

Name: account Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_48 = CONVERT 0 to address
Converting 0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
[i]Type for TMP_48

Name: TMP_48 Function: _burn
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_49(bool) = account_1 != TMP_48
[i]Type for TMP_49

Name: TMP_49 Function: _burn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_50(None) = SOLIDITY_CALL require(bool,string)(TMP_49,ERC20: burn from the zero address)
[i]Type for TMP_50

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
amount_1
amount_1
amount
amount

Name: amount_1 Function: _burn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
account_1
account_1
account

Name: account Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_51 = CONVERT 0 to address
Converting 0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
[i]Type for TMP_51

Name: TMP_51 Function: _burn
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
INTERNAL_CALL, ERC20._beforeTokenTransfer(address,address,uint256)(account_1,TMP_51,amount_1)
init
end
init
end
init
end
[[-1], [-1], 'u', 'account', [], -1, 'u', 'u']

Name: from Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 0, None, [], -1, 'u', 'u']

Name: to Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: account
Value: u
Fields: 
Finance Type: undef
[[], [], 'u', None, [], -1, 'u', 'u']

Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: from Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef

Name: to Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: account
Value: u
Fields: 
Finance Type: undef

Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
from_1
from

Name: from_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
to_1
to

Name: to_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
amount_1
amount
amount

Name: amount_1 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
from_1(address) := ϕ(['account_1', 'TMP_42', 'sender_1'])
Phi
[i]Type for from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
XXXX
to_1(address) := ϕ(['TMP_51', 'account_1', 'recipient_1'])
Phi
[i]Type for to

Name: to Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
Phi
[i]Type for amount

Name: amount Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX

Name: from Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef

Name: to Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: account
Value: u
Fields: 
Finance Type: undef

Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
from_1
from

Name: from_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
to_1
to

Name: to_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
amount_1
amount
amount

Name: amount_1 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
from_1(address) := ϕ(['account_1', 'TMP_42', 'sender_1'])
Phi
[i]Type for from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
XXXX
to_1(address) := ϕ(['TMP_51', 'account_1', 'recipient_1'])
Phi
[i]Type for to

Name: to Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
Phi
[i]Type for amount

Name: amount Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
amount_1
amount_1
amount
amount

Name: amount_1 Function: _burn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_balances_10
_balances_10
_balances
_balances

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
account_1
account_1
account

Name: account Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
_balances_11
_balances_11
_balances
_balances

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
_balances_11
_balances

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_24(uint256) -> _balances_10[account_1]
INDEX
[i]Type for REF_24

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_25(uint256) -> _balances_10[account_1]
INDEX
[i]Type for REF_25

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_53(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256,string), arguments:['REF_25', 'amount_1', 'ERC20: burn amount exceeds balance'] 
SUB1
init
end
init
end
A: u B: u
x
lnorm: u rnorm: u
SUB

Name: REF_25 Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _burn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
[i]Type for TMP_53

Name: TMP_53 Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_balances_11(mapping(address => uint256)) := ϕ(['_balances_10'])
Phi
[i]Type for _balances

Name: _balances Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_24 (->_balances_11) := TMP_53(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for REF_24

Name: REF_24 Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
Propogating parameters and globals to SSA variables...
_totalSupply_6
_totalSupply_6
_totalSupply
_totalSupply

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
amount_1
amount_1
amount
amount

Name: amount_1 Function: _burn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_totalSupply_7
_totalSupply_7
_totalSupply
_totalSupply

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_54(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['_totalSupply_6', 'amount_1'] 
SUB1
init
end
init
end
A: u B: u
x
lnorm: u rnorm: u
SUB

Name: _totalSupply Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _burn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
[i]Type for TMP_54

Name: TMP_54 Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_totalSupply_7(uint256) := TMP_54(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for _totalSupply

Name: _totalSupply Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
amount_1
amount_1
amount
amount

Name: amount_1 Function: _burn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
account_1
account_1
account

Name: account Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_55 = CONVERT 0 to address
Converting 0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
[i]Type for TMP_55

Name: TMP_55 Function: _burn
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX

Name: account Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef

Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
account_1
account

Name: account_1 Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
amount_1
amount
amount

Name: amount_1 Function: _burn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_balances_9
_balances

Name: _balances Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_totalSupply_5
_totalSupply

Name: _totalSupply Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
account_1(address) := ϕ(['msg.sender'])
Phi
[i]Type for account

Name: account Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['_shares_1'])
Phi
[i]Type for amount

Name: amount Function: _burn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_balances_9(mapping(address => uint256)) := ϕ(['_balances_5', '_balances_11', '_balances_0', '_balances_1', '_balances_8'])
Phi
[i]Type for _balances

Name: _balances Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_totalSupply_5(uint256) := ϕ(['_totalSupply_0', '_totalSupply_4', '_totalSupply_7'])
Phi
[i]Type for _totalSupply

Name: _totalSupply Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
account_1
account_1
account

Name: account Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_48 = CONVERT 0 to address
Converting 0

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
[i]Type for TMP_48

Name: TMP_48 Function: _burn
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_49(bool) = account_1 != TMP_48
[i]Type for TMP_49

Name: TMP_49 Function: _burn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_50(None) = SOLIDITY_CALL require(bool,string)(TMP_49,ERC20: burn from the zero address)
[i]Type for TMP_50

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
amount_1
amount_1
amount
amount

Name: amount_1 Function: _burn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
account_1
account_1
account

Name: account Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_51 = CONVERT 0 to address
Converting 0

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
[i]Type for TMP_51

Name: TMP_51 Function: _burn
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
INTERNAL_CALL, ERC20._beforeTokenTransfer(address,address,uint256)(account_1,TMP_51,amount_1)
init
end
init
end
init
end
[[-1], [-1], 'u', 'account', [], -1, 'u', 'u']

Name: from Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 0, None, [], -1, 'u', 'u']

Name: to Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: account
Value: u
Fields: 
Finance Type: undef
[[], [], 'u', None, [], -1, 'u', 'u']

Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: from Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef

Name: to Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: account
Value: u
Fields: 
Finance Type: undef

Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
from_1
from

Name: from_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
to_1
to

Name: to_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
amount_1
amount
amount

Name: amount_1 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
from_1(address) := ϕ(['account_1', 'TMP_42', 'sender_1'])
Phi
[i]Type for from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
XXXX
to_1(address) := ϕ(['TMP_51', 'account_1', 'recipient_1'])
Phi
[i]Type for to

Name: to Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
Phi
[i]Type for amount

Name: amount Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX

Name: from Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef

Name: to Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: account
Value: u
Fields: 
Finance Type: undef

Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
from_1
from

Name: from_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
to_1
to

Name: to_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
amount_1
amount
amount

Name: amount_1 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
from_1(address) := ϕ(['account_1', 'TMP_42', 'sender_1'])
Phi
[i]Type for from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
XXXX
to_1(address) := ϕ(['TMP_51', 'account_1', 'recipient_1'])
Phi
[i]Type for to

Name: to Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
Phi
[i]Type for amount

Name: amount Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
amount_1
amount_1
amount
amount

Name: amount_1 Function: _burn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_balances_10
_balances_10
_balances

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
account_1
account_1
account

Name: account Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
_balances_11
_balances_11
_balances

Name: _balances Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
_balances_11
_balances

Name: _balances Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_24(uint256) -> _balances_10[account_1]
INDEX
[i]Type for REF_24

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_25(uint256) -> _balances_10[account_1]
INDEX
[i]Type for REF_25

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_53(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256,string), arguments:['REF_25', 'amount_1', 'ERC20: burn amount exceeds balance'] 
SUB1
init
end
init
end
A: u B: u
x
lnorm: u rnorm: u
SUB

Name: REF_25 Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _burn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
[i]Type for TMP_53

Name: TMP_53 Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_balances_11(mapping(address => uint256)) := ϕ(['_balances_10'])
Phi
[i]Type for _balances

Name: _balances Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_24 (->_balances_11) := TMP_53(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for REF_24

Name: REF_24 Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
Propogating parameters and globals to SSA variables...
_totalSupply_6
_totalSupply_6
_totalSupply

Name: _totalSupply Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
amount_1
amount_1
amount
amount

Name: amount_1 Function: _burn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_totalSupply_7
_totalSupply_7
_totalSupply

Name: _totalSupply Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_54(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['_totalSupply_6', 'amount_1'] 
SUB1
init
end
init
end
A: u B: u
x
lnorm: u rnorm: u
SUB

Name: _totalSupply Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _burn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
[i]Type for TMP_54

Name: TMP_54 Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_totalSupply_7(uint256) := TMP_54(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for _totalSupply

Name: _totalSupply Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
amount_1
amount_1
amount
amount

Name: amount_1 Function: _burn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
account_1
account_1
account

Name: account Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_55 = CONVERT 0 to address
Converting 0

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
[i]Type for TMP_55

Name: TMP_55 Function: _burn
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
manager_17
manager_17
manager
manager

Name: None Function: None
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
_withdrawalProtectionFee_1
_withdrawalProtectionFee_1
_withdrawalProtectionFee
_withdrawalProtectionFee

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
MAX_9
MAX
MAX

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
manager_18
manager
manager

Name: None Function: None
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
TMP_145(uint256) = HIGH_LEVEL_CALL, dest:manager_17(IManager), function:withdrawalProtectionFee, arguments:[]  
High Call: withdrawalProtectionFee
Running querryfc
Written func info: Manager, withdrawalProtectionFee
Handling balance function!
-999
Finding type for hlc_0(uint256 ... )
[i]Type for TMP_145

Name: TMP_145 Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
MAX_9(uint256) := ϕ(['MAX_9', 'MAX_11', 'MAX_8', 'MAX_13', 'MAX_3'])
Phi
[i]Type for MAX

Name: MAX Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
manager_18(IManager) := ϕ(['manager_19', 'manager_28', 'manager_30', 'manager_17', 'manager_37', 'manager_35', 'manager_24', 'manager_6', 'manager_26', 'manager_12', 'manager_39', 'manager_1', 'manager_33'])
Phi
[i]Type for manager

Name: manager Function: withdraw
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
XXXX
_withdrawalProtectionFee_1(uint256) := TMP_145(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for _withdrawalProtectionFee

Name: _withdrawalProtectionFee Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_withdrawalProtectionFee_1
_withdrawalProtectionFee_1
_withdrawalProtectionFee

Name: _withdrawalProtectionFee Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_146(bool) = _withdrawalProtectionFee_1 > 0
init
end
init
end
A: u B: 0
x
lnorm: u rnorm: 0
[i]Type for TMP_146

Name: TMP_146 Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
_amount_3
_amount
_amount

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_amount_3(uint256) := ϕ(['_amount_2', '_amount_1'])
Phi
[i]Type for _amount

Name: _amount Function: withdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_output_1
_output_1
_output

Name: _output Function: withdraw
Num: 
Den: 
Address: -991
Norm: u
LF: _output
Value: u
Fields: 
Finance Type: undef
_balance_1
_balance_1
_balance
_balance

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
manager_19
manager
manager

Name: None Function: None
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
TMP_150 = CONVERT _output_1 to IERC20
Converting _output_1

Name: _output Function: withdraw
Num: 
Den: 
Address: -991
Norm: u
LF: _output
Value: u
Fields: 
Finance Type: undef
init
end
ERC20
[i]Type for TMP_150

Name: TMP_150 Function: withdraw
Num: 
Den: 
Address: -991
Norm: u
LF: ERC20
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_151 = CONVERT this to address
Converting this
6
[i]Type for TMP_151

Name: TMP_151 Function: withdraw
Num: -1
Den: -1
Address: 6
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_152(uint256) = HIGH_LEVEL_CALL, dest:TMP_150(IERC20), function:balanceOf, arguments:['TMP_151']  
High Call: balanceOf
Running querryfc
Written func info: ERC20, balanceOf
Handling balance function!
-991
[i]Type for TMP_152

Name: TMP_152 Function: withdraw
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
manager_19(IManager) := ϕ(['manager_19', 'manager_28', 'manager_30', 'manager_18', 'manager_37', 'manager_35', 'manager_24', 'manager_6', 'manager_26', 'manager_12', 'manager_39', 'manager_1', 'manager_33'])
Phi
[i]Type for manager

Name: manager Function: withdraw
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
XXXX
_balance_1(uint256) := TMP_152(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for _balance

Name: _balance Function: withdraw
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_balance_1
_balance_1
_balance

Name: _balance Function: withdraw
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
_amount_3
_amount_3
_amount
_amount

Name: _amount Function: withdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_153(bool) = _balance_1 < _amount_3
init
end
init
end
A: 6 B: u
x
lnorm: 6 rnorm: u
init
end
[i]Type for TMP_153

Name: TMP_153 Function: withdraw
Num: -991
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
manager_19
manager_19
manager

Name: manager Function: withdraw
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
_controller_1
_controller_1
_controller
_controller

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
manager_20
manager
manager

Name: None Function: None
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
TMP_154 = CONVERT this to address
Converting this
6
[i]Type for TMP_154

Name: TMP_154 Function: withdraw
Num: -1
Den: -1
Address: 6
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_155(address) = HIGH_LEVEL_CALL, dest:manager_19(IManager), function:controllers, arguments:['TMP_154']  
High Call: controllers
Running querryfc
Written func info: Manager, controllers
Retvar: ('c', [-1], [-1], 'u', 'u', 2)
([-1], [-1], 'u', 'u', 2, -1)
[i]Type for TMP_155

Name: TMP_155 Function: withdraw
Num: -1
Den: -1
Address: 2
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
manager_20(IManager) := ϕ(['manager_19', 'manager_28', 'manager_30', 'manager_37', 'manager_35', 'manager_24', 'manager_6', 'manager_26', 'manager_12', 'manager_39', 'manager_1', 'manager_33'])
Phi
[i]Type for manager

Name: manager Function: withdraw
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_156 = CONVERT TMP_155 to IController
Converting TMP_155

Name: TMP_155 Function: withdraw
Num: -1
Den: -1
Address: 2
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
Controller
[i]Type for TMP_156

Name: TMP_156 Function: withdraw
Num: -1
Den: -1
Address: 2
Norm: u
LF: Controller
Value: u
Fields: 
Finance Type: undef
XXXX
_controller_1(IController) := TMP_156(IController)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for _controller

Name: _controller Function: withdraw
Num: -1
Den: -1
Address: 2
Norm: u
LF: Controller
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
MAX_9
MAX_9
MAX

Name: MAX Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_amount_1
_amount_1
_amount

Name: _amount Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_withdrawalProtectionFee_1
_withdrawalProtectionFee_1
_withdrawalProtectionFee

Name: _withdrawalProtectionFee Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_withdrawalProtection_1
_withdrawalProtection_1
_withdrawalProtection
_withdrawalProtection

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_147(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_amount_1', '_withdrawalProtectionFee_1'] 
init
end
init
end
A: u B: u
x
lnorm: u rnorm: u
init
end
[i]Type for TMP_147

Name: TMP_147 Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_148(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_147', 'MAX_9'] 
init
end
init
end
A: u B: u
x
lnorm: u rnorm: u
init
end
[i]Type for TMP_148

Name: TMP_148 Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_withdrawalProtection_1(uint256) := TMP_148(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for _withdrawalProtection

Name: _withdrawalProtection Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_balance_1
_balance_1
_balance

Name: _balance Function: withdraw
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
_amount_3
_amount_3
_amount
_amount

Name: _amount Function: withdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_toWithdraw_1
_toWithdraw_1
_toWithdraw
_toWithdraw

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_157(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['_amount_3', '_balance_1'] 
SUB1
init
end
init
end
A: u B: 6
x
lnorm: u rnorm: 6
SUB

Name: _amount Function: withdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _balance Function: withdraw
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
[i]Type for TMP_157

Name: TMP_157 Function: withdraw
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_toWithdraw_1(uint256) := TMP_157(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for _toWithdraw

Name: _toWithdraw Function: withdraw
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_amount_5
_amount_5
_amount
_amount

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_output_1
_output_1
_output

Name: _output Function: withdraw
Num: 
Den: 
Address: -991
Norm: u
LF: _output
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_166 = CONVERT _output_1 to IERC20
Converting _output_1

Name: _output Function: withdraw
Num: 
Den: 
Address: -991
Norm: u
LF: _output
Value: u
Fields: 
Finance Type: undef
init
end
ERC20
[i]Type for TMP_166

Name: TMP_166 Function: withdraw
Num: 
Den: 
Address: -991
Norm: u
LF: ERC20
Value: u
Fields: 
Finance Type: undef
XXXX
LIBRARY_CALL, dest:SafeERC20, function:SafeERC20.safeTransfer(IERC20,address,uint256), arguments:['TMP_166', 'msg.sender', '_amount_5'] 
Propogating parameters and globals to SSA variables...
_withdrawalProtection_1
_withdrawalProtection_1
_withdrawalProtection

Name: _withdrawalProtection Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_amount_1
_amount_1
_amount

Name: _amount Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_amount_2
_amount_2
_amount
_amount

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_149(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['_amount_1', '_withdrawalProtection_1'] 
SUB1
init
end
init
end
A: u B: u
x
lnorm: u rnorm: u
SUB

Name: _amount Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _withdrawalProtection Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
[i]Type for TMP_149

Name: TMP_149 Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_amount_2(uint256) := TMP_149(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for _amount

Name: _amount Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_controller_1
_controller_1
_controller

Name: _controller Function: withdraw
Num: -1
Den: -1
Address: 2
Norm: u
LF: Controller
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_158(uint256) = HIGH_LEVEL_CALL, dest:_controller_1(IController), function:strategies, arguments:[]  
High Call: strategies
Running querryfc
Written func info: Controller, strategies
Handling balance function!
2
Finding type for hlc_1(uint256 ... )
[i]Type for TMP_158

Name: TMP_158 Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_159(bool) = TMP_158 > 0
init
end
init
end
A: u B: 0
x
lnorm: u rnorm: 0
[i]Type for TMP_159

Name: TMP_159 Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_controller_1
_controller_1
_controller

Name: _controller Function: withdraw
Num: -1
Den: -1
Address: 2
Norm: u
LF: Controller
Value: u
Fields: 
Finance Type: undef
_output_1
_output_1
_output

Name: _output Function: withdraw
Num: 
Den: 
Address: -991
Norm: u
LF: _output
Value: u
Fields: 
Finance Type: undef
_toWithdraw_1
_toWithdraw_1
_toWithdraw

Name: _toWithdraw Function: withdraw
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
HIGH_LEVEL_CALL, dest:_controller_1(IController), function:withdraw, arguments:['_output_1', '_toWithdraw_1']  
High Call: withdraw
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
_amount_5
_amount_5
_amount
_amount

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
Propogating parameters and globals to SSA variables...
_output_1
_output_1
_output

Name: _output Function: withdraw
Num: 
Den: 
Address: -991
Norm: u
LF: _output
Value: u
Fields: 
Finance Type: undef
_after_1
_after_1
_after
_after

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_161 = CONVERT _output_1 to IERC20
Converting _output_1

Name: _output Function: withdraw
Num: 
Den: 
Address: -991
Norm: u
LF: _output
Value: u
Fields: 
Finance Type: undef
init
end
ERC20
[i]Type for TMP_161

Name: TMP_161 Function: withdraw
Num: 
Den: 
Address: -991
Norm: u
LF: ERC20
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_162 = CONVERT this to address
Converting this
6
[i]Type for TMP_162

Name: TMP_162 Function: withdraw
Num: -1
Den: -1
Address: 6
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_163(uint256) = HIGH_LEVEL_CALL, dest:TMP_161(IERC20), function:balanceOf, arguments:['TMP_162']  
High Call: balanceOf
Running querryfc
Written func info: ERC20, balanceOf
Handling balance function!
-991
[i]Type for TMP_163

Name: TMP_163 Function: withdraw
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_after_1(uint256) := TMP_163(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for _after

Name: _after Function: withdraw
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_balance_1
_balance_1
_balance

Name: _balance Function: withdraw
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
_after_1
_after_1
_after

Name: _after Function: withdraw
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
_diff_1
_diff_1
_diff
_diff

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_164(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['_after_1', '_balance_1'] 
SUB1
init
end
init
end
A: 6 B: 6
x
y
A: 6 B: 6
<class 'int'>
<class 'int'>
lnorm: 6 rnorm: 6
SUB

Name: _after Function: withdraw
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _balance Function: withdraw
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
[i]Type for TMP_164

Name: TMP_164 Function: withdraw
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_diff_1(uint256) := TMP_164(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for _diff

Name: _diff Function: withdraw
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_diff_1
_diff_1
_diff

Name: _diff Function: withdraw
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
_toWithdraw_1
_toWithdraw_1
_toWithdraw

Name: _toWithdraw Function: withdraw
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_165(bool) = _diff_1 < _toWithdraw_1
init
end
init
end
A: 6 B: 6
x
y
A: 6 B: 6
<class 'int'>
<class 'int'>
lnorm: 6 rnorm: 6
[i]Type for TMP_165

Name: TMP_165 Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_after_1
_after_1
_after

Name: _after Function: withdraw
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
_amount_4
_amount_4
_amount
_amount

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
_amount_4(uint256) := _after_1(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for _amount

Name: _amount Function: withdraw
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
_amount_5
_amount
_amount

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_amount_5(uint256) := ϕ(['_amount_4', '_amount_1'])
Phi
init
end
[i]Type for _amount

Name: _amount Function: withdraw
Num: -991
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX


_shares_1(uint256) := ϕ(['TMP_170'])
_output_1(address) := ϕ(['_output_1'])
MAX_4(uint256) := ϕ(['MAX_0', 'MAX_9', 'MAX_11', 'MAX_13', 'MAX_3'])
manager_13(IManager) := ϕ(['manager_19', 'manager_28', 'manager_30', 'manager_0', 'manager_37', 'manager_35', 'manager_24', 'manager_6', 'manager_26', 'manager_12', 'manager_39', 'manager_1', 'manager_33'])
MODIFIER_CALL, Vault.checkToken(address)(_output_1)
manager_14(IManager) := ϕ(['manager_33'])
TMP_140(uint256) = INTERNAL_CALL, Vault.balance()()
manager_15(IManager) := ϕ(['manager_24'])
TMP_141(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['TMP_140', '_shares_1'] 
TMP_142(uint256) = INTERNAL_CALL, ERC20.totalSupply()()
TMP_143(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_141', 'TMP_142'] 
_amount_1(uint256) := TMP_143(uint256)
INTERNAL_CALL, ERC20._burn(address,uint256)(msg.sender,_shares_1)
TMP_145(uint256) = HIGH_LEVEL_CALL, dest:manager_17(IManager), function:withdrawalProtectionFee, arguments:[]  
MAX_9(uint256) := ϕ(['MAX_9', 'MAX_11', 'MAX_8', 'MAX_13', 'MAX_3'])
manager_18(IManager) := ϕ(['manager_19', 'manager_28', 'manager_30', 'manager_17', 'manager_37', 'manager_35', 'manager_24', 'manager_6', 'manager_26', 'manager_12', 'manager_39', 'manager_1', 'manager_33'])
_withdrawalProtectionFee_1(uint256) := TMP_145(uint256)
TMP_146(bool) = _withdrawalProtectionFee_1 > 0
CONDITION TMP_146
_amount_3(uint256) := ϕ(['_amount_2', '_amount_1'])
TMP_150 = CONVERT _output_1 to IERC20
TMP_151 = CONVERT this to address
TMP_152(uint256) = HIGH_LEVEL_CALL, dest:TMP_150(IERC20), function:balanceOf, arguments:['TMP_151']  
manager_19(IManager) := ϕ(['manager_19', 'manager_28', 'manager_30', 'manager_18', 'manager_37', 'manager_35', 'manager_24', 'manager_6', 'manager_26', 'manager_12', 'manager_39', 'manager_1', 'manager_33'])
_balance_1(uint256) := TMP_152(uint256)
TMP_153(bool) = _balance_1 < _amount_3
CONDITION TMP_153
TMP_154 = CONVERT this to address
TMP_155(address) = HIGH_LEVEL_CALL, dest:manager_19(IManager), function:controllers, arguments:['TMP_154']  
manager_20(IManager) := ϕ(['manager_19', 'manager_28', 'manager_30', 'manager_37', 'manager_35', 'manager_24', 'manager_6', 'manager_26', 'manager_12', 'manager_39', 'manager_1', 'manager_33'])
TMP_156 = CONVERT TMP_155 to IController
_controller_1(IController) := TMP_156(IController)
TMP_147(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_amount_1', '_withdrawalProtectionFee_1'] 
TMP_148(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_147', 'MAX_9'] 
_withdrawalProtection_1(uint256) := TMP_148(uint256)
TMP_157(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['_amount_3', '_balance_1'] 
_toWithdraw_1(uint256) := TMP_157(uint256)
TMP_166 = CONVERT _output_1 to IERC20
LIBRARY_CALL, dest:SafeERC20, function:SafeERC20.safeTransfer(IERC20,address,uint256), arguments:['TMP_166', 'msg.sender', '_amount_5'] 
TMP_149(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['_amount_1', '_withdrawalProtection_1'] 
_amount_2(uint256) := TMP_149(uint256)
TMP_158(uint256) = HIGH_LEVEL_CALL, dest:_controller_1(IController), function:strategies, arguments:[]  
TMP_159(bool) = TMP_158 > 0
CONDITION TMP_159
HIGH_LEVEL_CALL, dest:_controller_1(IController), function:withdraw, arguments:['_output_1', '_toWithdraw_1']  
Emit Withdraw(msg.sender,_amount_5)
TMP_161 = CONVERT _output_1 to IERC20
TMP_162 = CONVERT this to address
TMP_163(uint256) = HIGH_LEVEL_CALL, dest:TMP_161(IERC20), function:balanceOf, arguments:['TMP_162']  
_after_1(uint256) := TMP_163(uint256)
TMP_164(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['_after_1', '_balance_1'] 
_diff_1(uint256) := TMP_164(uint256)
TMP_165(bool) = _diff_1 < _toWithdraw_1
CONDITION TMP_165
_amount_4(uint256) := _after_1(uint256)
_amount_5(uint256) := ϕ(['_amount_4', '_amount_1'])


Propogating parameters and globals to SSA variables...
End popogation
_shares_1
_shares
_shares

Name: _shares_1 Function: withdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_output_1
_output

Name: _output_1 Function: withdraw
Num: 
Den: 
Address: -991
Norm: u
LF: _output
Value: u
Fields: 
Finance Type: undef
MAX_4
MAX

Name: MAX Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
manager_13
manager

Name: manager Function: withdraw
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
_shares_1(uint256) := ϕ(['TMP_170'])
Phi
[i]Type for _shares

Name: _shares Function: withdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_output_1(address) := ϕ(['_output_1'])
Phi
[i]Type for _output

Name: _output Function: withdraw
Num: 
Den: 
Address: -991
Norm: u
LF: _output
Value: u
Fields: 
Finance Type: undef
XXXX
MAX_4(uint256) := ϕ(['MAX_0', 'MAX_9', 'MAX_11', 'MAX_13', 'MAX_3'])
Phi
[i]Type for MAX

Name: MAX Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
manager_13(IManager) := ϕ(['manager_19', 'manager_28', 'manager_30', 'manager_0', 'manager_37', 'manager_35', 'manager_24', 'manager_6', 'manager_26', 'manager_12', 'manager_39', 'manager_1', 'manager_33'])
Phi
[i]Type for manager

Name: manager Function: withdraw
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_output_1
_output_1
_output

Name: _output Function: withdraw
Num: 
Den: 
Address: -991
Norm: u
LF: _output
Value: u
Fields: 
Finance Type: undef
End popogation
manager_14
manager

Name: manager Function: withdraw
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
MODIFIER_CALL, Vault.checkToken(address)(_output_1)
init
end
[[], [], 'u', '_output', [], -1, -991, 'u']

Name: _token Function: None
Num: 
Den: 
Address: -991
Norm: u
LF: _output
Value: u
Fields: 
Finance Type: undef

Name: _token Function: None
Num: 
Den: 
Address: -991
Norm: u
LF: _output
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
_token_1
_token

Name: _token_1 Function: checkToken
Num: 
Den: 
Address: -991
Norm: u
LF: _output
Value: u
Fields: 
Finance Type: undef
manager_31
manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
_token_1(address) := ϕ(['_token_1', '_output_1', '_token_1'])
Phi
[i]Type for _token

Name: _token Function: checkToken
Num: 
Den: 
Address: -991
Norm: u
LF: _output
Value: u
Fields: 
Finance Type: undef
XXXX
manager_31(IManager) := ϕ(['manager_19', 'manager_28', 'manager_30', 'manager_0', 'manager_37', 'manager_35', 'manager_24', 'manager_6', 'manager_26', 'manager_12', 'manager_39', 'manager_1', 'manager_33'])
Phi
[i]Type for manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
manager_31
manager_31
manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
manager_32
manager_32
manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
_token_1
_token_1
_token

Name: _token Function: checkToken
Num: 
Den: 
Address: -991
Norm: u
LF: _output
Value: u
Fields: 
Finance Type: undef
End popogation
manager_32
manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
manager_33
manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
TMP_214(bool) = HIGH_LEVEL_CALL, dest:manager_31(IManager), function:allowedTokens, arguments:['_token_1']  
High Call: allowedTokens
Running querryfc
[i]Type for TMP_214

Name: TMP_214 Function: checkToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
manager_32(IManager) := ϕ(['manager_19', 'manager_28', 'manager_30', 'manager_31', 'manager_37', 'manager_35', 'manager_24', 'manager_6', 'manager_26', 'manager_12', 'manager_39', 'manager_1', 'manager_33'])
Phi
[i]Type for manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_215(address) = HIGH_LEVEL_CALL, dest:manager_32(IManager), function:vaults, arguments:['_token_1']  
High Call: vaults
Running querryfc
Written func info: Manager, vaults
Retvar: ('c', [-1], [-1], 'u', 'u', 4)
([-1], [-1], 'u', 'u', 4, -1)
[i]Type for TMP_215

Name: TMP_215 Function: checkToken
Num: -1
Den: -1
Address: 4
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
manager_33(IManager) := ϕ(['manager_19', 'manager_28', 'manager_30', 'manager_32', 'manager_37', 'manager_35', 'manager_24', 'manager_6', 'manager_26', 'manager_12', 'manager_39', 'manager_1', 'manager_33'])
Phi
[i]Type for manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_216 = CONVERT this to address
Converting this
6
[i]Type for TMP_216

Name: TMP_216 Function: checkToken
Num: 
Den: 
Address: 6
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_217(bool) = TMP_215 == TMP_216
[i]Type for TMP_217

Name: TMP_217 Function: checkToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_218(bool) = TMP_214 && TMP_217
[i]Type for TMP_218

Name: TMP_218 Function: checkToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_219(None) = SOLIDITY_CALL require(bool,string)(TMP_218,!_token)
[i]Type for TMP_219

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation

Name: _token Function: None
Num: 
Den: 
Address: -991
Norm: u
LF: _output
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
_token_1
_token

Name: _token_1 Function: checkToken
Num: 
Den: 
Address: -991
Norm: u
LF: _output
Value: u
Fields: 
Finance Type: undef
manager_31
manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
_token_1(address) := ϕ(['_token_1', '_output_1', '_token_1'])
Phi
[i]Type for _token

Name: _token Function: checkToken
Num: 
Den: 
Address: -991
Norm: u
LF: _output
Value: u
Fields: 
Finance Type: undef
XXXX
manager_31(IManager) := ϕ(['manager_19', 'manager_28', 'manager_30', 'manager_0', 'manager_37', 'manager_35', 'manager_24', 'manager_6', 'manager_26', 'manager_12', 'manager_39', 'manager_1', 'manager_33'])
Phi
[i]Type for manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
manager_31
manager_31
manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
manager_32
manager_32
manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
_token_1
_token_1
_token

Name: _token Function: checkToken
Num: 
Den: 
Address: -991
Norm: u
LF: _output
Value: u
Fields: 
Finance Type: undef
End popogation
manager_32
manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
manager_33
manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
TMP_214(bool) = HIGH_LEVEL_CALL, dest:manager_31(IManager), function:allowedTokens, arguments:['_token_1']  
High Call: allowedTokens
Running querryfc
[i]Type for TMP_214

Name: TMP_214 Function: checkToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
manager_32(IManager) := ϕ(['manager_19', 'manager_28', 'manager_30', 'manager_31', 'manager_37', 'manager_35', 'manager_24', 'manager_6', 'manager_26', 'manager_12', 'manager_39', 'manager_1', 'manager_33'])
Phi
[i]Type for manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_215(address) = HIGH_LEVEL_CALL, dest:manager_32(IManager), function:vaults, arguments:['_token_1']  
High Call: vaults
Running querryfc
Written func info: Manager, vaults
Retvar: ('c', [-1], [-1], 'u', 'u', 4)
([-1], [-1], 'u', 'u', 4, -1)
[i]Type for TMP_215

Name: TMP_215 Function: checkToken
Num: -1
Den: -1
Address: 4
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
manager_33(IManager) := ϕ(['manager_19', 'manager_28', 'manager_30', 'manager_32', 'manager_37', 'manager_35', 'manager_24', 'manager_6', 'manager_26', 'manager_12', 'manager_39', 'manager_1', 'manager_33'])
Phi
[i]Type for manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_216 = CONVERT this to address
Converting this
6
[i]Type for TMP_216

Name: TMP_216 Function: checkToken
Num: 
Den: 
Address: 6
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_217(bool) = TMP_215 == TMP_216
[i]Type for TMP_217

Name: TMP_217 Function: checkToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_218(bool) = TMP_214 && TMP_217
[i]Type for TMP_218

Name: TMP_218 Function: checkToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_219(None) = SOLIDITY_CALL require(bool,string)(TMP_218,!_token)
[i]Type for TMP_219

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
manager_14(IManager) := ϕ(['manager_33'])
Phi
[i]Type for manager

Name: manager Function: withdraw
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_shares_1
_shares_1
_shares
_shares

Name: _shares_1 Function: withdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_amount_1
_amount_1
_amount
_amount

Name: _amount Function: withdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
manager_15
manager

Name: manager Function: withdraw
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
TMP_140(uint256) = INTERNAL_CALL, Vault.balance()()
init
end
[i]Type for TMP_140

Name: TMP_140 Function: withdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
manager_15(IManager) := ϕ(['manager_24'])
Phi
[i]Type for manager

Name: manager Function: withdraw
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_141(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['TMP_140', '_shares_1'] 
init
end
init
end
A: u B: u
x
lnorm: u rnorm: u
init
end
[i]Type for TMP_141

Name: TMP_141 Function: withdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_142(uint256) = INTERNAL_CALL, ERC20.totalSupply()()
init
end
[i]Type for TMP_142

Name: TMP_142 Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_143(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_141', 'TMP_142'] 
init
end
init
end
A: u B: u
x
lnorm: u rnorm: u
init
end
[i]Type for TMP_143

Name: TMP_143 Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_amount_1(uint256) := TMP_143(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for _amount

Name: _amount Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_shares_1
_shares_1
_shares
_shares

Name: _shares_1 Function: withdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
INTERNAL_CALL, ERC20._burn(address,uint256)(msg.sender,_shares_1)
init
init
end
Propogating parameters and globals to SSA variables...
manager_17
manager_17
manager

Name: None Function: None
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
_withdrawalProtectionFee_1
_withdrawalProtectionFee_1
_withdrawalProtectionFee
_withdrawalProtectionFee

Name: _withdrawalProtectionFee Function: withdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
MAX_9
MAX

Name: MAX Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
manager_18
manager

Name: manager Function: withdraw
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
TMP_145(uint256) = HIGH_LEVEL_CALL, dest:manager_17(IManager), function:withdrawalProtectionFee, arguments:[]  
High Call: withdrawalProtectionFee
Running querryfc
Written func info: Manager, withdrawalProtectionFee
Handling balance function!
-999
Finding type for hlc_0(uint256 ... )
[i]Type for TMP_145

Name: TMP_145 Function: withdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
MAX_9(uint256) := ϕ(['MAX_9', 'MAX_11', 'MAX_8', 'MAX_13', 'MAX_3'])
Phi
[i]Type for MAX

Name: MAX Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
manager_18(IManager) := ϕ(['manager_19', 'manager_28', 'manager_30', 'manager_17', 'manager_37', 'manager_35', 'manager_24', 'manager_6', 'manager_26', 'manager_12', 'manager_39', 'manager_1', 'manager_33'])
Phi
[i]Type for manager

Name: manager Function: withdraw
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
XXXX
_withdrawalProtectionFee_1(uint256) := TMP_145(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for _withdrawalProtectionFee

Name: _withdrawalProtectionFee Function: withdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_withdrawalProtectionFee_1
_withdrawalProtectionFee_1
_withdrawalProtectionFee
_withdrawalProtectionFee

Name: _withdrawalProtectionFee Function: withdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_146(bool) = _withdrawalProtectionFee_1 > 0
init
end
init
end
A: u B: 0
x
lnorm: u rnorm: 0
init
end
[i]Type for TMP_146

Name: TMP_146 Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
_amount_3
_amount
_amount

Name: _amount Function: withdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_amount_3(uint256) := ϕ(['_amount_2', '_amount_1'])
Phi
init
end
[i]Type for _amount

Name: _amount Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_output_1
_output_1
_output

Name: _output Function: withdraw
Num: 
Den: 
Address: -991
Norm: u
LF: _output
Value: u
Fields: 
Finance Type: undef
_balance_1
_balance_1
_balance
_balance

Name: _balance Function: withdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
manager_19
manager

Name: manager Function: withdraw
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
TMP_150 = CONVERT _output_1 to IERC20
Converting _output_1

Name: _output Function: withdraw
Num: 
Den: 
Address: -991
Norm: u
LF: _output
Value: u
Fields: 
Finance Type: undef
init
end
ERC20
[i]Type for TMP_150

Name: TMP_150 Function: withdraw
Num: 
Den: 
Address: -991
Norm: u
LF: ERC20
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_151 = CONVERT this to address
Converting this
6
[i]Type for TMP_151

Name: TMP_151 Function: withdraw
Num: 
Den: 
Address: 6
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_152(uint256) = HIGH_LEVEL_CALL, dest:TMP_150(IERC20), function:balanceOf, arguments:['TMP_151']  
High Call: balanceOf
Running querryfc
Written func info: ERC20, balanceOf
Handling balance function!
-991
[i]Type for TMP_152

Name: TMP_152 Function: withdraw
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
manager_19(IManager) := ϕ(['manager_19', 'manager_28', 'manager_30', 'manager_18', 'manager_37', 'manager_35', 'manager_24', 'manager_6', 'manager_26', 'manager_12', 'manager_39', 'manager_1', 'manager_33'])
Phi
[i]Type for manager

Name: manager Function: withdraw
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
XXXX
_balance_1(uint256) := TMP_152(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for _balance

Name: _balance Function: withdraw
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_balance_1
_balance_1
_balance

Name: _balance Function: withdraw
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
_amount_3
_amount_3
_amount

Name: _amount Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_153(bool) = _balance_1 < _amount_3
init
end
init
end
A: 6 B: u
x
lnorm: 6 rnorm: u
[i]Type for TMP_153

Name: TMP_153 Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
manager_19
manager_19
manager

Name: manager Function: withdraw
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
_controller_1
_controller_1
_controller
_controller

Name: _controller Function: withdraw
Num: 
Den: 
Address: u
Norm: u
LF: Controller
Value: u
Fields: 
Finance Type: undef
End popogation
manager_20
manager

Name: manager Function: withdraw
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
TMP_154 = CONVERT this to address
Converting this
6
[i]Type for TMP_154

Name: TMP_154 Function: withdraw
Num: 
Den: 
Address: 6
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_155(address) = HIGH_LEVEL_CALL, dest:manager_19(IManager), function:controllers, arguments:['TMP_154']  
High Call: controllers
Running querryfc
Written func info: Manager, controllers
Retvar: ('c', [-1], [-1], 'u', 'u', 2)
([-1], [-1], 'u', 'u', 2, -1)
[i]Type for TMP_155

Name: TMP_155 Function: withdraw
Num: -1
Den: -1
Address: 2
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
manager_20(IManager) := ϕ(['manager_19', 'manager_28', 'manager_30', 'manager_37', 'manager_35', 'manager_24', 'manager_6', 'manager_26', 'manager_12', 'manager_39', 'manager_1', 'manager_33'])
Phi
[i]Type for manager

Name: manager Function: withdraw
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_156 = CONVERT TMP_155 to IController
Converting TMP_155

Name: TMP_155 Function: withdraw
Num: -1
Den: -1
Address: 2
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
Controller
[i]Type for TMP_156

Name: TMP_156 Function: withdraw
Num: -1
Den: -1
Address: 2
Norm: u
LF: Controller
Value: u
Fields: 
Finance Type: undef
XXXX
_controller_1(IController) := TMP_156(IController)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for _controller

Name: _controller Function: withdraw
Num: -1
Den: -1
Address: 2
Norm: u
LF: Controller
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
MAX_9
MAX_9
MAX

Name: MAX Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_amount_1
_amount_1
_amount

Name: _amount Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_withdrawalProtectionFee_1
_withdrawalProtectionFee_1
_withdrawalProtectionFee
_withdrawalProtectionFee

Name: _withdrawalProtectionFee Function: withdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_withdrawalProtection_1
_withdrawalProtection_1
_withdrawalProtection
_withdrawalProtection

Name: _withdrawalProtection Function: withdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_147(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_amount_1', '_withdrawalProtectionFee_1'] 
init
end
init
end
A: u B: u
x
lnorm: u rnorm: u
init
end
[i]Type for TMP_147

Name: TMP_147 Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_148(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_147', 'MAX_9'] 
init
end
init
end
A: u B: u
x
lnorm: u rnorm: u
init
end
[i]Type for TMP_148

Name: TMP_148 Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_withdrawalProtection_1(uint256) := TMP_148(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for _withdrawalProtection

Name: _withdrawalProtection Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_balance_1
_balance_1
_balance

Name: _balance Function: withdraw
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
_amount_3
_amount_3
_amount

Name: _amount Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_toWithdraw_1
_toWithdraw_1
_toWithdraw
_toWithdraw

Name: _toWithdraw Function: withdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_157(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['_amount_3', '_balance_1'] 
SUB1
init
end
init
end
A: u B: 6
x
lnorm: u rnorm: 6
SUB

Name: _amount Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _balance Function: withdraw
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
[i]Type for TMP_157

Name: TMP_157 Function: withdraw
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_toWithdraw_1(uint256) := TMP_157(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for _toWithdraw

Name: _toWithdraw Function: withdraw
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_amount_5
_amount_5
_amount

Name: _amount Function: withdraw
Num: -991
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_output_1
_output_1
_output

Name: _output Function: withdraw
Num: 
Den: 
Address: -991
Norm: u
LF: _output
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_166 = CONVERT _output_1 to IERC20
Converting _output_1

Name: _output Function: withdraw
Num: 
Den: 
Address: -991
Norm: u
LF: _output
Value: u
Fields: 
Finance Type: undef
init
end
ERC20
[i]Type for TMP_166

Name: TMP_166 Function: withdraw
Num: 
Den: 
Address: -991
Norm: u
LF: ERC20
Value: u
Fields: 
Finance Type: undef
XXXX
LIBRARY_CALL, dest:SafeERC20, function:SafeERC20.safeTransfer(IERC20,address,uint256), arguments:['TMP_166', 'msg.sender', '_amount_5'] 
Propogating parameters and globals to SSA variables...
_withdrawalProtection_1
_withdrawalProtection_1
_withdrawalProtection

Name: _withdrawalProtection Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_amount_1
_amount_1
_amount

Name: _amount Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_amount_2
_amount_2
_amount
_amount

Name: _amount Function: withdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_149(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['_amount_1', '_withdrawalProtection_1'] 
SUB1
init
end
init
end
A: u B: u
x
lnorm: u rnorm: u
SUB

Name: _amount Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _withdrawalProtection Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
[i]Type for TMP_149

Name: TMP_149 Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_amount_2(uint256) := TMP_149(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for _amount

Name: _amount Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_controller_1
_controller_1
_controller

Name: _controller Function: withdraw
Num: -1
Den: -1
Address: 2
Norm: u
LF: Controller
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_158(uint256) = HIGH_LEVEL_CALL, dest:_controller_1(IController), function:strategies, arguments:[]  
High Call: strategies
Running querryfc
Written func info: Controller, strategies
Handling balance function!
2
Finding type for hlc_1(uint256 ... )
[i]Type for TMP_158

Name: TMP_158 Function: withdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_159(bool) = TMP_158 > 0
init
end
init
end
A: u B: 0
x
lnorm: u rnorm: 0
init
end
[i]Type for TMP_159

Name: TMP_159 Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_controller_1
_controller_1
_controller

Name: _controller Function: withdraw
Num: -1
Den: -1
Address: 2
Norm: u
LF: Controller
Value: u
Fields: 
Finance Type: undef
_output_1
_output_1
_output

Name: _output Function: withdraw
Num: 
Den: 
Address: -991
Norm: u
LF: _output
Value: u
Fields: 
Finance Type: undef
_toWithdraw_1
_toWithdraw_1
_toWithdraw

Name: _toWithdraw Function: withdraw
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
HIGH_LEVEL_CALL, dest:_controller_1(IController), function:withdraw, arguments:['_output_1', '_toWithdraw_1']  
High Call: withdraw
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
_amount_5
_amount_5
_amount

Name: _amount Function: withdraw
Num: -991
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
Propogating parameters and globals to SSA variables...
_output_1
_output_1
_output

Name: _output Function: withdraw
Num: 
Den: 
Address: -991
Norm: u
LF: _output
Value: u
Fields: 
Finance Type: undef
_after_1
_after_1
_after
_after

Name: _after Function: withdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_161 = CONVERT _output_1 to IERC20
Converting _output_1

Name: _output Function: withdraw
Num: 
Den: 
Address: -991
Norm: u
LF: _output
Value: u
Fields: 
Finance Type: undef
init
end
ERC20
[i]Type for TMP_161

Name: TMP_161 Function: withdraw
Num: 
Den: 
Address: -991
Norm: u
LF: ERC20
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_162 = CONVERT this to address
Converting this
6
[i]Type for TMP_162

Name: TMP_162 Function: withdraw
Num: 
Den: 
Address: 6
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_163(uint256) = HIGH_LEVEL_CALL, dest:TMP_161(IERC20), function:balanceOf, arguments:['TMP_162']  
High Call: balanceOf
Running querryfc
Written func info: ERC20, balanceOf
Handling balance function!
-991
[i]Type for TMP_163

Name: TMP_163 Function: withdraw
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_after_1(uint256) := TMP_163(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for _after

Name: _after Function: withdraw
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_balance_1
_balance_1
_balance

Name: _balance Function: withdraw
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
_after_1
_after_1
_after

Name: _after Function: withdraw
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
_diff_1
_diff_1
_diff
_diff

Name: _diff Function: withdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_164(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['_after_1', '_balance_1'] 
SUB1
init
end
init
end
A: 6 B: 6
x
y
A: 6 B: 6
<class 'int'>
<class 'int'>
lnorm: 6 rnorm: 6
SUB

Name: _after Function: withdraw
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _balance Function: withdraw
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
[i]Type for TMP_164

Name: TMP_164 Function: withdraw
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_diff_1(uint256) := TMP_164(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for _diff

Name: _diff Function: withdraw
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_diff_1
_diff_1
_diff

Name: _diff Function: withdraw
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
_toWithdraw_1
_toWithdraw_1
_toWithdraw

Name: _toWithdraw Function: withdraw
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_165(bool) = _diff_1 < _toWithdraw_1
init
end
init
end
A: 6 B: 6
x
y
A: 6 B: 6
<class 'int'>
<class 'int'>
lnorm: 6 rnorm: 6
[i]Type for TMP_165

Name: TMP_165 Function: withdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_after_1
_after_1
_after

Name: _after Function: withdraw
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
_amount_4
_amount_4
_amount
_amount

Name: _amount Function: withdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
_amount_4(uint256) := _after_1(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for _amount

Name: _amount Function: withdraw
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
_amount_5
_amount
_amount

Name: _amount Function: withdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_amount_5(uint256) := ϕ(['_amount_4', '_amount_1'])
Phi
init
end
[i]Type for _amount

Name: _amount Function: withdraw
Num: -991
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX



withdrawAll
Finding type for _output(address ... )
prev address? u
Head Addr: -990
    Norm: 6
    Set: {-990}
    Fin: NULL
Param: 0
    num: []
    den: []
    norm: u
    link: _output
    fields: []
    fintype: -1


TMP_170(uint256) = INTERNAL_CALL, ERC20.balanceOf(address)(msg.sender)
INTERNAL_CALL, Vault.withdraw(uint256,address)(TMP_170,_output_1)


Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
_output_1
_output_1
_output

Name: _output_1 Function: None
Num: 
Den: 
Address: -990
Norm: u
LF: _output
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_170(uint256) = INTERNAL_CALL, ERC20.balanceOf(address)(msg.sender)
[i]Type for TMP_170

Name: TMP_170 Function: withdrawAll
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
INTERNAL_CALL, Vault.withdraw(uint256,address)(TMP_170,_output_1)


TMP_170(uint256) = INTERNAL_CALL, ERC20.balanceOf(address)(msg.sender)
INTERNAL_CALL, Vault.withdraw(uint256,address)(TMP_170,_output_1)


Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
_output_1
_output_1
_output

Name: _output_1 Function: None
Num: 
Den: 
Address: -990
Norm: u
LF: _output
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_170(uint256) = INTERNAL_CALL, ERC20.balanceOf(address)(msg.sender)
[i]Type for TMP_170

Name: TMP_170 Function: withdrawAll
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
INTERNAL_CALL, Vault.withdraw(uint256,address)(TMP_170,_output_1)



available
Finding type for _token(address ... )
prev address? u
Head Addr: -989
    Norm: 6
    Set: {-989}
    Fin: NULL
Param: 0
    num: []
    den: []
    norm: u
    link: _token
    fields: []
    fintype: -1


_token_1(address) := ϕ(['_token_1'])
MAX_10(uint256) := ϕ(['MAX_0', 'MAX_9', 'MAX_11', 'MAX_13', 'MAX_3'])
min_3(uint256) := ϕ(['min_4', 'min_1', 'min_0', 'min_2'])
TMP_172 = CONVERT _token_1 to IERC20
TMP_173 = CONVERT this to address
TMP_174(uint256) = HIGH_LEVEL_CALL, dest:TMP_172(IERC20), function:balanceOf, arguments:['TMP_173']  
MAX_11(uint256) := ϕ(['MAX_9', 'MAX_11', 'MAX_13', 'MAX_3', 'MAX_10'])
min_4(uint256) := ϕ(['min_4', 'min_3', 'min_1', 'min_2'])
TMP_175(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['TMP_174', 'min_4'] 
TMP_176(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_175', 'MAX_11'] 
RETURN TMP_176


Propogating parameters and globals to SSA variables...
End popogation
_token_1
_token

Name: _token_1 Function: None
Num: 
Den: 
Address: -989
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
MAX_10
MAX
MAX

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
min_3
min
min

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 9500
Fields: 
Finance Type: undef
_token_1(address) := ϕ(['_token_1'])
Phi
[i]Type for _token

Name: _token Function: available
Num: 
Den: 
Address: -989
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
XXXX
MAX_10(uint256) := ϕ(['MAX_0', 'MAX_9', 'MAX_11', 'MAX_13', 'MAX_3'])
Phi
[i]Type for MAX

Name: MAX Function: available
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
min_3(uint256) := ϕ(['min_4', 'min_1', 'min_0', 'min_2'])
Phi
[i]Type for min

Name: min Function: available
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 9500
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
min_4
min_4
min
min

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 9500
Fields: 
Finance Type: undef
_token_1
_token_1
_token

Name: _token Function: available
Num: 
Den: 
Address: -989
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
MAX_11
MAX_11
MAX
MAX

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
MAX_11
MAX

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
min_4
min

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 9500
Fields: 
Finance Type: undef
TMP_172 = CONVERT _token_1 to IERC20
Converting _token_1

Name: _token Function: available
Num: 
Den: 
Address: -989
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
init
end
ERC20
[i]Type for TMP_172

Name: TMP_172 Function: available
Num: 
Den: 
Address: -989
Norm: u
LF: ERC20
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_173 = CONVERT this to address
Converting this
6
[i]Type for TMP_173

Name: TMP_173 Function: available
Num: -1
Den: -1
Address: 6
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_174(uint256) = HIGH_LEVEL_CALL, dest:TMP_172(IERC20), function:balanceOf, arguments:['TMP_173']  
High Call: balanceOf
Running querryfc
Written func info: ERC20, balanceOf
Handling balance function!
-989
[i]Type for TMP_174

Name: TMP_174 Function: available
Num: -989
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
MAX_11(uint256) := ϕ(['MAX_9', 'MAX_11', 'MAX_13', 'MAX_3', 'MAX_10'])
Phi
[i]Type for MAX

Name: MAX Function: available
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
min_4(uint256) := ϕ(['min_4', 'min_3', 'min_1', 'min_2'])
Phi
[i]Type for min

Name: min Function: available
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 9500
Fields: 
Finance Type: undef
XXXX
TMP_175(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['TMP_174', 'min_4'] 
init
end
init
end
A: 6 B: u
x
lnorm: 6 rnorm: u
init
end
[i]Type for TMP_175

Name: TMP_175 Function: available
Num: -989
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_176(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_175', 'MAX_11'] 
init
end
init
end
A: 6 B: u
x
lnorm: 6 rnorm: u
init
end
[i]Type for TMP_176

Name: TMP_176 Function: available
Num: -989
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_176
init
end


_token_1(address) := ϕ(['_token_1'])
MAX_10(uint256) := ϕ(['MAX_0', 'MAX_9', 'MAX_11', 'MAX_13', 'MAX_3'])
min_3(uint256) := ϕ(['min_4', 'min_1', 'min_0', 'min_2'])
TMP_172 = CONVERT _token_1 to IERC20
TMP_173 = CONVERT this to address
TMP_174(uint256) = HIGH_LEVEL_CALL, dest:TMP_172(IERC20), function:balanceOf, arguments:['TMP_173']  
MAX_11(uint256) := ϕ(['MAX_9', 'MAX_11', 'MAX_13', 'MAX_3', 'MAX_10'])
min_4(uint256) := ϕ(['min_4', 'min_3', 'min_1', 'min_2'])
TMP_175(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['TMP_174', 'min_4'] 
TMP_176(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_175', 'MAX_11'] 
RETURN TMP_176


Propogating parameters and globals to SSA variables...
End popogation
_token_1
_token

Name: _token_1 Function: available
Num: 
Den: 
Address: -989
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
MAX_10
MAX

Name: MAX Function: available
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
min_3
min

Name: min Function: available
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 9500
Fields: 
Finance Type: undef
_token_1(address) := ϕ(['_token_1'])
Phi
[i]Type for _token

Name: _token Function: available
Num: 
Den: 
Address: -989
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
XXXX
MAX_10(uint256) := ϕ(['MAX_0', 'MAX_9', 'MAX_11', 'MAX_13', 'MAX_3'])
Phi
[i]Type for MAX

Name: MAX Function: available
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
min_3(uint256) := ϕ(['min_4', 'min_1', 'min_0', 'min_2'])
Phi
[i]Type for min

Name: min Function: available
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 9500
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
min_4
min_4
min

Name: min Function: available
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 9500
Fields: 
Finance Type: undef
_token_1
_token_1
_token

Name: _token Function: available
Num: 
Den: 
Address: -989
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
MAX_11
MAX_11
MAX

Name: MAX Function: available
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
MAX_11
MAX

Name: MAX Function: available
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
min_4
min

Name: min Function: available
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 9500
Fields: 
Finance Type: undef
TMP_172 = CONVERT _token_1 to IERC20
Converting _token_1

Name: _token Function: available
Num: 
Den: 
Address: -989
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
init
end
ERC20
[i]Type for TMP_172

Name: TMP_172 Function: available
Num: 
Den: 
Address: -989
Norm: u
LF: ERC20
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_173 = CONVERT this to address
Converting this
6
[i]Type for TMP_173

Name: TMP_173 Function: available
Num: 
Den: 
Address: 6
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_174(uint256) = HIGH_LEVEL_CALL, dest:TMP_172(IERC20), function:balanceOf, arguments:['TMP_173']  
High Call: balanceOf
Running querryfc
Written func info: ERC20, balanceOf
Handling balance function!
-989
[i]Type for TMP_174

Name: TMP_174 Function: available
Num: -989
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
MAX_11(uint256) := ϕ(['MAX_9', 'MAX_11', 'MAX_13', 'MAX_3', 'MAX_10'])
Phi
[i]Type for MAX

Name: MAX Function: available
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
min_4(uint256) := ϕ(['min_4', 'min_3', 'min_1', 'min_2'])
Phi
[i]Type for min

Name: min Function: available
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 9500
Fields: 
Finance Type: undef
XXXX
TMP_175(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['TMP_174', 'min_4'] 
init
end
init
end
A: 6 B: u
x
lnorm: 6 rnorm: u
init
end
[i]Type for TMP_175

Name: TMP_175 Function: available
Num: -989
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_176(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_175', 'MAX_11'] 
init
end
init
end
A: 6 B: u
x
lnorm: 6 rnorm: u
init
end
[i]Type for TMP_176

Name: TMP_176 Function: available
Num: -989
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_176
init
end



balance


manager_21(IManager) := ϕ(['manager_19', 'manager_28', 'manager_30', 'manager_0', 'manager_37', 'manager_35', 'manager_24', 'manager_6', 'manager_26', 'manager_12', 'manager_39', 'manager_1', 'manager_33'])
TMP_177(uint256) = INTERNAL_CALL, Vault.balanceOfThis()()
manager_22(IManager) := ϕ(['manager_26'])
TMP_178 = CONVERT this to address
TMP_179(address) = HIGH_LEVEL_CALL, dest:manager_22(IManager), function:controllers, arguments:['TMP_178']  
manager_23(IManager) := ϕ(['manager_19', 'manager_28', 'manager_30', 'manager_22', 'manager_37', 'manager_35', 'manager_24', 'manager_6', 'manager_26', 'manager_12', 'manager_39', 'manager_1', 'manager_33'])
TMP_180 = CONVERT TMP_179 to IController
TMP_181(uint256) = HIGH_LEVEL_CALL, dest:TMP_180(IController), function:balanceOf, arguments:[]  
manager_24(IManager) := ϕ(['manager_19', 'manager_28', 'manager_30', 'manager_23', 'manager_37', 'manager_35', 'manager_24', 'manager_6', 'manager_26', 'manager_12', 'manager_39', 'manager_1', 'manager_33'])
TMP_182(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['TMP_177', 'TMP_181'] 
RETURN TMP_182


Propogating parameters and globals to SSA variables...
End popogation
manager_21
manager

Name: manager Function: balance
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
manager_21(IManager) := ϕ(['manager_19', 'manager_28', 'manager_30', 'manager_0', 'manager_37', 'manager_35', 'manager_24', 'manager_6', 'manager_26', 'manager_12', 'manager_39', 'manager_1', 'manager_33'])
Phi
[i]Type for manager

Name: manager Function: balance
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
manager_22
manager_22
manager

Name: manager Function: balance
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
End popogation
manager_22
manager

Name: manager Function: balance
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
manager_23
manager

Name: manager Function: balance
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
manager_24
manager

Name: manager Function: balance
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
TMP_177(uint256) = INTERNAL_CALL, Vault.balanceOfThis()()
init
end
[i]Type for TMP_177

Name: TMP_177 Function: balance
Num: 5
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
manager_22(IManager) := ϕ(['manager_26'])
Phi
[i]Type for manager

Name: manager Function: balance
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_178 = CONVERT this to address
Converting this
6
[i]Type for TMP_178

Name: TMP_178 Function: balance
Num: 
Den: 
Address: 6
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_179(address) = HIGH_LEVEL_CALL, dest:manager_22(IManager), function:controllers, arguments:['TMP_178']  
High Call: controllers
Running querryfc
Written func info: Manager, controllers
Retvar: ('c', [-1], [-1], 'u', 'u', 2)
([-1], [-1], 'u', 'u', 2, -1)
[i]Type for TMP_179

Name: TMP_179 Function: balance
Num: -1
Den: -1
Address: 2
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
manager_23(IManager) := ϕ(['manager_19', 'manager_28', 'manager_30', 'manager_22', 'manager_37', 'manager_35', 'manager_24', 'manager_6', 'manager_26', 'manager_12', 'manager_39', 'manager_1', 'manager_33'])
Phi
[i]Type for manager

Name: manager Function: balance
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_180 = CONVERT TMP_179 to IController
Converting TMP_179

Name: TMP_179 Function: balance
Num: -1
Den: -1
Address: 2
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
Controller
[i]Type for TMP_180

Name: TMP_180 Function: balance
Num: -1
Den: -1
Address: 2
Norm: u
LF: Controller
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_181(uint256) = HIGH_LEVEL_CALL, dest:TMP_180(IController), function:balanceOf, arguments:[]  
High Call: balanceOf
Running querryfc
Written func info: Controller, balanceOf
Handling balance function!
2
[i]Type for TMP_181

Name: TMP_181 Function: balance
Num: 2
Den: -1
Address: u
Norm: *
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
manager_24(IManager) := ϕ(['manager_19', 'manager_28', 'manager_30', 'manager_23', 'manager_37', 'manager_35', 'manager_24', 'manager_6', 'manager_26', 'manager_12', 'manager_39', 'manager_1', 'manager_33'])
Phi
[i]Type for manager

Name: manager Function: balance
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_182(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['TMP_177', 'TMP_181'] 

Name: TMP_177 Function: balance
Num: 5
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_181 Function: balance
Num: 2
Den: -1
Address: u
Norm: *
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
init
end
A: u B: *
x
lnorm: u rnorm: *
[i]Type for TMP_182

Name: TMP_182 Function: balance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_182
init
end


manager_21(IManager) := ϕ(['manager_19', 'manager_28', 'manager_30', 'manager_0', 'manager_37', 'manager_35', 'manager_24', 'manager_6', 'manager_26', 'manager_12', 'manager_39', 'manager_1', 'manager_33'])
TMP_177(uint256) = INTERNAL_CALL, Vault.balanceOfThis()()
manager_22(IManager) := ϕ(['manager_26'])
TMP_178 = CONVERT this to address
TMP_179(address) = HIGH_LEVEL_CALL, dest:manager_22(IManager), function:controllers, arguments:['TMP_178']  
manager_23(IManager) := ϕ(['manager_19', 'manager_28', 'manager_30', 'manager_22', 'manager_37', 'manager_35', 'manager_24', 'manager_6', 'manager_26', 'manager_12', 'manager_39', 'manager_1', 'manager_33'])
TMP_180 = CONVERT TMP_179 to IController
TMP_181(uint256) = HIGH_LEVEL_CALL, dest:TMP_180(IController), function:balanceOf, arguments:[]  
manager_24(IManager) := ϕ(['manager_19', 'manager_28', 'manager_30', 'manager_23', 'manager_37', 'manager_35', 'manager_24', 'manager_6', 'manager_26', 'manager_12', 'manager_39', 'manager_1', 'manager_33'])
TMP_182(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['TMP_177', 'TMP_181'] 
RETURN TMP_182


Propogating parameters and globals to SSA variables...
End popogation
manager_21
manager

Name: manager Function: balance
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
manager_21(IManager) := ϕ(['manager_19', 'manager_28', 'manager_30', 'manager_0', 'manager_37', 'manager_35', 'manager_24', 'manager_6', 'manager_26', 'manager_12', 'manager_39', 'manager_1', 'manager_33'])
Phi
[i]Type for manager

Name: manager Function: balance
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
manager_22
manager_22
manager

Name: manager Function: balance
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
End popogation
manager_22
manager

Name: manager Function: balance
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
manager_23
manager

Name: manager Function: balance
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
manager_24
manager

Name: manager Function: balance
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
TMP_177(uint256) = INTERNAL_CALL, Vault.balanceOfThis()()
init
end
[i]Type for TMP_177

Name: TMP_177 Function: balance
Num: 5
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
manager_22(IManager) := ϕ(['manager_26'])
Phi
[i]Type for manager

Name: manager Function: balance
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_178 = CONVERT this to address
Converting this
6
[i]Type for TMP_178

Name: TMP_178 Function: balance
Num: 
Den: 
Address: 6
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_179(address) = HIGH_LEVEL_CALL, dest:manager_22(IManager), function:controllers, arguments:['TMP_178']  
High Call: controllers
Running querryfc
Written func info: Manager, controllers
Retvar: ('c', [-1], [-1], 'u', 'u', 2)
([-1], [-1], 'u', 'u', 2, -1)
[i]Type for TMP_179

Name: TMP_179 Function: balance
Num: -1
Den: -1
Address: 2
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
manager_23(IManager) := ϕ(['manager_19', 'manager_28', 'manager_30', 'manager_22', 'manager_37', 'manager_35', 'manager_24', 'manager_6', 'manager_26', 'manager_12', 'manager_39', 'manager_1', 'manager_33'])
Phi
[i]Type for manager

Name: manager Function: balance
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_180 = CONVERT TMP_179 to IController
Converting TMP_179

Name: TMP_179 Function: balance
Num: -1
Den: -1
Address: 2
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
Controller
[i]Type for TMP_180

Name: TMP_180 Function: balance
Num: -1
Den: -1
Address: 2
Norm: u
LF: Controller
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_181(uint256) = HIGH_LEVEL_CALL, dest:TMP_180(IController), function:balanceOf, arguments:[]  
High Call: balanceOf
Running querryfc
Written func info: Controller, balanceOf
Handling balance function!
2
[i]Type for TMP_181

Name: TMP_181 Function: balance
Num: 2
Den: -1
Address: u
Norm: *
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
manager_24(IManager) := ϕ(['manager_19', 'manager_28', 'manager_30', 'manager_23', 'manager_37', 'manager_35', 'manager_24', 'manager_6', 'manager_26', 'manager_12', 'manager_39', 'manager_1', 'manager_33'])
Phi
[i]Type for manager

Name: manager Function: balance
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_182(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['TMP_177', 'TMP_181'] 

Name: TMP_177 Function: balance
Num: 5
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_181 Function: balance
Num: 2
Den: -1
Address: u
Norm: *
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
init
end
A: u B: *
x
lnorm: u rnorm: *
[i]Type for TMP_182

Name: TMP_182 Function: balance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_182
init
end



balanceOfThis


manager_25(IManager) := ϕ(['manager_19', 'manager_28', 'manager_30', 'manager_0', 'manager_37', 'manager_35', 'manager_24', 'manager_6', 'manager_26', 'manager_12', 'manager_39', 'manager_1', 'manager_33'])
TMP_183 = CONVERT this to address
TMP_184(address[]) = HIGH_LEVEL_CALL, dest:manager_25(IManager), function:getTokens, arguments:['TMP_183']  
manager_26(IManager) := ϕ(['manager_19', 'manager_28', 'manager_30', 'manager_37', 'manager_25', 'manager_35', 'manager_24', 'manager_6', 'manager_26', 'manager_12', 'manager_39', 'manager_1', 'manager_33'])
_tokens_1(address[]) := TMP_184(address[])
_balance_1(uint256) := ϕ(['_balance_2', '_balance_0'])
i_1(uint8) := ϕ(['i_0', 'i_2'])
REF_73 -> LENGTH _tokens_1
TMP_185(bool) = i_1 < REF_73
CONDITION TMP_185
REF_74(address) -> _tokens_1[i_1]
_token_1(address) := REF_74(address)
RETURN _balance_1
TMP_186 = CONVERT _token_1 to IERC20
TMP_187 = CONVERT this to address
TMP_188(uint256) = HIGH_LEVEL_CALL, dest:TMP_186(IERC20), function:balanceOf, arguments:['TMP_187']  
TMP_189(uint256) = INTERNAL_CALL, Vault._normalizeDecimals(address,uint256)(_token_1,TMP_188)
TMP_190(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['_balance_1', 'TMP_189'] 
_balance_2(uint256) := TMP_190(uint256)
TMP_191(uint8) := i_1(uint8)
i_2(uint8) = i_1 + 1


Propogating parameters and globals to SSA variables...
End popogation
manager_25
manager

Name: manager Function: balanceOfThis
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
manager_25(IManager) := ϕ(['manager_19', 'manager_28', 'manager_30', 'manager_0', 'manager_37', 'manager_35', 'manager_24', 'manager_6', 'manager_26', 'manager_12', 'manager_39', 'manager_1', 'manager_33'])
Phi
[i]Type for manager

Name: manager Function: balanceOfThis
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
manager_25
manager_25
manager

Name: manager Function: balanceOfThis
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
_tokens_1
_tokens_1
_tokens
_tokens

Name: _tokens Function: balanceOfThis
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
manager_26
manager

Name: manager Function: balanceOfThis
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
TMP_183 = CONVERT this to address
Converting this
6
[i]Type for TMP_183

Name: TMP_183 Function: balanceOfThis
Num: 
Den: 
Address: 6
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_184(address[]) = HIGH_LEVEL_CALL, dest:manager_25(IManager), function:getTokens, arguments:['TMP_183']  
High Call: getTokens
Running querryfc
Written func info: Manager, getTokens
Retvar: ('c', [-1], [-1], 'u', 'u', 5)
([-1], [-1], 'u', 'u', 5, -1)
[i]Type for TMP_184

Name: TMP_184 Function: balanceOfThis
Num: -1
Den: -1
Address: 5
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
manager_26(IManager) := ϕ(['manager_19', 'manager_28', 'manager_30', 'manager_37', 'manager_25', 'manager_35', 'manager_24', 'manager_6', 'manager_26', 'manager_12', 'manager_39', 'manager_1', 'manager_33'])
Phi
[i]Type for manager

Name: manager Function: balanceOfThis
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
XXXX
_tokens_1(address[]) := TMP_184(address[])
asgn
init
end
Finance type key: (-1, -1)
[i]Type for _tokens

Name: _tokens Function: balanceOfThis
Num: -1
Den: -1
Address: 5
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
_tokens_1
_tokens_1
_tokens

Name: _tokens Function: balanceOfThis
Num: -1
Den: -1
Address: 5
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_1
i_1
i
i

Name: i Function: balanceOfThis
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_balance_1
_balance_1
_balance
_balance

Name: _balance Function: balanceOfThis
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_1
i_1
i
i

Name: i Function: balanceOfThis
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
_balance_1
_balance
_balance

Name: _balance Function: balanceOfThis
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_1
i
i

Name: i Function: balanceOfThis
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_balance_1(uint256) := ϕ(['_balance_2', '_balance_0'])
Phi
init
end
[i]Type for _balance

Name: _balance Function: balanceOfThis
Num: 5
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
i_1(uint8) := ϕ(['i_0', 'i_2'])
Phi
[i]Type for i

Name: i Function: balanceOfThis
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_73 -> LENGTH _tokens_1
[i]Type for REF_73

Name: REF_73 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_185(bool) = i_1 < REF_73
init
end
init
end
A: u B: u
x
lnorm: u rnorm: u
init
end
[i]Type for TMP_185

Name: TMP_185 Function: balanceOfThis
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
_tokens_1
_tokens_1
_tokens

Name: _tokens Function: balanceOfThis
Num: -1
Den: -1
Address: 5
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_1
i_1
i
i

Name: i Function: balanceOfThis
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_token_1
_token_1
_token
_token

Name: _token Function: balanceOfThis
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
REF_74(address) -> _tokens_1[i_1]
INDEX
[i]Type for REF_74

Name: _tokens Function: balanceOfThis
Num: -1
Den: -1
Address: 5
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
_token_1(address) := REF_74(address)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for _token

Name: _token Function: balanceOfThis
Num: -1
Den: -1
Address: 5
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_balance_1
_balance_1
_balance

Name: _balance Function: balanceOfThis
Num: 5
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
RETURN _balance_1
init
end
Propogating parameters and globals to SSA variables...
_balance_1
_balance_1
_balance

Name: _balance Function: balanceOfThis
Num: 5
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_token_1
_token_1
_token

Name: _token Function: balanceOfThis
Num: -1
Den: -1
Address: 5
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_balance_2
_balance_2
_balance
_balance

Name: _balance Function: balanceOfThis
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_186 = CONVERT _token_1 to IERC20
Converting _token_1

Name: _token Function: balanceOfThis
Num: -1
Den: -1
Address: 5
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
ERC20
[i]Type for TMP_186

Name: TMP_186 Function: balanceOfThis
Num: -1
Den: -1
Address: 5
Norm: u
LF: ERC20
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_187 = CONVERT this to address
Converting this
6
[i]Type for TMP_187

Name: TMP_187 Function: balanceOfThis
Num: 
Den: 
Address: 6
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_188(uint256) = HIGH_LEVEL_CALL, dest:TMP_186(IERC20), function:balanceOf, arguments:['TMP_187']  
High Call: balanceOf
Running querryfc
Written func info: ERC20, balanceOf
Handling balance function!
5
[i]Type for TMP_188

Name: TMP_188 Function: balanceOfThis
Num: 5
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_189(uint256) = INTERNAL_CALL, Vault._normalizeDecimals(address,uint256)(_token_1,TMP_188)
init
end
init
end
init
end
[i]Type for TMP_189

Name: TMP_189 Function: balanceOfThis
Num: 5
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_190(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['_balance_1', 'TMP_189'] 

Name: _balance Function: balanceOfThis
Num: 5
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_189 Function: balanceOfThis
Num: 5
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
init
end
A: u B: u
x
lnorm: u rnorm: u
init
end
[i]Type for TMP_190

Name: TMP_190 Function: balanceOfThis
Num: 5
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_balance_2(uint256) := TMP_190(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for _balance

Name: _balance Function: balanceOfThis
Num: 5
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
i_1
i_1
i
i

Name: i Function: balanceOfThis
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_2
i_2
i
i

Name: i Function: balanceOfThis
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_191(uint8) := i_1(uint8)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for TMP_191

Name: TMP_191 Function: balanceOfThis
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
i_2(uint8) = i_1 + 1

Name: i Function: balanceOfThis
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: 1 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
init
end
A: u B: 0
lnorm: u rnorm: 0
init
end
[i]Type for i

Name: i Function: balanceOfThis
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX


manager_25(IManager) := ϕ(['manager_19', 'manager_28', 'manager_30', 'manager_0', 'manager_37', 'manager_35', 'manager_24', 'manager_6', 'manager_26', 'manager_12', 'manager_39', 'manager_1', 'manager_33'])
TMP_183 = CONVERT this to address
TMP_184(address[]) = HIGH_LEVEL_CALL, dest:manager_25(IManager), function:getTokens, arguments:['TMP_183']  
manager_26(IManager) := ϕ(['manager_19', 'manager_28', 'manager_30', 'manager_37', 'manager_25', 'manager_35', 'manager_24', 'manager_6', 'manager_26', 'manager_12', 'manager_39', 'manager_1', 'manager_33'])
_tokens_1(address[]) := TMP_184(address[])
_balance_1(uint256) := ϕ(['_balance_2', '_balance_0'])
i_1(uint8) := ϕ(['i_0', 'i_2'])
REF_73 -> LENGTH _tokens_1
TMP_185(bool) = i_1 < REF_73
CONDITION TMP_185
REF_74(address) -> _tokens_1[i_1]
_token_1(address) := REF_74(address)
RETURN _balance_1
TMP_186 = CONVERT _token_1 to IERC20
TMP_187 = CONVERT this to address
TMP_188(uint256) = HIGH_LEVEL_CALL, dest:TMP_186(IERC20), function:balanceOf, arguments:['TMP_187']  
TMP_189(uint256) = INTERNAL_CALL, Vault._normalizeDecimals(address,uint256)(_token_1,TMP_188)
TMP_190(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['_balance_1', 'TMP_189'] 
_balance_2(uint256) := TMP_190(uint256)
TMP_191(uint8) := i_1(uint8)
i_2(uint8) = i_1 + 1


Propogating parameters and globals to SSA variables...
End popogation
manager_25
manager

Name: manager Function: balanceOfThis
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
manager_25(IManager) := ϕ(['manager_19', 'manager_28', 'manager_30', 'manager_0', 'manager_37', 'manager_35', 'manager_24', 'manager_6', 'manager_26', 'manager_12', 'manager_39', 'manager_1', 'manager_33'])
Phi
[i]Type for manager

Name: manager Function: balanceOfThis
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
manager_25
manager_25
manager

Name: manager Function: balanceOfThis
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
_tokens_1
_tokens_1
_tokens
_tokens

Name: _tokens Function: balanceOfThis
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
manager_26
manager

Name: manager Function: balanceOfThis
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
TMP_183 = CONVERT this to address
Converting this
6
[i]Type for TMP_183

Name: TMP_183 Function: balanceOfThis
Num: 
Den: 
Address: 6
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_184(address[]) = HIGH_LEVEL_CALL, dest:manager_25(IManager), function:getTokens, arguments:['TMP_183']  
High Call: getTokens
Running querryfc
Written func info: Manager, getTokens
Retvar: ('c', [-1], [-1], 'u', 'u', 5)
([-1], [-1], 'u', 'u', 5, -1)
[i]Type for TMP_184

Name: TMP_184 Function: balanceOfThis
Num: -1
Den: -1
Address: 5
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
manager_26(IManager) := ϕ(['manager_19', 'manager_28', 'manager_30', 'manager_37', 'manager_25', 'manager_35', 'manager_24', 'manager_6', 'manager_26', 'manager_12', 'manager_39', 'manager_1', 'manager_33'])
Phi
[i]Type for manager

Name: manager Function: balanceOfThis
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
XXXX
_tokens_1(address[]) := TMP_184(address[])
asgn
init
end
Finance type key: (-1, -1)
[i]Type for _tokens

Name: _tokens Function: balanceOfThis
Num: -1
Den: -1
Address: 5
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
_tokens_1
_tokens_1
_tokens

Name: _tokens Function: balanceOfThis
Num: -1
Den: -1
Address: 5
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_1
i_1
i
i

Name: i Function: balanceOfThis
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_balance_1
_balance_1
_balance
_balance

Name: _balance Function: balanceOfThis
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_1
i_1
i
i

Name: i Function: balanceOfThis
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
_balance_1
_balance
_balance

Name: _balance Function: balanceOfThis
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_1
i
i

Name: i Function: balanceOfThis
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_balance_1(uint256) := ϕ(['_balance_2', '_balance_0'])
Phi
init
end
[i]Type for _balance

Name: _balance Function: balanceOfThis
Num: 5
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
i_1(uint8) := ϕ(['i_0', 'i_2'])
Phi
[i]Type for i

Name: i Function: balanceOfThis
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_73 -> LENGTH _tokens_1
[i]Type for REF_73

Name: REF_73 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_185(bool) = i_1 < REF_73
init
end
init
end
A: u B: u
x
lnorm: u rnorm: u
init
end
[i]Type for TMP_185

Name: TMP_185 Function: balanceOfThis
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
_tokens_1
_tokens_1
_tokens

Name: _tokens Function: balanceOfThis
Num: -1
Den: -1
Address: 5
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_1
i_1
i
i

Name: i Function: balanceOfThis
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_token_1
_token_1
_token
_token

Name: _token Function: balanceOfThis
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
REF_74(address) -> _tokens_1[i_1]
INDEX
[i]Type for REF_74

Name: _tokens Function: balanceOfThis
Num: -1
Den: -1
Address: 5
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
_token_1(address) := REF_74(address)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for _token

Name: _token Function: balanceOfThis
Num: -1
Den: -1
Address: 5
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
_balance_1
_balance_1
_balance

Name: _balance Function: balanceOfThis
Num: 5
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
RETURN _balance_1
init
end
Propogating parameters and globals to SSA variables...
_balance_1
_balance_1
_balance

Name: _balance Function: balanceOfThis
Num: 5
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_token_1
_token_1
_token

Name: _token Function: balanceOfThis
Num: -1
Den: -1
Address: 5
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_balance_2
_balance_2
_balance
_balance

Name: _balance Function: balanceOfThis
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_186 = CONVERT _token_1 to IERC20
Converting _token_1

Name: _token Function: balanceOfThis
Num: -1
Den: -1
Address: 5
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
ERC20
[i]Type for TMP_186

Name: TMP_186 Function: balanceOfThis
Num: -1
Den: -1
Address: 5
Norm: u
LF: ERC20
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_187 = CONVERT this to address
Converting this
6
[i]Type for TMP_187

Name: TMP_187 Function: balanceOfThis
Num: 
Den: 
Address: 6
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_188(uint256) = HIGH_LEVEL_CALL, dest:TMP_186(IERC20), function:balanceOf, arguments:['TMP_187']  
High Call: balanceOf
Running querryfc
Written func info: ERC20, balanceOf
Handling balance function!
5
[i]Type for TMP_188

Name: TMP_188 Function: balanceOfThis
Num: 5
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_189(uint256) = INTERNAL_CALL, Vault._normalizeDecimals(address,uint256)(_token_1,TMP_188)
init
end
init
end
init
end
[i]Type for TMP_189

Name: TMP_189 Function: balanceOfThis
Num: 5
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_190(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['_balance_1', 'TMP_189'] 

Name: _balance Function: balanceOfThis
Num: 5
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_189 Function: balanceOfThis
Num: 5
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
init
end
A: u B: u
x
lnorm: u rnorm: u
init
end
[i]Type for TMP_190

Name: TMP_190 Function: balanceOfThis
Num: 5
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_balance_2(uint256) := TMP_190(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for _balance

Name: _balance Function: balanceOfThis
Num: 5
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
i_1
i_1
i
i

Name: i Function: balanceOfThis
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_2
i_2
i
i

Name: i Function: balanceOfThis
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_191(uint8) := i_1(uint8)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for TMP_191

Name: TMP_191 Function: balanceOfThis
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
i_2(uint8) = i_1 + 1

Name: i Function: balanceOfThis
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: 1 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
init
end
A: u B: 0
lnorm: u rnorm: 0
init
end
[i]Type for i

Name: i Function: balanceOfThis
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX



getPricePerFullShare


TMP_192(uint256) = INTERNAL_CALL, ERC20.totalSupply()()
TMP_193(bool) = TMP_192 > 0
CONDITION TMP_193
TMP_194(uint256) = INTERNAL_CALL, Vault.balance()()
TMP_195(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['TMP_194', '1000000000000000000'] 
TMP_196(uint256) = INTERNAL_CALL, ERC20.totalSupply()()
TMP_197(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_195', 'TMP_196'] 
RETURN TMP_197
TMP_198(uint256) = INTERNAL_CALL, Vault.balance()()
RETURN TMP_198


Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
TMP_192(uint256) = INTERNAL_CALL, ERC20.totalSupply()()
init
end
[i]Type for TMP_192

Name: TMP_192 Function: getPricePerFullShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_193(bool) = TMP_192 > 0
init
end
init
end
A: u B: 0
x
lnorm: u rnorm: 0
[i]Type for TMP_193

Name: TMP_193 Function: getPricePerFullShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_194(uint256) = INTERNAL_CALL, Vault.balance()()
init
end
[i]Type for TMP_194

Name: TMP_194 Function: getPricePerFullShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_195(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['TMP_194', '1000000000000000000'] 
init
end
init
end
A: u B: 18
x
lnorm: u rnorm: 18
init
end
[i]Type for TMP_195

Name: TMP_195 Function: getPricePerFullShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_196(uint256) = INTERNAL_CALL, ERC20.totalSupply()()
init
end
[i]Type for TMP_196

Name: TMP_196 Function: getPricePerFullShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_197(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_195', 'TMP_196'] 
init
end
init
end
A: 18 B: u
x
lnorm: 18 rnorm: u
init
end
[i]Type for TMP_197

Name: TMP_197 Function: getPricePerFullShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_197
init
end
Propogating parameters and globals to SSA variables...
End popogation
TMP_198(uint256) = INTERNAL_CALL, Vault.balance()()
init
end
[i]Type for TMP_198

Name: TMP_198 Function: getPricePerFullShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_198
init
end


TMP_192(uint256) = INTERNAL_CALL, ERC20.totalSupply()()
TMP_193(bool) = TMP_192 > 0
CONDITION TMP_193
TMP_194(uint256) = INTERNAL_CALL, Vault.balance()()
TMP_195(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['TMP_194', '1000000000000000000'] 
TMP_196(uint256) = INTERNAL_CALL, ERC20.totalSupply()()
TMP_197(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_195', 'TMP_196'] 
RETURN TMP_197
TMP_198(uint256) = INTERNAL_CALL, Vault.balance()()
RETURN TMP_198


Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
TMP_192(uint256) = INTERNAL_CALL, ERC20.totalSupply()()
init
end
[i]Type for TMP_192

Name: TMP_192 Function: getPricePerFullShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_193(bool) = TMP_192 > 0
init
end
init
end
A: u B: 0
x
lnorm: u rnorm: 0
[i]Type for TMP_193

Name: TMP_193 Function: getPricePerFullShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_194(uint256) = INTERNAL_CALL, Vault.balance()()
init
end
[i]Type for TMP_194

Name: TMP_194 Function: getPricePerFullShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_195(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['TMP_194', '1000000000000000000'] 
init
end
init
end
A: u B: 18
x
lnorm: u rnorm: 18
init
end
[i]Type for TMP_195

Name: TMP_195 Function: getPricePerFullShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_196(uint256) = INTERNAL_CALL, ERC20.totalSupply()()
init
end
[i]Type for TMP_196

Name: TMP_196 Function: getPricePerFullShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_197(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_195', 'TMP_196'] 
init
end
init
end
A: 18 B: u
x
lnorm: 18 rnorm: u
init
end
[i]Type for TMP_197

Name: TMP_197 Function: getPricePerFullShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_197
init
end
Propogating parameters and globals to SSA variables...
End popogation
TMP_198(uint256) = INTERNAL_CALL, Vault.balance()()
init
end
[i]Type for TMP_198

Name: TMP_198 Function: getPricePerFullShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_198
init
end



getTokens


manager_27(IManager) := ϕ(['manager_19', 'manager_28', 'manager_30', 'manager_0', 'manager_37', 'manager_35', 'manager_24', 'manager_6', 'manager_26', 'manager_12', 'manager_39', 'manager_1', 'manager_33'])
TMP_199 = CONVERT this to address
TMP_200(address[]) = HIGH_LEVEL_CALL, dest:manager_27(IManager), function:getTokens, arguments:['TMP_199']  
manager_28(IManager) := ϕ(['manager_19', 'manager_28', 'manager_30', 'manager_27', 'manager_37', 'manager_35', 'manager_24', 'manager_6', 'manager_26', 'manager_12', 'manager_39', 'manager_1', 'manager_33'])
RETURN TMP_200


Propogating parameters and globals to SSA variables...
End popogation
manager_27
manager
manager

Name: None Function: None
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
manager_27(IManager) := ϕ(['manager_19', 'manager_28', 'manager_30', 'manager_0', 'manager_37', 'manager_35', 'manager_24', 'manager_6', 'manager_26', 'manager_12', 'manager_39', 'manager_1', 'manager_33'])
Phi
[i]Type for manager

Name: manager Function: getTokens
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
manager_27
manager_27
manager

Name: manager Function: getTokens
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
End popogation
manager_28
manager
manager

Name: None Function: None
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
TMP_199 = CONVERT this to address
Converting this
6
[i]Type for TMP_199

Name: TMP_199 Function: getTokens
Num: -1
Den: -1
Address: 6
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_200(address[]) = HIGH_LEVEL_CALL, dest:manager_27(IManager), function:getTokens, arguments:['TMP_199']  
High Call: getTokens
Running querryfc
Written func info: Manager, getTokens
Retvar: ('c', [-1], [-1], 'u', 'u', 5)
([-1], [-1], 'u', 'u', 5, -1)
[i]Type for TMP_200

Name: TMP_200 Function: getTokens
Num: -1
Den: -1
Address: 5
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
manager_28(IManager) := ϕ(['manager_19', 'manager_28', 'manager_30', 'manager_27', 'manager_37', 'manager_35', 'manager_24', 'manager_6', 'manager_26', 'manager_12', 'manager_39', 'manager_1', 'manager_33'])
Phi
[i]Type for manager

Name: manager Function: getTokens
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_200
init
end


manager_27(IManager) := ϕ(['manager_19', 'manager_28', 'manager_30', 'manager_0', 'manager_37', 'manager_35', 'manager_24', 'manager_6', 'manager_26', 'manager_12', 'manager_39', 'manager_1', 'manager_33'])
TMP_199 = CONVERT this to address
TMP_200(address[]) = HIGH_LEVEL_CALL, dest:manager_27(IManager), function:getTokens, arguments:['TMP_199']  
manager_28(IManager) := ϕ(['manager_19', 'manager_28', 'manager_30', 'manager_27', 'manager_37', 'manager_35', 'manager_24', 'manager_6', 'manager_26', 'manager_12', 'manager_39', 'manager_1', 'manager_33'])
RETURN TMP_200


Propogating parameters and globals to SSA variables...
End popogation
manager_27
manager

Name: manager Function: getTokens
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
manager_27(IManager) := ϕ(['manager_19', 'manager_28', 'manager_30', 'manager_0', 'manager_37', 'manager_35', 'manager_24', 'manager_6', 'manager_26', 'manager_12', 'manager_39', 'manager_1', 'manager_33'])
Phi
[i]Type for manager

Name: manager Function: getTokens
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
manager_27
manager_27
manager

Name: manager Function: getTokens
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
End popogation
manager_28
manager

Name: manager Function: getTokens
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
TMP_199 = CONVERT this to address
Converting this
6
[i]Type for TMP_199

Name: TMP_199 Function: getTokens
Num: 
Den: 
Address: 6
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_200(address[]) = HIGH_LEVEL_CALL, dest:manager_27(IManager), function:getTokens, arguments:['TMP_199']  
High Call: getTokens
Running querryfc
Written func info: Manager, getTokens
Retvar: ('c', [-1], [-1], 'u', 'u', 5)
([-1], [-1], 'u', 'u', 5, -1)
[i]Type for TMP_200

Name: TMP_200 Function: getTokens
Num: -1
Den: -1
Address: 5
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
manager_28(IManager) := ϕ(['manager_19', 'manager_28', 'manager_30', 'manager_27', 'manager_37', 'manager_35', 'manager_24', 'manager_6', 'manager_26', 'manager_12', 'manager_39', 'manager_1', 'manager_33'])
Phi
[i]Type for manager

Name: manager Function: getTokens
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_200
init
end



withdrawFee
Finding type for _amount(uint256 ... )
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1


MAX_12(uint256) := ϕ(['MAX_0', 'MAX_9', 'MAX_11', 'MAX_13', 'MAX_3'])
manager_29(IManager) := ϕ(['manager_19', 'manager_28', 'manager_30', 'manager_0', 'manager_37', 'manager_35', 'manager_24', 'manager_6', 'manager_26', 'manager_12', 'manager_39', 'manager_1', 'manager_33'])
TMP_201(uint256) = HIGH_LEVEL_CALL, dest:manager_29(IManager), function:withdrawalProtectionFee, arguments:[]  
MAX_13(uint256) := ϕ(['MAX_9', 'MAX_11', 'MAX_12', 'MAX_13', 'MAX_3'])
manager_30(IManager) := ϕ(['manager_19', 'manager_28', 'manager_30', 'manager_37', 'manager_35', 'manager_24', 'manager_6', 'manager_26', 'manager_12', 'manager_39', 'manager_29', 'manager_1', 'manager_33'])
TMP_202(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['TMP_201', '_amount_1'] 
TMP_203(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_202', 'MAX_13'] 
RETURN TMP_203


Propogating parameters and globals to SSA variables...
End popogation
MAX_12
MAX
MAX

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
manager_29
manager
manager

Name: None Function: None
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
MAX_12(uint256) := ϕ(['MAX_0', 'MAX_9', 'MAX_11', 'MAX_13', 'MAX_3'])
Phi
[i]Type for MAX

Name: MAX Function: withdrawFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
manager_29(IManager) := ϕ(['manager_19', 'manager_28', 'manager_30', 'manager_0', 'manager_37', 'manager_35', 'manager_24', 'manager_6', 'manager_26', 'manager_12', 'manager_39', 'manager_1', 'manager_33'])
Phi
[i]Type for manager

Name: manager Function: withdrawFee
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
MAX_13
MAX_13
MAX
MAX

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_amount_1
_amount_1
_amount
_amount

Name: _amount_1 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
manager_29
manager_29
manager

Name: manager Function: withdrawFee
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
End popogation
MAX_13
MAX

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
manager_30
manager
manager

Name: None Function: None
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
TMP_201(uint256) = HIGH_LEVEL_CALL, dest:manager_29(IManager), function:withdrawalProtectionFee, arguments:[]  
High Call: withdrawalProtectionFee
Running querryfc
Written func info: Manager, withdrawalProtectionFee
Handling balance function!
-999
Finding type for hlc_0(uint256 ... )
[i]Type for TMP_201

Name: TMP_201 Function: withdrawFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
MAX_13(uint256) := ϕ(['MAX_9', 'MAX_11', 'MAX_12', 'MAX_13', 'MAX_3'])
Phi
[i]Type for MAX

Name: MAX Function: withdrawFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
manager_30(IManager) := ϕ(['manager_19', 'manager_28', 'manager_30', 'manager_37', 'manager_35', 'manager_24', 'manager_6', 'manager_26', 'manager_12', 'manager_39', 'manager_29', 'manager_1', 'manager_33'])
Phi
[i]Type for manager

Name: manager Function: withdrawFee
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_202(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['TMP_201', '_amount_1'] 
init
end
init
end
A: u B: u
x
lnorm: u rnorm: u
init
end
[i]Type for TMP_202

Name: TMP_202 Function: withdrawFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_203(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_202', 'MAX_13'] 
init
end
init
end
A: u B: u
x
lnorm: u rnorm: u
init
end
[i]Type for TMP_203

Name: TMP_203 Function: withdrawFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_203
init
end


MAX_12(uint256) := ϕ(['MAX_0', 'MAX_9', 'MAX_11', 'MAX_13', 'MAX_3'])
manager_29(IManager) := ϕ(['manager_19', 'manager_28', 'manager_30', 'manager_0', 'manager_37', 'manager_35', 'manager_24', 'manager_6', 'manager_26', 'manager_12', 'manager_39', 'manager_1', 'manager_33'])
TMP_201(uint256) = HIGH_LEVEL_CALL, dest:manager_29(IManager), function:withdrawalProtectionFee, arguments:[]  
MAX_13(uint256) := ϕ(['MAX_9', 'MAX_11', 'MAX_12', 'MAX_13', 'MAX_3'])
manager_30(IManager) := ϕ(['manager_19', 'manager_28', 'manager_30', 'manager_37', 'manager_35', 'manager_24', 'manager_6', 'manager_26', 'manager_12', 'manager_39', 'manager_29', 'manager_1', 'manager_33'])
TMP_202(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['TMP_201', '_amount_1'] 
TMP_203(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_202', 'MAX_13'] 
RETURN TMP_203


Propogating parameters and globals to SSA variables...
End popogation
MAX_12
MAX

Name: MAX Function: withdrawFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
manager_29
manager

Name: manager Function: withdrawFee
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
MAX_12(uint256) := ϕ(['MAX_0', 'MAX_9', 'MAX_11', 'MAX_13', 'MAX_3'])
Phi
[i]Type for MAX

Name: MAX Function: withdrawFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
manager_29(IManager) := ϕ(['manager_19', 'manager_28', 'manager_30', 'manager_0', 'manager_37', 'manager_35', 'manager_24', 'manager_6', 'manager_26', 'manager_12', 'manager_39', 'manager_1', 'manager_33'])
Phi
[i]Type for manager

Name: manager Function: withdrawFee
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
MAX_13
MAX_13
MAX

Name: MAX Function: withdrawFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_amount_1
_amount_1
_amount
_amount

Name: _amount_1 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
manager_29
manager_29
manager

Name: manager Function: withdrawFee
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
End popogation
MAX_13
MAX

Name: MAX Function: withdrawFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
manager_30
manager

Name: manager Function: withdrawFee
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
TMP_201(uint256) = HIGH_LEVEL_CALL, dest:manager_29(IManager), function:withdrawalProtectionFee, arguments:[]  
High Call: withdrawalProtectionFee
Running querryfc
Written func info: Manager, withdrawalProtectionFee
Handling balance function!
-999
Finding type for hlc_1(uint256 ... )
[i]Type for TMP_201

Name: TMP_201 Function: withdrawFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
MAX_13(uint256) := ϕ(['MAX_9', 'MAX_11', 'MAX_12', 'MAX_13', 'MAX_3'])
Phi
[i]Type for MAX

Name: MAX Function: withdrawFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
manager_30(IManager) := ϕ(['manager_19', 'manager_28', 'manager_30', 'manager_37', 'manager_35', 'manager_24', 'manager_6', 'manager_26', 'manager_12', 'manager_39', 'manager_29', 'manager_1', 'manager_33'])
Phi
[i]Type for manager

Name: manager Function: withdrawFee
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_202(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['TMP_201', '_amount_1'] 
init
end
init
end
A: u B: u
x
lnorm: u rnorm: u
init
end
[i]Type for TMP_202

Name: TMP_202 Function: withdrawFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_203(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_202', 'MAX_13'] 
init
end
init
end
A: u B: u
x
lnorm: u rnorm: u
init
end
[i]Type for TMP_203

Name: TMP_203 Function: withdrawFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_203
init
end



_normalizeDecimals



slitherConstructorConstantVariables
Address: 1, Label: Manager:strategist
Address: 2, Label: Manager:controller
Address: 3, Label: Controller:converter
Address: 4, Label: Manager:vaults
Address: 5, Label: This:token
Address: -999, Label: constructor:_manager
Address: -998, Label: setGauge:_gauge
Address: -997, Label: swap:_token0
Address: -996, Label: swap:_token1
Address: -995, Label: earn:_token
Address: -994, Label: earn:_strategy
Address: -993, Label: deposit:_token
Address: -992, Label: depositMultiple:_tokens
Address: -991, Label: withdraw:_output
Address: -990, Label: withdrawAll:_output
Address: -989, Label: available:_token
Address: 6, Label: swap:TMP_76
Address: 6, Label: global:this
Head Addr: 1
    Norm: *
    Set: {1}
    Fin: NULL
Head Addr: 2
    Norm: *
    Set: {2}
    Fin: NULL
Head Addr: 3
    Norm: *
    Set: {3}
    Fin: NULL
Head Addr: 4
    Norm: *
    Set: {4}
    Fin: NULL
Head Addr: 5
    Norm: 6
    Set: {5}
    Fin: NULL
Head Addr: -999
    Norm: 0
    Set: {-999}
    Fin: NULL
Head Addr: -998
    Norm: 0
    Set: {-998}
    Fin: NULL
Head Addr: -997
    Norm: 6
    Set: {-997}
    Fin: NULL
Head Addr: -996
    Norm: 18
    Set: {-996}
    Fin: NULL
Head Addr: -995
    Norm: 6
    Set: {-995}
    Fin: NULL
Head Addr: -994
    Norm: 0
    Set: {-994}
    Fin: NULL
Head Addr: -993
    Norm: 6
    Set: {-993}
    Fin: NULL
Head Addr: -992
    Norm: 6
    Set: {-992}
    Fin: NULL
Head Addr: -991
    Norm: 6
    Set: {-991}
    Fin: NULL
Head Addr: -990
    Norm: 6
    Set: {-990}
    Fin: NULL
Head Addr: -989
    Norm: 6
    Set: {-989}
    Fin: NULL
Head Addr: 6
    Norm: *
    Set: {6}
    Fin: NULL
Function count: 44
Executing Group 7
[*] Tested 3 warnings for yAxis
Group 7 complete
Testing complete
